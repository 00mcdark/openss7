## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
## =============================================================================
## 
# @(#) File: am/init.am  Version: @VERSION@  Date: @PACKAGE_DATE@
##
## -----------------------------------------------------------------------------
##
## Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
## Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
## Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU Affero General Public License as published by the Free
## Software Foundation; version 3 of the License.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
## details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>, or
## write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
## 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## =============================================================================

AM_INSTALLCHECK_STD_OPTIONS_EXEMPT += $(dist_initrd_SCRIPTS)

if PKG_BUILD_INDEP
## PKG_BUILD_INDEP
if PKG_BUILD_USER
## PKG_BUILD_USER

install-initscripts: $(dist_initrd_SCRIPTS)
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_INSTALL)
	@list='$(dist_initrd_SCRIPTS)' ; for p in $$list ; do \
		f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
		$(ECHO) "$(SHELL) $(top_srcdir)/scripts/install_initd -v $(DESTDIR)$(initrddir)/$$f" ; \
		$(SHELL) $(top_srcdir)/scripts/install_initd -v $(DESTDIR)$(initrddir)/$$f || :; \
	done

post-initscripts:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@if test -z '$(DESTDIR)$(rootdir)' -a \( -f $(DESTDIR)$(initrddir)/rc -o -f $(DESTDIR)$(initrddir)/../rc \) ; then \
		if test ! -r /proc/1/comm -o "`cat /proc/1/comm 2>/dev/null`" != 'systemd'; then \
			if runlevel >/dev/null 2>&1 ; then \
				list='$(dist_initrd_SCRIPTS)' ; for p in $$list ; do \
					f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
					flist="$$flist $$f" ; \
					rlist="$$f $$rlist" ; \
				done ; \
				r=`runlevel | sed 's|.*[[:space:]]||'` ; \
				for d in $$r S ; do \
					for i in $$rlist ; do \
						if test -L $(initrddir)/../rc$${d}.d/S[0-9][0-9]$$i \
							-o -L $(initrddir)/rc$${d}.d/S[0-9][0-9]$$i ; then \
							$(ECHO) "$(SHELL) $(initrddir)/$$i stop" ; \
							$(SHELL) $(initrddir)/$$i stop || : ; \
						fi ; \
					done ; \
				done ; \
				for d in S $$r ; do \
					for i in $$flist ; do \
						if test -L $(initrddir)/../rc$${d}.d/S[0-9][0-9]$$i \
							-o -L $(initrddir)/rc$${d}.d/S[0-9][0-9]$$i ; then \
							$(ECHO) "$(SHELL) $(initrddir)/$$i start" ; \
							$(SHELL) $(initrddir)/$$i start || : ; \
						fi ; \
					done ; \
				done ; \
			fi ; \
		fi ; \
	fi

preun-initscripts:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@if test -z '$(DESTDIR)$(rootdir)' -a \( -f $(DESTDIR)$(initrddir)/rc -o -f $(DESTDIR)$(initrddir)/../rc \) ; then \
		if test ! -r /proc/1/comm -o "`cat /proc/1/comm 2>/dev/null`" != 'systemd'; then \
			if runlevel >/dev/null 2>&1 ; then \
				list='$(dist_initrd_SCRIPTS)' ; for p in $$list ; do \
					rlist="$$p $$rlist" ; \
				done ; \
				r=`runlevel | sed 's|.*[[:space:]]||'` ; \
				for d in $$r S ; do \
					for p in $$rlist ; do \
						f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
						if test -L $(initrddir)/../rc$${d}.d/S[0-9][0-9]$$f \
							-o -L $(initrddir)/rc$${d}.d/S[0-9][0-9]$$f ; then \
							$(ECHO) "$(SHELL) $(srcdir)/$$p stop" ; \
							$(SHELL) $(srcdir)/$$p stop || : ; \
						fi ; \
					done ; \
				done ; \
			fi ; \
		fi ; \
	fi

uninstall-initscripts:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_UNINSTALL)
	@list='$(dist_initrd_SCRIPTS)' ; for p in $$list ; do \
		f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
		$(ECHO) "$(SHELL) $(top_srcdir)/scripts/remove_initd -v $(DESTDIR)$(initrddir)/$$f" ; \
		$(SHELL) $(top_srcdir)/scripts/remove_initd -v $(DESTDIR)$(initrddir)/$$f || :; \
	done

dist_noinst_SCRIPTS	+= $(top_srcdir)/scripts/install_initd $(top_srcdir)/scripts/remove_initd

install-systemd: $(dist_systemdsys_DATA)
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_INSTALL)
	@d="$(DESTDIR)$(systemdsysdir)" ; \
	list='$(dist_systemdsys_DATA)' ; for p in $$list ; do \
		f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
		if grep '^[[]Install[]]' $$d/$$f >/dev/null 2>&1 ; then \
			r=(`cat $$d/$$f | sed -n 's,^RequiredBy=,,p'`) ; \
			for s in $${r[@]}; do \
				rd="$$d/$$s.requires" ; \
				test -d "$$rd" || $(MKDIR_P) -- "$$rd" ; \
				$(ECHO) "$(LN_S) -f -- $(systemdsysdir)/$$f $$rd/" ; \
				$(LN_S) -f -- "$(systemdsysdir)/$$f" "$$rd/" ; \
			done ; \
			w=(`cat $$d/$$f | sed -n 's,^WantedBy=,,p'`) ; \
			for s in $${w[@]}; do \
				wd="$$d/$$s.wants" ; \
				test -d "$$wd" || $(MKDIR_P) -- "$$wd" ; \
				$(ECHO) "$(LN_S) -f -- $(systemdsysdir)/$$f $$wd/" ; \
				$(LN_S) -f -- "$(systemdsysdir)/$$f" "$$wd/" ; \
			done ; \
		else \
			$(ECHO) "WARNING: cannot find [Install] section in $$d/$$f" >&2; \
		fi ; \
	done

post-systemd:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@if test -z '$(DESTDIR)$(rootdir)' -a -f $(DESTDIR)$(systemddir)/systemd ; then \
		if test -r /proc/1/comm -a "`cat /proc/1/comm 2>/dev/null`" = 'systemd'; then \
			d="$(DESTDIR)$(systemdsysdir)" ; flist= ; rlist= ; \
			list='$(dist_systemdsys_DATA)' ; for p in $$list ; do \
				f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
				case "$$f" in \
				(*-shutdown.target) \
					rlist="$$f $$rlist" ;; \
				(*.target) \
					flist="$$flist $$f" ;; \
				esac ; \
			done ; \
			$(ECHO) "$(SYSTEMCTL) --system daemon-reload" ; \
			$(SYSTEMCTL) --system daemon-reload ; \
			for f in $$rlist ; do \
				if test -f "$$d/$$f" ; then \
					$(ECHO) "$(SYSTEMCTL) start $$f" ; \
					$(SYSTEMCTL) start $$f || : ; \
				fi ; \
			done ; \
			for f in $$flist ; do \
				if test -f "$$d/$$f" ; then \
					$(ECHO) "$(SYSTEMCTL) start $$f" ; \
					$(SYSTEMCTL) start $$f || : ; \
				fi ; \
			done ; \
		else \
			$(ECHO) "Not running systemd!" ; \
		fi ; \
	fi

preun-systemd:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@if test -z '$(DESTDIR)$(rootdir)' -a -f $(DESTDIR)$(systemddir)/systemd ; then \
		if test -r /proc/1/comm -a "`cat /proc/1/comm 2>/dev/null`" = 'systemd'; then \
			d="$(DESTDIR)$(systemdsysdir)" ; flist= ; rlist= ; \
			list='$(dist_systemdsys_DATA)' ; for p in $$list ; do \
				f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
				case "$$f" in \
				(*-shutdown.target) \
					rlist="$$f $$rlist" ;; \
				(*.target) \
					flist="$$flist $$f" ;; \
				esac ; \
			done ; \
			for f in $$rlist ; do \
				if test -f "$$d/$$f" ; then \
					$(ECHO) "$(SYSTEMCTL) start $$f" ; \
					$(SYSTEMCTL) start $$f || : ; \
				fi ; \
			done ; \
		else \
			$(ECHO) "Not running systemd!" ; \
		fi ; \
	fi

uninstall-systemd:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_UNINSTALL)
	@d="$(DESTDIR)$(systemdsysdir)" ; \
	list='$(dist_systemdsys_DATA)' ; for p in $$list ; do \
		f=`$(ECHO) $$p | sed 's|^.*/||'` ; \
		for s in $$d/*.requires/$$f $$d/*.wants/$$f; do \
			if test -L "$$s" ; then \
				$(ECHO) "rm -f -- $$s" ; \
				rm -f -- "$$s" ; \
				dd=`echo "$$s" | sed 's,[^/]*$$,,'` ; \
				rmdir -- "$$dd" 2>/dev/null || : ; \
			fi ; \
		done ; \
	done

if INSTALL_INITSCRIPTS
## INSTALL_INITSCRIPTS

if INSTALL_SYSVINIT
## INSTALL_SYSVINIT

INSTALL_DATA_HOOK	+= install-initscripts

POST_INSTALL_AM		+= post-initscripts

UNINSTALL_LOCAL		+= uninstall-initscripts

PRE_UNINSTALL_MA	+= preun-initscripts

## INSTALL_SYSVINIT
endif

if INSTALL_SYSTEMD
## INSTALL_SYSTEMD

INSTALL_DATA_HOOK	+= install-systemd

POST_INSTALL_AM		+= post-systemd

UNINSTALL_LOCAL		+= uninstall-systemd

PRE_UNINSTALL_MA	+= preun-systemd

## INSTALL_SYSTEMD
endif

## INSTALL_INITSCRIPTS
endif

## PKG_BUILD_USER
endif
## PKG_BUILD_INDEP
endif

## =============================================================================
## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
