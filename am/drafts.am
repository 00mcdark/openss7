## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
## =============================================================================
## 
# @(#) $RCSfile: drafts.am,v $ $Name:  $($Revision: 1.1.2.2 $) $Date: 2009-06-29 07:35:35 $
##
## -----------------------------------------------------------------------------
##
## Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
## Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
## Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU Affero General Public License as published by the Free
## Software Foundation; version 3 of the License.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
## details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>, or
## write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
## 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## -----------------------------------------------------------------------------
##
## Last Modified $Date: 2009-06-29 07:35:35 $ by $Author: brian $
##
## =============================================================================

sinclude $(DEPDIR)/drafts.Pd

$(DEPDIR)/drafts.Pd: Makefile $(ME_MES)
	$(AM_V_at)test -d $(DEPDIR) || $(MKDIR_P) $(DEPDIR)
	$(AM_V_GEN)list="$(ME_MES)" ; for f in $$list ; do \
		if test -r $$f; then d=; else d=$(srcdir)/; fi; \
		echo -n "$$f" | sed -r 's,(.*)\.me,\1.txt \1.dvi \1.ps \1.html: \\\n,' ; \
		( echo "$$f" ; cat $$d$$f | sed -n -r 's,^\.so[[:space:]][[:space:]]*(.*),\1,p' ; \
		  echo "idrefs" ) | \
		sed '$$!N;$$!N;$$!N;$$!N;s,\n, ,g;s,^,\t,;$$!s,$$, \\,;$$s,$$,\n,' ; \
		echo -n "$$f" | sed -r 's,(.*)\.me,\1.pdf: \1.ps\n\n,' ; \
		cat $$d$$f | sed -n -r 's,^\.so[[:space:]][[:space:]]*(.*)\.pic,\1.pic: \1.fig\n\n\1.gif: \1.fig\n\n\1.eps: \1.fig\n\n,p' ; \
	done > $(DEPDIR)/drafts.Td || { rm -f -- drafts.Td ; exit 1 ; } ; \
	mv -f $(DEPDIR)/drafts.Td $@

DISTCLEANFILES += $(DEPDIR)/drafts.Td $(DEPDIR)/drafts.Pd

##
# Little trick.  Although we cannot change the rules that automake places in the
# makefiles, we can change what is in the variables.  So, when we cannot build a
# thing, we null out the variable.
##
TXTS  = @WITH_DRAFTS_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@$(ME_MES:.me=.txt)
HTMLS = @WITH_DRAFTS_TRUE@@WITH_DRAFTS_HTML_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@$(ME_MES:.me=.html)
DVIS  = @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@$(ME_MES:.me=.dvi)
PSS   = @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@$(ME_MES:.me=.ps)
PDFS  = @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@$(ME_MES:.me=.pdf)

PICS  = $(FIG_FIGS:.fig=.pic)
GIFS  = $(FIG_FIGS:.fig=.gif)
EPSS  = $(FIG_FIGS:.fig=.eps)

ME_DEPS 	= fixup idrefs draft.me draft2.me draft3.me draft4.me

.me.txt:  ; $(AM_V_GEN)cat $< | $(SOELIM) -I$(srcdir) | (cd $(srcdir) ; $(REFER)) | nroff -s -p -e -t -me -Tascii | $(srcdir)/fixup > $@
.me.dvi:  ; $(AM_V_GEN)cat $< | $(SOELIM) -I$(srcdir) | (cd $(srcdir) ; $(REFER)) | groff -s -p -e -t -me -Tdvi  > $@ 2>/dev/null
.me.ps:   ; $(AM_V_GEN)cat $< | $(SOELIM) -I$(srcdir) | (cd $(srcdir) ; $(REFER)) | groff -s -p -e -t -me -Tps   > $@ 2>/dev/null
.me.html: ; $(AM_V_GEN)cat $< | $(SOELIM) -I$(srcdir) | (cd $(srcdir) ; $(REFER)) | groff -s -p -e -t -me -Thtml > $@ 2>/dev/null

.ps.pdf:  ; $(AM_V_GEN)$(PS2PDF) $< $@
## We don't want to make PDFS with dvidpdf, but with ps2pdf instead.
##.dvi.pdf: ; $(AM_V_GEN)$(DVIPDF) $< $@

MY_SUFFIXES	+= .me .txt .dvi .ps .pdf .html

.fig.pic: ; $(AM_V_GEN)$(FIG2DEV) -L pic -s 10 -p allps $< $@
.fig.gif: ; $(AM_V_GEN)$(FIG2DEV) -L gif $< $@
.fig.eps: ; $(AM_V_GEN)$(FIG2DEV) -L ps -p dummy $< $@

## $(PICS): %.pic: %.fig
## $(GIFS): %.gif: %.fig
## $(EPSS): %.eps: %.fig

MY_SUFFIXES	+= .fig .pic .gif .eps

txt-am: txt-local

MY_PHONY	+= txt-local

txt-local:  @WITH_DRAFTS_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ $(TXTS)
html-local: @WITH_DRAFTS_TRUE@@WITH_DRAFTS_HTML_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ $(HTMLS)
dvi-local:  @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ $(DVIS)
ps-local:   @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ $(PSS)
pdf-local:  @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ $(PDFS)

##
# Because we do not distribute dvis, pss, or htmls, we need to know how to
# make them: especially dvis as they are required for the distcheck target.
##
## $(TXTS)	: %.txt  : %.me $(ME_DEPS)
## $(DVIS)	: %.dvi	 : %.me $(ME_DEPS)
## $(PSS)	: %.ps   : %.me $(ME_DEPS)
## $(PDFS)	: %.pdf  : %.me $(ME_DEPS)
## $(HTMLS)	: %.html : %.me $(ME_DEPS)

EXTRA_DIST	+= $(ME_MES) $(FIG_FIGS) $(ME_DEPS)
if DISTRIBUTE_DOCS
## Don't attempt to distribute what we can't build.
if WITH_DRAFTS
EXTRA_DIST	+= $(TXTS)
if WITH_DRAFTS_PRINT
EXTRA_DIST	+= $(DVIS)
EXTRA_DIST	+= $(PSS)
EXTRA_DIST	+= $(PDFS)
endif
if WITH_DRAFTS_HTML
EXTRA_DIST	+= $(HTMLS)
endif
endif
endif

clean-txt:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(TXTS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-txt

clean-dvi:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(DVIS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-dvi

clean-ps:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(PSS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-ps

clean-pdf:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(PDFS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-pdf

clean-pic:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(PICS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-pic

clean-gif:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(GIFS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-gif

clean-eps:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@list='$(EPSS)' ; $(am__list_remove)

CLEAN_LOCAL	+= clean-eps

install-dvi-drafts: $(DVIS)
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_INSTALL)
	test -z "$(dvidir)" || $(MKDIR_P) "$(DESTDIR)$(dvidir)"
	@list='$(DVIS)'; for p in $$list; do \
		if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
		f=`echo $$p | sed 's,.*/,,'`; \
		$(ECHO) " $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(dvidir)/$$f\""; \
		$(INSTALL_DATA) "$$d$$p" "$(DESTDIR)$(dvidir)/$$f"; \
	done

MY_PHONY	+= install-dvi-drafts

install-dvi-local: @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ install-dvi-drafts

install-ps-drafts: $(PSS)
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_INSTALL)
	test -z "$(psdir)" || $(MKDIR_P) "$(DESTDIR)$(psdir)"
	@list='$(PSS)'; for p in $$list; do \
		if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
		f=`echo $$p | sed 's,.*/,,'`; \
		$(ECHO) " $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(psdir)/$$f\""; \
		$(INSTALL_DATA) "$$d$$p" "$(DESTDIR)$(psdir)/$$f"; \
	done

MY_PHONY	+= install-ps-drafts

install-ps-local: @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ install-ps-drafts

install-pdf-drafts: $(PDFS)
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_INSTALL)
	test -z "$(pdfdir)" || $(MKDIR_P) "$(DESTDIR)$(pdfdir)"
	@list='$(PDFS)' ; for p in $$list; do \
		if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
		f=`echo $$p | sed 's,.*/,,'`; \
		$(ECHO) " $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(pdfdir)/$$f\""; \
		$(INSTALL_DATA) "$$d$$p" "$(DESTDIR)$(pdfdir)/$$f"; \
	done

MY_PHONY	+= install-pdf-drafts

install-pdf-local: @WITH_DRAFTS_TRUE@@WITH_DRAFTS_PRINT_TRUE@@DEVELOPMENT_TRUE@@DOCUMENTATION_TRUE@ install-pdf-drafts

uninstall-dvi: uninstall-dvi-drafts

uninstall-dvi-am:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_UNINSTALL)
	@list='$(DVIS)'; $(am__echo_list) | sed 's,.*/,,;s,^,$(DESTDIR)$(dvidir)/,' | $(am__base_remove)

uninstall-ps: uninstall-ps-am

uninstall-ps-am:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_UNINSTALL)
	@list='$(PSS)'; $(am__echo_list) | sed 's,.*/,,;s,^,$(DESTDIR)$(psdir)/,' | $(am__base_remove)

uninstall-pdf: uninstall-pdf-am

uninstall-pdf-am:
	@$(ECHO_V) "D: Making $@ in `pwd`"
	@$(NORMAL_UNINSTALL)
	@list='$(PDFS)'; $(am__echo_list) | sed 's,.*/,,;s,^,$(DESTDIR)$(pdfdir)/,' | $(am__base_remove)

## =============================================================================
##
## $Log: drafts.am,v $
## Revision 1.1.2.2  2009-06-29 07:35:35  brian
## - improvements to build process
##
## Revision 1.1.2.1  2009-06-21 10:26:00  brian
## - added files to new distro
##
## =============================================================================
## vim: ft=automake comments=b\:#,b\:##,b\:#\! formatoptions+=tcqlor
