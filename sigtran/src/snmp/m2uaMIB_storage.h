#ifndef __LOCAL_M2UAMIB_H__
#define __LOCAL_M2UAMIB_H__
/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct m2uaMIB_data {
	uint m2uaMIB_request;
	uint32_t m2uaAsNextIndex;
	uint32_t m2uaIfNextIndex;
	uint32_t m2uaAspNextIndex;
	uint32_t m2uaSgNextIndex;
};
struct m2uaAsTable_data {
	uint m2uaAsTable_request;
	uint m2uaAsTable_refs;
	uint32_t m2uaAsIndex;
	uint8_t *m2uaAsName;
	int m2uaAsNameLen;
	int32_t m2uaAsAdministrativeState;
	int32_t m2uaAsOperationalState;
	uint8_t *m2uaAsProceduralStatus;
	int m2uaAsProceduralStatusLen;
	int32_t m2uaASUsageState;
	int32_t m2uaAsStatus;
};
struct m2uaIfTable_data {
	uint m2uaIfTable_request;
	uint m2uaIfTable_refs;
	uint32_t m2uaIfIndex;
	uint8_t *m2uaIfName;
	int m2uaIfNameLen;
	uint32_t m2uaIfAsIndex;
	int32_t m2uaIfIdNum;
	uint8_t *m2uaIfIdName;
	int m2uaIfIdNameLen;
	int32_t m2uaIfAdministrativeState;
	int32_t m2uaIfOperationalState;
	uint8_t *m2uaIfProceduralStatus;
	int m2uaIfProceduralStatusLen;
	int32_t m2uaIfUsageState;
	oid *m2uaIfEquipment;
	int m2uaIfEquipmentLen;
	int32_t m2uaIfMaxSifSize;
	int32_t m2uaIfTransmissionRate;
	int32_t m2uaIfCic;
	int32_t m2uaIfRowStatus;
};
struct m2uaAsIfTable_data {
	uint m2uaAsIfTable_request;
	uint m2uaAsIfTable_refs;
	uint32_t m2uaIfIndex;
};
struct m2uaAspTable_data {
	uint m2uaAspTable_request;
	uint m2uaAspTable_refs;
	uint32_t m2uaAspIndex;
	uint8_t *m2uaAspName;
	int m2uaAspNameLen;
	uint32_t m2uaSgIndex;
	int32_t m2uaAspAdministrativeState;
	int32_t m2uaAspOperationalState;
	int32_t m2uaAspUsageState;
	uint8_t *m2uaAspProceduralStatus;
	int m2uaAspProceduralStatusLen;
	int32_t m2uaAspState;
	int32_t m2uaAspRowStatus;
};
struct m2uaAspSgTable_data {
	uint m2uaAspSgTable_request;
	uint m2uaAspSgTable_refs;
	uint32_t m2uaAspIndex;
	uint32_t m2uaSgIndex;
	uint32_t m2uaAspSgAspId;
	int32_t m2uaAspSgAspPort;
	int32_t m2uaAspSgAspState;
	int32_t m2uaAspSgAdministrativeState;
};
struct m2uaSgTable_data {
	uint m2uaSgTable_request;
	uint m2uaSgTable_refs;
	uint32_t m2uaSgIndex;
	uint8_t *m2uaSgName;
	int m2uaSgNameLen;
	int32_t m2uaSgRowStatus;
};
struct m2uaSgAspTable_data {
	uint m2uaSgAspTable_request;
	uint m2uaSgAspTable_refs;
	uint32_t m2uaSgIndex;
	uint32_t m2uaAspIndex;
	uint32_t m2uaSgAspId;
	int32_t m2uaSgAspPort;
	int32_t m2uaSgAspState;
	int32_t m2uaSgAspAdministrativeState;
	int32_t m2uaSgAspOperationalState;
};
struct m2uaSgAspAsTable_data {
	uint m2uaSgAspAsTable_request;
	uint m2uaSgAspAsTable_refs;
	uint32_t m2uaSgIndex;
	uint32_t m2uaAspIndex;
	uint32_t m2uaAsIndex;
	int32_t m2uaSgAspAsRegistrationRequired;
	int32_t m2uaSgAspAsState;
	int32_t m2uaSgAspAsAdministrativeState;
	int32_t m2uaSgAspAsOperationalState;
};
struct m2uaSgAsTable_data {
	uint m2uaSgAsTable_request;
	uint m2uaSgAsTable_refs;
	uint32_t m2uaSgIndex;
	uint32_t m2uaAsIndex;
	oid *m2uaSgAsTrafficMode;
	int m2uaSgAsTrafficModeLen;
	int32_t m2uaSgAsState;
	int32_t m2uaSgAsAdministrativeState;
	int32_t m2uaSgAsOperationalState;
	int32_t m2uaSgAsRowStatus;
};

/* storage declarations */
extern struct m2uaMIB_data *m2uaMIBStorage;
extern struct header_complex_index *m2uaAsTableStorage;
extern struct header_complex_index *m2uaIfTableStorage;
extern struct header_complex_index *m2uaAsIfTableStorage;
extern struct header_complex_index *m2uaAspTableStorage;
extern struct header_complex_index *m2uaAspSgTableStorage;
extern struct header_complex_index *m2uaSgTableStorage;
extern struct header_complex_index *m2uaSgAspTableStorage;
extern struct header_complex_index *m2uaSgAspAsTableStorage;
extern struct header_complex_index *m2uaSgAsTableStorage;

/* enum definitions from the covered mib sections */

#define M2UAASADMINISTRATIVESTATE_LOCKED         0
#define M2UAASADMINISTRATIVESTATE_UNLOCKED       1
#define M2UAASADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define M2UAASOPERATIONALSTATE_DISABLED          0
#define M2UAASOPERATIONALSTATE_ENABLED           1

#define M2UAASPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define M2UAASPROCEDURALSTATUS_NOTINITIALIZED    1
#define M2UAASPROCEDURALSTATUS_INITIALIZING      2
#define M2UAASPROCEDURALSTATUS_REPORTING         3
#define M2UAASPROCEDURALSTATUS_TERMINATING       4

#define M2UAASUSAGESTATE_IDLE                    0
#define M2UAASUSAGESTATE_ACTIVE                  1
#define M2UAASUSAGESTATE_BUSY                    2

#define M2UAIFADMINISTRATIVESTATE_LOCKED         0
#define M2UAIFADMINISTRATIVESTATE_UNLOCKED       1
#define M2UAIFADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define M2UAIFOPERATIONALSTATE_DISABLED          0
#define M2UAIFOPERATIONALSTATE_ENABLED           1

#define M2UAIFPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define M2UAIFPROCEDURALSTATUS_NOTINITIALIZED    1
#define M2UAIFPROCEDURALSTATUS_INITIALIZING      2
#define M2UAIFPROCEDURALSTATUS_REPORTING         3
#define M2UAIFPROCEDURALSTATUS_TERMINATING       4

#define M2UAIFUSAGESTATE_IDLE                    0
#define M2UAIFUSAGESTATE_ACTIVE                  1
#define M2UAIFUSAGESTATE_BUSY                    2

#define M2UAIFMAXSIFSIZE_LSL                     0
#define M2UAIFMAXSIFSIZE_HSL                     1
#define M2UAIFMAXSIFSIZE_ATM                     2

#define M2UAIFTRANSMISSIONRATE_UNKNOWN           0
#define M2UAIFTRANSMISSIONRATE_MODEM             1
#define M2UAIFTRANSMISSIONRATE_DS0A              2
#define M2UAIFTRANSMISSIONRATE_DS0               3
#define M2UAIFTRANSMISSIONRATE_T1J1              4
#define M2UAIFTRANSMISSIONRATE_E1                5
#define M2UAIFTRANSMISSIONRATE_ATM               6

#define M2UAASPADMINISTRATIVESTATE_LOCKED        0
#define M2UAASPADMINISTRATIVESTATE_UNLOCKED      1
#define M2UAASPADMINISTRATIVESTATE_SHUTTINGDOWN  2

#define M2UAASPOPERATIONALSTATE_DISABLED         0
#define M2UAASPOPERATIONALSTATE_ENABLED          1

#define M2UAASPUSAGESTATE_IDLE                   0
#define M2UAASPUSAGESTATE_ACTIVE                 1
#define M2UAASPUSAGESTATE_BUSY                   2

#define M2UAASPPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define M2UAASPPROCEDURALSTATUS_NOTINITIALIZED   1
#define M2UAASPPROCEDURALSTATUS_INITIALIZING     2
#define M2UAASPPROCEDURALSTATUS_REPORTING        3
#define M2UAASPPROCEDURALSTATUS_TERMINATING      4

#define M2UAASPSTATE_ASPDOWN                     0
#define M2UAASPSTATE_ASPUP                       1

#define M2UAASPSGASPSTATE_DOWN                   1
#define M2UAASPSGASPSTATE_INITIALIZING           2
#define M2UAASPSGASPSTATE_TERMINATING            3
#define M2UAASPSGASPSTATE_UP                     4

#define M2UAASPSGADMINISTRATIVESTATE_LOCKED      0
#define M2UAASPSGADMINISTRATIVESTATE_UNLOCKED    1
#define M2UAASPSGADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define M2UASGASPSTATE_DOWN                      1
#define M2UASGASPSTATE_INITIALIZING              2
#define M2UASGASPSTATE_TERMINATING               3
#define M2UASGASPSTATE_UP                        4

#define M2UASGASPADMINISTRATIVESTATE_LOCKED      0
#define M2UASGASPADMINISTRATIVESTATE_UNLOCKED    1
#define M2UASGASPADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define M2UASGASPOPERATIONALSTATE_DISABLED       0
#define M2UASGASPOPERATIONALSTATE_ENABLED        1

#define M2UASGASPASREGISTRATIONREQUIRED_UNKNOWN  1
#define M2UASGASPASREGISTRATIONREQUIRED_FORBIDDEN 2
#define M2UASGASPASREGISTRATIONREQUIRED_PERMITTED 3
#define M2UASGASPASREGISTRATIONREQUIRED_REQUIRED 4

#define M2UASGASPASSTATE_DOWN                    1
#define M2UASGASPASSTATE_INITIALIZING            2
#define M2UASGASPASSTATE_TERMINATING             3
#define M2UASGASPASSTATE_INACTIVE                4
#define M2UASGASPASSTATE_ACTIVATING              5
#define M2UASGASPASSTATE_DEACTIVATING            6
#define M2UASGASPASSTATE_ACTIVE                  7

#define M2UASGASPASADMINISTRATIVESTATE_LOCKED    0
#define M2UASGASPASADMINISTRATIVESTATE_UNLOCKED  1
#define M2UASGASPASADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define M2UASGASPASOPERATIONALSTATE_DISABLED     0
#define M2UASGASPASOPERATIONALSTATE_ENABLED      1

#define M2UASGASSTATE_DOWN                       1
#define M2UASGASSTATE_INITIALIZING               2
#define M2UASGASSTATE_TERMINATING                3
#define M2UASGASSTATE_INACTIVE                   4
#define M2UASGASSTATE_ACTIVATING                 5
#define M2UASGASSTATE_DEACTIVATING               6
#define M2UASGASSTATE_ACTIVE                     7

#define M2UASGASADMINISTRATIVESTATE_LOCKED       0
#define M2UASGASADMINISTRATIVESTATE_UNLOCKED     1
#define M2UASGASADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define M2UASGASOPERATIONALSTATE_DISABLED        0
#define M2UASGASOPERATIONALSTATE_ENABLED         1

/* function prototypes */
void init_m2uaMIB(void);
void deinit_m2uaMIB(void);
int term_m2uaMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_m2uaMIB;
void parse_m2uaMIB(const char *, char *);
SNMPCallback store_m2uaMIB;
void refresh_m2uaMIB(void);
FindVarMethod var_m2uaAsTable;
int m2uaAsTable_add(struct m2uaAsTable_data *);
int m2uaAsTable_del(struct m2uaAsTable_data **);
void parse_m2uaAsTable(const char *, char *);
SNMPCallback store_m2uaAsTable;
void refresh_m2uaAsTable(void);
FindVarMethod var_m2uaIfTable;
int m2uaIfTable_add(struct m2uaIfTable_data *);
int m2uaIfTable_del(struct m2uaIfTable_data **);
void parse_m2uaIfTable(const char *, char *);
SNMPCallback store_m2uaIfTable;
void refresh_m2uaIfTable(void);
FindVarMethod var_m2uaAsIfTable;
int m2uaAsIfTable_add(struct m2uaAsIfTable_data *);
int m2uaAsIfTable_del(struct m2uaAsIfTable_data **);
void parse_m2uaAsIfTable(const char *, char *);
SNMPCallback store_m2uaAsIfTable;
void refresh_m2uaAsIfTable(void);
FindVarMethod var_m2uaAspTable;
int m2uaAspTable_add(struct m2uaAspTable_data *);
int m2uaAspTable_del(struct m2uaAspTable_data **);
void parse_m2uaAspTable(const char *, char *);
SNMPCallback store_m2uaAspTable;
void refresh_m2uaAspTable(void);
FindVarMethod var_m2uaAspSgTable;
int m2uaAspSgTable_add(struct m2uaAspSgTable_data *);
int m2uaAspSgTable_del(struct m2uaAspSgTable_data **);
void parse_m2uaAspSgTable(const char *, char *);
SNMPCallback store_m2uaAspSgTable;
void refresh_m2uaAspSgTable(void);
FindVarMethod var_m2uaSgTable;
int m2uaSgTable_add(struct m2uaSgTable_data *);
int m2uaSgTable_del(struct m2uaSgTable_data **);
void parse_m2uaSgTable(const char *, char *);
SNMPCallback store_m2uaSgTable;
void refresh_m2uaSgTable(void);
FindVarMethod var_m2uaSgAspTable;
int m2uaSgAspTable_add(struct m2uaSgAspTable_data *);
int m2uaSgAspTable_del(struct m2uaSgAspTable_data **);
void parse_m2uaSgAspTable(const char *, char *);
SNMPCallback store_m2uaSgAspTable;
void refresh_m2uaSgAspTable(void);
FindVarMethod var_m2uaSgAspAsTable;
int m2uaSgAspAsTable_add(struct m2uaSgAspAsTable_data *);
int m2uaSgAspAsTable_del(struct m2uaSgAspAsTable_data **);
void parse_m2uaSgAspAsTable(const char *, char *);
SNMPCallback store_m2uaSgAspAsTable;
void refresh_m2uaSgAspAsTable(void);
FindVarMethod var_m2uaSgAsTable;
int m2uaSgAsTable_add(struct m2uaSgAsTable_data *);
int m2uaSgAsTable_del(struct m2uaSgAsTable_data **);
void parse_m2uaSgAsTable(const char *, char *);
SNMPCallback store_m2uaSgAsTable;
void refresh_m2uaSgAsTable(void);

WriteMethod write_m2uaAsName;
WriteMethod write_m2uaAsAdministrativeState;
WriteMethod write_m2uaAsStatus;
WriteMethod write_m2uaIfName;
WriteMethod write_m2uaIfAsIndex;
WriteMethod write_m2uaIfIdNum;
WriteMethod write_m2uaIfIdName;
WriteMethod write_m2uaIfAdministrativeState;
WriteMethod write_m2uaIfEquipment;
WriteMethod write_m2uaIfMaxSifSize;
WriteMethod write_m2uaIfTransmissionRate;
WriteMethod write_m2uaIfCic;
WriteMethod write_m2uaIfRowStatus;
WriteMethod write_m2uaSgIndex;
WriteMethod write_m2uaAspAdministrativeState;
WriteMethod write_m2uaAspOperationalState;
WriteMethod write_m2uaAspRowStatus;
WriteMethod write_m2uaSgIndex;
WriteMethod write_m2uaAspSgAspId;
WriteMethod write_m2uaAspSgAspPort;
WriteMethod write_m2uaAspSgAdministrativeState;
WriteMethod write_m2uaSgName;
WriteMethod write_m2uaSgRowStatus;
WriteMethod write_m2uaSgIndex;
WriteMethod write_m2uaSgAspId;
WriteMethod write_m2uaSgAspPort;
WriteMethod write_m2uaSgAspAdministrativeState;
WriteMethod write_m2uaSgIndex;
WriteMethod write_m2uaSgAspAsRegistrationRequired;
WriteMethod write_m2uaSgAspAsAdministrativeState;
WriteMethod write_m2uaSgIndex;
WriteMethod write_m2uaSgAsTrafficMode;
WriteMethod write_m2uaSgAsState;
WriteMethod write_m2uaSgAsAdministrativeState;
WriteMethod write_m2uaSgAsRowStatus;
#endif				/* __LOCAL_M2UAMIB_H__ */
