/*****************************************************************************

 @(#) $Id: x400pMIB.h,v 0.9.2.3 2008-12-31 16:04:48 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-31 16:04:48 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: x400pMIB.h,v $
 Revision 0.9.2.3  2008-12-31 16:04:48  brian
 - updated mibs

 Revision 0.9.2.2  2008-12-24 13:08:26  brian
 - building ss7confd

 *****************************************************************************/

#ifndef __LOCAL_X400PMIB_H__
#define __LOCAL_X400PMIB_H__

#ident "@(#) $RCSfile: x400pMIB.h,v $ $Name:  $($Revision: 0.9.2.3 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct x400pMIB_data {
	uint x400pMIB_request;
	uint32_t x400pCardNextIndex;

};
struct x400pSyncTable_data {
	uint x400pSyncTable_request;
	uint x400pSyncTable_refs;
	int32_t x400pSyncGroup;
	int32_t x400pSyncIndex;
	uint8_t *x400pSyncSpanId;
	int x400pSyncSpanIdLen;
	int32_t x400pSyncRowStatus;
};
struct x400pCardTable_data {
	uint x400pCardTable_request;
	uint x400pCardTable_refs;
	int32_t x400pCardIndex;
	int32_t x400pCardType;
	int32_t x400pCardIdentifier;
	uint8_t *x400pCardRevision;
	int x400pCardRevisionLen;
	int32_t x400pCardChipType;
	uint8_t *x400pCardChipRevision;
	int x400pCardChipRevisionLen;
	int32_t x400pCardPciBus;
	int32_t x400pCardPciSlot;
	int32_t x400pCardPciIrq;
	int32_t x400pCardSpanType;
	uint8_t *x400pCardMode;
	int x400pCardModeLen;
	int32_t x400pCardSyncMaster;
	int32_t x400pCardSyncSource;
	int32_t x400pCardSyncGroup;
	int32_t x400pCardAdministrativeState;
	int32_t x400pCardOperationalState;
	int32_t x400pCardUsageState;
	uint8_t *x400pCardAlarmStatus;
	int x400pCardAlarmStatusLen;
	uint8_t *x400pCardProceduralStatus;
	int x400pCardProceduralStatusLen;
	uint8_t *x400pCardAvailabilityStatus;
	int x400pCardAvailabilityStatusLen;
	uint8_t *x400pCardControlStatus;
	int x400pCardControlStatusLen;
	int32_t x400pCardUnknownStatus;
	int32_t x400pCardStandbyStatus;
	uint8_t *x400pCardSyncSpanId;
	int x400pCardSyncSpanIdLen;
	int32_t x400pCardSyncTransitions;
	uint8_t *x400pCardName;
	int x400pCardNameLen;
	int32_t x400pCardStatus;
};
struct x400pSpanTable_data {
	uint x400pSpanTable_request;
	uint x400pSpanTable_refs;
	int32_t x400pCardIndex;
	uint32_t x400pSpanIndex;
	int32_t x400pSpanOperationalState;
	int32_t x400pSpanUsageState;
	int32_t x400pSpanAdministrativeState;
	uint8_t *x400pSpanAlarmStatus;
	int x400pSpanAlarmStatusLen;
	uint8_t *x400pSpanProceduralStatus;
	int x400pSpanProceduralStatusLen;
	uint8_t *x400pSpanAvailabilityStatus;
	int x400pSpanAvailabilityStatusLen;
	uint8_t *x400pSpanControlStatus;
	int x400pSpanControlStatusLen;
	int32_t x400pSpanStandbyStatus;
	int32_t x400pSpanUnknownStatus;
	int32_t x400pSpanType;
	int32_t x400pSpanRate;
	int32_t x400pSpanMode;
	int32_t x400pSpanCrc;
	int32_t x400pSpanClocking;
	int32_t x400pSpanCoding;
	int32_t x400pSpanFraming;
	int32_t x400pSpanLineBuildout;
	int32_t x400pSpanTxLevel;
	int32_t x400pSpanRxLevel;
};
struct x400pChanTable_data {
	uint x400pChanTable_request;
	uint x400pChanTable_refs;
	int32_t x400pCardIndex;
	uint32_t x400pSpanIndex;
	uint32_t x400pChanIndex;
	int32_t x400pChanOperationalState;
	int32_t x400pChanUsageState;
	int32_t x400pChanAdministativeState;
	uint8_t *x400pChanAlarmStatus;
	int x400pChanAlarmStatusLen;
	uint8_t *x400pChanProceduralStatus;
	int x400pChanProceduralStatusLen;
	uint8_t *x400pChanAvailabilityStatus;
	int x400pChanAvailabilityStatusLen;
	uint8_t *x400pChanControlStatus;
	int x400pChanControlStatusLen;
	int32_t x400pChanStandbyStatus;
	int32_t x400pChanType;
	int32_t x400pChanRate;
	int32_t x400pChanMode;
};

/* storage declarations */
extern struct x400pMIB_data *x400pMIBStorage;
extern struct header_complex_index *x400pSyncTableStorage;
extern struct header_complex_index *x400pCardTableStorage;
extern struct header_complex_index *x400pSpanTableStorage;
extern struct header_complex_index *x400pChanTableStorage;

/* enum definitions from the covered mib sections */

#define X400PCARDTYPE_NONE                       0
#define X400PCARDTYPE_PLX9030                    1
#define X400PCARDTYPE_PLXDEVBRD                  2
#define X400PCARDTYPE_X400P                      3
#define X400PCARDTYPE_E400P                      4
#define X400PCARDTYPE_T400P                      5
#define X400PCARDTYPE_X400PSS7                   6
#define X400PCARDTYPE_E400PSS7                   7
#define X400PCARDTYPE_T400PSS7                   8
#define X400PCARDTYPE_V400P                      9
#define X400PCARDTYPE_V400PE                     10
#define X400PCARDTYPE_V400PT                     11
#define X400PCARDTYPE_V401PE                     12
#define X400PCARDTYPE_V401PT                     13

#define X400PCARDCHIPTYPE_NONE                   0
#define X400PCARDCHIPTYPE_DS2152                 1
#define X400PCARDCHIPTYPE_DS21352                2
#define X400PCARDCHIPTYPE_DS21552                3
#define X400PCARDCHIPTYPE_DS2154                 4
#define X400PCARDCHIPTYPE_DS21354                5
#define X400PCARDCHIPTYPE_DS21554                6
#define X400PCARDCHIPTYPE_DS2155                 7
#define X400PCARDCHIPTYPE_DS2156                 8

#define X400PCARDSPANTYPE_NONE                   1
#define X400PCARDSPANTYPE_T1                     2
#define X400PCARDSPANTYPE_E1                     3
#define X400PCARDSPANTYPE_J1                     4

#define X400PCARDMODE_REMOTELOOPBACK             0
#define X400PCARDMODE_LOCALLOOPBACK              1

#define X400PCARDSYNCMASTER_SLAVE                0
#define X400PCARDSYNCMASTER_MASTER               1

#define X400PCARDSYNCSOURCE_SYNCSELF             0
#define X400PCARDSYNCSOURCE_SYNC1                1
#define X400PCARDSYNCSOURCE_SYNC2                2
#define X400PCARDSYNCSOURCE_SYNC3                3
#define X400PCARDSYNCSOURCE_SYNC4                4
#define X400PCARDSYNCSOURCE_SYNCEXTERN           5
#define X400PCARDSYNCSOURCE_SYNCAUTO             6

#define X400PCARDADMINISTRATIVESTATE_LOCKED      0
#define X400PCARDADMINISTRATIVESTATE_UNLOCKED    1
#define X400PCARDADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define X400PCARDOPERATIONALSTATE_DISABLED       0
#define X400PCARDOPERATIONALSTATE_ENABLED        1

#define X400PCARDUSAGESTATE_IDLE                 0
#define X400PCARDUSAGESTATE_ACTIVE               1
#define X400PCARDUSAGESTATE_BUSY                 2

#define X400PCARDALARMSTATUS_UNDERREPAIR         0
#define X400PCARDALARMSTATUS_CRITICAL            1
#define X400PCARDALARMSTATUS_MAJOR               2
#define X400PCARDALARMSTATUS_MINOR               3
#define X400PCARDALARMSTATUS_ALARMOUTSTANDING    4

#define X400PCARDPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PCARDPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PCARDPROCEDURALSTATUS_INITIALIZING   2
#define X400PCARDPROCEDURALSTATUS_REPORTING      3
#define X400PCARDPROCEDURALSTATUS_TERMINATING    4

#define X400PCARDAVAILABILITYSTATUS_INTEST       0
#define X400PCARDAVAILABILITYSTATUS_FAILED       1
#define X400PCARDAVAILABILITYSTATUS_POWEROFF     2
#define X400PCARDAVAILABILITYSTATUS_OFFLINE      3
#define X400PCARDAVAILABILITYSTATUS_OFFDUTY      4
#define X400PCARDAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PCARDAVAILABILITYSTATUS_DEGRADED     6
#define X400PCARDAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PCARDAVAILABILITYSTATUS_LOGFULL      8

#define X400PCARDCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PCARDCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PCARDCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PCARDCONTROLSTATUS_SUSPENDED         3

#define X400PCARDUNKNOWNSTATUS_FALSE             0
#define X400PCARDUNKNOWNSTATUS_TRUE              1

#define X400PCARDSTANDBYSTATUS_HOTSTANDBY        0
#define X400PCARDSTANDBYSTATUS_COLDSTANDBY       1
#define X400PCARDSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PSPANOPERATIONALSTATE_DISABLED       0
#define X400PSPANOPERATIONALSTATE_ENABLED        1

#define X400PSPANUSAGESTATE_IDLE                 0
#define X400PSPANUSAGESTATE_ACTIVE               1
#define X400PSPANUSAGESTATE_BUSY                 2

#define X400PSPANADMINISTRATIVESTATE_LOCKED      0
#define X400PSPANADMINISTRATIVESTATE_UNLOCKED    1
#define X400PSPANADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define X400PSPANALARMSTATUS_UNDERREPAIR         0
#define X400PSPANALARMSTATUS_CRITICAL            1
#define X400PSPANALARMSTATUS_MAJOR               2
#define X400PSPANALARMSTATUS_MINOR               3
#define X400PSPANALARMSTATUS_ALARMOUTSTANDING    4

#define X400PSPANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PSPANPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PSPANPROCEDURALSTATUS_INITIALIZING   2
#define X400PSPANPROCEDURALSTATUS_REPORTING      3
#define X400PSPANPROCEDURALSTATUS_TERMINATING    4

#define X400PSPANAVAILABILITYSTATUS_INTEST       0
#define X400PSPANAVAILABILITYSTATUS_FAILED       1
#define X400PSPANAVAILABILITYSTATUS_POWEROFF     2
#define X400PSPANAVAILABILITYSTATUS_OFFLINE      3
#define X400PSPANAVAILABILITYSTATUS_OFFDUTY      4
#define X400PSPANAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PSPANAVAILABILITYSTATUS_DEGRADED     6
#define X400PSPANAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PSPANAVAILABILITYSTATUS_LOGFULL      8

#define X400PSPANCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PSPANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PSPANCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PSPANCONTROLSTATUS_SUSPENDED         3

#define X400PSPANSTANDBYSTATUS_HOTSTANDBY        0
#define X400PSPANSTANDBYSTATUS_COLDSTANDBY       1
#define X400PSPANSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PSPANUNKNOWNSTATUS_FALSE             0
#define X400PSPANUNKNOWNSTATUS_TRUE              1

#define X400PSPANTYPE_NONE                       1
#define X400PSPANTYPE_T1                         2
#define X400PSPANTYPE_E1                         3
#define X400PSPANTYPE_J1                         4

#define X400PSPANMODE_NONE                       1
#define X400PSPANMODE_LOCALLOOPBACK              2
#define X400PSPANMODE_REMOTELOOPBACK             3

#define X400PSPANCRC_NONE                        1
#define X400PSPANCRC_CRC4                        2
#define X400PSPANCRC_CRC5                        3
#define X400PSPANCRC_CRC6                        4
#define X400PSPANCRC_CRC6J                       5

#define X400PSPANCLOCKING_NONE                   1
#define X400PSPANCLOCKING_INTERNAL               2
#define X400PSPANCLOCKING_EXTERNAL               3
#define X400PSPANCLOCKING_LOOP                   4
#define X400PSPANCLOCKING_MASTER                 5
#define X400PSPANCLOCKING_SLAVE                  6

#define X400PSPANCODING_NONE                     1
#define X400PSPANCODING_AMI                      2
#define X400PSPANCODING_B6ZS                     3
#define X400PSPANCODING_B8ZS                     4
#define X400PSPANCODING_HDB3                     5

#define X400PSPANFRAMING_NONE                    1
#define X400PSPANFRAMING_CCS                     2
#define X400PSPANFRAMING_CAS                     3
#define X400PSPANFRAMING_SF                      4
#define X400PSPANFRAMING_D4                      5
#define X400PSPANFRAMING_ESF                     6

#define X400PSPANLINEBUILDOUT_NONE               1
#define X400PSPANLINEBUILDOUT_DSX_133FT          2
#define X400PSPANLINEBUILDOUT_DSX_255FT          3
#define X400PSPANLINEBUILDOUT_DSX_399FT          4
#define X400PSPANLINEBUILDOUT_DSX_533FT          5
#define X400PSPANLINEBUILDOUT_DSX_666FT          6
#define X400PSPANLINEBUILDOUT_CSU_0DB            7
#define X400PSPANLINEBUILDOUT_CSU_8DB            8
#define X400PSPANLINEBUILDOUT_CSU_15DB           9
#define X400PSPANLINEBUILDOUT_CSU_23DB           10
#define X400PSPANLINEBUILDOUT_NM_75_OHM          11
#define X400PSPANLINEBUILDOUT_NM_120_OHM         12
#define X400PSPANLINEBUILDOUT_PR_75_OHM          13
#define X400PSPANLINEBUILDOUT_PR_120_OHM         14
#define X400PSPANLINEBUILDOUT_HRL_75_OHM         15
#define X400PSPANLINEBUILDOUT_HRL_120_OHM        16
#define X400PSPANLINEBUILDOUT_MON_0DB            17
#define X400PSPANLINEBUILDOUT_MON_12DB           18
#define X400PSPANLINEBUILDOUT_MON_20DB           19
#define X400PSPANLINEBUILDOUT_MON_26DB           20
#define X400PSPANLINEBUILDOUT_MON_30DB           21
#define X400PSPANLINEBUILDOUT_MON_32DB           22

#define X400PSPANTXLEVEL_OFF                     1
#define X400PSPANTXLEVEL_ON                      2

#define X400PSPANRXLEVEL_OFF                     1
#define X400PSPANRXLEVEL_ON                      2

#define X400PCHANOPERATIONALSTATE_DISABLED       0
#define X400PCHANOPERATIONALSTATE_ENABLED        1

#define X400PCHANUSAGESTATE_IDLE                 0
#define X400PCHANUSAGESTATE_ACTIVE               1
#define X400PCHANUSAGESTATE_BUSY                 2

#define X400PCHANADMINISTATIVESTATE_LOCKED       0
#define X400PCHANADMINISTATIVESTATE_UNLOCKED     1
#define X400PCHANADMINISTATIVESTATE_SHUTTINGDOWN 2

#define X400PCHANALARMSTATUS_UNDERREPAIR         0
#define X400PCHANALARMSTATUS_CRITICAL            1
#define X400PCHANALARMSTATUS_MAJOR               2
#define X400PCHANALARMSTATUS_MINOR               3
#define X400PCHANALARMSTATUS_ALARMOUTSTANDING    4

#define X400PCHANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PCHANPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PCHANPROCEDURALSTATUS_INITIALIZING   2
#define X400PCHANPROCEDURALSTATUS_REPORTING      3
#define X400PCHANPROCEDURALSTATUS_TERMINATING    4

#define X400PCHANAVAILABILITYSTATUS_INTEST       0
#define X400PCHANAVAILABILITYSTATUS_FAILED       1
#define X400PCHANAVAILABILITYSTATUS_POWEROFF     2
#define X400PCHANAVAILABILITYSTATUS_OFFLINE      3
#define X400PCHANAVAILABILITYSTATUS_OFFDUTY      4
#define X400PCHANAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PCHANAVAILABILITYSTATUS_DEGRADED     6
#define X400PCHANAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PCHANAVAILABILITYSTATUS_LOGFULL      8

#define X400PCHANCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PCHANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PCHANCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PCHANCONTROLSTATUS_SUSPENDED         3

#define X400PCHANSTANDBYSTATUS_HOTSTANDBY        0
#define X400PCHANSTANDBYSTATUS_COLDSTANDBY       1
#define X400PCHANSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PCHANTYPE_NONE                       1
#define X400PCHANTYPE_DS0A                       2
#define X400PCHANTYPE_DS0                        3
#define X400PCHANTYPE_T1                         4
#define X400PCHANTYPE_J1                         5
#define X400PCHANTYPE_E1                         6

#define X400PCHANRATE_VARIABLE                   0
#define X400PCHANRATE_KBITS56                    56000
#define X400PCHANRATE_KBITS64                    64000
#define X400PCHANRATE_KBITS1536                  1536000
#define X400PCHANRATE_KBITS1984                  1984000

#define X400PCHANMODE_NONE                       1
#define X400PCHANMODE_REMOTELOOPBACK             2
#define X400PCHANMODE_LOCALLOOPBACK              3
#define X400PCHANMODE_LOOPBACKECHO               4
#define X400PCHANMODE_TEST                       5

/* function prototypes */
void init_x400pMIB(void);
void deinit_x400pMIB(void);
int term_x400pMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_x400pMIB;
void parse_x400pMIB(const char *, char *);
SNMPCallback store_x400pMIB;
void refresh_x400pMIB(void);
FindVarMethod var_x400pSyncTable;
int x400pSyncTable_add(struct x400pSyncTable_data *);
int x400pSyncTable_del(struct x400pSyncTable_data **);
void parse_x400pSyncTable(const char *, char *);
SNMPCallback store_x400pSyncTable;
void refresh_x400pSyncTable(void);
FindVarMethod var_x400pCardTable;
int x400pCardTable_add(struct x400pCardTable_data *);
int x400pCardTable_del(struct x400pCardTable_data **);
void parse_x400pCardTable(const char *, char *);
SNMPCallback store_x400pCardTable;
void refresh_x400pCardTable(void);
FindVarMethod var_x400pSpanTable;
int x400pSpanTable_add(struct x400pSpanTable_data *);
int x400pSpanTable_del(struct x400pSpanTable_data **);
void parse_x400pSpanTable(const char *, char *);
SNMPCallback store_x400pSpanTable;
void refresh_x400pSpanTable(void);
FindVarMethod var_x400pChanTable;
int x400pChanTable_add(struct x400pChanTable_data *);
int x400pChanTable_del(struct x400pChanTable_data **);
void parse_x400pChanTable(const char *, char *);
SNMPCallback store_x400pChanTable;
void refresh_x400pChanTable(void);

WriteMethod write_x400pSyncSpanId;
WriteMethod write_x400pSyncRowStatus;
WriteMethod write_x400pCardSpanType;
WriteMethod write_x400pCardMode;
WriteMethod write_x400pCardSyncMaster;
WriteMethod write_x400pCardSyncSource;
WriteMethod write_x400pCardSyncGroup;
WriteMethod write_x400pCardAdministrativeState;
WriteMethod write_x400pCardAlarmStatus;
WriteMethod write_x400pCardControlStatus;
WriteMethod write_x400pSpanAdministrativeState;
WriteMethod write_x400pSpanAlarmStatus;
WriteMethod write_x400pSpanType;
WriteMethod write_x400pSpanCrc;
WriteMethod write_x400pSpanClocking;
WriteMethod write_x400pSpanCoding;
WriteMethod write_x400pSpanFraming;
WriteMethod write_x400pSpanLineBuildout;
WriteMethod write_x400pSpanTxLevel;
WriteMethod write_x400pSpanRxLevel;
WriteMethod write_x400pChanAdministativeState;
WriteMethod write_x400pChanAlarmStatus;
WriteMethod write_x400pChanType;
WriteMethod write_x400pChanRate;
WriteMethod write_x400pChanMode;

#endif				/* __LOCAL_X400PMIB_H__ */
