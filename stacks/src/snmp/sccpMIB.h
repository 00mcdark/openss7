/*****************************************************************************

 @(#) $Id: sccpMIB.h,v 0.9.2.2 2008-12-24 13:08:25 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-24 13:08:25 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: sccpMIB.h,v $
 Revision 0.9.2.2  2008-12-24 13:08:25  brian
 - building ss7confd

 *****************************************************************************/

#ifndef __LOCAL_SCCPMIB_H__
#define __LOCAL_SCCPMIB_H__

#ident "@(#) $RCSfile: sccpMIB.h,v $ $Name:  $($Revision: 0.9.2.2 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct sccpMIB_data {
	uint sccpMIB_request;

};
struct sccpNetworkEntityTable_data {
	uint sccpNetworkEntityTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpNetworkEntityAlarmStatus;
	int sccpNetworkEntityAlarmStatusLen;
	int32_t sccpCommunicationsEntityId;
	char *sccpLocalSapNames;
	int sccpLocalSapNamesLen;
	char *sccpNetworkEntityTitles;
	int sccpNetworkEntityTitlesLen;
	char *sccpSystemTypes;
	int sccpSystemTypesLen;
	oid *sccpVersion;
	int sccpVersionLen;
	int32_t sccpLUDTandLUDTSSupported;
	int32_t sccpCoordChangeTimer;
	int32_t sccpIgnoreSSTTimer;
	int32_t sccpMaxStatInfoTimer;
	char *sccpNetworkEntityName;
	int sccpNetworkEntityNameLen;
	int32_t sccpRowStatus;
};
struct sccpSapNameTable_data {
	uint sccpSapNameTable_request;
	int32_t sccpNetworkEntityId;
	int32_t sccpSapId;
	int32_t sccpSapNameRowStatus;
};
struct sccpAccessPointTable_data {
	uint sccpAccessPointTable_request;
	int32_t sccpNetworkEntityId;
	int32_t sccpSapId;
	char *sccpAccessPointAlarmStatus;
	int sccpAccessPointAlarmStatusLen;
	char *sccpSap2Address;
	int sccpSap2AddressLen;
	char *sccpUserEntityNames;
	int sccpUserEntityNamesLen;
	char *sccpProviderEntityNames;
	int sccpProviderEntityNamesLen;
	char *sccpAvailabilityStatus;
	int sccpAvailabilityStatusLen;
	int32_t sccpConcernedAreaPointer;
	int32_t sccpLinkagePointer;
	int32_t sccpSsAvailableAfterSpRestart;
	char *sccpAccessPointName;
	int sccpAccessPointNameLen;
	int32_t sccpAccessPointRowStatus;
};
struct sccpLinkageTable_data {
	uint sccpLinkageTable_request;
	int32_t sccpNetworkEntityId;
	int32_t sccpLinkageId;
	char *sccpOperationalProtocols;
	int sccpOperationalProtocolsLen;
	oid *sccpSnSAP;
	int sccpSnSAPLen;
	int32_t sccpAttackTimerValue;
	int32_t sccpDecayTimerValue;
	int32_t sccpNrOfRestrictionLevels;
	int32_t sccpNrOfSubLevels;
	int32_t sccpCLS;
	int32_t sccpCongestionTimerValue;
	int32_t sccpp;
	char *sccpImportanceLevelCR;
	int sccpImportanceLevelCRLen;
	char *sccpImportanceLevelCC;
	int sccpImportanceLevelCCLen;
	char *sccpImportanceLevelCREF;
	int sccpImportanceLevelCREFLen;
	char *sccpImportanceLevelDT1;
	int sccpImportanceLevelDT1Len;
	char *sccpImportanceLevelDT2;
	int sccpImportanceLevelDT2Len;
	char *sccpImportanceLevelAK;
	int sccpImportanceLevelAKLen;
	char *sccpImportanceLevelIT;
	int sccpImportanceLevelITLen;
	char *sccpImportanceLevelED;
	int sccpImportanceLevelEDLen;
	char *sccpImportanceLevelEA;
	int sccpImportanceLevelEALen;
	char *sccpImportanceLevelRSR;
	int sccpImportanceLevelRSRLen;
	char *sccpImportanceLevelRSC;
	int sccpImportanceLevelRSCLen;
	char *sccpImportanceLevelERR;
	int sccpImportanceLevelERRLen;
	char *sccpImportanceLevelRLC;
	int sccpImportanceLevelRLCLen;
	char *sccpImportanceLevelRLSD;
	int sccpImportanceLevelRLSDLen;
	char *sccpImportanceLevelUDT;
	int sccpImportanceLevelUDTLen;
	char *sccpImportanceLevelUDTS;
	int sccpImportanceLevelUDTSLen;
	char *sccpImportanceLevelXUDT;
	int sccpImportanceLevelXUDTLen;
	char *sccpImportanceLevelXUDTS;
	int sccpImportanceLevelXUDTSLen;
	char *sccpImportanceLevelLUDT;
	int sccpImportanceLevelLUDTLen;
	char *sccpImportanceLevelLUDTS;
	int sccpImportanceLevelLUDTSLen;
	int32_t sccpRLM;
	int32_t sccpRSLM;
	char *sccpLinkageConcernedAreaPointer;
	int sccpLinkageConcernedAreaPointerLen;
	int32_t sccpLowerLimitForSegmentation;
	int32_t sccpUpperLimitForSegmentation;
	char *sccpLinkageName;
	int sccpLinkageNameLen;
	int32_t sccpLinkageRowStatus;
};
struct sccpSclcTable_data {
	uint sccpSclcTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpSclcAlarmStatus;
	int sccpSclcAlarmStatusLen;
	char *sccpClProtocolMachineId;
	int sccpClProtocolMachineIdLen;
	int32_t sccpSclcOperationalState;
	int32_t sccpTotalRemoteSAPs;
	int32_t sccpSclcAdministrativeState;
	char *sccpSclcSupportedProtocols;
	int sccpSclcSupportedProtocolsLen;
	int32_t sccpSclcOperationalSystemType;
	int32_t sccpInitialValueReassTimer;
	char *sccpSclcName;
	int sccpSclcNameLen;
	int32_t sccpSclcRowStatus;
};
struct sccpScocTable_data {
	uint sccpScocTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpCoProtocolMachineId;
	int sccpCoProtocolMachineIdLen;
	int32_t sccpScocOperationalState;
	int32_t sccpScocAdministrativeState;
	int32_t sccpScocOperationalSystemType;
	char *sccpScocSupportedProtocols;
	int sccpScocSupportedProtocolsLen;
	char *sccpScocName;
	int sccpScocNameLen;
	int32_t sccpScocRowStatus;
};
struct sccpScrcTable_data {
	uint sccpScrcTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpScrcId;
	int sccpScrcIdLen;
	char *sccpScrcAlarmStatus;
	int sccpScrcAlarmStatusLen;
	char *sccpScrcName;
	int sccpScrcNameLen;
	int32_t sccpScrcRowStatus;
};
struct sccpEntitySetTable_data {
	uint sccpEntitySetTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpEntitySetId;
	int sccpEntitySetIdLen;
	int32_t sccpSharingMode;
	oid *sccpLoadSharingAlgPointer;
	int sccpLoadSharingAlgPointerLen;
	char *sccpEntitySetName;
	int sccpEntitySetNameLen;
	int32_t sccpEntitySetType;
	char *sccpEntitySetSsn;
	int sccpEntitySetSsnLen;
	int32_t sccpEntitySetRowStatus;
};
struct sccpEntitySetSapTable_data {
	uint sccpEntitySetSapTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpEntitySetId;
	int sccpEntitySetIdLen;
	char *sccpEntitySetSapId;
	int sccpEntitySetSapIdLen;
	int32_t sccpEntitySetSapType;
	oid *sccpEntitySetSapPointer;
	int sccpEntitySetSapPointerLen;
	int32_t sccpEntitySetSapRowStatus;
};
struct sccpConcernedAreaTable_data {
	uint sccpConcernedAreaTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpConcernedAreaId;
	int sccpConcernedAreaIdLen;
	int32_t sccpConcernedAreaRowStatus;
};
struct sccpRemoteSCCPTable_data {
	uint sccpRemoteSCCPTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpConcernedAreaId;
	int sccpConcernedAreaIdLen;
	char *sccpRemoteSCCPId;
	int sccpRemoteSCCPIdLen;
	oid *sccpRemoteSCCPMTPAccessPoint;
	int sccpRemoteSCCPMTPAccessPointLen;
	char *sccpRemoteSCCPName;
	int sccpRemoteSCCPNameLen;
	int32_t sccpRemoteSCCPRowStatus;
};
struct sccpGtConversionRuleTable_data {
	uint sccpGtConversionRuleTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpGtConversionRuleId;
	int sccpGtConversionRuleIdLen;
	int32_t sccpGtNewEncodingScheme;
	int32_t sccpGtNewNatureOfAddress;
	int32_t sccpGtNewNumberingPlan;
	int32_t sccpGtNewTranslationType;
	char *sccpGtConversionRuleName;
	int sccpGtConversionRuleNameLen;
	int32_t sccpGtConversionRuleRowStatus;
};
struct sccpAddressInfoTable_data {
	uint sccpAddressInfoTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpGtConversionRuleId;
	int sccpGtConversionRuleIdLen;
	char *sccpAddressInfoOperationId;
	int sccpAddressInfoOperationIdLen;
	int32_t sccpAddressInfoOperation;
	int32_t sccpAddressInfoAddressElement;
	int32_t sccpAddressInfoNrOfAddressElements;
	int32_t sccpAddressInfoRowStatus;
};
struct sccpGtTranslatorTable_data {
	uint sccpGtTranslatorTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpGtTranslatorId;
	int sccpGtTranslatorIdLen;
	int32_t sccpGtIndicator;
	int32_t sccpGtNatureOfAddress;
	int32_t sccpGtNumberingPlan;
	int32_t sccpGtTranslationType;
	int32_t sccpGtTranslatorAdministrativeState;
	char *sccpGtTranslatorName;
	int sccpGtTranslatorNameLen;
	int32_t sccpGtTranslatorRowStatus;
};
struct sccpGtRuleTable_data {
	uint sccpGtRuleTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpGtTranslatorId;
	int sccpGtTranslatorIdLen;
	char *sccpGtRuleId;
	int sccpGtRuleIdLen;
	int32_t sccpGtRuleAdministrativeState;
	char *sccpGtAddressInformation;
	int sccpGtAddressInformationLen;
	char *sccpGtConvRulePointer;
	int sccpGtConvRulePointerLen;
	int32_t sccpGtEncodingScheme;
	char *sccpEntitySetPointer;
	int sccpEntitySetPointerLen;
	char *sccpGtRuleName;
	int sccpGtRuleNameLen;
	int32_t sccpGtRuleRowStatus;
};
struct sccpSrvtTable_data {
	uint sccpSrvtTable_request;
	int32_t sccpNetworkEntityId;
	char *sccpRouteTestId;
	int sccpRouteTestIdLen;
	int32_t sccpDSRVT;
	int32_t sccpNSRVT;
	char *sccpSrvtName;
	int sccpSrvtNameLen;
	int32_t sccpAdministrativeState;
	int32_t sccpOperationalState;
	char *sccpProceduralStatus;
	int sccpProceduralStatusLen;
	int32_t sccpTraceRequested;
	int32_t sccpThreshold;
	int32_t sccpMtpBackwardRoutingRequested;
	char *sccpOriginalGT;
	int sccpOriginalGTLen;
	char *sccpInfoRequest;
	int sccpInfoRequestLen;
	char *sccpReturnUnknownParams;
	int sccpReturnUnknownParamsLen;
	int32_t sccpRouteTestRowStatus;
};

/* storage declarations */
extern struct sccpMIB_data *sccpMIBStorage;
extern struct header_complex_index *sccpNetworkEntityTableStorage;
extern struct header_complex_index *sccpSapNameTableStorage;
extern struct header_complex_index *sccpAccessPointTableStorage;
extern struct header_complex_index *sccpLinkageTableStorage;
extern struct header_complex_index *sccpSclcTableStorage;
extern struct header_complex_index *sccpScocTableStorage;
extern struct header_complex_index *sccpScrcTableStorage;
extern struct header_complex_index *sccpEntitySetTableStorage;
extern struct header_complex_index *sccpEntitySetSapTableStorage;
extern struct header_complex_index *sccpConcernedAreaTableStorage;
extern struct header_complex_index *sccpRemoteSCCPTableStorage;
extern struct header_complex_index *sccpGtConversionRuleTableStorage;
extern struct header_complex_index *sccpAddressInfoTableStorage;
extern struct header_complex_index *sccpGtTranslatorTableStorage;
extern struct header_complex_index *sccpGtRuleTableStorage;
extern struct header_complex_index *sccpSrvtTableStorage;

/* enum definitions from the covered mib sections */

#define SCCPNETWORKENTITYALARMSTATUS_UNDERREPAIR 0
#define SCCPNETWORKENTITYALARMSTATUS_CRITICAL    1
#define SCCPNETWORKENTITYALARMSTATUS_MAJOR       2
#define SCCPNETWORKENTITYALARMSTATUS_MINOR       3
#define SCCPNETWORKENTITYALARMSTATUS_ALARMOUTSTANDING 4

#define SCCPSYSTEMTYPES_ES                       0
#define SCCPSYSTEMTYPES_IS                       1

#define SCCPLUDTANDLUDTSSUPPORTED_TRUE           1
#define SCCPLUDTANDLUDTSSUPPORTED_FALSE          2

#define SCCPACCESSPOINTALARMSTATUS_UNDERREPAIR   0
#define SCCPACCESSPOINTALARMSTATUS_CRITICAL      1
#define SCCPACCESSPOINTALARMSTATUS_MAJOR         2
#define SCCPACCESSPOINTALARMSTATUS_MINOR         3
#define SCCPACCESSPOINTALARMSTATUS_ALARMOUTSTANDING 4

#define SCCPAVAILABILITYSTATUS_INTEST            0
#define SCCPAVAILABILITYSTATUS_FAILED            1
#define SCCPAVAILABILITYSTATUS_POWEROFF          2
#define SCCPAVAILABILITYSTATUS_OFFLINE           3
#define SCCPAVAILABILITYSTATUS_OFFDUTY           4
#define SCCPAVAILABILITYSTATUS_DEPENDENCY        5
#define SCCPAVAILABILITYSTATUS_DEGRADED          6
#define SCCPAVAILABILITYSTATUS_NOTINSTALLED      7
#define SCCPAVAILABILITYSTATUS_LOGFULL           8

#define SCCPSSAVAILABLEAFTERSPRESTART_TRUE       1
#define SCCPSSAVAILABLEAFTERSPRESTART_FALSE      2

#define SCCPOPERATIONALPROTOCOLS_CLASS0          0
#define SCCPOPERATIONALPROTOCOLS_CLASS1          1
#define SCCPOPERATIONALPROTOCOLS_CLASS2          2
#define SCCPOPERATIONALPROTOCOLS_CLASS3          3

#define SCCPSCLCALARMSTATUS_UNDERREPAIR          0
#define SCCPSCLCALARMSTATUS_CRITICAL             1
#define SCCPSCLCALARMSTATUS_MAJOR                2
#define SCCPSCLCALARMSTATUS_MINOR                3
#define SCCPSCLCALARMSTATUS_ALARMOUTSTANDING     4

#define SCCPSCLCOPERATIONALSTATE_DISABLED        0
#define SCCPSCLCOPERATIONALSTATE_ENABLED         1

#define SCCPSCLCADMINISTRATIVESTATE_LOCKED       0
#define SCCPSCLCADMINISTRATIVESTATE_UNLOCKED     1
#define SCCPSCLCADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SCCPSCLCSUPPORTEDPROTOCOLS_CLASS0        0
#define SCCPSCLCSUPPORTEDPROTOCOLS_CLASS1        1
#define SCCPSCLCSUPPORTEDPROTOCOLS_CLASS2        2
#define SCCPSCLCSUPPORTEDPROTOCOLS_CLASS3        3

#define SCCPSCLCOPERATIONALSYSTEMTYPE_ES         0
#define SCCPSCLCOPERATIONALSYSTEMTYPE_IS         1

#define SCCPSCOCOPERATIONALSTATE_DISABLED        0
#define SCCPSCOCOPERATIONALSTATE_ENABLED         1

#define SCCPSCOCADMINISTRATIVESTATE_LOCKED       0
#define SCCPSCOCADMINISTRATIVESTATE_UNLOCKED     1
#define SCCPSCOCADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SCCPSCOCOPERATIONALSYSTEMTYPE_ES         0
#define SCCPSCOCOPERATIONALSYSTEMTYPE_IS         1

#define SCCPSCOCSUPPORTEDPROTOCOLS_CLASS0        0
#define SCCPSCOCSUPPORTEDPROTOCOLS_CLASS1        1
#define SCCPSCOCSUPPORTEDPROTOCOLS_CLASS2        2
#define SCCPSCOCSUPPORTEDPROTOCOLS_CLASS3        3

#define SCCPSCRCALARMSTATUS_UNDERREPAIR          0
#define SCCPSCRCALARMSTATUS_CRITICAL             1
#define SCCPSCRCALARMSTATUS_MAJOR                2
#define SCCPSCRCALARMSTATUS_MINOR                3
#define SCCPSCRCALARMSTATUS_ALARMOUTSTANDING     4

#define SCCPSHARINGMODE_SOLITARY                 0
#define SCCPSHARINGMODE_DUPLIDOMINANT            1
#define SCCPSHARINGMODE_DUPLIREPLACEMENT         2
#define SCCPSHARINGMODE_DUPLILOADSHARED          3

#define SCCPENTITYSETTYPE_ENDNODEENTITYSETWITHOUTSSN 2
#define SCCPENTITYSETTYPE_ENDNODEENTITYSETWITHSSN 3
#define SCCPENTITYSETTYPE_RELAYNODEENTITYSET     7

#define SCCPENTITYSETSAPTYPE_EQUAL               0
#define SCCPENTITYSETSAPTYPE_PRIMARY             1
#define SCCPENTITYSETSAPTYPE_BACKUP              2

#define SCCPGTNEWENCODINGSCHEME_UNKNOWN          0
#define SCCPGTNEWENCODINGSCHEME_BCDODD           1
#define SCCPGTNEWENCODINGSCHEME_BCDEVEN          2
#define SCCPGTNEWENCODINGSCHEME_NATIONALSPECIFIC 3
#define SCCPGTNEWENCODINGSCHEME_NOTUSEDORNOOVERWITE 256

#define SCCPGTNEWNATUREOFADDRESS_UNKNOWN         0
#define SCCPGTNEWNATUREOFADDRESS_ISDNTNP         1
#define SCCPGTNEWNATUREOFADDRESS_GENERICNUMBERINGPLAN 2
#define SCCPGTNEWNATUREOFADDRESS_DNP             3
#define SCCPGTNEWNATUREOFADDRESS_TNP             4
#define SCCPGTNEWNATUREOFADDRESS_MMNP            5
#define SCCPGTNEWNATUREOFADDRESS_LMNP            6
#define SCCPGTNEWNATUREOFADDRESS_ISDNMNP         7
#define SCCPGTNEWNATUREOFADDRESS_PRIVATENUMBERINGPLAN 14
#define SCCPGTNEWNATUREOFADDRESS_NOTUSEDORNOOVERWITE 256

#define SCCPGTNEWNUMBERINGPLAN_UNKNOWN           0
#define SCCPGTNEWNUMBERINGPLAN_SUBSCRIBER        1
#define SCCPGTNEWNUMBERINGPLAN_NATIONAL          3
#define SCCPGTNEWNUMBERINGPLAN_INTERNATIONAL     4
#define SCCPGTNEWNUMBERINGPLAN_NOTUSEDORNOOVERWRITE 256

#define SCCPGTNEWTRANSLATIONTYPE_UNKNOWN         0
#define SCCPGTNEWTRANSLATIONTYPE_ITCC            1
#define SCCPGTNEWTRANSLATIONTYPE_GENERICNUMBERINGPLAN 14
#define SCCPGTNEWTRANSLATIONTYPE_IEESS           17
#define SCCPGTNEWTRANSLATIONTYPE_NOTUSEDORNOOVERWRITE 256

#define SCCPADDRESSINFOOPERATION_INSERT          0
#define SCCPADDRESSINFOOPERATION_REPLACE         1
#define SCCPADDRESSINFOOPERATION_PASSTRANSPARENTLY 2
#define SCCPADDRESSINFOOPERATION_DELETE          3
#define SCCPADDRESSINFOOPERATION_STOP            4
#define SCCPADDRESSINFOOPERATION_COPYREMAIN      5

#define SCCPGTINDICATOR_NOGLOBALTITLE            0
#define SCCPGTINDICATOR_NOAONLY                  1
#define SCCPGTINDICATOR_TTONLY                   2
#define SCCPGTINDICATOR_TT_NP_ES                 3
#define SCCPGTINDICATOR_TT_NP_ES_NOA             4

#define SCCPGTNATUREOFADDRESS_UNKNOWN            0
#define SCCPGTNATUREOFADDRESS_ISDNTNP            1
#define SCCPGTNATUREOFADDRESS_GENERICNUMBERINGPLAN 2
#define SCCPGTNATUREOFADDRESS_DNP                3
#define SCCPGTNATUREOFADDRESS_TNP                4
#define SCCPGTNATUREOFADDRESS_MMNP               5
#define SCCPGTNATUREOFADDRESS_LMNP               6
#define SCCPGTNATUREOFADDRESS_ISDNMNP            7
#define SCCPGTNATUREOFADDRESS_PRIVATENUMBERINGPLAN 14
#define SCCPGTNATUREOFADDRESS_NOTUSEDORNOOVERWITE 256

#define SCCPGTNUMBERINGPLAN_UNKNOWN              0
#define SCCPGTNUMBERINGPLAN_SUBSCRIBER           1
#define SCCPGTNUMBERINGPLAN_NATIONAL             3
#define SCCPGTNUMBERINGPLAN_INTERNATIONAL        4
#define SCCPGTNUMBERINGPLAN_NOTUSEDORNOOVERWRITE 256

#define SCCPGTTRANSLATIONTYPE_UNKNOWN            0
#define SCCPGTTRANSLATIONTYPE_ITCC               1
#define SCCPGTTRANSLATIONTYPE_GENERICNUMBERINGPLAN 14
#define SCCPGTTRANSLATIONTYPE_IEESS              17
#define SCCPGTTRANSLATIONTYPE_NOTUSEDORNOOVERWRITE 256

#define SCCPGTTRANSLATORADMINISTRATIVESTATE_LOCKED 0
#define SCCPGTTRANSLATORADMINISTRATIVESTATE_UNLOCKED 1
#define SCCPGTTRANSLATORADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SCCPGTRULEADMINISTRATIVESTATE_LOCKED     0
#define SCCPGTRULEADMINISTRATIVESTATE_UNLOCKED   1
#define SCCPGTRULEADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SCCPGTENCODINGSCHEME_UNKNOWN             0
#define SCCPGTENCODINGSCHEME_BCDODD              1
#define SCCPGTENCODINGSCHEME_BCDEVEN             2
#define SCCPGTENCODINGSCHEME_NATIONALSPECIFIC    3
#define SCCPGTENCODINGSCHEME_NOTUSEDORNOOVERWITE 256

#define SCCPADMINISTRATIVESTATE_LOCKED           0
#define SCCPADMINISTRATIVESTATE_UNLOCKED         1
#define SCCPADMINISTRATIVESTATE_SHUTTINGDOWN     2

#define SCCPOPERATIONALSTATE_DISABLED            0
#define SCCPOPERATIONALSTATE_ENABLED             1

#define SCCPPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SCCPPROCEDURALSTATUS_NOTINITIALIZED      1
#define SCCPPROCEDURALSTATUS_INITIALIZING        2
#define SCCPPROCEDURALSTATUS_REPORTING           3
#define SCCPPROCEDURALSTATUS_TERMINATING         4

#define SCCPTRACEREQUESTED_TRUE                  1
#define SCCPTRACEREQUESTED_FALSE                 2

#define SCCPMTPBACKWARDROUTINGREQUESTED_TRUE     1
#define SCCPMTPBACKWARDROUTINGREQUESTED_FALSE    2

#define SCCPINFOREQUEST_POINTCODE                0
#define SCCPINFOREQUEST_POINTCODELIST            1
#define SCCPINFOREQUEST_ROUTEPRIORITYLIST        2

#define SCCPRETURNUNKNOWNPARAMS_TAG15            0
#define SCCPRETURNUNKNOWNPARAMS_TAG16            1

/* function prototypes */
void init_sccpMIB(void);
void deinit_sccpMIB(void);
int term_sccpMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_sccpMIB;
void parse_sccpMIB(const char *, char *);
SNMPCallback store_sccpMIB;
void refresh_sccpMIB(void);
FindVarMethod var_sccpNetworkEntityTable;
void parse_sccpNetworkEntityTable(const char *, char *);
SNMPCallback store_sccpNetworkEntityTable;
void refresh_sccpNetworkEntityTable(void);
FindVarMethod var_sccpSapNameTable;
void parse_sccpSapNameTable(const char *, char *);
SNMPCallback store_sccpSapNameTable;
void refresh_sccpSapNameTable(void);
FindVarMethod var_sccpAccessPointTable;
void parse_sccpAccessPointTable(const char *, char *);
SNMPCallback store_sccpAccessPointTable;
void refresh_sccpAccessPointTable(void);
FindVarMethod var_sccpLinkageTable;
void parse_sccpLinkageTable(const char *, char *);
SNMPCallback store_sccpLinkageTable;
void refresh_sccpLinkageTable(void);
FindVarMethod var_sccpSclcTable;
void parse_sccpSclcTable(const char *, char *);
SNMPCallback store_sccpSclcTable;
void refresh_sccpSclcTable(void);
FindVarMethod var_sccpScocTable;
void parse_sccpScocTable(const char *, char *);
SNMPCallback store_sccpScocTable;
void refresh_sccpScocTable(void);
FindVarMethod var_sccpScrcTable;
void parse_sccpScrcTable(const char *, char *);
SNMPCallback store_sccpScrcTable;
void refresh_sccpScrcTable(void);
FindVarMethod var_sccpEntitySetTable;
void parse_sccpEntitySetTable(const char *, char *);
SNMPCallback store_sccpEntitySetTable;
void refresh_sccpEntitySetTable(void);
FindVarMethod var_sccpEntitySetSapTable;
void parse_sccpEntitySetSapTable(const char *, char *);
SNMPCallback store_sccpEntitySetSapTable;
void refresh_sccpEntitySetSapTable(void);
FindVarMethod var_sccpConcernedAreaTable;
void parse_sccpConcernedAreaTable(const char *, char *);
SNMPCallback store_sccpConcernedAreaTable;
void refresh_sccpConcernedAreaTable(void);
FindVarMethod var_sccpRemoteSCCPTable;
void parse_sccpRemoteSCCPTable(const char *, char *);
SNMPCallback store_sccpRemoteSCCPTable;
void refresh_sccpRemoteSCCPTable(void);
FindVarMethod var_sccpGtConversionRuleTable;
void parse_sccpGtConversionRuleTable(const char *, char *);
SNMPCallback store_sccpGtConversionRuleTable;
void refresh_sccpGtConversionRuleTable(void);
FindVarMethod var_sccpAddressInfoTable;
void parse_sccpAddressInfoTable(const char *, char *);
SNMPCallback store_sccpAddressInfoTable;
void refresh_sccpAddressInfoTable(void);
FindVarMethod var_sccpGtTranslatorTable;
void parse_sccpGtTranslatorTable(const char *, char *);
SNMPCallback store_sccpGtTranslatorTable;
void refresh_sccpGtTranslatorTable(void);
FindVarMethod var_sccpGtRuleTable;
void parse_sccpGtRuleTable(const char *, char *);
SNMPCallback store_sccpGtRuleTable;
void refresh_sccpGtRuleTable(void);
FindVarMethod var_sccpSrvtTable;
void parse_sccpSrvtTable(const char *, char *);
SNMPCallback store_sccpSrvtTable;
void refresh_sccpSrvtTable(void);

WriteMethod write_sccpNetworkEntityAlarmStatus;
WriteMethod write_sccpVersion;
WriteMethod write_sccpLUDTandLUDTSSupported;
WriteMethod write_sccpCoordChangeTimer;
WriteMethod write_sccpIgnoreSSTTimer;
WriteMethod write_sccpMaxStatInfoTimer;
WriteMethod write_sccpNetworkEntityName;
WriteMethod write_sccpRowStatus;
WriteMethod write_sccpSapNameRowStatus;
WriteMethod write_sccpAccessPointAlarmStatus;
WriteMethod write_sccpSap2Address;
WriteMethod write_sccpUserEntityNames;
WriteMethod write_sccpProviderEntityNames;
WriteMethod write_sccpConcernedAreaPointer;
WriteMethod write_sccpLinkagePointer;
WriteMethod write_sccpSsAvailableAfterSpRestart;
WriteMethod write_sccpAccessPointName;
WriteMethod write_sccpAccessPointRowStatus;
WriteMethod write_sccpAttackTimerValue;
WriteMethod write_sccpDecayTimerValue;
WriteMethod write_sccpNrOfRestrictionLevels;
WriteMethod write_sccpNrOfSubLevels;
WriteMethod write_sccpCLS;
WriteMethod write_sccpCongestionTimerValue;
WriteMethod write_sccpp;
WriteMethod write_sccpImportanceLevelCR;
WriteMethod write_sccpImportanceLevelCC;
WriteMethod write_sccpImportanceLevelCREF;
WriteMethod write_sccpImportanceLevelDT1;
WriteMethod write_sccpImportanceLevelDT2;
WriteMethod write_sccpImportanceLevelAK;
WriteMethod write_sccpImportanceLevelIT;
WriteMethod write_sccpImportanceLevelED;
WriteMethod write_sccpImportanceLevelEA;
WriteMethod write_sccpImportanceLevelRSR;
WriteMethod write_sccpImportanceLevelRSC;
WriteMethod write_sccpImportanceLevelERR;
WriteMethod write_sccpImportanceLevelRLC;
WriteMethod write_sccpImportanceLevelRLSD;
WriteMethod write_sccpImportanceLevelUDT;
WriteMethod write_sccpImportanceLevelUDTS;
WriteMethod write_sccpImportanceLevelXUDT;
WriteMethod write_sccpImportanceLevelXUDTS;
WriteMethod write_sccpImportanceLevelLUDT;
WriteMethod write_sccpImportanceLevelLUDTS;
WriteMethod write_sccpRLM;
WriteMethod write_sccpRSLM;
WriteMethod write_sccpLinkageConcernedAreaPointer;
WriteMethod write_sccpLowerLimitForSegmentation;
WriteMethod write_sccpUpperLimitForSegmentation;
WriteMethod write_sccpLinkageName;
WriteMethod write_sccpLinkageRowStatus;
WriteMethod write_sccpSclcAlarmStatus;
WriteMethod write_sccpSclcAdministrativeState;
WriteMethod write_sccpSclcOperationalSystemType;
WriteMethod write_sccpInitialValueReassTimer;
WriteMethod write_sccpSclcName;
WriteMethod write_sccpSclcRowStatus;
WriteMethod write_sccpCoProtocolMachineId;
WriteMethod write_sccpScocAdministrativeState;
WriteMethod write_sccpScocOperationalSystemType;
WriteMethod write_sccpScocName;
WriteMethod write_sccpScocRowStatus;
WriteMethod write_sccpScrcId;
WriteMethod write_sccpScrcAlarmStatus;
WriteMethod write_sccpScrcName;
WriteMethod write_sccpScrcRowStatus;
WriteMethod write_sccpSharingMode;
WriteMethod write_sccpLoadSharingAlgPointer;
WriteMethod write_sccpEntitySetName;
WriteMethod write_sccpEntitySetType;
WriteMethod write_sccpEntitySetSsn;
WriteMethod write_sccpEntitySetRowStatus;
WriteMethod write_sccpEntitySetSapType;
WriteMethod write_sccpEntitySetSapPointer;
WriteMethod write_sccpEntitySetSapRowStatus;
WriteMethod write_sccpRemoteSCCPMTPAccessPoint;
WriteMethod write_sccpRemoteSCCPName;
WriteMethod write_sccpRemoteSCCPRowStatus;
WriteMethod write_sccpGtNewEncodingScheme;
WriteMethod write_sccpGtNewNatureOfAddress;
WriteMethod write_sccpGtNewNumberingPlan;
WriteMethod write_sccpGtNewTranslationType;
WriteMethod write_sccpGtConversionRuleName;
WriteMethod write_sccpGtConversionRuleRowStatus;
WriteMethod write_sccpAddressInfoOperation;
WriteMethod write_sccpAddressInfoAddressElement;
WriteMethod write_sccpAddressInfoNrOfAddressElements;
WriteMethod write_sccpAddressInfoRowStatus;
WriteMethod write_sccpGtIndicator;
WriteMethod write_sccpGtNatureOfAddress;
WriteMethod write_sccpGtNumberingPlan;
WriteMethod write_sccpGtTranslationType;
WriteMethod write_sccpGtTranslatorAdministrativeState;
WriteMethod write_sccpGtTranslatorName;
WriteMethod write_sccpGtTranslatorRowStatus;
WriteMethod write_sccpGtRuleAdministrativeState;
WriteMethod write_sccpGtAddressInformation;
WriteMethod write_sccpGtConvRulePointer;
WriteMethod write_sccpGtEncodingScheme;
WriteMethod write_sccpEntitySetPointer;
WriteMethod write_sccpGtRuleName;
WriteMethod write_sccpGtRuleRowStatus;
WriteMethod write_sccpDSRVT;
WriteMethod write_sccpNSRVT;
WriteMethod write_sccpSrvtName;
WriteMethod write_sccpAdministrativeState;
WriteMethod write_sccpTraceRequested;
WriteMethod write_sccpThreshold;
WriteMethod write_sccpMtpBackwardRoutingRequested;
WriteMethod write_sccpOriginalGT;
WriteMethod write_sccpInfoRequest;
WriteMethod write_sccpReturnUnknownParams;
WriteMethod write_sccpRouteTestRowStatus;

#endif				/* __LOCAL_SCCPMIB_H__ */
