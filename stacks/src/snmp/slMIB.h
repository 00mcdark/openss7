/*****************************************************************************

 @(#) $Id: slMIB.h,v 0.9.2.1 2008-12-31 16:09:08 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-31 16:09:08 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: slMIB.h,v $
 Revision 0.9.2.1  2008-12-31 16:09:08  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_SLMIB_H__
#define __LOCAL_SLMIB_H__

#ident "@(#) $RCSfile: slMIB.h,v $ $Name: OpenSS7-0_9_2 $($Revision: 0.9.2.1 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct slMIB_data {
	uint slMIB_request;
	uint32_t slSdtNextIndex;
	uint32_t slSdlNextIndex;
};
struct slProfileTable_data {
	uint slProfileTable_request;
	uint slProfileTable_refs;
	uint8_t *slProfileId;
	int slProfileIdLen;
	int32_t slProfileTransmissionRate;
	int32_t slProfileErrorCorrectionMethod;
	oid *slProfileProtocolVariant;
	int slProfileProtocolVariantLen;
	int32_t slProfileTimerT1;
	int32_t slProfileTimerT2;
	int32_t slProfileTimerT2L;
	int32_t slProfileTimerT2H;
	int32_t slProfileTimerT3;
	int32_t slProfileTimerT4N;
	int32_t slProfileTimerT4E;
	int32_t slProfileTimerT5;
	int32_t slProfileTimerT6;
	int32_t slProfileTimerT7;
	uint32_t slProfileTbOnset1;
	uint32_t slProfileTbAbate1;
	uint32_t slProfileNumberOfThresholdLevels;
	int32_t slProfileCongestionCounting;
	int32_t slProfileCongestionReportingBaseObject;
	uint32_t slProfileLoopDelay;
	uint8_t *slProfileName;
	int slProfileNameLen;
	uint32_t slProfileTbOnset2;
	uint32_t slProfileTbAbate2;
	uint32_t slProfileTbOnset3;
	uint32_t slProfileTbAbate3;
	uint32_t slProfileTbDiscard1;
	uint32_t slProfileTbDiscard2;
	uint32_t slProfileTbDiscard3;
	int32_t slProfileTimerTx;
	int32_t slProfileTimerTy;
	uint32_t slProfileNumberOfCongestionStates;
	uint32_t slProfileInitialLevelOfCongestion;
	uint32_t slProfileMaxMSUsRetransN1;
	uint32_t slProfileMaxOctRetransN2;
	uint32_t slProfileReceiveCongestionThresholdOnset;
	uint32_t slProfileReceiveCongestionThresholdAbate;
	uint32_t slProfileReceiveCongestionThresholdDiscard;
	uint32_t slProfileM;
	int32_t slProfileRowStatus;
};
struct slTable_data {
	uint slTable_request;
	uint slTable_refs;
	uint32_t slId;
	uint32_t slMaxCapacitySL;
	uint8_t *slProceduralStatus;
	int slProceduralStatusLen;
	uint8_t *slProfilePointer;
	int slProfilePointerLen;
	uint8_t *slSignTermPointer;
	int slSignTermPointerLen;
	uint8_t *slSignDataLinkTpPointer;
	int slSignDataLinkTpPointerLen;
	int32_t slReplaceSt;
	int32_t slCongestionLevel;
	uint32_t slRelatedLinkGroupNumber;
	uint32_t slSdlList;
	uint8_t *slName;
	int slNameLen;
	uint32_t slSdtList;
	int32_t slRowStatus;
};
struct slSdlListTable_data {
	uint slSdlListTable_request;
	uint slSdlListTable_refs;
	uint32_t slId;
	uint32_t slSdlListId;
	uint8_t *slSdlListPointer;
	int slSdlListPointerLen;
	int32_t slSdlListRowStatus;
};
struct slSdtListTable_data {
	uint slSdtListTable_request;
	uint slSdtListTable_refs;
	uint32_t slId;
	uint32_t slSdtListId;
	uint8_t *slSdtListPointer;
	int slSdtListPointerLen;
	int32_t slSdtListRowStatus;
};
struct slNbTable_data {
	uint slNbTable_request;
	uint slNbTable_refs;
	uint8_t *slSdtProfileId;
	int slSdtProfileIdLen;
	int32_t slNbTransmissionRate;
	uint32_t slNbTimerT8;
	uint32_t slNbTin;
	uint32_t slNbTie;
	uint32_t slNbT;
	uint32_t slNbD;
	uint32_t slNbTe;
	uint32_t slNbDe;
	uint32_t slNbUe;
	uint32_t slNbN;
	uint32_t slNbm;
	uint32_t slNbb;
	int32_t slNbf;
	int32_t slNbRowStatus;
};
struct slSaalTable_data {
	uint slSaalTable_request;
	uint slSaalTable_refs;
	uint8_t *slSdtProfileId;
	int slSdtProfileIdLen;
	int32_t slSaalBufferRelease;
	uint32_t slSaalMaxCc;
	uint32_t slSaalMaxNrp;
	uint32_t slSaalMaxInformationFieldLength;
	uint32_t slSaalMaxLengthSscopUuField;
	uint32_t slSaalMaxPd;
	uint32_t slSaalMaxSscopCreditToPeer;
	uint32_t slSaalMaxStat;
	uint32_t slSaalN1;
	int32_t slSaalNniLayerManagementProvingState;
	int32_t slSaalNniLayerManagementTimerNoCredit;
	int32_t slSaalNniLayerManagementTimerRepeatSrec;
	int32_t slSaalNniTimerT1;
	int32_t slSaalNniTimerT2;
	int32_t slSaalNniTimerT3;
	int32_t slSaalSscopTimerCc;
	int32_t slSaalSscopTimerIdle;
	int32_t slSaalSscopTimerKeepAlive;
	int32_t slSaalSscopTimerNoResponse;
	int32_t slSaalSscopTimerPoll;
	uint32_t slSaalTransmissionRateIntervalLower;
	uint32_t slSaalTransmissionRateIntervalUpper;
	uint32_t slSaalEgressTransmissionRateIntervalLower;
	uint32_t slSaalEgressTransmissionRateIntervalUpper;
	int32_t slSaalPollAfterRetransmission;
	int32_t slSaalRowStatus;
};
struct slM2paTable_data {
	uint slM2paTable_request;
	uint slM2paTable_refs;
	uint8_t *slSdtProfileId;
	int slSdtProfileIdLen;
	uint32_t slM2paN1;
	int32_t slM2paProving;
	int32_t slM2paManagementProvingState;
	uint32_t slM2paLoopDelayLower;
	uint32_t slM2paLoopDelayUpper;
	uint32_t slM2paTransmissionRateIntervalLower;
	uint32_t slM2paTransmissionRateIntervalUpper;
	int32_t slM2paSctpNoDelay;
	uint32_t slM2paSctpMaxseg;
	uint32_t slM2paSctpHeartbeatItvl;
	int32_t slM2paSctpHeartbeat;
	uint32_t slM2paSctpRtoInitial;
	uint32_t slM2paSctpRtoMin;
	uint32_t slM2paSctpRtoMax;
	uint32_t slM2paSctpPathMaxRetrans;
	uint32_t slM2paSctpCookieLife;
	uint32_t slM2paSctpCookieInc;
	uint32_t slM2paSctpMaxInitRetries;
	uint32_t slM2paSctpMaxBurst;
	uint32_t slM2paSctpAssocMaxRetrans;
	uint32_t slM2paSctpSackDelay;
	uint32_t slM2paSctpLifetime;
	uint32_t slM2paProvingAttempts;
	int32_t slM2paRowStatus;
};
struct slSdtTable_data {
	uint slSdtTable_request;
	uint slSdtTable_refs;
	uint32_t slSdtId;
	int32_t slSdtAdministrativeState;
	int32_t slSdtOperationalState;
	int32_t slSdtUsageState;
	uint8_t *slSdtProceduralStatus;
	int slSdtProceduralStatusLen;
	uint8_t *slSdtAvailabilityStatus;
	int slSdtAvailabilityStatusLen;
	oid *slSdtEquipmentPointer;
	int slSdtEquipmentPointerLen;
	uint8_t *slSdtName;
	int slSdtNameLen;
	uint8_t *slSdtProfilePointer;
	int slSdtProfilePointerLen;
	int32_t slSdtRowStatus;
};
struct slSdlTable_data {
	uint slSdlTable_request;
	uint slSdlTable_refs;
	uint32_t slSdlId;
	uint8_t *slSdlAdjPc;
	int slSdlAdjPcLen;
	int32_t slSdlTransmissionRate;
	uint32_t slSdlLoopDelay;
	int32_t slSdlOperationalState;
	oid *slSdlEquipmentPointer;
	int slSdlEquipmentPointerLen;
	int32_t slSdlCIC;
	uint8_t *slSdlName;
	int slSdlNameLen;
	uint8_t *slSdlStmChannel;
	int slSdlStmChannelLen;
	oid *slSdlVcTTpPointer;
	int slSdlVcTTpPointerLen;
	int32_t slSdlRowStatus;
};

/* storage declarations */
extern struct slMIB_data *slMIBStorage;
extern struct header_complex_index *slProfileTableStorage;
extern struct header_complex_index *slTableStorage;
extern struct header_complex_index *slSdlListTableStorage;
extern struct header_complex_index *slSdtListTableStorage;
extern struct header_complex_index *slNbTableStorage;
extern struct header_complex_index *slSaalTableStorage;
extern struct header_complex_index *slM2paTableStorage;
extern struct header_complex_index *slSdtTableStorage;
extern struct header_complex_index *slSdlTableStorage;

/* enum definitions from the covered mib sections */

#define SLPROFILETRANSMISSIONRATE_KBITS4POINT8   0
#define SLPROFILETRANSMISSIONRATE_KBITS56        1
#define SLPROFILETRANSMISSIONRATE_KBITS64        2
#define SLPROFILETRANSMISSIONRATE_KBITS1544      3
#define SLPROFILETRANSMISSIONRATE_KBITS2048      4

#define SLPROFILEERRORCORRECTIONMETHOD_BASICRETR 0
#define SLPROFILEERRORCORRECTIONMETHOD_PREVCYCLRETR 1

#define SLPROFILECONGESTIONCOUNTING_OCTET        0
#define SLPROFILECONGESTIONCOUNTING_MESSAGE      1

#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_ROUTESET 0
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_LINKSETOFCONGESTEDROUTESET 1
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_LINKOFCONGESTEDROUTESET 2
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_CONGESTEDLINKOFCONGESTEDROUTE 3

#define SLPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLPROCEDURALSTATUS_NOTINITIALIZED        1
#define SLPROCEDURALSTATUS_INITIALIZING          2
#define SLPROCEDURALSTATUS_REPORTING             3
#define SLPROCEDURALSTATUS_TERMINATING           4

#define SLREPLACEST_SUCCESS                      0
#define SLREPLACEST_UNSUCCESSFUL                 1
#define SLREPLACEST_NOTPERFORMED                 2
#define SLREPLACEST_LINKALREADYINHIBITED         3
#define SLREPLACEST_LINKNOTINHIBITED             4
#define SLREPLACEST_WRONGCLASSREFERENCED         5
#define SLREPLACEST_SIGNTERMNONEXISTING          6
#define SLREPLACEST_SIGNTERMALREADYREFERENCED    7
#define SLREPLACEST_WRONGSIGNLINKTPSTATUS        8

#define SLCONGESTIONLEVEL_NONE                   0
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL1       1
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL2       2
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL3       3

#define SLNBTRANSMISSIONRATE_KBITS4POINT8        0
#define SLNBTRANSMISSIONRATE_KBITS56             1
#define SLNBTRANSMISSIONRATE_KBITS64             2
#define SLNBTRANSMISSIONRATE_KBITS1544           3
#define SLNBTRANSMISSIONRATE_KBITS2048           4

#define SLNBF_ONE                                0
#define SLNBF_SHARED                             1
#define SLNBF_TWO                                2
#define SLNBF_THREE                              3
#define SLNBF_FOUR                               4
#define SLNBF_FIVE                               5
#define SLNBF_SIX                                6

#define SLSAALBUFFERRELEASE_TRUE                 1
#define SLSAALBUFFERRELEASE_FALSE                2

#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_NORMAL 0
#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_EMERGENCY 1
#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_NEUTRAL 2

#define SLSAALPOLLAFTERRETRANSMISSION_TRUE       1
#define SLSAALPOLLAFTERRETRANSMISSION_FALSE      2

#define SLM2PAPROVING_TRUE                       1
#define SLM2PAPROVING_FALSE                      2

#define SLM2PAMANAGEMENTPROVINGSTATE_NORMAL      0
#define SLM2PAMANAGEMENTPROVINGSTATE_EMERGENCY   1
#define SLM2PAMANAGEMENTPROVINGSTATE_NEUTRAL     2

#define SLM2PASCTPNODELAY_TRUE                   1
#define SLM2PASCTPNODELAY_FALSE                  2

#define SLM2PASCTPHEARTBEAT_TRUE                 1
#define SLM2PASCTPHEARTBEAT_FALSE                2

#define SLSDTADMINISTRATIVESTATE_LOCKED          0
#define SLSDTADMINISTRATIVESTATE_UNLOCKED        1
#define SLSDTADMINISTRATIVESTATE_SHUTTINGDOWN    2

#define SLSDTOPERATIONALSTATE_DISABLED           0
#define SLSDTOPERATIONALSTATE_ENABLED            1

#define SLSDTUSAGESTATE_IDLE                     0
#define SLSDTUSAGESTATE_ACTIVE                   1
#define SLSDTUSAGESTATE_BUSY                     2

#define SLSDTPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLSDTPROCEDURALSTATUS_NOTINITIALIZED     1
#define SLSDTPROCEDURALSTATUS_INITIALIZING       2
#define SLSDTPROCEDURALSTATUS_REPORTING          3
#define SLSDTPROCEDURALSTATUS_TERMINATING        4

#define SLSDTAVAILABILITYSTATUS_INTEST           0
#define SLSDTAVAILABILITYSTATUS_FAILED           1
#define SLSDTAVAILABILITYSTATUS_POWEROFF         2
#define SLSDTAVAILABILITYSTATUS_OFFLINE          3
#define SLSDTAVAILABILITYSTATUS_OFFDUTY          4
#define SLSDTAVAILABILITYSTATUS_DEPENDENCY       5
#define SLSDTAVAILABILITYSTATUS_DEGRADED         6
#define SLSDTAVAILABILITYSTATUS_NOTINSTALLED     7
#define SLSDTAVAILABILITYSTATUS_LOGFULL          8

#define SLSDLTRANSMISSIONRATE_KBITS4POINT8       0
#define SLSDLTRANSMISSIONRATE_KBITS56            1
#define SLSDLTRANSMISSIONRATE_KBITS64            2
#define SLSDLTRANSMISSIONRATE_KBITS1544          3
#define SLSDLTRANSMISSIONRATE_KBITS2048          4

#define SLSDLOPERATIONALSTATE_DISABLED           0
#define SLSDLOPERATIONALSTATE_ENABLED            1

/* function prototypes */
void init_slMIB(void);
void deinit_slMIB(void);
int term_slMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_slMIB;
void parse_slMIB(const char *, char *);
SNMPCallback store_slMIB;
void refresh_slMIB(void);
FindVarMethod var_slProfileTable;
int slProfileTable_add(struct slProfileTable_data *);
int slProfileTable_del(struct slProfileTable_data **);
void parse_slProfileTable(const char *, char *);
SNMPCallback store_slProfileTable;
void refresh_slProfileTable(void);
FindVarMethod var_slTable;
int slTable_add(struct slTable_data *);
int slTable_del(struct slTable_data **);
void parse_slTable(const char *, char *);
SNMPCallback store_slTable;
void refresh_slTable(void);
FindVarMethod var_slSdlListTable;
int slSdlListTable_add(struct slSdlListTable_data *);
int slSdlListTable_del(struct slSdlListTable_data **);
void parse_slSdlListTable(const char *, char *);
SNMPCallback store_slSdlListTable;
void refresh_slSdlListTable(void);
FindVarMethod var_slSdtListTable;
int slSdtListTable_add(struct slSdtListTable_data *);
int slSdtListTable_del(struct slSdtListTable_data **);
void parse_slSdtListTable(const char *, char *);
SNMPCallback store_slSdtListTable;
void refresh_slSdtListTable(void);
FindVarMethod var_slNbTable;
int slNbTable_add(struct slNbTable_data *);
int slNbTable_del(struct slNbTable_data **);
void parse_slNbTable(const char *, char *);
SNMPCallback store_slNbTable;
void refresh_slNbTable(void);
FindVarMethod var_slSaalTable;
int slSaalTable_add(struct slSaalTable_data *);
int slSaalTable_del(struct slSaalTable_data **);
void parse_slSaalTable(const char *, char *);
SNMPCallback store_slSaalTable;
void refresh_slSaalTable(void);
FindVarMethod var_slM2paTable;
int slM2paTable_add(struct slM2paTable_data *);
int slM2paTable_del(struct slM2paTable_data **);
void parse_slM2paTable(const char *, char *);
SNMPCallback store_slM2paTable;
void refresh_slM2paTable(void);
FindVarMethod var_slSdtTable;
int slSdtTable_add(struct slSdtTable_data *);
int slSdtTable_del(struct slSdtTable_data **);
void parse_slSdtTable(const char *, char *);
SNMPCallback store_slSdtTable;
void refresh_slSdtTable(void);
FindVarMethod var_slSdlTable;
int slSdlTable_add(struct slSdlTable_data *);
int slSdlTable_del(struct slSdlTable_data **);
void parse_slSdlTable(const char *, char *);
SNMPCallback store_slSdlTable;
void refresh_slSdlTable(void);

WriteMethod write_slProfileErrorCorrectionMethod;
WriteMethod write_slProfileProtocolVariant;
WriteMethod write_slProfileTimerT1;
WriteMethod write_slProfileTimerT2;
WriteMethod write_slProfileTimerT2L;
WriteMethod write_slProfileTimerT2H;
WriteMethod write_slProfileTimerT3;
WriteMethod write_slProfileTimerT4N;
WriteMethod write_slProfileTimerT4E;
WriteMethod write_slProfileTimerT5;
WriteMethod write_slProfileTimerT6;
WriteMethod write_slProfileTimerT7;
WriteMethod write_slProfileTbOnset1;
WriteMethod write_slProfileTbAbate1;
WriteMethod write_slProfileNumberOfThresholdLevels;
WriteMethod write_slProfileCongestionCounting;
WriteMethod write_slProfileCongestionReportingBaseObject;
WriteMethod write_slProfileLoopDelay;
WriteMethod write_slProfileName;
WriteMethod write_slProfileTbOnset2;
WriteMethod write_slProfileTbAbate2;
WriteMethod write_slProfileTbOnset3;
WriteMethod write_slProfileTbAbate3;
WriteMethod write_slProfileTbDiscard1;
WriteMethod write_slProfileTbDiscard2;
WriteMethod write_slProfileTbDiscard3;
WriteMethod write_slProfileTimerTx;
WriteMethod write_slProfileTimerTy;
WriteMethod write_slProfileNumberOfCongestionStates;
WriteMethod write_slProfileInitialLevelOfCongestion;
WriteMethod write_slProfileMaxMSUsRetransN1;
WriteMethod write_slProfileMaxOctRetransN2;
WriteMethod write_slProfileReceiveCongestionThresholdOnset;
WriteMethod write_slProfileReceiveCongestionThresholdAbate;
WriteMethod write_slProfileReceiveCongestionThresholdDiscard;
WriteMethod write_slProfileRowStatus;
WriteMethod write_slMaxCapacitySL;
WriteMethod write_slProfilePointer;
WriteMethod write_slSignTermPointer;
WriteMethod write_slSignDataLinkTpPointer;
WriteMethod write_slReplaceSt;
WriteMethod write_slRelatedLinkGroupNumber;
WriteMethod write_slSdlList;
WriteMethod write_slName;
WriteMethod write_slSdtList;
WriteMethod write_slRowStatus;
WriteMethod write_slSdlListPointer;
WriteMethod write_slSdlListRowStatus;
WriteMethod write_slSdtListPointer;
WriteMethod write_slSdtListRowStatus;
WriteMethod write_slNbTransmissionRate;
WriteMethod write_slNbf;
WriteMethod write_slNbRowStatus;
WriteMethod write_slSaalBufferRelease;
WriteMethod write_slSaalMaxCc;
WriteMethod write_slSaalMaxNrp;
WriteMethod write_slSaalMaxInformationFieldLength;
WriteMethod write_slSaalMaxLengthSscopUuField;
WriteMethod write_slSaalMaxPd;
WriteMethod write_slSaalMaxSscopCreditToPeer;
WriteMethod write_slSaalMaxStat;
WriteMethod write_slSaalN1;
WriteMethod write_slSaalNniLayerManagementProvingState;
WriteMethod write_slSaalNniLayerManagementTimerNoCredit;
WriteMethod write_slSaalNniLayerManagementTimerRepeatSrec;
WriteMethod write_slSaalNniTimerT1;
WriteMethod write_slSaalNniTimerT2;
WriteMethod write_slSaalNniTimerT3;
WriteMethod write_slSaalSscopTimerCc;
WriteMethod write_slSaalSscopTimerIdle;
WriteMethod write_slSaalSscopTimerKeepAlive;
WriteMethod write_slSaalSscopTimerNoResponse;
WriteMethod write_slSaalSscopTimerPoll;
WriteMethod write_slSaalTransmissionRateIntervalLower;
WriteMethod write_slSaalTransmissionRateIntervalUpper;
WriteMethod write_slSaalEgressTransmissionRateIntervalLower;
WriteMethod write_slSaalEgressTransmissionRateIntervalUpper;
WriteMethod write_slSaalPollAfterRetransmission;
WriteMethod write_slSaalRowStatus;
WriteMethod write_slM2paN1;
WriteMethod write_slM2paProving;
WriteMethod write_slM2paManagementProvingState;
WriteMethod write_slM2paLoopDelayLower;
WriteMethod write_slM2paLoopDelayUpper;
WriteMethod write_slM2paTransmissionRateIntervalLower;
WriteMethod write_slM2paTransmissionRateIntervalUpper;
WriteMethod write_slM2paSctpNoDelay;
WriteMethod write_slM2paSctpMaxseg;
WriteMethod write_slM2paSctpHeartbeatItvl;
WriteMethod write_slM2paSctpHeartbeat;
WriteMethod write_slM2paSctpRtoInitial;
WriteMethod write_slM2paSctpRtoMin;
WriteMethod write_slM2paSctpRtoMax;
WriteMethod write_slM2paSctpPathMaxRetrans;
WriteMethod write_slM2paSctpCookieLife;
WriteMethod write_slM2paSctpCookieInc;
WriteMethod write_slM2paSctpMaxInitRetries;
WriteMethod write_slM2paSctpMaxBurst;
WriteMethod write_slM2paSctpAssocMaxRetrans;
WriteMethod write_slM2paSctpSackDelay;
WriteMethod write_slM2paSctpLifetime;
WriteMethod write_slM2paProvingAttempts;
WriteMethod write_slM2paRowStatus;
WriteMethod write_slSdtAdministrativeState;
WriteMethod write_slSdtEquipmentPointer;
WriteMethod write_slSdtName;
WriteMethod write_slSdtProfilePointer;
WriteMethod write_slSdtRowStatus;
WriteMethod write_slSdlAdjPc;
WriteMethod write_slSdlTransmissionRate;
WriteMethod write_slSdlLoopDelay;
WriteMethod write_slSdlOperationalState;
WriteMethod write_slSdlEquipmentPointer;
WriteMethod write_slSdlCIC;
WriteMethod write_slSdlName;
WriteMethod write_slSdlStmChannel;
WriteMethod write_slSdlVcTTpPointer;
WriteMethod write_slSdlRowStatus;
#endif				/* __LOCAL_SLMIB_H__ */
