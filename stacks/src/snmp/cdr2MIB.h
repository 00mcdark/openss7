/*****************************************************************************

 @(#) $Id: cdr2MIB.h,v 0.9.2.3 2008-12-31 16:04:43 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-31 16:04:43 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: cdr2MIB.h,v $
 Revision 0.9.2.3  2008-12-31 16:04:43  brian
 - updated mibs

 Revision 0.9.2.2  2008-12-24 13:08:22  brian
 - building ss7confd

 *****************************************************************************/

#ifndef __LOCAL_CDR2MIB_H__
#define __LOCAL_CDR2MIB_H__

#ident "@(#) $RCSfile: cdr2MIB.h,v $ $Name:  $($Revision: 0.9.2.3 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct cdr2MIB_data {
	uint cdr2MIB_request;

};
struct callDetailDataTable_data {
	uint callDetailDataTable_request;
	uint callDetailDataTable_refs;
	uint8_t *callDetailDataId;
	int callDetailDataIdLen;
};
struct simpleUsageMeteringControlTable_data {
	uint simpleUsageMeteringControlTable_request;
	uint simpleUsageMeteringControlTable_refs;
	uint8_t *controlObjectId;
	int controlObjectIdLen;
	uint8_t *creationTriggerList;
	int creationTriggerListLen;
	int32_t simpleUsageMeteringControlEntryStatus;
};
struct configurableSimpleUsageMeteringControlTable_data {
	uint configurableSimpleUsageMeteringControlTable_request;
	uint configurableSimpleUsageMeteringControlTable_refs;
	uint8_t *controlObjectId;
	int controlObjectIdLen;
	int32_t samplingRate;
	uint8_t *configurationMask;
	int configurationMaskLen;
	int32_t configurationRowStatus;
};
struct blockGeneratingLogTable_data {
	uint blockGeneratingLogTable_request;
	uint blockGeneratingLogTable_refs;
	uint8_t *logId;
	int logIdLen;
	int32_t blockGeneratingLogMaxBlockSize;
	int32_t blockGeneratingLogMaxTimeInterval;
	int32_t blockGeneratingLogStorageType;
	int32_t blockGeneratingLogRowStatus;
};
struct fileGeneratingLogTable_data {
	uint fileGeneratingLogTable_request;
	uint fileGeneratingLogTable_refs;
	uint8_t *logId;
	int logIdLen;
	uint8_t *timesOfDay;
	int timesOfDayLen;
	int32_t periodicTrigger;
	int32_t fileGeneratingLogStorageType;
	int32_t fileGeneratingLogEntryStatus;
};
struct callDetailLogRecordTable_data {
	uint callDetailLogRecordTable_request;
	uint callDetailLogRecordTable_refs;
	uint8_t *logId;
	int logIdLen;
	uint8_t *logRecordId;
	int logRecordIdLen;
	uint8_t *networkProviderId;
	int networkProviderIdLen;
	int32_t recordType;
	uint8_t *seizureTime;
	int seizureTimeLen;
	uint8_t *answerTime;
	int answerTimeLen;
	uint8_t *partialTime;
	int partialTimeLen;
	uint8_t *eventTime;
	int eventTimeLen;
	uint8_t *callingPartyNumber;
	int callingPartyNumberLen;
	uint8_t *calledPartyNumber;
	int calledPartyNumberLen;
	uint8_t *redirectingNumber;
	int redirectingNumberLen;
	uint8_t *redirectionNumber;
	int redirectionNumberLen;
	uint8_t *originalCalledNumber;
	int originalCalledNumberLen;
	uint8_t *callingPartyNumberNotScreened;
	int callingPartyNumberNotScreenedLen;
	uint8_t *operatorSpecific1Number;
	int operatorSpecific1NumberLen;
	uint8_t *operatorSpecific2Number;
	int operatorSpecific2NumberLen;
	uint8_t *operatorSpecific3Number;
	int operatorSpecific3NumberLen;
	uint8_t *bearerService;
	int bearerServiceLen;
	int32_t participantServiceUser;
	uint8_t *callIdentificationNumber;
	int callIdentificationNumberLen;
	uint8_t *supplementaryServices;
	int supplementaryServicesLen;
	int32_t immediateNotificationForUsageMetering;
	uint8_t *cause;
	int causeLen;
	uint8_t *personalUserId;
	int personalUserIdLen;
	int32_t chargedParticipant;
	uint8_t *chargedDirectoryNumber;
	int chargedDirectoryNumberLen;
	int32_t percentageToBeBilled;
	uint8_t *accountCodeInput;
	int accountCodeInputLen;
	uint8_t *iNServiceCode;
	int iNServiceCodeLen;
	uint8_t *queueTimeStamp;
	int queueTimeStampLen;
	int32_t queueDuration;
	uint8_t *serviceSpecificINInformation;
	int serviceSpecificINInformationLen;
	int32_t partialRecordNumber;
	int32_t partialRecordReason;
	uint8_t *exchangeInfo;
	int exchangeInfoLen;
	uint8_t *relatedCallNumber;
	int relatedCallNumberLen;
	uint8_t *cDRPurpose;
	int cDRPurposeLen;
	uint8_t *physicalLineCode;
	int physicalLineCodeLen;
	uint8_t *receivedDigits;
	int receivedDigitsLen;
	uint8_t *operatorSpecific1AdditionalNumber;
	int operatorSpecific1AdditionalNumberLen;
	uint8_t *operatorSpecific2AdditionalNumber;
	int operatorSpecific2AdditionalNumberLen;
	uint8_t *operatorSpecific3AdditionalNumber;
	int operatorSpecific3AdditionalNumberLen;
	uint8_t *callingPartyCategory;
	int callingPartyCategoryLen;
	int32_t callingPartyType;
	uint8_t *chargeInformation;
	int chargeInformationLen;
	uint8_t *progress;
	int progressLen;
	uint8_t *accessDelivery;
	int accessDeliveryLen;
	uint8_t *trunkGroupOutgoing;
	int trunkGroupOutgoingLen;
	uint8_t *trunkGroupIncoming;
	int trunkGroupIncomingLen;
	uint8_t *fallbackBearerService;
	int fallbackBearerServiceLen;
	uint8_t *teleservice;
	int teleserviceLen;
	int32_t conversationTime;
	int32_t durationTimeACM;
	int32_t durationTimeBAnswer;
	int32_t durationTimeNoBAnswer;
	uint8_t *uUInfo;
	int uUInfoLen;
	uint8_t *standardExtensions;
	int standardExtensionsLen;
	uint8_t *recordExtensions;
	int recordExtensionsLen;
	uint8_t *bPartyCategory;
	int bPartyCategoryLen;
	int32_t iSUPPreferred;
	int32_t networkManagementControls;
	int32_t glare;
	int32_t recordId;
	int32_t dataValidity;
	int32_t callStatus;
	uint8_t *carrierId;
	int carrierIdLen;
	uint8_t *dPC;
	int dPCLen;
	uint8_t *oPC;
	int oPCLen;
};
struct configurableSimpleUsageMeteringControlR2Table_data {
	uint configurableSimpleUsageMeteringControlR2Table_request;
	uint configurableSimpleUsageMeteringControlR2Table_refs;
	uint8_t *controlObjectId;
	int controlObjectIdLen;
	uint8_t *configurationR2Mask;
	int configurationR2MaskLen;
	int32_t configurationR2Status;
};
struct blockGeneratingLogR2Table_data {
	uint blockGeneratingLogR2Table_request;
	uint blockGeneratingLogR2Table_refs;
	uint8_t *logId;
	int logIdLen;
	int32_t blockGeneratingLogVersion;
};
struct callDetailLogRecordR2Table_data {
	uint callDetailLogRecordR2Table_request;
	uint callDetailLogRecordR2Table_refs;
	uint8_t *logId;
	int logIdLen;
	uint8_t *logRecordId;
	int logRecordIdLen;
	struct counter64 sequenceId;
	struct counter64 zoneId;
	struct counter64 recSeqId;
	struct counter64 fileSeqId;
	uint8_t *callId;
	int callIdLen;
	uint8_t *lastUpdate;
	int lastUpdateLen;
	uint8_t *eventOrder;
	int eventOrderLen;
	int32_t status;
	int32_t callType;
	uint8_t *clngPtyNbr;
	int clngPtyNbrLen;
	uint8_t *chargeNbr;
	int chargeNbrLen;
	uint8_t *clldPtyNbr;
	int clldPtyNbrLen;
	int32_t clldPtyNoa;
	uint8_t *origLnInfo;
	int origLnInfoLen;
	uint8_t *ingLrn;
	int ingLrnLen;
	uint8_t *ingCic;
	int ingCicLen;
	int32_t ingCsi;
	uint32_t ingCceId;
	int32_t ingTgProt;
	int32_t ingTgType;
	uint32_t ingTgId;
	uint8_t *ingCallStart;
	int ingCallStartLen;
	uint32_t ingGateId;
	uint32_t ingCardId;
	uint32_t ingSpanId;
	uint32_t ingChanId;
	uint32_t ingIsdnDChan;
	uint32_t ingIsdnCrn;
	uint8_t *ingCreatConnCplt;
	int ingCreatConnCpltLen;
	uint8_t *ingAddrCplt;
	int ingAddrCpltLen;
	uint8_t *ingCallAns;
	int ingCallAnsLen;
	uint8_t *transNbr;
	int transNbrLen;
	uint8_t *termLrn;
	int termLrnLen;
	uint8_t *transCic;
	int transCicLen;
	uint8_t *ingCallRls;
	int ingCallRlsLen;
	uint32_t ingRlsCause;
	uint32_t egrCceId;
	int32_t egrTgProt;
	int32_t egrTgType;
	uint32_t egrTgId;
	uint8_t *egrCallStart;
	int egrCallStartLen;
	uint32_t egrGateId;
	uint32_t egrCardId;
	uint32_t egrSpanId;
	uint32_t egrChanId;
	uint32_t egrIsdnDChan;
	uint32_t egrIsdnCrn;
	uint8_t *egrCreatConnCplt;
	int egrCreatConnCpltLen;
	uint8_t *egrAddrCplt;
	int egrAddrCpltLen;
	uint8_t *egrCallAns;
	int egrCallAnsLen;
	uint8_t *egrCallRls;
	int egrCallRlsLen;
	uint32_t egrRlsCause;
	uint8_t *chkptFirst;
	int chkptFirstLen;
	uint8_t *chkptLast;
	int chkptLastLen;
	uint8_t *ingGateName;
	int ingGateNameLen;
	uint8_t *egrGateName;
	int egrGateNameLen;
	uint8_t *ingTgName;
	int ingTgNameLen;
	uint8_t *egrTgName;
	int egrTgNameLen;
	uint8_t *origGateIp;
	int origGateIpLen;
	uint8_t *termGateIp;
	int termGateIpLen;
	uint8_t *h323ConfId;
	int h323ConfIdLen;
	uint32_t ingCardPort;
	uint32_t ingCardPath;
	uint32_t egrCardPort;
	uint32_t egrCardPath;
	uint32_t ingTg;
	uint32_t egrTg;
	uint8_t *dialedNbr;
	int dialedNbrLen;
	int32_t dialedNoa;
	uint8_t *redirNbr;
	int redirNbrLen;
	int32_t redirNoa;
	int32_t redirInd;
	int32_t redirRsn;
	uint8_t *calledNbr;
	int calledNbrLen;
	int32_t calledNoa;
	int32_t redirRsnOrig;
	uint32_t redirCntr;
	int32_t redirPrsntnInd;
	uint8_t *ingJuris;
	int ingJurisLen;
	uint8_t *egrJuris;
	int egrJurisLen;
	int32_t ingTrunkBearCap;
	int32_t egrTrunkBearCap;
	uint8_t *transNetSelCarr;
	int transNetSelCarrLen;
	uint32_t clngPtyNoa;
	uint8_t *ingRlsCauseIntrnl;
	int ingRlsCauseIntrnlLen;
	uint8_t *egrRlsCauseIntrnl;
	int egrRlsCauseIntrnlLen;
	uint8_t *egrClldNbr;
	int egrClldNbrLen;
	int32_t egrClldNoa;
	uint8_t *egrCnndNbr;
	int egrCnndNbrLen;
	int32_t egrCnndNoa;
	int32_t clngPtyPrsntnInd;
	int32_t ingIri;
	int32_t egrOri;
	uint8_t *ingCallidExtrnl;
	int ingCallidExtrnlLen;
	uint8_t *egrCallidExtrnl;
	int egrCallidExtrnlLen;
	uint8_t *ingChargeInfo;
	int ingChargeInfoLen;
	uint8_t *egrChargeInfo;
	int egrChargeInfoLen;
	uint8_t *ingPrtlInd;
	int ingPrtlIndLen;
	int32_t ingNatfwdCliblkInd;
	int32_t ingNatfwdNtaInd;
	uint8_t *ingLastDvrtLnDigs;
	int ingLastDvrtLnDigsLen;
	int32_t ingLastDvrtLnNoa;
	uint8_t *j7IngAddlPtyCat;
	int j7IngAddlPtyCatLen;
	uint8_t *j7IngChgAreaInfo;
	int j7IngChgAreaInfoLen;
	uint8_t *j7IngFwdCallInd;
	int j7IngFwdCallIndLen;
	uint8_t *j7EgrAddlPtyCat;
	int j7EgrAddlPtyCatLen;
	uint8_t *j7EgrChgAreaInfo;
	int j7EgrChgAreaInfoLen;
	uint8_t *j7EgrBkwCallInd;
	int j7EgrBkwCallIndLen;
	uint8_t *j7CarrInfoXfer;
	int j7CarrInfoXferLen;
	uint8_t *ingSs7GnrcParm;
	int ingSs7GnrcParmLen;
	uint8_t *egrSs7GnrcParm;
	int egrSs7GnrcParmLen;
	uint32_t ingPktsSent;
	uint32_t ingPktsRcvd;
	uint32_t ingPktsLost;
	uint32_t ingPktsXfer;
	uint32_t ingJitter;
	uint32_t ingLtncy;
	uint32_t egrPktsSent;
	uint32_t egrPktsRcvd;
	uint32_t egrPktsLost;
	uint32_t egrPktsXfer;
	uint32_t egrJitter;
	uint32_t egrLtncy;
	uint32_t ingCrctId;
	uint32_t egrCrctId;
	uint32_t ingCodec;
	uint32_t egrCodec;
	uint32_t ingLocGateId;
	uint32_t egrLocGateId;
	uint8_t *ingCasCrctSzr;
	int ingCasCrctSzrLen;
	uint8_t *egrCasCrctSzr;
	int egrCasCrctSzrLen;
	uint8_t *ingZz;
	int ingZzLen;
	uint8_t *egrZz;
	int egrZzLen;
	uint8_t *ingCtryAddrType;
	int ingCtryAddrTypeLen;
	uint8_t *egrCtryAddrType;
	int egrCtryAddrTypeLen;
	uint32_t ingPartition;
	uint32_t egrPartition;
	uint32_t ingClngPtyCat;
	uint32_t ingRlsCauseLctn;
	uint32_t egrRlsCauseLctn;
	uint32_t clldPtyCat;
	uint32_t callDuration;
	uint32_t ingRlsDrctn;
	uint32_t egrRlsDrctn;
	uint8_t *ingAnsLctim;
	int ingAnsLctimLen;
	uint8_t *egrAnsLctim;
	int egrAnsLctimLen;
	uint32_t ingHlcChrsId;
	uint32_t egrHlcChrsId;
	uint32_t ingLlcXferCap;
	uint32_t egrLlcXferCap;
	uint8_t *routeList;
	int routeListLen;
	uint32_t ingPointCode;
	uint32_t egrPointCode;
};

/* storage declarations */
extern struct cdr2MIB_data *cdr2MIBStorage;
extern struct header_complex_index *callDetailDataTableStorage;
extern struct header_complex_index *simpleUsageMeteringControlTableStorage;
extern struct header_complex_index *configurableSimpleUsageMeteringControlTableStorage;
extern struct header_complex_index *blockGeneratingLogTableStorage;
extern struct header_complex_index *fileGeneratingLogTableStorage;
extern struct header_complex_index *callDetailLogRecordTableStorage;
extern struct header_complex_index *configurableSimpleUsageMeteringControlR2TableStorage;
extern struct header_complex_index *blockGeneratingLogR2TableStorage;
extern struct header_complex_index *callDetailLogRecordR2TableStorage;

/* enum definitions from the covered mib sections */

#define CREATIONTRIGGERLIST_SEIZURE              0
#define CREATIONTRIGGERLIST_FIRSTDIGITRECEIVED   1
#define CREATIONTRIGGERLIST_ACMRECEIVED          2
#define CREATIONTRIGGERLIST_ANMRECEIVED          3
#define CREATIONTRIGGERLIST_SUPPLEMENTARYSERVICEINVOCATION 4
#define CREATIONTRIGGERLIST_SUPPLEMENTARYSERVICEINPUT 5

#define CONFIGURATIONMASK_EXCHANGEINFO           0
#define CONFIGURATIONMASK_RELATEDCALLNUMBER      1
#define CONFIGURATIONMASK_ADDITIONALPARTICIPANTINFO 2
#define CONFIGURATIONMASK_CALLINGPARTYCATEGORY   3
#define CONFIGURATIONMASK_CALLINGPARTYTYPE       4
#define CONFIGURATIONMASK_PROGRESS               5
#define CONFIGURATIONMASK_ACCESSDELIVERY         6
#define CONFIGURATIONMASK_TRUNKGROUPOUTGOING     7
#define CONFIGURATIONMASK_TRUNKGROUPINCOMING     8
#define CONFIGURATIONMASK_TELESERVICE            9
#define CONFIGURATIONMASK_STANDARDEXTENSIONS     10
#define CONFIGURATIONMASK_RECORDEXTENSIONS       11
#define CONFIGURATIONMASK_BPARTYCATEGORY         12
#define CONFIGURATIONMASK_ISUPPREFFERRED         13
#define CONFIGURATIONMASK_NETWORKMANAGEMENTCONTROLS 14
#define CONFIGURATIONMASK_GLARE                  15

#define RECORDTYPE_CALL                          0
#define RECORDTYPE_SUPPLSERVICEINPUTRECORD       1

#define PARTICIPANTSERVICEUSER_CALLINGPARTYNUMBER 0
#define PARTICIPANTSERVICEUSER_CALLEDPARTYNUMBER 1
#define PARTICIPANTSERVICEUSER_REDIRECTINGNUMBER 2
#define PARTICIPANTSERVICEUSER_REDIRECTIONNUMBER 3
#define PARTICIPANTSERVICEUSER_ORIGINALCALLEDNUMBER 4
#define PARTICIPANTSERVICEUSER_CALLINGPARTYNUMBERNOTSCREENED 5
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC1NUMBER 6
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC2NUMBER 7
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC3NUMBER 8
#define PARTICIPANTSERVICEUSER_OPERATOR          9
#define PARTICIPANTSERVICEUSER_UNKNOWN           10

#define IMMEDIATENOTIFICATIONFORUSAGEMETERING_TRUE 1
#define IMMEDIATENOTIFICATIONFORUSAGEMETERING_FALSE 2

#define CHARGEDPARTICIPANT_CALLINGPARTYNUMBER    0
#define CHARGEDPARTICIPANT_CALLEDPARTYNUMBER     1
#define CHARGEDPARTICIPANT_REDIRECTINGNUMBER     2
#define CHARGEDPARTICIPANT_REDIRECTIONNUMBER     3
#define CHARGEDPARTICIPANT_ORIGINALCALLEDNUMBER  4
#define CHARGEDPARTICIPANT_CALLINGPARTYNUMBERNOTSCREENED 5
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC1NUMBER 6
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC2NUMBER 7
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC3NUMBER 8
#define CHARGEDPARTICIPANT_OPERATOR              9
#define CHARGEDPARTICIPANT_UNKNOWN               10

#define PARTIALRECORDREASON_TIMELIMIT            0
#define PARTIALRECORDREASON_SERVICECHANGE        1
#define PARTIALRECORDREASON_OVERFLOW             2
#define PARTIALRECORDREASON_NETWORKINTERNALREASONS 3
#define PARTIALRECORDREASON_LASTCDR              4
#define PARTIALRECORDREASON_TIMECHANGE           5

#define CDRPURPOSE_USAGEMETERING                 0
#define CDRPURPOSE_ANALYSIS                      1

#define CALLINGPARTYTYPE_ANALOGUE                0
#define CALLINGPARTYTYPE_CUSTOMERLINK            1
#define CALLINGPARTYTYPE_BASICACCESS             2
#define CALLINGPARTYTYPE_PRIMARYRATEACCESS       3

#define ACCESSDELIVERY_SETUPMESSAGEGENERATED     0

#define ISUPPREFERRED_PREFERRED                  0
#define ISUPPREFERRED_NOTREQUIRED                1
#define ISUPPREFERRED_REQUIRED                   2
#define ISUPPREFERRED_NOTAPPLICABLE              3

#define NETWORKMANAGEMENTCONTROLS_ACC            0
#define NETWORKMANAGEMENTCONTROLS_ADC            1
#define NETWORKMANAGEMENTCONTROLS_CANCELFROM     2
#define NETWORKMANAGEMENTCONTROLS_CANCELREROUTED 3
#define NETWORKMANAGEMENTCONTROLS_CANCELTO       4
#define NETWORKMANAGEMENTCONTROLS_DESTINATIONCODECONTROL 5
#define NETWORKMANAGEMENTCONTROLS_SCR            6
#define NETWORKMANAGEMENTCONTROLS_SKIP           7
#define NETWORKMANAGEMENTCONTROLS_TARFROM        8
#define NETWORKMANAGEMENTCONTROLS_TARTO          9

#define GLARE_ABSENT                             0
#define GLARE_PRESENT                            1

#define DATAVALIDITY_POSSIBLEDUPLICATED          0
#define DATAVALIDITY_REQUIREDDATAMISSING         1
#define DATAVALIDITY_OTHER                       2

#define CALLSTATUS_ANSWERED                      0
#define CALLSTATUS_NOTANSWERED                   1

#define CONFIGURATIONR2MASK_NONE                 0

#define BLOCKGENERATINGLOGVERSION_VERSION1       1
#define BLOCKGENERATINGLOGVERSION_VERSION2       2

/* function prototypes */
void init_cdr2MIB(void);
void deinit_cdr2MIB(void);
int term_cdr2MIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_cdr2MIB;
void parse_cdr2MIB(const char *, char *);
SNMPCallback store_cdr2MIB;
void refresh_cdr2MIB(void);
FindVarMethod var_callDetailDataTable;
int callDetailDataTable_add(struct callDetailDataTable_data *);
int callDetailDataTable_del(struct callDetailDataTable_data **);
void parse_callDetailDataTable(const char *, char *);
SNMPCallback store_callDetailDataTable;
void refresh_callDetailDataTable(void);
FindVarMethod var_simpleUsageMeteringControlTable;
int simpleUsageMeteringControlTable_add(struct simpleUsageMeteringControlTable_data *);
int simpleUsageMeteringControlTable_del(struct simpleUsageMeteringControlTable_data **);
void parse_simpleUsageMeteringControlTable(const char *, char *);
SNMPCallback store_simpleUsageMeteringControlTable;
void refresh_simpleUsageMeteringControlTable(void);
FindVarMethod var_configurableSimpleUsageMeteringControlTable;
int configurableSimpleUsageMeteringControlTable_add(struct configurableSimpleUsageMeteringControlTable_data *);
int configurableSimpleUsageMeteringControlTable_del(struct configurableSimpleUsageMeteringControlTable_data **);
void parse_configurableSimpleUsageMeteringControlTable(const char *, char *);
SNMPCallback store_configurableSimpleUsageMeteringControlTable;
void refresh_configurableSimpleUsageMeteringControlTable(void);
FindVarMethod var_blockGeneratingLogTable;
int blockGeneratingLogTable_add(struct blockGeneratingLogTable_data *);
int blockGeneratingLogTable_del(struct blockGeneratingLogTable_data **);
void parse_blockGeneratingLogTable(const char *, char *);
SNMPCallback store_blockGeneratingLogTable;
void refresh_blockGeneratingLogTable(void);
FindVarMethod var_fileGeneratingLogTable;
int fileGeneratingLogTable_add(struct fileGeneratingLogTable_data *);
int fileGeneratingLogTable_del(struct fileGeneratingLogTable_data **);
void parse_fileGeneratingLogTable(const char *, char *);
SNMPCallback store_fileGeneratingLogTable;
void refresh_fileGeneratingLogTable(void);
FindVarMethod var_callDetailLogRecordTable;
int callDetailLogRecordTable_add(struct callDetailLogRecordTable_data *);
int callDetailLogRecordTable_del(struct callDetailLogRecordTable_data **);
void parse_callDetailLogRecordTable(const char *, char *);
SNMPCallback store_callDetailLogRecordTable;
void refresh_callDetailLogRecordTable(void);
FindVarMethod var_configurableSimpleUsageMeteringControlR2Table;
int configurableSimpleUsageMeteringControlR2Table_add(struct configurableSimpleUsageMeteringControlR2Table_data *);
int configurableSimpleUsageMeteringControlR2Table_del(struct configurableSimpleUsageMeteringControlR2Table_data **);
void parse_configurableSimpleUsageMeteringControlR2Table(const char *, char *);
SNMPCallback store_configurableSimpleUsageMeteringControlR2Table;
void refresh_configurableSimpleUsageMeteringControlR2Table(void);
FindVarMethod var_blockGeneratingLogR2Table;
int blockGeneratingLogR2Table_add(struct blockGeneratingLogR2Table_data *);
int blockGeneratingLogR2Table_del(struct blockGeneratingLogR2Table_data **);
void parse_blockGeneratingLogR2Table(const char *, char *);
SNMPCallback store_blockGeneratingLogR2Table;
void refresh_blockGeneratingLogR2Table(void);
FindVarMethod var_callDetailLogRecordR2Table;
int callDetailLogRecordR2Table_add(struct callDetailLogRecordR2Table_data *);
int callDetailLogRecordR2Table_del(struct callDetailLogRecordR2Table_data **);
void parse_callDetailLogRecordR2Table(const char *, char *);
SNMPCallback store_callDetailLogRecordR2Table;
void refresh_callDetailLogRecordR2Table(void);

WriteMethod write_creationTriggerList;
WriteMethod write_simpleUsageMeteringControlEntryStatus;
WriteMethod write_samplingRate;
WriteMethod write_configurationMask;
WriteMethod write_configurationRowStatus;
WriteMethod write_blockGeneratingLogMaxBlockSize;
WriteMethod write_blockGeneratingLogMaxTimeInterval;
WriteMethod write_blockGeneratingLogStorageType;
WriteMethod write_blockGeneratingLogRowStatus;
WriteMethod write_timesOfDay;
WriteMethod write_periodicTrigger;
WriteMethod write_fileGeneratingLogStorageType;
WriteMethod write_fileGeneratingLogEntryStatus;
WriteMethod write_configurationR2Mask;
WriteMethod write_configurationR2Status;
WriteMethod write_blockGeneratingLogVersion;

#endif				/* __LOCAL_CDR2MIB_H__ */
