/*****************************************************************************

 @(#) $Id: sccpOmMIB.h,v 0.9.2.3 2008-12-31 16:04:47 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-31 16:04:47 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: sccpOmMIB.h,v $
 Revision 0.9.2.3  2008-12-31 16:04:47  brian
 - updated mibs

 Revision 0.9.2.2  2008-12-24 13:08:26  brian
 - building ss7confd

 *****************************************************************************/

#ifndef __LOCAL_SCCPOMMIB_H__
#define __LOCAL_SCCPOMMIB_H__

#ident "@(#) $RCSfile: sccpOmMIB.h,v $ $Name:  $($Revision: 0.9.2.3 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct sccpOmMIB_data {
	uint sccpOmMIB_request;

	oid *sccpOm1stAndIntervalActivate;
	int sccpOm1stAndIntervalActivateLen;
	oid *sccpOm1stAndIntervalDeactivate;
	int sccpOm1stAndIntervalDeactivateLen;
	oid *sccpOm5MinActivate;
	int sccpOm5MinActivateLen;
	oid *sccpOm5MinDeaActivate;
	int sccpOm5MinDeaActivateLen;
	oid *sccpOm15MinActivate;
	int sccpOm15MinActivateLen;
	oid *sccpOm15MinDeaActivate;
	int sccpOm15MinDeaActivateLen;
	int32_t sccpOmInterval;
	int32_t sccpOmDiscontinuityTime;
	int32_t sccpOmTimeStamp;
	uint32_t sccpOm5MinMaxIntervals;
	uint32_t sccpOm15MinMaxIntervals;
	int32_t sccpOmpDefault;
	int32_t sccpOmNrOfSubLevelsDefault;
	int32_t sccpOmNrOfRestrictionLevelsDefault;
};
struct sccpOmErrorsTable_data {
	uint sccpOmErrorsTable_request;
	uint sccpOmErrorsTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmNoTranslatorForAddress;
	int32_t sccpOmNoRuleForAddress;
	int32_t sccpOmPointCodeNotAvailable;
	int32_t sccpOmPointCodeCongested;
	int32_t sccpOmSubsystemUnavailable;
	int32_t sccpOmSubsystemCongested;
	int32_t sccpOmUnequippedSubsystem;
	int32_t sccpOmSyntaxErrorDetected;
	int32_t sccpOmRoutingFailure;
	int32_t sccpOmReassemblyTimeOut;
	int32_t sccpOmSegmentOutOfOrder;
	int32_t sccpOmNoReassemblySpace;
	int32_t sccpOmHopCounterViolation;
	int32_t sccpOmTooLargeForSegmentation;
	int32_t sccpOmReleaseFailure;
	int32_t sccpOmInactivityTimerExpiry;
	int32_t sccpOmProviderInitiatedReset;
	int32_t sccpOmProviderInitiatedRelease;
	int32_t sccpOmNoSegmentationSupport;
	int32_t sccpOmSegmentationFailure;
	int32_t sccpOmReassemblyFailure;
	int32_t sccpOmErrors5MinValidIntervals;
	int32_t sccpOmErrors15MinValidIntervals;
};
struct sccpOmMessageTable_data {
	uint sccpOmMessageTable_request;
	uint sccpOmMessageTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmTotalMessagesHandled;
	int32_t sccpOmTotalMessagesLocal;
	int32_t sccpOmTotalMessagesGTT;
	int32_t sccpOmUDTMessagesSent;
	int32_t sccpOmUDTSMessagesSent;
	int32_t sccpOmUDTMessagesReceived;
	int32_t sccpOmUDTSMessagesReceived;
	int32_t sccpOmCRMessagesSent;
	int32_t sccpOmCREFMessagesSent;
	int32_t sccpOmCRMessagesReceived;
	int32_t sccpOmCREFMessagesReceived;
	int32_t sccpOmRSRMessagesSent;
	int32_t sccpOmRSRMessagesReceived;
	int32_t sccpOmERRMessagesSent;
	int32_t sccpOmERRMessagesReceived;
	int32_t sccpOmXUDTMessagesSent;
	int32_t sccpOmXUDTSMessagesSent;
	int32_t sccpOmXUDTMessagesReceived;
	int32_t sccpOmXUDTSMessagesReceived;
	int32_t sccpOmLUDTMessagesSent;
	int32_t sccpOmLUDTSMessagesSent;
	int32_t sccpOmLUDTMessagesReceived;
	int32_t sccpOmLUDTSMessagesReceived;
	int32_t sccpOmMessage5MinValidIntervals;
	int32_t sccpOmMessage15MinValidIntervals;
};
struct sccpOmAccessibilityTable_data {
	uint sccpOmAccessibilityTable_request;
	uint sccpOmAccessibilityTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmSSCMessageReceived;
	int32_t sccpOmSSPMessageReceived;
	uint32_t sccpOmSccpUnavailableDuration;
	int32_t sccpOmAccessibility5MinValidIntervals;
	int32_t sccpOmAccessibility15MinValidIntervals;
};
struct sccpOmUtilizationTable_data {
	uint sccpOmUtilizationTable_request;
	uint sccpOmUtilizationTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmLXUDTMessagesOrigClass0;
	int32_t sccpOmLXUDTMessagesOrigClass1;
	int32_t sccpOmLXUDTMessagesTermClass0;
	int32_t sccpOmLXUDTMessagesTermClass1;
	int32_t sccpOmMessagesSentToBackup;
	int32_t sccpOmDT1MessagesReceived;
	int32_t sccpOmDT1MessagesSent;
	int32_t sccpOmDT2MessagesReceived;
	int32_t sccpOmDT2MessagesSent;
	int32_t sccpOmEDMessagesSent;
	int32_t sccpOmEDMessagesReceived;
	int32_t sccpOmUtilization5MinValidIntervals;
	int32_t sccpOmUtilization15MinValidIntervals;
};
struct sccpOm5MinHistoryTable_data {
	uint sccpOm5MinHistoryTable_request;
	uint sccpOm5MinHistoryTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmInterval;
	int32_t sccpOm5MinNoTranslatorForAddress;
	int32_t sccpOm5MinNoRuleForAddress;
	int32_t sccpOm5MinPointCodeNotAvailable;
	int32_t sccpOm5MinPointCodeCongested;
	int32_t sccpOm5MinSubsystemUnavailable;
	int32_t sccpOm5MinSubsystemCongested;
	int32_t sccpOm5MinUnequippedSubsystem;
	int32_t sccpOm5MinSyntaxErrorDetected;
	int32_t sccpOm5MinRoutingFailure;
	int32_t sccpOm5MinReassemblyTimeOut;
	int32_t sccpOm5MinSegmentOutOfOrder;
	int32_t sccpOm5MinNoReassemblySpace;
	int32_t sccpOm5MinHopCounterViolation;
	int32_t sccpOm5MinTooLargeForSegmentation;
	int32_t sccpOm5MinReleaseFailure;
	int32_t sccpOm5MinInactivityTimerExpiry;
	int32_t sccpOm5MinProviderInitiatedReset;
	int32_t sccpOm5MinProviderInitiatedRelease;
	int32_t sccpOm5MinNoSegmentationSupport;
	int32_t sccpOm5MinSegmentationFailure;
	int32_t sccpOm5MinReassemblyFailure;
	int32_t sccpOm5MinTotalMessagesHandled;
	int32_t sccpOm5MinTotalMessagesLocal;
	int32_t sccpOm5MinTotalMessagesGTT;
	int32_t sccpOm5MinUDTMessagesSent;
	int32_t sccpOm5MinUDTSMessagesSent;
	int32_t sccpOm5MinUDTMessagesReceived;
	int32_t sccpOm5MinUDTSMessagesReceived;
	int32_t sccpOm5MinCRMessagesSent;
	int32_t sccpOm5MinCREFMessagesSent;
	int32_t sccpOm5MinCRMessagesReceived;
	int32_t sccpOm5MinCREFMessagesReceived;
	int32_t sccpOm5MinRSRMessagesSent;
	int32_t sccpOm5MinRSRMessagesReceived;
	int32_t sccpOm5MinERRMessagesSent;
	int32_t sccpOm5MinERRMessagesReceived;
	int32_t sccpOm5MinXUDTMessagesSent;
	int32_t sccpOm5MinXUDTSMessagesSent;
	int32_t sccpOm5MinXUDTMessagesReceived;
	int32_t sccpOm5MinXUDTSMessagesReceived;
	int32_t sccpOm5MinLUDTMessagesSent;
	int32_t sccpOm5MinLUDTSMessagesSent;
	int32_t sccpOm5MinLUDTMessagesReceived;
	int32_t sccpOm5MinLUDTSMessagesReceived;
	int32_t sccpOm5MinSSCMessageReceived;
	int32_t sccpOm5MinSSPMessageReceived;
};
struct sccpOm15MinHistoryTable_data {
	uint sccpOm15MinHistoryTable_request;
	uint sccpOm15MinHistoryTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmInterval;
	int32_t sccpOm15MinNoTranslatorForAddress;
	int32_t sccpOm15MinNoRuleForAddress;
	int32_t sccpOm15MinPointCodeNotAvailable;
	int32_t sccpOm15MinPointCodeCongested;
	int32_t sccpOm15MinSubsystemUnavailable;
	int32_t sccpOm15MinSubsystemCongested;
	int32_t sccpOm15MinUnequippedSubsystem;
	int32_t sccpOm15MinSyntaxErrorDetected;
	int32_t sccpOm15MinRoutingFailure;
	int32_t sccpOm15MinReassemblyTimeOut;
	int32_t sccpOm15MinSegmentOutOfOrder;
	int32_t sccpOm15MinNoReassemblySpace;
	int32_t sccpOm15MinHopCounterViolation;
	int32_t sccpOm15MinTooLargeForSegmentation;
	int32_t sccpOm15MinReleaseFailure;
	int32_t sccpOm15MinInactivityTimerExpiry;
	int32_t sccpOm15MinProviderInitiatedReset;
	int32_t sccpOm15MinProviderInitiatedRelease;
	int32_t sccpOm15MinNoSegmentationSupport;
	int32_t sccpOm15MinSegmentationFailure;
	int32_t sccpOm15MinReassemblyFailure;
	int32_t sccpOm15MinTotalMessagesHandled;
	int32_t sccpOm15MinTotalMessagesLocal;
	int32_t sccpOm15MinTotalMessagesGTT;
	int32_t sccpOm15MinUDTMessagesSent;
	int32_t sccpOm15MinUDTSMessagesSent;
	int32_t sccpOm15MinUDTMessagesReceived;
	int32_t sccpOm15MinUDTSMessagesReceived;
	int32_t sccpOm15MinCRMessagesSent;
	int32_t sccpOm15MinCREFMessagesSent;
	int32_t sccpOm15MinCRMessagesReceived;
	int32_t sccpOm15MinCREFMessagesReceived;
	int32_t sccpOm15MinRSRMessagesSent;
	int32_t sccpOm15MinRSRMessagesReceived;
	int32_t sccpOm15MinERRMessagesSent;
	int32_t sccpOm15MinERRMessagesReceived;
	int32_t sccpOm15MinXUDTMessagesSent;
	int32_t sccpOm15MinXUDTSMessagesSent;
	int32_t sccpOm15MinXUDTMessagesReceived;
	int32_t sccpOm15MinXUDTSMessagesReceived;
	int32_t sccpOm15MinLUDTMessagesSent;
	int32_t sccpOm15MinLUDTSMessagesSent;
	int32_t sccpOm15MinLUDTMessagesReceived;
	int32_t sccpOm15MinLUDTSMessagesReceived;
	uint32_t sccpOm15MinSccpUnavailableDuration;
};
struct sccpOm5MinSsnHistoryTable_data {
	uint sccpOm5MinSsnHistoryTable_request;
	uint sccpOm5MinSsnHistoryTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmInterval;
	int32_t sccpOm5MinLXUDTMessagesOrigClass0;
	int32_t sccpOm5MinLXUDTMessagesOrigClass1;
	int32_t sccpOm5MinLXUDTMessagesTermClass0;
	int32_t sccpOm5MinLXUDTMessagesTermClass1;
	int32_t sccpOm5MinMessagesSentToBackup;
	int32_t sccpOm5MinDT1MessagesReceived;
	int32_t sccpOm5MinDT1MessagesSent;
	int32_t sccpOm5MinDT2MessagesReceived;
	int32_t sccpOm5MinDT2MessagesSent;
	int32_t sccpOm5MinEDMessagesSent;
	int32_t sccpOm5MinEDMessagesReceived;
};
struct sccpOm15MinSsnHistoryTable_data {
	uint sccpOm15MinSsnHistoryTable_request;
	uint sccpOm15MinSsnHistoryTable_refs;
	uint32_t sccpNetworkEntityId;
	int32_t sccpOmInterval;
	int32_t sccpOm15MinLXUDTMessagesOrigClass0;
	int32_t sccpOm15MinLXUDTMessagesOrigClass1;
	int32_t sccpOm15MinLXUDTMessagesTermClass0;
	int32_t sccpOm15MinLXUDTMessagesTermClass1;
	int32_t sccpOm15MinMessagesSentToBackup;
	int32_t sccpOm15MinDT1MessagesReceived;
	int32_t sccpOm15MinDT1MessagesSent;
	int32_t sccpOm15MinDT2MessagesReceived;
	int32_t sccpOm15MinDT2MessagesSent;
	int32_t sccpOm15MinEDMessagesSent;
	int32_t sccpOm15MinEDMessagesReceived;
};

/* storage declarations */
extern struct sccpOmMIB_data *sccpOmMIBStorage;
extern struct header_complex_index *sccpOmErrorsTableStorage;
extern struct header_complex_index *sccpOmMessageTableStorage;
extern struct header_complex_index *sccpOmAccessibilityTableStorage;
extern struct header_complex_index *sccpOmUtilizationTableStorage;
extern struct header_complex_index *sccpOm5MinHistoryTableStorage;
extern struct header_complex_index *sccpOm15MinHistoryTableStorage;
extern struct header_complex_index *sccpOm5MinSsnHistoryTableStorage;
extern struct header_complex_index *sccpOm15MinSsnHistoryTableStorage;

/* enum definitions from the covered mib sections */

/* function prototypes */
void init_sccpOmMIB(void);
void deinit_sccpOmMIB(void);
int term_sccpOmMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_sccpOmMIB;
void parse_sccpOmMIB(const char *, char *);
SNMPCallback store_sccpOmMIB;
void refresh_sccpOmMIB(void);
FindVarMethod var_sccpOmErrorsTable;
int sccpOmErrorsTable_add(struct sccpOmErrorsTable_data *);
int sccpOmErrorsTable_del(struct sccpOmErrorsTable_data **);
void parse_sccpOmErrorsTable(const char *, char *);
SNMPCallback store_sccpOmErrorsTable;
void refresh_sccpOmErrorsTable(void);
FindVarMethod var_sccpOmMessageTable;
int sccpOmMessageTable_add(struct sccpOmMessageTable_data *);
int sccpOmMessageTable_del(struct sccpOmMessageTable_data **);
void parse_sccpOmMessageTable(const char *, char *);
SNMPCallback store_sccpOmMessageTable;
void refresh_sccpOmMessageTable(void);
FindVarMethod var_sccpOmAccessibilityTable;
int sccpOmAccessibilityTable_add(struct sccpOmAccessibilityTable_data *);
int sccpOmAccessibilityTable_del(struct sccpOmAccessibilityTable_data **);
void parse_sccpOmAccessibilityTable(const char *, char *);
SNMPCallback store_sccpOmAccessibilityTable;
void refresh_sccpOmAccessibilityTable(void);
FindVarMethod var_sccpOmUtilizationTable;
int sccpOmUtilizationTable_add(struct sccpOmUtilizationTable_data *);
int sccpOmUtilizationTable_del(struct sccpOmUtilizationTable_data **);
void parse_sccpOmUtilizationTable(const char *, char *);
SNMPCallback store_sccpOmUtilizationTable;
void refresh_sccpOmUtilizationTable(void);
FindVarMethod var_sccpOm5MinHistoryTable;
int sccpOm5MinHistoryTable_add(struct sccpOm5MinHistoryTable_data *);
int sccpOm5MinHistoryTable_del(struct sccpOm5MinHistoryTable_data **);
void parse_sccpOm5MinHistoryTable(const char *, char *);
SNMPCallback store_sccpOm5MinHistoryTable;
void refresh_sccpOm5MinHistoryTable(void);
FindVarMethod var_sccpOm15MinHistoryTable;
int sccpOm15MinHistoryTable_add(struct sccpOm15MinHistoryTable_data *);
int sccpOm15MinHistoryTable_del(struct sccpOm15MinHistoryTable_data **);
void parse_sccpOm15MinHistoryTable(const char *, char *);
SNMPCallback store_sccpOm15MinHistoryTable;
void refresh_sccpOm15MinHistoryTable(void);
FindVarMethod var_sccpOm5MinSsnHistoryTable;
int sccpOm5MinSsnHistoryTable_add(struct sccpOm5MinSsnHistoryTable_data *);
int sccpOm5MinSsnHistoryTable_del(struct sccpOm5MinSsnHistoryTable_data **);
void parse_sccpOm5MinSsnHistoryTable(const char *, char *);
SNMPCallback store_sccpOm5MinSsnHistoryTable;
void refresh_sccpOm5MinSsnHistoryTable(void);
FindVarMethod var_sccpOm15MinSsnHistoryTable;
int sccpOm15MinSsnHistoryTable_add(struct sccpOm15MinSsnHistoryTable_data *);
int sccpOm15MinSsnHistoryTable_del(struct sccpOm15MinSsnHistoryTable_data **);
void parse_sccpOm15MinSsnHistoryTable(const char *, char *);
SNMPCallback store_sccpOm15MinSsnHistoryTable;
void refresh_sccpOm15MinSsnHistoryTable(void);

WriteMethod write_sccpOm1stAndIntervalActivate;
WriteMethod write_sccpOm1stAndIntervalDeactivate;
WriteMethod write_sccpOm5MinActivate;
WriteMethod write_sccpOm5MinDeaActivate;
WriteMethod write_sccpOm15MinActivate;
WriteMethod write_sccpOm15MinDeaActivate;
WriteMethod write_sccpOm5MinMaxIntervals;
WriteMethod write_sccpOm15MinMaxIntervals;
WriteMethod write_sccpOmpDefault;
WriteMethod write_sccpOmNrOfSubLevelsDefault;
WriteMethod write_sccpOmNrOfRestrictionLevelsDefault;

#endif				/* __LOCAL_SCCPOMMIB_H__ */
