# vim: ft=spec sw=4 et
# =============================================================================
# 
# @(#) $RCSfile: openss7.spec.in,v $ $Name:  $($Revision: 0.9.2.46 $) $Date: 2004/12/21 22:22:17 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2004  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2004/12/21 22:22:17 $ by $Author: brian $
#
# =============================================================================

# default is to build kernel modules and tools
# conditional builds of binary rpms relies on the sneaky spec trick that
# rpmbuild will not build a binary rpm when it has no %files section
%global BUILD_modules 1
%global BUILD_tools   1
%global BUILD_lis     1
%global BUILD_lfs     0

#
# there are three ways to pass kernel version to the build process:
#    define _kversion in /usr/lib/rpm/macros, /etc/rpm/macros or ~/.rpmmacros
#    define _kversion on the rpmbuild command line
#    define PACKAGE_KVERSION environment variable
#    just let it default to `uname -r`
#
%{!?_kversion: %{expand: %%global _kversion %(uname -r)}}

%global kernel_version %{_kversion}
%global kernel_source %(echo %{_kversion} | sed -e 's|BOOT$||;s|smp$||;s|bigmem$||;s|debug$||;s|enterprise$||;s|hugemem$||;s|secure$||;s|-i686-up-4GB$||;s|-p3-smp-64GB$||;s|-64GB-SMP|.SuSE|')
%global kernel_number %(echo %{_kversion} | sed -e 's|-.*$||')
%global kernel_release %(echo %{_kversion} | sed -e 's|-|.|g')
%global core_name core-%{_kversion}
%global info_name info-%{_kversion}
%global epoch @PACKAGE_EPOCH@
%global majbase @STRCONF_MAJBASE@
%global makedev @STRCONF_MAKEDEV@
%global base @PACKAGE_TARNAME@
%global infofiles %{name}
%global title @PACKAGE_TITLE@
%global stitle @PACKAGE_SHORTTITLE@
%global libname ss7

# because we only need to build the tools binaries once for each architecture,
# but need to build the modules binaries once for each architecture and kernel
# version, we accept the --with[out] options "modules" and "tools"
%{?_without_modules: %{expand: %%global BUILD_modules 0}}
%{?_without_tools:   %{expand: %%global BUILD_tools   0}}
%{?_without_lis:     %{expand: %%global BUILD_lis     0}}
%{?_without_lis:     %{expand: %%global BUILD_lfs     1}}
%{?_without_lfs:     %{expand: %%global BUILD_lfs     0}}
%{?_without_lfs:     %{expand: %%global BUILD_lis     1}}

%{?_with_modules:    %{expand: %%global BUILD_modules 1}}
%{?_with_tools:      %{expand: %%global BUILD_tools   1}}
%{?_with_lis:        %{expand: %%global BUILD_lis     1}}
%{?_with_lis:        %{expand: %%global BUILD_lfs     0}}
%{?_with_lfs:        %{expand: %%global BUILD_lfs     1}}
%{?_with_lfs:        %{expand: %%global BUILD_lis     0}}

%define oldrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 0 ; else echo 1; fi)
%define newrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 1 ; else echo 0; fi)

%if %{BUILD_tools}
%global BUILD_libs    0
%global BUILD_devs    %newrpm
%global MAKE_devs     %oldrpm
%else
%global BUILD_libs    0
%global BUILD_devs    0
%global MAKE_devs     0
%endif

%global _streams lis
%global _ksubdir lis
%global _kmodext lis
%if %{BUILD_lfs}
%global _STREAMS LfS
%global _streams streams
%global _strvers 0.7a
%global _ksubdir streams
%global _kmodext streams
%global _conflict LiS
%endif
%if %{BUILD_lis}
%global _STREAMS LiS
%global _streams LiS
%global _strvers 2:2.16.18
%global _ksubdir lis
%global _kmodext lis
%global _conflict streams
%endif
# FIXME: there are way more modules that this
%global _modules    x400 x100

# we have some more options that control configure for the build
%{?disturl:%{!?url:%{expand: %%global url %{disturl}}}}
%global fullrelease @PACKAGE_RELEASE@%{extrarelease}

# a macro to build require one package of the same version as another
%define buildreq_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|BuildRequires: %1 =|')
%define requires_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|Requires: %1 =|')

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} for Linux
%if %{?_without_public: 0}%{!?_without_public: 1}
Name:           @PACKAGE_NAME@
%else
Name:           @PACKAGE_NAME@-bin
%endif
Epoch:          @PACKAGE_EPOCH@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@
License:        GPL
Group:          System Environment/Kernel
%if %{?url: 1}%{!?url: 0}
URL:            %{url}
%endif
%if %{?_xpm_icon: 1}%{!?_xpm_icon: 0}
Icon:           %{_xpm_icon}
%endif
%if %{?_gif_icon: 1}%{!?_gif_icon: 0}
Icon:           %{_gif_icon}
%endif
ExclusiveArch:  %{ix86} k6 x86_64 s390 s390x ppc ppciseries ppcpseries ppc64 arm armv4l sh mips mipsel
ExclusiveOs:    Linux
#Source:         %{name}-%{version}-%{release}.tar.bz2
Source:         ftp://ftp.openss7.org/pub/linux/src/%{name}/%{name}-%{version}-%{release}.tar.bz2
%if %{?buildroot: 0}%{!?buildroot: 1}
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{fullrelease}-root
%endif
%if %{BUILD_modules}
BuildRequires:  kernel-source = %{kernel_source}
BuildRequires:  modutils >= 2.4.12
%endif
BuildRequires:  %{_streams}-%{info_name} >= %{_strvers}
BuildRequires:  %{_streams}-devel >= %{_strvers}
%buildreq_prov %{_streams}-devel %{_streams}-%{info_name}
%define newgcc %(if test `gcc -v 2>&1 | grep 'gcc version' | sed -e 's|gcc version ||;s| .*$||'` != '2.95.3' ; then echo 1 ; else echo 0 ; fi)
%ifarch s390 s390x
BuildRequires:  gcc >= 2.95.3
%else
%ifarch %{all_ppc}
BuildRequires:  gcc >= 2.96-75
%else
%if %{newgcc}
BuildRequires:  gcc >= 2.96-98
%else
BuildRequires:  gcc = 2.95.3
%endif
%endif
%endif
%if %{newgcc}
BuildRequires:  gcc >= 2.96
%else
BuildRequires:  gcc = 2.95.3
%endif
#BuildRequires:  strxns-devel >= %{epoch}:%{version}
#BuildRequires:  strxnet-devel >= %{epoch}:%{version}
#BuildRequires:  strinet-devel >= %{epoch}:%{version}
#BuildRequires:  strsctp-devel >= %{epoch}:%{version}
# these are some needs of the configure script
# to manipulate manual pages:
BuildRequires:  /usr/bin/soelim
BuildRequires:  /usr/bin/refer
BuildRequires:  /usr/bin/tbl
BuildRequires:  /usr/bin/pic
BuildRequires:  /usr/bin/gzip
# to generate kernel symbols:
BuildRequires:  /sbin/genksyms
# these are only required to rebuild documentation
#BuildRequires: transfig >= 3.2
#BuildRequires: ImageMagick
#BuildRequires: tetex >= 1.0
#BuildRequires: ghostscript >= 6.51
#BuildRequires: texinfo >= 4.0
# find the rest automagically
Autoreq:        true

# ---------------------------------------------------------------------------
%description
The %{name} package includes kernel modules, %{_STREAMS} STREAMS drivers,
modules, libraries, utilities, test programs, daemons, and development
environment for the development and execution of Signalling System No. 7
(SS7), Signalling Transport (SIGTRAN), Integrated Service Digital Network
(ISDN), Voice over IP (VoIP), Media Gateway Control (MGC), Media Gateway (MG),
Switching protocol stack components and applications for the %{_STREAMS}
STREAMS environment.  This distribution is only currently applicable to 2.4
kernes and was targetted at ix86 and ppc architectures, but should build and
install for other architectures as well.

%prep
# ---------------------------------------------------------------------------

%setup -q -n %{name}-%{version}-%{release}

%build
# ---------------------------------------------------------------------------

preferred_cflags="%{optflags}"

%ifarch %{ix86}
preferred_cflags="$preferred_cflags -D__USE_STRING_INLINES -fstrict-aliasing"
%endif

%ifarch sparc
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparcv9
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparc64
preferred_cflags="$preferred_cflags -mvis -fcall-used-g7"
%endif

%ifnarch ia64 s390 s390x ppc ppciseries ppc64
if test `gcc --version` != '2.95.3' ; then
preferred_cflags="$preferred_cflags -freorder-blocks"
fi
%endif

%define cache_file ../%{_target_platform}-%{kernel_version}-%{_streams}.cache

%define enable()  %(echo "%1" | sed -e 's|^--with-|--enable-|')
%define disable() %(echo "%1" | sed -e 's|^--without-|--disable-|')

./configure \
    CC="${CC}" \
    CFLAGS="${CFLAGS:-$preferred_cflags}" \
    LDFLAGS="${LDFLAGS}" \
    CPPFLAGS="${CPPFLAGS}" \
    CPP="${CPP}" \
    CXX="${CXX:-$CC}" \
    CXXFLAGS="${CXXFLAGS:-$preferred_cflags}" \
    CXXCPP="${CXXCPP:-$CPP}" \
    CONFIG_SITE="%{csite_file}" \
    --cache-file=%{cache_file} \
    --build=%{_build} \
    --host=%{_target_platform} \
    --prefix=%{_prefix} \
    --exec-prefix=%{_exec_prefix} \
    --bindir=%{_bindir} \
    --sbindir=%{_sbindir} \
    --sysconfdir=%{_sysconfdir} \
    --datadir=%{_datadir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --libexecdir=%{_libexecdir} \
    --localstatedir=%{_localstatedir} \
    --sharedstatedir=%{_sharedstatedir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --disable-maintainer-mode \
    --enable-dependency-tracking \
    --with-gnu-ld \
    --with-k-release=%{kernel_version} \
    --with-k-modules=/%{_lib}/modules/%{kernel_version} \
    --with-rpm-epoch=%{epoch} \
    --with-rpm-release=%{release} \
    --with-base-major=%{majbase} \
    %{?_with_k_optimize:                    %_with_k_optimize} \
    %{?_with_cooked_manpages:               %_with_cooked_manpages} \
    %{?_without_cooked_manpages:            %_without_cooked_manpages} \
    %{?_with_public:                        %enable %_with_public} \
    %{?_without_public:                     %disable %_without_public} \
    %{?_with_k_debug:                       %enable %_with_k_debug} \
    %{?_without_k_debug:                    %disable %_without_k_debug} \
    %{?_with_k_test:                        %enable %_with_k_test} \
    %{?_without_k_test:                     %disable %_without_k_test} \
    %{?_with_k_safe:                        %enable %_with_k_safe} \
    %{?_without_k_safe:                     %disable %_without_k_safe} \
    %{?_with_k_inline:                      %enable %_with_k_inline} \
    %{?_without_k_inline:                   %disable %_without_k_inline} \
    %{?_with_tools:                         %enable %_with_tools} \
    %{?_without_tools:                      %disable %_without_tools} \
    %{?_with_modules:                       %enable %_with_modules} \
    %{?_without_modules:                    %disable %_without_modules} \
    %{?_with_lis:                           %_with_lis} \
    %{?_with_lfs:                           %_with_lfs} \
    %{?_with_sctp:                          %_with_sctp} \
    %{?_without_sctp:                       %_without_sctp} \
    %{?_with_sctp2:                         %_with_sctp2} \
    %{?_without_sctp2:                      %_without_sctp2} \
    %{?_with_sctp_slow_verification:        %enable %_with_sctp_slow_verification} \
    %{?_without_sctp_slow_verification:     %disable %_without_sctp_slow_verification} \
    %{?_with_sctp_throttle_heartbeats:      %enable %_with_sctp_throttle_heartbeats} \
    %{?_without_sctp_throttle_heartbeats:   %disable %_without_sctp_throttle_heartbeats} \
    %{?_with_sctp_discard_ootb:             %enable %_with_sctp_discard_ootb} \
    %{?_without_sctp_discard_ootb:          %disable %_without_sctp_discard_ootb} \
    %{?_with_sctp_extended_ip_support:      %enable %_with_sctp_extended_ip_support} \
    %{?_without_sctp_extended_ip_support:   %disable %_without_sctp_extended_ip_support} \
    %{?_with_sctp_hmac_sha1:                %enable %_with_sctp_hmac_sha1} \
    %{?_without_sctp_hmac_sha1:             %disable %_without_sctp_hmac_sha1} \
    %{?_with_sctp_hmac_md5:                 %enable %_with_sctp_hmac_md5} \
    %{?_without_sctp_hmac_md5:              %disable %_without_sctp_hmac_md5} \
    %{?_with_sctp_adler32:                  %enable %_with_sctp_adler32} \
    %{?_without_sctp_adler32:               %disable %_without_sctp_adler32} \
    %{?_with_sctp_crc32c:                   %enable %_with_sctp_crc32c} \
    %{?_without_sctp_crc32c:                %disable %_without_sctp_crc32c} \
    %{?_with_sctp_throttle_passiveopens:    %enable %_with_sctp_throttle_passiveopens} \
    %{?_without_sctp_throttle_passiveopens: %disable %_without_sctp_throttle_passiveopens} \
    %{?_with_sctp_ecn:                      %enable %_with_sctp_ecn} \
    %{?_without_sctp_ecn:                   %disable %_without_sctp_ecn} \
    %{?_with_sctp_lifetimes:                %enable %_with_sctp_lifetimes} \
    %{?_without_sctp_lifetimes:             %disable %_without_sctp_lifetimes} \
    %{?_with_sctp_add_ip:                   %enable %_with_sctp_add_ip} \
    %{?_without_sctp_add_ip:                %disable %_without_sctp_add_ip} \
    %{?_with_sctp_adaptation_layer_info:    %enable %_with_sctp_adaptation_layer_info} \
    %{?_without_sctp_adaptation_layer_info: %disable %_without_sctp_adaptation_layer_info} \
    %{?_with_sctp_partial_reliability:      %enable %_with_sctp_partial_reliability} \
    %{?_without_sctp_partial_reliability:   %disable %_without_sctp_partial_reliability} \
    %{?_with_sctp_debug:                    %enable %_with_sctp_debug} \
    %{?_without_sctp_debug:                 %disable %_without_sctp_debug} \
    %{?_with_sctp_error_generator:          %enable %_with_sctp_error_generator} \
    %{?_without_sctp_error_generator:       %disable %_without_sctp_error_generator} \
    %{?_with_xns:                           %_with_xns} \
    %{?_without_xns:                        %_without_xns} \
    %{?_with_tli:                           %_with_tli} \
    %{?_without_tli:                        %_without_tli} \
    %{?_with_inet:                          %_with_inet} \
    %{?_without_inet:                       %_without_inet} \
    %{?_with_xnet:                          %_with_xnet} \
    %{?_without_xnet:                       %_without_xnet} \
    %{?_with_sock:                          %_with_sock} \
    %{?_without_sock:                       %_without_sock} \
    || rm -f %{cache_file}

make

%install
# ---------------------------------------------------------------------------

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

mkdir -p $RPM_BUILD_ROOT

%if %{?_enable_debug_packages: %{_enable_debug_packages}}%{!?_enable_debug_packages: 0}
# we are going to create debug packages, so we need to install unstripped binaries.
make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install
%else
# use libtoolized install-strip to strip binaries, modules, shared and static libraries.
make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install-strip
%endif

# get the installed info directory out of the build root
[ -e "$RPM_BUILD_ROOT/%{_infodir}/dir" ] && rm -f "$RPM_BUILD_ROOT/%{_infodir}/dir"

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
# punch rpm release to Custom
echo '.Custom.1'  > .rpmextra
# create configured source directory for source package
mkdir -p $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# tar and move the sources for source release
make clean ; tar cf - . | tar xf - -C $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# create symbolic link
ln -sf %{name}-%{version}-%{fullrelease} $RPM_BUILD_ROOT%{_usrsrc}/%{name}
%endif

%clean
# ---------------------------------------------------------------------------

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

# ===========================================================================
%package %{_streams}-%{core_name}

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} kernel modules.
Group:          System Environment/Kernel
Prefix:         /%{_lib}/modules/%{kernel_version}
Requires:       kernel = %{kernel_version}
Requires:       %{_streams}-%{core_name} >= %{_strvers}
Conflicts:      %{_conflict}-%{core_name}
Prereq:         /sbin/depmod
Prereq:         /sbin/lsmod
Prereq:         /sbin/insmod
Prereq:         /sbin/modprobe
Prereq:         /usr/sbin/lsof
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Provides:       %{name}-core = %{epoch}:%{version}-%{fullrelease}
Provides:       %{name}-%{_streams}-core = %{epoch}:%{version}-%{fullrelease}
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-%{core_name}
The %{name}-%{_streams}-%{core_name} package contains the kernel modules
that provide the Linux kernel %{stitle} %{_STREAMS} STREAMS drivers and modules.
This also includes assorted drivers and modules for additional protocol stacks
such as SIGTRAN, ISDN and VoIP.  This package is heavily tied to the kernel for
which it and the %{_STREAMS} STREAMS facility was compiled.  This package
applies to kernel version %{kernel_version} and requires a %{_STREAMS} STREAMS
package compiled for the same kernel.

%pre %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   if we are upgrading and the upgrade is for the running kernel, or we are
#   installing new on the running kernel, we have to worry about previous
#   loaded modules for the old version or a non-rpm version
    for m in %{_modules} ; do
        if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
#           module running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                fdetach -a 2>/dev/null
                /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                eval "kill -HUP $tokens[1]"
                            fi
                        fi
                    done
                    /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                        echo "Cannot install or upgrade with streams-$m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%post %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 1 ] ; then
#   This is the end of a fresh install.
#   Check that our line is in the modules.%{base} file
    conf_old=/etc/modules.conf
    if ( grep -q 'include.*modules.%{base}' $conf_old ) ; then :; else
        streams_dir=/%{_lib}/modules/%{kernel_version}/misc
        streams_prf=/%{_lib}/modules/preferred/misc
        conf_new=%{_tmppath}/modules.conf.new.$$
        cp -f $conf_old $conf_new
#       if not, check for an old non-rpm LiS
        if ( grep -q 'BEGIN LiS' $conf_old ) ; then
            conf_tmp=%{_tmppath}/modules.conf.tmp.$$
            list=`find /%{_lib}/modules/%{kernel_version}/%{base} -name "*.o"`
            for p in $list ; do
                m="`echo $p | sed -e 's|^.*/||;s|\.o||'`"
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $conf_new > $conf_tmp
                mv -f $conf_tmp $conf_new
#               Remove conflicting modules.
                rm -f $streams_dir/$m.o
                rm -f $streams_prf/$m.o
            done
        fi
#       check for forced over installs of older LiS or LfS rpm installations
#       or installs over older LiS or LfS autoconf installations
        streams_dir=/%{_lib}/modules/%{kernel_version}/%{_ksubdir}
        streams_prf=/%{_lib}/modules/preferred/%{_ksubdir}
        streams_old=/%{_lib}/modules/%{kernel_version}/modules.%{_kmodext}
        if [ -d $streams_dir -a -f $streams_old ] ; then
            streams_new=%{_tmppath}/modules.%{_kmodext}.new.$$
            streams_tmp=%{_tmppath}/modules.%{_kmodext}.tmp.$$
            cp -f $streams_old $streams_new
            list=`find /%{_lib}/modules/%{kernel_version}/%{base} -name "*.o"`
            for p in $list ; do
                m="`echo $p | sed -e 's|^.*/||;s|\.o||'`"
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $streams_new > $streams_tmp
                mv -f $streams_tmp $streams_new
#               Remove conflicting modules.
                rm -f $streams_dir/$m.o
                rm -f $streams_prf/$m.o
            done
#           can't make backups in modules directory
            chmod --reference=$streams_old $streams_new
            cp -f $streams_new $streams_old
            rm -f $streams_new
        fi
        echo 'prune modules.%{base}' >> $conf_new
        echo 'if -f /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'include /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'endif' >> $conf_new
        chmod --reference=$conf_old $conf_new
        cp -fb --suffix=.rpmsave $conf_new $conf_old
        rm -f $conf_new
    fi
fi
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot by /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi

%preun %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 0 -a ":%{kernel_version}" = ":`uname -r`" ] ; then
#   We are about to uninstall for good on a running kernel then we have to
#   worry about which modules are running
    for m in %{_modules} ; do
        if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                fdetach -a
                /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                eval "kill -KILL $tokens[1]"
                            fi
                        fi
                    done
                    /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                        echo "Cannot uninstall with streams-$m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%postun %{_streams}-%{core_name}
# ---------------------------------------------------------------------------

if [ $1 = 0 ]; then
#   this is the last stage of a removal we are going away: we need to see if
#   we need to remove our line from modules.conf and remove our devices
    remove_line=yes
    for file in /lib/modules/*/modules.%{base} ; do
        if [ -f $file ] ; then
            remove_line=no
            break
        fi
    done
    if [ ":$remove_line" = :yes ] ; then
        sed -e '/prune modules.%{base}/,/endif/d' /etc/modules.conf > %{_tmppath}/modules.conf.tmp.$$
        chmod --reference=/etc/modules.conf %{_tmppath}/modules.conf.tmp.$$
        cp -fb --suffix=.rpmorig %{_tmppath}/modules.conf.tmp.$$ /etc/modules.conf
        rm -f %{_tmppath}/modules.conf.tmp.$$
    fi
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot but /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   one more kick at killing any loaded modules on uninstall, last stage of
#   the upgrade on a running kernel for upgrade.
    reboot='no'
    for m in %{_modules} ; do
        if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                fdetach -a
                /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                    /sbin/insmod -ar "streams-$m"
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                if [ $1 = 0 ] ; then
#                                   extreme prejudice for removal
                                    eval "kill -KILL $tokens[1]"
                                else
#                                   try to get them to reload for 
                                    eval "kill -HUP $tokens[1]"
                                fi
                            fi
                        fi
                    done
                    /sbin/modprobe -r `/sbin/lsmod | grep "^streams-$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^streams-$m" ) ; then
                        echo "Error: modules may be still loaded" >&2
                        /sbin/lsmod | grep "^streams-$m" >&2
                        reboot='yes'
                    fi
                fi
            fi
        fi
    done
    if [ "$reboot" = 'yes' ]; then
        echo "you may have to reboot" >&2
        exit 1
    fi
fi

%if %{BUILD_modules}
%files %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir /%{_lib}/modules/%{kernel_version}/%{base}
%attr(644,root,root) /%{_lib}/modules/%{kernel_version}/modules.%{base}
/%{_lib}/modules/%{kernel_version}/%{base}/*
%endif

# ===========================================================================
%package dev

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} devices.
Group:          System Environment/Base
Requires:       dev >= 3.3
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description dev
The %{name}-dev package contains the device definitions necessary to run
applications programs and utilities developed for OpenSS7 %{_STREAMS} STREAMS
%{stitle}.

%if %{MAKE_devs}
%post dev
#   older rpm versions < 4.0 (such as those used by SuSE) are not capable of doing
#   rootless builds because they have no %%dev macro, so in that case we just run the makenodes
#   program that was generated in the build to create devices.
if [ $1 = 0 ] ; then
    /usr/sbin/@STRMAKENODES@
fi

%preun dev
#   older rpm versions < 4.0 (such as those used by SuSE) are not capable of doing
#   rootless builds because they have no %%dev macro, so in that case we just run the makenodes
#   program that was generated in the build to create devices.
if [ $1 = 0 ] ; then
    /usr/sbin/@STRMAKENODES@ --remove
fi

%endif

# ---------------------------------------------------------------------------
%if %{MAKE_devs}
%files dev
%defattr(-,root,root)
%endif
%if %{BUILD_devs}
%files dev -f %{makedev}
%defattr(-,root,root)
%endif

# ===========================================================================
%package %{_streams}-lib

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} run-time libraries.
Group:          System Environment/Libraries
Prefix:         %{_libdir}
Prefix:         %{_datadir}/locale
Requires:       %{_streams}-lib >= %{_strvers}
Prereq:         /sbin/ldconfig
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-lib
The %{name}-%{_streams}-lib package contains the run-time shared libraries
necessary to run applications programs and utilities developed for OpenSS7
%{_STREAMS} STREAMS %{stitle}.

%pre %{_streams}-lib
# ---------------------------------------------------------------------------
if [ $1 = 0 ] ; then
#   this is supposed to be a fresh install
#   see if there are any libraries hanging around from a non-rpm install
    old_libs="`( /sbin/ldconfig -p | grep '\<lib.*%{libname}\> | cut '-d ' -f4 ) 2>/dev/null`"
    if [ -n "$old_libs" ] ; then
#       old libraries hanging around, delete them
        echo "warning: Deleting old non-rpm libraries $old_libs" >&2
        rm -f $old_libs
    fi
else
    :
#   upgrade, let RPM do its job
fi

%post %{_streams}-lib
# ---------------------------------------------------------------------------
# do a load config
if [ $1 = 0 ] ; then
#   end of fresh install, do /sbin/ldconfig
    /sbin/ldconfig >/dev/null
else
    :
#   upgrade, wait for old postun
fi

%postun %{_streams}-lib
# ---------------------------------------------------------------------------
# whether complete removal or upgrade, do a load config
/sbin/ldconfig

%if %{BUILD_libs}
%files %{_streams}-lib
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.so*
%{_libdir}/*.la
%{_datadir}/locale/*
%endif

# ===========================================================================
%package doc

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} manpages and doc.
Group:          Documentation
Prefix:         %{_docdir}
Prefix:         %{_infodir}
Prefix:         %{_mandir}
#Requires:       %{_streams}-doc >= %{_strvers}
#Requires:       strxns-doc >= %{epoch}:%{version}
#Requires:       strxnet-doc >= %{epoch}:%{version}
#Requires:       strinet-doc >= %{epoch}:%{version}
#Requires:       strsctp-doc >= %{epoch}:%{version}
Conflicts:      texinfo < 3.11
Prereq:         /sbin/install-info
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description doc
The %{name}-doc package contains html documentation for the development of
OpenSS7 %{_STREAMS} STREAMS %{stitle} applications, modules and drivers.

%post doc
# ---------------------------------------------------------------------------
if [ -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%preun doc
# ---------------------------------------------------------------------------
if [ "$1" = 0 -a -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%if %{BUILD_tools}
%files doc
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%doc ABOUT-NLS
%endif
%doc AUTHORS ChangeLog COPYING INSTALL NEWS README THANKS
%doc doc/manual
%doc doc/specs
%doc doc/projects
%doc doc/drafts
%{_infodir}/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.macros
%{_mandir}/man*/*
%endif

# ===========================================================================
%package devel

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} headers, lib and doc.
Group:          Development/System
Prefix:         %{_libdir}
Prefix:         %{_includedir}
#Requires:       %{name}-%{_streams}-lib = %{epoch}:%{version}-%{fullrelease}
#Requires:       %{name}-doc = %{epoch}:%{version}-%{fullrelease}
#Requires:       strxns-%{_streams}-lib >= %{epoch}:%{version}
#Requires:       strxns-doc >= %{epoch}:%{version}
#Requires:       strxnet-%{_streams}-lib >= %{epoch}:%{version}
#Requires:       strxnet-doc >= %{epoch}:%{version}
#Requires:       strinet-%{_streams}-lib >= %{epoch}:%{version}
#Requires:       strinet-doc >= %{epoch}:%{version}
#Requires:       strsctp-%{_streams}-lib >= %{epoch}:%{version}
#Requires:       strsctp-doc >= %{epoch}:%{version}
#Requires:       %{_streams}-devel >= %{_strvers}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description devel
The %{name}-devel package contains library archives for static compilation,
and headers files to develop OpenSS7 %{_STREAMS} STREAMS %{stitle} applications.
This also includes the header files and static libraries required to compile
OpenSS7 %{_STREAMS} STREAMS %{stitle} applications programs.  In addition it
contains all of the manual pages necessary for developing OpenSS7 %{_STREAMS}
STREAMS %{stitle} application programs.

%if %{BUILD_tools}
%files devel
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%{_libdir}/*.a
%endif
%{_includedir}/*
%endif

# ===========================================================================
%package source

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} source package.
Group:          Development/System
Prefix:         %{_usrsrc}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description source
The %{name}-source package contains the source code necessary for building the
%{name} release.  It includes the autoconf configuration utilities necessary
to create and distribute this rpm.

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
%files source
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir %{_usrsrc}/%{name}-%{version}-%{fullrelease}
%{_usrsrc}/%{name}
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/*
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/.*
%endif

# ===========================================================================
%package %{_streams}-util

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} admin utilities.
Group:          System Environment/Base
Prefix:         %{_bindir}
Prefix:         %{_sbindir}
Prefix:         %{_libexecdir}
Requires:       %{name}-%{_streams}-lib = %{epoch}:%{version}-%{fullrelease}
Requires:       %{_streams}-lib >= %{_strvers}
Conflicts:      %{_conflict}-lib
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-util
The %{name}-%{_streams}-util package provides adminstrative and configuration
test utilities and commands associated with the OpenSS7 %{_STREAMS} STREAMS
%{stitle} package.

%if %{BUILD_tools}
%files %{_streams}-util
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%{_bindir}/*
#%{_sbindir}/*
%{_libexecdir}/*
%endif

# ===========================================================================
%changelog
# ---------------------------------------------------------------------------
# $Log: openss7.spec.in,v $
# Revision 0.9.2.46  2004/12/21 22:22:17  brian
# - Added automatic site configuration to rpm build.
#
# Revision 0.9.2.45  2004/12/19 15:11:48  brian
# - Working up better spec files.
#
# Revision 0.9.2.44  2004/12/17 13:31:16  brian
# - Cleared up build depdendencies, added info subpackage to LiS and streams.
#
# Revision 0.9.2.43  2004/12/17 04:02:40  brian
# - Improving spec files.
#
# Revision 0.9.2.42  2004/12/15 15:25:33  brian
# - avoid undefined debug macro
#
# Revision 0.9.2.41  2004/12/15 14:59:07  brian
# - Update RPM build to build multiple distribution binary RPMs from a single SRPM.
#
# Revision 0.9.2.40  2004/12/15 14:35:51  brian
# - Update RPM build to build multiple distribution binary RPMs from single SRPM.
#

* Mon Dec 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.39  2004/12/13 10:52:09  brian
- Removed vendor specific headers. (Define these in your .rpmmacros file.)
- Added both .xpm and .gif icons into binary packages.
- Fixed extrainfo empty macro body warning once and for all.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.38  2004/11/24 14:30:45  brian
- Changes for multiple rpm distro builds.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.37  2004/11/24 11:27:50  brian
- Changes to accomodate %_vendor macro for multiple distribution rpm builds.

* Fri Nov  5 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.36  2004/11/05 04:50:21  brian
- Dist docs instead of building.

* Fri Nov  5 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.35  2004/11/05 01:01:54  brian
- Added build prerequisites.
- Added only pdf and html docs in doc directory.
- ps docs are too large.

* Wed Oct 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.34  2004/10/13 01:39:34  brian
- Added texinfo specs and fig support.

* Tue Aug 31 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.33  2004/08/31 09:17:20  brian
- Strap out excessive build dependencies.

* Tue Aug 31 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.32  2004/08/31 04:49:04  brian
- Avoid empty macro body error on extrainfo.

* Mon Aug 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.31  2004/08/23 21:32:26  brian
- Modifications for common build.

* Tue Aug 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.30  2004/08/17 11:45:22  brian
- Upgraded spec files.

* Sat Aug  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.29  2004/08/07 11:00:50  brian
- More rational provides structure.

* Sun Jul 11 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.28  2004/07/11 08:47:29  brian
- Correct symbolic links again.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.27  2004/06/28 19:40:23  brian
- Do not package up debug files on recent rpmbuild.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.26  2004/06/28 11:33:10  brian
- Support binary release.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.25  2004/06/28 10:10:55  brian
- Changes to compile.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.24  2004/06/28 09:01:19  brian
- Updated spec files.

* Mon Jun 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.23  2004/06/21 18:08:36  brian
- RPM 4.2.1 and up set default epoch to 0.

* Sun Jun 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.22  2004/06/20 20:22:24  brian
- FC1 rpm 4.2.1 can't handle internal Requires.

* Tue May 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.21  2004/05/25 06:52:50  brian
- Removed double listing on source directory.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.20  2004/05/24 20:49:27  brian
- Don't copy sources if source package not built.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.19  2004/05/24 12:48:49  brian
- Updated build process.

* Sun May 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.18  2004/05/23 08:40:54  brian
- Corrected info install.

* Sun May 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.17  2004/05/23 07:44:31  brian
- Corrected %if error.

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.16  2004/05/20 18:19:35  brian
- make before DESTDIR on install

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.15  2004/05/16 19:18:02  brian
- Updated info install.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.14  2004/05/16 02:41:18  brian
- Updated for lis/lfs build.

* Sat May 15 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.13  2004/05/15 07:09:28  brian
- New kernel symbol ripping macros.

* Fri May 14 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.12  2004/05/14 20:40:17  brian
- Updated for latest LiS and LfS build processes.

* Wed May 12 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.11  2004/05/12 10:14:50  brian
- Added documentation for XTI.  (Need new refs.)

* Wed May 12 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.10  2004/05/12 08:01:36  brian
- Added in xti library and STREAMS modules.

* Tue May 11 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.9  2004/05/11 09:24:18  brian
- Added new configure options.

* Sun Apr 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.8  2004/04/25 07:34:24  brian
- Updated changelog.

* Sun Apr 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.7  2004/04/25 07:33:00  brian
- Updated streams configuration.
- Updated to newer build process based on autoconf 2.59.
- Copy devices.lst instead of generating it.
- Put prebuilt distributed pdf manuals in doc directory.
- Don't attempt to install .refs or .macros when manpages are cooked.
- Updated changelog.

* Thu Apr 15 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.6  2004/04/15 10:19:08  brian
- Working up release package.

* Sun Feb 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/02/22 07:30:09  brian
- Added documentation.

* Tue Feb 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/02/17 06:30:25  brian
- Added public release option.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/01/21 23:25:47  brian
- Corrected info install for older RPM versions.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/01/21 21:24:50  brian
- Updated and tested M2PA to Draft10.

* Mon Jan 19 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/01/19 22:57:08  brian
- Corrected info install.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/01/17 07:50:03  brian
- Added files for 0.9 baseline autoconf release.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.1  2004/01/17 02:15:32  brian
- Added spec file.

* Sun Jan 11 2004 Brian Bidulock <bidulock@openss7.org>
- Began this RPM build for OpenSS7.
- Borrowed heavily from the OpenSS7 LiS build.

# vim: ft=spec sw=4 et
