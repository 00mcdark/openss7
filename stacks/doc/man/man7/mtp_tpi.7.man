'\" rt
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: mtp_tpi.7.man,v 0.9.2.4 2005/03/30 13:39:42 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corp. <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" =========================================================================
.\"
.\" Modified $Date: 2005/03/30 13:39:42 $ by $Author: brian $
.\"
.\" =========================================================================
.so strss7.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH MTP-TPI 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "MTP Interface (MTPI)"
.SH "NAME"
.PP
mtp \- Message Transfer Part (MTP) Transport Provider Interface (TPI)
.SH "SYNOPSIS"
.PP
.B #include <sys/tihdr.h>
.br
.B #include <sys/tpi_ss7.h>
.br
.B #include <sys/tpi_mtp.h>
.HP
.BI "int " mtp_stream " = open(" /dev/mtp-tpi ", " flags );
.fi
.SH "DESCRIPTION"
.PP
.B MTP-TPI
provides a stream supporting the Transport Provider Interface 
.RB ( tpi (7))
to the Message Transfer Part
.RB ( mtp (7)).
This STREAMS interface provides the
.BR mtp (7)
protocol service interface using the T-primitives of the
.BR tpi (7).
This interfaces is intended solely for use by user programs or protocol
modules requiring the common 
.BR tpi (7).
interface, such as the
.BR xti (3)
and
.BR sockets (3)
library.
.SS "ADDRESS FORMATS"
.PP
The
.B MTP-TPI
address is formatted as a socket address for compatability with the
.BR sockets (3)
library for
.BR tpi (7).
The address format is as follows:
.RS
.nf
\fC\s-2\
struct sockaddr_mtp {
        sa_family_t mtp_family;         /* Address family */
        uint16_t mtp_ni;                /* Network indicator */
        uint16_t mtp_si;                /* Service indicator */
        uint32_t mtp_pc;                /* Point code */
        uint8_t mtp_zero[sizeof(struct sockaddr) - sizeof(sa_family_t) -
                         sizeof(uint16_t) * 2 - sizeof(uint32_t)];
};
\s+2\fR
.fi
.RE
.PP
The
.B MTP-TPI
address contains the following fields:
.TP
.I mtp_family
Specifies the address family of the socket address.  The address family is
always
.B AF_MTP
or is set to
.BR AF_UNSPECIFIED .
.TP
.I mtp_ni
The network to which the address belongs.
.TP
.I mtp_si
The service indicator.  Service indicators may be one of the following:
.RS
.RE
.TP
.I mtp_pc
The signalling point code, least significant bit aligned in a 32-bit field.
.SH "OPTIONS"
.PP
.B MTP-TPI
provides options at the
.B T_SS7_MTP
option level as described in the sections with follow.
Of the
.B T_SS7_MTP
level protocol options,
.BR T_MTP_SLS " and"
.BR T_MTP_MP " are"
of end-to-end significance.
.SS T_MTP_SLS
.PP
This option sets or gets the Signalling Link Selection (SLS) value associated
with a message or stream.
The option argument is one
.B t_uscalar_t
value that represents the value of the SLS.
When used in the
.BR T_OPTDATA " or"
.B T_UNITDATA
primitives, this option sets or gets the SLS value associated with a message.
When used in the
.B T_INFO
primitives, this option sets or gets the SLS value associated with a stream.
.PP
This option is of end-to-end significance.  When the
.B T_MTP_SLS
value is set on outgoing data, with
.BR T_OPTDATA_REQ " or"
.BR T_UNITDATA_REQ ,
the same
.B T_MTP_SLS
value will be indicated in the
.BR T_OPTDATA_IND " or"
.B T_UNITDATA_IND
at the transport peer.
.SS T_MTP_MP
.PP
This option sets or gets the Message Priority (MP) value associated with a
message or stream.
The option argument is one
.B t_uscalar_t
value that represents the value of the MP.
.BR T_OPTDATA " or"
.B T_UNITDATA
primitives, this option sets or gets the MP value associated with a message.
When used in the
.B T_INFO
primitives, this option sets or gets the MP value associated with a stream.
.PP
This option is of end-to-end significance.  When the
.B T_MTP_MP
value is set on outgoing data, with
.BR T_OPTDATA_REQ " or"
.BR T_UNITDATA_REQ ,
the same
.B T_MTP_MP
value will be indicated in the
.BR T_OPTDATA_IND " or"
.B T_UNITDATA_IND
at the transport peer.
.SS T_MTP_DEBUG
.PP
This option sets or gets the debug flags associated with a stream.
The option argument is one
.B t_uscalar_t
value that represents the value of the debug flags.
.SH "LOCAL MANAGEMENT INTERFACE"
.PP
.SS T_INFO_REQ
.PP
This primitive is intepreted as in
.BR tpi (7).
.SS T_INFO_ACK
.PP
.TP
.I TSDU_size
The transport service data unit size represents the maximum size MTP-User
service data unit size that can be guaranteed of being transported in a single
MTP MSU.
.TP
.I ETSDU_size
MTP does not support the concept of expedited data and this field will always
return
.BR T_INVALID.
.TP
.I CDATA_size
MTP does not support the concept of connection data and this field will always
return
.BR T_INVALID.
.TP
.I DDATA_size
MTP does not support the concept of disconnection data and this field will always
return
.BR T_INVALID.
.TP
.I ADDR_size
The maximum size of the MTP address.  This field will always return the size
of the
.B sockaddr_mtp
structure described above under
.IR "\*(lqADDRESS FORMAT\*(rq" .
.TP
.I OPT_size
This is the maximum size of the
.I OPT_length
field in T-primitives which support options.
.TP
.I TIDU_size
This is the maximum size of the interface data unit, which is the maximum size
of data which can be transferred across the interface in a single
.BR getmsg (2)
or
.BR putmsg (2)
operation.  This size is always less than or equal to the
.I TSDU_size
above.
.TP
.I SERV_type
The service type is one of the following:
.RS
.TP
T_CLTS
Connectionless service.  This is the normal service provided by the Message
Transfer Part and supported by
.BR MTP-TPI .
This value will always be returned when the stream is in an unbound state or
has been bound to a connectionless service indicator.
.TP
T_COTS
Connection-oriented service.
.B MTP-TPI
supports a pseudo connection-oriented service.
This value will be returned when the stream is bound to a pseudo-connection
oriented service indicator.
.TP
T_COTS_ORD
Connection-oriented service with orderly release.  This service is not supported by
.BR MTP-TPI .
.RE
.TP
.I CURRENT_state
The current state of the service interface as described in
.BR tpi (7).
.TP
.I PROVIDER_flag
Provider flags can be a bitwise logical \*(lqOR\*(rq of the following:
.RS
.TP
T_SNDZERO
Indicates that the transport user is permitted to send data with a message
length of zero.  This flag is normally clear.
.TP
XPG4_1
Indicates that the transport provider conforms to XTI in XPG4 and supports the
new primitives T_ADDR_REQ and T_ADDR_ACK.  This flag is normally set.
.RE
.SS T_ADDR_REQ
.PP
This primitive is interpreted as in
.BR tpi (7).
.SS T_ADDR_ACK
.PP
.TP
.I LOCADDR_length, LOCADDR_offset
The length and offset from the start of the message block of the
.B sockaddr_mtp
structure which describes the MTP address to which the stream is bound.  If
the stream is not in a bound state, then
.IR LOCADDR_length " and " LOCADDR_offset
return zero (0).
.TP
.I REMADDR_length, REMADDR_offset
The length and offset from the start of the message block of the
.B sockaddr_mtp
structure which describes the MTP address to which the stream is connected.
It the stream is not in a connected state, then
.IR REMADDR_length " and " REM_ADDR_offset
return zero (0).
.SS T_CAPABILITY_REQ
.PP
This primitive is interpreted as in
.BR tpi (7).
.SS T_CAPABILITY_ACK
.PP
This primitive returns the
.B T_info_ack
structure interpreted as described in
.I \*(lqT_INFO_ACK\*(rq
above.
.SS T_BIND_REQ
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.I ADDR_length, ADDR_offset
The length and offset from the beginning of the message block of the
.B sockaddr_mtp
structure which contains the MTP address to bind.
.B MTP-TPI
requires that an address be present in this primitive and that the address
have all fields specified.
.B MTP-TPI
does not support \*(lqwildcard\*(rq bind addresses.
.TP
.I CONIND_number
.B MTP-TPI
only supports a pseudo-connection oriented service which is incapable of
support connection indications.  Therefore, this field is always ignored.
.SS T_BIND_ACK
.PP
.TP
.I ADDR_length, ADDR_offset
The length and offset from the beginning of the message block of the
.B sockaddr_mtp
structure which contains the MTP address that was bound.
.TP
.I CONIND_number
.B MTP-TPI
only supports a pseudo-connection oriented service which is incapable of
support connection indications.  Therefore, this field always returns zero
(0).
.B MTP-TPI
does not support \*(lqwildcard\*(rq addresses
.SS T_UNBIND_REQ
.PP
This primitive is interpreted as in
.BR tpi (7).
.SS T_OK_ACK
.PP
This primitive is interpreted as in
.BR tpi (7).
.SS T_ERROR_ACK
.PP
This primitive is interpreted as in
.BR tpi (7).
.SS T_OPTMGMT_REQ
.PP
This primitive is interpreted as in
.BR tpi (7)
with the options described under
.I \*(lqOPTIONS\*(rq
above.
.SS T_OPTMGMT_ACK
.PP
This primitive is interpreted as in
with the options described under
.I \*(lqOPTIONS\*(rq
above.
.SH "PROTOCOL SERVICE INTERFACE"
.PP
.SS T_UNITDATA_REQ
.PP
For
.B T_CLTS
service type providers, the
.B T_UNITDATA_REQ
is used to request the MTP-TRANSFER-REQ primitive.
Because there is no source address in the
.B T_UNITDATA_REQ
primitive, it is not possible to bind an
.B MTP-TPI
stream to more than one local address (e.g. wildcard bind).
.SS T_UNITDATA_IND
.PP
For
.B T_CLTS
service type providers, the
.B T_UNITDATA_IND
is used to indiacted the MTP-TRANSFER-IND primitive.
Because there is no destination address in the
.B T_UNITDATA_IND
primitive, it is not possible to bind an
.B MTP-TPI
stream to more than one local address (e.g. wildcard bind).
.SS T_UDERROR_IND
.PP
For
.B T_CLTS
servce type providers, the
.B T_UDERROR_IND
is used to indicated the MTP primitives: MTP-PAUSE-IND,
MTP-RESUME-IND, MTP-STATUS-IND, MTP-RESTART-BEGINS-IND and MTP-RESART-COMPLETE-IND primitives.
The fields of the
.B T_UDERROR_IND
primitive are interpreted as follows:
.TP
.I DEST_length, DEST_offset
The length and offset from the beginning of the message block of the
destination address to which the indication applies.  For responsive errors,
this is the
.B MTP-TPI
address that was included in the
.B T_UNITDATA_REQ
primitive.
.TP
.I OPT_length, OPT_offset
The length and offset from the beginning of the message block of the options
associated with the indication.  For responsive errors, these are the
.B MTP-TPI
options that were included in the
.B T_UNITDATA_REQ
primitive.
.TP
.I ERROR_type
The error type associated with the indication.  For
.B MTP-TPI
the error type can be one of the following values:
.RS
.TP
.I T_MTP_RESTARTED
The MTP provider has restarted.  The MTP-User can assume that all destinations
are available.
.TP
.I T_MTP_RESTARTING
The MTP provider is restarting.  While the MTP provider is restarting, all
destinations are considered unavailable.
.TP
.I T_MTP_USER_PART_UNKNOWN
The previous
.B T_UNITDATA_REQ
that invoked this response contained a value of the service indicator
.I mtp_si
field of the address that was unknown to the remote signalling point contained
in the
.IR mtp_ni " and " mtp_pc
fields of the destination address.
.TP
.I T_MTP_USER_PART_UNEQUIPPED
The previous
.B T_UNITDATA_REQ
that invoked this response contained a value of the service indicator
.I mtp_si
field of the address that was unequipped at the remote signalling point contained
in the
.IR mtp_ni " and " mtp_pc
fields of the destination address.
.TP
.I T_MTP_USER_PART_UNAVAILABLE
The previous
.B T_UNITDATA_REQ
that invoked this response contained a value of the service indicator
.I mtp_si
field of the address that was temporarily unavailable at the remote signalling
point contained in the
.IR mtp_ni " and " mtp_pc
fields of the destination address.
.TP
.I T_MTP_DEST_AVAILABLE, T_MTP_CLUS_AVAILABLE
Indicates that the remote signalling point (or cluster) identified by the
.IR mtp_ni " and " mtp_pc
fields of the destination address is now available.  Note that this is not
actually an error.
.TP
.I T_MTP_DEST_PROHIBITED, T_MTP_CLUS_PROHIBITED
Indicates that the remote signalling point (or cluster) identified by the
.IR mtp_ni " and " mtp_pc
fields of the destination address is prohibited.  A prohibited destination can
be temporarily or permanently unavailable.
If the error indication is responsive, the destination address and options
indicated are the same as the destination address and options provided to the
.B T_UNITDATA_REQ
primitive to which this indication is given in response.
.TP
.I T_MTP_DEST_CONGESTED, T_MTP_CLUS_CONGESTED
Indicates that the remote signalling point (or cluster) identified by the
.IR mtp_ni " and " mtp_pc
fields of the destination address is congested at level
.IR \*(lqn\*(rq .
If the error indication is responsive, the destination address and options
indicated are the same as the destination address and options provided to the
.B T_UNITDATA_REQ
primitive to which this indication is given in response.
.RE
.SS T_CONN_REQ
.TP
.I DEST_length, DEST_offset
The length and offset from the beginning of the message block of the
.B sockaddr_mtp
structure that contains the remote MTP address to which to associate the
stream.
.TP
.I OPT_length, OPT_offset
The length and offset from the beginning of the message block of the options
containing the default signalling link selection (T_MTP_SLS) and message priority
(T_MTP_MP) to use when sending data for the association.
These option values can be changed with the
.B T_OPTMGMT_REQ
primitive, or overridden for a specific message in the
.B T_OPTDATA_REQ
primitive.
.PP
.SS T_CONN_CON
.PP
.TP
.I RES_length, RES_offset
The length and offset from the beginning of the message block of the
.B sockaddr_mtp
structure that contains the responding remote MTP address to which the
association is confirmed on the stream.  For
.B MTP-TPI
this will always be the same as the destination address in the
corresponding
.B T_CONN_REQ
primitive.
.TP
.I OPT_length, OPT_offset
The length and offset from the beginning of the message block of the options
containing the signalling link selection (T_MTP_SLS) and message priority
(T_MTP_MP) to use when sending data for the association.
These option values can be changed with the
.B T_OPTMGMT_REQ
primitive, or overridden for a specific message in the
.B T_OPTDATA_REQ
primitive.
.SS T_CONN_IND
.PP
Not used by
.BR MTP-TPI.
.SS T_CONN_RES
.PP
Not used by
.BR MTP-TPI.
.SS T_DATA_REQ
.PP
Requests the MTP-TRANSFER-REQ primitive.  The source and destination address
of the MTP-TRANSFER-REQ primitive will be the source and destination addresses
to which the stream was associated with the
.BR T_BIND_REQ " and " T_CONN_REQ
primitives.  The signalling link selection and message priority values
associated with the MTP-TRANSFER-REQ will be the default or user-specified
values for the stream specified with the
.TP
.I MORE_flag
.B T_OPTMGMT_REQ
primitive.
.SS T_DATA_IND
.PP
Indicates the MTP-TRANSFER-IND primitive.  The source and destination address
of the MTP-TRANSFER-IND primitive will be the source and destination
addresses to which the stream was associated with the
.BR T_CONN_REQ " and " T_BIND_REQ
primitives.  The signalling link selection and message priority values
associated with the MTP-TRANSFER-IND are discarded and cannot be retrieved.
.TP
.I MORE_flag
.SS T_EXDATA_REQ
.PP
This primitive is not supported by
.BR MTP-NPI .
.SS T_EXDATA_IND
.PP
This primitive is not supported by
.BR MTP-NPI .
.SS T_OPTDATA_REQ
.PP
Requests the MTP-TRANSFER-REQ primitive.  The source and destination address
of the MTP-TRANSFER-REQ primitive will be the source and destination addresses
to which the stream was associated with the
.BR T_BIND_REQ " and " T_CONN_REQ
primitives.
.TP
.I DATA_flag
This field can contain the following flags:
.RS
.TP
T_ODF_MORE
Indicates that the next
.B T_OPTDATA_REQ
primitive contains data belonging to the same TSDU.
.TP
T_ODF_EX
Indicates that the data is expedited.
.B MTP-TPI
does not support expedited data so this flag is always clear
.RE
.TP
.I OPT_length, OPT offset
Contains the signalling link selection
.RB ( T_MTP_SLS )
and message priority
.RB ( T_MTP_MP )
values requested for the MTP-TRANSFER-REQ.
.SS T_OPTDATA_IND
.PP
Indicates the MTP-TRANSFER-IND primitive.  The source and destination address
of the MTP-TRANSFER-IND primitive will be the source and destination
addresses to which the stream was associated with the
.BR T_CONN_REQ " and " T_BIND_REQ
primitives.  The signalling link selection and message priority values
associated with the MTP-TRANSFER-IND are discarded and cannot be retrieved.
.TP
.I DATA_flag
This field can contain the following flags:
.RS
.TP
T_ODF_MORE
Indicates that the next
.B T_OPTDATA_REQ
primitive contains data belonging to the same TSDU.
.TP
T_ODF_EX
Indicates that the data is expedited.
.B MTP-TPI
does not support expedited data so this flag is always clear
.RE
.TP
.I OPT_length, OPT offset
Contains the signalling link selection
.RB ( T_MTP_SLS )
and message priority
.RB ( T_MTP_MP )
values associated with the MTP-TRANSFER-IND.
.SS T_DISCON_REQ
.PP
Requests that the MTP user disconnect from the peer.
.TP
.I SEQ_number
This field is not used by
.B MTP-TPI
and will be coded zero (0).
.SS T_DISCON_IND
.PP
Indicates that the peer MTP user is no longer available.
.TP
.I DISCON_reason
The disconnect reason may be one of the following values:
.RS
.TP
.I T_MTP_RESTARTING
The MTP provider is restarting.  While the MTP provider is restarting, all
destinations are considered unavailable.
.TP
.I T_MTP_USER_PART_UNKNOWN
The MTP user at the remote signalling point to which the stream was connected
is unknown to the remote signalling point.
.TP
.I T_MTP_USER_PART_UNEQUIPPED
The MTP user at the remote signalling point to which the stream was connected
is unequipped at the remote signalling point.
.TP
.I T_MTP_USER_PART_UNAVAILABLE
The MTP user at the remote signalling point to which the stream was connected
is temporarily unavailable at the remote signalling point.
.TP
.I T_MTP_DEST_PROHIBITED, T_MTP_CLUS_PROHIBITED
The remote signalling point (or cluster) to which the stream was connected
is unavailable.
.TP
.I T_MTP_DEST_CONGESTED, T_MTP_CLUS_CONGESTED
The remote signalling point (or cluster) to which the stream was connected
is congested to level
.RI \*(lq n \*(rq.
.RE
.TP
.I SEQ_number
This field is not used by
.B MTP-TPI
and will be coded zero (0).
.SS T_ORDREL_REQ
.PP
This primitive is not supported by
.BR MTP-TPI.
.SS T_ORDREL_IND
.PP
This primitive is not supported by
.BR MTP-TPI.
.SH "IOCTLS"
.PP
.B MTP-TPI
supports the TLI I/O Controls described for
.BR tpi (7).
In addition it supported the MTP management I/O Controls described in
.BR mtp (7).
.SH "ERROR HANDLING"
.PP
Protocol errors are handled using the
.BR T_UDERROR_IND " and " T_DISCON_IND
primitives described above.
.PP
Non-fatal errors are handled using the
.B T_ERROR_ACK
primitive as described in
.BR tpi (7).
.PP
Fatal errors are handled using the STREAMS
.BR M_ERROR " or " M_HANGUP
primitives which results in the failure of all subsequent
operations on the stream.
.SH "ERRORS"
.PP
The following protocol errors can be returned in the
.I ERROR_type
field of the
.B T_UDERROR_IND
primitive, or the
.I DISCON_reason
field of the
.B T_DISCON_IND
primitive:
.TP
.B T_MTP_RESTARTING
The local MTP service provider is restarting.  All remote destinations are
considered inaccessible.
.TP
.B T_MTP_USER_PART_UNKNOWN
The remote MTP-User specified by the service indicator in the MTP address is
not known to the remote MTP.
.TP
.B T_MTP_USER_PART_UNEQUIPPED
The remote MTP-User specified by the service indicator in the MTP address is
unequipped at the remote MTP.
.TP
.B T_MTP_USER_PART_UNAVAILABLE
The remote MTP-User specified by the service indicator in the MTP address is
inaccessible at the remote MTP.
.TP
.B T_MTP_DEST_PROHIBITED, T_MTP_CLUS_PROHIBITED
The remote MTP as specified by the network indicator and point code in the MTP
address is inacessible.
.TP
.B T_MTP_DEST_CONGESTED, T_MTP_CLUS_CONGESTED
The remote MTP as specified by the newtork indicator and point code in the MTP
address is congested at level 
.IR \*(lqn\*(rq .
.PP
Any of the non-fatal errors described in
.BR tpi (7)
may also be returned in a
.B T_ERROR_ACK
primitive by
.BR MTP-TPI .
.PP
Any of the fatal errors described in
.BR tpi (7)
may also be returned as an
.I errno
value in response to a read or write operation on the stream.
.SH "CAVEATS"
.PP
.B MTP-TPI
does not support the true concept of a connection-oriented service: it only
supports a pseudo-connection oriented service.  The difference is that
.B MTP-TPI
does not support the conceopt of a connection indication and does not support
the
.BR T_CONN_IND " and " T_CONN_RES
primitives.
.PP
Establishing a connection to a remote MTP-User with the
.B T_CONN_REQ
primitive does not perform and protocol functions and only forms a local
association between the requesting stream and the remote MTP-User.
Confirmation of the pseudo-connection with the
.B T_CONN_CON
primitive is local and automatic.
.SH "AUTHOR"
.PP
Brian F. G. Bidulock <bidulock@openss7.org>
.SH "VERSIONS"
.PP
This manpage describes Version 1 of the
.B MTP-TPI
interface.
.SH "SEE ALSO"
.PP
.BR mtp (7),
.BR tpi (7),
.BR streamio (2),
.BR putmsg (2),
.BR putpmsg (2),
.BR getmsg (2),
.BR getpmsg (2),
.BR read "(2), and"
.BR write (2).
.XX
.[
TPI Revision 2.0.0
.]
.[
q700
.]
.[
q701
.]
.[
q704
.]
.[
t1.111
.]
.[
mtpv1
.]
.[
jtq704
.]
.[
mtpi
.]
.[
$LIST$
.]
.TI
