% -*- texinfo -*- vim: ft=texinfo
% vim: ft=texinfo nosmartindent nocindent noautoindent tw=100
% =========================================================================
%
% @(#) $Id: nli.texi,v 0.9.2.14 2009-05-01 04:50:30 brian Exp $
%
% =========================================================================
%
% Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
% Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
% Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
%
% All Rights Reserved.
%
% Permission is granted to copy, distribute and/or modify this document
% under the terms of the GNU Free Documentation License, Version 1.3 or
% any later version published by the Free Software Foundation; with no
% Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
% copy of the license is included in the section entitled "GNU Free
% Documentation License".
%
% Permission to use, copy and distribute this documentation without
% modification, for any purpose and without fee or royalty is hereby
% granted, provided that both the above copyright notice and this
% permission notice appears in all copies and that the name of OpenSS7
% Corporation not be used in advertising or publicity pertaining to
% distribution of this documentation or its contents without specific,
% written prior permission.  OpenSS7 Corporation makes no representation
% about the suitability of this documentation for any purpose.  It is
% provided "as is" without express or implied warranty.
% 
% Permission is granted to process this file through Tex and print the
% results, provided the printed document carries copying permission
% notice identical to this one except for the removal of this paragraph
% (this paragraph not being relevant to the printed manual).
% 
% OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
% DOCUMENTATION INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY,
% FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE
% CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE
% IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY
% PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL
% OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR
% CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
% USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
% OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
% THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS
% THEREOF.
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2009-05-01 04:50:30 $ by $Author: brian $
%
% =========================================================================

\input texinfo
@setfilename nli.info
@include texi/args.texi
@set MANUAL_TITLE Network Layer Interface
@set MANUAL_TYPE Specification
@settitle @value{MANUAL_TITLE}

@dircategory OpenSS7
@direntry
* NLI: (nli).			Network Layer Interface Specification
@end direntry

@include texi/args.texi
@set MANUAL_TITLE Network Layer Interface
@set MANUAL_TYPE Specification

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file provides the @value{MANUAL_TYPE} for @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of the
@cite{@value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version @value{PACKAGE_VERSION}
Release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}.

Copyright @copyright{} 2008-2009  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2001  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

All Rights Reserved.

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation} not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  @cite{OpenSS7 Corporation} makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed
document carries copying permission notice identical to this one except for the removal of this
paragraph (this paragraph not being relevant to the printed manual).

@end ignore
OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT
THE CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN
NO EVENT SHALL OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE Network Layer Interface
@set MANUAL_TYPE Specification

@set PART X.25 Packet Layer
@set LONG X.25 Packet Layer Protocol
@set SHORT PLP
@set INTERFACE NLI

@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2008-2009  Monavacon Limited
@subtitle All Rights Reserved.
@sp 4
@quotation
@subheading Abstract
This document is a @value{MANUAL_TYPE} containing technical details concerning the implementation of
the @value{MANUAL_TITLE} for OpenSS7.  It contains recommendations on software architecture as well
as platform and system applicability of the @value{MANUAL_TITLE}.  It provides abstraction of the
@value{LONG} (@value{SHORT}) interface to these components as well as providing a basis for
@value{LONG} control for other @value{LONG} protocols.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll

@subsubheading Published by:

@sp 1

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Copyright @copyright{} 2008-2009  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

@noindent
All Rights Reserved.

@sp 1

@noindent
Unauthorized distribution or duplication is prohibited.

@sp 1

@noindent
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation} not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  @cite{OpenSS7 Corporation} makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@subsubheading Notice:

@noindent
@strong{OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL
IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE;
THAT THE CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN
NO EVENT SHALL OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.}

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@c Define an index of primitives
@defcodeindex pr
@c Define an index of primitive values
@defcodeindex pv
@c Define an index of primitive error values
@defcodeindex pe
@c Define an index of protocol states
@defcodeindex st
@c Define an index of input-output controls
@defcodeindex ct
@c Define an index of manual pages.
@defcodeindex mp
@c Define an index of MIB objects.
@defcodeindex mo

@c frags out automake
@c @ifnottex
@c @c concatenate indices for text, html and info
@syncodeindex pr cp
@syncodeindex pv cp
@syncodeindex pe cp
@syncodeindex st cp
@syncodeindex mp cp
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex ct cp
@syncodeindex mo cp
@c @end ifnottex

@include texi/macros.texi
@include texi/versions.texi

@iftex

@macro prim{name}
@code{\name\}@prindex \name\
@end macro

@macro pval{name}
@code{\name\}@pvindex \name\
@end macro

@macro perr{name}
@code{[\name\]}@peindex \name\
@end macro

@macro psta{name}
@code{\name\}@stindex \name\
@end macro

@macro parm{name}
@var{\name\}@vrindex \name\
@end macro

@macro pioc{name}
@code{\name\}@ctindex \name\
@end macro

@macro mobj{name}
@code{\name\}@moindex \name\
@end macro

@end iftex

@ifnottex
@c skip deep indexing for plain text, html and info
@c it messes up column with maximums (texinfo bug)

@macro prim{name}
@code{\name\}
@end macro

@macro pval{name}
@code{\name\}
@end macro

@macro perr{name}
@code{[\name\]}
@end macro

@macro psta{name}
@code{\name\}
@end macro

@macro parm{name}
@var{\name\}
@end macro

@macro pioc{name}
@code{\name\}
@end macro

@macro mobj{name}
@code{\name\}
@end macro

@end ifnottex

@ifnottex
@node Top
@top @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@unnumbered About This Manual
This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of
@cite{The @value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version
@value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} of the
@value{PACKAGE_TITLE} package.
@end ifnottex

@menu
* Preface::
* Introduction::
* Model of the X.25 Packet Layer::
* NLI Services Definition::
* NLI Primitives::
@c * Diagnostics Requirements::
* NLI Input-Output Controls::
* NLI Management Information Base::
@c * Addendum for @value{SHORT} Conformance::
@c * Mapping NLI Primitives::
@c * State/Event Tables::
@c * Precedence Tables::
* Allowable Sequence of NLI Primitives::
@c * Precedence of NLI Primitives::
@c * Guidelines for Protocol Independent NLI Users::
@c * Required Information for NLI Provider-Specific Addenda::
* NLI Header Files::
* NLI Library::
* NLI Drivers and Modules::
* NLI Utilities::
* NLI File Formats::
* NLI Compatibility and Porting::
* Glossary of NLI Terms and Acronyms::
* References::
* Licenses::
@c @iftex
@c * Indices::
@c @end iftex
@c @ifnottex
* Index::
@c @end ifnottex
@end menu

@iftex
@c insert list of figures and tables for printed manuals
@page
@heading List of Figures
@listoffloats Figure
@page
@heading List of Tables
@listoffloats Table
@end iftex

@node Preface
@unnumbered Preface

@section Notice

Software in this document and related software is released under the AGPL (@pxref{GNU Affero General
Public License}).  Please note, however, that there are different licensing terms for some of the
manual package and some of the documentation.  Consult permission notices contained in the
documentation of those components for more information.

This document is released under the FDL (@pxref{GNU Free Documentation License}) with no invariant
sections, no front-cover texts and no back-cover texts.

@section Abstract

This document is a @value{MANUAL_TYPE} containing technical details concerning the implementation of
the @value{MANUAL_TITLE} for OpenSS7.  It contains recommendations on software architecture as well
as platform and system applicability of the @value{MANUAL_TITLE}.

@noindent
This document specifies a @value{MANUAL_TITLE} Specification in support of the OpenSS7 @value{LONG}
(@value{SHORT}) protocol stacks.  It provides abstraction of the @value{PART} interface to these
components as well as providing a basis for @value{PART} control for other @value{PART} protocols.

@subsection Purpose
@cpindex STREAMS

The purpose of this document is to provide technical documentation of the @value{MANUAL_TITLE}.
This document is intended to be included with the OpenSS7 @cite{STREAMS} software package released
by @cite{OpenSS7 Corporation}.  It is intended to assist software developers, maintainers and users
of the @value{MANUAL_TITLE} with understanding the software architecture and technical interfaces
that are made available in the software package.

@subsection Intent

It is the intent of this document that it act as the primary source of information concerning the
@value{MANUAL_TITLE}.  This document is intended to provide information for writers of OpenSS7
@value{MANUAL_TITLE} applications as well as writers of OpenSS7 @value{MANUAL_TITLE} Users.

@subsection Audience

The audience for this document is software developers, maintainers and users and integrators of the
@value{MANUAL_TITLE}.  The target audience is developers and users of the OpenSS7 SS7 stack.

@section Revision History

Take care that you are working with a current version of this documentation: you will not be
notified of updates.  To ensure that you are working with a current version, check the
@uref{http://www.openss7.org/,OpenSS7 Project} website for a current version.

A current version of this specification is normally distributed with the @cite{@value{PACKAGE_TITLE}}
package, @file{@value{PACKAGE}-@value{VERSION}}.@footnote{@url{http://www.openss7.org/repos/tarballs/@value{PACKAGE}-@value{VERSION}.tar.bz2}}

@subsection Version Control

@noindent
Although the author has attempted to ensure that the information in this document is complete and
correct, neither the Author nor OpenSS7 Corporation will take any responsibility in it.
@cite{OpenSS7 Corporation} is making this documentation available as a reference point for the
industry.  While @cite{OpenSS7 Corporation} believes that these interfaces are well defined in this
release of the document, minor changes may be made prior to products conforming to the interfaces
being made available.  @cite{OpenSS7 Corporation} reserves the right to revise this software and
documentation for any reason, including but not limited to, conformity with standards promulgated by
various agencies, utilization of advances in the state of the technical arts, or the reflection of
changes in the design of any techniques, or procedures embodied, described, or referred to herein.
@cite{OpenSS7 Corporation} is under no obligation to provide any feature listed herein.

@smallexample
@verbatim
$Log: nli.texi,v $
Revision 0.9.2.14  2009-05-01 04:50:30  brian
- update documentation for release

Revision 0.9.2.13  2009-04-30 06:07:44  brian
- more documentation updates for release

Revision 0.9.2.11  2009-04-29 18:05:42  brian
- updated documentation for release

Revision 0.9.2.9  2008-11-26 12:57:42  brian
- corrections to FDL update

Revision 0.9.2.8  2008-11-26 12:01:49  brian
- updated to FDL 1.3

@end verbatim
@end smallexample

@section ISO 9000 Compliance

Only the @TeX{}, texinfo, or roff source for this maual is controlled.  An opaque (printed,
postscript or portable document format) version of this manual is a @strong{UNCONTROLLED VERSION}.

@subsection Disclaimer

@noindent
@strong{@cite{OpenSS7 Corporation} disclaims all warranties with regard to this documentation
including all implied warranties of merchantability, fitness for a particular purpose,
non-infrincement, or title; that the contents of the manual are suitable for any purpose, or that
the implementation of such contents will not infringe on any third party patents, copyrights,
trademarks or other rights.  In no event shall @cite{OpenSS7 Corporation} be liable for any direct,
indirect, special or consequential damages or any damages whatsoever resulting from loss of use,
data or profits, whether in an action or contract, negligence or other tortious action, arising out
of or in connection with any use of this documentation or the performance or implementation of the
contents thereof.}

@subsection U.S. Government Restricted Rights

If you are licensing this Software on behalf of the U.S. Government ("Government"), the following
provisions apply to you.  If the Software is supplied by the Department of Defense ("DoD"), it is
classified as "Commercial Computer Software" under paragraph 252.227-7014 of the DoD Supplement to
the Federal Aquisition Regulations ("DFARS") (or any successor regulations) and the Government is
acquiring only the license rights granded herein (the license rights customarily provided to
non-Government users).  If the Software is supplied to any unit or agency of the Government other
than DoD, it is classified as "Restricted Computer Software" and the Government's rights in the
Software are defined in paragraph 52.227-19 of the Federal Acquisition Regulations ("FAR") (or any
successor regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplerment
to the FAR (or any successor regulations).

@section Acknowledgements

@url{http://www.openss7.org/,The OpenSS7 Project} was funded in part by:

@itemize @bullet
@item @url{http://www.monavacon.com/,Monavacon Limited}
@item @url{http://www.openss7.com/,OpenSS7 Corporation}
@end itemize

Thanks to the subscribers to and sponsors of @url{http://www.openss7.org/, The OpenSS7 Project}.
Without their support, open software like this would not be possible.

As with most open source projects, this project would not have been possible without the valiant
efforts and productive software of the @url{http://www.fsf.org/,Free Software Foundation}, the
@url{http://www.kernel.org/,Linux Kernel Community}, and the open source software movement at large.

@node Introduction
@chapter Introduction
@cpindex STREAMS

@menu
* History::
* Development::
@end menu

The Network Layer Interface (NLI) was developed by Spider Systems, Ltd., (now a division of Emerson
Power), and is widely available on many platforms.  For example, @cite{AIX AIXlink/X.25},
@cite{HP-UX HP X.25/9000}, @cite{Solaris Solstice X.25} and @cite{SunLink X.25}, @cite{IRIX IRIS
SX.25}, @cite{PT X.25} and @cite{SBE X.25} implement the Network Layer Interface (NLI).

The Network Layer Interface (NLI) was designed to be used directly with standard @dfn{STREAMS}
system calls and does not require the use of a cooperating user space shared library.  Applications
programs directly use the @command{getmsg(2s)}, @command{getpmsg(2)}, @command{putmsg(2s)},
@command{putpmsg(2)} and @command{ioctl(2)} system calls.@footnote{See @manref{getmsg(2s)},
@manref{getpmsg(2)}, @manref{putmsg(2s)}, @manref{putpmsg(2)} and @manref{ioctl(2)} manual pages.}
Nevertheless, user shared object libraries can easily be constructed using this @dfn{STREAMS}
service primitive interface.

The system header files that must be included when compiling user applications,
or @dfn{STREAMS} drivers and modules that use the interface, are detailed in
@ref{NLI Header Files}.

A user library, @file{libsx25}, is provided, not for interfacing to the message primitive service
interface, but for providing various helper functions when using the @dfn{STREAMS} service
interface.  This library is detailed in @ref{NLI Library}.

@node History
@section History

The original @cite{UNIX@registeredsymbol{} System V Release 3.2} with the @cite{Network Service
Utilities (NSU)} package, defined three levels of interface corresponding to boundaries of the
@cite{OSI Model}, as follows:

@table @dfn
@item Transport Layer Inteface

This interface later turned into the @cite{Transport Provider Interface (TPI)}
that was standardized by @cite{UNIX International} and later standardized by the
@cite{Open Group}.
Two libraries existed in @cite{SVR 4} and @cite{X/Open}: the @dfn{Transport
Layer Interface (TLI)} library from @cite{SVR 4} and the @dfn{X/Open Transport
Interface (XTI)} library from the @cite{Open Group}.
The @cite{Open Group} also standardized the XTI interface for X.25.

@item Network Layer Interface

This interface later turned into the @cite{Network Provider Interface (NPI)}
that was standardized by @cite{UNIX International}, but was not standardized by
the @cite{Open Group}.  The NPI was used for X.25 as well as CONS in accordance
with X.223.
No library was provided by @cite{SVR 4} for this interface; however,
@uref{http://www.gcom.com/,,GCOM} specified an @dfn{NPI API Library} also
provided by @uref{http://www.openss7.org/,,OpenSS7}.
For X.25, @cite{Spider Systems, Ltd.} provided the @dfn{Network Layer Interface
(NLI)} that is the subject of this specification.

@item Link Layer Interface

This interface later tunred into the @cite{Data Link Provider Inteface (DLPI)}
that was standardized by @cite{UNIX International} and later standardized by the
@cite{Open Group}.
No library was provided by @cite{SVR 4} for this interface; however,
@uref{http://www.gcom.com/,,GCOM} specifies a @dfn{DLPI API Library} also
provided by
@uref{http://www.openss7.org/,,OpenSS7}.
For X.25, @cite{Spider Systems, Ltd.} provided the @dfn{Link Layer Interface
(LLI)} that is the subject of a companion specification.
@cite{Sun Microsystems} has recently specified a @dfn{DLPI Library} for
@cite{Solaris 11} that is also provided by
@uref{http://www.openss7.org/,,OpenSS7}.

@item Media Access Control

This interface was proposed by @cite{NCR Comten} as the @cite{Communications
Device Interface (CDI)} that was not standardized.
@cite{SVR 4} provided a @dfn{Media Access Control (MAC)} interface also
supported by
@uref{http://www.openss7.org/,,OpenSS7}.
@cite{Spider Systems, Ltd.} X.25 does not directly use an interface at this
level but, instead relies on access at the LLI.

@item Wide Area Network

This interface was proposed by @cite{NCR Comten} as the @cite{Communications
Device Interface (CDI)} that was not standardized.
For X.25, @cite{Spider Systems, Ltd.} provided the @dfn{Wide Area Network (WAN)
Interface} that is the subject of a companion specification.

@end table

The @dfn{Network Layer Interface (NLI)} specified by @cite{Spider Systems, Ltd.}
was the most widespread implementation of X.25 found on
@cite{UNIX@registeredsymbol{}} and Unix-like systems.

@node Development
@section Development
@cindex Spider Systems, Ltd.

Although the @cite{Spider Systems, Ltd.} @dfn{Network Layer Interface (NLI)}
that is the subject of this specification was and is still in widespread use for
the implementation of X.25 on @cite{UNIX@registeredsymbol{}} and Unix-like
systems, it must be stressed that this is a legacy interface.  It is provided by
@uref{http://www.openss7.org/,,The OpenSS7 Project} only for the purpose of
porting legacy applications, drivers and modules to @b{Linux}.  The following
principles should be adhered to:

@itemize

@item
The only formal standard interface for X.25 was specified by the @cite{Open
Group} using the @dfn{X/Open Transport Interface}
library, specified in reference @ref{XX25,,XX25}.
This interface is supported by @uref{http://www.openss7.org/,,OpenSS7} using the
XX25 module described in @ref{XX25 Module}.

This interface alone should be used for new applications.

@item
For intermodule communications, the only industry standard interface for X.25
was specified by @cite{UNIX International} as the @dfn{Network Provider
Interface (NPI)} specified in reference @ref{NPI,,NPI}.  This interface is
supported by @uref{http://www.openss7.org/,,OpenSS7} directly and using the NPI
module described in @ref{NPI Conversion Module}.

This interface alone should be used for new inter-module service interfaces.

@item
For applications interfaces and inter-module service interfaces for CONS
(X.223), the only industry standard interface was specified by @cite{UNIX
International} as the @dfn{Network Provider Interface (NPI)} specified in
reference @ref{NPI,,NPI}.  This interface is supported by
@uref{http://www.openss7.org/,,OpenSS7} directly and using the CON module
described in @ref{CONS Module}.

This interface alone should be used by OSI applications, drivers and modules.

@item
When porting legacy applications, drivers and modules to @b{Linux}, the
@dfn{Network Layer Interface (NLI)} as specified in this document may be used
both for application interface and for inter-module service interfaces.

@end itemize

Note that when porting legacy NLI applications to @b{Linux} using the interface
specified in this document, that there are many variations in implementation of
the @dfn{NLI} as modified by licensors of the @cite{Spider Systems, Ltd.}
implementation.  These modifications are ofter incompatible.  Some of the
incompatibilities are hidden by an X.25 utility library described in @ref{NLI
Library}.
@cindex Spider Systems, Ltd.

@node Model of the X.25 Packet Layer
@chapter Model of the X.25 Packet Layer
@cindex Model of the X.25 packet layer
@cindex STREAMS

The @dfn{X.25 Packet Layer} provides the means to manage the operation of the
X.25 network.  It is responsible for the routing and management of data exchange
between network-user entities.

The NLI defines the services provided by the X.25 packet layer to the X.25 user
at the boundary between the X.25 packet layer and the X.25 user entity.  The
interface consists of a set of messages defined as @dfn{STREAMS} messages that
provide access to the X.25 packet layer services, and are transferred between
the X.25 user entity and the X.25 packet layer provider.

These messages are of two types: ones that originate from the X.25 user, and
other that originate from the X.25 packet layer.  The messages that originate
from the X.25 user make requests to the X.25 packet layer, or respone to an
event of the X.25 packet layer.  The messages that originate from the X.25
packet layer, are either confirmations of a request or are indications to the
X.25 user that the event has occured.  @figref{1} shows the model of the NLI.

@figuresized{nli_fig1,1,Model of the NLI,5.0in}

The NLI allows the X.25 packet layer (as a @dfn{STREAMS} driver) to be
configured with an X.25 user (as a @dfn{STREAMS} module) that conforms to the
NLI.  An X.25 user can also be a user program that conforms to the NLI and
accesses the X.25 packet layer using @manref{putmsg(2s)}, @manref{putpmsg(2)},
@manref{getmsg(2s)}, @manref{getpmsg(2)}, and @manref{ioctl(2)} system calls.

@node NLI Services Definition
@chapter NLI Services Definition
@cindex NLI services

@menu
* NLI Modes::
* NLI Commands::
* NLI Data Structures::
@end menu

The features of the NLI are defined in termsof the services provided by the X.25
packet layer, and the individual messages that may flow between the X.25 user
and the X.25 packet layer.

The services supported by the NLI are based on three related modes of
communication, X.25 mode, non-X.25 mode, and CONS mode.

@node NLI Modes
@section NLI Modes
@cindex NLI modes

@subsubheading Packet Level Features

@itemize
@item permanent virtual circuits;
@item extended packet sequence numbering;
@item D-bit support;
@item packet transmission;
@item incoming calls barred;
@item outgoing calls barred;
@item one-way logical channel incoming;
@item one-way logical channel outgoing;
@item two-way logical channel;
@item non-standard default packet sizes;
@item non-standard default window sizes;
@item default throughput class assignement;
@item flow control parameter negotiation;
@item throughput class negotiation;
@item closed user group;
@item bilateral closed user group;
@item fast select;
@item fast select acceptance;
@item reverse charging;
@item reverse charging acceptance;
@item local charging prevention;
@item network user identification selection;
@item network user identification override;
@item RPOA selection;
@item called line address modification;
@item call redirection;
@item call deflection;
@item transit delay;
@item protection;
@item priority;
@item TOA/NPI addressing;
@item programmable facilities.
@end itemize

@subsubheading X.25 Facilities

@itemize
@item fast select request;
@item fast select with unrestricted response;
@item fast select with restricted response;
@item reverse charging;
@item packet size negotiation;
@item window size negotiation;
@item closed user groups;
@item bilateral closed user groups;
@item network user identification;
@item RPOA selection;
@item called line address modification;
@item call redirection;
@item call charging;
@item programmable facilities;
@item DTE facility marker;
@item extended address;
@item throughput class;
@item transit delay;
@item expedited data;
@item protection;
@item priority;
@item call user data;
@item clear user data.
@end itemize

@subsubheading X.25 Operational Support

@itemize
@item Q-bit support for X.29 services;
@item M-bit support for packet segmentation and reassembly;
@item D-bit for data delivery confirmation;
@item expedited data;
@item call charging;
@item called line address modification;
@item call deflection;
@item clear user data.
@end itemize


@node NLI Commands
@section NLI Commands
@cindex NLI commands

@multitable @columnfractions 0.17 0.15 0.68
@item Command @tab Description @tab Section
@item @prim{N_CI} @tab @type{xcallf} @tab @ref{Connect Request/Indication}.
@item @prim{N_CC} @tab @type{xccnff} @tab @ref{Connect Response/Confirmation}.
@item @prim{N_Data} @tab @type{xdataf} @tab @ref{Data}.
@item @prim{N_DAck} @tab @type{xdatacf} @tab @ref{Data Acknowledgement}.
@item @prim{N_EData} @tab @type{xeadataf} @tab @ref{Expedited Data}.
@item @prim{N_EAck} @tab @type{xedatacf} @tab @ref{Expedited Data Acknowledgement}.
@c @item @prim{DTflow} @tab @type{} @tab .
@item @prim{N_RI} @tab @type{xrstf} @tab @ref{Reset Request/Indication}.
@item @prim{N_RC} @tab @type{xrscf} @tab @ref{Reset Response/Confirmation}.
@item @prim{N_DI} @tab @type{xdiscf} @tab @ref{Disconnect Request/Indication}.
@item @prim{N_DC} @tab @type{xdcnff} @tab @ref{Disconnect Confirmation}.
@item @prim{N_Abort} @tab @type{xabortf} @tab @ref{Abort Indication}.
@item @prim{N_Xlisten} @tab @type{xlistenf} @tab @ref{Listen Request/Response}.
@item @prim{N_Xelisten} @tab @type{xlistenf} @tab @ref{Extended Listen Request/Response}.
@item @prim{N_Xcanlis} @tab @type{xcanlisf} @tab @ref{Listen Cancel Request/Response}.
@item @prim{N_PVC_ATTACH} @tab @type{pvcattf} @tab @ref{PVC Attach}.
@item @prim{N_PVC_DETACH} @tab @type{pvcdetf} @tab @ref{PVC Detach}.
@c @item @prim{M_CParmReref} @tab @type{} @tab
@c @item @prim{M_CParmUnref} @tab @type{} @tab
@c @item @prim{M_CircuitId} @tab @type{} @tab
@end multitable

@node NLI Data Structures
@section NLI Data Structures
@cindex NLI data structures

@menu
* Addresses::
* CONS Quality of Service Parameters::
* Non-OSI X.25 Facilities::
@end menu

@node Addresses
@subsection Addresses

@menu
* xaddrf::	    X.25 Address Format
* lsapformat::	    LSAP Address Format
@end menu

In call requests and responses, it is necessary to specify the X.25 addresses
associated with the connection.  These addresses consist of the called, calling
and responding addresses.  A common structure is used for these addresses.  The
addressing format used by this stricture provides the following information:

@itemize

@item the subnetwork (data link) on which outgoing Connect Requests are to be
sent and on which incoming Connect Indications arrive;

@item Network Service Access Points (NSAP) and Subnetwork Point of Attachments
(SNPA), or Data Terminal Equipment (DTE) addresses and Link Service Access
Points (LSAP); and,

@item optional formats for the encoding of addresses (NSAP).

@end itemize

@node xaddrf
@subsubsection X.25 Address Format
@cindex X.25 address format

Addresses are represent using an @type{xaddrf} structure.  The @type{xaddrf}
structure is formatted as follows:

@example
@group
@verbatim
#define NSAPMAXSIZE 20

struct xaddrf {
    union {
        uint32_t link_id;
        uint32_t sn_id;
    };
    unsigned char aflags;
    struct lsapformat DTE_MAC;
    unsigned char nsap_len;
    unsigned char NSAP;
};
@end verbatim
@end group
@end example

The @type{xaddrf} structure contains the following members:

@table @parm
@item link_id
Holds the link number as a @type{uint32_t}.  By default, @parm{link_id} has a
valud of @samp{0xFF}.  When @parm{link_id} is @samp{0xFF}, Solstice
X.25 attempts to match the valled address with an entry in a routing
configuration file.  If it cannot find a match, it routes the call over the
lowest numbered WAN link.
@item sn_id

Note that in some implementations, the @parm{sn_id} field is
declared as @type{unsigned long}; however, this causes complications for 32-bit
applications running over a 64-bit kernel: i.e., it requires that the data model
of the application be known to the kernel module and conversions be supported.
Therefore, this field appears in the header file as the 32- vs.  64-bit agnostic
@type{uint32_t}.
@item aflags
Specifies the options required (or used) by the subnetwork to encode and
interpret addresses.  It may have one of the following values:
@multitable @columnfractions 0.15 0.1 0.6
@item @pval{NSAP_ADDR} @tab @samp{0x00} @tab @parm{NSAP} is OSI-encoded NSAP address.
@item @pval{EXT_ADDR} @tab @samp{0x01} @tab @parm{NSAP} is non-OSI-encoded extended address.
@item @pval{PVC_LCI} @tab @samp{0x02} @tab @parm{NSAP} is a PVC number.
@item @pval{PVC_LCI} @tab @samp{0x02} @tab @parm{DTE_MAC} is the LCI of a PVC.
@end multitable
When the @parm{NSAP} field is empty, @parm{aflags} takes the value zero
(0).@footnote{See @manref{x25addr(5)}, @manref{stox25(3)}, @manref{x25tos(3)},
and @manref{gexhostent(3)} manual pages for details about the X.25 address
format.}
@item DTE_MAC
The DTE address, or LSAP as two BCD digits per byte, right justified, or the
@pval{PVC_LCI} as three BCD digits with two digits per byte, right
justified.
Holds the DTE address, the Medium Access Control plus Service Access Point
(MAC+SAP) address or the LCI.  This is binary. @xref{lsapformat}.
@item nsap_len
The length in semi-octets of the NSAP as two BCD digits per byte, right
justified.
This indicates the length of the NSAP, if any (and where appropriate), in
semi-octets.
@item NSAP
The NSAP or address extension (see @parm{aflags}) as two BCD digitis per byte,
right justified.
This carries the NSAP or address extension (see field @parm{aflags}) when
present as indicated by @parm{nsap_len}.  This is binary.
@end table

@node lsapformat
@subsubsection LSAP Address Format
@cindex LSAP address format

The @type{lsapformat} structure is formatted as follows:.
@example
@group
@verbatim
#define LSAPMAXSIZE

struct lsapformat {
    unsigned char lsap_len;
    unsigned char lsap_add[LSAPMAXSIZE];
};
@end verbatim
@end group
@end example
The fields in this structure are defined as follows:
@table @parm
@item lsap_len
This gives the length of the DTE address, the MAC+SAP address, or the LCI in
semi-octets.  For example for Ethernet, the length is always 14 to indicate the
MAC (12) plush SAP (2).  The SAP always follows the MAC address.  The DTE can be
up to 15 decimal digits unless X.25(88) and Type Of Address/Numbering Plan
Identification (TOA/NPI) addressing is being used, in which case, it can be up
to 17 decimal digits.  For an LCI, the length is 3.
The length of the DTE address or LSAP as two BCD digits per byte, right
justified.  An LSAP is always 14 digits long.  A DTE address can be up to 15
decimal digtis unless X.25(88) and TOA/NPI addressing is used, in which case it
can be up to 17 decimal digits.  A @pval{PVC_LCI} is 3 digits long.
@item lsap_add
This holds the DTE, MAC+SAP or LCI, when present, as indicated by
@parm{lsap_len}.  This is binary.
The DTE address, LSAP or @pval{PVC_LCI} as two BCD digits per byte, right
justified.
@end table

For TOA/NPI the TOA is:

@multitable {0000}{0}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0000 @tab 0 @tab Network-dependent number or unknown.
@item 0001 @tab 1 @tab International number.
@item 0010 @tab 2 @tab National number.
@item 0011 @tab 3 @tab Network specific number (for use in private networks).
@item 0100 @tab 4 @tab Complementary address without main address.
@item 0101 @tab 5 @tab Alternative address.
@end multitable

NPI for other than Alternative address is:

@multitable {0000}{0}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0000 @tab 0 @tab Network-dependent number or unknown.
@item 0001 @tab 1 @tab ITU-T Recommendation E.164 (digital).
@item 0010 @tab 2 @tab ITU-T Recommendation E.164 (analog).
@item 0011 @tab 3 @tab ITU-T Recommendation X.121.
@item 0100 @tab 4 @tab ITU-T Recommendation F.69 (telex numbering plan).
@item 0101 @tab 5 @tab Private number plan (for private use only).
@end multitable

NPI when TOA is Alternative Address is:

@multitable {0000}{0}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0000 @tab 0 @tab Character string coding to ISO/IEC 646.
@item 0001 @tab 1 @tab OSI NSAP address coded per X.213/ISO 8348.
@item 0010 @tab 2 @tab MAC address per IEEE 802.2/ISO/IEC 8802:1998.
@item 0011 @tab 3 @tab Internet Address per RFC 1166. (i.e. an IPv4 address).
@end multitable

@node CONS Quality of Service Parameters
@subsection CONS Quality of Service Parameters

Negotiable X.25 facilities are supported by the @value{SHORT} driver.  This section
describes the request and negotiation of these facilities, and the data
structures used by the NLI primitives.

The facilities are broken down into two groups:

@itemize

@item those required for Connection-Oriented Network Service (CONS) support, and

@item those requried for non-OSI procedures (X.29, for example).

@end itemize

The CONS quality of service (QOS) parameters supported are the following:

@itemize

@item Throughput Class

@item Minimum Throughput Class

@item Target Transit Delay

@item Maximum Acceptable Transit Delay

@item Use of Expedited Data

@item Protection

@item Receipt Acknolwedgement

@end itemize

CONS-related quality of service parameters are defined in the @type{qosformat}
structure.  The @type{qosformat} structure is formatted as follows:

@example
@group
@verbatim
#define MAX_PROT 32

struct qosformat {
    unsigned char reqtclass;
    unsigned char locthroughput;
    unsigned char remthroughput;
    unsigned char reqminthruput;
    unsigned char locminthru;
    unsigned char remminthru;
    unsigned char reqtransitdelay;
    unsigned short transitdelay;
    unsigned char reqmaxtransitdelay;
    unsigned char acceptable;
    unsigned char reqpriority;
    unsigned char reqprtygain;
    unsigned char reqprtykeep;
    unsigned char prtydata;
    unsigned char prtygain;
    unsigned char prtykeep;
    unsigned char reqlowprtydata;
    unsigned char reqlowprtygain;
    unsigned char reqlowprtykeep;
    unsigned char lowprtydata;
    unsigned char lowprtygain;
    unsigned char lowprtykeep;
    unsigned char protection_type;
    unsigned char prot_len;
    unsigned char lowprot_len;
    unsigned char protection[MAX_PROT];
    unsigned char lowprotection[MAX_PROT];
    unsigned char reqexpedited;
    unsigned char reqackservice;
    struct extraformat xstras;
};
@end verbatim
@end group
@end example

The @type{qosformat} structure has the following members:

@table @parm
@item reqtclass
When non-zero, conveys that throughput negotiation is selected.
@item locthroughput
Contains the four-bit throughput encoding for the local to remote direction.
@item remthroughput
Contains the four-bit throughput encoding for the remote to local direction.
@item reqminthruput
When non-zero, conveys that minimum throughput negotiation is selected.
@item locminthru
When @parm{reqminthruput} is non-zero, conveys the four-bit throughput
encoding for the local to remote direction.
@item remminthru
When @parm{reqminthruput} is non-zero, conveys the four-bit throughput
encoding for the remote to local direction.
@item reqtransitdelay
When non-zero, conveys that target transit delay negotiation is selected.
@item transitdelay
When @parm{reqtransitdelay} is non-zero, conveys the 16-bit value.  In a
Connect Confirmation, the value of the selected transit delay is placed in this
field and is non-zero.
@item reqmaxtransitdelay
When non-zero, conveys that maximum acceptable transit delay negotiation is
selected.
@item acceptable
When @parm{reqmaxtransitdelay} is non-zero, conveys the 16-bit value of the
maximum acceptable transit delay. 

Note: Transit delay selection applies only to Connect Requests.  There is no
transit dleay QOS parameter in a Connect Response.  The correct response when
the indicated QOS is unattainable is to make a Disconnect Request.  In a Connect
Confirmation, the value of the selected transit delay is placed in the
@parm{transitdelay} field when such negotiation takes place.
@item reqpriority
When non-zero, conveys that data priority negotiation is selected.
@item reqprtygain
When non-zero, conveys that gain priority negotiation is selected.
@item reqprtykeep
When non-zero, conveys that keep priority negotiation is selected.
@item prtydata
When @parm{reqpriority} is non-zero, contains the 8-bit priority for
sending data.
@item prtygain
When @parm{reqprtygain} is non-zero, contains the 8-bit priority for
gaining a connection.
@item prtykeep
When @parm{reqprtykeep} is non-zero, contains the 8-bit priority for
keeping a connection.
@item reqlowprtydata
When non-zero, conveys that data low priority negotiation is selected.
This field is only valid on Connect Requests/Indications.
@item reqlowprtygain
When non-zero, conveys that gain low priority negotiation is selected.
This field is only valid on Connect Requests/Indications.
@item reqlowprtykeep
When non-zero, conveys that keep low priority negotiation is selected.
This field is only valid on Connect Requests/Indications.
@item lowprtydata
When @parm{reqlowprtydata} is non-zero, contains the 8-bit priority for
sending data.
This field is only valid on Connect Requests/Indications.
@item lowprtygain
When @parm{reqlowprtygain} is non-zero, contains the 8-bit priority to gain a
connection.
This field is only valid on Connect Requests/Indications.
@item lowprtykeep
When @parm{reqlowprtykeep} is non-zero, contains the 8-bit priority to keep a
connection.
This field is only valid on Connect Requests/Indications.
@item protection_type
When non-zero, conveys that protection negotiation is selected.  The field can
be one of the following valuse:

@multitable @columnfractions 0.1 0.2 0.4
@item Value @tab Name @tab Meaning
@item 1 @tab @pval{PRT_SRC} @tab Source address specific.
@item 2 @tab @pval{PRT_DST} @tab Destination address specific.
@item 3 @tab @pval{PRT_GLB} @tab Globally unique.
@end multitable
@item prot_len
@item lowprot_len
This field is only valid on Connect Requests/Indications.
@item protection
@item lowprotection
This field is only valid on Connect Requests/Indications.
@item reqexpedited
When non-zero, conveys that expedited data negotiation is selected.  For Connect
Indications, a non-zero value implies that the Expedited Data negotiation
facility was present in the incoming call packet, and that its use was requested.

Note: Negotiation is a CONS procedure.  When the facility is present and
indicates non-use,  use cannot be negotiated by Connect Responses.  For a
description of the use of the @parm{CONS_call} field in Connect Requests and
Connect Responses, see @ref{Connect Request/Indication}, and @ref{Connect
Response/Confirmation}.

For incoming or outgoing non-CONS calls (denoted by the @parm{CONS_call} flag
set to zero (0)), Expedited Data negotiation is not required: interrupt data is
always available in X.25.  This means that this field is ignored on Connect
Requests and Responses for non-CONS calls.
@item reqackservice
When non-zero, conveys that receipt confirmation negotiation is selected.  For
Connect Indications, a non-zero value implies that the Receipt Confirmation
negotiation facility was present in the incoming call packet, and that its use
was requested.  This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item - @tab 0 @tab No receipt confirmation.
@item @pval{RC_CONF_DTE} @tab 1 @tab Confirmation by the remote terminal.
@item @pval{RC_CONF_APP} @tab 2 @tab Confirmation by the remote application.
@end multitable
In the case of receipt confirmation by the remote DTE, no acknowledgements are
expected or given over the X.25 service interface.  In the case of receipt
confirmation by the remote application, there is a one-to-one corrrespondence
between D-bit data and acknowledgements, with one  data acknowlegement being
received or sent for each D-bit data packet sent or received over the X.25
service interface.
@item xstras
@end table

@node Non-OSI X.25 Facilities
@subsection Non-OSI X.25 Facilities

Although these are non-OSI facilities, they are also negotiable with CONS.  For
those NLI applications that require them, the non-OSI facilities supported are
as follows:

@itemize

@item non-OSI extended addressing;

@item X.25 fast select request/indication with no restriction on response;

@item X.25 fast select reqeust/indication with restriction on response;

@item X.25 reverse charging;

@item X.25 packet size negotiation;

@item X.25 window size negotiation;

@item X.25 network user identification;

@item X.25 recognized private operating agency selection;

@item X.25 closed user groups;

@item X.25 call deflection; and,

@item X.25 programmable facilities.

@end itemize

Non-OSI X.25 Facilities are defined in the @type{extraformat} structure.  The
@type{extraformat} structure is formatted as follows:

@example
@group
@verbatim
#define MAX_NUI_LEN  64
#define MAX_RPOA_LEN  8
#define MAX_CUG_LEN   2
#define MAX_FAC_LEN  32
#define MAX_TARIFFS   4
#define MAX_CD_LEN   MAX_TARRIFS * 4
#define MAX_SC_LEN   MAX_TARRIFS * 4
#define MAX_MU_LEN   16
@end verbatim
@end group

@group
@verbatim
struct extraformat {
    unsigned char fastselreq;
    unsigned char restrictresponse;
    unsigned char reversecharges;
    unsigned char pwoptions;
    unsigned char locpacket;
    unsigned char rempacket;
    unsigned char locwsize;
    unsigned char remwsize;
    int nsdulimit;
    unsigned char nui_len;
    unsigned char nui_field[MAX_NUI_LEN];
    unsigned char rpoa_len;
    unsigned char rpoa_field[MAX_RPOA_LEN];
    unsigned char cug_type;
    unsigned char cug_field[MAX_CUG_LEN];
    unsigned char reqcharging;
    unsigned char chg_cd_len;
    unsigned char chg_cd_field[MAX_CD_LEN];
    unsigned char chg_sc_len;
    unsigned char chg_sc_field[MAX_SC_LEN];
    unsigned char chg_mu_len;
    unsigned char chg_mu_field[MAX_MU_LEN];
    unsigned char called_add_mod;
    unsigned char call_redirect;
    struct lsapformat called;
    unsigned char call_deflect;
    unsigned char x_fac_len;
    unsigned char cg_fac_len;
    unsigned char cd_fac_len;
    unsigned char fac_field[MAX_FAC_LEN];
};
@end verbatim
@end group
@end example

The @type{extraformat} structure has the following members:

@table @parm
@item fastselreq
For non-OSI services (e.g. X.29), if the X.25 facility fast select is to be
requested or indicated, this field is non-zero.  For CONS, the use of fast
select is optional.
@item restrictresponse
If the resonse to a Connect Request or Indication is to be a Diconnect
Indiciation, this filed is non-zero.
@item reversecharges
If reverse charging is requested or indicated for a connection, this field is
non-zero.  The configuration mod bit @pval{SUB_REVCHARGE} has an impact on
whether reverse charging is indicated, since it is possible to select a
per-subnetwork policy for reciept of reverse charging.
@item pwoptions
This field is used to indicate per-circuit options.  The field is a bitwise OR
of zero or more of the following values:
@multitable @columnfractions 0.2 0.1 0.55
@item Name @tab Value @tab Meaning when set.
@item @pval{NEGOT_PKT} @tab 0x01 @tab Packet size negotiation permitted.
@item @pval{NEGOT_WIN} @tab 0x01 @tab Window size negotiation permitted.
@item @pval{ASSWERN_HWM} @tab 0x01 @tab Assert concatentaiton limit.
@end multitable
The field is defined as follows:
@example
@group
@verbatim
#define NEGOT_PKT       0x01
#define NEGOT_WIN       0x02
#define ASSERT_HWM      0x04
@end verbatim
@end group
@end example
The field is used for two reasons:
@enumerate
@item The X.25 software always indicates the values of the window and packet
sizes operating on the virtual circuit.  The field @parm{pwoptions} for an
incoming call indicates whether these values are negotiable.
@item In Connect Request/Response message, the NLI user can set
@parm{nsdulimit}, the limit value for packet concatentation by the X.25 level,
to a value different from the limit in the subnetwork configuration database.
It is not a negotiable option, so whatever the user requests is used.
@end enumerate
@item locpacket
When non-zero, contains the local to remote direction packet size.
The default value, @pval{DEF_X25_PKT}, is seven (7).
@item rempacket
When non-zero, contains the remote to local direction packet size.
The default value, @pval{DEF_X25_PKT}, is seven (7).
@item locwsize
When non-zero, contains the local to remote direction window size.
The default value, @pval{DEF_X25_WIN}, is two (2).
@item remwsize
When non-zero, contains the remote to local direction window size.
The default value, @pval{DEF_X25_WIN}, is two (2).
@item nsdulimit
When non-zero, and the appropriate bit is set in the @parm{pwoptions} field,
this field is used as the specified concatentaiton limit.
@item nui_len
Valid in Connect Requests and Connect Responses, when non-zero, specifies the
length of the @parm{nui_field} in octets.  The Network User Identification
facility is not available on 1980 X.25 networks.
@item nui_field
Contains the Network User Identification (NUI) octets of length @parm{nui_len}.
@item rpoa_len
Valid in Connect Requests only.  When non-zero, the RPOA DNIC information is
suppplied in the @parm{rpoa_field} field and the semi-octets in the field are
of this length.
@item rpoa_field
Contains the Recognized Private Operating Agency (RPOA) semi-octets of length
@parm{rpoa_len}.
@item cug_type
Valid in Connect Requests and Connect Indications only, this field, when
non-zero, is 1 for Closed User Group (CUG) and 2 for Bilateral CUG (two members
only).

Note: Incoming CUG facilities are assumed to have been validated by the network.
No further cehcking is performed.
@item cug_field
Contains the Closed User Group (CUG) semi-octets of length up to four (4)
semi-octets for CUG and four semi-octets (4) for BCUG (Bilateral CUG).
@item reqcharging
When non-zero in a Connect Request of Connect Indication, call charging is
requested; in a Disconnect Indication of Disconnect Confirmation, the
six fields below will give the charging information.
@item chg_cd_len
When non-zero, conveys the length of the @parm{chg_cd_field} field.
@item chg_cd_field
Conveys the call duration.
@item chg_sc_len
When non-zero, conveys the length of the @parm{chg_sc_field} field.
@item chg_sc_field
Conveys the segment count.
@item chg_mu_len
When non-zero, conveys the length of the @parm{chg_mu_field} field.
@item chg_mu_field
Conveys the monetary unit.
@item called_add_mod
When non-zero, conveys the reason value for call modification.
@item call_redirect
When non-zero, conveys the reason for call redirection.
@item called
When @parm{call_redirect} is non-zero, conveys the orignalling called DTE
address.
@item call_deflect
Valid in the Disconnect Request and Disconnect Indication, when non-zero,
conveys the reason for call deflection.  The @parm{deflected} field in the
Disconnect Request or Indication conveys the DTE address, and if required, the
NSAP address to which the call is to be deflected.
@item x_fac_len
Valid in Connect Requests and Connect Indications only,
when non-zero, provides the length of the explicit facility ecnoded strings for
X.25 facilities.
@item cg_fac_len
Valid in Connect Requests and Connect Indiciations only,
when non-zero, provides the length of the explicit facility encoded strings for
non-X.25 facilities for the calling network.
@item cd_fac_len
Valid in Connect Requests and Connect Indiciations only,
when non-zero, provides the length of the explicit facility encoded strings for
non-X.25 facilities for the called network.
@item fac_field
When @parm{x_fac_len}, @parm{cg_fac_len} or @parm{cd_fac_len} are
non-zero, contains the X.25 facilities, non-X.25 facilities for the calling
network, and/or non-X.25 facilities for the called network.

Note: The contents of this field, if supplied, are not validated  or acted upon
by the code.  The X.25 facilities are inserted at the end of any other X.25
facilities that are passed in the Connect Request/Indication (for example,
packet or window sizes).  If any non-X.25 facilities are supplied, the
appropriate marker is inserted before the supplied facilities.
@end table

@node NLI Primitives
@chapter NLI Primitives
@cindex NLI primitives

@menu
* Connect Request/Indication::
* Connect Response/Confirmation::
* Data::
* Data Acknowledgement::
* Expedited Data::
* Expedited Data Acknowledgement::
* Reset Request/Indication::
* Reset Response/Confirmation::
* Disconnect Request/Indication::
* Disconnect Confirmation::
* Abort Indication::
* Listen Request/Response::
* Extended Listen Request/Response::
* Listen Cancel Request/Response::
* PVC Attach::
* PVC Detach::
@end menu

@page
@node Connect Request/Indication
@section Connect Request/Indication
@cindex Connect request/indication

@subheading Format

The Connect Request and Connect Indication use the @type{xcallf} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xcallf} structure.
The data part of the message consists of zero or one @msg{M_DATA} message blocks
containing the Call User Data (if any).

The @type{xcallf} structure is formatted as follows:

@example
@group
@verbatim
struct xcallf {
    unsigned char xl_type;
    unsigned char xl_command;
    int conn_id;
    unsigned char CONS_call;
    unsigned char negotiate_qos;
    struct xaddrf calledaddr;
    struct xaddrf callingaddr;
    struct qosformat qos;
};
@end verbatim
@end group
@end example

@subheading Usage

The Connect Request or Indication message primitive, @prim{N_CI}, is used by
the NS user to request a outgoing connection, or by the NS provider to indicate
an incoming connection.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xcallf} structure.
The data part of the message consists of zero or one @msg{M_DATA} message blocks
containing the Call User Data (CUD) when supplied.

@subheading Parameters

The @type{xcallf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_CI}, for both Connect Requests and Connect Indications.
@item conn_id
This field is used only for Connect Indications.  When an NS user Stream is
listening, multiple incoming Connect Indications can be pending.  This field
indicates the connection identifier for the current Connect Indication for use
by the NS user when responding to this Connection Indication with either a
Connect Response or a Disconnect Request message.
@item CONS_call
Either X.25 or CONS procedures@footnote{ISO/IEC 8878 or ITU-T X.223.} can be used
for calls.  When non-zero, this field indicates that CONS procedures are to be
used.  When zero, this field indicates that X.25 procedures are to be used.
@item negotiate_qos
QOS parameters can be negotiated by the peer or left at default values.  When
non-zero, this field specifies or indicates that QOS parameters are being
negotiated by the NS user or NS user peer and the pertinent ranges are provided
in the @parm{qos} member.  When zero, this field specifies and indicates that
default values are to be used for the NS user or were indicated by the NS user
peer.
@item calledaddr
Conveys the called address.  For outgoing Connect Requests, this is the remote
address to which the call is to be connected.  For incoming Connect Indications,
this is the local address to which the call was initiated.
@item callingaddr
Conveys the calling address.  For outgoing Connect Requests, this is the local
address from which the call is to be connected.  For incoming Connect
Indications, this is the remote address from which the call was initiated.
@item qos
Conveys the quality of service parameters and CONS an non-CONS facilities that
are requested or indicated.
@end table

@subheading State

@subheading Response

When the Connect Request is issued by the NS user, the expected response from
the NS provider is a Connect Conformation or a Disconnect Indication.

When the Connect Indication is issued by the NS provider, the expected response
from the NS user is a Connect Response or a Disconnect Request.

@subheading Equivalence

The Connect Request message primitive is equivalent to the @prim{N_CONN_REQ}
primitive of the NPI; the Connect Indication, the @prim{N_CONN_IND}.

@page
@node Connect Response/Confirmation
@section Connect Response/Confirmation
@cindex Connect response/confirmation

@subheading Format

The Connect Response and Connect Confirmation use the @type{xccnff} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xccnff} structure.
The data part of the message consists of zero or one @msg{M_DATA} message blocks
containing the Call User Data (if any).

The @type{xccnff} structure is formatted as follows:

@example
@group
@verbatim
struct xccnff {
    unsigned char xl_type;
    unsigned char xl_command;
    int conn_id;
    unsigned char CONS_call;
    unsigned char negotiate_qos;
    struct xaddrf responder;
    struct qosformat rqos;
};
@end verbatim
@end group
@end example

@subheading Usage

The Connect Response or Confirmation message primitive, @prim{N_CC}, is used
by the NS user to response to an incoming connection, or by the NS provider to
confirm an outgoing connection.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xccnff} structure.
The data part of the message consists of zero or one @msg{M_DATA} message block
containing the Call User Data (CUD) when supplied.

@subheading Parameters

The @type{xccnff} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_CC}, for both Connect Response and Connect Confirmation.
@item conn_id
This field is only used for Connect Responses.  When an NS user Stream is
listening, multiple incoming Connect Indications can be pending.  This field
specifies the connection identifier from the Connection Indication to which the
NS user is responding.
@item CONS_call
Either X.25 or CONS procedures@footnote{ISO/IEC 8878 or ITU-T X.223.} can be used
for calls.  When non-zero, this field indicates that CONS procedures are to be
used.  When zero, this field indicates that X.25 procedures are to be used.
@item negotiate_qos
QOS parameters can be negotiated by the peer or left at default values.  When
non-zero, this field specifies or indicates that QOS parameters are being
negotiated by the NS user or NS user peer and the pertinent ranges are provided
in the @parm{rqos} member.  When zero, this field specifies and indicates that
default values are to be used for the NS user or were indicated by the NS user
peer.
@item responder
Conveys the responding address.  For Connect Responses, this is the local
address that is responding to the incoming call.  For Connect Confirmations,
this is the remote address that responded to the outgoing call.
@item rqos
Conveys the negotiated quality of service parameters and CONS an non-CONS
facilities in response or confirmation.
@end table

@subheading State


@subheading Response

No response is expected when either the NS user or NS provider issue this
primitive.

@subheading Equivalence

The Connect Response message primitive is equivalent to the @prim{N_CONN_RES}
primitive of the NPI; the Connect Confirmation, the @prim{N_CONN_CON}.

@page
@node Data
@section Data
@cindex Data

@subheading Format

The Data message uses the @type{xdataf} structure.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xdataf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the local or remote NS user data (NSDU).

The @type{xdataf} structure is formatted as follows:

@example
@group
@verbatim
struct xdataf {
    unsigned char xl_type;
    unsigned char xl_command;
    unsigned char More;
    unsigned char setDbit;
    unsigned char setQbit;
};
@end verbatim
@end group
@end example

@subheading Usage

The Data message primitive, @prim{N_Data}, is used to transfer NS user data
to or from the NS user.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xdataf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the local or remote NS user data (NSDU).

@subheading Parameters

The @type{xdataf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_DAT}.
@item xl_command
Always @prim{N_Data}, for both Data Request and Data Indication.
@item More
When non-zero, this field conveys that a subsequent @prim{N_Data} message
primitive will contain additional data belonging to the same NSDU.  When zero,
this field conveys that the data contained in the message primitive completes an
NSDU.
@item setDbit
Conveys that the D-bit is to be (or was) associated with the NSDU.  When the
data portion represents part of an NSDU, the bit must be set or clear on each
request or indication belonging to the same NSDU.
@item setQbit
Conveys that the Q-bit is to be (or was) associated with the NSDU.  When the
data portion represents part of an NSDU, the bit must be set or clear on each
request or indication belonging to the same NSDU.
@end table

@subheading State

This message primitive is only valid during the data transfer phase. 

@subheading Response

No response is expected when either the NS user or NS provider issue this
primitive, unless the D-bit is set, in which case a Data Acknowledgement
response is expected from the NS provider or NS user, respectively.

@subheading Equivalence

The Data message primitive is equivalent to the @prim{N_DATA_REQ} and
@prim{N_DATA_IND} primitives of the NPI.

@page
@node Data Acknowledgement
@section Data Acknowledgement
@cindex Data acknowledgement

@subheading Format

The Data Acknowledgement message uses the @type{xdatacf} structure.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xdatacf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xdatacf} structure is formatted as follows:

@example
@group
@verbatim
struct xdatacf {
    unsigned char xl_type;
    unsigned char xl_command;
};
@end verbatim
@end group
@end example

@subheading Usage

The Data Acknowledgement message primitive, @prim{N_DAck}, is used to
request or indicate acknolwedgement of data.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xdatacf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xdatacf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_DAT}.
@item xl_command
Always @prim{N_DAck}.
@end table

@subheading State

This message primitive is only valid during the data transfer phase. 

@subheading Response

When receipt confirmation from the remote application is active on a VC, this
message primitive is used to acknowledge a previous @prim{N_DAck} request or
indication that had the D-bit set.  There is a one-to-one correspondence between
D-bit data and acknowledgements, with one Data Acknowledgement being conveyed
for each Data message primitive conveyed.  The Data message primitive
acknowledged is always the oldest outstanding Data message primitive that
requested acknowledgement.

For CONS calls, if receipt acknowledgement was negotiated on the connection,
then an acknowledgement is pending for each Data primitive conveyed.  However,
to be compatible with previous releases of the NPI, the value of the
@parm{reqackservice} field in the @parm{qos} structure can be set to request
that the D-bit signifies receipt confirmation by the remote DTE only, thus
ensuring that no acknowledgements are expected or given.

For non-CONS calls, only when the @parm{reqackservice} field in the
@parm{qos} structure has been set to the appropriate value will the Data
Acknolwedgement procedures apply for an D-bit Data requested or indicated.
Otherwise, no acknowledgement is expected or given.

@subheading Equivalence

The Data Acknowledgement message primitive is equivalent to the
@prim{N_DATACK_REQ} and @prim{N_DATACK_IND} primitives of the NPI.

@page
@node Expedited Data
@section Expedited Data
@cindex Expedited data

@subheading Format

The Expedited Data message uses the @type{xedataf} structure.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xedataf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the local or remote expedited NS user data (ENSDU).

The @type{xedataf} structure is formatted as follows:

@example
@group
@verbatim
struct xedataf {
    unsigned char xl_type;
    unsigned char xl_command;
};
@end verbatim
@end group
@end example

@subheading Usage

The Expedited Data message primitive, @prim{N_EData}, is used to transfer
expedited NS user data to or from the NS user.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xedataf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the local or remote expedited NS user data (ENSDU).

The Expedited Data message primitive, @prim{N_EData}, is used when expedited
data, carried by an X.25 interrupt packet, corsses the X.25 NLI service
interface from NS provider to user or NS user to provider.
The Expedited Data message is a confirmed primitive and must be acknowledged
before another expedited data unit can be requested or indicated.

@subheading Parameters

The @type{xedataf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_DAT}.
@item xl_command
Always @prim{N_EData}.
@end table

@subheading State

This message primitive is only valid during the data transfer phase. 

@subheading Response

When NS user or provider issues this primtive it expectes an Expedited Data
Acknowledgement message primitive in reponse.
The Expedited Data message is a confirmed primitive and must be acknowledged
before another expedited data unit can be requested or indicated.

@subheading Equivalence

The Expedited Data message primitive is equivalent to the
@prim{N_EXDATA_REQ} and @prim{N_EXDATA_IND} primitives of the NPI.

@page
@node Expedited Data Acknowledgement
@section Expedited Data Acknowledgement
@cindex Expedited data acknowledgement

@subheading Format

The Expedited Data Acknowledgement message uses the @type{xedatacf} structure.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xedatacf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xedatacf} structure is formatted as follows:

@example
@group
@verbatim
struct xedatacf {
    unsigned char xl_type;
    unsigned char xl_command;
};
@end verbatim
@end group
@end example

@subheading Usage

The Expedited Data Acknowledgement message primitive, @prim{N_EAck}, is used to
request or indicate acknolwedgement of expedited data.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xedatacf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xedatacf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_DAT}.
@item xl_command
Always @prim{N_EAck}.
@end table

@subheading State

This message primitive is only valid during the data transfer phase. 

@subheading Response

The Expedited Data Acknolwedgement message primitive is issued only in
confirmation to the Expedited Data message primitive.  When an Expedited Data
message primitive is delivered to the NS user or provider, the NS provider or
user, respectively, must acknowledged the expedited data.

@subheading Equivalence

The Expedited Data Acknowledgement message primitive has no equivalent in the
NPI.

@page
@node Reset Request/Indication
@section Reset Request/Indication
@cindex Reset request/indication

@subheading Format

The Reset Request and Reset Indication use the @type{xrstf} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xrstf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xrstf} structure is formatted as follows:

@example
@group
@verbatim
struct xrstf {
    unsigned char xl_type;
    unsigned char xl_command;
    unsigned char originator;
    unsigned char reason;
    unsigned char cause;
    unsigned char diag;
};
@end verbatim
@end group
@end example

@subheading Usage

The Reset Request or Indication message primitive, @prim{N_RI}, is used by
the NS user to request reset of the connection, or by the NS provider to
indicate a remote reset.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xrstf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The X.25 cause and diagnostic octets, @parm{cause} and @parm{diag}, are
conveyrs, as well as the CONS @parm{originator} and @parm{reason} codes,
which are mapped from the @parm{cause} and @parm{diag}.  A Reset Request
on a non-CONS call can specify a non-zero @parm{cause} code.  This has
no effect for a CONS call.

@subheading Parameters

The @type{xrstf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_RI}.
@item originator
For a CONS call, contains the CONS originator mapped from the X.25 cause and
diagnostic.  This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.6
@item Constant @tab Value @tab Description
@item @pval{NS_UNKNOWN} @tab 0 @tab Originator is unknown.
@item @pval{NS_USER} @tab 1 @tab Originator is the NS user.
@item @pval{NS_PROVIDER} @tab 2 @tab Originator is the NS provider.
@end multitable
@item reason
For a CONS call, contains the CONS reason, mapped from the X.25 cause and
diagnostic.
This field can have one of the following values when the @parm{originator} is
@pval{NS_PROVIDER}:
@multitable @columnfractions 0.26 0.08 0.52
@item Constant @tab Value @tab Description
@item @pval{NS_RUNSPECIFIED} @tab 233 @tab Unspecified reason.
@item @pval{NS_RCONGESTION} @tab 234 @tab Congestion.
@end multitable
The field can have the following values when the @parm{originator} is
@pval{NS_USER}:
@multitable @columnfractions 0.26 0.08 0.52
@item Constant @tab Value @tab Description
@item @pval{NS_RESYNC} @tab 250 @tab Resynchronization.
@end multitable
The field can have the following values when the @parm{originator} is
@pval{NS_UNKNOWN}:
@multitable @columnfractions 0.26 0.08 0.52
@item Constant @tab Value @tab Description
@item @pval{NS_UNKNOWN} @tab 0 @tab Unspecified reason.
@end multitable
@item cause
Conveys the X.25 cause octet associated with the reset.
@item diag
Conveys the X.25 diagnostic octet associated with the reset.
@end table

@subheading State

This message primitive is valid in the data transfer phase.

@subheading Response

A Reset Request and Reset Indication message primitive is an acknowledged
service.  The NS user expects a Reset Confirmation primitive in response to a
Reset Request; the NS provide, a Reset Response primitive in reesponse to a
Reset Indication.

A collision between a Reset Indication and a Reset Request is taken to
acknolwedge the Reset Request and no Reset Confirmation is then issued.

@subheading Equivalence

The Reset Request message primitive is equivalent to the @prim{N_RESET_REQ}
of the NPI; the Reset Indication, @prim{N_RESET_IND}.

@page
@node Reset Response/Confirmation
@section Reset Response/Confirmation
@cindex Reset response/confirmation

@subheading Format

The Reset Response and Reset Confirmation use the @type{xrscf} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xrscf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xrscf} structure is formatted as follows:

@example
@group
@verbatim
struct xrscf {
    unsigned char xl_type;
    unsigned char xl_command;
};
@end verbatim
@end group
@end example

@subheading Usage

The Reset Response or Confirmation message primitive, @prim{N_RC}, is used
by the NS user to respond to a Reset Indication for the connection, or by the NS
provider to confirm a Reset Request.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xrscf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xrscf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_RC}.
@end table

@subheading State

This message primitive is valid in the data transfer phase.

@subheading Response

The Reset Response message primitive is used by the NS user to respond to and
acknowledge a previous Reset Indication message primitive from the NS provider.
The Reset Confirmation message primitive is used by the NS provider to respond
to and acknowledge a previous Reset Request message primitive from the NS user.

@subheading Equivalence

The Reset Response message primitive is equivalent to the @prim{N_RESET_RES}
of the NPI; the Reset Confirmation, @prim{N_RESET_CON}.

@page
@node Disconnect Request/Indication
@section Disconnect Request/Indication
@cindex Disconnect request/indication

@subheading Format

The Disconnect Request and Disconnect Indication use the @type{xdiscf}
structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xdiscf} structure.
The data part of the message consists of zero or one @msg{M_DATA} message blocks
containing the Clear User Data (if any).

The @type{xdiscf} structure is formatted as follows:

@example
@group
@verbatim
struct xdiscf {
    unsigned char xl_type;
    unsigned char xl_command;
    unsigned char originator;
    unsigned char reason;
    unsigned char cause;
    unsigned char diag;
    int conn_id;
    unsigned char indicated_qos;
    struct xaddrf responder;
    struct xaddrf deflected;
    struct qosformat qos;
};
@end verbatim
@end group
@end example

@subheading Usage

The Disconnect Request or Indication message primitive, @prim{N_DI}, is used
by the NS user to reject an incoming connection or disconnect an existing
connection, or by the NS provider to reject an outgoing connection or disconnect
an existing connection.
The control part of the message consists of one @msg{M_PROTO} message block, and
contains the @type{xdiscf} structure.
The data part of the message consists of zero or one @msg{M_DATA} message blocks
containing the Clear User Data (CUD) when supplied.

The X.25 cause and diagnostic octets, @parm{cause} and @parm{diag}, are
presented, as well as the CONS @parm{originator} and @parm{reason} codes
mapped from the X.25 cause and diagnostic.  A Disconnect Request for a non-CONS
call can specify a non-zero @parm{cause} code.  This has no effect for a CONS
call.

@subheading Parameters

The @type{xdiscf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_DI}.
@item originator
For a CONS call, contains the CONS originator (NS user, NS provider, or
unknown), mapped from the X.25 cause and diagnostic.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.6
@item Constant @tab Value @tab Description
@item @pval{NS_UNKNOWN} @tab 0 @tab Originator is unknown.
@item @pval{NS_USER} @tab 1 @tab Originator is the NS user.
@item @pval{NS_PROVIDER} @tab 2 @tab Originator is the NS provider.
@end multitable
@item reason
For a CONS call, contains the CONS reason, mapped from the X.25 cause and
diagnostic.
This field can have one of the following values when the @parm{originator} is
@pval{NS_PROVIDER}:
@multitable @columnfractions 0.26 0.08 0.52
@item Constant @tab Value @tab Description
@item @pval{NS_GENERIC} @tab 224 @tab General.
@item @pval{NS_DTRANSIENT} @tab 225 @tab Disconnect, transient.
@item @pval{NS_DPERMANENT} @tab 226 @tab Disconnect, permanent.
@item @pval{NS_TUNSPECIFIED} @tab 227 @tab Reject, unspecified, transient.
@item @pval{NS_PUNSPECIFIED} @tab 228 @tab Reject, unspecified, permanent.
@item @pval{NS_QOSNATRANSIENT} @tab 229 @tab Reject, QOS unavailable, transient.
@item @pval{NS_QOSNAPERMANENT} @tab 230 @tab Reject, QOS unavailable, permanent.
@item @pval{NS_NSAPTUNREACHABLE} @tab 232 @tab Reject, NSAP unreachable, transient.
@item @pval{NS_NSAPPUNREAHCABLE} @tab 235 @tab Reject, NSAP unreachable, permanent.
@end multitable
The field can have the following values when the @parm{originator} is
@pval{NS_USER}:
@multitable @columnfractions 0.26 0.08 0.52
@item Constant @tab Value @tab Description
@item @pval{NU_GENERIC} @tab 240 @tab General.
@item @pval{NU_DNORMAL} @tab 241 @tab Disconnect, normal.
@item @pval{NU_DABNORMAL} @tab 242 @tab Disconnect, abnormal.
@item @pval{NU_DINCOMPUSERDATA} @tab 243 @tab Disconnect, incomprehensible user data.
@item @pval{NU_TRANSIENT} @tab 244 @tab Reject, transient.
@item @pval{NU_PERMANENT} @tab 245 @tab Reject, permanent.
@item @pval{NU_QOSNATRANSIENT} @tab 246 @tab Reject, QOS unavailable, transient.
@item @pval{NU_QOSNAPERMANENT} @tab 247 @tab Reject, QOS unavailable, permanent.
@item @pval{NU_INCOMPUSERDATA} @tab 248 @tab Reject, Call User Data facility.
@item @pval{NU_BADPROTID} @tab 249 @tab Reject, Bad protocol identifier.
@end multitable
@item cause
Conveys the X.25 cause octet associated with the disconnect.
@item diag
Conveys the X.25 diagnostic octet associated with the disconnect.
@item conn_id
When a Disconnect Request is used to refuse and incoming connection, this field
contains the @parm{conn_id} from the corresponding Connect Indication message
primitive.
@item indicated_qos
When non-zero, conveys that facilities and quality of service paraemters are
being indicated.
@item responder
Conveys the responding address.  This is the local responding address in a
Disconnect Request used to refuse an incoming call, and a remote
responding address in a Disconnect Indication refusing an outgoing call.
@item deflected
When the @parm{call_deflect} field of the associated @parm{qos} structure is
non-zero, this field conveys the deflected address.  The deflected address is
the address of the remote station to which the call is being deflected.  This is
set by the NS user when deflecting a call with a Disconnect Request refusing an
incoming connection; and by the NS provider when an outgoing call has been
deflected.
@item qos
Conveys the CONS quality of service parameters and non-OSI facilities associated
with the disconnect.  This is used currently for the charging information when
an existing connection is disconnected, and for the deflection facility when an
incoming or outgoing call is being deflected.
@end table

@subheading State

This primitive is valid in the data transfer phase; it is also valid in the
incoming or outgoing connecting phase.  The call moves to the disconnect phase.

@subheading Response

This primitive is valid in response to a previously sent Connect Request or
received Connect Indication message primitive; or, to simply request or indicate
disconnection of an existing connection.

When an existing connection is disconnect with a Disconnect Request by the NS
user, the NS user expects a Disconnect Confirmation to acknowledge the
disconnect.  All other message should be discarded from the Stream until the
Disconnect Confirmation is received.

When a Disconnect Indication is issued by the NS provider, all messages sent
downstream except Connect Request or Connect Response messages are silently
discarded.

A disconnect collision can occur, where Disconnect Request and a Disconnect
Indication messages collide.  In this case, the Disconnect Indication messages
is taken as a confirmation and no Disconnect Confirmation message should be
expected by the NS user.

@subheading Equivalence

The Disconnect Request message primitive is equivalent to the
@prim{N_DISCON_REQ} of the NPI; the Disconnect Indication,
@prim{N_DISCON_IND}.

@page
@node Disconnect Confirmation
@section Disconnect Confirmation
@cindex Disconnect confirmation

@subheading Format

The Disconnect Confirmation uses the @type{xdcnff} structure.
The control part of the message consists of one @msg{M_PROTO} message block,
containing the @type{xdcnff} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xdcnff} structure is formatted as follows:

@example
@group
@verbatim
struct xdcnff {
    unsigned char xl_type;
    unsigned char xl_command;
    unsigned char indicated_qos;
    struct qosformat qos;
};
@end verbatim
@end group
@end example

@subheading Usage

The Disconnect Confirmation message primitive, @prim{N_DC}, is used to confirm a previous
Disconnect Request and provide charging information facilities associated with
a previously established call.
The control part of the message consists of one @msg{M_PROTO} message block,
containing the @type{xdcnff} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xdcnff} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_DC}.
@item indicated_qos
When non-zero, conveys that CONS quality of service parameters and non-OSI
facilities are indicated.
@item qos
Conveys the facilities indicated.  This is only used on a Disconnect
Confirmation to indicate the charging information facility.
@end table

@subheading State

This primitive is valid in the disconnecting phase.

@subheading Response

This message primitive is only issued by the NS provider.
No response is expected when the NS provider issues this primitive.

@subheading Equivalence

The Disconnect Confirmation message primitive has no equivalent in NPI.

@page
@node Abort Indication
@section Abort Indication
@cindex Abort indication

@subheading Format

The Abort Indication uses the @type{xabortf} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xabortf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xabortf} structure is formatted as follows:

@example
@group
@verbatim
struct xabortf {
    unsigned char xl_type;
    unsigned char xl_command;
};
@end verbatim
@end group
@end example

@subheading Usage

The Abort Indication message primtiive is used by the X.25 driver in lieue of a
Disconnect Indication, when there is insufficient resources to generate a
Disconnect Indication.  Therefore, some NS providers may never issue this
message primitive.
Nevertheless, the NS user must be prepared to receive this message primitive in
liueue of a Disconnect Indication.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xabortf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xabortf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_Abort}.
@end table

@subheading State

This message primitive is only valid in the data transfer phase.  The call moves
to the disconnected phase.

@subheading Response

This message primitive is only issued by the NS provider.
No response is expected when the NS provider issues this primitive.

@subheading Equivalence

The Abort Indication message primitive is equivalent to the
@prim{N_DISCON_IND} of the NPI.

@page
@node Listen Request/Response
@section Listen Request/Response
@cindex Listen request/response

@subheading Format

The Listen Request and Listen Response use the @type{xlistenf} structure.
The control part of the message consists of one @msg{M_PROTO} or @msg{M_PCPROTO}
message block, and contains the @type{xlistenf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the call user data and address of interest.

The @type{xlistenf} structure is formatted as follows:

@example
@group
@verbatim
struct xlistenf {
    unsigned char xl_type;
    unsigned char xl_command;
    int lmax;
    int l_result;
};
@end verbatim
@end group
@end example

The @msg{M_DATA} message blocks are formatted as follows:

@example
@group
@verbatim
struct lcud {
    unsigned char l_cumode;
    unsigned char l_culength; /* octets */
    unsigned char l_cubytes[0];
    /* followed by l_culength bytes */
};
struct ladd {
    unsigned char l_mode;
    unsigned char l_type;
    unsigned char l_length; /* semi-octets */
    unsigned char l_add[0];
    /* followed by ((l_length+1)>>1) bytes
       containing l_length semi-octets. */
};
@end verbatim
@end group
@end example

@subheading Usage

The Listen Request or Response is used when an NS user wishes to register
interest in incoming calls and the NS provider acknowledges the request.
The control part of the message consists of one @msg{M_PROTO} or @msg{M_PCPROTO}
message block, and contains the @type{xlistenf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the call user data and address of interest.

The Listen Request queue is ordered in terms of the amount of listen data
supplied.  The more a Listen Request asks for, the higher its place in the
queue.  Connect Indications are sent to the listener whose listening criteria
are best matched.

Privileged users can ask for a Listen Request to be placed at the front of the
queue, regardless of the amount of listen data supplied.  To do this, the Listen
Request should be sent as a @msg{M_PCPROTO} message.  This is achieved by
setting the @constant{RS_HIPRI} flag in @manref{putmsg(2s)}.  Such requests are
searched in the order in which they arrive.

The system adminstrator controls whether or not listening for incoming  calls is
a privileged operation.  If listening is privileged, incoming calls will be sent
only to on listen streams opened by a user with superuser privilege.  This
prevents other users accepting calls that may contain private information,
passwords, and so on.

In systems where privileged and non-privileged listens are allowed:

@itemize

@item Privileged listens have priority.

@item A matching but busy privileged listen prevents a search of any
non-privileged listens.

@end itemize

@subheading Parameters

The @type{xlistenf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_Xlisten}.
@item lmax
Conveys the maximum number of outstanding Connect Indications that the listening
Stream is willing to accept, for the addresses conveyed in the attached
@msg{M_DATA} message blocks.

Listen requests are cummulated but this field is not.  The maximum number of
outstanding Connect Indications will be reflected by the value of this field for
the last successful Listen Request issued by the NS user.
@item l_result
Conveys the result of the Listen Request in a Listen Response message primitive.
An error in the parameters or a lack of resources results in this flag being set
to a non-zero value.
@end table

The @msg{M_DATA} portion of the message contains the following members:

@table @parm
@item l_cumode
Specifies the type of matching.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DONTCARE} @tab 1 @tab Represents a wildcard.
@item @pval{X25_STARTSWITTH} @tab 2 @tab Contains a prefix.
@item @pval{X25_IDENTITY} @tab 3 @tab Contains an identity match.
@c @item @pval{X25_PATTERN} @tab 4 @tab Contains a pattern.@footnote{Note that @pval{X25_PATTERN} is Solstice X.25 specific.}
@c @item @pval{X25_MATCH} @tab 4 @tab Contains a pattern match.@footnote{Note that @pval{X25_MATCH} appears to be PT WAN specific.}
@c @item @pval{X25_SNID} @tab 5 @tab Contains a Subnetwork ID (SNID).
@end multitable
Notes:
@enumerate
@item When the @parm{l_cumode} is set to @pval{X25_DONTCARE}, the
@parm{l_culength} and @parm{l_cubytes} fields are ommitted from the
@msg{M_DATA} message block.
@end enumerate
@item l_culength
Specifies the length of the @parm{l_cubytes} field in octets.
@item l_cubytes
Contains the bytes to be matched against the Call User Data (CUD).
@item l_mode
Specifies the type of matching.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DONTCARE} @tab 1 @tab Represents a wildcard.
@item @pval{X25_STARTSWITTH} @tab 2 @tab Contains a prefix.
@item @pval{X25_IDENTITY} @tab 3 @tab Contains an identity match.
@item @pval{X25_PATTERN} @tab 4 @tab Contains a pattern.@footnote{Note that @pval{X25_PATTERN} is Solstice X.25 specific.}
@c @item @pval{X25_MATCH} @tab 4 @tab Contains a pattern match.@footnote{Note that @pval{X25_MATCH} appears to be PT WAN specific.}
@c @item @pval{X25_SNID} @tab 5 @tab Contains a Subnetwork ID (SNID).
@end multitable
Notes:
@enumerate
@item When the @parm{l_mode} is set to @pval{X25_DONTCARE}, the
@parm{l_type}, @parm{l_length} and @parm{l_add} fields are ommitted from
the @msg{M_DATA} message block.
@item When the @parm{l_mode} is set to @pval{X25_PATTERN}, the
@parm{l_add} field can contain the wilcard digits @samp{*} and @samp{?} that
have the same effect as these characters in regular expressions: that is,
@samp{*} represents zero or more characters of any value, and @samp{?}
represents single character of any value.  The @samp{*} character is represented
by the BCD digit @code{0xF} and the @samp{?} character is represented by the BCD
digit @code{0xE}.
@end enumerate
@item l_type
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DTE} @tab 1 @tab Contains an X.25 DTE (X.121) address.
@item @pval{X25_NSAP} @tab 2 @tab Contains a CONS NSAP address.
@end multitable
@item l_length
Specifies the length of the @parm{l_add} field in semi-octets.  That is, the
length of the @parm{l_add} field in octets is: @samp{((l_length+1)>>1)}.  The
maximum length for a DTE address is 15 or 17 semi-octets (that is, 8 or 9
octets) depending upon whether TOA/NPI addressing is used.  The maximum length
for an NSAP address is 20 semi-octets (that is, 10 octets).
@item l_add
Contains the bytes to be matched against the DTE address or the NSAP address.

Each semi-octet is a BCD representation.  That is, digits in the range @samp{0} through
@samp{9} are represented by @code{0x0} through @code{0x9} in the semi-octet
position.  The first digit occupies the high order nibble of the first octet;
the second digit, the low order nibble of the first octet; the third digit, the
high order nibble of the second octet; and so on.  If @parm{l_length} is odd,
the low order nibble of the last octet is ignored.

When the @parm{l_mode} field is @pval{X25_PATTERN}, a semi-octet of
@code{0xF} represents a @samp{*} wildcard, and a semi-octet of @code{0xE}
represents a @samp{?} wildcard.
@end table

@subheading State

This message primitive is valid in the disconnected phase or during an incoming
connecting phase.

@subheading Response

When an NS user issues a Listen Request, the NS user expects a Listen Response
message primitive from the NS provider.

@subheading Equivalence

The Listen Request message primitive is equivalent to the
@prim{N_BIND_REQ} of the NPI; the Listen Response, @prim{N_BIND_ACK}.

@page
@node Extended Listen Request/Response
@section Extended Listen Request/Response
@cindex Extended listen request/response

@subheading Format

The Extended Listen Request and Extended Listen Response use the @type{xlistenf}
structure.
The control part of the message consists of one @msg{M_PROTO} or @msg{M_PCPROTO}
message block, and contains the @type{xlistenf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the call user data and address of interest.

The @type{xlistenf} structure is formatted as follows:

@example
@group
@verbatim
struct xlistenf {
    unsigned char xl_type;
    unsigned char xl_command;
    int lmax;
    int l_result;
};
@end verbatim
@end group
@end example

The @msg{M_DATA} message blocks are formatted as follows:

@example
@group
@verbatim
struct lcud {
    unsigned char l_cumode;
    unsigned char l_culength; /* octets */
    unsigned char l_cubytes[0];
    /* followed by l_culength bytes */
};
struct lsn {
    unsigned char l_snmode;
    unsigned char l_snlen;
    unsigned char l_snid[0];
    /* followed by l_snlen bytes */
};
struct ladd {
    unsigned char l_mode;
    unsigned char l_type;
    unsigned char l_length; /* semi-octets */
    unsigned char l_add[0];
    /* followed by ((l_length+1)>>1) bytes
       containing l_length semi-octets. */
};
@end verbatim
@end group
@end example

@subheading Usage

The Extended Listen Request or Response is used when an NS user wishes to
register interest in incoming calls and the NS provider acknowledges the
request.  The control part of the message consists of one @msg{M_PROTO} or
@msg{M_PCPROTO} message block, and contains the @type{xlistenf} structure.
The data part of the message consists of one or more @msg{M_DATA} message blocks
containing the call user data and address of interest.

@subheading Parameters

The @type{xlistenf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_Xelisten}.
@item lmax
Conveys the maximum number of outstanding Connect Indications that the listening
Stream is willing to accept, for the addresses conveyed in the attached
@msg{M_DATA} message blocks.

Listen requests are cummulated but this field is not.  The maximum number of
outstanding Connect Indications will be reflected by the value of this field for
the last successful Listen Request issued by the NS user.
@item l_result
Conveys the result of the Listen Request in a Listen Response message primitive.
An error in the parameters or a lack of resources results in this flag being set
to a non-zero value.
@end table

The @msg{M_DATA} portion of the message contains the following members:

@table @parm
@item l_cumode
Specifies the type of matching.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DONTCARE} @tab 1 @tab Represents a wildcard.
@c @item @pval{X25_STARTSWITTH} @tab 2 @tab Contains a prefix.
@c @item @pval{X25_IDENTITY} @tab 3 @tab Contains an identity match.
@c @item @pval{X25_PATTERN} @tab 4 @tab Contains a pattern.@footnote{Note that @pval{X25_PATTERN} is Solstice X.25 specific.}
@item @pval{X25_MATCH} @tab 4 @tab Contains a pattern match.@footnote{Note that @pval{X25_MATCH} appears to be PT WAN specific.}
@c @item @pval{X25_SNID} @tab 5 @tab Contains a Subnetwork ID (SNID).
@end multitable
Notes:
@enumerate
@item When the @parm{l_cumode} is set to @pval{X25_DONTCARE}, the
@parm{l_culength} and @parm{l_cubytes} fields are ommitted from the
@msg{M_DATA} message block.
@end enumerate
@item l_culength
Specifies the length of the @parm{l_cubytes} field in octets.
@item l_cubytes
Contains the bytes to be matched against the Call User Data (CUD).
@item l_snmode
Specifies the matching mode.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DONTCARE} @tab 1 @tab Represents a wildcard.
@c @item @pval{X25_STARTSWITTH} @tab 2 @tab Contains a prefix.
@c @item @pval{X25_IDENTITY} @tab 3 @tab Contains an identity match.
@c @item @pval{X25_PATTERN} @tab 4 @tab Contains a pattern.@footnote{Note that @pval{X25_PATTERN} is Solstice X.25 specific.}
@item @pval{X25_MATCH} @tab 4 @tab Contains a pattern match.@footnote{Note that @pval{X25_MATCH} appears to be PT WAN specific.}
@c @item @pval{X25_SNID} @tab 5 @tab Contains a Subnetwork ID (SNID).
@end multitable
Notes:
@enumerate
@item When the @parm{l_mode} is set to @pval{X25_DONTCARE}, the
@parm{l_snlen} and @parm{l_snid} fields are ommitted from
the @msg{M_DATA} message block.
@end enumerate
@item l_snlen
@item l_snid
@item l_mode
Specifies the type of matching.
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DONTCARE} @tab 1 @tab Represents a wildcard.
@c @item @pval{X25_STARTSWITTH} @tab 2 @tab Contains a prefix.
@c @item @pval{X25_IDENTITY} @tab 3 @tab Contains an identity match.
@c @item @pval{X25_PATTERN} @tab 4 @tab Contains a pattern.@footnote{Note that @pval{X25_PATTERN} is Solstice X.25 specific.}
@item @pval{X25_MATCH} @tab 4 @tab Contains a pattern match.@footnote{Note that @pval{X25_MATCH} appears to be PT WAN specific.}
@c @item @pval{X25_SNID} @tab 5 @tab Contains a Subnetwork ID (SNID).
@end multitable
Notes:
@enumerate
@item When the @parm{l_mode} is set to @pval{X25_DONTCARE}, the
@parm{l_type}, @parm{l_length} and @parm{l_add} fields are ommitted from
the @msg{M_DATA} message block.
@end enumerate
@item l_type
This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item @pval{X25_DTE} @tab 1 @tab Contains an X.25 DTE (X.121) address.
@item @pval{X25_NSAP} @tab 2 @tab Contains a CONS NSAP address.
@end multitable
@item l_length
Specifies the length of the @parm{l_add} field in semi-octets.  That is, the
length of the @parm{l_add} field in octets is: @samp{((l_length+1)>>1)}.  The
maximum length for a DTE address is 15 or 17 semi-octets (that is, 8 or 9
octets) depending upon whether TOA/NPI addressing is used.  The maximum length
for an NSAP address is 20 semi-octets (that is, 10 octets).
@item l_add
Contains the bytes to be matched against the DTE address or the NSAP address.
@end table

@subheading State

This message primitive is valid in the disconnected phase or during an incoming
connecting phase.

@subheading Response

When an NS user issues a Listen Request, the NS user expects an Extended Listen
Response message primitive from the NS provider.

@subheading Equivalence

The Extended Listen Request message primitive is equivalent to the
@prim{N_BIND_REQ} of the NPI; the Extended Listen Response,
@prim{N_BIND_ACK}.

@page
@node Listen Cancel Request/Response
@section Listen Cancel Request/Response
@cindex Listen cancel request/response

@subheading Format

The Listen Cancel Request and Listen Cancel Response use the @type{xcanlisf}
structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xcanlisf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{xcanlisf} structure is formatted as follows:

@example
@group
@verbatim
struct xcanlisf {
    unsigned char xl_type;
    unsigned char xl_command;
    int c_result;
};
@end verbatim
@end group
@end example

@subheading Usage

The Listen Cancel Request message primitive is used by the NS user to cancel
listening on any address.
The Listen Cancel Request removes all listen addresses from the Stream.  There
is no way of cancelling a Listen Request on a particular address; this message
is probably used when the use of the Stream is about to be changed by the NS
user.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{xcanlisf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{xcanlisf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_Xcanlis}.
@item c_result
Conveys the result of the Listen Cancel Request in a Listen Cancel Response
message primitive.  An failure to cancel a listen request results in this flag
being set to a non-zero value.  A Listen Cancel Request may fail because no
listen was in effect, or a Connect Indication is outstanding.
@end table

@subheading State

This message primitive is valid in the disconnected phase.

@subheading Response

When an NS user issues a Listen Cancel Request, the NS user expects a Listen
Cancel Response message primitive from the NS provider.

@subheading Equivalence

The Listen Cancel Request message primitive is equivalent to the
@prim{N_UNBIND_REQ} of the NPI; the Listen Cancel Response,
@prim{N_OK_ACK}.

@page
@node PVC Attach
@section PVC Attach
@cindex PVC attach

@subheading Format

The PVC Attach uses the @type{pvcattf} structure.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{pvcattf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{pvcattf} structure is formatted as follows:

@example
@group
@verbatim
struct pvcattf {
    unsigned char xl_type;
    unsigned char xl_command;
    unsigned short lci;
    union {
        uint32_t link_id;
        uint32_t sn_id;
    };
    unsigned char reqackservice;
    unsigned char reqnsdulimit;
    int nsdulimit;
    int result_code;
};
@end verbatim
@end group
@end example

@subheading Usage

The PVC Attach message primitive is used by the NS user when requesting an
attachment of the Stream to a PVC.  The NS provider uses the PVC Attach message
primitive to acknolwedge a previous PVC Attach message primitive issued by the
NS user.
The control part of the message consists of one @msg{M_PROTO} message block
containing the @type{pvcattf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{pvcattf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_PVC_ATTACH}.
@item lci
Conveys the logical channel identifier (LCI) of the PVC.
@item link_id
Conveys the link identifier for the PVC.  This is a Solstice X.25 specific
field.

The @parm{link_id} and @parm{sn_id} fields are equivalent, with a slightly
different name and format for Solstice X.25.
@item sn_id
Conveys the subnetwork identifier for the PVC.  This is the non-Solstice X.25
specific field.

This field is sometimes specified as a @type{unsigned long}.  It has been
declared as an @type{uint32_t} to support compatibility of 32-bit applications
running over a 64-bit kernel.
@item reqackservice
When non-zero, conveys that the receipt confirmation service is requested by the
use of the D-bit.  This field can have one of the following values:
@multitable @columnfractions 0.2 0.1 0.7
@item Constant @tab Value @tab Description
@item - @tab 0 @tab No receipt confirmation.
@item @pval{RC_CONF_DTE} @tab 1 @tab Confirmation by the remote terminal.
@item @pval{RC_CONF_APP} @tab 2 @tab Confirmation by the remote application.
@end multitable
In the case of receipt confirmation by the remote station, no acknowledgements
are expected or given over the X.25 NLI service interface.  For receipt
confirmation by the remote application, there is a one-to-one correspondence
between D-bit data and acknolwedgements passing in opposite directions.  One
data acknowledgement is received or sent for each D-bit data packet sent or
received over the X.25 NLI service interface.
@item reqnsdulimit
When non-zero, conveys that an NSDU concantenation limit is asserted and the
@parm{nsdulimit} field is valid.
@item nsdulimit
When non-zero, conveys the packet concatenation limit for NSDUs when the
@parm{reqnsdulimit} field is also non-zero.
@item result_code
When the PVC Attach message primitive is used by the NS provider to acknowledge
a previous PVC Attach message primitive issued by the NS user, this field is
non-zero when an error has been encountered that prevents the attachment of the
PVC.

This field can have one of the following values:
@multitable @columnfractions 0.3 0.1 0.6
@item Constant @tab Value @tab Description
@item @pval{PVC_SUCCESS} @tab 0 @tab Operation was successful.
@item @pval{PVC_NOSUCHSUBNET} @tab 1 @tab Subnetwork not configured.
@item @pval{PVC_CFGERROR} @tab 2 @tab LCI not in range, no PVCs.
@item @pval{PVC_NODBELEMENTS} @tab 3 @tab  No database available.
@item @pval{PVC_PARERROR} @tab 4 @tab Error in request parameters.
@item @pval{PVC_BUSY} @tab 6 @tab PVC in non-attach state.
@item @pval{PVC_CONGESTION} @tab 7 @tab Resources unavailable.
@item @pval{PVC_WRONGSTATE} @tab 8 @tab  State wrong for function.
@item @pval{PVC_NOPERMISSION} @tab 9 @tab Inadequate permissions.
@item @pval{PVC_LINKDOWN} @tab 10 @tab The link has gone down.
@item @pval{PVC_RMTERROR} @tab 11 @tab No reponse from remote.
@item @pval{PVC_USRERROR} @tab 12 @tab User interface error detected.
@item @pval{PVC_INTERROR} @tab 13 @tab Internal error.
@item @pval{PVC_NOATTACH} @tab 14 @tab Not attached yet.
@item @pval{PVC_WAIT} @tab 15 @tab Wait code, not to user.
@end multitable
@end table

@subheading State

This message primitive is valid in the disconnected phase.

@subheading Response

When an NS user issues a PVC Attach, the NS user expects a PVC Attach message
primitive from the NS provider in response.

@subheading Equivalence

The PVC Attach message primitive is equivalent to the
@prim{N_CONN_REQ} and @prim{N_CONN_CON} of the NPI.

@page
@node PVC Detach
@section PVC Detach
@cindex PVC detach

@subheading Format

The PVC Detach uses the @type{pvcdetf} structure.
The control part of the message primitive consists of one @msg{M_PROTO} message
block containing the @type{pvcdetf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

The @type{pvcdetf} structure is formatted as follows:

@example
@group
@verbatim
struct pvcdetf {
    unsigned char xl_type;
    unsigned char xl_command;
    int reason_code;
};
@end verbatim
@end group
@end example

@subheading Usage

The PVC Detach message primitive, @prim{N_PVC_DETACH}, is used when an NS
user wishes to detach from a currently attached PVC.
The control part of the message primitive consists of one @msg{M_PROTO} message
block containing the @type{pvcdetf} structure.
There is no data part (@msg{M_DATA} message blocks) associated with this message primitive.

@subheading Parameters

The @type{pvcdetf} structure contains the following members:

@table @parm
@item xl_type
Always @prim{XL_CTL}.
@item xl_command
Always @prim{N_PVC_DETACH}.
@item reason_code
When the PVC Detach message primitive is used by the NS provider to acknowledge
a previous PVC Detach message primitive issued by the NS user, this field is
non-zero when an error has been encountered that prevents detaching the PVC.

This field can have one of the following values:
@multitable @columnfractions 0.3 0.1 0.6
@item Constant @tab Value @tab Description
@item @pval{PVC_SUCCESS} @tab 0 @tab Operation was successful.
@item @pval{PVC_NOSUCHSUBNET} @tab 1 @tab Subnetwork not configured.
@item @pval{PVC_CFGERROR} @tab 2 @tab LCI not in range, no PVCs.
@item @pval{PVC_NODBELEMENTS} @tab 3 @tab  No database available.
@item @pval{PVC_PARERROR} @tab 4 @tab Error in request parameters.
@item @pval{PVC_BUSY} @tab 6 @tab PVC in non-attach state.
@item @pval{PVC_CONGESTION} @tab 7 @tab Resources unavailable.
@item @pval{PVC_WRONGSTATE} @tab 8 @tab  State wrong for function.
@item @pval{PVC_NOPERMISSION} @tab 9 @tab Inadequate permissions.
@item @pval{PVC_LINKDOWN} @tab 10 @tab The link has gone down.
@item @pval{PVC_RMTERROR} @tab 11 @tab No reponse from remote.
@item @pval{PVC_USRERROR} @tab 12 @tab User interface error detected.
@item @pval{PVC_INTERROR} @tab 13 @tab Internal error.
@item @pval{PVC_NOATTACH} @tab 14 @tab Not attached yet.
@item @pval{PVC_WAIT} @tab 15 @tab Wait code, not to user.
@end multitable
@end table

@subheading State

This message primitive is valid in the PVC attached phase.

@subheading Response

When an NS user issues a PVC Detach, the NS user expects a PVC Detach message
primitive from the NS provider in response.

@subheading Equivalence

The PVC Detach message primitive is equivalent to the
@prim{N_DISCON_REQ} of the NPI.

@node NLI Input-Output Controls
@chapter NLI Input-Output Controls

@menu
* Input-Output Control Data Structures::
* Input-Output Control Commands::
@end menu

@node Input-Output Control Data Structures
@section Input-Output Control Data Structures
@cindex Input-output control data structures

@node Input-Output Control Commands
@section Input-Output Control Commands
@cindex Input-output control commands

@menu
* N_snident::
* N_snmode::
* N_snconfig::
* N_snread::
* N_getstats::
* N_zerostats::
* N_putpvcmap::
* N_getpvcmap::
* N_getVCstatus::
* N_getnliversion::
* N_traceon::
* N_traceoff::
* NUI_MSG Input-Output Controls::
* N_zeroVCstats::
* N_putx32map::
* N_getx32map::
* N_getSNIDstats::
* N_zeroSNIDstats::
* N_setQOSDATPRI::
* N_resetQOSDATPRI::
@end menu

@multitable @columnfractions .2 .8
@item @pioc{N_snident} @tab - Configure a newly linked driver.  Also @pioc{N_linkent} on Sun.
@item @pioc{N_snmode} @tab -
@item @pioc{N_snconfig} @tab - Configure wlcfg database for a subnetwork.  Also @pioc{N_linkconfig} on Sun.
@item @pioc{N_snread} @tab - Also @pioc{N_linkread} on Sun.
@item @pioc{N_getstats} @tab - read X.25 global (multiplexer) statistics.
@item @pioc{N_zerostats} @tab - reset X.25 global (multiplexer) statistics.
@item @pioc{N_putpvcmap} @tab - change per VC packet and window sizes.
@item @pioc{N_getpvcmap} @tab - get default packet and window sizes.
@item @pioc{N_getVCstatus} @tab - get per VC state and statistics.
@item @pioc{N_getVCstats} @tab - get per VC statistics.  Sun only.
@item @pioc{N_getnliversion} @tab -
@item @pioc{N_getoneVCstats} @tab - get status and statisics for VC associated with the current stream.  Sun only.
@item @pioc{N_traceon} @tab - start packet level tracing.
@item @pioc{N_traceoff} @tab - stop packet level tracing.
@item @pioc{N_nuimsg} @tab -
@item @pioc{N_nuiput} @tab - store a set of NUI mappings.
@item @pioc{N_nuidel} @tab - delete specific NUI mapping.
@item @pioc{N_nuiget} @tab - read specific NUI mapping.
@item @pioc{N_nuimget} @tab - read all NUI mappings.
@item @pioc{N_nuireset} @tab - delete all NUI mappings.
@item @pioc{N_zeroVCstats} @tab - reset per VC statistics.
@item @pioc{N_putx32map} @tab -
@item @pioc{N_getx32map} @tab -
@item @pioc{N_getSNIDstats} @tab - retrieve per subnetwork statistics.  Also @pioc{N_getlinkstats} on Sun.
@item @pioc{N_zeroSNIDstats} @tab - reset per subnetwork statistics.
@item @pioc{N_setQOSDATPRI} @tab -
@item @pioc{N_resetQOSDATPRI} @tab -
@item @pioc{N_X25_ADD_ROUTE} @tab - add a new route or update an existing route.  Sun only.
@item @pioc{N_X25_FLUSH_ROUTE} @tab - clear all entries from the routing table.  Sun only.
@item @pioc{N_X25_GET_ROUTE} @tab - obtain routing information for a specific address.  Sun only.
@item @pioc{N_GET_NEXT_ROUTE} @tab - obtain routing information for next route in the routing table. Sun only.
@item @pioc{N_RM_ROUTE} @tab - remove a specific route.  Sun only.
@end multitable

@page
@node N_snident
@subsection N_snident

The @pioc{N_snident} input-output control identifies the subnetwork.  This is
performed by indicating the lower multiplex identifier returned from the
@pioc{I_LINK} @cite{STREAMS} operation and assigning a subnetwork identifier and
a @parm{dl_sap} and @parm{dl_max_conind} to bind.

@subsubheading Format

The argument to the @pioc{N_snident} input-output control is a pointer to a
@type{xll_reg} structure, formatted as follows:

@example
@group
@verbatim
struct xll_reg {
    uint32_t snid;
    uint32_t lmuxid;
    uint16_t dl_sap;
    uint16_t dl_max_conind;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

The @type{xll_reg} structure contains the following members:

@table @parm
@item snid
Specifies the subnetwork identifier to assign to the data link.
@item lmuxid
Identifies the data link as a linked Stream beneath the lower multiplex.
@item dl_sap
Specifies the DLSAP to bind the Stream.
@item dl_max_conind
Specifies the maximum number of connection indications to bind to the Stream.
@end table

@page
@node N_snmode
@subsection N_snmode

The @pioc{N_snmode} input-output control adjusts only the subscription mode
bits.  When @parm{rd_wr} is set to read, the subscription mode bits (see the
@parm{SUB_MODES} member in the @type{wlcfg} structure) are read; when set to
write, the mode bits are written.

@subsubheading Format

The argument to the @pioc{N_snmode} input-output control is a pointer to a
@type{snoptformat} structure, formatted as follows:

@example
@group
@verbatim
struct snoptformat {
    uint32_t U_SN_ID;
    uint16_t newSUB_MODES;
    uint8_t rd_wr;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

The @type{snoptformat} structure contains the following members:

@table @parm
@item U_SN_ID
Specifies the subnetwork identifier of the data link whose modes are to be read
or written.
@item newSUB_MODES
Contains the read or written subnetwork modes.  This can contain a bitmask of
zero or more of the following bits:
@multitable {00}{@code{SUB_NUI_OVERRIDE}}{Subscribe fast select with restriction on response.xxxx}
@item 0 @tab @pval{SUB_EXTENDED} @tab Subscribe extended facilities.
@item 1 @tab @pval{BAR_EXTENDED} @tab Bar extended facilities.
@item 2 @tab @pval{SUB_FSELECT} @tab Subscribe fast select.
@item 3 @tab @pval{BAR_FSELECT} @tab Bar fast select.
@item 4 @tab @pval{SUB_FSRRESP} @tab Subscribe fast select with restriction on response.
@item 5 @tab @pval{SUB_REVCHARGE} @tab Subscribe reverse charging.
@item 6 @tab @pval{SUB_LOC_CHG_PREV} @tab Subscribe local charge prevention.
@item 7 @tab @pval{BAR_INCALL} @tab Bar incoming calls.
@item 8 @tab @pval{BAR_OUTCALL} @tab Bar ougoing calls.
@item 9 @tab @pval{SUB_TOA_NPI_FMT} @tab Subscribe TOA/NPI address extensions.
@item 10 @tab @pval{BAR_TOA_NPI_FMT} @tab Bar TOA/NPI address extensions.
@item 11 @tab @pval{SUB_NUI_OVERRIDE} @tab Subscribe NUI override.
@item 12 @tab @pval{BAR_CALL_X32_REG} @tab Bar calls while X.32 registration in progress.
@end multitable
@item rd_wr
Specifies whether to read or write the subnetwork modes.
@end table

@page
@node N_snconfig
@subsection N_snconfig

The @pioc{N_snconfig} input-output control is used to configure a data link
connected to a subnetwork, but subnetwork identifier.

@subsubheading Format

The argument to the @pioc{N_snconfig} input-output control is a pointer to a
@type{wlcfg} structure, formatted as follows:

@example
@verbatim
struct wlcfg {
    uint32_t U_SN_ID;
    uint8_t NET_MODE;
    uint8_t X25_VSN;
    uint8_t L3PLPMODE;
    uint16_t LPC;
    uint16_t HPC;
    uint16_t LIC;
    uint16_t HIC;
    uint16_t HTC;
    uint16_t LOC;
    uint16_t HOC;
    uint16_t NPCchannels;
    uint16_t NICchannels;
    uint16_t NTCchannels;
    uint16_t NOCchannels;
    uint16_t Nochnls;
    uint8_t THISGFI;
    uint8_t LOCMAXPKTSIZE;
    uint8_t REMMAXPKTSIZE;
    uint8_t LOCDEFPKTSIZE;
    uint8_t REMDEFPKTSIZE;
    uint8_t LOCMAXWSIZE;
    uint8_t REMMAXWSIZE;
    uint8_t LOCDEFWSIZE;
    uint8_t REMDEFWSIZE;
    uint16_t MAXNSDULEN;
    int16_t ACKDELAY;
    int16_t T20value;
    int16_t T21value;
    int16_t T22value;
    int16_t T23value;
    int16_t Tvalue;
    int16_t T25value;
    int16_t T26value;
    int16_t T28value;
    int16_t idlevalue;
    int16_t connectvalue;
    uint8_t R20value;
    uint8_t R22value;
    uint8_t R23value;
    uint8_t R28value;
    uint16_t localdelay;
    uint16_t accessdelay;
    uint8_t locmaxthclass;
    uint8_t remmaxthclass;
    uint8_t locdefthclass;
    uint8_t remdefthclass;
    uint8_t locminthclass;
    uint8_t remminthclass;
    uint8_t CUG_CONTROL;
    uint16_t SUB_MODES;
    struct {
        uint16_t SNMODES;
        uint8_t intl_addr_recogn;
        uint8_t intl_prioritised;
        uint8_t dnic1;
        uint8_t dnic2;
        uint8_t prty_encode_control;
        uint8_t prty_pkt_forced_value;
        uint8_t src_addr_control;
        uint8_t dbit_control;
        uint8_t thclass_neg_to_def;
        uint8_t thclass_type;
        uint8_t thclass_wmap[16];
        uint8_t thclass_pmap[16];
    } psdn_local;
    struct lsapformat local_address;
};
@end verbatim
@end example

@subsubheading Parameters

The @type{wlcfg} structure contains the following members:

@table @parm
@item U_SN_ID
@item NET_MODE
@item X25_VSN
@item L3PLPMODE
@item LPC
@item HPC
@item LIC
@item HIC
@item HTC
@item LOC
@item HOC
@item NPCchannels
@item NICchannels
@item NTCchannels
@item NOCchannels
@item Nochnls
@item THISGFI
@item LOCMAXPKTSIZE
@item REMMAXPKTSIZE
@item LOCDEFPKTSIZE
@item REMDEFPKTSIZE
@item LOCMAXWSIZE
@item REMMAXWSIZE
@item LOCDEFWSIZE
@item REMDEFWSIZE
@item MAXNSDULEN
@item ACKDELAY
@item T20value
@item T21value
@item T22value
@item T23value
@item Tvalue
@item T25value
@item T26value
@item T28value
@item idlevalue
@item connectvalue
@item R20value
@item R22value
@item R23value
@item R28value
@item localdelay
@item accessdelay
@item locmaxthclass
@item remmaxthclass
@item locdefthclass
@item remdefthclass
@item locminthclass
@item remminthclass
@item CUG_CONTROL
@item SUB_MODES
@item psdn_local
@table @parm
@item SNMODES
@item intl_addr_recogn
@item intl_prioritised
@item dnic1
@item dnic2
@item prty_encode_control
@item prty_pkt_forced_value
@item src_addr_control
@item dbit_control
@item thclass_neg_to_def
@item thclass_type
@item thclass_wmap
@item thclass_pmap
@end table
@item local_address
@end table

@page
@node N_snread
@subsection N_snread

The @pioc{N_snread} input-output control is used to read the configuration
information for a specified subnetwork identifier.

@subsubheading Format

The argument to the @pioc{N_snread} input-output control is a pointer to a
@type{wlcfg} structure, see @ref{N_snconfig}.

@subsubheading Parameters

@xref{N_snconfig}.

@page
@node N_getstats
@subsection N_getstats

The @pioc{N_getstats} input-output control is used to collect the global
statistics.

@subsubheading Format

The argument to the @pioc{N_getstats} input-output control is a pointer to a
buffer aread containing 101 32-bit unsigned integer values.

@subsubheading Parameters

The buffer area contains 101 32-bit unsigned integer values as follows:

@multitable {000}{@parm{LNeednotneeded_g}}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0 @tab cll_in_g @tab Calls received and indicated.
@item 1 @tab cll_out_g @tab Calls sent.
@item 2 @tab caa_in_g @tab Calls established outgoing.
@item 3 @tab caa_out_g @tab Calls established incoming.
@item 4 @tab ed_in_g @tab Interrupts received.
@item 5 @tab ed_out_g @tab Interrupts sent.
@item 6 @tab rnr_in_g @tab Receiver not ready received.
@item 7 @tab rnr_out_g @tab Receiver not ready sent.
@item 8 @tab rr_in_g @tab Receiver ready received.
@item 9 @tab rr_out_g @tab Receiver ready sent.
@item 10 @tab rst_in_g @tab Resets received.
@item 11 @tab rst_out_g @tab Resets sent.
@item 12 @tab rsc_in_g @tab Reset confirms received.
@item 13 @tab rsc_out_g @tab Reset confirms sent.
@item 14 @tab clr_in_g @tab Clears received.
@item 15 @tab clr_out_g @tab Clears sent.
@item 16 @tab clc_in_g @tab Clear confirms received.
@item 17 @tab clc_out_g @tab Clear confirms sent.
@item 18 @tab cll_coll_g @tab Call collision count, not rejected.
@item 19 @tab cll_uabort_g @tab Calls aborted by user before sent.
@item 20 @tab rjc_buflow_g @tab Calls rejected no buffers before sent.
@item 21 @tab rjc_coll_g @tab Calls rejected collision DCE mode.
@item 22 @tab rjc_failNRS_g @tab Calls rejected negative NRS response.
@item 23 @tab rjc_lstate_g @tab Calls rejected link disconnecting.
@item 24 @tab rjc_nochnl_g @tab Calls rejected no local channels left.
@item 25 @tab rjc_nouser_g @tab Calls rejected no user on NSAP.
@item 26 @tab rjc_remote_g @tab Calls rejected by remote responder.
@item 27 @tab rjc_u_g @tab Calls rejected by NS user.
@item 28 @tab dg_in_g @tab Diagnostic packets received.
@item 29 @tab dg_out_g @tab Diagnostic packets sent.
@item 30 @tab p4_ferr_g @tab Format errors in P4.
@item 31 @tab rem_perr_g @tab Remote protocol errors.
@item 32 @tab res_ferr_g @tab Restart format errors.
@item 33 @tab res_in_g @tab Restarts received (including DTE/DXE).
@item 34 @tab res_out_g @tab Restarts sent (including DTE/DXE).
@item 35 @tab vcs_labort_g @tab Circuits aborted by link event.
@item 36 @tab r23exp_g @tab Circuits hung by R23 expiry.
@item 37 @tab l2conin_g @tab Link level connection established.
@item 38 @tab l2conok_g @tab LLC connections accepted.
@item 39 @tab l2conrej_g @tab LLC connections rejected.
@item 40 @tab l2refusal_g @tab LLC connect requests refused.
@item 41 @tab l2lzap_g @tab Operator requests to kill link.
@item 42 @tab l2r20exp_g @tab R20 retransmission expiry.
@item 43 @tab l2dxeexp_g @tab DXE connect expiry.
@item 44 @tab l2dxebuf_g @tab DXE resolve abort, no buffers.
@item 45 @tab l2noconfig_g @tab No configuration base.
@item 46 @tab xiffnerror_g @tab Upper interface bad M_PROTO type.
@item 47 @tab xintdisc_g @tab Internal disconnecte events.
@item 48 @tab xifaborts_g @tab Upper interface abort_vc called.
@item 49 @tab PVCusergone_g @tab Count of non-user interactions.
@item 50 @tab max_opens_g @tab Highest number of simultaneous opens.
@item 51 @tab vcs_est_g @tab Virtual circuits established since reset.
@item 52 @tab bytes_in_g @tab Bytes received.
@item 53 @tab bytes_out_g @tab Bytes sent.
@item 54 @tab dt_in_g @tab Data packets received.
@item 55 @tab dt_out_g @tab Data packets sent.
@item 56 @tab res_conf_in_g @tab Restart confirms received.
@item 57 @tab res_conf_out_g @tab Restart confirms sent.
@item 58 @tab reg_in_g @tab Registration requests received.
@item 59 @tab reg_out_g @tab Registration requests sent.
@item 60 @tab reg_conf_in_g @tab Registration confirms received.
@item 61 @tab reg_conf_out_g @tab Registration confirms sent.
@item 62 @tab l2r28exp_g @tab R28 retransmission expiries.
@item 63 @tab Cantlzap_g @tab Operator link reset refused.
@item 64 @tab L2badcc_g @tab -
@item 65 @tab L2baddcnf_g @tab -
@item 66 @tab L3T25timeouts_g @tab -
@item 67 @tab L3badAE_g @tab -
@item 68 @tab L3badT20_g @tab -
@item 69 @tab L3badT24_g @tab -
@item 70 @tab L3badT25_g @tab -
@item 71 @tab L3badT28_g @tab -
@item 72 @tab L3badevent_g @tab -
@item 73 @tab L3badgfi_g @tab -
@item 74 @tab L3badlstate_g @tab -
@item 75 @tab L3badltock2_g @tab -
@item 76 @tab L3badrandom_g @tab -
@item 77 @tab L3badxtock0_g @tab -
@item 78 @tab L3clrbadstate_g @tab -
@item 79 @tab L3conlt0_g @tab -
@item 80 @tab L3deqfailed_g @tab -
@item 81 @tab L3indnodata_g @tab -
@item 82 @tab L3matrixcall_g @tab -
@item 83 @tab L3nodb_g @tab -
@item 84 @tab L3qoscheck_g @tab -
@item 85 @tab L3outbad_g @tab -
@item 86 @tab L3shortframe_g @tab -
@item 87 @tab L3tabfault_g @tab -
@item 88 @tab L3usererror_g @tab -
@item 89 @tab L3usergone_g @tab -
@item 90 @tab LNeednotneeded_g @tab -
@item 91 @tab NSUbadref_g @tab -
@item 92 @tab NSUdtnull_g @tab -
@item 93 @tab NSUednull_g @tab -
@item 94 @tab NSUrefrange_g @tab -
@item 95 @tab NeednotNeeded_g @tab -
@item 96 @tab NoNRSrequest_t @tab -
@item 97 @tab UDRbad_g @tab -
@item 98 @tab Ubadint_g @tab -
@item 99 @tab Unoint_g @tab -
@item 100 @tab L3baddiag_g @tab -
@end multitable

@page
@node N_zerostats
@subsection N_zerostats

The @pioc{N_zerostats} input-output control is used to zero the global
statistics.  The same statistics buffer as is provided for @pioc{N_getstats} is
provided so that the statistics immediately before the reset can be collected.

@subsubheading Format

The format of the buffer area of the @pioc{N_zerostats} input-output control is
identical to that of @ref{N_getstats}.

@subsubheading Parameters

The parameters of the buffer contain the statistics that were collected
immediately before resetting the statistics to zero.

@page
@node N_putpvcmap
@subsection N_putpvcmap

@subsubheading Format

@example
@group
@verbatim
struct pvcmapf {
    int first_ent;
    int num_ent;
    struct pvcconf entries[0];
};
@end verbatim
@end group
@end example

@example
@group
@verbatim
struct pvcconf {
    uint32_t sn_id;
    uint16_t lci;
    uint8_t locpacket;
    uint8_t rempacket;
    uint8_t locwsize;
    uint8_t remwsize;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item first_ent
@item num_ent
@item entries
@table @parm
@item sn_id
@item lci
@item locpacket
@item rempacket
@item locwsize
@item remwsize
@end table
@end table

@page
@node N_getpvcmap
@subsection N_getpvcmap

@page
@node N_getVCstatus
@subsection N_getVCstatus

@subsubheading Format

@example
@group
@verbatim
struct vcstatusf {
    int first_ent;
    int num_ent;
    struct vcinfo vc;
};
@end verbatim
@end group
@end example

@example
@group
@verbatim
struct vcinfo {
    struct xaddrf rem_addr;
    struct xaddrf loc_addr;
    uint32_t xu_ident;
    uint32_t process_id;
    uint16_t lci;
    uint8_t xstate;
    uint8_t xtag;
    uint8_t ampvc;
    uint8_t call_direction;
    uint8_t vctype;
    uint32_t perVC_stats[27];
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item first_ent
@item num_ent
@item vc
@table @parm
@item rem_addr
@item loc_addr
@item xu_ident
@item process_id
@item lci
@item xstate
@item xtag
@item ampvc
@item call_direction
@item vctype
@item perVC_stats
@multitable {00}{rst_timeouts_v}{Calls established outgoing.xxxxxxxx}
@item 0 @tab cll_in_v @tab Calls received and indicated.
@item 1 @tab cll_out_v @tab Calls sent.
@item 2 @tab caa_in_v @tab Calls established outgoing.
@item 3 @tab caa_out_v @tab Calls established incoming.
@item 4 @tab dt_in_v @tab Data packets received.
@item 5 @tab dt_out_v @tab Data packets sent.
@item 6 @tab ed_in_v @tab Interrupts received.
@item 7 @tab ed_out_v @tab Interrupts sent.
@item 8 @tab rnr_in_v @tab Receiver not ready received.
@item 9 @tab rnr_out_v @tab Receiver not ready sent.
@item 10 @tab rr_in_v @tab Receiver ready received.
@item 11 @tab rr_out_v @tab Receiver ready sent.
@item 12 @tab rst_in_v @tab Resets received.
@item 13 @tab rst_out_v @tab Resets sent.
@item 14 @tab rsc_in_v @tab Restart confirms received.
@item 15 @tab rsc_out_v @tab Restart confirms sent.
@item 16 @tab clr_in_v @tab Clears received.
@item 17 @tab clr_out_v @tab Clears sent.
@item 18 @tab clc_in_v @tab Clear confirms received.
@item 19 @tab clc_out_v @tab Clear confirms sent.
@item 20 @tab octets_in_v @tab Octets received.
@item 21 @tab octets_out_v @tab Octets sent.
@item 22 @tab rst_timeouts_v @tab Reset timeouts.
@item 23 @tab ed_timeouts_v @tab Interrupt timeouts.
@item 24 @tab prov_rst_in_v @tab Provider initiated resets.
@item 25 @tab rem_rst_in_v @tab Remote initiated resets.
@end multitable
@end table
@end table

@page
@node N_getnliversion
@subsection N_getnliversion

@subsubheading Format

@example
@group
@verbatim
struct nliformat {
    unsigned char version;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item version
@end table

@page
@node N_traceon
@subsection N_traceon

@page
@node N_traceoff
@subsection N_traceoff

@page
@node NUI_MSG Input-Output Controls
@subsection NUI_MSG Input-Output Controls

@menu
* N_nuimsg::
* N_nuiput::
* N_nuidel::
* N_nuiget::
* N_nuimget::
* N_nuireset::
@end menu

@page
@node N_nuimsg
@subsubsection N_nuimsg

@page
@node N_nuiput
@subsubsection N_nuiput

@subsubheading Format

@example
@group
@verbatim
struct nui_put {
    char prim_class;
    char op;
    struct nuiformat nuid;
    struct facformat nuifacility;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item prim_class
Always @pval{NUI_MSG}.
@item op
Always @pval{NUI_PUT}.
@item nuid
@item nuifacility
@end table

@page
@node N_nuidel
@subsubsection N_nuidel

@subsubheading Format

@example
@group
@verbatim
struct nui_del {
    char prim_class;
    char op;
    struct nuiformat nuid;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item prim_class
Always @pval{NUI_MSG}.
@item op
Always @pval{NUI_DEL}.
@item nuid
@end table

@page
@node N_nuiget
@subsubsection N_nuiget

@subsubheading Format

@example
@group
@verbatim
struct nui_get {
    char prim_class;
    char op;
    struct nuiformat nuid;
    struct facformat nuifacility;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item prim_class
Always @pval{NUI_MSG}.
@item op
Always @pval{NUI_GET}.
@item nuid
@item nuifacility
@end table

@page
@node N_nuimget
@subsubsection N_nuimget

@subsubheading Format

@example
@group
@verbatim
struct nui_mget {
    char prim_class;
    char op;
    unsigned int first_ent;
    unsigned int last_ent;
    unsigned int num_ent;
    union {
        char buf[0];
        struct nui_addr entries[0];
    };
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item prim_class
Always @pval{NUI_MSG}.
@item op
Always @pval{NUI_MGET}.
@item first_ent
@item last_ent
@item num_ent
@item buf
@item entries
@end table

@page
@node N_nuireset
@subsubsection N_nuireset

@subsubheading Format

@example
@group
@verbatim
struct nui_reset {
    char prim_class;
    char op;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item prim_class
Always @pval{NUI_MSG}.
@item op
Always @pval{NUI_RESET}.
@end table

@page
@node N_zeroVCstats
@subsection N_zeroVCstats

@page
@node N_putx32map
@subsection N_putx32map

@page
@node N_getx32map
@subsection N_getx32map

@page
@node N_getSNIDstats
@subsection N_getSNIDstats

@subsubheading Format

@example
@group
@verbatim
struct persnidstats {
    uint32_t snid;
    int32_t network_state;
    uint32_t mon_array[59];
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item snid
@item network_state
@item mon_array
@multitable {00}{clr_timeouts_s}{Maximum number of PVCs ever attached.xxxxx}
@item 0 @tab cll_in_s @tab Calls received.
@item 1 @tab cll_out_s @tab Calls sent.
@item 2 @tab caa_in_s @tab Calls established outgoing.
@item 3 @tab caa_out_s @tab Calls established incoming.
@item 4 @tab dt_in_s @tab Data packets received.
@item 5 @tab dt_out_s @tab Data packets sent.
@item 6 @tab ed_in_s @tab Interrupts received.
@item 7 @tab ed_out_s @tab Interrupts sent.
@item 8 @tab rnr_in_s @tab Receiver not ready received.
@item 9 @tab rnr_out_s @tab Receiver not ready sent.
@item 10 @tab rr_in_s @tab Receiver ready received.
@item 11 @tab rr_out_s @tab Receiver ready sent.
@item 12 @tab prov_rst_in_s @tab Provider initiated resets received.
@item 13 @tab rem_rst_in_s @tab Remote initiated resets received.
@item 14 @tab rsc_in_s @tab Reset confirms received.
@item 15 @tab rsc_out_s @tab Reset confirms sent.
@item 16 @tab prov_clr_in_s @tab Provider initiated clears received.
@item 17 @tab clc_in_s @tab Clear confirms received.
@item 18 @tab clc_out_s @tab Clear confirms sent.
@item 19 @tab perr_in_s @tab Packets with protocol errors received.
@item 20 @tab out_vcs_s @tab Outgoing circuits.
@item 21 @tab in_vcs_s @tab Incoming circuits.
@item 22 @tab twoway_vcs_s @tab Two-way circuits.
@item 23 @tab res_in_s @tab Restarts received.
@item 24 @tab res_out_s @tab Restarts sent.
@item 25 @tab res_timeouts_s @tab Restart timeouts.
@item 26 @tab cll_timeouts_s @tab Call timeouts.
@item 27 @tab rst_timeouts_s @tab Reset timeouts.
@item 28 @tab clr_timeouts_s @tab Clear timeouts.
@item 29 @tab ed_timeouts_s @tab Interrupt timeouts.
@item 30 @tab retry_exceed_s @tab Retry count exceeded.
@item 31 @tab clear_exceed_s @tab Clear count exceeded.
@item 32 @tab octets_in_s @tab Octets received.
@item 33 @tab octets_out_s @tab Octets sent.
@item 34 @tab rec_in_s @tab Restart confirms received.
@item 35 @tab rec_out_s @tab Restart confirms sent.
@item 36 @tab rst_in_s @tab Reset confirms received.
@item 37 @tab rst_out_s @tab Reset confirms sent.
@item 38 @tab dg_in_s @tab Diagnostic packets received.
@item 39 @tab dg_out_s @tab Diagnostic packets sent.
@item 40 @tab res_in_conn_s @tab Restarts in connected state.
@item 41 @tab clr_in_s @tab Clears received.
@item 42 @tab clr_out_s @tab Clears sent.
@item 43 @tab pkts_in_s @tab Packets received.
@item 44 @tab pkts_out_s @tab Packets sent.
@item 45 @tab vcs_est_s @tab SVCs established.
@item 46 @tab max_svcs_s @tab Maximum number of SVCs opened.
@item 47 @tab svcs_s @tab SVCs currently open.
@item 48 @tab pvcs_s @tab PVCs currently attached.
@item 49 @tab max_pvcs_s @tab Maximum number of PVCs ever attached.
@item 50 @tab rjc_coll_s @tab Call rejects overload.
@item 51 @tab rjc_failNRS_s @tab Call rejects failed no resource.
@item 52 @tab rjc_nouser_s @tab Call rejects failed no user.
@item 53 @tab rjc_buflow_s @tab Call rejects buffers low.
@item 54 @tab reg_in_s @tab Registration requests received.
@item 55 @tab reg_out_s @tab Registration requests sent.
@item 56 @tab reg_conf_in_s @tab Registration confirms received.
@item 57 @tab reg_conf_out_s @tab Registration confirms sent.
@end multitable
@end table

@page
@node N_zeroSNIDstats
@subsection N_zeroSNIDstats

@page
@node N_setQOSDATPRI
@subsection N_setQOSDATPRI

@subsubheading Format

@example
@group
@verbatim
struct qosdatpri {
    int32_t band;
    uint32_t tx_window;
};
@end verbatim
@end group
@end example

@subsubheading Parameters

@table @parm
@item band
@item tx_window;
@end table

@page
@node N_resetQOSDATPRI
@subsection N_resetQOSDATPRI

@node NLI Management Information Base
@chapter NLI Management Information Base

The @file{OPENSS7-X25-MIB} provides the following tables:

@menu
* x25PLEConfigTable::	X.25 Packet Layer Entity (PLE) Configuration Table
* x25PLEProfileTable::	X.25 Packet Layer Entity (PLE) Profile Table
* x25PLEStateTable::	X.25 Packet Layer Entity (PLE) State Table
* x25PLEStatsTable::	X.25 Packet Layer Entity (PLE) Statistics Table
* x25VCConfigTable::	X.25 Virtual Circuit (VC) Configuration Table
* x25VCProfileTable::	X.25 Virtual Circuit (VC) Profile Table
* x25VCStatsTable::	X.25 Virtual Circuit (VC) Statistics Table
* x25PVCConfigTable::	X.25 Permanent Virtual Circuit (PVC) Configuration Table
* x25SVCConfigTable::	X.25 Switched Virtual Circuit (SVC) Configuration Table
@end menu

@iftex
@itemize
@item @ref{x25PLEConfigTable}.
@item @ref{x25PLEProfileTable}.
@item @ref{x25PLEStateTable}.
@item @ref{x25PLEStatsTable}.
@item @ref{x25VCConfigTable}.
@item @ref{x25VCProfileTable}.
@item @ref{x25VCStatsTable}.
@item @ref{x25PVCConfigTable}.
@item @ref{x25SVCConfigTable}.
@end itemize
@end iftex

@ifhtml
@multitable {x25PLEProfileTable:}{X.25 Permanent Virtual Circuit (PVC) Configuration Table}
@item @ref{x25PLEConfigTable}: @tab X.25 Packet Layer Entity (PLE) Configuration Table
@item @ref{x25PLEProfileTable}: @tab X.25 Packet Layer Entity (PLE) Profile Table
@item @ref{x25PLEStateTable}: @tab X.25 Packet Layer Entity (PLE) State Table
@item @ref{x25PLEStatsTable}: @tab X.25 Packet Layer Entity (PLE) Statistics Table
@item @ref{x25VCConfigTable}: @tab X.25 Virtual Circuit (VC) Configuration Table
@item @ref{x25VCProfileTable}: @tab X.25 Virtual Circuit (VC) Profile Table
@item @ref{x25VCStatsTable}: @tab X.25 Virtual Circuit (VC) Statistics Table
@item @ref{x25PVCConfigTable}: @tab X.25 Permanent Virtual Circuit (PVC) Configuration Table
@item @ref{x25SVCConfigTable}: @tab X.25 Switched Virtual Circuit (SVC) Configuration Table
@end multitable
@end ifhtml

@ifplaintext
@multitable {x25PLEProfileTable:}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item x25PLEConfigTable: @tab X.25 Packet Layer Entity (PLE) Config Table
@item x25PLEProfileTable: @tab X.25 Packet Layer Entity (PLE) Profile Table
@item x25PLEStateTable: @tab X.25 Packet Layer Entity (PLE) State Table
@item x25PLEStatsTable: @tab X.25 Packet Layer Entity (PLE) Stats Table
@item x25VCConfigTable: @tab X.25 Virtual Circuit (VC) Config Table
@item x25VCProfileTable: @tab X.25 Virtual Circuit (VC) Profile Table
@item x25VCStatsTable: @tab X.25 Virtual Circuit (VC) Stats Table
@item x25PVCConfigTable: @tab X.25 Permanent Virtual Circuit (PVC) Config Table
@item x25SVCConfigTable: @tab X.25 Switched Virtual Circuit (SVC) Config Table
@end multitable
@end ifplaintext


@node x25PLEConfigTable
@section X.25 Packet Layer Entity (PLE) Configuration Table

The @dfn{X.25 Packet Layer Entity (PLE) Configuration Table},
@mobj{x25PLEConfigTable}, is a table that provides specific configuration
information for various @dfn{X.25 Packet Layer Entities}.

Provides a table of @value{LONG} (@value{SHORT}) Entities.  Each X.25 Packet
Layer Entity corresponds to an X.25 DTE or DCE over which permanent virtual
circuits exist or virtual calls can be placed.  ITU-T Rec. X.283 | ISO/IEC 10733.
Each entry corresponds to an instance of an x25PLE managed object, which
represents a DTE, DCE or DXE X.25 packet layer entity, from which permanent
virtual circuits are formed or virtual calls are established.  ITU-T Rec. X.283
| ISO/IEC 10733.

@table @mobj

@item x25PLEConfigIndex
Provides and index for the PLE configuration entry.

@item x25PLEConfigProtocolVersionSupported
The protocol versions of ISO8208 available on the PLE interface.

@item x25PLEConfigLocalDTEAddress
The full DTE address of this PLE expressed as an X.121, X.31, etc. address.

@item x25PLEConfigInterfaceMode
The DCE/DTE mode in which the interface is currently operating.

@multitable {dCE(1)}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item dTE(0) @tab -@ Data Terminal Equiment
@item dCE(1) @tab -@ Data Circuit-terminating Equipment
@item dXE(2) @tab -@ Data eXchange Equipment (DTE/DCE)
@end multitable

@item x25PLEConfigDefaultThroughputClass
The default throughput class value currently agreed with the DCE.  This may be
the normal default, or may have been changed as a result of the use of the
defaultThroughputClassAssignment facility.

@item x25PLEConfigFlowControlNegotiationPermitted
Indicates whether flow control parameter negotiation is permitted.  When this
has the value @samp{true(1)}, the use of flow control parameter negotiation (by
specifying values for the window and packet size in call request and accept
packets) is permitted.  When it has the value @samp{false(2)}, no such values
shall be specified in call request and accept packets, and any values specified
in a Profile or via an internal interface shall be ignored.

@item x25PLEConfigCallDeflectionSubscription
Indicates whether call deflection has been subscribed to.  When this has value
@samp{true(1)}, call deflection has been subscribed to.  Otherwise it has the
value @samp{false(2)}.

@item x25PLEConfigMaxActiveCalls
The maximum number of active circuits permitted on this PLE.  When the NULL
value (zero (0)) is specified, the maximum number of active circuits shall be
limited only by the resources available to the entity.

@item x25PLEConfigRestartTime
Value for @dfn{Timer T20 (Restart Request Response Timer)} in centiseconds.
Note that the default timer is ultimately dependent upon the underlying data
link provider type.

@item x25PLEConfigDefaultPacketSizeIncoming
The default value of the packet size parameter for this DTE.  A value of NULL
(zero (0)) indicates the @cite{ISO/IEC 8208} or @cite{ITU-T Rec. X.25} default
value of @samp{128}.  Any other value indicates the value agreed by the
nonstandard default packet size facility.

@item x25PLEConfigDefaultPacketSizeOutgoing
The default value of the packet size parameter for this DTE.  A value of NULL
(zero (0)) indicates the @cite{ISO/IEC 8208} or @cite{ITU-T Rec. X.25} default
value of @samp{128}.  Any other value indicates the value agreed by the
nonstandard default packet size facility.

@item x25PLEConfigDefaultWindowSizeIncoming
The default value of the window size parameter for this DTE.  A value of NULL
(zero (0)) indicates the @cite{ISO/IEC 8208} or @cite{ITU-T Rec X.25} default
value of @samp{2}.  Any other value indicates the value agreed by the
nonstandard default window sizes facility.

@item x25PLEConfigDefaultWindowSizeOutgoing
The default value of the window size parameter for this DTE.  A value of NULL
(zero (0)) indicates the @cite{ISO/IEC 8208} or @cite{ITU-T Rec X.25} default
value of @samp{2}.  Any other value indicates the value agreed by the
nonstandard default window sizes facility.

@item x25PLEConfigMinimumRecallTimer
Minimum time in centiseconds before recall permitted.  This timer determines the
minimum interval (in centiseconds) which shall elapse following an unsuccessful
first call attempt before a subsequent call attempt is permitted.

@item x25PLEConfigRestartCount
Value for @dfn{Count R20 (Restart Request Retransmission Count)}.

@item x25PLEConfigSN-ServiceProvider
Distinguished name of the subnetwork (SN) service provider Managed Object.  This
attribute identifies the subnetwork entity to be used to support the linkage,
when enabled.  The subnetwork service provider may be in the data link layer, or
it may be in the network layer (for example when operating @cite{ISO 8473} over
the @cite{ISO 8208 SNDCF}).@footnote{@cite{ISO/IEC 10733 : sN-ServiceProvider.}}

@item x25PLEConfigSN-SA-P
Distinguished name of the service provider SA-P Managed Object (if present).
This is obtained via an internal interface when the linkage is enabled.  The
sN-SA-P may be a relationship to a SA-P Managed Object in the data link layer,
or it may be a relationship to another Managed Object within the network layer
which is not a SA-P Managed Object.  For example, when operating @cite{ISO 8473}
over the @cite{ISO 8208 SNDCF}, it is a relationship to the same x25PLE Managed
Object which is pointed to by the sN-ServiceProvider
Attribute.@footnote{@cite{ISO/IEC 10733 : sN-SA-P.}}

@item x25PLEConfigLogicalChannelAssignmentsPVC
Represents the logical channel assignments of this PLE, expressed as a
four-tuple where the values represent the set (with maximum permitted
cardinality (@code{LIC - 1}), minimum required cardinality of zero) of PVC
channels (with a maximum value (@code{LIC - 1}), and minimum value 1) assigned,
the incoming channel range, the two-way channel range, the outgoing channel
range, respectively.

The presence of each of the ranges shall be optional.  Absence of a particular
range shall signify that there are no channels of that type assigned.  Within
each range, the low value shall be less than or equal to the high value, and
there shall be no value in any set or range which is greater than or equal to a
value in a subsequent range when ordered as above.

This attribute is subject to the rules for logical assignments described in
@cite{ISO/IEC 8208 clause 3.7}.  it is understood that the Highest Permanent
Channel (HPC) is defined by the Lowest Incoming Channel (LIC) value minus one.

The @type{OCTET STRING} is encoded as two octets, most significant octet
followed by least significant octet, where each pair of octets represents
another channel number from @samp{1..4095} (but less than LIC), the logical
channel number to which a Permanent Virtual Circuit (PVC) has been
assigned.@footnote{@cite{ISO/IEC 10733 : logicalChannelAssignments, ISO/IEC 8208
clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsLIC
The lowest incoming logical channel in the incoming logical channel range.  When
set to zero (0), or the same value as the highest incoming logical channel, it
indicates that there is no incoming logical channel range and the highest
incoming logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsHIC
The highest incoming logical channel in the incoming logical channel range.
When set to zero (0), or the same value as the lowest incoming logical channel,
it indicates that there is no incoming logical channel range and the lowest
incoming logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsL2W
The lowest two-way logical channel in the two-way logical channel range.  When
set to zero (0), or to the same value as the highest two-way logical channel, it
indicates that there is no two-way logical channel range and the highest two-way
logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsH2W
The highest two-way logical channel in the two-way logical channel range.  When
set to zero (0), or to the same value as the lowest two-way logical channel, it
indicates that there is no two-way logical channel range and the lowest two-way
logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsLOG
The lowest outgoing logical channel in the outgoing logical channel range.  When
set to zero (0), or to the  same value as the highest outgoing logical channel,
it indicates that there is no outgoing channel range and the highest outgoing
logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigLogicalChannelAssignmentsHOG
The highest outgoing logical channel in the outgoing logical channel range.
When set to zero (0), or to the same value as the lowest outgoing logical
channel, it indicates that there is no outgoing logical channel range and the
lowest outgoing logical channel is otherwise ignored.

This value is subject to the rules for logical channel assignments described in
@cite{ISO/IEC 8208 clause 3.7}.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEConfigPacketSequencing

The modulo of the packet sequence number space.  Expressed as an integer.
@cite{ISO/IEC 8208} only requires support for at least one of the two values
@samp{8} and @samp{128}, but it is possible that some future revision may extend
the range.@footnote{It has already been extended to @samp{32768}.} A system is
only required to support the setting of values which are also required by the
protocol standard.  A system shall return an error when an attempt is made to
set the value to a value which is not supported by that
system.@footnote{@cite{ISO/IEC 10733 : packetSequencing.}}

@multitable {2147483648}{m}{Modulo 2147483648}{31 bits}
@item 8 @tab - @tab Modulo 8 @tab 3 bits
@item 128 @tab - @tab Modulo 128 @tab 7 bits
@item 32768 @tab - @tab Modulo 32768 @tab 15 bits
@c @item 2147483648 @tab - @tab Modulo 2147483648 @tab 31 bits
@end multitable

@item x25PLEConfigPLEClientMOName
The Distinguished name of the client Managed Object.  Note that this will either
be a Transport Layer Managed Object or a CLNS Managed
Object.@footnote{@cite{ISO/IEC 10733 : pLEClientMOName.}}

@item x25PLEConfigRegistrationRequestTime
Value for @dfn{Timer T28 (Registration Request Timer)} in
centiseconds.@footnote{@cite{ISO/IEC 10733 : regsitrationRequestTime.}}

@item x25PLEConfigRegistrationRequestCount
Value for @dfn{Count R28 (Registration Request Count)}.@footnote{@cite{ISO/IEC
10733 : registrationRequestCount.}}

@item x25PLEConfigRegistrationPermitted
When @samp{true(1)}, the use of on-line facility registration is permitted.
Otherwise, the value is @samp{false(2)}.@footnote{@cite{ISO/IEC 10733 :
registrationPermitted.}}

@end table

@node x25PLEProfileTable
@section X.25 Packet Layer Entity (PLE) Profile Table

The @dfn{Packet Layer Entity (PLE) Profile Table},
@mobj{x25PLEProfileTable}, is a table that provides a common set of
X.25 packet layer entity (PLE) configuration parameters organized into a
referencable profile.

This table provides profiles for the x25PLE.  These profiles are not created nor
deleted by management stations; however, their values may be altered.  Each
entry in the table consists of a separate profile.  The managed element may
choose to use profile values when creating instances of x25PLEs (entries in the
@mobj{x25PLEConfig} table.@footnote{@cite{ITU-T Rec. X.283 | ISO/IEC 10733.}}

Each entry in the table provides a separate profile identified by the
@mobj{x25PLEProfileName} which consists of a @mobj{DisplayString} used to
identify the profile.  The agent or implementation may used specific profiles to
create instances of x25PLEs.  Management stations may not create nor delete
entries in this table, however, the values associated with a given profile may
be altered.@footnote{@cite{ITU-T Rec.  X.283 | ISO/IEC 10733.}}

@table @mobj
@item x25PLEProfileName

@item x25PLEProfileLocalDTEAddress

@item x25PLEProfileInterfaceMode
The DCE/DTE mode in which the interface is currently
operating.@footnote{@cite{ISO/IEC 10733 : interfaceMode.}}

@multitable {dCE(1)}{m}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item dTE(0) @tab - @tab Data Terminating Equipment (DTE)
@item dCE(1) @tab - @tab Data Circuit-terminating Equipment (DCE)
@item dXE(2) @tab - @tab Data eXchange Equipment (DTE/DCE)
@end multitable

@item x25PLEProfileDefaultThroughputClass
The default throughput class value currently agreed with the DCE.  This may be
the normal default, or may have been changed as a result of the use of the
defaultThroughputClassAssignment facility.

@item x25PLEProfileFlowControlNegotiationPermitted
Indicates whether flow control parameter negotiation is permitted.  When this
has the value @samp{true(1)}, the use of flow control parameter negotiation (by
specifying values for the window and packet size in call request and accept
packets) is permitted.  When it has the value @samp{false(2)}, no such values
shall be specified in call request and accept packets, and any values specified
in a Profile or via an internal interface shall be
ignored.@footnote{@cite{ISO/IEC 10733 : flowControlNegotiationPermitted.}}

@item x25PLEProfileCallDeflectionSubscription
Indicates whether call deflection has been subscribed to.  When this has value
@samp{true(1)}, call deflection has been subscribed to.@footnote{@cite{ISO/IEC
10733 : callDeflectionSubscription.}}

@item x25PLEProfileMaxActiveCircuits
The maximum number of active circuits permitted on this PLE.  When the NULL
value (zero (0)) is specified, the maximum number of active circuits shall be
limited only by the resources available to the entity.@footnote{@cite{ISO/IEC
10733 : maxActiveCalls.}}

@item x25PLEProfileRestartTime
Value for @dfn{Timer T20 (Restart Request Response Timer)} in centiseconds.  Note that
the default timer is ultimately dependent upon the underlying data link provider
type.@footnote{@cite{ISO/IEC 10733 : restartTime.}}

@item x25PLEProfileDefaulPacketSizeIncoming
The default value of the packet size parameter for this DTE.  A value of NULL
(zero (0)) indicates the ISO 8208 default value of 128.  Any other value
indicates the value agreed by the nonstandard default packet size
facility.@footnote{@cite{ISO/IEC 10733 : defaultPacketSize, ITU-T Rec.  X.283 :
defaultPacketSizes.}}

@item x25PLEProfileDefaulPacketSizeOutgoing
The default value of the packet size parameter for this DTE.  A value of NULL
(zero (0)) indicates the ISO/IEC 8208  or ITU-T Rec. X.25 default value of 128.
Any other value indicates the value agreed by the nonstandard default packet
size facility.@footnote{@cite{ISO/IEC 10733 : defaultPacketSize, ITU-T Rec.
X.283 : defaultPacketSizes.}}

@item x25PLEProfileDefaultWindowSizeIncoming
The default value of the window size parameter for this DTE.  A value of NULL
(zero (0)) indicates the ISO/IEC 8208 or ITU-T Rec X.25 default value of 2.  Any
other value indicates the value agreed by the nonstandard default window sizes
facility.@footnote{@cite{ISO/IEC 10733 : defaultWindowSize, ITU-T Rec.  X.283 :
defaultWindowSizes.}}

@item x25PLEProfileDefaultWindowSizeOutgoing
The default value of the window size parameter for this DTE.  A value of NULL
(zero (0)) indicates the ISO/IEC 8208 or ITU-T Rec X.25 default value of 2.  Any
other value indicates the value agreed by the nonstandard default window sizes
facility.@footnote{@cite{ISO/IEC 10733 : defaultWindowSize, ITU-T Rec.  X.283 :
defaultWindowSizes.}}

@item x25PLEProfileMinimumRecallTimer
Minimum time in centiseconds before recall permitted.  This timer determines the
minimum interval (in centiseconds) which shall elapse following an unsuccessful
first call attempt before a subsequent call attempt is
permitted.@footnote{@cite{ISO/IEC 10733 : minimumRecallTime.}}

@item x25PLEProfileRestartCount
Value for @dfn{Count R20 (Restart Request Retransmission
Count)}.@footnote{@cite{ISO/IEC 10733 : restartCount.}}

@item x25PLEProfileSN-ServiceProvider
Distinguished name of the subnetwork (SN) service provider Managed Object.  This
attribute identifies the subnetwork entity to be used to support the linkage,
when enabled.  The subnetwork service provider may be in the data link layer, or
it may be in the network layer (for example when operating ISO 8473 over the ISO
8208 SNDCF).@footnote{@cite{ISO/IEC 10733 : sN-ServiceProvider.}}

@item x25PLEProfileSN-SA-P
Distinguished name of the service provider SA-P Managed Object (if present).
This is obtained via an internal interface when the linkage is enabled.  The
sN-SA-P may be a relationship to a SA-P Managed Object in the data link layer,
or it may be a relationship to another Managed Object within the network layer
which is not a SA-P Managed Object.  For example, when operating ISO 8473 over
the ISO 8208 SNDCF, it is a relationship to the same x25PLE Managed Object which
is pointed to by the sN-ServiceProvider Attribute.@footnote{@cite{ISO/IEC 10733
: sN-SA-P.}}

@item x25PLEProfileLogicalChannelAssignementsPVC
Represents the logical channel assignments of this PLE, expressed as a
four-tuple where the values represent the set (with maximum permitted
cardinality (LIC - 1), minimum required cardinality of zero) of PVC channels
(with a maximum value (LIC - 1), and minimum value 1) assigned, the incoming
channel range, the two-way channel range, the outgoing channel range,
respectively.

The presence of each of the ranges shall be optional.  Absence of a particular
range shall signify that there are no channels of that type assigned.  Within
each range, the low value shall be less than or equal to the high value, and
there shall be no value in any set or range which is greater than or equal to a
value in a subsequent range when ordered as above.

This attribute is subject to the rules for logical assignments described in
ISO/IEC 8208 clause 3.7.  it is understood that the Highest Permanent Channel
(HPC) is defined by the Lowest Incoming Channel (LIC) value minus one.

The OCTET STRING is encoded as two octets, most significant octet followed by
least significant octet, where each pair of octets represents another channel
number from 1..4095 (but less than LIC), the logical channel number to which a
Permanent Virtual Circuit (PVC) has been assigned.@footnote{@cite{ISO/IEC 10733
: logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsLIC
The lowest incoming logical channel in the incoming logical channel range.  When
set to zero (0), or the same value as the highest incoming logical channel, it
indicates that there is no incoming logical channel range and the highest
incoming logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsHIC
The highest incoming logical channel in the incoming logical channel range.
When set to zero (0), or the same value as the lowest incoming logical channel,
it indicates that there is no incoming logical channel range and the lowest
incoming logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsL2W
The lowest two-way logical channel in the two-way logical channel range.  When
set to zero (0), or to the same value as the highest two-way logical channel, it
indicates that there is no two-way logical channel range and the highest two-way
logical channel is ignored.

This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsH2W
The highest two-way logical channel in the two-way logical channel range.  When
set to zero (0), or to the same value as the lowest two-way logical channel, it
indicates that there is no two-way logical channel range and the lowest two-way
logical channel is ignored.
         
This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsLOG
The lowest outgoing logical channel in the outgoing logical channel range.  When
set to zero (0), or to the  same value as the highest outgoing logical channel,
it indicates that there is no outgoing channel range and the highest outgoing
logical channel is ignored.
         
This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfileLogicalChannelAssignementsHOG
The highest outgoing logical channel in the outgoing logical channel range.
When set to zero (0), or to the same value as the lowest outgoing logical
channel, it indicates that there is no outgoing logical channel range and the
lowest outgoing logical channel is otherwise ignored.

This value is subject to the rules for logical channel assignments described in
ISO/IEC 8208 clause 3.7.@footnote{@cite{ISO/IEC 10733 ;
logicalChannelAssignments, ISO/IEC 8208 clause 3.7.}}

@item x25PLEProfilePacketSequencing
The module of the packet sequence number space.  Expressed as an integer.
ISO/IEC 8208 only requires support for at least one of the two values 8 and 128,
but it is possible that some future revision may extend the range.  A system is
only required to support the setting of values which are also required by the
protocol standard.  A system shall return an error when an attempt is made to
set the value to a value which is not supported by that
system.@footnote{@cite{ISO/IEC 10733 : packetSequencing.}}

@item x25PLEProfileRegistrationRequestTime
Value for @dfn{Timer T28 (Registration Request Timer)} in
centiseconds.@footnote{@cite{ISO/IEC 10733 : regsitrationRequestTime.}}

@item x25PLEProfileRegistrationRequestCount
Value for @dfn{Count R28 (Registration Request Count)}.@footnote{@cite{ISO/IEC
10733 : registrationRequestCount.}}

@item x25PLEProfileRegistrationPermitted
When @samp{true(1)}, the use of online facility registration is
permitted.@footnote{@cite{ISO/IEC 10733 : registrationPermitted.}}

@end table

@node x25PLEStateTable
@section X.25 Packet Layer Entity (PLE) State Table

The @dfn{X.25 Packet Layer Entity (PLE) State Table},
@mobj{x25PLEStateTable}, is a table that provides the current states for various
X.25 packet layer entities.

The @mobj{x25PLEStateTable} provides state information for each x25PLE object
which are represented by the rows in the table.  Each row corresponds to an X.25
Packet Layer Entity.@footnote{@cite{ITU-T Rec. X.283 | ISO/IEC 10733, ITU-T Rec.
X.721 | ISO/IEC 10165-2.}}

The @mobj{x25PLEStateEntry} provides an entry in the X.25 Packet Layer Entity
state table which provides the state information for a single packet layer
entity as indicated by the index into the table.@footnote{@cite{ITU-T Rec. X.283
| ISO/IEC 10733, ITU-T Rec.  X.721 | ISO/IEC 10165-2.}}

@table @mobj

@item x25PLEStateIndex
Provides an index for the PLE state table.

@item x25PLEStateAdministrativeState
Provides the administrative state of the PLE following the AdministrativeState
textual convention of the @file{OPENSS7-SMI-MIB} module.@footnote{@cite{ITU-T
Rec.  X.721 | ISO/IEC 10165-2 administrativeState.}}

@item x25PLEStateOperationalState
Provides the operational state of the PLE following the OperationalState textual
convention of the @file{OPENSS7-SMI-MIB} module.@footnote{@cite{ITU-T Rec. X.721
| ISO/IEC 10165-2 operationalState.}}

@item x25PLEStateUsageState
Provides the usage status of the PLE following the UsageStatus textual
convention of the @file{OPENSS7-SMI-MIB} module.@footnote{@cite{ITU-T Rec. X.721
| ISO/IEC 10165-2 usageStatus.}}

@item x25PLEStateProceduralStatus
Provides the procedural status of the PLE following the ProceduralStatus textual
convention of the @file{OPENSS7-SMI-MIB} module.@footnote{@cite{ITU-T Rec. X.721
| ISO/IEC 10165-2 proceduralStatus.}}

@item x25PLEStateAlarmStatus
Provides the alarm status of the PLE following the AlarmStatus textual
convention of the @file{OPENSS7-SMI-MIB} module.@footnote{@cite{ITU-T Rec. X.721
| ISO/IEC 10165-2 alarmStatus.}}

@end table

@node x25PLEStatsTable
@section X.25 Packet Layer Entity (PLE) Statistics Table

The @dfn{X.25 Packet Layer Entity (PLE) Statistics Table},
@prim{x25PLEStatsTable}, is a table that provides statistics for various X.25
packet layer entities.

The @mobj{x25PLEStatsTable} provides statistics and counts for each X25PLE
object which are represented by the rows in the table.  Each row corresponds to
an X.25 Packet Layer Entity.@footnote{@cite{ITU-T Rec. X.283 | ISO/IEC 10733.}}

An entry in the @mobj{x25PLEStatsTable}.  Each row or entry provides statistics
for one X.25 Packet Layer Entity.  Rows cannot be created or deleted by
management stations.@footnote{@cite{ITU-T Rec. X.283 | ISO/IEC 10733.}}

@table @mobj

@item x25PLEStatsIndex

@item x25PLEStatsOctetsSentCounter
This corresponds to the ISO/IEC 8208 Octets Sent attribute.  Note that the DMI
definition is in terms of user data octets.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsOctetsReceivedCounter
This corresponds to the ISO/IEC 8208 Octets Received attribute.  Note that the
DMI definition is in terms of user data octets.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsDataPacketsSent
Counter of the total number of data packets sent.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsDataPacketsReceived

@item x25PLEStatsCallAttempts
Counter of the total number of data packets received.@footnote{@cite{ISO/IEC
10733 : octetsSentCounter.}}

@item x25PLEStatsCallsConnected
Counter of the total number of calls which have reached the open
state.@footnote{@cite{ISO/IEC 10733 : octetsSentCounter.}}

@item x25PLEStatsProviderInitiatedDisconnects
Counter for the provider initiated disconnect events which generate
communications alarm notifications.@footnote{@cite{ISO/IEC 10733 :
providerInitiatedDisconnects.}}

@item x25PLEStatsCallTimeouts
Counter of the number of times timer @dfn{T21} expiry is experienced by the PLE.
@footnote{@cite{ISO/IEC 10733 : octetsSentCounter.}}

@item x25PLEStatsClearTimeouts
Counter of the number of times timer @dfn{T23} expiry is experienced by the PLE.
ISO/IEC 10733 : clearTimeouts.

@item x25PLEStatsRemotelyInitiatedResets
Counter associated with the remotely initiated reset event which generates a
communications alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsDataRetransmissionTimerExpires
Counter of the number of expires of timer @dfn{T25}.  Returns zero if the option
is not implemented.@footnote{@cite{ISO/IEC 10733 : octetsSentCounter.}}

@item x25PLEStatsProviderInitiatedResets
Counter associated with the provider initiated reset event which generates a
communication alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsResetTimeouts
Counter of the number of timer @dfn{T22} expires experienced by the
PLE.@footnote{@cite{ISO/IEC 10733 : octetsSentCounter.}}

@item x25PLEStatsRemotelyInitiatedRestarts
Counter of the number of remotely initiated restarts.  This is the total number
of remotely initiated (including provider initiated) restarts experienced by the
PLE, excluding the restart associated with bringing up the PLE interface.
@footnote{@cite{ISO/IEC 10733 : octetsSentCounter.}}

@item x25PLEStatsRestartCountsExceeded
Counter associated with the restart count exceeded event which generate a
communication alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsProtocolErrorsDetectedLocally
Counter associated with the protocol error detected locally event which
generates a communications alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsProtocolErrorsAccusedOf
Counter associated wtih the accused of protocol error event which generates
communications alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsCallEstablishmentRetryCountsExceeded
Counter associated with the call establishment retry count exceeded event which
generates a communications alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@item x25PLEStatsClearCountsExceeded
Counter associated with the clear count exceeded event which generates a
communications alarm notification.@footnote{@cite{ISO/IEC 10733 :
octetsSentCounter.}}

@end table

@node x25VCConfigTable
@section X.25 Virtual Circuit (VC) Configuration Table

The @dfn{X.25 Virtual Circuit (VC) Configuration Table},
@mobj{x25VCConfigTable}, is a table that provides specific configuration
information for various virtual circuits (VC) belonging to the various X.25
packet layer entities (PLE).

@table @mobj
@item x25VCConfigId
ITU-T Rec. X.283 | ISO/IEC 10742.
@item x25VCConfigChannel
ITU-T Rec. X.283 | ISO/IEC 10742.
@item x25VCConfigPacketSizeIncoming
The incoming packet size for this VC.  In the case of a profile entry, it is the
proposed value of the incoming packet size to be used when establishing the
virtual call, expressed in octets.  The value NULL (or zero (0)) indicates that
the default incoming packet size as indicated by the
x25PLEConfigDefaultPacketSizeIncoming attribute of the containing x25PLE entry),
is to be used.  In the case of a non-profile entry, it is the actual packet size
in use for the VC.  ITU-T Rec. X.283 | ISO/IEC 10742.
@item x25VCConfigPacketSizeOutgoing
The outgoing packet size for this VC.  In the case of a profile entry, it is the
proposed value of the outgoing packet size to be used when establishing the
virtual call, expressed in octets.  The value NULL (or zero (0)) indicates that
the default outgoing packet size as indicated by the
x25PLEConfigDefaultPacketSizeOutgoing attribute of the containing x25PLE etnry),
is to be used.  Int he case of a non-profile entry, it is the actual packet size
in used for the VC.  ITU-T Rec. X.283 | ISO/IEC 10742.
@item x25VCConfigWindowSizeIncoming
The actual incoming window size in use for this VC.  ITU-T Rec. X.283 | ISO/IEC
10742.
@item x25VCConfigWindowSizeOutgoing
The actual outgoing window size in use for this VC.  ITU-T Rec. X.283 | ISO/IEC
10742.
@item x25VConfigThroughputClassIncoming
The incoming throughput class in use or to be used.  For a profile, this is the
throughput class to be proposed.  For a non-profile it is the actual throughput
class in use.  For Virtual Calls this is the result of negotiation.  ITU-T Rec.
X.283 | ISO/IEC 10742.
@item x25VConfigThroughputClassOutgoing
The outgoing throughput class in use or to be used.  For a profile, this is the
throughput class to be proposed.  For a non-profile it is the actual throughput
class in use.  For Virtual Calls this is the result of negotiation.  ITU-T Rec.
X.283 | ISO/IEC 10742.
@end table

@node x25VCProfileTable
@section X.25 Virtual Circuit (VC) Profile Table

The @dfn{X.25 Virtual Circuit (VC) Profile Table}
@mobj{x25VCProfileTable}, is a table that provides a common set of virtual
circuit (VC) configuration parameters organized into a referencable profile.

This managed object exists in order to permit the values of various parameters
of a virtual call to be specified in advance by management.  When a virtual call
is to be established, the values of all the parameters to be used can be
identified by specifying an instance of this Managed Object.  However it is permitted for
values specified by other means (for example, across and internal user
interface) to override the values supplied in the profile.  There may be
multiple entries in this table.  ISO/IEC 10733 : virtualCall.

@table @mobj
@item x25VCProfileId
ISO/IEC 10733.
@item x25VCProfileProposedPacketSizeIncoming
The proposed value of the packet size parameter to be used when establishing the
virtual call, expressed in octets.  The value of NULL (zero (0)) indicates that
the default packet size (as indicated by the defaultPacketSize attribute of the
containing X.25 PLE Managed Object), is to be used.  ISO/IEC 10733.
@item x25VCProfileProposedPacketSizeOutgoing
The proposed value of the packet size parameter to be used when establishing the
virtual call, expressed in octets.  The value of NULL (zero (0)) indicates that
the default packet size (as indicated by the defaultPacketSize attribute of the
containing X.25 PLE Managed Object), is to be used.  ISO/IEC 10733.
@item x25VCProfileProposedWindowSizeIncoming
The proposed value of the window size parameter to be used when establishing the
virtual call.  The value of NULL (zero (0)) indicates that the default window
size (as indicated by the defaultWindowSize attribute of the containing X.25 PLE
Managed Object), is to be used.  ISO/IEC 10733.
@item x25VCProfileProposedWindowSizeOutgoing
The proposed value of the window size parameter to be used when establishing the
virtual call.  The value of NULL (zero (0)) indicates that the default window
size (as indicated by the defaultWindowSize attribute of the containing X.25 PLE
Managed Object), is to be used.  ISO/IEC 10733.
@item x25VCProfileAcceptReverseCharging
When @samp{false(2)}, an incoming call requesting reverse charging shall not be
accepted.  ISO/IEC 10733.
@item x25VCProfileProposeReverseCharging
When @samp{true(1)}, an outgoing call shall be initiated requesting reverse charging.
ISO/IEC 10733.
@item x25VCProfileFastSelect
Type of fast select to be used for the call.  This specifies that one of 'fast
select', 'fast select with restricted response', or no fast select facility is
to be used for the call.  Includes a value 'not specified' which indicates that
no preference is expressed.  ISO/IEC 10733.
@multitable {fastSelectWithRestrictedResponse(2)}{xxxxxxxxxxxxxxxxxxxxxxxxxx}
@item notSpecified(0) @tab Unspecified or unknown.
@item fastSelect(1) @tab Fast Select with unrestricted response.
@item fastSelectWithRestrictedResponse(2) @tab Fast Select with restricted response.
@item noFastSelect(3) @tab No fast select.
@end multitable
@item x25VCProfileCallTime
Value for @dfn{Timer T21 (Call Request Response Timer)} in centiseconds.  ISO/IEC
10733.
@item x25VCProfileResetTime
The value for @dfn{Timer T22 (Reset Request Response Timer)} in centiseconds.  ISO/IEC
10733.
@item x25VCProfileClearTime
Value for @dfn{Timer T23 (Clear Request Response Timer)} in centiseconds.  ISO/IEC
10733.
@item x25VCProfileInterruptTime
Value for @dfn{Timer T26 (Interrupt Response Timer)} in centiseconds.  ISO/IEC 10733.
@item x25VCProfileResetCount
Value for @dfn{Count R22 (Reset Request Retransmission Count).}  ISO/IEC 10733.
@item x25VCProfileClearCount
Value for @dfn{Count R23 (Clear Request Retransmission Count).}  ISO/IEC 10733.
@item x25VCProfileWindowTime
Value for Timer 24 (Window Status Transmission Timer) in centiseconds.

Valid when implemented and using the optional window rotation recovery
procedures at a receiving DTE as described in Clause 11.2.2 of ISO/IEC 8208 (2nd
Edition).  ISO/IEC 10733, ISO/IEC 8208 clause 11.2.2.
@item x25VCProfileDataRetransmissionTime
Default for @dfn{Timer T25 (Window Rotation Timer)} in centiseconds.

Valid when implemented and using the operation transmitting window rotation
recovery procedures at a transmitting DTE as described in Clause 11.2.1 of
ISO/IEC 8208 (2nd Edition).  ISO/IEC 10733.
@item x25VCProfileDataRetransmissionCount
Value for @dfn{Count R25 (Data Packet Retransmission Count)}.

Valid when implemented and using the operation transmitting window rotation
recovery procedures at a transmitting DTE as described in Clause 11.2.1 of
ISO/IEC 8208 (2nd Edition).  ISO/IEC 10733.
@item x25VCProfileRejectTime
Value for @dfn{Timer T27 (Reject Response Timer)} in centiseconds.

Valid when the optional packet retransmission procedures are implemented and
used.  ISO/IEC 10733.
@item x25VCProfileRejectCount
Value for @dfn{Count R27 (Reject Retransmission Count)}.

Valid when the optional packet retransmission procedures are implemented and
used.  ISO/IEC 10733.
@end table

@node x25VCStatsTable
@section X.25 Virtual Circuit (VC) Statistics Table

The @dfn{X.25 Virtual Circuit (VC) Statistics Table},
@prim{x25VCStatsTable}, is a table that provides statistics for various virtual
circuits (VC) belonging to the various X.25 packet layer entities (PLE).

@table @mobj
@item x25VCStatsIndex
ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsChannel
ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsOctetsSentCounter
ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsOctetsReceivedCounter
ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsDataPacketsSent
Counter of the total number of data packets sent by the PLE or over the PVC/VC.
ITU-T Rec. X.283 | ISO/IEC 10733 dataPacketsSent.
@item x25VCStatsDataPacketsReceived
Counter of the total number of data packets received by the PLE or over the
PVC/VC.  ITU-T Rec. X.283 | ISO/IEC 10733 dataPacketsReceived.
@item x25VCStatsProviderInitiatedDisconnects
Counter for the provider initiated disconnect events which generate
communication alarm notifications.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsRemotelyInitiatedResets
Counter associated with the remotely initiated reset event which generates a
communication alarm notification.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsDataRetranmissionTimerExpiries
Counter of the number of expires of timer @dfn{T25}.  Returns zero if the option is
not implemented.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsProviderInitiatedResets
Counter associated with the provider initiated reset event which generates a
communication alarm notification.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsResetTimeouts
Counter of the number of timer @dfn{T22} expiries experienced by the PLE or over the
PVC/VC.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsRemotelyInitiatedRestarts
Counter of the number of remotely initiated restarts.  This is the total number
of remotely initiated (including provider initiated) restarts experienced by the
PLE, including the restart associated with bringing up the PDE interface.  ITU-T
Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsInterruptPacketsSent
Counter of the number of interrupt packets sent by the PLE or over the PVC/VC.
ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsInterruptPacketsReceived
Counter of the number of interrupt packets received by the PLE or over the
PVC/VC.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsInterruptTimerExpiries
Counter of the number of expiries of timer @dfn{T26} experienced by the PLE or over
the PVC/VC.  ITU-T Rec. X.283 | ISO/IEC 10733.
@item x25VCStatsX25SegmentsSent
Value for count of X.25 Segments Received.  ITU-T Rec. X.283 | but not ISO/IEC
10733.
@item x25VCStatsX25SegmentsReceived
Value for count of X.25 Segments Sent.  ITU-T Rec. X.283 | but not ISO/IEC
10733.
@end table

@node x25PVCConfigTable
@section X.25 Permanent Virtual Circuit (PVC) Configuration Tableh

The @dfn{X.25 Permanent Virtual Circuit (PVC) Configuration Table},
@mobj{x25PVCConfigTable}, is a table that provides specific configuration
information for permanent virtual circuits (PVC) belonging to the various X.25
packet layer entities (PLE).

An entry exists for each Permanent Virtual Circuit.  It may be both created and
deleted by management stations.  

For DTEs, when an entry is created, the protocol machine shall be reinitialized
and a reset PDU shall be transmitted with a cause code of DTE originated
(encoded as 00000000) and a diagnostic code of DTE operational (161) shall be
transmitted.  When the entry is deleted, the protocol machine shall be
reinitialized and a reset PDU with cause code of DTE originated (encoded as
00000000) and a diagnostic code of DTE not operational (162) shall be
transmitted.

For DCEs, when an entry is created, the protocol machine shall be re-initialized
and a reset PDU shall be transmitted.  A cause code of remote DTE Operational
(encoded as X000 1001) or Network Operational (encoded as X000 1111) may, for
example, be included.  When the entry is deleted the protocol machine shall be
reinitialized and a reset PDU shall be transmitted.  A cause code of Out of
Order (encoded as X000 0001) or Network Out of Order (encoded as X001 1101) may,
for example, be included.

ITU-T Rec. X.283 | ISO/IEC 10742.

@itemize
@item x25PVCConfigId
@item x25PVCConfigChannel
@item x25PVCConfigRowStatus
@end itemize

@node x25SVCConfigTable
@section X.25 Switched Virtual Circuit (SVC) Configuration Table

The @dfn{X.25 Switched Virtual Circuit (SVC) Configuration Table},
@mobj{x25PVCConfigTable}, is a table that provides specific configuration
information for switched virtual circuits (SVC) belonging to the various X.25
packet layer entities (PLE).

@table @mobj
@item x25SVCConfigId
@item x25SVCConfigChannel
@item x25SVCConfigDirection
The direction (incoming(0) or outgoing(1)) of the call.  ISO/IEC 10733 :
direction.
@item x25SVCConfigRemoteDTEAddress
The DTE Address of the remote DTE.  In the case of an outgoing call, this is the
remote DTE address from the called address of the transmitted call request
packet.  In the case of an incoming call, it is the calling address from the
received call request packet.  ISO/IEC 10733 remoteDTEAddress.
@item x25SVCConfigThroughputClass
The actual through class in used for the call.  For SVCs this is the result of
negotiation.  ISO/IEC 10733 : throughputClass.
@item x25SVCConfigRedirectReason
The reason for call redirect.  The zero value indicates that the call was not
redirected.  ISO/IEC 10733 : redirectReason.
@item x25SVCConfigOriginallyCalledAddress
The originally called address.  ISO/IEC 10733 : originallyCalledAddress.
@item x25SVCConfigCallingAddressExtension
The contents of the calling address extension field.

In the OSI context, this will always be an NSAP address but in other uses it may
not.  In any case, it may be null, for example, when used by ISO 8473.
@item x25SVCConfigCalledAddressExtension
The contents of the called address extension field.

In the OSI context, this will always be an NSAP address but in other uses it may
not.  In any case, it may be null, for example, when used by ISO 8473.
@end table

@c @node Addendum for @value{SHORT} Conformance
@c @chapter Addendum for @value{SHORT} Conformance

@c @node Mapping NLI Primitives
@c @chapter Mapping NLI Primitives

@c @node State/Event Tables
@c @appendix State/Event Tables

@c @node Precedence Tables
@c @appendix Precedence Tables

@node Allowable Sequence of NLI Primitives
@chapter Allowable Sequence of NLI Primitives

@menu
* Opening a Connection::
* Data Transfer::
* Closing a Connection::
* Listening::
* PVC Operation::
@end menu

@node Opening a Connection
@section Opening a Connection
@cindex Opening a connection

@node Data Transfer
@section Data Transfer
@cindex Data transfer

@node Closing a Connection
@section Closing a Connection
@cindex Closing a connection

@node Listening
@section Listening
@cindex Listening

@node PVC Operation
@section PVC Operation
@cindex PVC operation

@c @node Precedence of NLI Primitives
@c @chapter Precedence of NLI Primitives

@c @node Guidelines for Protocol Independent NLI Users
@c @appendix Guidelines for Protocol Independent NLI Users

@c @node Required Information for NLI Provider-Specific Addenda
@c @appendix Required Information for NLI Provider-Specific Addenda

@node NLI Header Files
@appendix NLI Header Files

@menu
* x25_proto.h::		X.25 Protocol Primitive Header
* x25_control.h::	X.25 Input-Output Control Header
@end menu

Applications using the Network Layer Interface (NLI) need to include several
system header files:

@node x25_proto.h
@section X.25 Protocol Primitive Header

@table @file
@item <errno.h>
@item <sys/types.h>
@item <sys/ioctl.h>
@item <sys/stropts.h>
@item <sys/snet/x25_proto.h>
@end table

Note that on @cite{IRIS SX.25} this file is located in @file{<sys/snet/x25_proto.h>}.
Note that on @cite{Solaris X.25} this file is located in @file{<sys/netx25/x25_proto.h>}.

@smallformat
@verbatiminclude x25_proto.h
@end smallformat

@node x25_control.h
@section X.25 Input-Output Control Header

@table @file
@item <errno.h>
@item <sys/types.h>
@item <sys/ioctl.h>
@item <sys/stropts.h>
@item <sys/snet/x25_proto.h>
@item <sys/snet/x25_control.h>
@end table

Note that on @cite{IRIS SX.25} this file is located in @file{<sys/snet/x25_control.h>}.
Note that on @cite{Solaris X.25} this file is located in @file{<sys/netx25/x25_control.h>}.

@smallformat
@verbatiminclude x25_control.h
@end smallformat

@node NLI Library
@appendix NLI Library

@node NLI Drivers and Modules
@appendix NLI Drivers and Modules

@menu
* NLI Multiplexing Driver::
* NLI Conversion Module::
* NPI Conversion Module::
* CONS Module::
* XX25 Module::
* IXE Multiplexing Driver::
* IP Multiplexing Driver::
@end menu

The Network Layer Interface (NLI) is used to provide services to a number of
@dfn{STREAMS} drivers and modules in addition to user-space applications.
@cite{@value{PACKAGE_TITLE}} provides a range of @dfn{STREAMS} multiplexing
drivers, pseudo-device drivers, and pushable modules that complement the X.25
Packet Layer Protocol driver that provides the Network Layer Interface at it
upper layer.

@figuresized{nli_figc1,C-1,NLI Drivers and Modules,5.5in}

@figref{C-1} illustrates the @dfn{STREAMS} multiplexing drivers, pseudo-device
drivers, and pushable modules, and their organization.

@node NLI Multiplexing Driver
@section NLI Multiplexing Driver
@cindex NLI multiplexing driver

The NLI @dfn{STREAMS} multiplexing driver implements the @value{LONG} (@value{SHORT})
and provides the Network Layer Interface (NLI), Version 3, at it
upper multiplex.  Data links are linked beneath the driver at the lower
multiplex.  Linked Streams under @cite{@value{PACKAGE_TITLE}} conform to the
Data Link Provider Interface (DLPI),@footnote{``@cite{Open Group CAE
Specification: Data Link Provider Interface (DLPI) Specification, Revision
2.0.0, Draft 2, August 20, 1992, (Parsippany, New Jersey), UNIX International,
Inc., UNIX International Press}.'' Available from
@uref{http://www.opengroup.org/onlinepubs/,The Open Group} or
@uref{http://www.openss7.org/docs/dlpi.pdf,The OpenSS7 Project}.} however,
implemetnations based on SpiderX.25 might use some other interface at this
level.@footnote{For compatibility, the issue is moot.}

Each Stream on the upper multiplex of the NLI multiplexing driver represents
either a VC or a PVC.  Each Stream on the lower multiplex of the NLI
multiplexing driver represents a data link@footnote{``@cite{ISO/IEC 7776:1995,
Information technology -- Telecommunications information exchange between
systems -- High-level data link control procedures -- Description of the X.25
LAPB-compatible DTE data link procedures, Second Edition, July 1, 1995,
International Organization for Standardization.}''
Available from @uref{http://www.iso.org/,ISO}.}
or subnetwork@footnote{``@cite{ISO/IEC 8881:1989, Information Processing Systems
-- Data Communications -- User of the @value{LONG} in Local Area
Networks, 1989, ISO/IEC, International Organization for Standardization.}''
Available from @uref{http://www.iso.org/,ISO}.}
interface.@footnote{``@cite{ANSI/IEEE Standard 802.2-1998 [ISO/IEC
8802-2:1998], IEEE Standard for Information Technology -- Telecommunications and
Information Exchange Between Systems -- Local and Metropolitan Area Networks --
Specific Requirements -- Part 2: Logical Link Contorl, May 7, 1998, (New York),
ANSI/IEEE, IEEE Computer Society. [ISBN 1-55937-959-6]}  Available from
@uref{http://www.ieee.org/,The IEEE}.}

Many Spider-based implementations of X.25 will call this multiplexing driver
simply @file{/dev/x25}.  @cite{AIXlink/X.25} calls the driver
@file{/dev/x25pckt}.

The @dfn{STREAMS} @file{/dev/x25-plp} multiplexing pseudo-device driver is
illustrated in @figref{C-1}.

@node NLI Conversion Module
@section NLI Conversion Module
@cindex NLI conversion module

Many Spider-based implementations of X.25 will call this multiplexing driver
@file{s_nli3}.

The @dfn{STREAMS} @file{s_nli3} pushable module is illustrated in @figref{C-1}.

@node NPI Conversion Module
@section NPI Conversion Module
@cindex NPI conversion module

Many Spider-based implementations of X.25 will call this pushable module
@file{s_npi}.  @cite{AIXlink/X.25} calls the module @file{npi}.

The @dfn{STREAMS} @file{s_npi} and @file{npi} pushable modules are illustrated
in @figref{C-1}.

@node CONS Module
@section CONS Module
@cindex CONS module

The @dfn{STREAMS} @file{s_cons} pushable module is illustrated in @figref{C-1}.
@footnote{``@cite{Open Group CAE Specification: Network Provider Interface (NPI)
Specification, Revision 2.0.0, Draft 2, August 17, 1992, (Parisppany, New
Jersey), UNIX International, Inc., UNIX International Press}.'' Available from
@uref{http://www.openss7.org/docs/npi.pdf,The OpenSS7 Project}.}

@node XX25 Module
@section XX25 Module
@cindex XX25 module

The @dfn{STREAMS} @file{s_xx25} pushable module is illustrated in @figref{C-1}.

The XX25 specification@footnote{``@cite{X/Open CAE Specification: X.25
Programming Interface using XTI (XX25), No. c411, November 1995, (Berkshire, UK), X/Open,
Open Group Publication. [ISBN: 1-85912-136-5]}.''  Available from
@uref{http://www.opengroup.org/onlinepubs/,The Open Group}.}
@footnote{``@cite{Open Group CAE Specification: Transport Provider Interface
(TPI) Specification, Revision 2.0.0, Draft 2, 1999, (Berkshire, UK), Open Group,
Open Group Publication}.''  Available from 
@uref{http://www.opengroup.org/onlinepubs/,The Open Group} or
@uref{http://www.openss7.org/docs/tpi.pdf,The OpenSS7 Project}.}

@node IXE Multiplexing Driver
@section IXE Multiplexing Driver
@cindex IXE multiplexing driver

The @dfn{IXE} module provides Internet Protocol over X.25 Encapsulation (IXE) per
RFC 877 and RFC 1356.  The protocol module provides an @pval{DL_IPX25} MAC
type DLPI Stream on the upper multiplex and a @dfn{NLI} Stream (or possibly an
@dfn{NPI} Stream) on the lower multiplex.  Each lower multiplex Stream
represents an X.25 PVC or VC.  Each upper multiiplex Stream represents a
@pval{DL_IPX25} connectionless data link Stream.

The @dfn{STREAMS} @file{/dev/ixe} multiplexing driver is illustrated in
@figref{C-1}.

@node IP Multiplexing Driver
@section IP Multiplexing Driver
@cindex IP multiplexing driver

The @dfn{STREAMS} @file{/dev/ip} multiplexing pseudo-device driver is
illustrated in @figref{C-1}.

@node NLI Utilities
@appendix NLI Utilities

Most implementations of the NLI provides a number of utilities that are aimed
at providing three or four capabilities as follows:

@itemize
@item Adjusting the tunable parameters associated with X.25 subnetwork
attachments.
@item Administating mapping data for PVC and NUI.
@item Collecting and displaying statistics.
@item Monitoring traffic flow on specific VCs.
@end itemize

@menu
* nuimap::
* pvcmap::
* vcstat::
* x25diags::
* x25file::
* x25info::
* x25netd::
* x25route::
* x25stat::
* x25trace::
* x25tune::
@end menu

@multitable {@code{x25diags(8)}}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item @manref{nuimap(8)} @tab Adjust the Network User Identity mapping in the X.25 packet layer.
@item @manref{pvcmap(8)} @tab Adjust the Permanent Virtual Circuit (PVC) mapping in the X.25 packet layer.
@item @manref{vcstat(8)} @tab Collect virtual circuit (VC) statistics from the X.25 packet layer.
@item @manref{x25diags(8)} @tab Convert X.25 diagnostics to messages and visa versa.
@item @manref{x25file(8)} @tab -
@item @manref{x25info(8)} @tab -
@item @manref{x25netd(8)} @tab The X.25 network daemon.
@item @manref{x25route(8)} @tab -
@item @manref{x25stat(8)} @tab Collect subnetwork and global X.25 statistics from the X.25 packet layer.
@item @manref{x25trace(8)} @tab Provide tracing on X.25 subnetworks.
@item @manref{x25tune(8)} @tab Adjust the tunable parameters associated with a subnetwork to the X.25 packet layer.
@end multitable

@page
@node nuimap
@section nuimap - NUI mapping utility
@cindex NUI mapping utility

The Network User Identity (NUI) mapping utility is responsible for
administration of the mapping of NUI values to the facilities that are
associated with a specific user value.  The @command{nuimap} capability is
invoked when the call indicates that subcription to NUI override facility is
available and specifies a NUI for override.  In this case, the NUI mapping table
is consulted to look up the specified NUI and determine the facilities to
override.

This utility is also described in the manual pages @manref{nuimap(8)} and
@manref{nuimapconf(5)}.  In this manual, see also @ref{NUI Mapping File}.

@subheading Name

@command{nuimap} -- NUI mapping utility

@subheading Synopsis

@example
@group
nuimap [@var{options}] [-G] -n @var{netuid} [-d @var{device}]
nuimap [@var{options}]  -D  -n @var{netuid} [-d @var{device}]
nuimap [@var{options}]  -M  [-d @var{device}] [-f @var{filename}]
nuimap [@var{options}]  -P  [-d @var{device}] [-f @var{filename}]
nuimap [@var{options}]  -Z  [-d @var{device}]
nuimap @{-h|--help@}
nuimap @{-V|--version@}
nuimap @{-C|--copying@}
@end group
@end example

@subheading Description

@value{LONG} drivers supporting the NLI provide a mechanism for
mapping Network User Identities to a set of X.25 facilities that are subscribed
by the Network User Identity.  @command{nuimap} provides a mechanism whereby the
user can modify these mappings, or system configuration scripts can load or dump
mappings to or from a file.

Facilities that can be subscribed on a network user basis are:
@itemize
@item Extended format packets.
@item Local and remote packet sizes.
@item Local and remote window sizes.
@item Local and remote throughput classes.
@item Subscription to closed user groups.
@item Subscription to closed user groups with outgoing access.
@item Subscription to basic format closed user groups.
@item Subscription to extended format closed user groups.
@end itemize

The @command{nuimap} command can be used to retrieve or delete a specific
network user identity to facilities mapping (@option{-G} or @option{-D}
options, resp.); list or remove all network user identity to facilities mappings
(@option{-M} or @option{-Z} options); or load a set of network user identity to
facilities mappings from a file (@option{-P} option).

These capabilities of the @command{nuimap} command are supported by the
@pioc{N_nuimsg}, @pioc{N_nuiput}, @pioc{N_nuidel}, @pioc{N_nuiget},
@pioc{N_nuimget} and @pioc{N_nuireset} input-output controls, see @ref{NUI_MSG
Input-Output Controls}.

@xref{NUI Mapping File}, for more information on supported facilities.

@subheading Options

The @command{nuimap} command accepts the following options:

@subsubheading Command Options

The following command options are mutually exclusive (except for @option{-h},
@option{-V} and @option{-C} which never cause an error when specified with
another command option).  If no command option is given, @option{-G} is assumed.

@table @option

@item -G, --get
Get the network user identity to facilities mapping belonging to the NUI having
the same value as the argument to the @option{-n} option, @var{netuid}, for the
specified or default @var{device}.
The @option{-n} option and option argument, @var{netuid}, must be specified.

@item -D, --delete
Delete the network user identity to facilities mapping belonging to the NUI
having the same value as the argument to the @option{-n} option, @var{netuid},
for the specified or default @var{device}.
The @option{-n} option and option argument, @var{netuid}, must be specified.

@item -M, --list
List all the network user identity to facilities mappings for the specified or
default @var{device}, and print them to @file{stdout} (or @var{filename}, when
specified with the @option{-f} option), for the specified or default
@var{device}.

@item -P, --load
Load a set of network user identity to facilities mappings for the specified or
default @var{device}, taking input from
@file{@value{_configdir}/@-@value{PACKAGE}/@-nuimapconf} (or @var{filename},
when specified with the @option{-f} option), for the specified or default
@var{device}.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@item -Z, --reset
Reset all network user identity to facilities mappings for the specified or
default @var{device}.

@item -h, --help
When this option is encountered, usage information is printed to @file{stdout},
option processing stops, and the program exists successfully without taking any
further action.

@item -V, --version
When this option is encountered, version information is printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.

@item -C, --copying
When this option is encountered, copying permissions are printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.

@end table

@subsubheading Non-Command Options

The following non-command options cab be combined together and with any command
option.  Non-command options that are not necessary for the specified command
option do not generate an error by mere combination.

@table @option

@item -f, --file @var{filename}
Specifies the @var{filename} from which to read (@option{-P} option) or write
(@option{-M} option) configuration information.

This option and argument is optional.  When the @var{filename} is not given and
the @option{-P} option is specified, the values are read from
@file{@value{_configdir}/@-@value{PACKAGE}/@-nuimapconf};@footnote{Note that the
precise location of the @file{@value{_configdir}} directory varies depending
upon whether the build was on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based
system.} for the @option{-M} option, values are written to @file{stdout}.

If the @var{filename} is an absolute path (i.e. begins with @samp{/}), then
@var{filename} is assumed to be the exact path specified.  Otherwise, the file
required is assumed to be
@file{@value{_configdir}/@-@value{PACKAGE}/}@-@var{filename}.@footnote{Note that
the precise location of the @file{@value{_configdir}} directory varies depending
upon whether the build was on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based
system.}
@xref{NUI Mapping File}, for the format of the file.

@item -n, --nui @var{netuid}
Specifies the specific Network User Identity, @var{netnuid}, that identifies a
specific network user identity to faciltiies mapping to either be retrieved
(option @option{-G}) or deleted (option @option{-D}).  This option must be
provided when the @option{-G} or @option{-D} command options are specified.

@item -d, --device @var{devname}
Specifies the device, @var{devname},  to open when tuning.  When unspecified,
the default is @file{/dev/x25}.  See also @cite{Devices}, below.

@item --dryrun
Execute the command (@option{-G}, @option{-D}, @option{-M} or @option{-P}) as a
dry run.  When this option is specified with the @option{-D} or @option{-P}
option, the input is read and checked for validity, but the configuration is not
written to the device when specified with the @option{-G} or @option{-M} option,
information is read from the device, but configuration information is not
output.  The exit status and diagnostic output of the command still reflects the
success or failure of the command.

@item -q, --quiet
Suppresses normal output.  This is the same as @samp{--verbose=0}.

@item --debug [@var{level}]
Increase or specify the debug verbosity @var{level}.  The default debug
@var{level} is zero (0).  This option may be repeated.  Level zero (0)
corresponds to no debugging output.

@item -v, --verbose [@var{level}]
Increase or specify the output verbosity @var{level}.  The default output
@var{level} is one (1). This option may be repeated.  Level zero (0) corresponds
to no normal output.

@end table

@subheading Diagnostics

An exit status of zero (0) indicates that the command was successful; one (1)
indicates that an error occured and a diagnostic message is printed to
@file{stderr}; two (2) indicates that the option or argument syntax was in error
and a diagnostic message is printed to @file{stderr}.

The @option{--quiet} option suppresses the printing of normal output to
@file{stdout} and diagnostic messages to @file{stderr}.

@subheading File Format

For the input file format, see @ref{NUI Mapping File}.

@subheading Notices

On input, this implementation will handle fields that are separated by any
whitespace (any number of blanks, horzontal tabs, new lines, carriage returns,
vertical tabs, form feeds).  On output, newlines are generated after fields.

@subheading Devices

@ftable @file
@item /dev/streams/clone/x25
@itemx /dev/x25
The NPI device for X.25, @manref{x25(4)}. 
@end ftable

@subheading Files

@ftable @file

@item @value{_configdir}/@-@value{PACKAGE}/@-@var{filename}
The default directory location for configuration files used by this
command.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@item @value{_configdir}/@-@value{PACKAGE}/@-nuimapconf
The default configuration file from which to read network user identity to
facilities mappings for use with the @option{-P} option.

@end ftable

@subheading Bugs

@command{nuimap} has no known bugs.

@subheading See Also

@ref{NUI Mapping File}.

@subheading Compatibility

The @command{nuimap} command is compatible with @cite{Spider X.25}, and
implementations based on @cite{Spider X.25}, such as @cite{AIXlink/X.25},
@cite{HP-UX}, @cite{IRIS SX.25}, @cite{PT X.25}, @cite{RadiSys WAN}, @cite{SBE
X.25}, @cite{Solstice X.25}, and others, with the following portability
considerations:

@itemize

@item A version of this command is provided by @cite{@value{PACKAGE_TITLE}} for
compatibility with systems that require it.  Neither this command nor the
@manref{xnetd(8)} are recommended for configuration of the
@cite{@value{PACKAGE_TITLE}} subsystems.  Use the SNMP agent instead.

@item Options @option{-e}, @option{-n}, @option{-q}, @option{-v}, @option{-h},
@option{-V}, @option{-C}, and all long options, are specific to this
@cite{@value{PACKAGE_TITLE}} implementation of @command{nuimap} and will not be
used by portable command scripts.

@item No other implementation documents printing the output to a file when a
@var{filename} is specified with the @option{-G} command option.  This is an
enhancement of this implementation.

@item No other implementation documents the @option{-e}, @option{-n},
@option{-q}, @option{-v}, @option{-h}, @option{-V}, and @option{-C}, options.
They will not be used by portable command scripts.

@item Options @option{--help} and @option{--version} are provided for
compatibility with GNU coding standards (GNITS); @option{--copying}, OpenSS7
coding standards.

@end itemize

For additional compatibilty considerations, see @ref{NLI Compatibility and
Porting}.

@subheading Conformance

@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{PT X.25},
@cite{RadiSys WAN},
@cite{SBE X.25},
@cite{Solstice X.25},
documentation.  @xref{References}.

@subheading History

@command{nuimap} first appeared in @cite{Spider X.25}.


@page
@node pvcmap
@section pvcmap - PVC mapping utility
@cindex PVC mapping utility

The Permanent Virtual Circuit (PVC) mapping utility is responsible for
administration of the mapping of PVC logical channel identifiers to the
facilities that are associated with a specific channel that would normally be
negotiated on call setup.  These include: local and remote packet and window
sizes.

This utility is also described in the manual pages @manref{pvcmap(8)} and
@manref{pvcmapconf(5)}.  In this manual, see also @ref{PVC Mapping File}.

@subheading Name

@command{pvcmap} -- PVC mapping utility

@subheading Synopsis

@example
@group
nuimap [@var{options}]  -G  [-s @var{subnet}] [-l @var{lci}] [-d @var{device}]
nuimap [@var{options}]  -D  [-s @var{subnet}] [-l @var{lci}] [-d @var{device}]
nuimap [@var{options}] [-M] [-d @var{device}] [-f @var{filename}]
nuimap [@var{options}]  -P  [-d @var{device}] [-f @var{filename}]
nuimap [@var{options}]  -Z  [-d @var{device}]
nuimap @{-h|--help@}
nuimap @{-V|--version@}
nuimap @{-C|--copying@}
@end group
@end example

@subheading Description

@value{LONG} drivers upporting the NLI provide a mechanism for
attaching Permanent Virtual Circuits (PVC) for use by upper layer protocols.
@command{pvcmap} provides a mechanism whereby the administrator can modify the
local and remote packet and window sizes associated with PVC for each logical
channel and subnetwork.  For each PVC logical channel on each subnetwork, the
following is specified:
@itemize
@item Local maximum packet size.
@item Remote maximum packet size.
@item Local maximum window size.
@item Remote maximum window size.
@end itemize

The @command{pvcmap} command can be used to retrieve or delete the throughput
parameters specific to a logical channel within a subnetwork (@option{-G} or
@option{-D} options, resp.); list or remove all subnetwork and logical channel
mappings (@option{-M} or @option{-Z} options); or load a set of subnetwork and
logical channel mappings from a file (@option{-P} option).

The capabilities of the @command{pvcmap} command are supported by the
@pioc{N_putpvcmap} and @pioc{N_getpvcmap} intput-output controls,@footnote{See
@ref{N_putpvcmap}, and @ref{N_getpvcmap}.} and provide an excellent example of
their use.

@xref{PVC Mapping File}, for more information on supported facilities.

@subheading Options

The @command{pvcmap} command accepts the following options:

@subsubheading Command Options

The following command options are mutually exclusive (except for @option{-h},
@option{-V} and @option{-C} which never cause an error when specified with
another command option).  If no command option is given, @option{-G} is assumed.

@table @option

@item -G, --get
Get the subnetwork and logical channel mapping belonging to the @var{subnet}
having the same value as the argument to the @option{-s} option, and an
@var{lci} the same value as the argument to the @option{-l} option, when
provided, for the specified or default @var{device}.
The @option{-s} option and option argument, @var{subnet}, must be specified.

@item -D, --delete
Get the subnetwork and logical channel mapping belonging to the @var{subnet}
having the same value as the argument to the @option{-s} option, and an
@var{lci} the same value as the argument to the @option{-l} option, when
provided, for the specified or default @var{device}.
The @option{-s} option and option argument, @var{subnet}, must be specified.

@item -M, --list
List all the subnetwork and logical channel mappings for the specified or
default @var{device}, and print them to @file{stdout} (or @var{filename}, when
specified with the @option{-f} option), for the specified or default
@var{device}.

@item -P, --load
Load a set of subnetwork and logical channel PVC mappings for the specified or
default @var{device}, taking input from
@file{@value{_configdir}/@-@value{PACKAGE}/@-pvcmapconf} (or @var{filename},
when specified with the @option{-f} option), for the specified or default
@var{device}.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@item -Z, --reset
Reset all subnetwork and logical channel PVC mappings for the specified or
default @var{device}.

@item -h, --help
When this option is encountered, usage information is printed to @file{stdout},
option processing stops, and the program exists successfully without taking any
further action.

@item -V, --version
When this option is encountered, version information is printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.

@item -C, --copying
When this option is encountered, copying permissions are printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.

@end table

@subsubheading Non-Command Options

The following non-command options cab be combined together and with any command
option.  Non-command options that are not necessary for the specified command
option do not generate an error by mere combination.

@table @option

@item -f, --file @var{filename}
Specifies the @var{filename} from which to read (@option{-P} option) or write
(@option{-M} option) configuration information.

This option and argument is optional.  When the @var{filename} is not given and
the @option{-P} option is specified, the values are read from
@file{@value{_configdir}/@-@value{PACKAGE}/@-pvcmapconf};@footnote{Note that the
precise location of the @file{@value{_configdir}} directory varies depending
upon whether the build was on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based
system.} for the @option{-M} option, values are written to @file{stdout}.

If the @var{filename} is an absolute path (i.e. begins with @samp{/}), then
@var{filename} is assumed to be the exact path specified.  Otherwise, the file
required is assumed to be
@file{@value{_configdir}/@-@value{PACKAGE}/}@-@var{filename}.@footnote{Note that
the precise location of the @file{@value{_configdir}} directory varies depending
upon whether the build was on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based
system.}
@xref{PVC Mapping File}, for the format of the file.

@item -s, --subnet @var{subnet}
Specifies the subnetwork identifier, @var{subnet}, to which the PVC is attached.
@var{subnet} is normally an alphabetical character starting at @samp{A} for the
first subnetwork, @samp{B} for the second subnetwork, and so on.  When not
given, all subnetworks are assumed.

@item -l, --lci @var{lci}
Specifies the logical channel identifier @var{lci}, to which the PVC
corresponds.  @var{lci} is normally an interger value between 1 and 4096.  Zero
(0) is not permitted.  When not specified, any and all logical channels are
assumed.

@item -d, --device @var{devname}
Specifies the device, @var{devname},  to open when mapping.  When unspecified,
the default is @file{/dev/x25}.  See also @cite{Devices}, below.

@item -n, --dryrun
Execute the command (@option{-G}, @option{-D}, @option{-M} or @option{-P}) as a
dry run.  When this option is specified with the @option{-D} or @option{-P}
option, the input is read and checked for validity, but the configuration is not
written to the device when specified with the @option{-G} or @option{-M} option,
information is read from the device, but configuration information is not
output.  The exit status and diagnostic output of the command still reflects the
success or failure of the command.

@item -q, --quiet
Suppresses normal output.  This is the same as @samp{--verbose=0}.

@item --debug [@var{level}]
Increase or specify the debug verbosity @var{level}.  The default debug
@var{level} is zero (0).  This option may be repeated.  Level zero (0)
corresponds to no debugging output.

@item -v, --verbose [@var{level}]
Increase or specify the output verbosity @var{level}.  The default output
@var{level} is one (1). This option may be repeated.  Level zero (0) corresponds
to no normal output.

@end table

@subheading Diagnostics

An exit status of zero (0) indicates that the command was successful; one (1)
indicates that an error occured and a diagnostic message is printed to
@file{stderr}; two (2) indicates that the option or argument syntax was in error
and a diagnostic message is printed to @file{stderr}.

The @option{--quiet} option suppresses the printing of normal output to
@file{stdout} and diagnostic messages to @file{stderr}.

@subheading File Format

For the input file format, see @ref{PVC Mapping File}.

@subheading Notices

On input, this implementation will handle fields that are separated by any
whitespace (any number of blanks, horzontal tabs, new lines, carriage returns,
vertical tabs, form feeds).  On output, newlines are generated after fields.

@subheading Devices

@ftable @file
@item /dev/streams/clone/x25
@itemx /dev/x25
The NPI device for X.25, @manref{x25(4)}. 
@end ftable

@subheading Files

@ftable @file

@item @value{_configdir}/@-@value{PACKAGE}/@-@var{filename}
The default directory location for configuration files used by this
command.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@item @value{_configdir}/@-@value{PACKAGE}/@-pvcmapconf
The default configuration file from which to read for subnetwork and logical
channel PVC mappings for use with the @option{-P} option.

@end ftable

@subheading Bugs

@command{pvcmap} has no known bugs.

@subheading See Also

@ref{PVC Mapping File}.

@subheading Compatibility

The @command{nuimap} command is compatible with @cite{Spider X.25}, and
implementations based on @cite{Spider X.25}, such as @cite{AIXlink/X.25},
@cite{HP-UX}, @cite{IRIS SX.25}, @cite{PT X.25}, @cite{RadiSys WAN}, @cite{SBE
X.25}, @cite{Solstice X.25}, and others, with the following portability
considerations:

@itemize

@item A version of this command is provided by @cite{@value{PACKAGE_TITLE}} for
compatibility with systems that require it.  Neither this command nor the
@manref{xnetd(8)} are recommended for configuration of the
@cite{@value{PACKAGE_TITLE}} subsystems.  Use the SNMP agent instead.

@item Options @option{-e}, @option{-n}, @option{-q}, @option{-v}, @option{-h},
@option{-V}, @option{-C}, and all long options, are specific to this
@cite{@value{PACKAGE_TITLE}} implementation of @command{nuimap} and will not be
used by portable command scripts.

@item No other implementation documents printing the output to a file when a
@var{filename} is specified with the @option{-G} command option.  This is an
enhancement of this implementation.

@item No other implementation documents the @option{-e}, @option{-n},
@option{-q}, @option{-v}, @option{-h}, @option{-V}, and @option{-C}, options.
They will not be used by portable command scripts.

@item Options @option{--help} and @option{--version} are provided for
compatibility with GNU coding standards (GNITS); @option{--copying}, OpenSS7
coding standards.

@end itemize

For additional compatibilty considerations, see @ref{NLI Compatibility and
Porting}.

@subheading Conformance

@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{PT X.25},
@cite{RadiSys WAN},
@cite{SBE X.25},
@cite{Solstice X.25},
documentation.  @xref{References}.

@subheading History

@command{pvcmap} first appeared in @cite{Spider X.25}.


@page
@node vcstat
@section vcstat - VC statistics utility
@cindex VC statistics utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25diags
@section x25diags - X.25 diagnostics utility
@cindex X.25 diagnostics utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25file
@section x25file - X.25 file utility
@cindex X.25 file utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25info
@section x25info - X.25 information untility
@cindex X.25 information untility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25netd
@section x25netd - X.25 network daemon
@cindex X.25 network daemon

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25route
@section x25route - X.25 routing control
@cindex X.25 routing control

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25stat
@section x25stat - X.25 statistics utility
@cindex X.25 statistics utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25trace
@section x25trace - X.25 trace utility
@cindex X.25 trace utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@page
@node x25tune
@section x25tune - X.25 tuning utility
@cindex X.25 tuning utility

@subheading Name

@subheading Synopsis

@subheading Description

@subheading Options

@subheading Usage

@subheading Diagnostics

@subheading Notices

@subheading Bugs

@subheading See Also

@subheading Compatibility

@subheading Conformance

@subheading History


@node NLI File Formats
@appendix NLI File Formats

@menu
* LAPB Template File::
* LLC2 Template File::
* NUI Mapping File::
* PAD Entries File::
* X.25 Template File::
* X.25 Host Entries File::
* PVC Mapping File::
* XOS Template File::
* XOT Template File::
@end menu

@node LAPB Template File
@section LAPB Template File
@cindex LAPB template file

@subheading Name
@file{lapbtemplate} --- Link Access Protocol (Balanced) File Format

@subheading Description
The @file{lapbtemplate} describes the file format for input to the
@manref{lltune(8)} command for LAPB class subnetworks.  The file format
consists of a number of parameter values, one per line, formatted as described
below.  Each parameter value is described using its line number in the file, a
parameter name, and a description of the format of the value.  Only the value
appears in the file, each value on a line by itself, one value per line.

Each of the LAPB configuration parameters correspons to the member and values
of the @type{lapb_tune} structure, that is carried in a @type{lapb_tnioc}
structure by the @pioc{L_LAPBTUNE} input-output control.

These protocol parameters, and the default values that exist when tuning has
not been applied to a newly created LAPB subnetwork, correspond directly to the
protocol parameters and defaults in @cite{ISO/IEC 7776}, @cite{ITU-T Rec. X.25}
and @cite{X.75}.

@subheading Format
The LAPB template consists of 16 to 18 lines containing the following
configuration information:

@enumerate

@item @var{N2_VAL} is the maximum number of times that a protocol data unit
(PDU) is set following the expiry of the acknowlegement timer, the P-bit timer,
or the reject timer.  It also limits the number of times an RR with the P-bit
set is sent when remote busy is true and the busy timer expires.

@item @var{T1_VAL} is the time during which the LAPB expects to receive an
acknowledgement to an outstanding I-PDU or an expected response to a sent
UI-PDU.  The value is in units of 0.1 seconds (deciseconds).

@item @var{TPF_VAL} is the time during which the LAPB expectes to receive a
PDU with the F-bit set to 1 in response to a command with the P-bit set to 1.
The value should be less than the acknowledgement timer.  The value is in units
of 0.1 seconds (deciseconds).

@item @var{TREJ_VAL} is the time interval during which the LAPB expects to
receive a reply to a sent REJ DPU.  The value is in units of 0.1 seconds
(deciseconds).

@item @var{TBUSY_VAL} is the time interval during which the LAPB waits for an
indication of the clearance of a busy condition at the other LAPB.  The value
is in units of 0.1 seconds (deciseconds).

@item @var{IDLE_VAL} is the time interval during which the LAPB expects to
receive a PDU from the other LAPB.  If it expires then the P/F cycle is
intiated which may result in link disconnection.  The value is in units of 0.1
seconds (decicseconds).

@item @var{ACK_DELAY} is the maximum delay in 0.1 second units before
transmitting a delayed RR.  This must be considerably less that the
acknowledgement timer value, @var{T1_VAL}.

@item @var{NOTACK_MAX} is the maximuum number of unacknowledged receive I PDUs
before the RR acknowledging them all must be sent.

@item @var{LOC_WIND} is the number of unacknowledged I PDUs that may be sent.

@item @var{LOC_PROBE} is the position before the window is closed at which an
I PDU is sent with the P-bit set to solicit an acknowledgement from the
receiver.

@item @var{MAX_I_LEN} is the maximum isze of a LAPB I-frame.  LAPB requires
all incoming I-frames above a certain size to be rejected by a FRMR.  This
parameter specifies the maximum size.  It is constructured as the sum of the
maximum X.25 data size, the X.25 protocol length and the LAPB protocol length.

@item @var{IGN_UA_ERROR} define whether or not to ignore any UA frams
received, when the connection is in ERROR state.  The value is @samp{1} for
@var{true} and @samp{0} for @var{false}.  The defalt value is @var{false}.

@item @var{FRMR_FRMR_ERROR} defines whether or not to re-transmit a frame
reject if a frame reject is received, when the connection is in @psta{ERROR}
state.  The value is @samp{1} for @var{true} and @samp{0} for @var{false}.  The
default value is @var{false}.

@item @var{FRMR_INVRSP_ERROR} defines whether or not  to transmit a frame
reject if an invalid frame response is received, when the connection is in
@psta{ERROR} state.  The value is @samp{1} for @var{true} and @samp{0} for
@var{false}.  The default value is @var{false}.

@item @var{SFRAME_PBIT} defines whether or not to send a frame reject if an
S-frame is received without the P-bit set.  The value is @samp{1} for
@var{true}a nd @samp{0} for @var{false}.  The default value is @var{false}.

@item @var{NO_DM_ADM} defines whether or not to send a @psta{DM} on entry to
@psta{ADM} state after an N2 count expiry.  The value is @samp{1} for
@var{true} and @samp{0} for @var{false}.  The default value is @var{false}.

@end enumerate

The following two fields are optional extensions:

@enumerate 17

@item @var{IGN_DM_ERROR} defines whether or not to ignore DM frames received,
when the connection is in @psta{ERROR} state.  The value is @samp{1} for
@var{true} and @samp{0} for @var{false}.  The default value is false.

@item @var{SABM_IN_X32} defines the action to take when a SABM is received in
X.32 setup.  The value is @samp{1} for @var{true} and @samp{0} for @var{false}.
The default value is @var{false}.

@end enumerate

The last two fields (@samp{17} and @samp{18}) are enhancements.

@subheading Files
Files following this format are normally kept in the
@file{@value{_configdir}/@value{PACKAGE}/template/} directory.@footnote{Note
that this directory varies depending on whether the build was on a
@manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@subheading See Also
@itemize @bullet
@item @manref{lltune(8)}
@item @manref{lapb(4)}
@item @manref{x25netd(8)}
@end itemize

@subheading Compatibility
The @file{lapbtemplate} file format is compatible with @cite{Spider X.25}, and
implementations based on @cite{Spider X.25}, such as @cite{AIXlink/X.25},
@cite{HP-UX}, @cite{IRIS SX.25}, @cite{Solstice X.25}, @cite{PT X.25},
@cite{SBE X.25}, with the following compatibility considerations:

@itemize ---

@item Most implementations only define the first 16 lines.  This implementation
defines 18 lines, where the first 16 lines are compatible with other
implementations and the last additional two lines are optional.

@item @cite{PT X.25} documents the @var{SABM_IN_X32} LAPB template field but
not the @var{IGN_DM_ERROR} LAPB template field.  @cite{Solstice X.25} and
@cite{IRIS SX.25} do not document either the @var{IGN_DM_ERROR} nor
@var{SABM_IN_X32} LAPB template fields.

@end itemize

For additional compatiblity infromation see, @manref{lapb(4)}, and
@manref{STREAMS(9)}.

@subheading Conformance
@cite{AIXlink/X.25}, @cite{HP-UX}, @cite{IRIS SX.25}, @cite{Solstice X.25},
@cite{PT X.25}, @cite{SBE X.25}, documentation.

@subheading History
The @file{lapbtemplate} file format first appeared in @cite{Spider X.25}.

@page
@node LLC2 Template File
@section LLC2 Template File
@cindex LLC2 template file

@subheading Name
@file{llc2template} --- Logical Link Control Type 2 File Format

@subheading Description
The @file{llc2template} describes the file format for input to the
@manref{lltune(8)} command for LLC2 class subnetworks.  The file format
consists of a number of parameter values, one per line, formatted as described
below.  Each parameter value is described using its line number in the file, a
parameter name, and a description of the format of the value.  Only the value
appears in the file, each value on a line by itself, one value per line.

Each of the LLC2 configuration parameters corresponds to the member and values
of the @type{llc2_tune} structure, that is carried in a @type{llc2_tnioc}
structure by the @pioc{L_LLC2TUNE} input-output control.

These protocol parameters, and the default values that exist when tuning has
not been applied to a newly created LLC2 subnetwork, correspond directly to the
protocol parameters and defaults in @cite{ISO/IEC 8802-2:1998}.

@subheading Format
The LLC2 template consists of 14 lines containing the following configuration
information.

@enumerate

@item @var{N2_VAL}
is the maximum number of times that a Protocol Data Unit (PDU) is sent
following the expiry of the acknowledgement timer, the P-bit timer, or the
reject timer.  This parameter also limits the number of times an RR is sent
with the P-bit set when remote busy is true and the busy timer expires.

@item @var{T1_VAL}
is the time interval during which the LLC2 expects to receive an
acknowledgement to an outstanding I-PDU or an expected response to a sent
UI-PDU.  The value is in units of 0.1 seconds.

@item @var{TPF_VAL}
is the time during which the LLC2 expects to receive a PDU with the F-bit set
to 1 in response to a command with the P-bit set to 1.  The value should be
less than that specified for the akcnowledgement timer.  The value is in units
of 0.1 seconds.

@item @var{TREJ_VAL}
is the time interval during which the LLC2 expects to receive a reply to a sent
REJ PDU.  The value is in units of 0.1 seconds.

@item @var{TBUSY_VAL}
is the timer interval during which the LLC2 waits for an indication of the
clearance of busy condition at the other LLC2.  The value is in units of 0.1
seconds.

@item @var{TIDLE_VAL}
is the time interval during which the LLC2 expects to receive a PDU from the
other LLC2.  The value is in units of 0.1 seconds.

@item @var{ACK_DELAY}
is the RR delay time.  This is the time interval for which the LLC2 will
withhold acknowledgements of unacknowledged received I-PDUs.  The value is in
units of 0.1 seconds.

@item @var{NOTACK_MAX}
is the maximum number of unacknowledged received I-frames.

@item @var{TX_WINDOW}
is the transmit window (if no XID received).

@item @var{TX_PROBE}
is the position before the window is closed at which an I-PDU is sent with the
P-bit set to solicit an acknowledgement from the receiver.

@item @var{MAX_I_LEN}
is the maximum size of an LLC2 I-frame.  LLC2 requires all incoming I-frames
above a certain size to be rejected by a FRMR.  This parameter specifies the
maximum size of data that may bereceived starint from the LLC2 protocol header.

In an X.25 network, it is constructed as (maximum X.25 data length + X.25
protool header length + LLC2 protocol header length).  In an SNA network, it
is constructed as (maximum SNA data length + SNA request header length + SNA
transmission header length + LLC2 protocol header length).

@item @var{XID_WINDOW}
is the XID window size (receive window), when the remote window size is unknown
or zero.

@item @var{XID_NDUP}
is the duplicate MAC XID count (0 means no test).

@item @var{XID_TDUP}
is the duplicate MAC XID time.  The value is in units of 0.1 seconds.

@end enumerate

@subheading Files
Files following this format are normally kept in the
@file{@value{_configdir}/@value{PACKAGE}/template/} directory.@footnote{Note
that this directory varies depending on whether the build was on a
@manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@subheading See Also
@itemize @bullet
@item @manref{lltune(8)}
@item @manref{llc2(4)}
@item @manref{x25netd(8)}
@end itemize

@subheading Compatibility
The @file{llc2template} file format is compatible with @cite{Spider X.25},
and implementations based on @cite{Spider X.25}, such as
@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{Solstice X.25},
@cite{PT X.25},
@cite{SBE X.25},
with the following compatibility considerations:
@itemize ---
@item @cite{PT X.25} does not support LLC2.  @cite{@value{PACKAGE_TITLE}}
supports LLC2 in support of XOL and porting applications from
@cite{AIXlink/X.25}, @cite{Solstice X.25}, @cite{HP-UX}, @cite{IRIS
SX.25}, @cite{VxWorks}, @cite{pSOS}, @cite{SpiderX}, and many other
implementations based on @cite{SpiderX.25} support LLC2.  Portable X.25 and XOL
applications will use @cite{@value{PACKAGE_TITLE}} instead of @cite{PT X.25}.
@end itemize
For additional compatibiltiy information see, @manref{llc2(4)}, and
@manref{STREAMS(9)}.

@subheading Conformance
@cite{AIXlink/X.25}, @cite{HP-UX}, @cite{IRIS SX.25}, @cite{Solstice X.25},
@cite{PT X.25}, @cite{SBE X.25}, documentation.

@subheading History
The @file{llc2template} file format first appeared in @cite{Spider X.25}.

@page
@node NUI Mapping File
@section NUI Mapping File
@cindex NUI mapping file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History

@page
@node PAD Entries File
@section PAD Entries File
@cindex PAD entries file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History

@page
@node X.25 Template File
@section X.25 Template File
@cindex X.25 template file

@subheading Name

@file{x25template} --- X.25 Subnetwork File Format

@subheading Description

The @file{x25template} describes the file format for input to the
@manref{x25tune(8)} command for X.25 subnetworks.  The file format consists of
a number of parameter values, one per line, formated as described below.  Each
parameter value is described using its line number in the file, a parameter
name, and a description of the format of the value.  Only the value appears in
the file, each value on a line by itself, one value per line.

Each of the X.25 configuration parameters corresponds to the member and values
of the @type{wlcfg} structure by the @pioc{N_snconfig} and @pioc{N_snread}
input-output controls.
.
These protocol parameters, and the default values that exist when tuning has
not been applied to a newly created X.25 subnetwork, correspond directly to the
protocol parameters and defaults in @cite{ISO/IEC 8208} , @cite{ITU-T Rec.
X.25} and @cite{X.75}.

@subheading Format

The X.25 subnetwork template consists of 76 or more lines containing the
following configuration information:

@enumerate

@item
@var{NET_MODE}
determines the various characteristics of the network protocol.  Valid values
are integers, as specified below, that refers to the networks listed:

@multitable {25}{m}{X25_CIRCUIT}{25}{m}{X25_CIRCUIT}{25}{m}{X25_CIRCUIT}
@item 1 @tab - @tab X25_LLC @tab 10 @tab - @tab TRANSPAC @tab 19 @tab - @tab DCS
@item 2 @tab - @tab X25_88  @tab 11 @tab - @tab TYMNET   @tab 20 @tab - @tab TELEPAC
@item 3 @tab - @tab X25_84  @tab 12 @tab - @tab DATEX_P  @tab 21 @tab - @tab F_DATAPAC
@item 4 @tab - @tab X25_80  @tab 13 @tab - @tab DDX_P    @tab 22 @tab - @tab FINPAC
@item 5 @tab - @tab PSS     @tab 14 @tab - @tab VENUS_P  @tab 23 @tab - @tab PACNET
@item 6 @tab - @tab AUSTPAC @tab 15 @tab - @tab ACCUNET  @tab 24 @tab - @tab LUXPAC
@item 7 @tab - @tab DATAPAC @tab 16 @tab - @tab ITAPAC   @tab 25 @tab - @tab X25_CIRCUIT
@item 8 @tab - @tab DDN     @tab 17 @tab - @tab DATAPAK
@item 9 @tab - @tab TELENET @tab 18 @tab - @tab DATANET
@end multitable

@item
@var{X25_VERSION}
determines the version of the X.25 protocol that is being used over the
network.  Valid values are integers, as specified below.  Note that a
@var{NET_MODE} of @var{X25_LLC} will override any value in this field to 1984
(or later).

@multitable {2004}{m}{indicates 2004}
@item 80 @tab - @tab indicates 1980
@item 84 @tab - @tab indicates 1984
@item 88 @tab - @tab indicates 1988
@item 1980 @tab - @tab indicates 1980
@item 1984 @tab - @tab indicates 1984
@item 1988 @tab - @tab indicates 1988
@item 1992 @tab - @tab indicates 1992
@item 1996 @tab - @tab indicates 1996
@item 2000 @tab - @tab indicates 2000
@item 2004 @tab - @tab indicates 2004
@item @i{YYYY} @tab - @tab indicates @i{YYYY}
@end multitable

@item
@var{L3PLPMODE}
indicates the DTE/DCE nature of the link.  Valid value are integers, as
specified below.  Note that DXE operation is per ISO
8208.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@multitable {2}{m}{indicates DXE}
@item 0 @tab - @tab indicates DCE
@item 1 @tab - @tab indicates DTE
@item 2 @tab - @tab indicates DXE
@end multitable

@item
@var{LPC}
is the lowest LCI for Permanent Virtual Circuits (PVC).  @var{LPC} and
@var{HPC} define the range of LCI that are assigned to PVC.  This range cannot
overlap with the other defined ranges.  Setting this value to zero and
@var{HPC} to zero specifies that there are no PVC.
 Valid values contain 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{HPC}
is the highest LCI for PVC.  @var{LPC} and @var{HPC} define the range of LCI
that are assigned to PVC.  This range cannot overlap with the other defined
ranges.  @var{LPC} and @var{HPC} set to zero means no PVC.
Valid values contain 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{LIC}
is the lowest incoming (IC) VC.
@var{LIC} and @var{HIC} define the range of LCI that are assigned to incoming call circuits.
This range cannot overlap with the other defined ranges.
@var{LIC} and @var{HIC} zero means no IC VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{HIC}
is the highest IC VC.
@var{LIC} and @var{HIC} define the range of LCI that are assigned to incoming call circuits.
This range cannot overlap.
@var{LIC} and @var{HIC} zero means no IC VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{LTC}
is the lowest two-way (TW) VC.
@var{LTC} and @var{HTC} define the LCI that are assigned to two-way call circuits.
This range cannot overlap.
@var{LTC} and @var{HTC} zero means no TW VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{HTC}
is the highest TW VC.
@var{LTC} and @var{HTC} define the LCI that are assigned to two-way call circuits.
This range cannot overlap.
@var{LTC} and @var{HTC} zero means no TW VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.
j
@item
@var{LOC}
is the lowest outgoing (OG) VC.
@var{LOC} and @var{HOC} define the range assigned to outgoing call circuits.
This range cannot overlap.
@var{LOC} and @var{HOC} zero means no OG VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.

@item
@var{HOC}
is the highest OG VC.
@var{LOC} and @var{HOC} define the range assigned to outgoing call circuits.
This range cannot overlap.
@var{LOC} and @var{HOC} zero means no OG VC.
Use 3 hexadecimal digits @samp{000} through @samp{FFF}.
Leading zeros are optional.
j
@item
@var{THISGFI}
indicates which Modulo operates on the network.  It can have one of three
integer values.

@multitable {2147483648}{m}{Modulo 2147483648}{31 bits}
@item 8 @tab - @tab Modulo 8 @tab 3 bits
@item 128 @tab - @tab Modulo 128 @tab 7 bits
@item 32768 @tab - @tab Modulo 32768 @tab 15 bits
@item 2147483648 @tab - @tab Modulo 2147483648 @tab 31 bits
@end multitable

@item
@var{LOCMAXPKTSIZE}
is the maximum acceptable packet size for sent packets.
The value is the logarithm, base two, of the packet size.  Valid values are in
the range from 7 to 12, signifying a size of 128 to 4096 in powers of two.
The default value is 7 (or 128 octets).
The local maximum packet size and remote maximum packet size should be the
same.
The value should be less than the maximum LAPB I-frame size, N2, see
@manref{lltune(8)}.

@item
@var{REMMAXPKTSIZE}
is the maximum acceptable packet size for received packets.
The value is the logarithm, base two, of the packet size.  Valid values are in
the range from 7 to 12, signifying a size of 128 to 4096 in powers of two.
The default value is 7 (or 128 octets).
The local maximum packet size and remote maximum packet size should be the
same.
The value should be less than the maximum LAPB I-frame size, N2, see
@manref{lltune(8)}.

@item
@var{LOCDEFPKTSIZE}
is the default packet size for sent packets.
The value is the logarithm, base two, of the packet size.  Valid values are in
the range from 7 to 12, signifying a size of 128 to 4096 in powers of two.
The local default packet size and remote maximum packet size should be the
same.
The default value is 7 (or 128 octets).
When specified as 7 (128 octets), negotiation of the non-standard default
packet size facility will neither be initiated nor rejected.

@item
@var{REMDEFPKTSIZE}
is the default packet size for received packets.
The value is the logarithm, base two, of the packet size.  Valid values are in
the range from 7 to 12, signifying a size of 128 to 4096 in powers of two.
The local default packet size and remote maximum packet size should be the
same.
The default value is 7 (or 128 octets).
When specified as 7 (128 octets), negotiation of the non-standard default
packet size facility will neither be initiated nor rejected.

@item
@var{LOCMAXWSIZE}
The value must be greater than one and less than the modulus value.
The default value is 2 for Modulo 8 or Modulo 128; and 128 for Modulo 32768.

@item
@var{REMMAXWSIZE}
The value must be greater than one and less than the modulus value.
The default value is 2 for Modulo 8 or Modulo 128; and 128 for Modulo 32768.

@item
@var{LOCDEFWSIZE}
The value must be greater than one and less than the modulus value.
The default value is 2 for Modulo 8 or Modulo 128; and 128 for Modulo 32768.
When specified as 2 for Modulo 8 or Modulo 128, or 128 for Modulo 32768, the
non-standard default window size facility will neither be initiated nor
rejected.

@item
@var{REMDEFWSIZE}
The value must be greater than one and less than the modulus value.
The default value is 2 for Modulo 8 or Modulo 128; and 128 for Modulo 32768.
When specified as 2 for Modulo 8 or Modulo 128, or 128 for Modulo 32768, the
non-standard default window size facility will neither be initiated nor
rejected.

@item
@var{MAXNSDULEN}

@item
@var{ACKDELAY}

@item
@var{T20VALUE}
(Restart Request Response Timer)
is the time period that the DTE will await a restart confirmation or restart
indication following issuing a request request.
The timeout value should not be less than 180 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

@var{T10VALUE}
(Restart Indication Response Timer)
is the equivalient timer for the DCE, and defines the time period that the DCE
will wait for a restart confirmation or restart request after having issued a
restart indication.
The timeout value is a minimum of 60 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
60 seconds is specified as 600 (deciseconds).

@item
@var{T21VALUE}
(Call Request Response Timer)
is the time period that the DTE will await a call connected or clear
indication having issued a call request.
The timeout value should not be less than 200 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
200 seconds is specified as 2000 (deciseconds).

@var{T11VALUE}
(Incoming Call Response Timer)
is the equivalent timer for the DCE, and defines the time period that the DCE
will wait for a call accepted, clear request or call request after having
issued an incoming call.  The timeout value is a minimum of 180 seconds.
The timeout value is a minimum of 60 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

@item
@var{T22VALUE}
(Reset Request Response Timer)
is the time period that the DTE will await a reset confirmation or reset
indication having issued a reset request.
The timeout value should not be less than 180 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

@var{T12VALUE}
(Reset Indication Response Timer)
is the equivalent timer for the DCE, and defines the time period that the DCE
will wait for a reset confirmation or request request after having issued a
reset indication.  The timeout value is a minimum of 60 seconds.
The timeout value is a minimum of 60 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
60 seconds is specified as 600 (deciseconds).

@item
@var{T23VALUE}
(Clear Request Response Timer)
is the time period that the DTE will await a clear confirmation or clear
indication having issued a clear request.
The timeout value should not be less than 180 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

@var{T13VALUE}
(Clear Indication Response Timer)
is the equivalent timer for the DCE, and defines the time period that the DCE
will wait for a clear confirmation or clear request following issuing a clear
indication.
The timeout value is a minimum of 60 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
60 seconds is specified as 600 (deciseconds).

@item
@var{TVALUE}

@item
@var{T25VALUE}
(Window Rotation Timer)
is the time period that the DTE will await acknowledgement of all outstanding
data packets having trasnmitted the last available data packet or the window
is rotated.
The timeout value should not be less than 200 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
200 seconds is specified as 2000 (deciseconds).

Note that this T25 timer is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 11.2.1.} is used.

@item
@var{T26VALUE}
(Interrupt Response Timer)
is the time period that the DTE will await an interrupt confirmation having
issued an interrupt.
The timeout value should not be less than 180 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

@item
@var{IDLEVALUE}

@item
@var{CONNECTVALUE}

@item
@var{R20VALUE}
(Restart Request Retransmission Count) is the number of times that a restart
request will be re-issued, and T20 restarted, upon expiry of timer T20.
This value has a default of 1 and a minimum of 1.

@item
@var{R22VALUE}
(Reset Request Retransmission Count) is the number of times that a reset
request will be re-issued, and T22 restarted, upon expiry of timer T22.
This value has a default of 1 and a minimum of 1.

@item
@var{R23VALUE}
(Clear Request Retransmission Count) is the number of times that a clear
request will be re-issued, and T23 retstarted, upon expiry of timer T23.
This value has a default of 1 and a minimum of 1.

@item
@var{LOCALDELAY}

@item
@var{ACCESSDELAY}

@item
@var{LOCMAXTHCLASS}
is the local maximum throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{REMMAXTHCLASS}
is the remote maximum throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{LOCDEFTHCLASS}
is the local default throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{REMDEFTHCLASS}
is the remote default throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{LOCMINTHCLASS}
is the local minimum throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{REMMINTHCLASS}
is the remote minimum throughput class.
The value is an integer number from 3 to 44.

Basic ISO 8208 throughput classes can have a value from 3 to 16, corresponding
to throughputs between 75 and 192,000 bits/s, listed in Table 20a of ISO/IEC
8208:2000, or Extended ISO 8208 throughput classes can have a value from 3
through 44, corresponding to throughputs between 75 and 2,048,000 bits/s,
listed in Table 20b of ISO/EIC 8208:2000.@footnote{@xref{ISO8208,,ISO/IEC 8208}.}

@item
@var{SUB_CUG}
(Closed User Group)
is the index to the closed user group selected for the virtual
call in the form of two to four decimal digits.  Indexes to the close user
group at different DXE interfaces may be different.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_PREF}
(Preferential Closed User Group).  When the DTE belongs to more than one
closed user group, a preferential closed user group must be specified.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_CUGOA}
(Closed User Group with Outgoing Access)
is the index to the closed user group selected for the virtual call in the
form of two to four decimal digits.  Indexes to the close user group at
different DXE interfaces may be different.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_CUGIA}
(Closed User Group with Incoming Access)
is the index to the closed user group selected for the virtual call in the
form of two to four decimal digits.  Indexes to the close user group at
different DXE interfaces may be different.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{CUG_FORMAT}
(Number of Closed User Groups Subscribed) defines the maximum number of closed
user groups to which the DTE is subscribed.  The value is in the range 0 to
100 for basic and in the range 101 to 10000 for extended.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_CUG_IN}
(Closed User Group Incoming Calls Barred) is a user option that bars incoming
calls containing the closed user group facility.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_EXTENDED}
(Extended Call Packets)
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_EXTENDED}
(Extended Call Packets Barred) is a user option that bars incoming calls
containing flow control negotiation facilities.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_FSELECT}
(Fast Select Acceptance) is an optional user facility agreed for a period of
time.  This user facility, if subscribed to, authorizes the DCE to transmit to
the DTE incoming calls that request the fast select facility.  In the absence
of this facility, the DCE will not transmit to the DTE incoming calls that
request the fast select facility.  This parameter defines whether the DTE
accepts calls with a fast select facility requesting no restriction on
response.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_FSRRESP}
(Fast Select Acceptance) is an optional user facility agreed for a period of
time.  This user facility, if subscribed to, authorizes the DCE to transmit to
the DTE incoming calls that request the fast select facility.  In the absence
of this facility, the DCE will not transmit to the DTE incoming calls that
request the fast select facility.  This parameter defines whether the DTE
accepts calls with a fast select facility requesting restriction on
response.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_REVCHARGE}
(Reverse Charging Acceptance) is an optional user facility agree for a period
of time for virtual calls.  This user facility, if subscribed to, authorizes
the DCE to transmit to the DTE incoming calls that request the reverse
charging facility.  In the absence of this facility, the DCE will not transmit
to the DTE incoming calls that request the reverse charging facility.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_LOC_CHG_PREV}
(Local Charging Prevention)
is an optional user faciltiy agreed for a period of time for virtual calls.
This user facility, if subscribed to, authorizes the DCE to prevent the
establishment of virtual calls that the suscriber must pay for by: a) not
transmitting to the DTE incoming calls that request the reverse charging
facility; and, b) ensuring that the charges are made to another party whether
a call is requested by the DTE.  When the party to be changed has not been
established for a call request, the DCE that receives the call request packet
will apply reverse charging to this call.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_INCALL}
(Incoming Calls Barred) determines whether the optional user facility is
agreed for a period of time.  This facility applies to all logical channels
used at the DTE/DCE interface for virtual calls.  This user facility, if
subscribed to, prevents incoming virtual calls from being presented to the
DTE.  The DTE may originate outgoing virtual calls.  Logical chanels used for
virtual calls retain their full duplex capability.  Some administratoins may
provide a capability that allows a virtual call to be presented to the DTE
only in cases where the called DTE address is the address of the calling DTE.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_OUTCALL}
(Outgoing Calls Barred) determines whether the optional user facilty is agreed
for a period of time.  This facility applies to all logical channels used at
the DTE/DCE interface for virtual calls.  This user facility, if subscribed
to, prevents the DCE from accepting outgoing virtual calls from the DTE.  The
DTE may receive incoming virtual calls.  Logical channels used for virtual
calls retain their full duplex capability.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_TOA_NPI_FMT}
(TOA/NPI Address) is an optional user facility agreed for a period of time for
virtual calls.  When this facility is subscribed to, the DCE and DTE shall
transmit call set-up and clearing packets only using the TOA/NPI address
format.  In this case, addresses in facilities are also in TOA/NPI format.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_TOA_NPI_FMT}
(TOA/NPI Address Incoming Calls Barred) is a user option that bars incoming
calls containing TOA/NPI addresses.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{SUB_NUI_OVERRIDE}
(NUI Override) is an optional user facility agreed for a period of time for
virtual calls.  When this facility is subscribed to, one or more network user
identifiers are also agreed for a period of time.  Associated with each
network user identifier is a set of subscription-time optional user
facilities.  When one of these network user identifiers is provdied in a call
request packet by means of the NUI selection facility, the set of
subscription-time optional user facilities associated with it overrides the
facilities that apply to the interface.  This override does not apply to other
existing calls or subsequent calls on the interface.  It remains in effect for
the duration of the particular call to which it applies.
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{ACC_NODIAG}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{USE_DIAG}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{CCITT_CLEAR_LEN}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_DIAG}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{DISC_NS_DIAG}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{ACC_HEX_ADD}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{BAR_NONPRIV_LISTEN}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{INTL_ADDR_REGION}

@item
@var{INTL_PRIORITISED}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{DNIC}
The value is 4 hexadecimal digits.

@item
@var{PRTY_ENCODE_CONTROL}
The value is an integer decimal number.

@item
@var{PRTY_PKT_FORCED_VAL}
The value is an integer decimal number.

@item
@var{SRC_ADDR_CONTROL}
The value is an integer decimal number.

@item
@var{DBIT_ACCEPT_IND}

@multitable {0}{m}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0 @tab - @tab leave the D-bit set and pass the packet on,
@item 1 @tab - @tab zero the D-bit and pass the packet on, and,
@item 2 @tab - @tab reset the call.
@end multitable

@item
@var{DBIT_ACCEPT_OUT}

@multitable {0}{m}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0 @tab - @tab leave the D-bit set and pass the packet on,
@item 1 @tab - @tab zero the D-bit and pass the packet on, and,
@item 2 @tab - @tab reset the call.
@end multitable

@item
@var{DBIT_DATA_IN}

@multitable {0}{m}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0 @tab - @tab leave the D-bit set and pass the packet on,
@item 1 @tab - @tab zero the D-bit and pass the packet on, and,
@item 2 @tab - @tab reset the call.
@end multitable

@item
@var{DBIT_DATA_OUT}
defines the action to taken when the local user sends a data packet with the
D-bit set, but the remote party has not indicated D-bit support.  It can have
one of the following values:

@multitable {0}{m}{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}
@item 0 @tab - @tab leave the D-bit set and pass the packet on,
@item 1 @tab - @tab zero the D-bit and pass the packet on, and,
@item 2 @tab - @tab reset the call.
@end multitable

@end enumerate

The following are optional extension parameters:

@enumerate 77

@item
@var{THCLASS_NEG_TO_DEF}
The value is @samp{Y} for use and @samp{N} for non-use.

@item
@var{THCLASS_TYPE}
The value is an integer decimal number.

@item
@var{TH_WMAP}
The value is 16 decimal numbers, 0 to 255, separated by @samp{.}.

@item
@var{TH_PMAP}
The value is 16 decimal numbers, 0 to 255, separated by @samp{.}.

@end enumerate

Extensions parameters can be enabled using the @option{-e} flag to
@manref{x25tune(8)}, and specifying additional lines in the template.
@cite{@value{PACKAGE_TITLE}} defines extension parameters primarily to support
facilities of ISO/IEC 8208:2000@footnote{@xref{ISO8208,,ISO/IEC 8208}.} not provided for
according to the documentation of other, older implementations.

The following parameters, therefore, are the extensions specific to the
@cite{@value{PACKAGE_TITLE}} implementation:

@enumerate 81

@item
@var{T24VALUE}
(Window Status Transmission Timer)
is the time period that the DTE will wait without sending a window status
packet (a packet with a P(R): RR, RNR, DATA or REJECT).
The timeout value should not be less than 180 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
180 seconds is specified as 1800 (deciseconds).

Note that this T24 timer is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 11.2.2.} is used.

@item
@var{T27VALUE}
(Reject Response Timer)
is the time period that the DTE will await a data retransmission after
issuing a reject.
The timeout value should not be less than 60 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
60 seconds is specified as 600 (deciseconds).

Note that this T27 timer is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 13.4.} is used.

@item
@var{T28VALUE}
(Registration Request Response Timer)
is the time period that the DTE will await a registration confirmation or
diagnostic packet having issued a registration request.
The timeout value should not be less than 300 seconds.
The value is in integral units of deciseconds (0.1 seconds), so an interval of
300 seconds is specified as 3000 (deciseconds).

Note that this T28 timer is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 13.1.} is used.

@item
@var{R25VALUE}
(Data Packet Retransmission Count) is the number of times that a data packet
will be retransmitted, and T25 restarted, upon expiry of T25.
This value has a default of 0.
A value of zero (0) conveys that no retransmission will be performed.

Note that R25 is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 11.2.1.} is used.

@item
@var{R27VALUE}
(Reject Retransmission Count) is the number of times that a reject is
reissued, and T27 restarted, upon expiry of T27.
This value has a default of 0.
A value of zero (0) conveys that no reissuing will be performed.

Note that R27 is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 13.4.} is used.

@item
@var{R28VALUE}
(Registration Request Retransmission Count) is the number of times a
registration request will be reissued, and T28 restarted, upon expiry of T28.
This value has a default of 1.
A value of zero (0) conveys that no reissuing will be performed.

Note that R28 is only needed if the associated
procedure@footnote{@xref{ISO8208,,ISO/IEC 8208}, Section 13.1.} is used.

@end enumerate

@subheading Files

Files following this format are normally kept in the
@file{@value{_configdir}/@value{PACKAGE}/template/} directory.@footnote{Note
that this directory varies depending on whether the build was on a
@manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@subheading See Also

@itemize @bullet
@item @manref{x25tune(8)}
@item @manref{x25(4)}
@item @manref{xnetd(8)}
@end itemize

@subheading Compatibility

The @file{x25template} file format is compatible with @cite{Spider X.25},
and implementations based on @cite{Spider X.25}, such as
@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{Solstice X.25},
@cite{PT X.25},
@cite{SBE X.25},
with the following compatibility considerations:

@itemize ---

@item
@cite{@value{PACKAGE_TITLE}}
fairly much ignores the setting of the
@var{NET_MODE} and @var{X25_VERSION}
parameters.
The
@cite{@value{PACKAGE_TITLE}}
implementation of X.25 is based on ISO/IEC 8208:2000 (Edition 4),
@footnote{@xref{ISO8208,,ISO/IEC 8208}.}
which is compatible with ITU-T Recommendation X.25 of 1996,@footnote{X25,,X.25}
(the lastest current release of the standard) and is backward compatible with
ISO/IEC 8208 editions 1, 2 and 3; as well as ITU-T Recommendation X.25 for
1993, 1988, 1984 and 1980.

@item
No other implementation documents support for Modulo 32768.
@cite{@value{PACKAGE_TITLE}}
supports Modulo 32768 per ISO/IEC 8208,@footnote{@xref{ISO8208,,ISO/IEC 8208}.}
X.25@footnote{@xref{X.25,,ITU-T Recommendation X.25}.}
and X.75.@footnote{@xref{X.75,,ITU-T Recommendation X.75}.}

@item
No other implementation documents support for a true T24 timer.
@cite{@value{PACKAGE_TITLE}}
supports this as an extension (line 81).  If this line is not present,
the default (180 seconds) will be assumed.

@item
No other implementation documents support for the retransmission of reject
messages and the associated @var{T27} and @var{R27} parameter values.
@cite{@value{PACKAGE_TITLE}}
supports these as extensions (line 82 and line 85).  If these lines are not
present, defaults (60 seconds and 0 retransmission) will be assumed.

@item
Most implementations do not document support for the On-Line Registration
facilities, and the associated @var{T28} and @var{R28} parameter values.
@cite{@value{PACKAGE_TITLE}}
supports these as extensions (line 83 and line 86).  If these lines are not
present, defaults (300 seconds and 1 retransmission) will be assumed.

@item
All implementations document support for a @var{T25} timer, but no other
implementation documents support the @var{R25} parameter value.
@cite{@value{PACKAGE_TITLE}}
supports this as an extension (line 84).  If this line is not present,
the default (zero (0) retransmissions) will be assumed.

@item
No implementations documents support throughput classes above 48,000 bits per
second (index 3 to 12).
@cite{@value{PACKAGE_TITLE}}
support basic throughput classes to 192,000 bits per second (index 3 to 16),
and extended throughput classes up to 2,048,000 bits per second (index 17 to 44).
@end itemize
For additional compatibiltiy information see, @manref{x25tune(8)},
@manref{x25(4)}, @manref{x25netd(8)}, and @manref{STREAMS(9)}.

@subheading Conformance

@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{PT X.25},
@cite{RadiSys WAN},
@cite{SBE X.25},
@cite{Solstice X.25},
documentation.  @xref{References}.

@subheading History
The @file{x25template} file format first appeared in @cite{Spider X.25}.

@page
@node X.25 Host Entries File
@section X.25 Host Entries File
@cindex X.25 host entries file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History

@page
@node PVC Mapping File
@section PVC Mapping File
@cindex PVC mapping file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History

@page
@node XOS Template File
@section XOS Template File
@cindex XOS template file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History

@page
@node XOT Template File
@section XOT Template File
@cindex XOT template file

@subheading Name
@subheading Description
@subheading Format
@subheading Files
@subheading See Also
@subheading Compatibility
@subheading History


@node NLI Compatibility and Porting
@appendix NLI Compatibility and Porting

@menu
* Compatibility with AIXlink/X.25::
* Compatibility with HP X.25/9000::
* Compatibility with IRIS SX.25::
* Compatibility with PT X.25::
* Compatibility with SBE X.25::
* Compatibility with Solstice X.25::
@end menu

It should be noted that the Network Layer Interface (NLI) is not, by any
stretch of the imagination, a current application programming interface.  It
is, however, traditional on many @cite{UNIX} systems.  This inteface is
provided by @cite{@value{PACKAGE_TITLE}} solely for compatibility with
applications, drivers and modules developed to operate on implementations based
on @cite{Spider X.25} and is intended to ease the porting of legacy
applications to @cite{Linux}.  New projects must use the standard @cite{X.25}
@cite{NPI}@footnote{@xref{NPI}.} or @cite{XX25}@footnote{@xref{XX25}.}
intefaces, with the preference being for the latter which is a @cite{Open
Group} standard.@footnote{The @i{Network Provider Interface (NPI)} is not an
@cite{Open Group} standard, but is only a @cite{UNIX International} published
@i{ipso facto} standard.}

The following discussion,

@format
@smallexample
Newsgroups: comp.unix.solaris, comp.sys.sun.apps
From: "Charles T. Smith" <cts.priv...@@yahoo.com>
Date: Wed, 18 Apr 2007 07:12:37 +0200
Local: Wed, Apr 18 2007 1:12 am
Subject: Sun thumbs its nose at a 30 year-old goal (including its own)

Protocol independence has been the goal of network programming since the
beginning.  But for X.25, Sun blithely pushes its NLI interface - which is
basically hard-coded X.25.  It shares no abstractions with any other API
and is not compatible with any of the facilities that support all other
protocols as a group.  Plus it is complicated to use (desipte that Sun uses
happy tones to market it).

Somebody at Sun ought to take responsibility.
@end smallexample
@end format

starts off
@url{http://groups.google.com/group/comp.sys.sun.apps/browse_thread/thread/0264b2b100506ffc/7552ac05164fb84e,this thread}.

@node Compatibility with AIXlink/X.25
@section Compatibility with AIXlink/X.25
@cindex Compatibility with AIXlink/X.25

@cite{AIXlink/X.25} does not document@footnote{``@cite{AIXlink/X.25 Version 2.1
for AIX: Guide and Reference, No: SC23-2520-07, Eighth Edition, September 2006,
(Bolder, CO), International Business Machine Corp., IBM},'' available from
@uref{http://publibn.bould.ibm.com/,IBM Documentation Library}.} a @dfn{Network
Layer Interface (NLI)}.  It only documents a @dfn{Network Provider Interface
(NPI)} in support of X.25 applications.  It appears that the NPI provided by
@cite{AIXlink/X.25} is merely an @file{npi} module, similar to the @file{s_npi}
module, pushed over an NLI Stream opened on an X.25 packet layer protocol
driver.  Although it is not documented, it appears that the X.25 packet layer
protocol driver, @file{/dev/x25pckt}, provided by @cite{AIXlink/X.25} is indeed
a Spider NLI driver.

As it is undocumented, this NLI driver's compatibility to that of the
@cite{@value{PACKAGE_TITLE}} cannot be ascertained.  Nevertheless, any NLI
drivers, modules and applications that rely upon the undocumented capabilities
of the NLI interface will likely be compatible with, and port easily to,
@cite{@value{PACKAGE_TITLE}}.

@itemize

@item @cite{AIXlink/X.25} does not document support for the @file{s_npi}
@dfn{STREAMS} module, but documents an @file{npi}  @dfn{STREAMS} module that
does not support CONS QoS or non-OSI X.25 and non-X.25 facilities.  @xref{NPI
Conversion Module}.  See also, @manref{npi(4)}.

@item @cite{AIXlink/X.25} does not document support for the @file{s_npi}
@dfn{STREAMS} module.  Nevertheless, @cite{@value{PACKAGE_TITLE}} provides
support for this module.  @xref{NPI Conversion Module}.
See also, @manref{s_npi(4)}.

@item @cite{AIXlink/X.25} does not document support for the @file{s_nli3}
@dfn{STREAMS} module.  Nevertheless, @cite{@value{PACKAGE_TITLE}} provides
support for this module.  @xref{NLI Conversion Module}.
See also, @manref{s_nli3(4)}.

@end itemize

@node Compatibility with HP X.25/9000
@section Compatibility with HP X.25/9000
@cindex Compatibility with HP X.25/9000

@cite{HP X.25/9000} does not document@footnote{``@cite{HP X.25/9000 Programmer's
Guide}''.} a @dfn{Network Layer Interface (NLI)} even though its architecture
document indicates that a @dfn{NLI} is being used.  @cite{HP X.25/9000} only
documents a BSD IPC interface supported by a library of functions.

As the @dfn{NLI} interface is undocumented, this NLI driver's compatibility to
that of the @cite{@value{PACKAGE_TITLE}} cannot be ascertained.  Nevertheless,
any NLI drivers, modules and applications that rely upon the
undocumented capabilities of the NLI interface will likely be compatible with,
and port easily to, @cite{@value{PACKAGE_TITLE}}.

@itemize

@item @cite{HP-UX} does not document any @dfn{STREAMS} modules or drivers.
Nevertheless, @cite{@value{PACKAGE_TITLE}} provides support for NLI modules and
drivers.  @xref{NLI Drivers and Modules}.

@end itemize

@node Compatibility with IRIS SX.25
@section Compatibility with IRIS SX.25
@cindex Compatibility with IRIS SX.25

The @cite{SGI IRIX} X.25 driver, @cite{IRIS SX.25}, is documented by
@cite{SGI}.@footnote{``@cite{IRIS SX.25 NLI Programmer's Guide, 1995,
(Mountainview, CA), Silicon Graphics, Inc., SGI Technical Publications. [No:
007-2268-002]}.''  Available from @uref{http://techpubs.sgi.com/,SGI Technical
Publications}.}

@itemize

@item @cite{IRIS SX.25} documents the @cite{sn_id} field of the @type{xaddrf}
and @type{pvcattf} structures as being of type @type{unsigned long}.  This is
note ammeniable to running 32-bit applications over 64-bit kernels, so
@cite{@value{PACKAGE_TITLE}} changes the type of the @cite{sn_id} field to
@type{uint32_t}.  This only alters the structure alignment for 64-bit drivers,
modules and applications.

@end itemize

@node Compatibility with PT X.25
@section Compatibility with PT X.25
@cindex Compatibility with PT X.25

The @cite{PT NexusWare} X.25 driver, @cite{PT X.25}, is documented by
@cite{Performance Technologies}.@footnote{``@cite{PT X.25 User's Manual}.''}

@itemize

@item @cite{PT X.25} does not document support for the @file{s_npi}
@dfn{STREAMS} module.  Nevertheless, @cite{@value{PACKAGE_TITLE}} provides
support for this module.  @xref{NPI Conversion Module}.
See also, @manref{s_npi(4)}.

@item @cite{PT X.25} does not document support for the @file{s_nli3} @xref{NLI
Conversion Module}.  @dfn{STREAMS} module.  Nevertheless,
@cite{@value{PACKAGE_TITLE}} provides support for this module. 
See also, @manref{s_nli3(4)}.

@item @cite{PT X.25} documents support for the special @prim{N_Xelisten},
Extended Listen Request/Response message primitive.

@cite{@value{PACKAGE_TITLE}} also provides this message primitive in support of
drivers, modules and applications ported to @cite{Linux} from @cite{PT X.25}.
@xref{Extended Listen Request/Response}.

@end itemize

@node Compatibility with SBE X.25
@section Compatibility with SBE X.25
@cindex Compatibility with SBE X.25

The @cite{SBE} X.25 driver, @cite{SBE X.25}, is documented by @cite{SBE
Inc.}.@footnote{``@cite{SBE X.25}.''}

@node Compatibility with Solstice X.25
@section Compatibility with Solstice X.25
@cindex Compatibility with Solstice X.25

The @cite{Solaris} X.25 driver, @cite{Solstice X.25}, is documented by @cite{Sun
Microsystems}.@footnote{``@cite{Solstice X.25 Programmer's Guide}.''}

@itemize

@item @cite{Solstice X.25} does not document support for the @file{s_npi}
@dfn{STREAMS} module.  Nevertheless, @cite{@value{PACKAGE_TITLE}} provides
support for this module.  @xref{NPI Conversion Module}.
See also, @manref{s_npi(4)}.

@item @cite{Solstice X.25} does not document support for the @file{s_nli3}
@dfn{STREAMS} module.  @xref{NLI Conversion Module}.  Nevertheless,
@cite{@value{PACKAGE_TITLE}} provides support for this module. 
See also, @manref{s_nli3(4)}.

@item @cite{Solstice X.25} documents the @parm{link_id} field in a number of
data structures where other implementations document an @parm{sn_id} field.
Also, it documents that the @code{0xFF} setting of the @parm{link_id} field is
special in that is causes a database to be consulted for the appropriate link or
subnetwork and, failing that, uses the lowest numbered WAN port.

@cite{@value{PACKAGE_TITLE}} declares the @parm{link_id} and @parm{sn_id} in
these structures as members of an anonymous union to be compatible with both
approaches, and also supports the special @code{0xFF} value of the field.
@xref{Addresses}, and @ref{PVC Attach}.

@item @cite{Solstice X.25} documents support for the @var{X25_PATTERN}
setting for the @parm{l_mode} field of the Listen Request/Response message
primitive.

@cite{@value{PACKAGE_TITLE}} also supports this pattern matching mode in support
of drivers, modules and applications ported to @cite{Linux} from @cite{Solstice
X.25}.  @xref{Listen Request/Response}.

@end itemize

@node Glossary of NLI Terms and Acronyms
@appendix Glossary of NLI Terms and Acronyms

@multitable @columnfractions 0.15 0.85
@item @dfn{ANSI} @tab American National Standards Institute
@item @dfn{CCITT} @tab The International Telegraph and Telephone Consutative Committee, old name for ITU-T
@item @dfn{CONS} @tab Connection-Oriented Network Service
@item @dfn{CUD} @tab Call User Data
@item @dfn{DCE} @tab Data Circuit-terminating Equipment
@item @dfn{DDN} @tab Defence Data Network
@item @dfn{DLPI} @tab Data Link Provider Interface
@item @dfn{DLSAP} @tab Destination Link Service Access Point
@item @dfn{DNIC} @tab Data Network Identification Code
@item @dfn{DSAP} @tab Destination Service Access Point
@item @dfn{DTE} @tab Data Terminal Equipment 
@item @dfn{ENSDU} @tab Expedited Network Service Data Unit
@item @dfn{ETSI} @tab European Telecommunications Standards Institute
@item @dfn{HDLC} @tab High-Level Data Link Control
@item @dfn{IEEE} @tab Institute of Electrical and Electronics Engineers
@item @dfn{IP} @tab Internet Protocol
@item @dfn{ISDNI} @tab ISDN Interface
@item @dfn{ISDN} @tab Integrated Services Digital Network
@item @dfn{ISO} @tab International Organization for Standardization
@item @dfn{ISUPI} @tab ISUP Interface
@item @dfn{ISUP} @tab ISDN User Part
@item @dfn{ITU} @tab International Telecommunications Union
@item @dfn{ITU-T} @tab ITU Telecom Sector
@item @dfn{LAN} @tab Local Area Network
@item @dfn{LAPB} @tab Link Access Procedure (Balanced), ISO/IEC 7776
@item @dfn{LAPD} @tab Link Access Procedure D-Channel, Q.921
@item @dfn{LAPF} @tab Link Access Procedure Frame Mode, Q.922
@item @dfn{LAP} @tab Link Access Procedure
@item @dfn{LCI} @tab Logical Channel Identifier
@item @dfn{LLC1} @tab Logical Link Control Type 1
@item @dfn{LLC2} @tab Logical Link Control Type 2
@item @dfn{LLC3} @tab Logical Link Control Type 3
@item @dfn{LLC} @tab Logical Link Control
@item @dfn{LLI} @tab Logical Link Inteface
@item @dfn{LSAP} @tab Link Service Access Point
@item @dfn{MAC} @tab Media Access Control
@item @dfn{MTPI} @tab Message Transfer Part Interface
@item @dfn{MTP} @tab Message Transfer Part 
@item @dfn{NLI} @tab Network Layer Interface
@item @dfn{NPDU} @tab Network Protocol Data Unit
@item @dfn{NPI} @tab Network Provider Interface
@item @dfn{NPI} @tab Numbering Plan Indicator
@item @dfn{NSAP} @tab Network Service Access Point
@item @dfn{NSDU} @tab Network Service Data Unit
@item @dfn{NSP} @tab Network Service Provider
@item @dfn{NS} @tab Network Service
@item @dfn{NSU} @tab Network Service User
@item @dfn{NUI} @tab Network User Information
@item @dfn{PAD} @tab Packet Assembler/Disassembler
@item @dfn{PDN} @tab Public Data Network
@item @dfn{PDU} @tab Protocol Data Unit
@item @dfn{PLP} @tab Packet Layer Protocol
@item @dfn{PPA} @tab Physical Point of Attachment
@item @dfn{PSDN} @tab Public Switched Data Network
@item @dfn{PSTN} @tab Public Switch Telephone Network
@item @dfn{PVC} @tab Permanent Virtual Circuit
@item @dfn{QOS} @tab Quality of Service
@item @dfn{RPOA} @tab Recognized Private Operating Agency
@item @dfn{SAP} @tab Service Access Point
@item @dfn{SCCPI} @tab Signalling Connection Control Part Interface
@item @dfn{SCCP} @tab Signalling Connection Control Part
@item @dfn{SDLI} @tab Signalling Data Link Interface
@item @dfn{SDL} @tab Signalling Data Link
@item @dfn{SDTI} @tab Signalling Data Terminal Interface
@item @dfn{SDT} @tab Signalling Data Terminal
@item @dfn{SDU} @tab Service Data Unit
@item @dfn{SLI} @tab Signalling Link Interface
@item @dfn{SLSAP} @tab Source Link Service Access Point
@item @dfn{SL} @tab Signalling Link
@item @dfn{SNPA} @tab Subnetwork Point of Attachment
@item @dfn{SSAP} @tab Source Service Access Point
@item @dfn{SVC} @tab Switched Virtual Circuit
@item @dfn{TCAP} @tab Transaction Capabilities Application Part
@item @dfn{TCI} @tab Transaction Component Interface
@item @dfn{TC} @tab Component Handling Sub-Layer
@item @dfn{TLI} @tab Transport Layer Interface
@item @dfn{TOA/NPI} @tab Type of Address/Numbering Plan Indicator
@item @dfn{TOA} @tab Type of Address
@item @dfn{TPI} @tab Transport Provider Interface
@item @dfn{TRI} @tab Transaction Interface
@item @dfn{TR} @tab Transaction Handling Sub-Layer
@item @dfn{VC} @tab Virtual Circuit
@item @dfn{WAN} @tab Wide Area Network
@item @dfn{X.121} @tab ITU-T Recommendation X.121
@item @dfn{X.25} @tab ITU-T Recommendation X.25
@item @dfn{X.28} @tab ITU-T Recommendation X.28
@item @dfn{X.3} @tab ITU-T Recommendation X.3
@item @dfn{X.75} @tab ITU-T Recommendation X.75
@item @dfn{XX25} @tab X.25 Programming Inteface using XTI
@item @dfn{XXX} @tab X.3, X.28, X.29
@end multitable

@node References
@unnumbered References

@multitable @columnfractions 0.2 0.8

@item [AIXlink/X.25] @anchor{AIXlink/X.25} @tab @cite{AIXlink/X.25 Version 2.1
for AIX: Guide and Reference}, No: SC23-2520-07, Eighth Edition, September 2006,
(Bolder, CO), International Business Machine Corp., IBM.
@uref{http://publibn.bould.ibm.com/,IBM Documentation Library}.

@item [ARTIC WAN] @anchor{ARTIC WAN} @tab @cite{ARTIC STREAMS Support WAN Driver
Interface Reference}, Release 1.7, June 2004, (Hillsboro, OR), RadiSys
Corporation, RadiSys. [Doc No: 007-01232-0003], @uref{http://www.radisys.com/,
RadiSys Support Documentation}.

@item [CDI] @anchor{CDI} @tab @cite{OpenSS7 CAE Specification: Communications
Device Interface (CDI) Specification}, Revision 0.9.2, Draft 2, July 15, 2007,
(Edmonton, Canada), B. Bidulock, OpenSS7 Corporation.  Distributed with package
@file{strxns-0.9.2} and @file{openss7-0.9.2}.
@url{http://www.openss7.org/docs/cdi.pdf, OpenSS7 Documents}.

@item [DLPI] @anchor{DLPI} @tab @cite{Open Group CAE Specification: Data Link
Provider Interface (DLPI) Specification}, Revision 2.0.0, Draft 2, August 20,
1992, (Parsippany, New Jersey), UNIX International, Inc., UNIX International
Press.  @uref{http://www.opengroup.org/onlinepubs/,The Open Group},
@uref{http://www.openss7.org/docs/dlpi.pdf,The OpenSS7 Project}.

@item [IRIS SX.25] @anchor{IRIS SX.25} @tab @cite{IRIS SX.25 NLI Programmer's
Guide}, 1995, (Mountainview, CA), Silicon Graphics, Inc., SGI Technical
Publications. [No: 007-2268-002]. @uref{http://techpubs.sgi.com/,SGI Technical
Publications}.

@item [ISO3309] @anchor{ISO3309} @tab @b{ISO/IEC 3309:1988}, @cite{Information
Technology -- Data Communications -- High-Level Data Link Control procedures --
Frame Structure}, 1988, ISO/IEC, International Orgianization for
Standardization.  @uref{http://www.iso.org/,International Organization for
Standardization}.

@item [ISO7776] @anchor{ISO7776} @tab @b{ISO/IEC 7776:1995}, @cite{Information
technology --- Telecommunications information exchange between systems ---
High-level data link control procedures --- Description of the X.25
LAPB-compatible DTE data link procedures}, Second Edition, July 1, 1995,
International Organization for Standardization.
@uref{http://www.iso.org/,International Organization for Standardization}.

@item [ISO8208] @anchor{ISO8208} @tab @b{ISO/IEC 8208:2000}, @cite{Information
Technology --- Data Communications --- X.25 Packet Layer Protocol for Data
Terminal Equipment}, Fourth Edition, November 1, 2000, (Geneva), ISO/IEC,
International Organization for Standardization.
@uref{http://www.iso.org/,International Organization for Standardization}.

@item [ISO8802-2] @anchor{ISO8802-2} @tab @b{ANSI/IEEE Standard 802.2-1998
[ISO/IEC 8802-2:1998]}, @cite{IEEE Standard for Information Technology ---
Telecommunications and Information Exchange Between Systems --- Local and
Metropolitan Area Networks --- Specific Requirements --- Part 2: Logical Link
Control}, May 7, 1998, (New York), ANSI/IEEE, IEEE Computer Society. [ISBN
1-55937-959-6]. @uref{http://www.ieee.org/,Institute of Electrical and
Electronics Engineers}.

@item [ISO8881] @anchor{ISO8881} @tab @b{ISO/IEC 8881:1989}, @cite{Information
Processing Systems --- Data Communications --- User of the X.25 Packet Level
Protocol in Local Area Networks}, 1989, ISO/IEC, International Organization for
Standardization. @uref{http://www.iso.org/,International Organization for
Standardization}.

@item [X.25] @tab @cite{ITU-T Recommendation X.25}.

@item [X.29] @tab @cite{ITU-T Recommendation X.29}.

@item [NPI] @anchor{NPI} @tab @cite{Open Group CAE Specification: Network
Provider Interface (NPI) Specification}, Revision 2.0.0, Draft 2, August 17,
1992, (Parisppany, New Jersey), UNIX International, Inc., UNIX International
Press.  @uref{http://www.openss7.org/docs/npi.pdf,The OpenSS7 Project}.

@item [Solstice X.25] @anchor{Solstice X.25} @tab @cite{Solstice X.25 9.2
Administration Guide}, October 1999, (Palo Alto, CA), Sun Microsystems, Inc.,
Sun. [Part No: 806-1234-10], @uref{http://docs-pdf.sun.com/, Solaris
Documentation}.

@item [TPI] @anchor{TPI} @tab @cite{Open Group CAE Specification: Transport
Provider Interface (TPI) Specification}, Revision 2.0.0, Draft 2, 1999,
(Berkshire, UK), Open Group, Open Group Publication.
@uref{http://www.opengroup.org/onlinepubs/,The Open Group},
@uref{http://www.openss7.org/docs/tpi.pdf,The OpenSS7 Project}.

@item [V.25 bis] @anchor{V.25 bis} @tab @b{ITU-T Recommendation V.25 bis (10/96)},
@cite{Synchronous and asyncrhonous automatic dialing procedrues on switched
networks}, October 1996, (Geneva), ITU, ITU-T Telecommunication Standardization
Sector of ITU, (Previously ``CCITT Recommendation''),
@url{http://www.itu.int/rec/T-REC-V.25bis/en/ T-REC-V.25bis}.

@item [X.21] @anchor{X.21} @tab @b{ITU-T Recommendation X.21 (09/92)},
@cite{Interface between Data Terminal Equipment (DTE) and Data
Circuit-terminating Equiment (DCE) for synchronous operation on Public Data
Networks}, September 1992, (Geneva), ITU, ITU-T Telecommunication
Standardization Sector of ITU.  (Previously ``CCITT Recommendation''),
@url{http://www.itu.int/rec/T-REC-X.21/en/, T-REC-X.21}.

@item [X.21 bis] @anchor{X.21 bis} @tab @b{ITU-T Recommendation X.21 bis (03/88)},
@cite{Use on Public Data Networks of Data Terminal Equipment (DTE) which is
designed for interfacing to synchronous V-series modems}, March 1988, (Geneva),
ITU, ITU-T Telecommunication Standardization Sector of ITU. (Previously ``CCITT
Recommendation''), @url{http://www.itu.int/rec/T-REC-X.21bis/en/,
T-REC-X.21bis}.

@item [X.25] @anchor{X.25} @tab @b{ITU-T Recommendation X.25}.
@url{http://www.itu.int/rec/T-REC-X.25/en/, T-REC-X.25}.

@item [X.75] @anchor{X.75} @tab @b{ITU-T Recommendation X.75}.
@url{http://www.itu.int/rec/T-REC-X.75/en/, T-REC-X.75}.

@item [X.29] @anchor{X.29} @tab @b{ITU-T Recommendation X.29}.
@url{http://www.itu.int/rec/T-REC-X.29/en/, T-REC-X.29}.

@item [XX25] @anchor{XX25} @tab @cite{X/Open CAE Specification: X.25 Programming
Interface using XTI (XX25)}, No. c411, November 1995, (Berkshire, UK), X/Open,
Open Group Publication. [ISBN: 1-85912-136-5].
@uref{http://www.opengroup.org/onlinepubs/,The Open Group}.

@end multitable

@node Licenses
@unnumbered Licenses
@cindex licenses

All code presented in this manual is licensed under the @ref{GNU Affero General Public License}.
The text of this manual is licensed under the @ref{GNU Free Documentation License}, with no
invariant sections, no front-cover texts and no back-cover texts.  Please note, however, that it is
just plain wrong to modify statements of, or attribute statements to, the Author or @cite{OpenSS7
Corporation}.

@menu
* GNU Affero General Public License::
* GNU Free Documentation License::
@end menu

@include texi/agpl3.texi
@page
@include texi/fdl13.texi

@ifnotplaintext
@c skip indexes for plain text (regex search works better)
@c @iftex
@c @node Indices
@c @unnumbered Indices
@c @end iftex

@c @ifnottex
@c @c concatenate indices for html and info
@node Index
@unnumbered Index
@printindex cp
@c @end ifnottex

@c @iftex
@c @menu
@c * Concept Index::
@c * Protocol State Index::
@c * Primitive Index::
@c * Primitive Structure and Type Index::
@c * Primitive Structure Field Index::
@c * Primitive Values Index::
@c * Primitive Error Values Index::
@c * Input-Output Control Index::
@c * MIB Object Index::
@c * Manual Page Index::
@c @end menu
@c 
@c @node Concept Index
@c @section Concept Index
@c @printindex cp
@c 
@c @page
@c @node Protocol State Index
@c @section Protocol State Index
@c @printindex st
@c 
@c @page
@c @node Primitive Index
@c @section Primitive Index
@c @printindex pr
@c 
@c @page
@c @node Primitive Structure and Type Index
@c @section Primitive Structure and Type Index
@c @printindex tp
@c 
@c @page
@c @node Primitive Structure Field Index
@c @section Primitive Structure Field Index
@c @printindex vr
@c 
@c @page
@c @node Primitive Values Index
@c @section Primitive Values Index
@c @printindex pv
@c 
@c @page
@c @node Primitive Error Values Index
@c @section Primitive Error Values Index
@c @printindex pe
@c 
@c @page
@c @node Input-Output Control Index
@c @section Input-Output Control Index
@c @printindex ct
@c 
@c @page
@c @node MIB Object Index
@c @section MIB Object Index
@c @printindex mo
@c 
@c @page
@c @node Manual Page Index
@c @section Manual Page Index
@c @printindex mp
@c @end iftex
@end ifnotplaintext

@page
@shortcontents
@page
@contents
@bye
