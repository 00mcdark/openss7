This is /home/brian/os8/stacks/doc/specs/sccpi/npi_sccp.info, produced by
makeinfo version 4.13 from /home/brian/os8/stacks/doc/specs/sccpi/npi_sccp.texi.

INFO-DIR-SECTION OpenSS7
START-INFO-DIR-ENTRY
* NPI-SCCP: (npi_sccp).		NPI Addendum for SCCP
END-INFO-DIR-ENTRY

This file documents the SCCP Addendum to the Network Provider Interface.

This is Edition 0.9a, last updated 2008-12-17, for OpenSS7 SS7 Stack version
0.9a release 8.20081103 published by OpenSS7 Corporation
(http://www.openss7.com/).

Copyright (C) 2001-2008  OpenSS7 Corporation (http://www.openss7.com/)
Copyright (C) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

Permission to use, copy, modify, and distribute this documentation for any
purpose and without fee is hereby granted, provided that the above copyright
notice appears in all copies and that both that copyright notice and this
permission notice appear in supporting documentation, and that the name UNIX
International not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior permission. UNIX
International makes no representations about the suitability of this
documentation for any purpose. It is provided "as is" without express or
implied warranty.

Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided the entire resulting
derived work is distributed under the terms of a permission notice identical to
this one.

Permission is granted to copy and distribute translations of this manual into
another language, under the above conditions for modified versions.


File: npi_sccp.info,  Node: Top,  Next: Preface,  Up: (dir)

 Network Provider Interface--Addendum for SCCP Conformance
**********************************************************

* Menu:

* Preface::
* Introduction::
* Protocol Addressing::
* Quality of Service::
* Supported Services::
* Rules for Conformance::
* Extension Primitives::
* NPI-SCCP Input-Output Controls::
* NPI-SCCP Management Information Base::
* Mapping NPI-SCCP Primitives::
* NPI-SCCP Header Files::
* NPI-SCCP Library::
* NPI-SCCP Drivers and Modules::
* NPI-SCCP Utilities::
* NPI-SCCP Compatibility and Porting::
* License::
* Glossary::
* Acronyms::
* References::
* Index::


File: npi_sccp.info,  Node: Preface,  Next: Introduction,  Prev: Top,  Up: Top

 Preface
********

 Security Warning
=================

Permission to use, copy and distribute this documentation without modification,
for any purpose and without fee or royalty is hereby granted, provided that
both the above copyright notice and this permission notice appears in all
copies and that the name of `OpenSS7 Corporation' not be used in advertising or
publicity pertaining to distribution of this documentation or its contents
without specific, written prior permission.  `OpenSS7 Corporation' makes no
representation about the suitability of this documentation for any purpose.  It
is provided "as is" without express or implied warranty.

OpenSS7 Corporation (http://www.openss7.com/) disclaims all warranties with
regard to this documentation including all implied warranties of
merchantability, fitness for a particular purpose, non-infringement, or title;
that the contents of the document are suitable for any purpose, or that the
implementation of such contents will not infringe on any third party patents,
copyrights, trademarks or other rights.  In no event shall `OpenSS7
Corporation' be liable for any direct, indirect, special or consequential
damages or any damages whatsoever resulting from loss of use, data or profits,
whether in an action of contract, negligence or other tortious action, arising
out of or in connection with any use of this document or the performance or
implementation of the contents thereof.

OpenSS7 Corporation (http://www.openss7.com/) is making this documentation
available as a reference point for the industry.  While `OpenSS7 Corporation'
believes that these interfaces are well defined in this release of the
document, minor changes may be made prior to products conforming to the
interfaces being made available.

 Abstract
=========

This document is an Addendum for SCCP Conformance to the Network Provider
Interface containing technical details concerning the implementation of the
Signalling Connection Control Part (SCCP) using the Network Provider Interface
(NPI).  It contains recommendations on software architecture as well as
platform and system applicability of NPI-SCCP.

 Purpose
========

The purpose of this document is to provide technical documentation of the SCCP
Network Provider Interface (NPI-SCCP).  This document is intended to be
included with the OpenSS7 `STREAMS' software package released by `OpenSS7
Corporation'.  It is intended to assist software developers, maintainers and
users of the NPI-SCCP with understanding the software architecture and
technical interfaces that are made available in the software package.

 Intent
=======

It is the intent of this document that it act as the primary source of
information concerning the NPI-SCCP.  This document is intended to provide
information for writers of OpenSS7 NPI-SCCP applications as well as writers of
OpenSS7 NPI-SCCP Users.

 Audience
=========

The audience for this document is software developers, maintainers and users
and integrators of the NPI-SCCP.  The target audience is developers and users
of the OpenSS7 SS7 stack.

 Revision History
=================

Although the author has attempted to ensure that the information in this
document is complete and correct, neither the Author nor OpenSS7 Corporation
will take any responsibility in it.

Take care that you are working with a current version of this documentation:
you will not be notified of updates.  To ensure that you are working with a
current version, check the OpenSS7 Project (http://www.openss7.org/) website
for a current version.

Only the texinfo or roff source is controlled.  A printed (or postscript)
version of this document is an *UNCONTROLLED VERSION*.

     $Log: npi_sccp.texi,v $
     Revision 0.9.2.2  2008-11-26 12:01:34  brian
     - updated to FDL 1.3

     Revision 0.9.2.1  2008-11-17 14:04:32  brian
     - added documentation and conversion modules


File: npi_sccp.info,  Node: Introduction,  Next: Protocol Addressing,  Prev: Preface,  Up: Top

1 Introduction
**************

This document describes the protocol-specific information that is relevant to
for SS7 Signalling Connection Control Part (SCCP).(1) This document also
describes the protocol-specific information that is relevant when SCCP network
services are provided over an IP network.(2)

In general, this document describes the characteristics that the SCCP and M3UA
NSP have in common, with notes indicating where they differ.

This document also defines the data structures and constants required for SCCP
and M3UA.(3) NSP which are exposed through the `<sys/npi_sccp.h>' header file.

* Menu:

* Overview::
* Protocol Address::
* Connection and Connectionless Modes::
* Sending Data of Zero Octets::
* Quality of Service Parameters::

---------- Footnotes ----------

(1) See reference *note Q.714: Q.714, *note T1.112: T1.112.

(2) See reference *note M3UA: M3UA.

(3) See reference *note M3UA: M3UA.


File: npi_sccp.info,  Node: Overview,  Next: Protocol Address,  Up: Introduction

1.1 Overview
============

In general, it is not too difficult to map the Signalling Connection Control
Part (SCCP) service interface as described in Q.711 (*note Q.711: Q.711.) to
the NPI (*note NPI: NPI.).  This is because the NPI is based on X.213 (*note
X.213: X.213.) as is Q.711.  SCCP does, however, have a number of specialized
service interface primitives described in Q.711 (*note Q.711: Q.711.) that are
not provided for directly in the NPI.  There as two ways to accomodate this
extra functionality provided by the SCCP: either by overloading existing NPI
primitives as described under *note NPI-SCCP Rules for Conformance::, or by
offering new NPI primitives as described under *note Extension Primitives::.
One reason for taking the former approach is so that general purpose NPI
modules and applications libraries may be used without extension.  One reason
for taking the latter approach is to remain true to the Q.711 service primitive
interface specification.

The former approach is referred to as the `NPI-SCCP' addendum specification and
is described in this document.  The later approach is referred to as the
`SCCPI' interface specification and is described in a separate document.


File: npi_sccp.info,  Node: Protocol Address,  Next: Connection and Connectionless Modes,  Prev: Overview,  Up: Introduction

1.2 Protocol Address
====================

In an SCCP environment, the protocol address is the SCCP-SAPI which identifies
the SS7 network, SS7 Signalling Point Code within the SS7 network, and the
SCCP-User identifier (Subsystem Number).


File: npi_sccp.info,  Node: Connection and Connectionless Modes,  Next: Sending Data of Zero Octets,  Prev: Protocol Address,  Up: Introduction

1.3 Connection and Connectionless Modes
=======================================

1.3.1 Connection-Oriented Mode
------------------------------

The Signalling Connection Control Part NSP supports connection-oriented mode
for SCCP-User protocols that form an association between two SCCP-Users in an
end-to-end exchange.  This includes TUP,(1) ISUP,(2) BTNUP, BICC and other call
control protocols.

The Signalling Connection Control Part does not support a true
connection-oriented mode.  When associations are formed with `N_CONN_REQ', no
protocol messages are exchanged between the local and remote SCCP users and the
`N_CONN_REQ' primitive will always succeed unless the remote SCCP user is not
known to the NSP.  Because of this, it is not possible for the Signalling
Connection Control Part to accept incoming connections; `N_CONN_IND' primitives
will not be issued by the NSP.

1.3.2 Connection-less Mode
--------------------------

The Signalling Connection Control Part NSP supports connection-less mode for
SCCP-User protocols that form one-to-many or many-to-one or many-to-many
associations and are not restricted to an end-to-end exchange at SCCP.  This
includes SCCP, MTUP, and other SCCP Users of a connection-less nature.

---------- Footnotes ----------

(1) See reference *note Q.721: Q.721.

(2) See reference *note Q.761: Q.761.


File: npi_sccp.info,  Node: Sending Data of Zero Octets,  Next: Quality of Service Parameters,  Prev: Connection and Connectionless Modes,  Up: Introduction

1.4 Sending Data of Zero Octets
===============================

The Signalling Connection Control Part, both in connection-oriented mode and in
connection-less mode, does not permit sending a NSDU of zero octets.  So, in
connection-less mode, if the number of M_DATA block bytes is zero, the
`N_UNITDATA_REQ' primitive will always fail with the NPI_error in the
N_ERROR_ACK set to NBADDATA.  In connection-oriented mode, if the number of
M_DATA block bytes is zero, the N_DATA_REQ primitive will always fail with the
NPI_error in the N_ERROR_ACK set to NBADDATA.  if either the N_MORE_DATA_FLAG
is not set in the DATA_xfer_flags, or the N_MORE_DATA_FLAG flag is not set and
the preceding N_DATA_REQ primitive completed a NSDU (that is, the call has
requested sending a zero byte NSDU).


File: npi_sccp.info,  Node: Quality of Service Parameters,  Prev: Sending Data of Zero Octets,  Up: Introduction

1.5 Quality of Service Parameters
=================================

The quality of service structures are specific to SCCP.  All quality of service
parameters are association-related, that is, they are options with end-to-end
significance.  They may be negotiated in the NPI state NS_IDLE, and are
read-only in all other sates except NS_UNBND.

1.5.1 Quality of Service Structures
-----------------------------------

SCCP-NPI provides quality of service structure selection for data, connection
requests, information, and range information.  The SCCP specific quality of
service structures are discussed in detail below.


File: npi_sccp.info,  Node: Protocol Addressing,  Next: Quality of Service,  Prev: Introduction,  Up: Top

2 Protocol Addressing
*********************

This section describes the formats and rules for the Network Provider Interface
that are specific to the Signalling Connection Control Part.  This section must
be used along with the generic Network Provider Interface Specification when
implementing a NSP that will be configured with the SS7 Signalling Connection
Control Part.

* Menu:

* Protocol Address::


File: npi_sccp.info,  Node: Protocol Address,  Up: Protocol Addressing

2.1 Protocol Address
====================

The network address is used in the `N_BIND_REQ', `N_BIND_ACK', `N_CONN_REQ',
`N_CONN_CON', `N_UNITDATA_REQ', `N_UNITDATA_IND', and `N_UDERROR_IND'
primitives.

 Format
-------

The SCCP network protocol address uses a sockaddr struct to support sockets
compatibility libraries consistent with the SCCP XTI/TLI interface.

The network protocol address is formatted as follows:

     typedef struct sccp_addr {
             uint ni;                        /* network indicator */
             uint ri;                        /* routing indicator */
             uint pc;                        /* point code (-1 not present) */
             uint ssn;                       /* subsystem number (0 not present) */
             uint gtt;                       /* type of global title */
             uint tt;                        /* translation type */
             uint es;                        /* encoding scheme */
             uint nplan;                     /* numbering plan */
             uint nai;                       /* nature of address indicator */
             uint alen;                      /* address length */
             uint8_t addr[0];                /* address digits */
             /* followed by address bytes */
     } sccp_addr_t;

     #define SCCP_MAX_ADDR_LENGTH 32

     #define SCCP_RI_DPC_SSN         0       /* route on DPC/SSN */
     #define SCCP_RI_GT              1       /* route on GT */

     #define SCCP_GTTTYPE_NONE       0       /* no GT */
     #define SCCP_GTTTYPE_NAI        1       /* NAI only */
     #define SCCP_GTTTYPE_TT         2       /* TT only */
     #define SCCP_GTTTYPE_NP         3       /* TT, ES, NPLAN */
     #define SCCP_GTTTYPE_NP_NAI     4       /* TT, ES, NPLAN and NAI */

 Parameters
-----------

SCCP_FAMILY
     Specifies the SCCP socket address family.  The address family is always
     AF_SCCP.

SCCP_NI
     Specifies the network indicator which specifies the SS7 network to which
     the address belongs.  A given SCCP entity can belong to multiple SS7
     networks, particularly when acting as a gateway between networks.  The
     network indicator specifies to which network the SCCP-SAPI belongs.

SCCP_RI
     Specifies which components of the address are to be used for routing.  The
     SCCP_RI can be one of the following values:
    `N_SCCP_RI_DPC_SSN'
          Specifies that routing is to be performed on destination point code
          (DPC) and subsystem number (SSN).

    `N_SCCP_RI_GT'
          Specifies that routing is to be performed on global title (GT).

SCCP_PC
     Specifies the signalling point code of the SCCP provider entity.  The
     point code is normally coded as a 14-bit value, right justified in the
     SCCP_PC field, which identifies the SCCP entity.  Non-significant bits are
     coded zero (`0').

SCCP_SSN
     Specifies the subsystem number of the SCCP provider entity.  The subsystem
     number is normally coded as an 8-bit value.  The SCCP_SSN can take on one
     of the following values, each of which corresponds to an SCCP user at the
     SCCP entity:
    `N_SCCP_SSN_UNKNOWN'
          Subsystem number not known/not used.

    `N_SCCP_SSN_SCMG'
          SCCP management.

    `N_SCCP_SSN_RESERVED'
          Reserved for ITU-T allocation.

    `N_SCCP_SSN_ISUP'
          ISDN user part.

    `N_SCCP_SSN_OMAP'
          OMAP (Operation, Maintenance and Administration Part)

    `N_SCCP_SSN_MAP'
          MAP (Mobile Application Part)

    `N_SCCP_SSN_HLR'
          HLR (Home Location Register)

    `N_SCCP_SSN_VLR'
          VLR (Visitor Location Register)

    `N_SCCP_SSN_MSC'
          MSC (Mobile Switching Centre)

    `N_SCCP_SSN_EIC'
          EIC (Equipment Identifier Centre)

    `N_SCCP_SSN_AUC'
          AUC (Authentication Centre)

    `N_SCCP_SSN_ISDN_SS'
          ISDN supplementary services.

    `N_SCCP_SSN_RESERVED2'
          Reserved for international use.

    `N_SCCP_SSN_BISDN'
          Broadband ISDN edge-to-edge applications.

    `N_SCCP_SSN_TC_TEST'
          TC test responder.

    `...'
          Other values from `0' to 255.

SCCP_GTT
     Specifies the type of global title included in the address.  This field
     can be one of the following values:
    `N_SCCP_GTTTYPE_NONE'
          The global title is not included in the address.

    `N_SCCP_GTTTYPE_NAI'
          The global title includes the nature of address indication (NAI) only.

    `N_SCCP_GTTTYPE_TT'
          The global title includes the translation type (TT) only.

    `N_SCCP_GTTTYPE_NP'
          The global title includes the translation type (TT), encoding scheme
          (ES), and numbering plan (NPLAN).

    `N_SCCP_GTTTYPE_NP_NAI'
          The global title includes the translation type (TT), encoding scheme
          (ES), and numbering plan (NPLAN), and nature of address indicator
          (NAI).

    `...'

SCCP_TT
     Specifies the translation type (TT).

SCCP_ES
     Specifies the encoding scheme (ES).  Encoding scheme can be one of the
     following values:
    `N_SCCP_ES_UNKNOWN'
          Unknown encoding scheme.

    `N_SCCP_ES_BCD_ODD'
          BCD encoding scheme, odd number of digits.

    `N_SCCP_ES_BCD_EVEN'
          BCD encoding scheme, even number of digits.

    `N_SCCP_ES_NATIONAL_SPECIFIC'
          National specific encoding scheme.

    `...'
          Other values from `0' to 15.

SCCP_NPLAN
     Specifies the numbering plan (NPLAN).  The SCCP_NPLAN field can be one of
     the following:
    `N_SCCP_NPLAN_UNKNOWN'
          Unknown.

    `N_SCCP_NPLAN_ISDN'
          ISDN/telephony numbering plan (Recommendations E.163 and E.164).

    `N_SCCP_NPLAN_GENERIC'
          Generic numbering plan.

    `N_SCCP_NPLAN_DATA'
          Data numbering plan (Recommendation X.121).

    `N_SCCP_NPLAN_TELEX'
          Telex numbering plan (Recommendation F.69).

    `N_SCCP_NPLAN_MARITIME'
          Maritime mobile numbering plan (Recommendations E.210, E.211).

    `N_SCCP_NPLAN_LAND_MOBILE'
          Land mobile numbering plan (Recommendation E.212).

    `N_SCCP_NPLAN_ISDN_MOBILE'
          ISDN/mobile numbering plan (Recommendation E.214).

    `N_SCCP_NPLAN_PRIVATE'
          Private network-specific numbering plan.

SCCP_NAI
     Specifies the nature of address indicator (NAI).

SCCP_ALEN
     Specifies the length of the address signals.

SCCP_ADDR
     Specifies the address signals.


File: npi_sccp.info,  Node: Quality of Service,  Next: Supported Services,  Prev: Protocol Addressing,  Up: Top

3 Quality of Service
********************

* Menu:

* SCCP Quality of Service Overview::
* SCCP Quality of Service Formats::
* NPI Connection Modes::


File: npi_sccp.info,  Node: SCCP Quality of Service Overview,  Next: SCCP Quality of Service Formats,  Up: Quality of Service

3.1 SCCP Quality of Service Overview
====================================


File: npi_sccp.info,  Node: SCCP Quality of Service Formats,  Next: NPI Connection Modes,  Prev: SCCP Quality of Service Overview,  Up: Quality of Service

3.2 SCCP Quality of Service Formats
===================================

The SCCP provides the following quality of service structures:

     typedef union {
             np_ulong n_qos_type;
             N_qos_sel_data_sccp_t sel_data;
             N_qos_sel_conn_sccp_t sel_conn;
             N_qos_sel_info_sccp_t sel_info;
             N_qos_range_info_sccp_t range_info;
             N_qos_sel_infr_sccp_t sel_infr;
     } N_qos_sccp_t;

3.2.1 Data Quality of Service Selection
---------------------------------------

Quality of Service parameters for data transmission are conveyed to the NSP
using the `N_qos_sel_data_sccp_t' structure.  This data structure is used in
conjunction with the `N_OPTMGMT_REQ' primitive to alter the selected data
options that will apply to subsequent `N_UNITDATA_REQ' primitive data
transmissions.(1)

* Menu:

* N_QOS_SEL_DATA_SCCP::

---------- Footnotes ----------

(1) When altering the data transmission quality of service parameters, care
should be taken to issue the `N_OPTMGMT_REQ' primtive with a message type of
`M_PROTO' instead of `M_PCPROTO' lest the options management primitive overtake
data in the Stream that was to be transmitted with the old settings.


File: npi_sccp.info,  Node: N_QOS_SEL_DATA_SCCP

3.2.1.1 N_QOS_SEL_DATA_SCCP
...........................

 Format
.......

The `N_qos_sel_data_sccp_t' structure is formatted as follows:
     #define N_QOS_SEL_DATA_SCCP     0x0901
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_DATA_SCCP */
             np_ulong protocol_class;        /* protocol class */
             np_ulong option_flags;          /* options flags (return option) */
             np_ulong sequence_selection;    /* selected SLS value */
             np_ulong message_priority;      /* MTP message priority */
             np_ulong importance;            /* importance */
     } N_qos_sel_data_sccp_t;

 Fields
.......

N_QOS_TYPE
     Specifies or indicates the quality of service parameter structure type.
     Always N_QOS_SEL_DATA_SCCP.

PROTOCOL_CLASS
     Specifies or indicates the protocol class of the data.  The PROTOCOL_CLASS
     field can have one of the following values:
    `N_QOS_PCLASS_0'
          Protocol class `0'.

    `N_QOS_PLCASS_1'
          Protocol class `1'.

OPTION_FLAGS
     Specifies or indicates the options flags associated with the data.  The
     OPTIONS_FLAGS field can be a bitwise OR of zero or more of the following
     values:
    `0'
          Return on error option is not selected.

    `1'
          Return on error option is selected.

SEQUENCE_SELECTION
     Specifies or indicates the "Signalling Link Selection" associated with the
     transmitted or received data.

MESSAGE_PRIORITY
     Specifies or indicates the "Message Priority" associated with the
     transmitted or received data.

IMPORTANCE
     Specifies or indicates the "Importance" associated with the transmitted or
     received data.

3.2.2 Connection Quality of Service Selection
---------------------------------------------

* Menu:

* N_QOS_SEL_CONN_SCCP::


File: npi_sccp.info,  Node: N_QOS_SEL_CONN_SCCP

3.2.2.1 N_QOS_SEL_CONN_SCCP
...........................

 Format
.......

The `N_qos_sel_conn_sccp_t' structure is formatted as follows:
     #define N_QOS_SEL_CONN_SCCP     0x0902
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_CONN_SCCP */
             np_ulong protocol_class;        /* protocol class 2 or 3 */
             np_ulong option_flags;          /* options flags (return option) */
             np_ulong sequence_selection;    /* selected SLS value */
             np_ulong message_priority;      /* MTP message priority */
             np_ulong importance;            /* importance */
     } N_qos_sel_conn_sccp_t;

 Fields
.......

N_QOS_TYPE
      always N_QOS_SEL_CONN_SCCP */

PROTOCOL_CLASS
     Specifies or indicates the protocol class associated with the connection
     request or indication.  The PROTOCOL_CLASS field can have one of the
     following values:
    `N_QOS_PCLASS_2'
          Protocol class `2'.

    `N_QOS_PCLASS_3'
          Protocol class `3'.

OPTION_FLAGS
     Specifies or indicates the options flags associated with the data.  The
     OPTIONS_FLAGS field can be a bitwise OR of zero or more of the following
     values:
    `0'
          Return on error option is not selected.

    `1'
          Return on error option is selected.

SEQUENCE_SELECTION
     Specifies or indicates the "Signalling Link Selection" associated with the
     connection.

MESSAGE_PRIORITY
     Specifies or indicates the "Message Priority" associated with the
     connection.

IMPORTANCE
     Specifies or indicates the "Importance" associated with the connection.

3.2.3 Information Quality of Service Selection and Range
--------------------------------------------------------

* Menu:

* N_QOS_SEL_INFO_SCCP::
* N_QOS_RANGE_INFO_SCCP::


File: npi_sccp.info,  Node: N_QOS_SEL_INFO_SCCP

3.2.3.1 N_QOS_SEL_INFO_SCCP
...........................

 Format
.......

The `N_qos_sel_info_sccp_t' structure is formatted as follows:
     #define N_QOS_SEL_INFO_SCCP     0x0903
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_INFO_SCCP */
             np_ulong protocol_class;        /* protocol class */
             np_ulong option_flags;          /* options flags (return option) */
             np_ulong sequence_selection;    /* selected SLS value */
             np_ulong message_priority;      /* MTP message priority */
             np_ulong importance;            /* importance */
     } N_qos_sel_info_sccp_t;


File: npi_sccp.info,  Node: N_QOS_RANGE_INFO_SCCP

3.2.3.2 N_QOS_RANGE_INFO_SCCP
.............................

 Format
.......

The `N_qos_range_info_sccp_t' structure is formatted as follows:
     #define N_QOS_RANGE_INFO_SCCP   0x0904
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_RANGE_INFO_SCCP */
             np_ulong protocol_classes;      /* protocol class */
             np_ulong sequence_selection;    /* SLS range */
     } N_qos_range_info_sccp_t;

3.2.4 Information Quality of Service Indication
-----------------------------------------------

* Menu:

* N_QOS_SEL_INFR_SCCP::


File: npi_sccp.info,  Node: N_QOS_SEL_INFR_SCCP

3.2.4.1 N_QOS_SEL_INFR_SCCP
...........................

 Format
.......

The `N_qos_sel_infr_sccp_t' structure is formatted as follows:
     #define N_QOS_SEL_INFR_SCCP     0x0905
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_INFR_SCCP */
             np_ulong protocol_class;        /* protocol class */
             np_ulong option_flags;          /* options flags (return option) */
             np_ulong sequence_selection;    /* selected SLS value */
             np_ulong message_priority;      /* MTP message priority */
             np_ulong importance;            /* importance */
     } N_qos_sel_infr_sccp_t;

3.2.5 Data Quality of Service Selection
---------------------------------------

 N_QOS_SEL_DATA_MTP
...................

This quality of service structure type is used when selecting quality of
service parameters on a message by message basis with the `N_OPTMGMT_REQ'
primitive before issuing an N_DATA_REQ or `N_UNITDATA_REQ' primitive.

 Format
.......

The `N_qos_sel_data_mtp_t' structure is formatted as follows:
     #define N_QOS_SEL_DATA_MTP      0x0801
     typedef struct {
             ulong n_qos_type;               /* always N_QOS_SEL_DATA_MTP */
             ulong sls;                      /* signalling link selection */
             ulong mp;                       /* message priority */
     } N_qos_sel_data_mtp_t;

 Fields
.......

N_QOS_TYPE
     Specifies or indicates the quality of service structure type.  This field
     is always coded N_QOS_SEL_DATA_MTP.

SLS
     Specifies the value of the Signalling Link Selection field to use in
     outgoing SCCP messages, or indicates the value of the Signalling Link
     Selection field that was received in incoming SCCP messages.

MP
     Specifies the value of the Messae Priority field to use in outgoing SCCP
     messages, or indicates the value of the Message Priority field that was
     received in incoming SCCP messages.

 N_QOS_SEL_INFO_MTP
...................

This quality of service structure type is used when selecting quality of
service parameters for information with the N_INFO_ACK primitive.

     #define N_QOS_SEL_INFO_MTP      0x0803
     typedef struct {
             ulong n_qos_type;               /* always N_QOS_SEL_INFO_MTP */
             ulong pvar;                     /* protocol variant */
             ulong popt;                     /* protocol options */
             ulong sls;                      /* signalling link selection */
             ulong mp;                       /* message priority */
     } N_qos_sel_info_mtp_t;

 Fields
.......

N_QOS_TYPE
     Indicates the quality of service structure type.  This field is always
     coded N_QOS_SEL_INFO_MTP.

PVAR
     Indicates the SCCP protocol variant associated with the stream.

POPT
     Indicates the SCCP protocol options associated with the stream.

SLS
     Indicates the default Signalling Link Selection value to be used on
     outgoing messages not specifying a SLS value.

MP
     Indicates the default Message Priority value to be used on outgoing
     messages not specifying a MP value.

3.2.5.1 Information Quality of Service Range
............................................

 N_QOS_RANGE_INFO_MTP
.....................

This quality of service structure type is used when indicating the range
quality of service parameters for information with the N_INFO_ACK primitive.

 Format
.......

     #define N_QOS_RANGE_INFO_MTP    0x0804
     typedef struct {
             ulong n_qos_type;               /* always N_QOS_RANGE_INFO_MTP */
             ulong sls_range;                /* signalling link selection mask */
             ulong mp_range;                 /* message priority mask */
     } N_qos_range_info_mtp_t;

 Fields
.......

N_QOS_TYPE
     Indicates the quality of service structure type.  This field is always
     coded N_QOS_RANGE_INFO_MTP.

SLS_RANGE
     Indicates a bit mask that indicates the range of the SLS field.

MP_RANGE
     Indicates a bit mask that indicates the range of the MP field.


File: npi_sccp.info,  Node: NPI Connection Modes,  Prev: SCCP Quality of Service Formats,  Up: Quality of Service

3.3 NPI Connection Modes
========================


File: npi_sccp.info,  Node: Supported Services,  Next: Rules for Conformance,  Prev: Quality of Service,  Up: Top

4 Supported Services
********************

* Menu:

* Local Management Services::
* Connection-Oriented Mode Services::
* Connectionless Mode Services::
* SCCP Management Services::


File: npi_sccp.info,  Node: Local Management Services,  Next: Connection-Oriented Mode Services,  Up: Supported Services

4.1 Local Management Services
=============================

* Menu:

* Acknowledgement Service::
* Information Service::
* Options Management Service::
* Bind Service::


File: npi_sccp.info,  Node: Acknowledgement Service,  Next: Information Service,  Up: Local Management Services

4.1.1 Acknowledgement Service
-----------------------------

The NPI acknowledgement service is supported unchanged.


File: npi_sccp.info,  Node: Information Service,  Next: Options Management Service,  Prev: Acknowledgement Service,  Up: Local Management Services

4.1.2 Information Service
-------------------------

The NPI information service is supported unchanged.


File: npi_sccp.info,  Node: Options Management Service,  Next: Bind Service,  Prev: Information Service,  Up: Local Management Services

4.1.3 Options Management Service
--------------------------------

The NPI options management service is supported unchanged.  The NPI-SCCP
supports the Quality of Service structure types described under *note Quality
of Service::.


File: npi_sccp.info,  Node: Bind Service,  Prev: Options Management Service,  Up: Local Management Services

4.1.4 Bind Service
------------------

The NPI bind service is supported with minor alterations as follows:

  1. For the protocol addresses supported by NPI-SCCP, see *note Protocol
     Addressing::.

  2. SCCP provides both a connection-less and connection-oriented mode service.
     When binding an SCCP address, is is necessary to specify whether the bind
     is to the connection-less or connection-oriented mode service.  For the
     services supported by an SCCP provider, *note N_INFO_ACK: N_INFO_ACK.  For
     alterations to the bind service, see *note N_BIND_REQ: N_BIND_REQ.


File: npi_sccp.info,  Node: Connection-Oriented Mode Services,  Next: Connectionless Mode Services,  Prev: Local Management Services,  Up: Supported Services

4.2 Connection-Oriented Mode Services
=====================================

NPI-SCCP supports connection-oriented modes services for temporary and
permanent signalling connections for SCCP Protocol Classes 2 and 3.  An SCCP
provider conforming to this specification may also, as an implementation
option, provide support for a pseudo-connection-oriented service for SCCP
Protocol Classes 0 and 1.

* Menu:

* Signalling Connection Establishment Service::
* Signalling Connection Request Service::
* Normal Data Transfer Service::
* Expedited Data Transfer Service::
* Reset Service::
* Inform Service::
* Signalling Connection Release Service::


File: npi_sccp.info,  Node: Signalling Connection Establishment Service,  Next: Signalling Connection Request Service,  Up: Connection-Oriented Mode Services

4.2.1 Signalling Connection Establishment Service
-------------------------------------------------

 N-CONNECT
..........

The SCCP signalling connection establishment service offered by the "N-CONNECT"
primitives of ITU-T Recommendation Q.711 are provided directly by the
`N_CONN_REQ', `N_CONN_IND', `N_CONN_RES' and `N_CONN_CON' primitives of the
NPI.  NPI-SCCP defines some additional connection flags for use in these
primitives and defines the Quality of Service parameter structures in *note
Quality of Service::.

As is the fashion for NPI, some of the addresses (called address, calling
address or responding address) are implied by the address that is bound to the
Stream with the bind service.


File: npi_sccp.info,  Node: Signalling Connection Request Service,  Next: Normal Data Transfer Service,  Prev: Signalling Connection Establishment Service,  Up: Connection-Oriented Mode Services

4.2.2 Signalling Connection Request Service
-------------------------------------------

 N-REQUEST, N-REPLY
...................

The SCCP connection request service for embedded ISUP Type 1 and Type 2
requests is supported in the NPI by overloading the `N_CONN_REQ' and
`N_INFO_ACK' primitives.

The `N_CONN_REQ' primitive is used to implement the "N-REQUEST request" and
"N-REQUEST2 request" of the SCCP as described in ITU-T Recommendation Q.711, by
adding an addition flag to the CONN_FLAGS field in the `N_CONN_REQ' primitive
to specify that an "N-REQUEST" is to be performed instead of an "N-CONNECT".

The `N_INFO_ACK' primitive can then be used to implement the "N-REPLY"
primitive of ITU-T Recommendation Q.711 by obtaining the reply information in
the QOS_LENGTH and QOS_OFFSET fields of the primitive.  A Quality of Service
parameter structure type supporting the reply information is defined in *note
Quality of Service::.

For alterations to the `N_CONN_REQ' primitive, see *note N_CONN_REQ:
N_CONN_REQ.  For alterations to the `N_INFO_ACK' primitive, see *note
N_INFO_ACK: N_INFO_ACK.


File: npi_sccp.info,  Node: Normal Data Transfer Service,  Next: Expedited Data Transfer Service,  Prev: Signalling Connection Request Service,  Up: Connection-Oriented Mode Services

4.2.3 Normal Data Transfer Service
----------------------------------

 N-DATA
.......

The normal data transfer service is implemented largely unaltered.  However,
the SCCP "N-DATA request" primitive requires the ability to specify the
"importance" parameter for the primitive.  NPI-SCCP accomplishes this in two
ways: one by overloading the DATA_XFER_FLAGS field of the "N_DATA_REQ"
primitive, and another by providing a Quality of Service parameter for use as a
default if the flags are not specified. *Note N_DATA_REQ: N_DATA_REQ.


File: npi_sccp.info,  Node: Expedited Data Transfer Service,  Next: Reset Service,  Prev: Normal Data Transfer Service,  Up: Connection-Oriented Mode Services

4.2.4 Expedited Data Transfer Service
-------------------------------------

 N-EXPEDITED-DATA
.................

SCCP only supports the expedited data transfer service in SCCP Protocol Class
3.  However, for SCCP Protocol Class 3 operation, the service is implemented
largely unaltered.  *Note N_EXDATA_REQ: N_EXDATA_REQ.  Although SCCP does
support the negotiation of SCCP Protocol Class, it does not support the
separate end-to-end negotiation of expedited data selection.  *Note N_CONN_REQ:
N_CONN_REQ, and *note N_INFO_ACK: N_INFO_ACK.


File: npi_sccp.info,  Node: Reset Service,  Next: Inform Service,  Prev: Expedited Data Transfer Service,  Up: Connection-Oriented Mode Services

4.2.5 Reset Service
-------------------

 N-RESET
........

SCCP only supports the reset service in SCCP Protocol Class 3.  In SCCP
Protocol Class 2 an attempt to reset the connection with an "N-RESET request"
will result in an "N-DISCONNECT indication".  Otherwise, the NPI reset service
is implemented largely unaltered.


File: npi_sccp.info,  Node: Inform Service,  Next: Signalling Connection Release Service,  Prev: Reset Service,  Up: Connection-Oriented Mode Services

4.2.6 Inform Service
--------------------

 N-INFORM
.........

SCCP supports the inform service for connection-oriented protocol classes (2
and 3).  The inform service can be used to communicate changes in SCCP user or
provider failure, congestion or anticipated Quality of Service for a given
connection.

Under NPI-SCCP, the "N-INFORM request" primitive is issued by the SCCP user to
inform the SCCP provider of a change in SCCP user failure, congestion or change
in Quality of Service.  The "N-INFORM indication" primitive is issued by the
SCCP provider to inform the SCCP user of a change in SCCP provider failure,
congestion or change in Quality of Service.

The SCCP inform service can be overloaded on top of the NPI reset and option
management services.  A specialize set of RESET_REASON values are provided for
this purpose.


File: npi_sccp.info,  Node: Signalling Connection Release Service,  Prev: Inform Service,  Up: Connection-Oriented Mode Services

4.2.7 Signalling Connection Release Service
-------------------------------------------

 N-DISCONNECT
.............

The NPI disconnect service supports the SCCP signalling connection release
service largely unaltered and the SCCP "N-DISCONNECT" primitives map directly
onto those of NPI.


File: npi_sccp.info,  Node: Connectionless Mode Services,  Next: SCCP Management Services,  Prev: Connection-Oriented Mode Services,  Up: Supported Services

4.3 Connectionless Mode Services
================================

* Menu:

* Unit Data Transfer Service::
* Notice Service::


File: npi_sccp.info,  Node: Unit Data Transfer Service,  Next: Notice Service,  Up: Connectionless Mode Services

4.3.1 Unit Data Transfer Service
--------------------------------

 N-UNIT-DATA
............

The NPI unit data transfer service supports the SCCP unit data transfer service
largely unaltered.  The SCCP "N-UNIT-DATA request" primitive requires the
ability to specify options and Quality of Service parameters that are not
provided for directly in the `N_UNITDATA_REQ' primitive.  The `OpenSS7 Project'
overloads the RESERVED_LENGTH fields of the `N_UNITDATA_REQ' as QOS_LENGTH and
QOS_OFFSET fields for passing Quality of Service parameters and options with
the request.


File: npi_sccp.info,  Node: Notice Service,  Prev: Unit Data Transfer Service,  Up: Connectionless Mode Services

4.3.2 Notice Service
--------------------

 N-NOTICE
.........


File: npi_sccp.info,  Node: SCCP Management Services,  Prev: Connectionless Mode Services,  Up: Supported Services

4.4 SCCP Management Services
============================

* Menu:

* User Status Service::
* Signalling Point Status Service::
* Coordination Service::


File: npi_sccp.info,  Node: User Status Service,  Next: Signalling Point Status Service,  Up: SCCP Management Services

4.4.1 User Status Service
-------------------------

 N-STATE
........


File: npi_sccp.info,  Node: Signalling Point Status Service,  Next: Coordination Service,  Prev: User Status Service,  Up: SCCP Management Services

4.4.2 Signalling Point Status Service
-------------------------------------

 N-PCSTATE
..........


File: npi_sccp.info,  Node: Coordination Service,  Prev: Signalling Point Status Service,  Up: SCCP Management Services

4.4.3 Coordination Service
--------------------------

 N-COORD
........


File: npi_sccp.info,  Node: Rules for Conformance,  Next: Extension Primitives,  Prev: Supported Services,  Up: Top

5 Rules for Conformance
***********************

* Menu:

* Local Management Primitives::
* CONS Connection Establishment::
* CONS Normal Data Transfer::
* CONS Receipt Confirmation Service::
* CONS Expedited Data Transfer Service::
* CONS Reset Service::
* CONS Network Connection Release::
* CLNS::


File: npi_sccp.info,  Node: Local Management Primitives,  Next: CONS Connection Establishment,  Up: Rules for Conformance

5.1 Local Management Primitives
===============================

* Menu:

* N_INFO_REQ::
* N_INFO_ACK::
* N_BIND_REQ::
* N_BIND_ACK::
* N_UNBIND_REQ::
* N_OPTMGMT_REQ::
* N_ERROR_ACK::
* N_OK_ACK::


File: npi_sccp.info,  Node: N_INFO_REQ,  Next: N_INFO_ACK,  Up: Local Management Primitives

5.1.1 N_INFO_REQ
----------------


File: npi_sccp.info,  Node: N_INFO_ACK,  Next: N_BIND_REQ,  Prev: N_INFO_REQ,  Up: Local Management Primitives

5.1.2 N_INFO_ACK
----------------

 Parameters
...........

NSDU_SIZE
     Indicates the maximum size of the Network Service Data Unit in octets.

ENSDU_SIZE
     Indicates the maximum size of the Expedited Network Service Data Unit in
     octets.

CDATA_SIZE
     Indicates the maximum size of data included in the `N_CONN_REQ',
     `N_CONN_IND', `N_CONN_RES' and `N_CONN_CON' primitives.

DDATA_SIZE
     Indicates the maximum size of data included in the `N_DISCON_REQ' or
     `N_DISCON_IND' primitives.

ADDR_SIZE
     Indicates the maximum size of an address.  This is the size of the
     `sockaddr_sccp' structure.

ADDR_LENGTH
     Indicates the length of the associated protocol address.

ADDR_OFFSET
     Indicates the offset of the associated protocol address from the beginning
     of the `M_PCPROTO' message block.

QOS_LENGTH
     Indicates the length of the selected quality of service parameters.

QOS_OFFSET
     Indicates the offset of the selected quality of service parameters from
     the beginning of the `M_PCPROTO' message block.

QOS_RANGE_LENGTH
     Indicates the length of the range of quality of service parameters.

QOS_RANGE_OFFSET
     Indicates the offset of the range of quality of service parameters from
     the beginning of the `M_PCPROTO' message block.

OPTIONS_FLAGS
     Indicates the options flags.

NIDU_SIZE
     Indicates the maximum size of the Network Interface Data Unit in octets.

SERV_TYPE
     Indicates the service type.  The service type can be one of the following:
    `CLNS'
          Indicates that the NSP is in Connection-less mode for the current
          Stream.

    `CONS'
          Indicates that the NSP is in Connection-oriented mode for the current
          Stream.

CURRENT_STATE
     Indicates the current state of the NSP.  The current states can be one of
     the following:
    `NS_UNBND'
          Indicates that the interface is not bound to a network address.

    `NS_WACK_BREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_BIND_REQ' primitive.

    `NS_WACK_UREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_UNBIND_REQ' primitive.

    `NS_IDLE'
          Indicates that the interface is idle.

    `NS_WACK_OPTREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_OPTMGMT_REQ' primitive.

    `NS_WACK_RRES'
          Indicates that the interface is pending local acknowledgment for an
          `N_RESET_RES' primitive.

    `NS_WCON_CREQ'
          Indicates that the interface is awaiting confirmation of an
          `N_CONN_REQ' primitive.

    `NS_WRES_CIND'
          Indicates that the interface is awaiting response to an outstanding
          `N_CONN_IND' primitive.

    `NS_WACK_CRES'
          Indicates that the interface is pending local acknowledgment for an
          `N_CONN_RES' primitive.

    `NS_DATA_XFER'
          Indicates that the interface is in data transfer.

    `NS_WCON_RREQ'
          Indicates that the interface is awaiting confirmation to an
          outstanding `N_RESET_REQ' primitive.

    `NS_WRES_RIND'
          Indicates that the interface is awaiting response to an outstanding
          `N_RESET_IND' primitive.

    `NS_WACK_DREQ6'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_RIND'
          state.

    `NS_WACK_DREQ7'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_CIND'
          state.

    `NS_WACK_DREQ9'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_DATA_XFER'
          state.

    `NS_WACK_DREQ10'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WCON_RREQ'
          state.

    `NS_WACK_DREQ11'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_RIND'
          state.

PROVIDER_TYPE
     Indicates the type of NS provider.  The value of this field can be one of
     the following:
    `N_SNICFP'
          The provider is a subnetwork independent convergence
          function/protocol sub-layer of the network layer.

    `N_SUBNET'
          The provider is a subnetwork.

NODU_SIZE
     Indicates the Network Optimal Data Unit size in octets.

PROTOID_LENGTH
     Indicates the length of the bound protocol identifiers.

PROTOID_OFFSET
     Indicates the offset of the bound protocol identifiers from the beginning
     of the `M_PCPROTO' message block.

NPI_VERSION
     Indicates the version of the NPI interface.

 Rules
......

Rules for sizes:

  1. SCCP conforming NSP will return a value of `N_INVALID' (`-1UL') for the
     ETSDU_SIZE data size, indicating that the NSP does not support expedited
     data transfer.

  2. SCCP conforming NSP will return the same defined value in the NSDU_SIZE,
     CDATA_SIZE and DDATA_SIZE fields.  This value is the maximum size of a NSU
     SDU that can be guaranteed transferred by the NSP.  The exact value of
     these fields will depend on the signalling links supported by the SCCP
     provider.

  3. SCCP conforming NSP will return zero (`0'), `N_INVALID' (`-1UL') or the
     same value as NSDU_SIZE in the CDATA_SIZE and field.  When the SCCP
     provider returns a value of zero (`0') or `N_INVALID' (`-1UL') for
     CDATA_SIZE, it is indicating that connection data is not permitted with
     the `N_CONN_REQ' primitive.  When the SCCP provider returns the same value
     as NSDU_SIZE, it is indicating that normal data is permitted with the
     `N_CONN_REQ' primitive.

  4. SCCP conforming NSP will return zero (`0'), `N_INVALID' (`-1UL') or the
     same value as NSDU_SIZE in the DDATA_SIZE and field.  When the SCCP
     provider returns a value of zero (`0') or `N_INVALID' (`-1UL') for
     DDATA_SIZE, it is indicating that disconnection data is not permitted with
     the `N_DISCON_REQ' primitive.  When the SCCP provider returns the same
     value as NSDU_SIZE, it is indicating that normal data is permitted with the
     `N_DISCON_REQ' primitive.

  5. SCCP conforming NSP will return a value in the NIDU_SIZE field that is
     less than or equal to the NSDU_SIZE field, but must not be set to
     `N_INVALID' (`-1UL') or zero (`0').(1)

  6. SCCP conforming NSP will return a value in the NODU_SIZE field that is
     less than or equal to the NSDU_SIZE field, but must not be set to
     `N_INVALID' (`-1UL') or zero (`0').(2)

  7. SCCP conforming NSP will return the size of the sockaddr structure in the
     ADDR_SIZE field.

Rules for provider type:

  1. When the stream is bound and `MTP_CONNECTION_ORIENTED' or
     `MTP_CONNECTIONLESS' flags were set in the `N_BIND_REQ', the service type
     will be set according to the requested service type.  (See *note
     N_BIND_REQ:: and *note N_BIND_ACK::.)

  2. When neither `MTP_CONNECTION_ORIENTED' nor `MTP_CONNECTIONLESS' flags are
     set in the `N_BIND_REQ', or the stream is unbound, the SCCP conforming NSP
     will return a service type of `CLNS' when bound to non-call-related SCCP
     Users.  The SCCP conforming NSP will return a service type of `CLNS' for
     the following SCCP Users:
        * SCCP--Signalling Connection Control Part

        * MTUP--SCCP Test User Part

        * GCP--Gateway Control Protocol

        * Any other non-call-related SCCP User specified by the appropriate
          specification.

  3. When neither `MTP_CONNECTION_ORIENTED' nor `MTP_CONNECTIONLESS' flags are
     set in the `N_BIND_REQ', or the stream is unbound, the SCCP conforming NSP
     will return a service type of CONS when bound to call related SCCP Users.
     The SCCP conforming NSP will return a service type of CONS for the
     following SCCP Users:
        * TUP--Telephone User Part

        * NUP--Network User Part

        * ISUP--ISDN User Part

        * DUP--Data User Part

        * B-ISDN--Broadband ISDN User Part

        * S-ISDN--Satellite ISDN User Part

        * SPNE UP--Signal Processing Network Equipment User Part

        * AAL2 STC--AAL Type 2 STC

        * BICC--Bearer Independent Call Control

        * Any other call-related SCCP User specified by the appropriate
          specification.

  4. SCCP conforming NSP will not return a service type of COTS_ORD.

Rules for flags:

  1. Because the SCCP does not support receipt confirmation, the SCCP
     conforming NSP will not set the `REC_CONF_OPT' flag in the OPTIONS_FLAGS
     field.

  2. Because the SCCP does not support expedited data, the SCCP conforming NSP
     will not set the `EX_DATA_OPT' flag in the OPTIONS_FLAGS field.

Rules for states:

  1. Because SCCP only supports pseudo-connections, the SCCP conforming NSP
     will never return a CURRENT_STATE of `NS_WRES_CIND', `NS_WACK_CRES',
     `NS_WACK_DREQ6', `NS_WACK_DREQ7' or `NS_WACK_DREQ11'.

  2. Because SCCP does not support the reset service from the SCCP-User, the
     SCCP conforming NSP will never return a CURRENT_STATE of `NS_WCON_RREQ'.

Rules for Quality of Service Parameters:

  1. SCCP conforming NSP will retrun an `N_QOS_SEL_INFO_MTP' structure
     indicated in the QOS_LENGTH and QOS_OFFSET fields.

  2. SCCP conforming NSP will return an `N_QOS_RANGE_INFO_MTP' structure
     indicated in the QOS_RANGE_LENGTH and QOS_RANGE_OFFSET fields.

---------- Footnotes ----------

(1) Typically, the NIDU_SIZE will be the same value of the NSDU_SIZE for normal
SS7 links.  For ATM and High-Speed SS7 liks, the NIDU_SIZE will typically be
smaller than the NSDU_SIZE when the maximum SIF size supported by the link is
greater than the maximum size of an M_DATA message block.

(2) Typically the NODU_SIZE field will be equal to the NIDU_SIZE field.


File: npi_sccp.info,  Node: N_BIND_REQ,  Next: N_BIND_ACK,  Prev: N_INFO_ACK,  Up: Local Management Primitives

5.1.3 N_BIND_REQ
----------------

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_BIND_ACK,  Next: N_UNBIND_REQ,  Prev: N_BIND_REQ,  Up: Local Management Primitives

5.1.4 N_BIND_ACK
----------------

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_UNBIND_REQ,  Next: N_OPTMGMT_REQ,  Prev: N_BIND_ACK,  Up: Local Management Primitives

5.1.5 N_UNBIND_REQ
------------------

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_OPTMGMT_REQ,  Next: N_ERROR_ACK,  Prev: N_UNBIND_REQ,  Up: Local Management Primitives

5.1.6 N_OPTMGMT_REQ
-------------------

 Parameters
...........

QOS_LENGTH
     Specifies the length of the Quality of Service Parameter values.

QOS_OFFSET
     Specifies the offset of the Quality of Service Parameter values from the
     beginning of the `M_PROTO' or `M_PCPROTO' message block.

OPTMGMT_FLAGS
     Specifies the options management flags associated with the request (see
     "Flags" below).

 Flags
......

`DEFAULT_RC_SEL'
     Specifies if default receipt confirmation is selected.

 Quality of Service Parameters
..............................

N_QOS_TYPE
     Specifies the QOS structure type.  For the `N_OPTMGMT_REQ' primitive, the
     SCCP conforming NSP will demand a structure type of `N_QOS_SEL_DATA_SCCP'.

PROTOCOL_CLASS
     Specifies or indicates the protocol class of the data.  The PROTOCOL_CLASS
     field can have one of the following values:
    `N_QOS_PCLASS_0'
          Protocol class `0'.

    `N_QOS_PLCASS_1'
          Protocol class `1'.

OPTION_FLAGS
     Specifies or indicates the options flags associated with the data.  The
     OPTIONS_FLAGS field can be a bitwise OR of zero or more of the following
     values:
    `0'
          Return on error option is not selected.

    `1'
          Return on error option is selected.

SEQUENCE_SELECTION
     Specifies or indicates the "Signalling Link Selection" associated with the
     transmitted or received data.

MESSAGE_PRIORITY
     Specifies or indicates the "Message Priority" associated with the
     transmitted or received data.

IMPORTANCE
     Specifies or indicates the "Importance" associated with the transmitted or
     received data.

 Rules
......

Rules for issuing primitive:

  1. When the purpose of issuing the primtiive is for the NSU to set the QOS
     parameters for all subsequently queued data transmissions, the primitive
     should be issued as an `M_PROTO' message, and the issuer must await
     acknowledgement before issuing any other primitives.

  2. When the purpose of issuing the primitive is for the NSU to set the QOS
     parameters for all data transmissions (including those in queue), the
     primitive should be issued as an `M_PCPROTO' message, and the issuer must
     await acknowledgement before issuing any other primitives.

Rules for QOS parameters:

  1. The QOS parameters use for any subsequent `N_DATA_REQ' or `N_UNITDATA_REQ'
     primitive will be the values set with the `N_OPTMGMT_REQ' primitive.

  2. For the MESSAGE_PRIORITY QOS parameter to have any effect, the NSU must be
     bound to a Stream supporting a protocol variant that provides for "Message
     Priority" (e.g. ANSI *note T1.111: T1.111.)

  3. Options for data transfer set with this primitive will only be valid for
     request or indication primitives issued after this primitive is
     successfully acknowledged.


File: npi_sccp.info,  Node: N_ERROR_ACK,  Next: N_OK_ACK,  Prev: N_OPTMGMT_REQ,  Up: Local Management Primitives

5.1.7 N_ERROR_ACK
-----------------

 Parameters
...........

ERROR_PRIM        Indicates the primitive that was in error.
NPI_ERROR         Indicates the NPI error that occurred.
UNIX_ERROR        When NPI_ERROR is [NSYSERR], UNIX_ERROR indicates the UNIX
                 system error that occurred.

 Rules
......

Rules for error primitive:
  1. NPI-SCCP extends the error primitives that can be indicated in the
     ERROR_PRIM field of the `N_ERROR_ACK' primitive.  The ERROR_PRIM field can
     include the following additional values:
     `N_INFORM_REQ'  Inform request. (*Note N_INFORM_REQ: N_INFORM_REQ.)
     `N_COORD_REQ'   Coordinate request. (*Note N_COORD_REQ: N_COORD_REQ.)
     `N_COORD_RES'   Coordinate response. (*Note N_COORD_RES: N_COORD_RES.)
     `N_STATE_REQ'   State request. (*Note N_STATE_REQ: N_STATE_REQ.)

  2. In addition, the SCCP conforming NSP may issue an `N_ERROR_ACK' primitive
     with a value in the ERROR_PRIM field as follows:
     `N_NOTICE_IND'  Notice indication. (*Note N_NOTICE_IND: N_NOTICE_IND.)
     `N_INFORM_IND'  Inform indication. (*Note N_INFORM_IND: N_INFORM_IND.)
     `N_COORD_IND'   Coordinate indication. (*Note N_COORD_IND: N_COORD_IND.)
     `N_COORD_CON'   Coordinate confirmation. (*Note N_COORD_CON: N_COORD_CON.)
     `N_STATE_IND'   State indication. (*Note N_STATE_IND: N_STATE_IND.)
     `N_PCSTATE_IND' Point Code State indication. (*Note N_PCSTATE_IND:
                     N_PCSTATE_IND.)
     `N_TRAFFIC_IND' Traffic indication. (*Note N_TRAFFIC_IND: N_TRAFFIC_IND.)

Rules for issuing primitive:
  1. The rules for issuing the `N_ERROR_ACK' primitive are the same as in the
     NPI (*note NPI: NPI.).

  2. The `N_ERROR_ACK' primitive can also be issued under the circumstances
     described under *note Extension Primitives::.  In these situations, the
     primitive will have one of the extended ERROR_PRIM values described above.


File: npi_sccp.info,  Node: N_OK_ACK,  Prev: N_ERROR_ACK,  Up: Local Management Primitives

5.1.8 N_OK_ACK
--------------

 Parameters
...........

CORRECT_PRIM      Indicates the primitive that was received successfully.

 Rules
......

Rules for correct primitive:
  1. NPI-SCCP extends the correct primitives that can be indicated in the
     CORRECT_PRIM field of the `N_OK_ACK' primitive.  The CORRECT_PRIM field
     can include the following additional values:
     `N_INFORM_REQ'  Inform request. (*Note N_INFORM_REQ: N_INFORM_REQ.)
     `N_COORD_REQ'   Coordinate request. (*Note N_COORD_REQ: N_COORD_REQ.)
     `N_COORD_RES'   Coordinate response. (*Note N_COORD_RES: N_COORD_RES.)
     `N_STATE_REQ'   State request. (*Note N_STATE_REQ: N_STATE_REQ.)

Rules for issuing primitive:
  1. The rules for issuing the `N_OK_ACK' primitive are the same as in the NPI
     (*note NPI: NPI.).

  2. The `N_OK_ACK' primitive can also be issued under the circumstances
     described under *note Extension Primitives::.  In these situations, the
     primitive will have one of the extended CORRECT_PRIM values described
     above.


File: npi_sccp.info,  Node: CONS Connection Establishment,  Next: CONS Normal Data Transfer,  Prev: Local Management Primitives,  Up: Rules for Conformance

5.2 CONS Connection Establishment
=================================

* Menu:

* N_CONN_REQ::
* N_CONN_IND::
* N_CONN_RES::
* N_CONN_CON::


File: npi_sccp.info,  Node: N_CONN_REQ,  Next: N_CONN_IND,  Up: CONS Connection Establishment

5.2.1 N_CONN_REQ
----------------

The `N_CONN_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-CONNECT request" primitive of the SCCP:

 Parameters
...........

DEST_LENGTH       Specifies the length of the destination address.
DEST_OFFSET       Specifies the offset of the destination address from the
                 beginning of the `M_PROTO' message block.
CONN_FLAGS        Specifies the connection option flags.  (See "Flags" below.)
QOS_LENGTH        Specifies the length of the Quality of Service parameters.
QOS_OFFSET        Specifies the offset of the Quality of Service parameters from
                 the beginning of the `M_PROTO' message block.

 Flags
......

`REC_CONF_OPT'    Specifies that the receipt confirmation option is to be
                 selected on the connection.
`EX_DATA_OPT'     Sepcifies that the expedited data option is to be selected on
                 the connection.

 Quality of Service Parameters
..............................

N_QOS_TYPE        Specifies the type of Quality of Service parameter structure
                 to use.  Always `N_QOS_SEL_CONN_SCCP'.
PROTOCOL_CLASS    Specifies the protocol class.  This field can be one of the
                 following values:
                 `N_QOS_PCLASS_0'
                      Specifies protocol class 0 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_1'
                      Specifies protocol class 1 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_2'
                      Specifies protocol class 2 (connection-oriented mode
                      without flow control or expedited data.)
                 
                 `N_QOS_PCLASS_3'
                      Specifies protocol class 3 (connection-oriented mode with
                      flow control and supporting expedited data.)
OPTION_FLAGS      Specifies or indicates the options flags for the connection.
                 The OPTION_FLAGS field can be a bitwise OR of zero or more of
                 the following values:
                 `0'
                      Return on error option is not selected.
                 
                 `1'
                      Return on error option is selected.
SEQUENCE_SELECTION Specifies the "Signalling Link Selection" associated with the
                 connection.
MESSAGE_PRIORITY  Specifies the "Message Priority" associated with the
                 connection.
IMPORTANCE        Specifies the "Importance" associated with the connection.

 Rules
......

Rules for issuing primitive:

  1. Because the source address is implied by the Stream upon which the
     primitive is issued, the Stream must be bound to a specific SCCP address
     and not bound with the `DEFAULT_LISTENER' flag set in the `N_BIND_REQ'
     primitive.

Rules for flags:

  1. SCCP does not support receipt confirmation; therefore, it is an error to
     specify the `REC_CONF_OPT' option in CONN_FLAGS.  The SCCP conforming
     provider is permitted to ignore this flag.

  2. SCCP only supports expedited data in protocol class 3; therefore, it is an
     error to specify the `EX_DATA_OPT' option in CONN_FLAGS unless the
     PROTOCOL_CLASS indicated in the Quality of Service parameters is
     `N_QOS_PCLASS_3'.

  3. SCCP supports passing the "Importance" of the connection request.  This is
     passed in the connection flags using the
     `N_SCCP_SET_IMPORTANCE(flags,importance)' macro.

Rules for Quality of Service parameters:

  1. Only one value can be set in PROTOCOL_CLASS.  When set to `N_QOS_PCLASS_0'
     or `N_QOS_PCLASS_1', the resulting connection will be a
     pseudo-connection-oriented protocol connection.  When set to
     `N_QOS_PCLASS_2' or `N_QOS_PCLASS_3', the resulting connection will be a
     true connection-oriented protocol connection.

  2. Some SCCP providers may restrict the range of protocol classes that is
     available for connection.  The range of protocol classes available for a
     connection request will be present in the QOS_RANGE_LENGTH and
     QOS_RANGE_OFFSET fields of the N_INFO_ACK primitive.  See *note
     N_INFO_ACK: N_INFO_ACK, and *note N_QOS_RANGE_INFO_SCCP:
     N_QOS_RANGE_INFO_SCCP.

  3. For protocol class 2 or 3 connections, the OPTIONS_FLAGS field is coded
     zero (`0') or `QOS_UNKNOWN' and is ignored by the provider.  For protocol
     class 0 or 1 pseudo-connections, this field can take on one of the values
     listed above, where: `0' indicates that unit data messages are to be sent
     without the return on error options, and `1' indicates that unit data
     messages are to be sent with the return on error option.

  4. The SEQUENCE_SELECTION field is coded zero (`0') or `QOS_UNKNOWN' and is
     ignored by the provider.  The "Signalling Link Selection" associated with
     the connection is selected by the provider.  For protocol class 0
     pseudo-connections, an new "Signalling Link Selection" will be generated
     for each transmitted message.  For protocol class 1 pseudo-connections and
     protocol class 2 or 3  connection, a "Signalling Link Selection" will be
     assigned upon successful receipt of the connection request.

  5. The MESSAGE_PRIORITY field is coded to the message priority that will be
     assigned to messages transmitted with the `N_DATA_REQ' primitive.  The
     range of message priority that may be selected for a given connection is
     provided by the QOS_RANGE_LENGTH and QOS_RANGE_OFFSET fields of the
     `N_INFO_ACK' primitive.  See *note N_INFO_ACK: N_INFO_ACK, and *note
     N_QOS_RANGE_INFO_SCCP: N_QOS_RANGE_INFO_SCCP.

  6. The IMPORTANCE field is coded to the importance that will be assigned to
     messages transmitted with the `N_DATA_REQ' primitive when an importance is
     not provided in the DATA_XFER_FLAGS field of that primitive.  The range of
     importance that may be selected for a given connection is provided in the
     QOS_RANGE_LENGTH and QOS_RANGE_OFFSET fields of the `N_INFO_ACK'
     primitive.  See *note N_INFO_ACK: N_INFO_ACK, and *note
     N_QOS_RANGE_INFO_SCCP: N_QOS_RANGE_INFO_SCCP.

Rules for data:

  1. SCCP does not have the same restriction on data associated with the
     connection request as does X.213 (which only allows 128 bytes of
     connection data).  The maximum amount of data that can be associated with
     the connection request is returned in the CDATA_SIZE field of the
     `N_INFO_ACK' primitive.


File: npi_sccp.info,  Node: N_CONN_IND,  Next: N_CONN_RES,  Prev: N_CONN_REQ,  Up: CONS Connection Establishment

5.2.2 N_CONN_IND
----------------

The `N_CONN_IND' primitive is used to implement the "Q.711 N-CONNECT
indication" primitive of the SCCP:

 Parameters
...........

DEST_LENGTH       Indicates the length of the destination address.
DEST_OFFSET       Indicates the offset of the destination address from the
                 beginning of the `M_PROTO' message block.
SRC_LENGTH        Indicates the length of the source address.
SRC_OFFSET        Indicates the offset of the source address address from the
                 beginning of the `M_PROTO' message block.
SEQ_NUMBER        Indicates the sequence number identifying the outstanding
                 connection indication.
CONN_FLAGS        Indicates the connection options flags associated with the
                 connection indication.
QOS_LENGTH        Indicates the length of the Quality of Service parameters.
QOS_OFFSET        Indicates the offset of the Quality of Service parameters from
                 the beginning of the `M_PROTO' message block.

 Quality of Service Parameters
..............................

N_QOS_TYPE        Indicates the type of Quality of Service parameter structure
                 to use.  Always `N_QOS_SEL_CONN_SCCP'.
PROTOCOL_CLASS    Indicates the protocol class.  This field can be one of the
                 following values:
                 `N_QOS_PCLASS_0'
                      Specifies protocol class 0 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_1'
                      Specifies protocol class 1 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_2'
                      Specifies protocol class 2 (connection-oriented mode
                      without flow control or expedited data.)
                 
                 `N_QOS_PCLASS_3'
                      Specifies protocol class 3 (connection-oriented mode with
                      flow control and supporting expedited data.)
OPTION_FLAGS      Indicates the options flags for the connection.  The
                 OPTION_FLAGS field can be a bitwise OR of zero or more of the
                 following values:
                 `0'
                      Return on error option was not selected.
                 
                 `1'
                      Return on error option was selected.
SEQUENCE_SELECTIONS Indicates the "Signalling Link Selection" associated with the
                 connection.
MESSAGE_PRIORITY  Indicates the "Message Priority" associated with the
                 connection.
IMPORTANCE        Indicates the "Importance" associated with the connection.

 Rules
......


File: npi_sccp.info,  Node: N_CONN_RES,  Next: N_CONN_CON,  Prev: N_CONN_IND,  Up: CONS Connection Establishment

5.2.3 N_CONN_RES
----------------

The `N_CONN_RES' primitive is used by the NPI-SCCP to implement the "Q.711
N-CONNECT response" primitive of the SCCP:

 Parameters
...........

TOKEN_VALUE       Specifies the token value of the Stream upon which the
                 connection is to be accepted, or zero (`0') when the connection
                 is to be accepted on the same Stream as the connection
                 indication (upon which the `N_CONN_RES' primitive is issued).
RES_LENGTH        Specifies the length of the responding address.
RES_OFFSET        Specifies the offset of the responding address from the
                 beginning of the `M_PROTO' message block.
SEQ_NUMBER        Specifies the sequence number of an outstanding connection
                 indication and is used to identify the indictation to which
                 this `N_CONN_RES' pirmitive responds.
CONN_FLAGS        Specifies the connection options flags associated with the
                 accepted connection.
QOS_LENGTH        Specifies the length of the Quality of Service parameters.
QOS_OFFSET        Specifies the offset of the Quality of Service parameters from
                 the beginning of the `M_PROTO' message block.

 Quality of Service Parameters
..............................

N_QOS_TYPE        Specifies the type of Quality of Service parameter structure
                 to use.  Always `N_QOS_SEL_CONN_SCCP'.
PROTOCOL_CLASS    Indicates the protocol class.  This field can be one of the
                 following values:
                 `N_QOS_PCLASS_0'
                      Specifies protocol class 0 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_1'
                      Specifies protocol class 1 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_2'
                      Specifies protocol class 2 (connection-oriented mode
                      without flow control or expedited data.)
                 
                 `N_QOS_PCLASS_3'
                      Specifies protocol class 3 (connection-oriented mode with
                      flow control and supporting expedited data.)
OPTION_FLAGS      Indicates the options flags for the connection.  The
                 OPTION_FLAGS field can be a bitwise OR of zero or more of the
                 following values:
                 `0'
                      Return on error option was not selected.
                 
                 `1'
                      Return on error option was selected.
SEQUENCE_SELECTIONS Indicates the "Signalling Link Selection" associated with the
                 connection.
MESSAGE_PRIORITY  Indicates the "Message Priority" associated with the
                 connection.
IMPORTANCE        Indicates the "Importance" associated with the connection.

 Rules
......


File: npi_sccp.info,  Node: N_CONN_CON,  Prev: N_CONN_RES,  Up: CONS Connection Establishment

5.2.4 N_CONN_CON
----------------

The `N_CONN_CONN' primitive is used by the NPI-SCCP to implement the "Q.711
N-CONNECT confirmation" primitive of the SCCP:

 Parameters
...........

RES_LENGTH        Specifies the length of the responding address.
RES_OFFSET        Specifies the offset of the responding address from the
                 beginning of the `M_PROTO' message block.
CONN_FLAGS        Specifies the connection options flags associated with the
                 accepted connection.
QOS_LENGTH        Specifies the length of the Quality of Service parameters.
QOS_OFFSET        Specifies the offset of the Quality of Service parameters from
                 the beginning of the `M_PROTO' message block.

 Quality of Service Parameters
..............................

N_QOS_TYPE        Indicates the type of Quality of Service parameter structure
                 to use.  Always `N_QOS_SEL_CONN_SCCP'.
PROTOCOL_CLASS    Indicates the protocol class.  This field can be one of the
                 following values:
                 `N_QOS_PCLASS_0'
                      Specifies protocol class 0 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_1'
                      Specifies protocol class 1 (pseudo-connection oriented
                      mode).
                 
                 `N_QOS_PCLASS_2'
                      Specifies protocol class 2 (connection-oriented mode
                      without flow control or expedited data.)
                 
                 `N_QOS_PCLASS_3'
                      Specifies protocol class 3 (connection-oriented mode with
                      flow control and supporting expedited data.)
OPTION_FLAGS      Indicates the options flags for the connection.  The
                 OPTION_FLAGS field can be a bitwise OR of zero or more of the
                 following values:
                 `0'
                      Return on error option was not selected.
                 
                 `1'
                      Return on error option was selected.
SEQUENCE_SELECTIONS Indicates the "Signalling Link Selection" associated with the
                 connection.
MESSAGE_PRIORITY  Indicates the "Message Priority" associated with the
                 connection.
IMPORTANCE        Indicates the "Importance" associated with the connection.

 Rules
......


File: npi_sccp.info,  Node: CONS Normal Data Transfer,  Next: CONS Receipt Confirmation Service,  Prev: CONS Connection Establishment,  Up: Rules for Conformance

5.3 CONS Normal Data Transfer
=============================

* Menu:

* N_DATA_REQ::
* N_DATA_IND::


File: npi_sccp.info,  Node: N_DATA_REQ,  Next: N_DATA_IND,  Up: CONS Normal Data Transfer

5.3.1 N_DATA_REQ
----------------

The `N_DATA_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-DATA request" primitive of the SCCP:

 Parameters
...........

DATA_XFER_FLAGS  

 Rules
......


File: npi_sccp.info,  Node: N_DATA_IND,  Prev: N_DATA_REQ,  Up: CONS Normal Data Transfer

5.3.2 N_DATA_IND
----------------

The `N_DATA_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-DATA indication" primitive of the SCCP:

 Parameters
...........

DATA_XFER_FLAGS  

 Rules
......


File: npi_sccp.info,  Node: CONS Receipt Confirmation Service,  Next: CONS Expedited Data Transfer Service,  Prev: CONS Normal Data Transfer,  Up: Rules for Conformance

5.4 CONS Receipt Confirmation Service
=====================================

* Menu:

* N_DATACK_REQ::
* N_DATACK_IND::


File: npi_sccp.info,  Node: N_DATACK_REQ,  Next: N_DATACK_IND,  Up: CONS Receipt Confirmation Service

5.4.1 N_DATACK_REQ
------------------

The `N_DATACK_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-DATA-ACKNOWLEDGE request" primitive of the SCCP:

 Rules
......

Rules for issuing primitive:

  1. SCCP does not support receipt confirmation; therefore, this primitive is
     not supported by the SCCP conforming NSP.


File: npi_sccp.info,  Node: N_DATACK_IND,  Prev: N_DATACK_REQ,  Up: CONS Receipt Confirmation Service

5.4.2 N_DATACK_IND
------------------

The `N_DATACK_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-DATA-ACKNOWLEDGE indication" primitive of the SCCP:

 Rules
......

Rules for issuing primitive:

  1. SCCP does not support receipt confirmation; therefore, this primitive is
     not supported by the SCCP conforming NSP and will never be issued by the
     SCCP conforming NSP.


File: npi_sccp.info,  Node: CONS Expedited Data Transfer Service,  Next: CONS Reset Service,  Prev: CONS Receipt Confirmation Service,  Up: Rules for Conformance

5.5 CONS Expedited Data Transfer Service
========================================

* Menu:

* N_EXDATA_REQ::
* N_EXDATA_IND::


File: npi_sccp.info,  Node: N_EXDATA_REQ,  Next: N_EXDATA_IND,  Up: CONS Expedited Data Transfer Service

5.5.1 N_EXDATA_REQ
------------------

The `N_EXDATA_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-EXPEDITED-DATA request" primitive of the SCCP:

 Rules
......


File: npi_sccp.info,  Node: N_EXDATA_IND,  Prev: N_EXDATA_REQ,  Up: CONS Expedited Data Transfer Service

5.5.2 N_EXDATA_IND
------------------

The `N_EXDATA_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-EXPEDITED-DATA indication" primitive of the SCCP:

 Rules
......


File: npi_sccp.info,  Node: CONS Reset Service,  Next: CONS Network Connection Release,  Prev: CONS Expedited Data Transfer Service,  Up: Rules for Conformance

5.6 CONS Reset Service
======================

* Menu:

* N_RESET_REQ::
* N_RESET_IND::
* N_RESET_RES::
* N_RESET_CON::


File: npi_sccp.info,  Node: N_RESET_REQ,  Next: N_RESET_IND,  Up: CONS Reset Service

5.6.1 N_RESET_REQ
-----------------

The `N_RESET_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-RESET request" primitive of the SCCP:

 Parameters
...........

RESET_REASON      Specifies the cause of the reset.  (The source of the reset is
                 always the Network Service User.)

 Cause
......

`N_SCCP_RESC_END_USER_ORIGINATED'
     Reset by remote end user.

`N_SCCP_RESC_SCCP_USER_ORIGINATED'
     Reset by remote SCCP.

`N_SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PS'
     Reset by local SCCP: message out of order: incorrect P(S).

`N_SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PR'
     Reset by local SCCP: message out of order: incorrect P(R).

`N_SCCP_RESC_REMOTE_PROC_ERROR_MESSAGE_OUT_OF_WINDOW'
     Reset by local SCCP: remote procedure error: message out of window.

`N_SCCP_RESC_REMOTE_PROC_ERROR_INCORRECT_PS_AFTER_INIT'
     Reset by local SCCP: remote procedure error: incorrect P(S) after
     initialization.

`N_SCCP_RESC_REMOTE_PROC_ERROR_GENERAL'
     Reset by local SCCP: remote procedure error: general.

`N_SCCP_RESC_REMOTE_END_USER_OPERATIONAL'
     Reset by local SCCP: remote end user operational.

`N_SCCP_RESC_NETWORK_OPERATIONAL'
     Reset by local SCCP: network operational.

`N_SCCP_RESC_ACCESS_OPERATIONAL'
     Reset by local SCCP: access operational.

`N_SCCP_RESC_NETWORK_CONGESTION'
     Reset by local SCCP: network congestion.

`N_SCCP_RESC_NOT_OBTAINABLE'
     Reset by local SCCP: not obtainable.

`N_SCCP_RESC_UNQUALIFIED'
     Reset by local SCCP: unqualified.

 Rules
......


File: npi_sccp.info,  Node: N_RESET_IND,  Next: N_RESET_RES,  Prev: N_RESET_REQ,  Up: CONS Reset Service

5.6.2 N_RESET_IND
-----------------

The `N_RESET_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-RESET indication" primitive of the SCCP:

 Parameters
...........

RESET_ORIG        Indicates the source of the reset.
RESET_REASON      Indicates the cause of the reset.

 Cause
......

`N_SCCP_RESC_END_USER_ORIGINATED'
     Reset by remote end user.

`N_SCCP_RESC_SCCP_USER_ORIGINATED'
     Reset by remote SCCP.

`N_SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PS'
     Reset by local SCCP: message out of order: incorrect P(S).

`N_SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PR'
     Reset by local SCCP: message out of order: incorrect P(R).

`N_SCCP_RESC_REMOTE_PROC_ERROR_MESSAGE_OUT_OF_WINDOW'
     Reset by local SCCP: remote procedure error: message out of window.

`N_SCCP_RESC_REMOTE_PROC_ERROR_INCORRECT_PS_AFTER_INIT'
     Reset by local SCCP: remote procedure error: incorrect P(S) after
     initialization.

`N_SCCP_RESC_REMOTE_PROC_ERROR_GENERAL'
     Reset by local SCCP: remote procedure error: general.

`N_SCCP_RESC_REMOTE_END_USER_OPERATIONAL'
     Reset by local SCCP: remote end user operational.

`N_SCCP_RESC_NETWORK_OPERATIONAL'
     Reset by local SCCP: network operational.

`N_SCCP_RESC_ACCESS_OPERATIONAL'
     Reset by local SCCP: access operational.

`N_SCCP_RESC_NETWORK_CONGESTION'
     Reset by local SCCP: network congestion.

`N_SCCP_RESC_NOT_OBTAINABLE'
     Reset by local SCCP: not obtainable.

`N_SCCP_RESC_UNQUALIFIED'
     Reset by local SCCP: unqualified.

 Rules
......


File: npi_sccp.info,  Node: N_RESET_RES,  Next: N_RESET_CON,  Prev: N_RESET_IND,  Up: CONS Reset Service

5.6.3 N_RESET_RES
-----------------

The `N_RESET_RES' primitive is used by the NPI-SCCP to implement the "Q.711
N-RESET response" primitive of the SCCP:

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_RESET_CON,  Prev: N_RESET_RES,  Up: CONS Reset Service

5.6.4 N_RESET_CON
-----------------

The `N_RESET_CON' primitive is used by the NPI-SCCP to implement the "Q.711
N-RESET confirmation" primitive of the SCCP:

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: CONS Network Connection Release,  Next: CLNS,  Prev: CONS Reset Service,  Up: Rules for Conformance

5.7 CONS Network Connection Release
===================================

* Menu:

* N_DISCON_REQ::
* N_DISCON_IND::


File: npi_sccp.info,  Node: N_DISCON_REQ,  Next: N_DISCON_IND,  Up: CONS Network Connection Release

5.7.1 N_DISCON_REQ
------------------

The `N_DISCON_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-DISCONNECT request" primitive of the SCCP:

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_DISCON_IND,  Prev: N_DISCON_REQ,  Up: CONS Network Connection Release

5.7.2 N_DISCON_IND
------------------

The `N_DISCON_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-DISCONNECT indication" primitive of the SCCP:

 Parameters
...........

 Release Causes
...............

`N_SCCP_RELC_END_USER_ORIGINATED'
     Network connection released by remote SCCP: end user normal.

`N_SCCP_RELC_END_USER_BUSY'
     Network connection released by remote SCCP: end user busy.

`N_SCCP_RELC_END_USER_FAILURE'
     Network connection released by remote SCCP: end user failure.

`N_SCCP_RELC_SCCP_USER_ORIGINATED'
     Network connection released by remote SCCP: SCCP user.

`N_SCCP_RELC_REMOTE_PROCEDURE_ERROR'
     Network connection released by local SCCP: remote procedure error.

`N_SCCP_RELC_INCONSISTENT_CONNECTION_DATA'
     Network connection released by local SCCP: inconsistent connection data
     from remote.

`N_SCCP_RELC_ACCESS_FAILURE'
     Network connection released by local SCCP: remote access failure.

`N_SCCP_RELC_ACCESS_CONGESTION'
     Network connection released by local SCCP: remote access congestion.

`N_SCCP_RELC_SUBSYSTEM_FAILURE'
     Network connection released by local SCCP: remote subsystem failure.

`N_SCCP_RELC_SUBSYSTEM_CONGESTION'
     Network connection released by local SCCP: remote subsystem congestion.

`N_SCCP_RELC_MTP_FAILURE'
     Network connection released by local SCCP: MTP failure.

`N_SCCP_RELC_NETWORK_CONGESTION'
     Network connection released by local SCCP: MTP network congestion.

`N_SCCP_RELC_EXPIRATION_OF_RESET_TIMER'
     Network connection released by local SCCP: expiration of reset timer.

`N_SCCP_RELC_EXPIRATION_OF_RECEIVE_INACTIVITY_TIMER'
     Network connection released by local SCCP: expiration of receive
     inactivity timer.

`N_SCCP_RELC_RESERVED'
     Network connection released by local SCCP: reserved.

`N_SCCP_RELC_UNQUALIFIED'
     Network connection released: unqualified.

`N_SCCP_RELC_SCCP_FAILURE'
     Network connection released by local SCCP: remote SCCP failure.

 Refusal Causes
...............

`N_SCCP_REFC_END_USER_ORIGINATED'
     Network connection refused by remote end user.

`N_SCCP_REFC_END_USER_CONGESTION'
     Network connection refused by remote SCCP: end user congestion.

`N_SCCP_REFC_END_USER_FAILURE'
     Network connection refused by remote SCCP: end user failure.

`N_SCCP_REFC_SCCP_USER_ORIGINATED'
     Network connection refused by remote SCCP: SCCP originated.

`N_SCCP_REFC_DESTINATION_ADDRESS_UNKNOWN'
     Network connection refused by local SCCP: destination address unknown.

`N_SCCP_REFC_DESTINATION_INACCESSIBLE'
     Network connection refused by local SCCP: destination inaccessible.

`N_SCCP_REFC_NETWORK_RESOURCE_QOS_NOT_AVAIL_PERM'
     Network connection refused by local SCCP: QOS not available permanent.

`N_SCCP_REFC_NETWORK_RESOURCE_QOS_NOT_AVAIL_TRANS'
     Network connection refused by local SCCP: QOS not available transient.

`N_SCCP_REFC_ACCESS_FAILURE'
     Network connection refused by local SCCP: remote SCCP access failure.

`N_SCCP_REFC_ACCESS_CONGESTION'
     Network connection refused by local SCCP: remote SCCP access congestion.

`N_SCCP_REFC_SUBSYSTEM_FAILURE'
     Network connection refused by local SCCP: remote subsystem failure.

`N_SCCP_REFC_SUBSYSTEM_CONGESTION'
     Network connection refused by local SCCP: remote subsystem congestion.

`N_SCCP_REFC_EXPIRATION_OF_NC_ESTAB_TIMER'
     Network connection refused by local SCCP: NC establishment timer expiry.

`N_SCCP_REFC_INCOMPATIBLE_USER_DATA'
     Network connection refused by local SCCP: incompatible user data from
     remote.

`N_SCCP_REFC_RESERVED'
     Network connection refused by local SCCP: reserved.

`N_SCCP_REFC_UNQUALIFIED'
     Network connection refused by local SCCP: unqualified.

`N_SCCP_REFC_SCCP_HOP_COUNTER_VIOLATION'
     Network connection refused by local SCCP: SCCP hop counter violation.

`N_SCCP_REFC_SCCP_FAILURE'
     Network connection refused by local SCCP: SCCP failure.

`N_SCCP_REFC_NO_ADDRESS_TYPE_TRANSLATION'
     Network connection refused by local SCCP: no address type translation.

`N_SCCP_REFC_UNEQUIPPED_USER'
     Network connection refused by local SCCP: unequipped user.

 Rules
......


File: npi_sccp.info,  Node: CLNS,  Prev: CONS Network Connection Release,  Up: Rules for Conformance

5.8 CLNS
========

* Menu:

* N_UNITDATA_REQ::
* N_UNITDATA_IND::
* N_UDERROR_IND::


File: npi_sccp.info,  Node: N_UNITDATA_REQ,  Next: N_UNITDATA_IND,  Up: CLNS

5.8.1 N_UNITDATA_REQ
--------------------

The `N_UNITDATA_REQ' primitive is used by the NPI-SCCP to implement the "Q.711
N-UNIT-DATA request" primitive of the SCCP:

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_UNITDATA_IND,  Next: N_UDERROR_IND,  Prev: N_UNITDATA_REQ,  Up: CLNS

5.8.2 N_UNITDATA_IND
--------------------

The `N_UNITDATA_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-UNIT-DATA indication" primitive of the SCCP:

 Parameters
...........

 Rules
......


File: npi_sccp.info,  Node: N_UDERROR_IND,  Prev: N_UNITDATA_IND,  Up: CLNS

5.8.3 N_UDERROR_IND
-------------------

The `N_UNITDATA_IND' primitive is used by the NPI-SCCP to implement the "Q.711
N-UNIT-DATA-ERROR indication" primitive of the SCCP:

 Parameters
...........

 Error Types
............

`N_SCCP_RETC_NO_ADDRESS_TYPE_TRANSLATION'
     Unit data returned: no address type translation.

`N_SCCP_RETC_NO_ADDRESS_TRANSLATION'
     Unit data returned: not address translation.

`N_SCCP_RETC_SUBSYSTEM_CONGESTION'
     Unit data returned: subsystem congestion.

`N_SCCP_RETC_SUBSYSTEM_FAILURE'
     Unit data returned: subsystem failure.

`N_SCCP_RETC_UNEQUIPPED_USER'
     Unit data returned: unequipped user.

`N_SCCP_RETC_MTP_FAILURE'
     Unit data returned: MTP failure.

`N_SCCP_RETC_NETWORK_CONGESTION'
     Unit data returned: MTP network congestion.

`N_SCCP_RETC_UNQUALIFIED'
     Unit data returned: unqualified.

`N_SCCP_RETC_MESSAGE_TRANSPORT_ERROR'
     Unit data returned: message transport error.

`N_SCCP_RETC_LOCAL_PROCESSING_ERROR'
     Unit data returned: local processing error.

`N_SCCP_RETC_NO_REASSEMBLY_AT_DESTINATION'
     Unit data returned: no reassembly at destination.

`N_SCCP_RETC_SCCP_FAILURE'
     Unit data returned: SCCP failure.

`N_SCCP_RETC_SCCP_HOP_COUNTER_VIOLATION'
     Unit data returned: SCCP hop counter violation.

`N_SCCP_RETC_SEGMENTATION_NOT_SUPPORTED'
     Unit data returned: segmentation not supported.

`N_SCCP_RETC_SEGMENTATION_FAILURE'
     Unit data returned: segmentation failure.

`N_SCCP_RETC_MESSAGE_CHANGE_FAILURE'
     Unit data returned: message change failure.

`N_SCCP_RETC_INVALID_INS_ROUTING_REQUEST'
     Unit data returned: INS routing request.

`N_SCCP_RETC_INVALID_INSI_ROUTING_REQUEST'
     Unit data returned: INSI routing request.

`N_SCCP_RETC_UNAUTHORIZED_MESSAGE'
     Unit data returned: unauthorized message.

`N_SCCP_RETC_MESSAGE_INCOMPATIBILITY'
     Unit data returned: message incompatibility.

`N_SCCP_RETC_CANNOT_PERFORM_ISNI_CONSTRAINED_ROUTING'
     Unit data returned: cannot perform ISNI constrained routing.

`N_SCCP_RETC_REDUNDANT_ISNI_CONSTRAINED_ROUTING_INFO'
     Unit data returned: redundant ISNI constrained routing information.

`N_SCCP_RETC_UNABLE_TO_PERFORM_ISNI_IDENTIFICATION'
     Unit data returned: unable to perform ISDNI identification.

 Rules
......


File: npi_sccp.info,  Node: Extension Primitives,  Next: NPI-SCCP Input-Output Controls,  Prev: Rules for Conformance,  Up: Top

6 Extension Primitives
**********************

* Menu:

* SCCP Notice Service::
* SCCP Inform Service::
* SCCP Coordination Service::
* SCCP State Service::
* SCCP PC State Service::
* SCCP Traffic Service::


File: npi_sccp.info,  Node: SCCP Notice Service,  Next: SCCP Inform Service,  Up: Extension Primitives

6.1 SCCP Notice Service
=======================

* Menu:

* N_NOTICE_IND::


File: npi_sccp.info,  Node: N_NOTICE_IND,  Up: SCCP Notice Service

6.1.1 N_NOTICE_IND
------------------

 Format
.......

     #define N_NOTICE_IND    32
     typedef struct {
             np_ulong PRIM_type;             /* always N_NOTICE_IND */
             np_ulong DEST_length;           /* address data was sent to */
             np_ulong DEST_offset;
             np_ulong SRC_length;            /* address data was sent from */
             np_ulong SRC_offset;
             np_ulong QOS_length;            /* QOS parameters data was sent with */
             np_ulong QOS_offset;
             np_ulong RETURN_cause;          /* reason for return of data */
     } N_notice_ind_t;

 Parameters
...........

 State
......

 Rules
......


File: npi_sccp.info,  Node: SCCP Inform Service,  Next: SCCP Coordination Service,  Prev: SCCP Notice Service,  Up: Extension Primitives

6.2 SCCP Inform Service
=======================

* Menu:

* N_INFORM_REQ::
* N_INFORM_IND::


File: npi_sccp.info,  Node: N_INFORM_REQ,  Next: N_INFORM_IND,  Up: SCCP Inform Service

6.2.1 N_INFORM_REQ
------------------

 Format
.......

     #define N_INFORM_REQ    33
     typedef struct {
             np_ulong PRIM_type;             /* always N_INFORM_REQ */
             np_ulong QOS_length;            /* qos parameters */
             np_ulong QOS_offset;
             np_ulong REASON;                /* inform reason */
     } N_inform_req_t;

     /* Inform reasons for use with N_INFORM_REQ */
     #define N_SCCP_INFR_NSU_FAILURE         4
     #define N_SCCP_INFR_NSU_CONGESTION      5
     #define N_SCCP_INFR_NSU_QOS_CHANGE      6

     /* Inform reasons for use with N_INFORM */
     #define N_SCCP_INFR_UNSPECIFIED         7

 Parameters
...........

 Reasons
........

`N_SCCP_INFR_NSU_FAILURE'
     Network Service User failure.

`N_SCCP_INFR_NSU_CONGESTION'
     Network Service User congestion.

`N_SCCP_INFR_NSU_QOS_CHANGE'
     Network Service User quality of service change.

`N_SCCP_INFR_UNSPECIFIED'
     Reason unspecified or unknown.

 State
......

 Rules
......


File: npi_sccp.info,  Node: N_INFORM_IND,  Prev: N_INFORM_REQ,  Up: SCCP Inform Service

6.2.2 N_INFORM_IND
------------------

 Format
.......

     #define N_INFORM_IND    34
     typedef struct {
             np_ulong PRIM_type;             /* always N_INFORM_IND */
             np_ulong QOS_length;            /* qos parameters */
             np_ulong QOS_offset;
             np_ulong REASON;                /* inform reason */
     } N_inform_ind_t;

     /* Inform reasons for use with N_INFORM_IND */
     #define N_SCCP_INFR_NSP_FAILURE         1
     #define N_SCCP_INFR_NSP_CONGESTION      2
     #define N_SCCP_INFR_NSP_QOS_CHANGE      3

     /* Inform reasons for use with N_INFORM */
     #define N_SCCP_INFR_UNSPECIFIED         7

 Parameters
...........

 Reasons
........

`N_SCCP_INFR_NSP_FAILURE'
     Network Service Provider failure.

`N_SCCP_INFR_NSP_CONGESTION'
     Network Service Provider congestion.

`N_SCCP_INFR_NSP_QOS_CHANGE'
     Network Service Provider quality of service change.

`N_SCCP_INFR_UNSPECIFIED'
     Reason unspecified or unknown.

 State
......

 Rules
......


File: npi_sccp.info,  Node: SCCP Coordination Service,  Next: SCCP State Service,  Prev: SCCP Inform Service,  Up: Extension Primitives

6.3 SCCP Coordination Service
=============================

* Menu:

* N_COORD_REQ::
* N_COORD_IND::
* N_COORD_RES::
* N_COORD_CON::


File: npi_sccp.info,  Node: N_COORD_REQ,  Next: N_COORD_IND,  Up: SCCP Coordination Service

6.3.1 N_COORD_REQ
-----------------

Note that the `N_OPTMGMT_REQ', `N_RESET_REQ' or `N_DISCON_REQ' primitive may
also be used provide the "N-COORD Request" primitive.

 Format
.......

     #define N_COORD_REQ     35
     typedef struct {
             np_ulong PRIM_type;             /* alwyas N_COORD_REQ */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
     } N_coord_req_t;

 Parameters
...........

 State
......

 Rules
......


File: npi_sccp.info,  Node: N_COORD_IND,  Next: N_COORD_RES,  Prev: N_COORD_REQ,  Up: SCCP Coordination Service

6.3.2 N_COORD_IND
-----------------

Note that the `N_UDERROR_IND', `N_RESET_IND' or `N_DISCON_IND' primitive may
also be used provide the "N-COORD Indication" primitive.

 Format
.......

     #define N_COORD_IND     37
     typedef struct {
             np_ulong PRIM_type;             /* alwyas N_COORD_IND */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
             np_ulong SMI;                   /* subsystem multiplicity indicator */
     } N_coord_ind_t;

 Parameters
...........

 State
......

 Rules
......


File: npi_sccp.info,  Node: N_COORD_RES,  Next: N_COORD_CON,  Prev: N_COORD_IND,  Up: SCCP Coordination Service

6.3.3 N_COORD_RES
-----------------

Note that the `N_OPTMGMT_REQ', `N_RESET_RES' or `N_DISCON_REQ' primitive may
also be used provide the "N-COORD Response" primitive.

 Format
.......

     #define N_COORD_RES     36
     typedef struct {
             np_ulong PRIM_type;             /* always N_COORD_RES */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
     } N_coord_res_t;

 Parameters
...........

 State
......

 Rules
......


File: npi_sccp.info,  Node: N_COORD_CON,  Prev: N_COORD_RES,  Up: SCCP Coordination Service

6.3.4 N_COORD_CON
-----------------

Note that the `N_UDERROR_IND', `N_RESET_CON' or `N_DISCON_IND' primitive may
also be used provide the "N-COORD Confirmation" primitive.

 Format
.......

     #define N_COORD_CON     38
     typedef struct {
             np_ulong PRIM_type;             /* always N_COORD_CON */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
             np_ulong SMI;                   /* subsystem multiplicity indicator */
     } N_coord_con_t;

 Parameters
...........

 State
......

 Rules
......


File: npi_sccp.info,  Node: SCCP State Service,  Next: SCCP PC State Service,  Prev: SCCP Coordination Service,  Up: Extension Primitives

6.4 SCCP State Service
======================

* Menu:

* N_STATE_REQ::
* N_STATE_IND::


File: npi_sccp.info,  Node: N_STATE_REQ,  Next: N_STATE_IND,  Up: SCCP State Service

6.4.1 N_STATE_REQ
-----------------

Note that the `N_BIND_REQ', `N_UNBIND_REQ', `N_CONN_REQ', `N_RESET_REQ' and
`N_DISCON_REQ' primitives may be used to provide the "N-STATE Request"
primitive.

 Format
.......

     #define N_STATE_REQ     39
     typedef struct {
             np_ulong PRIM_type;             /* always N_STATE_REQ */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
             np_ulong STATUS;                /* user status */
     } N_state_req_t;

     #define N_SCCP_STATUS_USER_IN_SERVICE                   1
     #define N_SCCP_STATUS_USER_OUT_OF_SERVICE               2
     #define N_SCCP_STATUS_REMOTE_SCCP_AVAILABLE             3
     #define N_SCCP_STATUS_REMOTE_SCCP_UNAVAILABLE           4
     #define N_SCCP_STATUS_REMOTE_SCCP_UNEQUIPPED            5
     #define N_SCCP_STATUS_REMOTE_SCCP_INACCESSIBLE          6
     #define N_SCCP_STATUS_REMOTE_SCCP_CONGESTED(_x)         (7 + _x)

 Parameters
...........

 Status
.......

`N_SCCP_STATUS_USER_IN_SERVICE'
     User in service.

`N_SCCP_STATUS_USER_OUT_OF_SERVICE'
     User out of service.

`N_SCCP_STATUS_REMOTE_SCCP_AVAILABLE'
     Remote SCCP available.

`N_SCCP_STATUS_REMOTE_SCCP_UNAVAILABLE'
     Remote SCCP unavailable.

`N_SCCP_STATUS_REMOTE_SCCP_UNEQUIPPED'
     Remote SCCP unequipped.

`N_SCCP_STATUS_REMOTE_SCCP_INACCESSIBLE'
     Remote SCCP inaccessible.

`N_SCCP_STATUS_REMOTE_SCCP_CONGESTED(n)'
     Remote SCCP congested at level "n".

 State
......

 Rules
......


File: npi_sccp.info,  Node: N_STATE_IND,  Prev: N_STATE_REQ,  Up: SCCP State Service

6.4.2 N_STATE_IND
-----------------

Note that the `N_UDERROR_IND', `N_RESET_IND', or `N_DISCON_IND' primitives can
also be used to provide the "N-STATE Indication".

 Format
.......

     #define N_STATE_IND     40
     typedef struct {
             np_ulong PRIM_type;             /* always N_STATE_IND */
             np_ulong ADDR_length;           /* affected subsystem */
             np_ulong ADDR_offset;
             np_ulong STATUS;                /* user status */
             np_ulong SMI;                   /* subsystem multiplicity indicator */
     } N_state_ind_t;

     #define N_SCCP_STATUS_USER_IN_SERVICE                   1
     #define N_SCCP_STATUS_USER_OUT_OF_SERVICE               2
     #define N_SCCP_STATUS_REMOTE_SCCP_AVAILABLE             3
     #define N_SCCP_STATUS_REMOTE_SCCP_UNAVAILABLE           4
     #define N_SCCP_STATUS_REMOTE_SCCP_UNEQUIPPED            5
     #define N_SCCP_STATUS_REMOTE_SCCP_INACCESSIBLE          6
     #define N_SCCP_STATUS_REMOTE_SCCP_CONGESTED(_x)         (7 + _x)

 Parameters
...........

 Status
.......

`N_SCCP_STATUS_USER_IN_SERVICE'
     User in service.

`N_SCCP_STATUS_USER_OUT_OF_SERVICE'
     User out of service.

`N_SCCP_STATUS_REMOTE_SCCP_AVAILABLE'
     Remote SCCP available.

`N_SCCP_STATUS_REMOTE_SCCP_UNAVAILABLE'
     Remote SCCP unavailable.

`N_SCCP_STATUS_REMOTE_SCCP_UNEQUIPPED'
     Remote SCCP unequipped.

`N_SCCP_STATUS_REMOTE_SCCP_INACCESSIBLE'
     Remote SCCP inaccessible.

`N_SCCP_STATUS_REMOTE_SCCP_CONGESTED(n)'
     Remote SCCP congested at level "n".

 State
......

 Rules
......


File: npi_sccp.info,  Node: SCCP PC State Service,  Next: SCCP Traffic Service,  Prev: SCCP State Service,  Up: Extension Primitives

6.5 SCCP PC State Service
=========================

* Menu:

* N_PCSTATE_IND::


File: npi_sccp.info,  Node: N_PCSTATE_IND,  Up: SCCP PC State Service

6.5.1 N_PCSTATE_IND
-------------------

Note that the `N_UDERROR_IND', `N_RESET_IND', or `N_DISCON_IND' primitives can
also be used to provide the "N-PCSTATE Indication".

 Format
.......

     #define N_PCSTATE_IND   41
     typedef struct {
             np_ulong PRIM_type;             /* always N_PCSTATE_IND */
             np_ulong ADDR_length;           /* affected point code */
             np_ulong ADDR_offset;
             np_ulong STATUS;                /* status */
     } N_pcstate_ind_t;

     #define N_SCCP_STATUS_SIGNALLING_POINT_INACCESSIBLE     16
     #define N_SCCP_STATUS_SIGNALLING_POINT_CONGESTED(_x)    (17 + _x)
     #define N_SCCP_STATUS_SIGNALLING_POINT_ACCESSIBLE       26

 Parameters
...........

 Status
.......

`N_SCCP_STATUS_SIGNALLING_POINT_INACCESSIBLE'
     Signalling point inaccessible.

`N_SCCP_STATUS_SIGNALLING_POINT_CONGESTED(n)'
     Signalling point congested at level "n".

`N_SCCP_STATUS_SIGNALLING_POINT_ACCESSIBLE'
     Signalling point accessible.

 State
......

 Rules
......


File: npi_sccp.info,  Node: SCCP Traffic Service,  Prev: SCCP PC State Service,  Up: Extension Primitives

6.6 SCCP Traffic Service
========================

* Menu:

* N_TRAFFIC_IND::


File: npi_sccp.info,  Node: N_TRAFFIC_IND,  Up: SCCP Traffic Service

6.6.1 N_TRAFFIC_IND
-------------------

 Format
.......

     #define N_TRAFFIC_IND   42
     typedef struct {
             np_ulong PRIM_type;             /* always N_TRAFFIC_IND */
             np_ulong ADDR_length;           /* affected user */
             np_ulong ADDR_offset;
             np_ulong TRAFFIC_mix;           /* traffic mix */
     } N_traffic_ind_t;

     #define N_SCCP_TMIX_ALL_PREFFERED_NO_BACKUP     1
     #define N_SCCP_TMIX_ALL_PREFERRED_SOME_BACKUP   2
     #define N_SCCP_TMIX_ALL_PREFERRED_ALL_BACKUP    3
     #define N_SCCP_TMIX_SOME_PREFERRED_NO_BACKUP    4
     #define N_SCCP_TMIX_SOME_PREFERRED_SOME_BACKUP  5
     #define N_SCCP_TMIX_NO_PREFERRED_NO_BACKUP      6
     #define N_SCCP_TMIX_ALL                         7
     #define N_SCCP_TMIX_SOME                        8
     #define N_SCCP_TMIX_NONE                        9

 Parameters
...........

 Traffic Mix
............

`N_SCCP_TMIX_ALL_PREFFERED_NO_BACKUP'

`N_SCCP_TMIX_ALL_PREFERRED_SOME_BACKUP'

`N_SCCP_TMIX_ALL_PREFERRED_ALL_BACKUP'

`N_SCCP_TMIX_SOME_PREFERRED_NO_BACKUP'

`N_SCCP_TMIX_SOME_PREFERRED_SOME_BACKUP'

`N_SCCP_TMIX_NO_PREFERRED_NO_BACKUP'

`N_SCCP_TMIX_ALL'

`N_SCCP_TMIX_SOME'

`N_SCCP_TMIX_NONE'

 State
......

 Rules
......


File: npi_sccp.info,  Node: NPI-SCCP Input-Output Controls,  Next: NPI-SCCP Management Information Base,  Prev: Extension Primitives,  Up: Top

7 NPI-SCCP Input-Output Controls
********************************


File: npi_sccp.info,  Node: NPI-SCCP Management Information Base,  Next: Mapping NPI-SCCP Primitives,  Prev: NPI-SCCP Input-Output Controls,  Up: Top

8 NPI-SCCP Management Information Base
**************************************


File: npi_sccp.info,  Node: Mapping NPI-SCCP Primitives,  Next: NPI-SCCP Header Files,  Prev: NPI-SCCP Management Information Base,  Up: Top

Appendix A Mapping NPI-SCCP Primitives
**************************************

* Menu:

* Mapping NPI Primitives to ITU-T X.213::
* Mapping NPI Primitives to ITU-T Q.711::
* Mapping NPI Primitives to ETSI EN 300 009-1::
* Mapping NPI Primitives to ANSI T1.112::


File: npi_sccp.info,  Node: Mapping NPI Primitives to ITU-T X.213,  Next: Mapping NPI Primitives to ITU-T Q.711,  Up: Mapping NPI-SCCP Primitives

A.1 Mapping NPI Primitives to ITU-T X.213
=========================================

* Menu:

* Mapping of X.213 CONS Connect/Disconnect Primitives to NPI::
* Mapping of X.213 CONS Data Transfer Primitives to NPI::
* Mapping of X.213 CLNS Data Transfer Primitives to NPI::


File: npi_sccp.info,  Node: Mapping of X.213 CONS Connect/Disconnect Primitives to NPI,  Next: Mapping of X.213 CONS Data Transfer Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T X.213

A.1.1 Mapping of X.213 CONS Connect/Disconnect Primitives to NPI
----------------------------------------------------------------

The mapping of NPI CONS connection and disconnection primitives and their
associated data fields to ITU-T X.213 is illustrated in *note Table A-1::.


   +-------------------------------------+-----------------------------------+
   |          X.213 Primitive            |           NPI Primitive           |
   +-------------+----------+------------+--------------+--------------------+
   |Generic      | Specific | Parameter  | Type         | Field              |
   +-------------+----------+------------+--------------+--------------------+
   |N-CONNECT    | request  | Cld. addr  | N_CONN_REQ   | DEST_length/offset |
   |             |          | Clg. addr  |              | (implied)          |
   |             |          | Options    |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | indicate | Cld. addr  | N_CONN_IND   | DEST_length/offset |
   |             |          | Clg. addr  |              | SRC_length/offset  |
   |             |          | Options    |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | respond  | Resp. addr | N_CONN_RES   | RES_length/offset  |
   |             |          | Options    |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | confirm  | Resp. addr | N_CONN_CON   | RES_length/offset  |
   |             |          | Options    |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | User data  |              | M_DATA             |
   +-------------+----------+------------+--------------+--------------------+
   |N-DISCONNECT | request  | Reason     | N_DISCON_REQ | DISCON_reason      |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | indicate | Originator | N_DISCON_IND | DISCON_orig        |
   |             |          | Reason     |              | DISCON_reason      |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | User data  |              | M_DATA             |
   +-------------+----------+------------+--------------+--------------------+

  _Table A-1.  Mapping NPI CONS Connect/Disconnect Primitives to ITU-T X.213_

*note Table A-1:: illustrates that the Network Provider Interace (NPI) Revision
2.0.0 interface is completely consistent with the X.213 connection and
disconnection services.  Note that the "N-CONNECT request" relies on the X.213
option for the "Source address" to be implied by the connection interface
identity (i.e. Stream).


File: npi_sccp.info,  Node: Mapping of X.213 CONS Data Transfer Primitives to NPI,  Next: Mapping of X.213 CLNS Data Transfer Primitives to NPI,  Prev: Mapping of X.213 CONS Connect/Disconnect Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T X.213

A.1.2 Mapping of X.213 CONS Data Transfer Primitives to NPI
-----------------------------------------------------------

The mapping of NPI CONS data transfer primitives and their associated data
fields to ITU-T X.213 is illustrated in *note Table A-2::.


 +-------------------------------------------+--------------------------------+
 |             X.213 Primitive               |         NPI Primitive          |
 +-------------------+----------+------------+--------------+-----------------+
 |Generic            | Specific | Parameter  | Type         | Field           |
 +-------------------+----------+------------+--------------+-----------------+
 |N-DATA             | request  | Conf. req  | N_DATA_REQ   | DATA_xfer_flags |
 |                   |          | User data  |              | M_DATA          |
 |                   +----------+------------+--------------+-----------------+
 |                   | indicate | Conf. req  | N_DATA_IND   | DATA_xfer_flags |
 |                   |          | User data  |              | M_DATA          |
 +-------------------+----------+------------+--------------+-----------------+
 |N-DATA-ACKNOWLEDGE | request  | --         | N_DATACK_REQ | --              |
 |                   +----------+------------+--------------+-----------------+
 |                   | indicate | --         | N_DATACK_IND | --              |
 +-------------------+----------+------------+--------------+-----------------+
 |N-EXPEDITED-DATA   | request  | User data  | N_EXDATA_REQ | M_DATA          |
 |                   +----------+------------+--------------+-----------------+
 |                   | indicate | User data  | N_EXDATA_IND | M_DATA          |
 +-------------------+----------+------------+--------------+-----------------+
 |N-RESET            | request  | Reason     | N_RESET_REQ  | RESET_reason    |
 |                   +----------+------------+--------------+-----------------+
 |                   | indicate | Originator | N_RESET_IND  | RESET_orig      |
 |                   |          | Reason     |              | RESET_reason    |
 |                   +----------+------------+--------------+-----------------+
 |                   | respond  | --         | N_RESET_RES  | --              |
 |                   +----------+------------+--------------+-----------------+
 |                   | confirm  | --         | N_RESET_CON  | --              |
 +-------------------+----------+------------+--------------+-----------------+

    _Table A-2.  Mapping NPI CONS Data Transfer Primitives to ITU-T X.213_

*note Table A-2:: illustrates that the Network Provider Interace (NPI) Revision
2.0.0 interface is completely consistent with the X.213 Connection mode data
transfer services.


File: npi_sccp.info,  Node: Mapping of X.213 CLNS Data Transfer Primitives to NPI,  Prev: Mapping of X.213 CONS Data Transfer Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T X.213

A.1.3 Mapping of X.213 CLNS Data Transfer Primitives to NPI
-----------------------------------------------------------

The mapping of NPI CLNS data transfer primitives and their associated data
fields to ITU-T X.213 is illustrated in *note Table A-3::.


  +-------------------------------------+-------------------------------------+
  |          X.213 Primitive            |            NPI Primitive            |
  +------------+----------+-------------+----------------+--------------------+
  |Generic     | Specific | Parameter   | Type           | Field              |
  +------------+----------+-------------+----------------+--------------------+
  |N-UNIT-DATA | request  | Source addr | N_UNITDATA_REQ | (implied)          |
  |            |          | Dest addr   |                | DEST_length/offset |
  |            |          | QOS parms   |                | RESERVED_field     |
  |            |          | User data   |                | M_DATA             |
  |            +----------+-------------+----------------+--------------------+
  |            | indicate | Source addr | N_UNITDATA_IND | SRC_length/offset  |
  |            |          | Dest addr   |                | DEST_length/offset |
  |            |          | QOS parms   |                | ERROR_type         |
  |            |          | User data   |                | M_DATA             |
  +------------+----------+-------------+----------------+--------------------+

    _Table A-3.  Mapping NPI CLNS Data Transfer Primitives to ITU-T X.213_

*note Table A-3:: illustrates several deficiencies with the Network Provider
Interface (NPI) Revision 2.0.0 interface:

  1. The "Quality of Service parameter set" is not included in the
     `N_UNITDATA_REQ' primitive.

     This causes problems in performance in that when `N_UNITDATA_REQ'
     primitives are sent that must have differing quality of service, a
     separate `N_OPTMGMT_REQ' primitive must be issued to alter the QOS
     characteristics before issuing the `N_UNITDATA_REQ' primitive.  This can
     make it necessary that two primitive are necessary for each data
     transmission.  Worse, when the `N_OPTMGMT_REQ' primitive is issued it is
     required that the NS user await the `N_OK_ACK' primitive before issuing
     any other primitives, meaning the outgoing queueing must clear before the
     message may be sent.

     To circumvent this deficiency, the `OpenSS7 Project' uses the
     RESERVED_FIELD[0] and RESERVED_FIELD[1] as QOS_LENGTH and QOS_OFFSET
     respectively.  This is compatible with implementations expecting the old
     behavior, because QOS_LENGTH and QOS_OFFSET will simply be coded zero
     (`0').

     This is particularly important for SCCP as SCCP sets the "Protocol Class",
     "Message Priority", "Importance" and "Sequence Control" on each and every
     unit data transmission.

  2. The "Quality of Service parameter set" is not included in the
     `N_UNITDATA_IND' primitive.

     Although this is not consistent with X.213 and the Network Provider
     Interface (NPI) Revision 2.0.0 provides no way of retrieving the Quality
     of Service parameter set that was associated with the receive unit data,
     it does not cause much problems.  The NPI does provide an `ERROR_type'
     field that can be used to indicate that congestion was experienced by this
     unit data during its delivery.

  3. The "Source address" is not included in the `N_UNITDATA_REQ' primtiive,
     but is implied by the interface (which is not provided for in the X.213
     specification).

     Although this is not consistent with X.213, the Network Provider Interface
     (NPI) Revision 2.0.0 provides the `N_BIND_REQ' and `N_BIND_ACK' primitives
     to set the implied source address for sent packets.  This works when the
     NSP is bound to an explicit address, or which the source address can be
     implied by routing (as in the case of IP networks where the source address
     can be obtained from the address assigned to the outgoing interface).  The
     problem comes in when the `DEFAULT_DESTINATION' flag is passed without and
     NSAP in the `N_BIND_REQ'.  These Streams cannot be permitted to send
     messages if the NSP cannot determine the source address for the
     transmission.


File: npi_sccp.info,  Node: Mapping NPI Primitives to ITU-T Q.711,  Next: Mapping NPI Primitives to ETSI EN 300 009-1,  Prev: Mapping NPI Primitives to ITU-T X.213,  Up: Mapping NPI-SCCP Primitives

A.2 Mapping NPI Primitives to ITU-T Q.711
=========================================

* Menu:

* Mapping of Q.711 CONS Connect/Disconnect Primitives to NPI::
* Mapping of Q.711 CONS Data Transfer Primitives to NPI::
* Mapping of Q.711 CLNS Data Transfer Primitives to NPI::
* Mapping of Q.711 Management Primitives to NPI::


File: npi_sccp.info,  Node: Mapping of Q.711 CONS Connect/Disconnect Primitives to NPI,  Next: Mapping of Q.711 CONS Data Transfer Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T Q.711

A.2.1 Mapping of Q.711 CONS Connect/Disconnect Primitives to NPI
----------------------------------------------------------------

The mapping of NPI CONS connection and disconnection primitives and their
associated data fields to ITU-T Q.711 is illustrated in *note Table A-4::.


   +-------------------------------------+-----------------------------------+
   |          Q.711 Primitive            |           NPI Primitive           |
   +-------------+----------+------------+--------------+--------------------+
   |Generic      | Specific | Parameter  | Type         | Field              |
   +-------------+----------+------------+--------------+--------------------+
   |N-CONNECT    | request  | Conn. Id   | N_CONN_REQ   | (implied)          |
   |             |          | Clg. addr  |              | (implied)          |
   |             |          | Cld. addr  |              | DEST_length/offset |
   |             |          | Exp. data  |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | Importance |              | CONN_flags         |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | indicate | Conn. Id   | N_CONN_IND   | SEQ_number         |
   |             |          | Clg. addr  |              | SRC_length/offset  |
   |             |          | Cld. addr  |              | DEST_length/offset |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | Importance |              | CONN_flags         |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | respond  | Conn. Id   | N_CONN_RES   | SEQ_number         |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | Exp. data  |              | CONN_flags         |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | Importance |              | QOS_length/offset  |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | confirm  | Conn. Id   | N_CONN_CON   | (implied)          |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | QOS parms  |              | QOS_length/offset  |
   |             |          | Importance |              | CONN_flags         |
   |             |          | User data  |              | M_DATA             |
   +-------------+----------+------------+--------------+--------------------+
   |N-DISCONNECT | request  | Conn. Id   | N_DISCON_REQ | SEQ_number         |
   |             |          | Reason     |              | DISCON_reason      |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | Importance |              | --                 |
   |             |          | User data  |              | M_DATA             |
   |             +----------+------------+--------------+--------------------+
   |             | indicate | Conn. Id   | N_DISCON_IND | SEQ_number         |
   |             |          | Originator |              | DISCON_orig        |
   |             |          | Reason     |              | DISCON_reason      |
   |             |          | Resp. addr |              | RES_length/offset  |
   |             |          | Importance |              | DISCON_reason      |
   |             |          | User data  |              | M_DATA             |
   +-------------+----------+------------+--------------+--------------------+

  _Table A-4.  Mapping NPI CONS Connect/Disconnect Primitives to ITU-T Q.711_

Note that, as illustrated in *note Table A-4::, there are several
considerations for the Network Provider Interface (NPI) Revision 2.0.0
specification when applied to SCCP:

  1. SCCP service primitives include a "Connection Identifier" that identifies
     the connection.  In some instances (during connection establishment), this
     connection identifier is explicitly included in the NPI primitives in the
     SEQ_NUMBER field.  For `N_CONN_REQ' and `N_CONN_CON', the "Connection
     Identifier" is implied by the Stream upon which the primitive is issued.

  2. SCCP shows "Expedited data" selection as only present in the "N-CONNECT
     request" and "N-CONNECT response" primitives.  For NPI the "Expedited
     data" selection can also be indicated on the "N-CONNECT indication" and
     "N-CONNECT confirmation" primitives.

  3. SCCP allows the user to pass an "Importance" parameter in the "N-CONNECT
     request", "N-CONNECT response" and "N-DISCONNECT request" primitives and
     optionally indicates "Importance" in the "N-CONNECT indication",
     "N-CONNECT confirmation" and "N-DISCONNECT indication" primitives.  For
     "N-CONNECT", NPI Revision 2.0.0 can either pass "Importance" as a QOS
     parameter or in the CONN_FLAGS field.  For "N-DISCONNECT indication", NPI
     Revision 2.0.0 can pass "Importance" in the DISCON_REASON field when the
     importance as the cause of the disconnect.  NPI Revision 2.0.0 has no good
     way of passing the "Importance" parameter in the `N_DISCON_REQ' primitive.


File: npi_sccp.info,  Node: Mapping of Q.711 CONS Data Transfer Primitives to NPI,  Next: Mapping of Q.711 CLNS Data Transfer Primitives to NPI,  Prev: Mapping of Q.711 CONS Connect/Disconnect Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T Q.711

A.2.2 Mapping of Q.711 CONS Data Transfer Primitives to NPI
-----------------------------------------------------------

The mapping of NPI CONS data transfer primitives and their associated data
fields to ITU-T Q.711 is illustrated in *note Table A-5::.


  +-----------------------------------------+--------------------------------+
  |            Q.711 Primitive              |         NPI Primitive          |
  +-----------------+----------+------------+--------------+-----------------+
  |Generic          | Specific | Parameter  | Type         | Field           |
  +-----------------+----------+------------+--------------+-----------------+
  |N-DATA           | request  | Conn. Id   | N_DATA_REQ   | (implied)       |
  |                 |          | Importance |              | DATA_xfer_flags |
  |                 |          | User data  |              | M_DATA          |
  |                 +----------+------------+--------------+-----------------+
  |                 | indicate | Conn. Id   | N_DATA_IND   | (implied)       |
  |                 |          | User data  |              | M_DATA          |
  +-----------------+----------+------------+--------------+-----------------+
  |N-EXPEDITED-DATA | request  | Conn. Id   | N_EXDATA_REQ | (implied)       |
  |                 |          | User data  |              | M_DATA          |
  |                 +----------+------------+--------------+-----------------+
  |                 | indicate | Conn. Id   | N_EXDATA_IND | (implied)       |
  |                 |          | User data  |              | M_DATA          |
  +-----------------+----------+------------+--------------+-----------------+
  |N-RESET          | request  | Conn. Id   | N_RESET_REQ  | (implied)       |
  |                 |          | Reason     |              | RESET_reason    |
  |                 +----------+------------+--------------+-----------------+
  |                 | indicate | Conn. Id   | N_RESET_IND  | (implied)       |
  |                 |          | Originator |              | RESET_orig      |
  |                 |          | Reason     |              | RESET_reason    |
  |                 +----------+------------+--------------+-----------------+
  |                 | respond  | Conn. Id   | N_RESET_RES  | (implied)       |
  |                 +----------+------------+--------------+-----------------+
  |                 | confirm  | Conn. Id   | N_RESET_CON  | (implied)       |
  +-----------------+----------+------------+--------------+-----------------+

    _Table A-5.  Mapping NPI CONS Data Transfer Primitives to ITU-T Q.711_

Note that as illustrated in *note Table A-5::, there are several considerations
for the Newtork Provider Interface (NPI) Revision 2.0.0 specification when
applied to SCCP:

  1. SCCP service primtiives include a "Connection Identifier" that identifies
     the connection.  In the case of data transfer, the "Connection Identifier"
     is always implied by the Stream upon which the primitive is issued.

  2. Note that SCCP does not provide receipt confirmation and therefore does
     not support the "N-DATA-ACKNOWLEDGE request" and "N-DATA-ACKNOWLEDGE
     indication" primitives of X.213.  Therefore, there is no mapping of these
     primitives to the `N_DATACK_REQ' and `N_DATACK_IND' primitives of NPI
     Revision 2.0.0.

  3. NPI Revision 2.0.0 does not have a proper mechanism for transferring the
     "Importance" parameters on `N_DATA_REQ' primitives.  This specification
     accomplishes the passing of "Importance" on `N_DATA_REQ' primitives by
     encoding the "Importance" parameter into the DATA_XFER_FLAGS field.

The mapping of NPI CONS primitives and their associated data fields to ITU-T
Q.711 is illustrated in *note Table A-5b::.


  +--------------------------------+-----------------------------------------+
  |        Q.711 Primitive         |              NPI Primitive              |
  +---------+----------+-----------+---------------+-------------------------+
  |Generic  | Specific | Parameter | Type          | Field                   |
  +---------+----------+-----------+---------------+-------------------------+
  |N-INFORM | request  | Conn. Id  | N_OPTMGMT_REQ | (implied)               |
  |         |          | Reason    |               | --                      |
  |         |          | QOS parms |               | QOS_length/offset       |
  |         |          +-----------+---------------+-------------------------+
  |         |          | Conn. Id  | N_RESET_REQ   | (implied)               |
  |         |          | Reason    |               | RESET_reason            |
  |         |          | QOS parms |               | --                      |
  |         |          +-----------+---------------+-------------------------+
  |         |          | Conn. Id  | N_DISCON_REQ  | (implied)               |
  |         |          | Reason    |               | DISCON_reason           |
  |         |          | QOS parms |               | --                      |
  |         +----------+-----------+---------------+-------------------------+
  |         | indicate | Conn. Id  | N_RESET_IND   | (implied)               |
  |         |          | Reason    |               | RESET_reason            |
  |         |          | QOS parms |               | --                      |
  |         |          +-----------+---------------+-------------------------+
  |         |          | Conn. Id  | N_DISCON_IND  | (implied)               |
  |         |          | Reason    |               | DISCON_reason           |
  |         |          | QOS parms |               | --                      |
  |         |          +-----------+---------------+-------------------------+
  |         |          | Conn. Id  | N_INFO_ACK    | (implied)               |
  |         |          | Reason    |               | --                      |
  |         |          | QOS parms |               | QOS_range_length/offset |
  |         |          +-----------+---------------+-------------------------+
  |         |          | Conn. Id  | M_HANGUP      | (implied)               |
  |         |          | Reason    |               | --                      |
  |         |          | QOS parms |               | --                      |
  +---------+----------+-----------+---------------+-------------------------+

           _Table A-5b.  Mapping NPI CONS Primitives to ITU-T Q.711_

Note that as illustrated in *note Table A-5b:: there are several considerations
for the Network Provider Interface (NPI) Revision 2.0.0 specification when
applied to SCCP:

  1. SCCP provide an "N-INFORM request" and "N-INFORM indication" primitive
     that is not provided by X.213.  These primitives are used to communicate
     changes in availablility and expected Quality of Service between the
     connection-oriented SCCP-User and the SCCP during data transfer on a
     connection.

     To inform the SCCP of a change in experienced Quality of Service at the
     SCCP-User for a connection, the `N_OPTMGMT_REQ' primitive with the
     appropriate QOS structure type can be used.  To inform the SCCP of a
     change in congestion at the SCCP-User for a connection, the `N_RESET_REQ'
     primitive with the appropriate RESET_REASON can be used: this reset
     request will not result in the flushing of the Stream.  To inform the SCCP
     of a failure at the SCCP-User for a connection, the `N_DISCON_REQ'
     primitive with the appropriate DISCON_REASON can be used.

     The SCCP may inform the SCCP-User of a change in congestion by using a
     `N_RESET_IND' primitive with the appropriate RESET_REASON: this reset
     indication will not result in the flushing of the Stream.  To inform the
     SCCP of a failure at the SCCP for a connection, the `N_DISCON_IND'
     primitive with the appropriate DISCON_REASON can be used, or in
     exceptional circumstances, a `M_HANGUP' or `M_ERROR' message can be
     issued.  To inform the SCCP of a change in Quality of Service parameters
     at the SCCP for a connection, the `N_RESET_IND' primitive can be issued
     with an appropriate RESET_REASON.  The SCCP-User may then issue a
     `N_INFO_REQ' primitive to obtain the new QOS range supported by the SCCP
     in the `N_INFO_ACK' response.


File: npi_sccp.info,  Node: Mapping of Q.711 CLNS Data Transfer Primitives to NPI,  Next: Mapping of Q.711 Management Primitives to NPI,  Prev: Mapping of Q.711 CONS Data Transfer Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T Q.711

A.2.3 Mapping of Q.711 CLNS Data Transfer Primitives to NPI
-----------------------------------------------------------

The mapping of NPI CLNS data transfer primitives and their associated data
fields to ITU-T Q.711 is illustrated in *note Table A-6::.


  +------------------------------------+-------------------------------------+
  |          Q.711 Primitive           |            NPI Primitive            |
  +------------+----------+------------+----------------+--------------------+
  |Generic     | Specific | Parameter  | Type           | Field              |
  +------------+----------+------------+----------------+--------------------+
  |N-UNIT-DATA | request  | Clg. addr  | N_UNITDATA_REQ | (implied)          |
  |            |          | Cld. addr  |                | DEST_length/offset |
  |            |          | QOS parms  |                | RESERVED_field     |
  |            |          | Seq. ctrl  |                | RESERVED_field     |
  |            |          | Return err |                | RESERVED_field     |
  |            |          | Importance |                | RESERVED_field     |
  |            |          | User data  |                | M_DATA             |
  |            +----------+------------+----------------+--------------------+
  |            | indicate | Clg. addr  | N_UNITDATA_IND | SRC_length/offset  |
  |            |          | Cld. addr  |                | DEST_length/offset |
  |            |          | QOS parms  |                | ERROR_type         |
  |            |          | Seq. ctrl  |                | ERROR_type         |
  |            |          | Return err |                | ERROR_type         |
  |            |          | Importance |                | ERROR_type         |
  |            |          | User data  |                | M_DATA             |
  +------------+----------+------------+----------------+--------------------+
  |N-NOTICE    | indicate | Cld. addr  | N_UDERROR_IND  | DEST_length/offset |
  |            |          | Clg. addr  |                | SRC_length/offset  |
  |            |          | Reason     |                | ERROR_type         |
  |            |          | Importance |                | ERROR_type         |
  |            |          | User data  |                | M_DATA             |
  +------------+----------+------------+----------------+--------------------+

    _Table A-6.  Mapping NPI CLNS Data Transfer Primitives to ITU-T Q.711_

Note that as illustrated in *note Table A-6:: there are several considerations
for the Network Provider Interface (NPI) Revision 2.0.0 specification when
applied to SCCP:

  1. NPI Revision 2.0.0 does not have a usable way of setting the per-primitive
     "Quality of Service parameter set", "Sequence control", "Return option",
     and "Importance" using the `N_UNITDATA_REQ' primtive.  The `OpenSS7
     Project' uses the RESERVED_FIELD[0] and RESERVED_FIELD[1] in the
     `N_UNITDATA_REQ' primitive as though they were a QOS_LENGTH and QOS_OFFSET
     field, respectively, to pass the "Quality of Service parameter set",
     "Sequence control", "Return option", and "Importance".

  2. NPI Revision 2.0.0 does not have a usable way of indicating per-primitive
     "Quality of Service parameter set", "Sequence control", "Return option",
     and "Importance" using the `N_UNITDATA_IND' primitive.  The `OpenSS7
     Project' uses the ERROR_TYPE, which is already defined as a bit-field, to
     pass "Sequence control", "Return option", and "Importance" information.

  3. NPI Revision 2.0.0 does not have a usable way of indicating "Importance"
     in the `N_UDERROR_IND' primitive.  The `OpenSS7 Project' uses the
     ERROR_TYPE to encode the "Importance" for those errors for which it is
     important (user congestion, SCCP congestion).



File: npi_sccp.info,  Node: Mapping of Q.711 Management Primitives to NPI,  Prev: Mapping of Q.711 CLNS Data Transfer Primitives to NPI,  Up: Mapping NPI Primitives to ITU-T Q.711

A.2.4 Mapping of Q.711 Management Primitives to NPI
---------------------------------------------------

The mapping of NPI CONS and CLNS primitives and their associated data fields to
ITU-T Q.711 is illustrated in *note Table A-7::.


   +----------------------------------------+-------------------------------+
   |            Q.711 Primitive             |         NPI Primitive         |
   +----------+----------+------------------+---------------+---------------+
   |Generic   | Specific | Parameter        | Type          | Field         |
   +----------+----------+------------------+---------------+---------------+
   |N-COORD   | request  | Affected SSN     | --            | --            |
   |          +----------+------------------+---------------+---------------+
   |          | indicate | Affected SSN     | --            | --            |
   |          |          | SMI              |               | --            |
   |          +----------+------------------+---------------+---------------+
   |          | respond  | Affected SSN     | --            | --            |
   |          +----------+------------------+---------------+---------------+
   |          | confirm  | Affected SSN     | --            | --            |
   |          |          | SMI              |               | --            |
   +----------+----------+------------------+---------------+---------------+
   |N-STATE   | request  | Affected SSN     | --            | --            |
   |          |          | User status      |               | --            |
   |          +----------+------------------+---------------+---------------+
   |          | indicate | Affected SSN     | N_UDERROR_IND | (implied)     |
   |          |          | User status      |               | ERROR_type    |
   |          |          | SMI              |               | --            |
   |          |          +------------------+---------------+---------------+
   |          |          | Affected SSN     | N_RESET_IND   | (implied)     |
   |          |          | User status      |               | RESET_reason  |
   |          |          +------------------+---------------+---------------+
   |          |          | Affected SSN     | N_DISCON_IND  | (implied)     |
   |          |          | User status      |               | DISCON_reason |
   |          |          | SMI              |               | --            |
   +----------+----------+------------------+---------------+---------------+
   |N-PCSTATE | indicate | Affected MTP-SAP | N_UDERROR_IND | (implied)     |
   |          |          | SP status        |               | ERROR_type    |
   |          |          | Rest. Imp.       |               | ERROR_type    |
   |          |          | SCCP status      |               | ERROR_type    |
   |          |          +------------------+---------------+---------------+
   |          |          | Affected MTP-SAP | N_RESET_IND   | (implied)     |
   |          |          | SP status        |               | RESET_reason  |
   |          |          | Rest. Imp.       |               | RESET_reason  |
   |          |          | SCCP status      |               | RESET_reason  |
   |          |          +------------------+---------------+---------------+
   |          |          | Affected MTP-SAP | N_DISCON_IND  | (implied)     |
   |          |          | SP status        |               | DISCON_reason |
   |          |          | Rest. Imp.       |               | DISCON_reason |
   |          |          | SCCP status      |               | DISCON_reason |
   +----------+----------+------------------+---------------+---------------+

       _Table A-7.  Mapping NPI CONS and CLNS Primitives to ITU-T Q.711_


File: npi_sccp.info,  Node: Mapping NPI Primitives to ETSI EN 300 009-1,  Next: Mapping NPI Primitives to ANSI T1.112,  Prev: Mapping NPI Primitives to ITU-T Q.711,  Up: Mapping NPI-SCCP Primitives

A.3 Mapping NPI Primitives to ETSI EN 300 009-1
===============================================


File: npi_sccp.info,  Node: Mapping NPI Primitives to ANSI T1.112,  Prev: Mapping NPI Primitives to ETSI EN 300 009-1,  Up: Mapping NPI-SCCP Primitives

A.4 Mapping NPI Primitives to ANSI T1.112
=========================================


File: npi_sccp.info,  Node: NPI-SCCP Header Files,  Next: NPI-SCCP Library,  Prev: Mapping NPI-SCCP Primitives,  Up: Top

Appendix B NPI-SCCP Header Files
********************************

Applications using the Network Provider Interface (NPI) for Signalling
Connection Control Part (SCCP) need to include several system header files:

* Menu:

* Protocol Primitive Header::
* Input-Output Control Header::


File: npi_sccp.info,  Node: Protocol Primitive Header,  Next: Input-Output Control Header,  Up: NPI-SCCP Header Files

B.1 Protocol Primitive Header
=============================

`errno.h'         Provides UNIX system error number definitions.
`sys/types.h'     Provides C types used by the header files.
`sys/ioctl.h'     Provides types and declarations associated with the `ioctl(2)'
                 (*note (*manpages*)ioctl(2)::) system call.
`sys/npi.h'       Provides the base Network Provider Interface (NPI) definitions
                 and declarations.
`sys/npi_mtp.h'   Provides the SS7 Message Transfer Part (MTP) definitions and
                 declarations.
`sys/npi_sccp.h'  Provides the SS7 Signalling Connection Control Part (SCCP)
                 definitions and declarations.

* Menu:

* Protocol Primitive Header Listing::


File: npi_sccp.info,  Node: Protocol Primitive Header Listing,  Up: Protocol Primitive Header

B.1.1 Protocol Primitive Header Listing
---------------------------------------

/*****************************************************************************

 @(#) $Id: npi_sccp.h,v 0.9.2.1 2008-11-17 14:04:32 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-11-17 14:04:32 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: npi_sccp.h,v $
 Revision 0.9.2.1  2008-11-17 14:04:32  brian
 - added documentation and conversion modules

 Revision 0.9.2.7  2008-04-29 07:10:46  brian
 - updating headers for release

 Revision 0.9.2.6  2007/08/14 12:17:12  brian
 - GPLv3 header updates

 Revision 0.9.2.5  2007/02/13 14:05:30  brian
 - corrected ulong and long for 32-bit compat

 Revision 0.9.2.4  2007/02/13 07:55:42  brian
 - working up MTP and UAs

 *****************************************************************************/

#ifndef _SYS_NPI_SCCP_H
#define _SYS_NPI_SCCP_H

#ident "@(#) $RCSfile: npi_sccp.h,v $ $Name: OpenSS7-0_9_2 $($Revision: 0.9.2.1 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/* This file can be processed with doxygen(1). */

/*
 *  LiS npi.h is version 1
 */
#ifndef N_VERSION_2

#define N_CURRENT_VERSION   0x02        /* current version of NPI */
#define N_VERSION_2         0x02        /* version of npi, December 16, 1991 */

typedef uchar np_uchar;

/*
 * Information acknowledgement
 */
typedef struct {
        np_ulong PRIM_type;             /* always N_INFO_ACK */
        np_ulong NSDU_size;             /* maximum NSDU size */
        np_ulong ENSDU_size;            /* maximum ENSDU size */
        np_ulong CDATA_size;            /* connect data size */
        np_ulong DDATA_size;            /* discon data size */
        np_ulong ADDR_size;             /* address size */
        np_ulong ADDR_length;           /* address length */
        np_ulong ADDR_offset;           /* address offset */
        np_ulong QOS_length;            /* QOS values length */
        np_ulong QOS_offset;            /* QOS values offset */
        np_ulong QOS_range_length;      /* length of QOS values' range */
        np_ulong QOS_range_offset;      /* offset of QOS values' range */
        np_ulong OPTIONS_flags;         /* bit masking for options supported */
        np_ulong NIDU_size;             /* network i/f data unit size */
        np_long SERV_type;              /* service type */
        np_ulong CURRENT_state;         /* current state */
        np_ulong PROVIDER_type;         /* type of NS provider */
        np_ulong NODU_size;             /* optimal NSDU size */
        np_ulong PROTOID_length;        /* length of bound protocol ids */
        np_ulong PROTOID_offset;        /* offset of bound protocol ids */
        np_ulong NPI_version;           /* version # of npi that is supported */
} __N_info_ack_t;

#define N_info_ack_t __N_info_ack_t

/*
 * Bind acknowledgement
 */
typedef struct {
        np_ulong PRIM_type;             /* always N_BIND_ACK */
        np_ulong ADDR_length;           /* address length */
        np_ulong ADDR_offset;           /* offset of address */
        np_ulong CONIND_number;         /* connection indications */
        np_ulong TOKEN_value;           /* value of "token" assigned to stream */
        np_ulong PROTOID_length;        /* length of bound protocol ids */
        np_ulong PROTOID_offset;        /* offset of bound protocol ids */
} __N_bind_ack_t;

#define N_bind_ack_t __N_bind_ack_t

#endif                          /* N_VERSION_2 */

/*
 *  Extended NPI primitives for SCCP.
 */

#define N_NOTICE_IND    32
typedef struct {
        np_ulong PRIM_type;             /* always N_NOTICE_IND */
        np_ulong DEST_length;           /* address data was sent to */
        np_ulong DEST_offset;
        np_ulong SRC_length;            /* address data was sent from */
        np_ulong SRC_offset;
        np_ulong QOS_length;            /* QOS parameters data was sent with */
        np_ulong QOS_offset;
        np_ulong RETURN_cause;          /* reason for return of data */
} N_notice_ind_t;

#define N_INFORM_REQ    33
typedef struct {
        np_ulong PRIM_type;             /* always N_INFORM_REQ */
        np_ulong QOS_length;            /* qos parameters */
        np_ulong QOS_offset;
        np_ulong REASON;                /* inform reason */
} N_inform_req_t;

#define N_INFORM_IND    34
typedef struct {
        np_ulong PRIM_type;             /* always N_INFORM_IND */
        np_ulong QOS_length;            /* qos parameters */
        np_ulong QOS_offset;
        np_ulong REASON;                /* inform reason */
} N_inform_ind_t;

/* Inform reasons for use with N_INFORM_IND */
#define N_SCCP_INFR_NSP_FAILURE         1
#define N_SCCP_INFR_NSP_CONGESTION      2
#define N_SCCP_INFR_NSP_QOS_CHANGE      3
/* Inform reasons for use with N_INFORM_REQ */
#define N_SCCP_INFR_NSU_FAILURE         4
#define N_SCCP_INFR_NSU_CONGESTION      5
#define N_SCCP_INFR_NSU_QOS_CHANGE      6
/* Inform reasons for use with N_INFORM */
#define N_SCCP_INFR_UNSPECIFIED         7

#define N_COORD_REQ     35
typedef struct {
        np_ulong PRIM_type;             /* alwyas N_COORD_REQ */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
} N_coord_req_t;

#define N_COORD_RES     36
typedef struct {
        np_ulong PRIM_type;             /* always N_COORD_RES */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
} N_coord_res_t;

#define N_COORD_IND     37
typedef struct {
        np_ulong PRIM_type;             /* alwyas N_COORD_IND */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
        np_ulong SMI;                   /* subsystem multiplicity indicator */
} N_coord_ind_t;

#define N_COORD_CON     38
typedef struct {
        np_ulong PRIM_type;             /* always N_COORD_CON */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
        np_ulong SMI;                   /* subsystem multiplicity indicator */
} N_coord_con_t;

#define N_STATE_REQ     39
typedef struct {
        np_ulong PRIM_type;             /* always N_STATE_REQ */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
        np_ulong STATUS;                /* user status */
} N_state_req_t;

#define N_STATE_IND     40
typedef struct {
        np_ulong PRIM_type;             /* always N_STATE_IND */
        np_ulong ADDR_length;           /* affected subsystem */
        np_ulong ADDR_offset;
        np_ulong STATUS;                /* user status */
        np_ulong SMI;                   /* subsystem multiplicity indicator */
} N_state_ind_t;

#define N_PCSTATE_IND   41
typedef struct {
        np_ulong PRIM_type;             /* always N_PCSTATE_IND */
        np_ulong ADDR_length;           /* affected point code */
        np_ulong ADDR_offset;
        np_ulong STATUS;                /* status */
} N_pcstate_ind_t;

#define N_TRAFFIC_IND   42
typedef struct {
        np_ulong PRIM_type;             /* always N_TRAFFIC_IND */
        np_ulong ADDR_length;           /* affected user */
        np_ulong ADDR_offset;
        np_ulong TRAFFIC_mix;           /* traffic mix */
} N_traffic_ind_t;

#define N_SCCP_STATUS_USER_IN_SERVICE                   1
#define N_SCCP_STATUS_USER_OUT_OF_SERVICE               2
#define N_SCCP_STATUS_REMOTE_SCCP_AVAILABLE             3
#define N_SCCP_STATUS_REMOTE_SCCP_UNAVAILABLE           4
#define N_SCCP_STATUS_REMOTE_SCCP_UNEQUIPPED            5
#define N_SCCP_STATUS_REMOTE_SCCP_INACCESSIBLE          6
//#define N_SCCP_STATUS_REMOTE_SCCP_CONGESTED
#define N_SCCP_STATUS_REMOTE_SCCP_CONGESTED(_x)         (7 + _x)
#define N_SCCP_STATUS_SIGNALLING_POINT_INACCESSIBLE     16
//#define N_SCCP_STATUS_SIGNALLING_POINT_CONGESTED
#define N_SCCP_STATUS_SIGNALLING_POINT_CONGESTED(_x)    (17 + _x)
#define N_SCCP_STATUS_SIGNALLING_POINT_ACCESSIBLE       26

#define N_SCCP_TMIX_ALL_PREFFERED_NO_BACKUP     1
#define N_SCCP_TMIX_ALL_PREFERRED_SOME_BACKUP   2
#define N_SCCP_TMIX_ALL_PREFERRED_ALL_BACKUP    3
#define N_SCCP_TMIX_SOME_PREFERRED_NO_BACKUP    4
#define N_SCCP_TMIX_SOME_PREFERRED_SOME_BACKUP  5
#define N_SCCP_TMIX_NO_PREFERRED_NO_BACKUP      6
#define N_SCCP_TMIX_ALL                         7
#define N_SCCP_TMIX_SOME                        8
#define N_SCCP_TMIX_NONE                        9

#ifndef NSF_UNBND
#define NSF_UNBND       (1<<NS_UNBND      )
#define NSF_WACK_BREQ   (1<<NS_WACK_BREQ  )
#define NSF_WACK_UREQ   (1<<NS_WACK_UREQ  )
#define NSF_IDLE        (1<<NS_IDLE       )
#define NSF_WACK_OPTREQ (1<<NS_WACK_OPTREQ)
#define NSF_WACK_RRES   (1<<NS_WACK_RRES  )
#define NSF_WCON_CREQ   (1<<NS_WCON_CREQ  )
#define NSF_WRES_CIND   (1<<NS_WRES_CIND  )
#define NSF_WACK_CRES   (1<<NS_WACK_CRES  )
#define NSF_DATA_XFER   (1<<NS_DATA_XFER  )
#define NSF_WCON_RREQ   (1<<NS_WCON_RREQ  )
#define NSF_WRES_RIND   (1<<NS_WRES_RIND  )
#define NSF_WACK_DREQ6  (1<<NS_WACK_DREQ6 )
#define NSF_WACK_DREQ7  (1<<NS_WACK_DREQ7 )
#define NSF_WACK_DREQ9  (1<<NS_WACK_DREQ9 )
#define NSF_WACK_DREQ10 (1<<NS_WACK_DREQ10)
#define NSF_WACK_DREQ11 (1<<NS_WACK_DREQ11)
#endif                          /* NSF_UNBND */

typedef struct sccp_addr {
        np_ulong ni;                    /* network indicator */
        np_ulong ri;                    /* routing indicator */
        np_ulong pc;                    /* point code (-1 not present) */
        np_ulong ssn;                   /* subsystem number (0 not present) */
        np_ulong gtt;                   /* type of global title */
        np_ulong tt;                    /* translation type */
        np_ulong es;                    /* encoding scheme */
        np_ulong nplan;                 /* numbering plan */
        np_ulong nai;                   /* nature of address indicator */
        np_ulong alen;                  /* address length */
        uchar addr[0];                  /* address digits */
        /* followed by address bytes */
} sccp_addr_t;

#define SCCP_MAX_ADDR_LENGTH 32

#define SCCP_RI_DPC_SSN         0       /* route on DPC/SSN */
#define SCCP_RI_GT              1       /* route on GT */

#define SCCP_GTTTYPE_NONE       0       /* no GT */
#define SCCP_GTTTYPE_NAI        1       /* NAI only */
#define SCCP_GTTTYPE_TT         2       /* TT only */
#define SCCP_GTTTYPE_NP         3       /* TT, ES, NPLAN */
#define SCCP_GTTTYPE_NP_NAI     4       /* TT, ES, NPLAN and NAI */

#define N_QOS_SEL_DATA_SCCP     0x0901
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_DATA_SCCP */
        np_ulong protocol_class;        /* protocol class */
        np_ulong option_flags;          /* options flags (return option) */
        np_ulong sequence_selection;    /* selected SLS value */
        np_ulong message_priority;      /* MTP message priority */
        np_ulong importance;            /* importance */
} N_qos_sel_data_sccp_t;

#define N_QOS_SEL_CONN_SCCP     0x0902
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_CONN_SCCP */
        np_ulong protocol_class;        /* protocol class 2 or 3 */
        np_ulong option_flags;          /* options flags (return option) */
        np_ulong sequence_selection;    /* selected SLS value */
        np_ulong message_priority;      /* MTP message priority */
        np_ulong importance;            /* importance */
} N_qos_sel_conn_sccp_t;

#define N_QOS_SEL_INFO_SCCP     0x0903
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_INFO_SCCP */
        np_ulong protocol_class;        /* protocol class */
        np_ulong option_flags;          /* options flags (return option) */
        np_ulong sequence_selection;    /* selected SLS value */
        np_ulong message_priority;      /* MTP message priority */
        np_ulong importance;            /* importance */
} N_qos_sel_info_sccp_t;

#define N_QOS_RANGE_INFO_SCCP   0x0904
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_RANGE_INFO_SCCP */
        np_ulong protocol_classes;      /* protocol class */
        np_ulong sequence_selection;    /* SLS range */
} N_qos_range_info_sccp_t;

#define N_QOS_SEL_INFR_SCCP     0x0905
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_INFR_SCCP */
        np_ulong protocol_class;        /* protocol class */
        np_ulong option_flags;          /* options flags (return option) */
        np_ulong sequence_selection;    /* selected SLS value */
        np_ulong message_priority;      /* MTP message priority */
        np_ulong importance;            /* importance */
} N_qos_sel_infr_sccp_t;

typedef union {
        np_ulong n_qos_type;
        N_qos_sel_data_sccp_t sel_data;
        N_qos_sel_conn_sccp_t sel_conn;
        N_qos_sel_info_sccp_t sel_info;
        N_qos_range_info_sccp_t range_info;
        N_qos_sel_infr_sccp_t sel_infr;
} N_qos_sccp_t;

/*
 *  Protocol Class bit masks with N_QOS_RANGE_SCCP protocol_classes
 */
#define N_QOS_PCLASS_0          0x01
#define N_QOS_PLCASS_1          0x02
#define N_QOS_PCLASS_2          0x04
#define N_QOS_PCLASS_3          0x08
#define N_QOS_PCLASS_ALL        0x0f

/*
 *  SCCP Causes
 */

/*
 *  SCCP Release Causes used in N_DISCON_IND
 */
#define SCCP_RELC_END_USER_ORIGINATED                           0x1000
#define SCCP_RELC_END_USER_BUSY                                 0x1001
#define SCCP_RELC_END_USER_FAILURE                              0x1002
#define SCCP_RELC_SCCP_USER_ORIGINATED                          0x1003
#define SCCP_RELC_REMOTE_PROCEDURE_ERROR                        0x1004
#define SCCP_RELC_INCONSISTENT_CONNECTION_DATA                  0x1005
#define SCCP_RELC_ACCESS_FAILURE                                0x1006
#define SCCP_RELC_ACCESS_CONGESTION                             0x1007
#define SCCP_RELC_SUBSYSTEM_FAILURE                             0x1008
#define SCCP_RELC_SUBSYSTEM_CONGESTION                          0x1009
#define SCCP_RELC_MTP_FAILURE                                   0x100a
#define SCCP_RELC_NETWORK_CONGESTION                            0x100b
#define SCCP_RELC_EXPIRATION_OF_RESET_TIMER                     0x100c
#define SCCP_RELC_EXPIRATION_OF_RECEIVE_INACTIVITY_TIMER        0x100d
#define SCCP_RELC_RESERVED                                      0x100e
#define SCCP_RELC_UNQUALIFIED                                   0x100f
#define SCCP_RELC_SCCP_FAILURE                                  0x1010

/*
 *  SCCP Return Causes used in N_UDERROR_IND
 */
#define SCCP_RETC_NO_ADDRESS_TYPE_TRANSLATION                   0x2000
#define SCCP_RETC_NO_ADDRESS_TRANSLATION                        0x2001
#define SCCP_RETC_SUBSYSTEM_CONGESTION                          0x2002
#define SCCP_RETC_SUBSYSTEM_FAILURE                             0x2003
#define SCCP_RETC_UNEQUIPPED_USER                               0x2004
#define SCCP_RETC_MTP_FAILURE                                   0x2005
#define SCCP_RETC_NETWORK_CONGESTION                            0x2006
#define SCCP_RETC_UNQUALIFIED                                   0x2007
#define SCCP_RETC_MESSAGE_TRANSPORT_ERROR                       0x2008
#define SCCP_RETC_LOCAL_PROCESSING_ERROR                        0x2009
#define SCCP_RETC_NO_REASSEMBLY_AT_DESTINATION                  0x200a
#define SCCP_RETC_SCCP_FAILURE                                  0x200b
#define SCCP_RETC_SCCP_HOP_COUNTER_VIOLATION                    0x200c
#define SCCP_RETC_SEGMENTATION_NOT_SUPPORTED                    0x200d
#define SCCP_RETC_SEGMENTATION_FAILURE                          0x200e

#define SCCP_RETC_MESSAGE_CHANGE_FAILURE                        0x20f7
#define SCCP_RETC_INVALID_INS_ROUTING_REQUEST                   0x20f8
#define SCCP_RETC_INVALID_INSI_ROUTING_REQUEST                  0x20f9
#define SCCP_RETC_UNAUTHORIZED_MESSAGE                          0x20fa
#define SCCP_RETC_MESSAGE_INCOMPATIBILITY                       0x20fb
#define SCCP_RETC_CANNOT_PERFORM_ISNI_CONSTRAINED_ROUTING       0x20fc
#define SCCP_RETC_REDUNDANT_ISNI_CONSTRAINED_ROUTING_INFO       0x20fd
#define SCCP_RETC_UNABLE_TO_PERFORM_ISNI_IDENTIFICATION         0x20fe

/*
 *  SCCP Reset Causes used in N_RESET_IND/REQ
 */
#define SCCP_RESC_END_USER_ORIGINATED                           0x3000
#define SCCP_RESC_SCCP_USER_ORIGINATED                          0x3001
#define SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PS             0x3002
#define SCCP_RESC_MESSAGE_OUT_OF_ORDER_INCORRECT_PR             0x3003
#define SCCP_RESC_REMOTE_PROC_ERROR_MESSAGE_OUT_OF_WINDOW       0x3004
#define SCCP_RESC_REMOTE_PROC_ERROR_INCORRECT_PS_AFTER_INIT     0x3005
#define SCCP_RESC_REMOTE_PROC_ERROR_GENERAL                     0x3006
#define SCCP_RESC_REMOTE_END_USER_OPERATIONAL                   0x3007
#define SCCP_RESC_NETWORK_OPERATIONAL                           0x3008
#define SCCP_RESC_ACCESS_OPERATIONAL                            0x3009
#define SCCP_RESC_NETWORK_CONGESTION                            0x300a
#define SCCP_RESC_NOT_OBTAINABLE                                0x300b
#define SCCP_RESC_UNQUALIFIED                                   0x300c

/*
 *  SCCP Error Causes
 */
#define SCCP_ERRC_LRN_MISMATCH_UNASSIGNED_DEST_LRN              0x4000
#define SCCP_ERRC_LRN_MISMATCH_INCONSISTENT_SOURCE_LRN          0x4001
#define SCCP_ERRC_POINT_CODE_MISMATCH                           0x4002
#define SCCP_ERRC_SERVICE_CLASS_MISMATCH                        0x4003
#define SCCP_ERRC_UNQUALIFIED                                   0x4004

/*
 *  SCCP Refusal Causes used in N_DISCON_IND
 */
#define SCCP_REFC_END_USER_ORIGINATED                           0x5000
#define SCCP_REFC_END_USER_CONGESTION                           0x5001
#define SCCP_REFC_END_USER_FAILURE                              0x5002
#define SCCP_REFC_SCCP_USER_ORIGINATED                          0x5003
#define SCCP_REFC_DESTINATION_ADDRESS_UNKNOWN                   0x5004
#define SCCP_REFC_DESTINATION_INACCESSIBLE                      0x5005
#define SCCP_REFC_NETWORK_RESOURCE_QOS_NOT_AVAIL_PERM           0x5006
#define SCCP_REFC_NETWORK_RESOURCE_QOS_NOT_AVAIL_TRANS          0x5007
#define SCCP_REFC_ACCESS_FAILURE                                0x5008
#define SCCP_REFC_ACCESS_CONGESTION                             0x5009
#define SCCP_REFC_SUBSYSTEM_FAILURE                             0x500a
#define SCCP_REFC_SUBSYSTEM_CONGESTION                          0x500b
#define SCCP_REFC_EXPIRATION_OF_NC_ESTAB_TIMER                  0x500c
#define SCCP_REFC_INCOMPATIBLE_USER_DATA                        0x500d
#define SCCP_REFC_RESERVED                                      0x500e
#define SCCP_REFC_UNQUALIFIED                                   0x500f
#define SCCP_REFC_SCCP_HOP_COUNTER_VIOLATION                    0x5010
#define SCCP_REFC_SCCP_FAILURE                                  0x5011
#define SCCP_REFC_NO_ADDRESS_TYPE_TRANSLATION                   0x5012
#define SCCP_REFC_UNEQUIPPED_USER                               0x5013

#endif                          /* _SYS_NPI_SCCP_H */


File: npi_sccp.info,  Node: Input-Output Control Header,  Prev: Protocol Primitive Header,  Up: NPI-SCCP Header Files

B.2 Input-Output Control Header
===============================

`errno.h'         Provides UNIX system error number definitions.
`sys/types.h'     Provides C types used by the header files.
`sys/ioctl.h'     Provides types and declarations associated with the `ioctl(2)'
                 (*note (*manpages*)ioctl(2)::) system call.
`sys/npi.h'       Provides the base Network Provider Interface (NPI) definitions
                 and declarations.
`sys/npi_mtp.h'   Provides the SS7 Message Transfer Part (MTP) definitions and
                 declarations.
`sys/npi_sccp.h'  Provides the SS7 Signalling Connection Control Part (SCCP)
                 definitions and declarations.
`sys/sccp_ioctl.h' Provides the SS7 Signalling Connection Control Part (SCCP)
                 input-output control definitions and declarations.

Note that the input-output control defintions are the same as those provided by
the Signalling Connection Control Part interface (SCCPI) described in a
separate document.


File: npi_sccp.info,  Node: NPI-SCCP Library,  Next: NPI-SCCP Drivers and Modules,  Prev: NPI-SCCP Header Files,  Up: Top

Appendix C NPI-SCCP Library
***************************

Because this Addendum provides an SCCP interface that conforms to the Network
Provider Interface (NPI) Revision 2.0.0, it can use the libraries provided for
use by the NPI.  In particular, the `libnpiapi(3)' (*note
(*manpages*)libnpiapi(3)::) library can be used.


File: npi_sccp.info,  Node: NPI-SCCP Drivers and Modules,  Next: NPI-SCCP Utilities,  Prev: NPI-SCCP Library,  Up: Top

Appendix D NPI-SCCP Drivers and Modules
***************************************

* Menu:

* TCI Module::
* TRI Driver and Module::
* SCCP Multiplexing Driver::
* SUA Application Server Driver and Module::
* NPI Conversion Module::
* TPI Conversion Module::

The Signalling Connection Contorl Part Interface (SCCPI) is used to provide
services to a number of `STREAMS' drivers and modules in addition to user-space
applications.  `OpenSS7 SS7 Stack' provides a range of `STREAMS' multiplexing
drivers, pseudo-device drivers, and pushable modules that complement the SS7
Signalling Connection Control Part driver that provides the Signalling
Connection Control Part Interface (SCCPI) at its upper layer.


File: npi_sccp.info,  Node: TCI Module,  Next: TRI Driver and Module,  Up: NPI-SCCP Drivers and Modules

D.1 TCI Module
==============

The "TCI Module" is a pushable "STREAMS" module that provide the Component
Handling sublayer of the Transaction Capabilities Application Part (TCAP).  It
implements the Transaction Component Interface (TCI) at its upper boundary and
utilized the Transaction Interface (TRI) at its lower boundary.


File: npi_sccp.info,  Node: TRI Driver and Module,  Next: SCCP Multiplexing Driver,  Prev: TCI Module,  Up: NPI-SCCP Drivers and Modules

D.2 TRI Driver and Module
=========================

The "TRI Driver and Mdoule" is a "STREAMS" multiplexing driver or pushable
module that links or pushes Streams conforming to the Signalling Connection
Control Part Interface (SCCPI) and provide an upper boundary that conforms to
the Transaction Interace (TRI).  It implements the Transaction Handling
sublayer of the Transaction Capabilities Application Part (TCAP) protocol.  The
module is more appropriate for Streams that service an entire SCCP subsystem,
whereas the multiplexing driver is appropriate for Streams that handle only a
subset of the Application Contexts available for a given SCCP subsystem.


File: npi_sccp.info,  Node: SCCP Multiplexing Driver,  Next: SUA Application Server Driver and Module,  Prev: TRI Driver and Module,  Up: NPI-SCCP Drivers and Modules

D.3 SCCP Multiplexing Driver
============================

The SCCP Multiplexing Driver is the primary driver that provides SCCP
functionality within the `OpenSS7 SS7 Stack'.  It accepts Message Transfer Part
(MTP) Streams linked beneath the multiplexing driver that support the Message
Transfer Part Interface (MTPI), such as is provided by the MTP Mutiplexing
Driver or the the M3UA Application Server drivers and modules.


File: npi_sccp.info,  Node: SUA Application Server Driver and Module,  Next: NPI Conversion Module,  Prev: SCCP Multiplexing Driver,  Up: NPI-SCCP Drivers and Modules

D.4 SUA Application Server Driver and Module
============================================

The Signalling Connection Control Part (SCCP) User Adaptation (SUA) Application
Server driver and module are `STREAMS' modules that provide the Signalling
Connection Control Part Interface (SCCPI) at their upper layer.  It accepts
Stream Control Transmission Protocol (SCTP) Streams linked or pushed beneath
the driver or module, that provide connectivity to a remote Signalling Gateway
(SG) or IP Signalling Point (IPSP).


File: npi_sccp.info,  Node: NPI Conversion Module,  Next: TPI Conversion Module,  Prev: SUA Application Server Driver and Module,  Up: NPI-SCCP Drivers and Modules

D.5 NPI Conversion Module
=========================

The "NPI Conversion Module" is a specific-purpose pushable "STREAMS" module
that can be pushed over any Stream conforming to the Signalling Connection
Control Part Interface (SCCPI) and converts that Stream to an NPI-SCCP service
interface conforming to this Addendum.  In the `OpenSS7 SS7 Stack', this module
can be pushed over either an SCCP multiplexing driver Stream or an SUA AS
driver or module Stream.  The sole purpose of this module is to convert the
Stream to the NPI specification so that the SCCP Stream can be used by external
applications.

A minor device number on the SCCP driver is defined that will `autopush(8)'
(*note (*manpages*)autopush(8)::) this module.

Similarly, a minor device number on the SUA driver is also defined.


File: npi_sccp.info,  Node: TPI Conversion Module,  Prev: NPI Conversion Module,  Up: NPI-SCCP Drivers and Modules

D.6 TPI Conversion Module
=========================

The "TPI Conversion Module" is a general-purpose pushable "STREAMS" module that
can be pushed over any Stream conforming to the Network Provider Interface
(NPI) and coverts that Stream to an XTI-SCCP service interface conforming to
the XTI-SCCP specification.  This permits the SCCP Stream to be used by
external applications using the XTI/TLI Library (`libxnet(3)' (*note
(*manpages*)libxnet(3)::)).

A minor device number on the SCCP driver is defined that will `autopush(8)'
(*note (*manpages*)autopush(8)::) the "NPI Conversion Module" and then push the
general-purpose "TPI Conversion Module" that is part of the `strxnet' package.
The "NPI Conversion Module" provides (by registration) option conversion
assistance to this module.

Similarly, a minor device number on the SUA driver is also defined.


File: npi_sccp.info,  Node: NPI-SCCP Utilities,  Next: NPI-SCCP Compatibility and Porting,  Prev: NPI-SCCP Drivers and Modules,  Up: Top

Appendix E NPI-SCCP Utilities
*****************************

In general, any of the utilities provided by the underlying SCCP or SUA
provider that support input-output controls defined in the SCCPI specification
can be used on SCCP or SUA Streams upon which the "NPI Conversion Module" has
been pushed to conform to this Addendum.  The "NPI Conversion Module" passes
input-output controls transparently to the underlying SCCP module.

Therefore, this specification does not define any utilities of its own.


File: npi_sccp.info,  Node: NPI-SCCP Compatibility and Porting,  Next: License,  Prev: NPI-SCCP Utilities,  Up: Top

Appendix F NPI-SCCP Compatibility and Porting
*********************************************


File: npi_sccp.info,  Node: License,  Next: Glossary,  Prev: NPI-SCCP Compatibility and Porting,  Up: Top

 License
********

All code presented in this manual is licensed under the *note GNU Affero
General Public License::.

The text of the manual are licensed under the *note GNU Free Documentation
License::, with no invariant sections, no front-cover texts and no back-cover
texts.  Please note, however, that it is just plain wrong to modify statements
of, or attribute statements to, the author or `OpenSS7 Corporation'.

* Menu:

* GNU Affero General Public License::
* GNU Free Documentation License::


File: npi_sccp.info,  Node: GNU Affero General Public License,  Next: GNU Free Documentation License,  Up: License

 GNU Affero General Public License
==================================



                    The GNU Affero General Public License.
                          Version 3, 19 November 2007

     Copyright (C) 2007 Free Software Foundation, Inc. `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.

 Preamble
---------

The GNU Affero General Public License is a free, copyleft license for software
and other kinds of works, specifically designed to ensure cooperation with the
community in the case of network server software.

The licenses for most software and other practical works are designed to take
away your freedom to share and change the works.  By contrast, our General
Public Licenses are intended to guarantee your freedom to share and change all
versions of a program-to make sure it remains free software for all its users.

When we speak of free software, we are referring to freedom, not price.  Our
General Public Licenses are designed to make sure that you have the freedom to
distribute copies of free software (and charge for them if you wish), that you
receive source code or can get it if you want it, that you can change the
software or use pieces of it in new free programs, and that you know you can do
these things.

Developers that use our General Public Licenses protect your rights with two
steps: (1) assert copyright on the software, and (2) offer you this License
which gives you legal permission to copy, distribute and/or modify the software.

A secondary benefit of defending all users' freedom is that improvements made
in alternate versions of the program, if they receive widespread use, become
available for other developers to incorporate.  Many developers of free
software are heartened and encouraged by the resulting cooperation.  However,
in the case of software used on network servers, this result may fail to come
about.  The GNU General Public License permits making a modified version and
letting the public access it on a server without ever releasing its source code
to the public.

The GNU Affero General Public License is designed specifically to ensure that,
in such cases, the modified source code becomes available to the community.  It
requires the operator of a network server to provide the source code of the
modified version running there to the users of that server.  Therefore, public
use of a modified version, on a publicly accessible server, gives the public
access to the source code of the modified version.

An older license, called the Affero General Public License and published by
Affero, was designed to accomplish similar goals.  This is a different license,
not a version of the Affero GPL, but Affero has released a new version of the
Affero GPL which permits relicensing under this license.

The precise terms and conditions for copying, distribution and modification
follow.

                             TERMS AND CONDITIONS
  0. Definitions.

     "This License" refers to version 3 of the GNU Affero General Public
     License.

     "Copyright" also means copyright-like laws that apply to other kinds of
     works, such as semiconductor masks.

     "The Program" refers to any copyrightable work licensed under this
     License.  Each licensee is addressed as "you".  "Licensees" and
     "recipients" may be individuals or organizations.

     To "modify" a work means to copy from or adapt all or part of the work in
     a fashion requiring copyright permission, other than the making of an
     exact copy.  The resulting work is called a "modified version" of the
     earlier work or a work "based on" the earlier work.

     A "covered work" means either the unmodified Program or a work based on
     the Program.

     To "propagate" a work means to do anything with it that, without
     permission, would make you directly or secondarily liable for infringement
     under applicable copyright law, except executing it on a computer or
     modifying a private copy.  Propagation includes copying, distribution
     (with or without modification), making available to the public, and in
     some countries other activities as well.

     To "convey" a work means any kind of propagation that enables other
     parties to make or receive copies.  Mere interaction with a user through a
     computer network, with no transfer of a copy, is not conveying.

     An interactive user interface displays "Appropriate Legal Notices" to the
     extent that it includes a convenient and prominently visible feature that
     (1) displays an appropriate copyright notice, and (2) tells the user that
     there is no warranty for the work (except to the extent that warranties
     are provided), that licensees may convey the work under this License, and
     how to view a copy of this License.  If the interface presents a list of
     user commands or options, such as a menu, a prominent item in the list
     meets this criterion.

  1. Source Code.

     The "source code" for a work means the preferred form of the work for
     making modifications to it.  "Object code" means any non-source form of a
     work.

     A "Standard Interface" means an interface that either is an official
     standard defined by a recognized standards body, or, in the case of
     interfaces specified for a particular programming language, one that is
     widely used among developers working in that language.

     The "System Libraries" of an executable work include anything, other than
     the work as a whole, that (a) is included in the normal form of packaging
     a Major Component, but which is not part of that Major Component, and (b)
     serves only to enable use of the work with that Major Component, or to
     implement a Standard Interface for which an implementation is available to
     the public in source code form.  A "Major Component", in this context,
     means a major essential component (kernel, window system, and so on) of
     the specific operating system (if any) on which the executable work runs,
     or a compiler used to produce the work, or an object code interpreter used
     to run it.

     The "Corresponding Source" for a work in object code form means all the
     source code needed to generate, install, and (for an executable work) run
     the object code and to modify the work, including scripts to control those
     activities.  However, it does not include the work's System Libraries, or
     general-purpose tools or generally available free programs which are used
     unmodified in performing those activities but which are not part of the
     work.  For example, Corresponding Source includes interface definition
     files associated with source files for the work, and the source code for
     shared libraries and dynamically linked subprograms that the work is
     specifically designed to require, such as by intimate data communication
     or control flow between those subprograms and other parts of the work.

     The Corresponding Source need not include anything that users can
     regenerate automatically from other parts of the Corresponding Source.

     The Corresponding Source for a work in source code form is that same work.

  2. Basic Permissions.

     All rights granted under this License are granted for the term of
     copyright on the Program, and are irrevocable provided the stated
     conditions are met.  This License explicitly affirms your unlimited
     permission to run the unmodified Program.  The output from running a
     covered work is covered by this License only if the output, given its
     content, constitutes a covered work.  This License acknowledges your
     rights of fair use or other equivalent, as provided by copyright law.

     You may make, run and propagate covered works that you do not convey,
     without conditions so long as your license otherwise remains in force.
     You may convey covered works to others for the sole purpose of having them
     make modifications exclusively for you, or provide you with facilities for
     running those works, provided that you comply with the terms of this
     License in conveying all material for which you do not control copyright.
     Those thus making or running the covered works for you must do so
     exclusively on your behalf, under your direction and control, on terms
     that prohibit them from making any copies of your copyrighted material
     outside their relationship with you.

     Conveying under any other circumstances is permitted solely under the
     conditions stated below.  Sublicensing is not allowed; section 10 makes it
     unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

     No covered work shall be deemed part of an effective technological measure
     under any applicable law fulfilling obligations under article 11 of the
     WIPO copyright treaty adopted on 20 December 1996, or similar laws
     prohibiting or restricting circumvention of such measures.

     When you convey a covered work, you waive any legal power to forbid
     circumvention of technological measures to the extent such circumvention
     is effected by exercising rights under this License with respect to the
     covered work, and you disclaim any intention to limit operation or
     modification of the work as a means of enforcing, against the work's
     users, your or third parties' legal rights to forbid circumvention of
     technological measures.

  4. Conveying Verbatim Copies.

     You may convey verbatim copies of the Program's source code as you receive
     it, in any medium, provided that you conspicuously and appropriately
     publish on each copy an appropriate copyright notice; keep intact all
     notices stating that this License and any non-permissive terms added in
     accord with section 7 apply to the code; keep intact all notices of the
     absence of any warranty; and give all recipients a copy of this License
     along with the Program.

     You may charge any price or no price for each copy that you convey, and
     you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

     You may convey a work based on the Program, or the modifications to
     produce it from the Program, in the form of source code under the terms of
     section 4, provided that you also meet all of these conditions:

       a. The work must carry prominent notices stating that you modified it,
          and giving a relevant date.

       b. The work must carry prominent notices stating that it is released
          under this License and any conditions added under section 7.  This
          requirement modifies the requirement in section 4 to "keep intact all
          notices".

       c. You must license the entire work, as a whole, under this License to
          anyone who comes into possession of a copy.  This License will
          therefore apply, along with any applicable section 7 additional terms,
          to the whole of the work, and all its parts, regardless of how they
          are packaged.  This License gives no permission to license the work in
          any other way, but it does not invalidate such permission if you have
          separately received it.

       d. If the work has interactive user interfaces, each must display
          Appropriate Legal Notices; however, if the Program has interactive
          interfaces that do not display Appropriate Legal Notices, your work
          need not make them do so.

     A compilation of a covered work with other separate and independent works,
     which are not by their nature extensions of the covered work, and which
     are not combined with it such as to form a larger program, in or on a
     volume of a storage or distribution medium, is called an "aggregate" if
     the compilation and its resulting copyright are not used to limit the
     access or legal rights of the compilation's users beyond what the
     individual works permit.  Inclusion of a covered work in an aggregate does
     not cause this License to apply to the other parts of the aggregate.

  6. Conveying Non-Source Forms.

     You may convey a covered work in object code form under the terms of
     sections 4 and 5, provided that you also convey the machine-readable
     Corresponding Source under the terms of this License, in one of these ways:

       a. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by the
          Corresponding Source fixed on a durable physical medium customarily
          used for software interchange.

       b. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by a written
          offer, valid for at least three years and valid for as long as you
          offer spare parts or customer support for that product model, to give
          anyone who possesses the object code either (1) a copy of the
          Corresponding Source for all the software in the product that is
          covered by this License, on a durable physical medium customarily used
          for software interchange, for a price no more than your reasonable
          cost of physically performing this conveying of source, or (2) access
          to copy the Corresponding Source from a network server at no charge.

       c. Convey individual copies of the object code with a copy of the written
          offer to provide the Corresponding Source.  This alternative is
          allowed only occasionally and noncommercially, and only if you
          received the object code with such an offer, in accord with subsection
          6b.

       d. Convey the object code by offering access from a designated place
          (gratis or for a charge), and offer equivalent access to the
          Corresponding Source in the same way through the same place at no
          further charge.  You need not require recipients to copy the
          Corresponding Source along with the object code.  If the place to copy
          the object code is a network server, the Corresponding Source may be
          on a different server (operated by you or a third party) that supports
          equivalent copying facilities, provided you maintain clear directions
          next to the object code saying where to find the Corresponding Source.
          Regardless of what server hosts the Corresponding Source, you remain
          obligated to ensure that it is available for as long as needed to
          satisfy these requirements.

       e. Convey the object code using peer-to-peer transmission, provided you
          inform other peers where the object code and Corresponding Source of
          the work are being offered to the general public at no charge under
          subsection 6d.


     A separable portion of the object code, whose source code is excluded from
     the Corresponding Source as a System Library, need not be included in
     conveying the object code work.

     A "User Product" is either (1) a "consumer product", which means any
     tangible personal property which is normally used for personal, family, or
     household purposes, or (2) anything designed or sold for incorporation
     into a dwelling.  In determining whether a product is a consumer product,
     doubtful cases shall be resolved in favor of coverage.  For a particular
     product received by a particular user, "normally used" refers to a typical
     or common use of that class of product, regardless of the status of the
     particular user or of the way in which the particular user actually uses,
     or expects or is expected to use, the product.  A product is a consumer
     product regardless of whether the product has substantial commercial,
     industrial or non-consumer uses, unless such uses represent the only
     significant mode of use of the product.

     "Installation Information" for a User Product means any methods,
     procedures, authorization keys, or other information required to install
     and execute modified versions of a covered work in that User Product from
     a modified version of its Corresponding Source.  The information must
     suffice to ensure that the continued functioning of the modified object
     code is in no case prevented or interfered with solely because
     modification has been made.

     If you convey an object code work under this section in, or with, or
     specifically for use in, a User Product, and the conveying occurs as part
     of a transaction in which the right of possession and use of the User
     Product is transferred to the recipient in perpetuity or for a fixed term
     (regardless of how the transaction is characterized), the Corresponding
     Source conveyed under this section must be accompanied by the Installation
     Information.  But this requirement does not apply if neither you nor any
     third party retains the ability to install modified object code on the
     User Product (for example, the work has been installed in ROM).

     The requirement to provide Installation Information does not include a
     requirement to continue to provide support service, warranty, or updates
     for a work that has been modified or installed by the recipient, or for
     the User Product in which it has been modified or installed.  Access to a
     network may be denied when the modification itself materially and
     adversely affects the operation of the network or violates the rules and
     protocols for communication across the network.

     Corresponding Source conveyed, and Installation Information provided, in
     accord with this section must be in a format that is publicly documented
     (and with an implementation available to the public in source code form),
     and must require no special password or key for unpacking, reading or
     copying.

  7. Additional Terms.

     "Additional permissions" are terms that supplement the terms of this
     License by making exceptions from one or more of its conditions.
     Additional permissions that are applicable to the entire Program shall be
     treated as though they were included in this License, to the extent that
     they are valid under applicable law.  If additional permissions apply only
     to part of the Program, that part may be used separately under those
     permissions, but the entire Program remains governed by this License
     without regard to the additional permissions.

     When you convey a copy of a covered work, you may at your option remove
     any additional permissions from that copy, or from any part of it.
     (Additional permissions may be written to require their own removal in
     certain cases when you modify the work.)  You may place additional
     permissions on material, added by you to a covered work, for which you
     have or can give appropriate copyright permission.

     Notwithstanding any other provision of this License, for material you add
     to a covered work, you may (if authorized by the copyright holders of that
     material) supplement the terms of this License with terms:

       a. Disclaiming warranty or limiting liability differently from the terms
          of sections 15 and 16 of this License; or

       b. Requiring preservation of specified reasonable legal notices or author
          attributions in that material or in the Appropriate Legal Notices
          displayed by works containing it; or

       c. Prohibiting misrepresentation of the origin of that material, or
          requiring that modified versions of such material be marked in
          reasonable ways as different from the original version; or

       d. Limiting the use for publicity purposes of names of licensors or
          authors of the material; or

       e. Declining to grant rights under trademark law for use of some trade
          names, trademarks, or service marks; or

       f. Requiring indemnification of licensors and authors of that material by
          anyone who conveys the material (or modified versions of it) with
          contractual assumptions of liability to the recipient, for any
          liability that these contractual assumptions directly impose on those
          licensors and authors.

     All other non-permissive additional terms are considered "further
     restrictions" within the meaning of section 10.  If the Program as you
     received it, or any part of it, contains a notice stating that it is
     governed by this License along with a term that is a further restriction,
     you may remove that term.  If a license document contains a further
     restriction but permits relicensing or conveying under this License, you
     may add to a covered work material governed by the terms of that license
     document, provided that the further restriction does not survive such
     relicensing or conveying.

     If you add terms to a covered work in accord with this section, you must
     place, in the relevant source files, a statement of the additional terms
     that apply to those files, or a notice indicating where to find the
     applicable terms.

     Additional terms, permissive or non-permissive, may be stated in the form
     of a separately written license, or stated as exceptions; the above
     requirements apply either way.

  8. Termination.

     You may not propagate or modify a covered work except as expressly
     provided under this License.  Any attempt otherwise to propagate or modify
     it is void, and will automatically terminate your rights under this
     License (including any patent licenses granted under the third paragraph
     of section 11).

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, you do not qualify to receive new licenses for the same
     material under section 10.

  9. Acceptance Not Required for Having Copies.

     You are not required to accept this License in order to receive or run a
     copy of the Program.  Ancillary propagation of a covered work occurring
     solely as a consequence of using peer-to-peer transmission to receive a
     copy likewise does not require acceptance.  However, nothing other than
     this License grants you permission to propagate or modify any covered
     work.  These actions infringe copyright if you do not accept this License.
     Therefore, by modifying or propagating a covered work, you indicate your
     acceptance of this License to do so.

 10. Automatic Licensing of Downstream Recipients.

     Each time you convey a covered work, the recipient automatically receives
     a license from the original licensors, to run, modify and propagate that
     work, subject to this License.  You are not responsible for enforcing
     compliance by third parties with this License.

     An "entity transaction" is a transaction transferring control of an
     organization, or substantially all assets of one, or subdividing an
     organization, or merging organizations.  If propagation of a covered work
     results from an entity transaction, each party to that transaction who
     receives a copy of the work also receives whatever licenses to the work
     the party's predecessor in interest had or could give under the previous
     paragraph, plus a right to possession of the Corresponding Source of the
     work from the predecessor in interest, if the predecessor has it or can
     get it with reasonable efforts.

     You may not impose any further restrictions on the exercise of the rights
     granted or affirmed under this License.  For example, you may not impose a
     license fee, royalty, or other charge for exercise of rights granted under
     this License, and you may not initiate litigation (including a cross-claim
     or counterclaim in a lawsuit) alleging that any patent claim is infringed
     by making, using, selling, offering for sale, or importing the Program or
     any portion of it.

 11. Patents.

     A "contributor" is a copyright holder who authorizes use under this
     License of the Program or a work on which the Program is based.  The work
     thus licensed is called the contributor's "contributor version".

     A contributor's "essential patent claims" are all patent claims owned or
     controlled by the contributor, whether already acquired or hereafter
     acquired, that would be infringed by some manner, permitted by this
     License, of making, using, or selling its contributor version, but do not
     include claims that would be infringed only as a consequence of further
     modification of the contributor version.  For purposes of this definition,
     "control" includes the right to grant patent sublicenses in a manner
     consistent with the requirements of this License.

     Each contributor grants you a non-exclusive, worldwide, royalty-free
     patent license under the contributor's essential patent claims, to make,
     use, sell, offer for sale, import and otherwise run, modify and propagate
     the contents of its contributor version.

     In the following three paragraphs, a "patent license" is any express
     agreement or commitment, however denominated, not to enforce a patent
     (such as an express permission to practice a patent or covenant not to sue
     for patent infringement).  To "grant" such a patent license to a party
     means to make such an agreement or commitment not to enforce a patent
     against the party.

     If you convey a covered work, knowingly relying on a patent license, and
     the Corresponding Source of the work is not available for anyone to copy,
     free of charge and under the terms of this License, through a publicly
     available network server or other readily accessible means, then you must
     either (1) cause the Corresponding Source to be so available, or (2)
     arrange to deprive yourself of the benefit of the patent license for this
     particular work, or (3) arrange, in a manner consistent with the
     requirements of this License, to extend the patent license to downstream
     recipients.  "Knowingly relying" means you have actual knowledge that, but
     for the patent license, your conveying the covered work in a country, or
     your recipient's use of the covered work in a country, would infringe one
     or more identifiable patents in that country that you have reason to
     believe are valid.

     If, pursuant to or in connection with a single transaction or arrangement,
     you convey, or propagate by procuring conveyance of, a covered work, and
     grant a patent license to some of the parties receiving the covered work
     authorizing them to use, propagate, modify or convey a specific copy of
     the covered work, then the patent license you grant is automatically
     extended to all recipients of the covered work and works based on it.

     A patent license is "discriminatory" if it does not include within the
     scope of its coverage, prohibits the exercise of, or is conditioned on the
     non-exercise of one or more of the rights that are specifically granted
     under this License.  You may not convey a covered work if you are a party
     to an arrangement with a third party that is in the business of
     distributing software, under which you make payment to the third party
     based on the extent of your activity of conveying the work, and under
     which the third party grants, to any of the parties who would receive the
     covered work from you, a discriminatory patent license (a) in connection
     with copies of the covered work conveyed by you (or copies made from those
     copies), or (b) primarily for and in connection with specific products or
     compilations that contain the covered work, unless you entered into that
     arrangement, or that patent license was granted, prior to 28 March 2007.

     Nothing in this License shall be construed as excluding or limiting any
     implied license or other defenses to infringement that may otherwise be
     available to you under applicable patent law.

 12. No Surrender of Others' Freedom.

     If conditions are imposed on you (whether by court order, agreement or
     otherwise) that contradict the conditions of this License, they do not
     excuse you from the conditions of this License.  If you cannot convey a
     covered work so as to satisfy simultaneously your obligations under this
     License and any other pertinent obligations, then as a consequence you may
     not convey it at all.  For example, if you agree to terms that obligate
     you to collect a royalty for further conveying from those to whom you
     convey the Program, the only way you could satisfy both those terms and
     this License would be to refrain entirely from conveying the Program.

 13. Remote Network Interaction; Use with the GNU General Public License.

     Notwithstanding any other provision of this License, if you modify the
     Program, your modified version must prominently offer all users interacting
     with it remotely through a network (if your version supports such
     interaction) an opportunity to receive the Corresponding Source of your
     version by providing access to the Corresponding Source from a network
     server at no charge, through some standard or customary means of
     facilitating copying of software.  This Corresponding Source shall include
     the Corresponding Source for any work covered by version 3 of the GNU
     General Public License that is incorporated pursuant to the following
     paragraph.

     Notwithstanding any other provision of this License, you have permission to
     link or combine any covered work with a work licensed under version 3 of
     the GNU General Public License into a single combined work, and to convey
     the resulting work.  The terms of this License will continue to apply to
     the part which is the covered work, but the work with which it is combined
     will remain governed by version 3 of the GNU General Public License.

 14. Revised Versions of this License.

     The Free Software Foundation may publish revised and/or new versions of
     the GNU Affero General Public License from time to time.  Such new
     versions will be similar in spirit to the present version, but may differ
     in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the Program
     specifies that a certain numbered version of the GNU Affero General Public
     License "or any later version" applies to it, you have the option of
     following the terms and conditions either of that numbered version or of
     any later version published by the Free Software Foundation.  If the
     Program does not specify a version number of the GNU Affero General Public
     License, you may choose any version ever published by the Free Software
     Foundation.

     If the Program specifies that a proxy can decide which future versions of
     the GNU Affero General Public License can be used, that proxy's public
     statement of acceptance of a version permanently authorizes you to choose
     that version for the Program.

     Later license versions may give you additional or different permissions.
     However, no additional obligations are imposed on any author or copyright
     holder as a result of your choosing to follow a later version.

 15. Disclaimer of Warranty.

     THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
     APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
     OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
     THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
     IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
     ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

 16. Limitation of Liability.

     IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
     ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE
     PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
     GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
     USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
     EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
     SUCH DAMAGES.

 17. Interpretation of Sections 15 and 16.

     If the disclaimer of warranty and limitation of liability provided above
     cannot be given local legal effect according to their terms, reviewing
     courts shall apply local law that most closely approximates an absolute
     waiver of all civil liability in connection with the Program, unless a
     warranty or assumption of liability accompanies a copy of the Program in
     return for a fee.


                          END OF TERMS AND CONDITIONS

 How to Apply These Terms to Your New Programs
----------------------------------------------

If you develop a new program, and you want it to be of the greatest possible
use to the public, the best way to achieve this is to make it free software
which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest to attach
them to the start of each source file to most effectively state the exclusion
of warranty; and each file should have at least the "copyright" line and a
pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.
     Copyright (C) YEAR NAME OF AUTHOR

     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Affero General Public License as published by
     the Free Software Foundation, either version 3 of the License, or (at
     your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Affero General Public License for more details.

     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see `http://www.gnu.org/licenses/'.

Also add information on how to contact you by electronic and paper mail.

If your software can interact with users remotely through a network, you should
also make sure that it provides a way for users to get its source.  For
example, if your program is a web application, its interface could display a
"Source" link that leads users to an archive of the code.  There are many ways
you could offer source, and different solutions will be better for different
programs; see section 13 for the specific requirements.

You should also get your employer (if you work as a programmer) or school, if
any, to sign a "copyright disclaimer" for the program, if necessary.  For more
information on this, and how to apply and follow the GNU AGPL, see
`http://www.gnu.org/licenses/'.


File: npi_sccp.info,  Node: GNU Free Documentation License,  Prev: GNU Affero General Public License,  Up: License

 GNU Free Documentation License
===============================



                        GNU FREE DOCUMENTATION LICENSE
                         Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to assure
     everyone the effective freedom to copy and redistribute it, with or without
     modifying it, either commercially or noncommercially.  Secondarily, this
     License preserves for the author and publisher a way to get credit for
     their work, while not being considered responsible for modifications made
     by others.

     This License is a kind of "copyleft", which means that derivative works of
     the document must themselves be free in the same sense.  It complements
     the GNU General Public License, which is a copyleft license designed for
     free software.

     We have designed this License in order to use it for manuals for free
     software, because free software needs free documentation: a free program
     should come with manuals providing the same freedoms that the software
     does.  But this License is not limited to software manuals; it can be used
     for any textual work, regardless of subject matter or whether it is
     published as a printed book.  We recommend this License principally for
     works whose purpose is instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium, that
     contains a notice placed by the copyright holder saying it can be
     distributed under the terms of this License.  Such a notice grants a
     world-wide, royalty-free license, unlimited in duration, to use that work
     under the conditions stated herein.  The "Document", below, refers to any
     such manual or work.  Any member of the public is a licensee, and is
     addressed as "you".  You accept the license if you copy, modify or
     distribute the work in a way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with modifications
     and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section of the
     Document that deals exclusively with the relationship of the publishers or
     authors of the Document to the Document's overall subject (or to related
     matters) and contains nothing that could fall directly within that overall
     subject.  (Thus, if the Document is in part a textbook of mathematics, a
     Secondary Section may not explain any mathematics.)  The relationship
     could be a matter of historical connection with the subject or with
     related matters, or of legal, commercial, philosophical, ethical or
     political position regarding them.

     The "Invariant Sections" are certain Secondary Sections whose titles are
     designated, as being those of Invariant Sections, in the notice that says
     that the Document is released under this License.  If a section does not
     fit the above definition of Secondary then it is not allowed to be
     designated as Invariant.  The Document may contain zero Invariant
     Sections.  If the Document does not identify any Invariant Sections then
     there are none.

     The "Cover Texts" are certain short passages of text that are listed, as
     Front-Cover Texts or Back-Cover Texts, in the notice that says that the
     Document is released under this License.  A Front-Cover Text may be at
     most 5 words, and a Back-Cover Text may be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the general
     public, that is suitable for revising the document straightforwardly with
     generic text editors or (for images composed of pixels) generic paint
     programs or (for drawings) some widely available drawing editor, and that
     is suitable for input to text formatters or for automatic translation to a
     variety of formats suitable for input to text formatters.  A copy made in
     an otherwise Transparent file format whose markup, or absence of markup,
     has been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if used
     for any substantial amount of text.  A copy that is not "Transparent" is
     called "Opaque".

     Examples of suitable formats for Transparent copies include plain ASCII
     without markup, Texinfo input format, LaTeX input format, SGML or XML
     using a publicly available DTD, and standard-conforming simple HTML,
     PostScript or PDF designed for human modification.  Examples of
     transparent image formats include PNG, XCF and JPG.  Opaque formats
     include proprietary formats that can be read and edited only by
     proprietary word processors, SGML or XML for which the DTD and/or
     processing tools are not generally available, and the machine-generated
     HTML, PostScript or PDF produced by some word processors for output
     purposes only.

     The "Title Page" means, for a printed book, the title page itself, plus
     such following pages as are needed to hold, legibly, the material this
     License requires to appear in the title page.  For works in formats which
     do not have any title page as such, "Title Page" means the text near the
     most prominent appearance of the work's title, preceding the beginning of
     the body of the text.

     The "publisher" means any person or entity that distributes copies of the
     Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document whose title
     either is precisely XYZ or contains XYZ in parentheses following text that
     translates XYZ in another language.  (Here XYZ stands for a specific
     section name mentioned below, such as "Acknowledgements", "Dedications",
     "Endorsements", or "History".)  To "Preserve the Title" of such a section
     when you modify the Document means that it remains a section "Entitled
     XYZ" according to this definition.

     The Document may include Warranty Disclaimers next to the notice which
     states that this License applies to the Document.  These Warranty
     Disclaimers are considered to be included by reference in this License,
     but only as regards disclaiming warranties: any other implication that
     these Warranty Disclaimers may have is void and has no effect on the
     meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the copyright
     notices, and the license notice saying this License applies to the
     Document are reproduced in all copies, and that you add no other
     conditions whatsoever to those of this License.  You may not use technical
     measures to obstruct or control the reading or further copying of the
     copies you make or distribute.  However, you may accept compensation in
     exchange for copies.  If you distribute a large enough number of copies
     you must also follow the conditions in section 3.

     You may also lend copies, under the same conditions stated above, and you
     may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly have
     printed covers) of the Document, numbering more than 100, and the
     Document's license notice requires Cover Texts, you must enclose the
     copies in covers that carry, clearly and legibly, all these Cover Texts:
     Front-Cover Texts on the front cover, and Back-Cover Texts on the back
     cover.  Both covers must also clearly and legibly identify you as the
     publisher of these copies.  The front cover must present the full title
     with all words of the title equally prominent and visible.  You may add
     other material on the covers in addition.  Copying with changes limited to
     the covers, as long as they preserve the title of the Document and satisfy
     these conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit legibly,
     you should put the first ones listed (as many as fit reasonably) on the
     actual cover, and continue the rest onto adjacent pages.

     If you publish or distribute Opaque copies of the Document numbering more
     than 100, you must either include a machine-readable Transparent copy
     along with each Opaque copy, or state in or with each Opaque copy a
     computer-network location from which the general network-using public has
     access to download using public-standard network protocols a complete
     Transparent copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you begin
     distribution of Opaque copies in quantity, to ensure that this Transparent
     copy will remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of the
     Document well before redistributing any large number of copies, to give
     them a chance to provide you with an updated version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document under the
     conditions of sections 2 and 3 above, provided that you release the
     Modified Version under precisely this License, with the Modified Version
     filling the role of the Document, thus licensing distribution and
     modification of the Modified Version to whoever possesses a copy of it.
     In addition, you must do these things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title distinct
          from that of the Document, and from those of previous versions (which
          should, if there were any, be listed in the History section of the
          Document).  You may use the same title as a previous version if the
          original publisher of that version gives permission.

       B. List on the Title Page, as authors, one or more persons or entities
          responsible for authorship of the modifications in the Modified
          Version, together with at least five of the principal authors of the
          Document (all of its principal authors, if it has fewer than five),
          unless they release you from this requirement.

       C. State on the Title page the name of the publisher of the Modified
          Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications adjacent
          to the other copyright notices.

       F. Include, immediately after the copyright notices, a license notice
          giving the public permission to use the Modified Version under the
          terms of this License, in the form shown in the Addendum below.

       G. Preserve in that license notice the full lists of Invariant Sections
          and required Cover Texts given in the Document's license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title, and add
          to it an item stating at least the title, year, new authors, and
          publisher of the Modified Version as given on the Title Page.  If
          there is no section Entitled "History" in the Document, create one
          stating the title, year, authors, and publisher of the Document as
          given on its Title Page, then add an item describing the Modified
          Version as stated in the previous sentence.

       J. Preserve the network location, if any, given in the Document for
          public access to a Transparent copy of the Document, and likewise the
          network locations given in the Document for previous versions it was
          based on.  These may be placed in the "History" section.  You may
          omit a network location for a work that was published at least four
          years before the Document itself, or if the original publisher of the
          version it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section all the
          substance and tone of each of the contributor acknowledgements and/or
          dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered in
          their text and in their titles.  Section numbers or the equivalent
          are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section may not
          be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled "Endorsements" or
          to conflict in title with any Invariant Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or appendices
     that qualify as Secondary Sections and contain no material copied from the
     Document, you may at your option designate some or all of these sections
     as invariant.  To do this, add their titles to the list of Invariant
     Sections in the Modified Version's license notice.  These titles must be
     distinct from any other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various parties--for
     example, statements of peer review or that the text has been approved by
     an organization as the authoritative definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text, and a
     passage of up to 25 words as a Back-Cover Text, to the end of the list of
     Cover Texts in the Modified Version.  Only one passage of Front-Cover Text
     and one of Back-Cover Text may be added by (or through arrangements made
     by) any one entity.  If the Document already includes a cover text for the
     same cover, previously added by you or by arrangement made by the same
     entity you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous publisher
     that added the old one.

     The author(s) and publisher(s) of the Document do not by this License give
     permission to use their names for publicity for or to assert or imply
     endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under this
     License, under the terms defined in section 4 above for modified versions,
     provided that you include in the combination all of the Invariant Sections
     of all of the original documents, unmodified, and list them all as
     Invariant Sections of your combined work in its license notice, and that
     you preserve all their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and multiple
     identical Invariant Sections may be replaced with a single copy.  If there
     are multiple Invariant Sections with the same name but different contents,
     make the title of each such section unique by adding at the end of it, in
     parentheses, the name of the original author or publisher of that section
     if known, or else a unique number.  Make the same adjustment to the
     section titles in the list of Invariant Sections in the license notice of
     the combined work.

     In the combination, you must combine any sections Entitled "History" in
     the various original documents, forming one section Entitled "History";
     likewise combine any sections Entitled "Acknowledgements", and any
     sections Entitled "Dedications".  You must delete all sections Entitled
     "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other documents
     released under this License, and replace the individual copies of this
     License in the various documents with a single copy that is included in
     the collection, provided that you follow the rules of this License for
     verbatim copying of each of the documents in all other respects.

     You may extract a single document from such a collection, and distribute
     it individually under this License, provided you insert a copy of this
     License into the extracted document, and follow this License in all other
     respects regarding verbatim copying of that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other separate and
     independent documents or works, in or on a volume of a storage or
     distribution medium, is called an "aggregate" if the copyright resulting
     from the compilation is not used to limit the legal rights of the
     compilation's users beyond what the individual works permit.  When the
     Document is included in an aggregate, this License does not apply to the
     other works in the aggregate which are not themselves derivative works of
     the Document.

     If the Cover Text requirement of section 3 is applicable to these copies
     of the Document, then if the Document is less than one half of the entire
     aggregate, the Document's Cover Texts may be placed on covers that bracket
     the Document within the aggregate, or the electronic equivalent of covers
     if the Document is in electronic form.  Otherwise they must appear on
     printed covers that bracket the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may distribute
     translations of the Document under the terms of section 4.  Replacing
     Invariant Sections with translations requires special permission from
     their copyright holders, but you may include translations of some or all
     Invariant Sections in addition to the original versions of these Invariant
     Sections.  You may include a translation of this License, and all the
     license notices in the Document, and any Warranty Disclaimers, provided
     that you also include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of this
     License or a notice or disclaimer, the original version will prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to Preserve its
     Title (section 1) will typically require changing the actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document except as
     expressly provided under this License.  Any attempt otherwise to copy,
     modify, sublicense, or distribute it is void, and will automatically
     terminate your rights under this License.

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, receipt of a copy of some or all of the same material does not
     give you any rights to use it.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of the GNU
     Free Documentation License from time to time.  Such new versions will be
     similar in spirit to the present version, but may differ in detail to
     address new problems or concerns.  See `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version number.  If
     the Document specifies that a particular numbered version of this License
     "or any later version" applies to it, you have the option of following the
     terms and conditions either of that specified version or of any later
     version that has been published (not as a draft) by the Free Software
     Foundation.  If the Document does not specify a version number of this
     License, you may choose any version ever published (not as a draft) by the
     Free Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that proxy's
     public statement of acceptance of a version permanently authorizes you to
     choose that version for the Document.

 11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any World
     Wide Web server that publishes copyrightable works and also provides
     prominent facilities for anybody to edit those works.  A public wiki that
     anybody can edit is an example of such a server.  A "Massive Multiauthor
     Collaboration" (or "MMC") contained in the site means any set of
     copyrightable works thus published on the MMC site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
     published by Creative Commons Corporation, a not-for-profit corporation
     with a principal place of business in San Francisco, California, as well
     as future copyleft versions of that license published by that same
     organization.

     "Incorporate" means to publish or republish a Document, in whole or in
     part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this License,
     and if all works that were first published under this License somewhere
     other than this MMC, and subsequently incorporated in whole or in part
     into the MMC, (1) had no cover texts or invariant sections, and (2) were
     thus incorporated prior to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the site
     under CC-BY-SA on the same site at any time before August 1, 2009,
     provided the MMC is eligible for relicensing.


 ADDENDUM: How to use this License for your documents
=====================================================

To use this License in a document you have written, include a copy of the
License in the document and put the following copyright and license notices
just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace
the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other combination
of the three, merge those two alternatives to suit the situation.

If your document contains nontrivial examples of program code, we recommend
releasing these examples in parallel under your choice of free software
license, such as the GNU General Public License, to permit their use in free
software.


File: npi_sccp.info,  Node: Glossary,  Next: Acronyms,  Prev: License,  Up: Top

 Glossary
*********

_Signalling Data Link Service Data Unit_
     A grouping of SDL user data whose boundaries are preserved from one end of
     the signalling data link connection to the other.

_Data transfer_
     The phase in connection and connectionless modes that supports the
     transfer of data between to signalling data link users.

_SDL provider_
     The signalling data link layer protocol that provides the services of the
     signalling data link interface.

_SDL user_
     The user-level application or user-level or kernel-level protocol that
     accesses the services of the signalling data link layer.

_Local management_
     The phase in connection and connectionless modes in which a SDL user
     initializes a stream and attaches a PPA address to the stream.  Primitives
     in this phase generate local operations only.

_PPA_
     The point at which a system attaches itself to a physical communications
     medium.

_PPA identifier_
     An identifier of a particular physical medium over which communication
     transpires.


File: npi_sccp.info,  Node: Acronyms,  Next: References,  Prev: Glossary,  Up: Top

 Acronyms
*********

"ANSI"       American National Standards Institute
"CCITT"      The International Telegraph and Telephone Consutative Committee,
             old name for ITU-T
"CONS"       Connection-Oriented Network Service
"CUD"        Call User Data
"DCE"        Data Circuit-terminating Equipment
"DDN"        Defence Data Network
"DLPI"       Data Link Provider Interface
"DLSAP"      Destination Link Service Access Point
"DNIC"       Data Network Identification Code
"DSAP"       Destination Service Access Point
"DTE"        Data Terminal Equipment
"ENSDU"      Expedited Network Service Data Unit
"ETSI"       European Telecommunications Standards Institute
"HDLC"       High-Level Data Link Control
"IEEE"       Institute of Electrical and Electronics Engineers
"IP"         Internet Protocol
"ISDNI"      ISDN Interface
"ISDN"       Integrated Services Digital Network
"ISO"        International Organization for Standardization
"ISUPI"      ISUP Interface
"ISUP"       ISDN User Part
"ITU"        International Telecommunications Union
"ITU-T"      ITU Telecom Sector
"LAN"        Local Area Network
"LAPB"       Link Access Procedure (Balanced), ISO/IEC 7776
"LAPD"       Link Access Procedure D-Channel, Q.921
"LAPF"       Link Access Procedure Frame Mode, Q.922
"LAP"        Link Access Procedure
"LCI"        Logical Channel Identifier
"LLC1"       Logical Link Control Type 1
"LLC2"       Logical Link Control Type 2
"LLC3"       Logical Link Control Type 3
"LLC"        Logical Link Control
"LLI"        Logical Link Inteface
"LSAP"       Link Service Access Point
"MAC"        Media Access Control
"MTPI"       Message Transfer Part Interface
"MTP"        Message Transfer Part
"NLI"        Network Layer Interface
"NPDU"       Network Protocol Data Unit
"NPI"        Network Provider Interface
"NPI"        Numbering Plan Indicator
"NSAP"       Network Service Access Point
"NSDU"       Network Service Data Unit
"NSP"        Network Service Provider
"NS"         Network Service
"NSU"        Network Service User
"NUI"        Network User Information
"PAD"        Packet Assembler/Disassembler
"PDN"        Public Data Network
"PDU"        Protocol Data Unit
"PLP"        Packet Layer Protocol
"PPA"        Physical Point of Attachment
"PSDN"       Public Switched Data Network
"PSTN"       Public Switch Telephone Network
"PVC"        Permanent Virtual Circuit
"QOS"        Quality of Service
"RPOA"       Recognized Private Operating Agency
"SAP"        Service Access Point
"SCCPI"      Signalling Connection Control Part Interface
"SCCP"       Signalling Connection Control Part
"SDLI"       Signalling Data Link Interface
"SDL"        Signalling Data Link
"SDTI"       Signalling Data Terminal Interface
"SDT"        Signalling Data Terminal
"SDU"        Service Data Unit
"SLI"        Signalling Link Interface
"SLSAP"      Source Link Service Access Point
"SL"         Signalling Link
"SNPA"       Subnetwork Point of Attachment
"SSAP"       Source Service Access Point
"SVC"        Switched Virtual Circuit
"TCAP"       Transaction Capabilities Application Part
"TCI"        Transaction Component Interface
"TC"         Component Handling Sub-Layer
"TLI"        Transport Layer Interface
"TOA/NPI"    Type of Address/Numbering Plan Indicator
"TOA"        Type of Address
"TPI"        Transport Provider Interface
"TRI"        Transaction Interface
"TR"         Transaction Handling Sub-Layer
"VC"         Virtual Circuit
"WAN"        Wide Area Network
"X.121"      ITU-T Recommendation X.121
"X.25"       ITU-T Recommendation X.25
"X.28"       ITU-T Recommendation X.28
"X.3"        ITU-T Recommendation X.3
"X.75"       ITU-T Recommendation X.75
"XX25"       X.25 Programming Inteface using XTI
"XXX"        X.3, X.28, X.29


File: npi_sccp.info,  Node: References,  Next: Index,  Prev: Acronyms,  Up: Top

 References
***********

[NPI]
     NPI Revision 2.0.0, `Network Provider Interface Specification', August 17,
     1992, (Parsippany, New Jersey), UNIX International.

[Q.714]
     ITU-T Recommendation Q.714 (1993), `Signalling Connection Control Part
     Procedures', White Book, March 1993, (Geneva), ITU, ITU-T
     Telecommunication Standardization Sector of ITU, (Previously "CCITT
     Recommendation").

[Q.711]
     ITU-T Recommendation Q.711 (1993), `Functional Description of Signalling
     Connection Control Part', White Book, March 1993, (Geneva), ITU, ITU-T
     Telecommunication Standardization Sector of ITU, (Previously "CCITT
     Recommendation").

[Q.713]
     ITU-T Recommendation Q.713 (1993), `Signalling Connection Control Part
     Formats and Codes', White Book, March 1993, (Geneva), ITU, ITU-T
     Telecommunication Standardization Sector of ITU, (Previously "CCITT
     Recommendation").

[XNS]
     XNS Issue 5.2 Draft 2.0, `Technical Standard: Network Services (XNS)',
     [ISBN 1-85912-241-8], Open Group Publication, 1999, The Open Group.

[T1.111]
     ANSI T1.111, `Signalling System No. 7 -- Message Transfer Part', [ISBN
     1-84912-241-8], 1992, American National Standards Institute.

[T1.112]
     ANSI T1.112, `Signalling System No. 7 -- Signalling Connection Control
     Part', [ISBN 1-84912-241-8], 1992, American National Standards Institute.

[X.213]
     ITU-T Recommendation X.213 (1986), [ISO/IEC 8348], `Network Service
     Definition for Open Systems Interconnection (OSI) for CCITT Applications',
     Blue Book, 1986, (Geneva), ITU, ITU-T Telecommunication Standardization
     Sector of ITU, (Previously "CCITT Recommendation").

[ISO8348]
     ISO/IEC 8348 : 1987, [ITU-T Recommendation X.213], `Information Processing
     Systems--Data Communications--Network Service Definition', April 15, 1987,
     (Geneva), ISO/IEC, International Organization for Standardization,
     International Engineering Consortium.

[ISO8348/AD1]
     ISO/IEC 8348/AD1 : 1987, [ITU-T Recommendation X.213, Amd. 1],
     `Information Processing Systems--Data Communications--Network Service
     Definition--Addendum 1: Connectionless Mode Transmission', April 15, 1987,
     (Geneva), ISO/IEC, International Organization for Standardization,
     International Engineering Consortium.

[ISO8473]
     ISO/IEC 8473 : 1987, [ITU-T Recommendation X.233], [ITU-T Recommendation
     X.622], [ITU-T Recommendation X.623], `Information Processing
     Systems--Data Communications Protocol for Providing the Connectionless
     Mode Network Service', SC6 N4542, (Geneva), ISO/IEC, International
     Organization for Standardization, International Engineering Consortium.

[ISO8208]
     ISO/IEC 8208 : 1987, [ITU-T Recommendation X.25], [ITU-T Recommendation
     X.75], `Information Processing Systems--X.25 Packet Level Protocol for
     Data Terminal Equipment', September 15, 1987, (Geneva), ISO/IEC,
     International Organization for Standardization, International Engineering
     Consortium.

[ISO8878]
     ISO/IEC 8878 : 1987, [ITU-T Recommendation X.223], `Information Processing
     Systems--Data Communications--Use of X.25 to Provide the OSI
     Connection-Mode Network Service', September 1, 1987, (Geneva), ISO/IEC,
     International Organization for Standardization, International Engineering
     Consortium.

[SVID]
     `System V Interface Definition', Issue 2, Volume 3.

[X.210]
     ITU-T Recommendation X.210, [ISO/IEC 10731 : 1994], `Information
     Technology--Open Systems Interconnection--Basic reference model:
     Conventions for the definition of OSI services', Red Book, 1984, (Geneva),
     ITU, ITU-T Telecommunication Standardization Sector of ITU.  (Previously
     "CCITT Recommendation").



File: npi_sccp.info,  Node: Index,  Prev: References,  Up: Top

 Index
******

 [index ]
* Menu:

* license, AGPL:                         GNU Affero General Public License.
                                                                        (line 6)
* license, FDL:                          GNU Free Documentation License.
                                                                        (line 6)
* license, GNU Affero General Public License: GNU Affero General Public License.
                                                                        (line 6)
* license, GNU Free Documentation License: GNU Free Documentation License.
                                                                        (line 6)



Tag Table:
Node: Top1830
Node: Preface2485
Node: Introduction6461
Ref: Introduction-Footnote-17349
Ref: Introduction-Footnote-27410
Ref: Introduction-Footnote-37447
Node: Overview7484
Node: Protocol Address8773
Node: Connection and Connectionless Modes9140
Ref: Connection and Connectionless Modes-Footnote-110558
Ref: Connection and Connectionless Modes-Footnote-210597
Node: Sending Data of Zero Octets10636
Node: Quality of Service Parameters11584
Node: Protocol Addressing12324
Node: Protocol Address12839
Node: Quality of Service19361
Node: SCCP Quality of Service Overview19627
Node: SCCP Quality of Service Formats19831
Ref: SCCP Quality of Service Formats-Footnote-120896
Node: N_QOS_SEL_DATA_SCCP21199
Node: N_QOS_SEL_CONN_SCCP23093
Node: N_QOS_SEL_INFO_SCCP24955
Node: N_QOS_RANGE_INFO_SCCP25669
Node: N_QOS_SEL_INFR_SCCP26302
Node: NPI Connection Modes30422
Node: Supported Services30590
Node: Local Management Services30890
Node: Acknowledgement Service31185
Node: Information Service31418
Node: Options Management Service31674
Node: Bind Service32046
Node: Connection-Oriented Mode Services32749
Node: Signalling Connection Establishment Service33557
Node: Signalling Connection Request Service34424
Node: Normal Data Transfer Service35722
Node: Expedited Data Transfer Service36444
Node: Reset Service37148
Node: Inform Service37620
Node: Signalling Connection Release Service38610
Node: Connectionless Mode Services39033
Node: Unit Data Transfer Service39320
Node: Notice Service40008
Node: SCCP Management Services40188
Node: User Status Service40460
Node: Signalling Point Status Service40654
Node: Coordination Service40905
Node: Rules for Conformance41102
Node: Local Management Primitives41523
Node: N_INFO_REQ41847
Node: N_INFO_ACK41977
Ref: N_INFO_ACK-Footnote-151780
Ref: N_INFO_ACK-Footnote-252074
Node: N_BIND_REQ52147
Node: N_BIND_ACK52336
Node: N_UNBIND_REQ52527
Node: N_OPTMGMT_REQ52725
Node: N_ERROR_ACK55699
Node: N_OK_ACK57728
Node: CONS Connection Establishment58864
Node: N_CONN_REQ59162
Node: N_CONN_IND65799
Node: N_CONN_RES68604
Node: N_CONN_CON71618
Node: CONS Normal Data Transfer74104
Node: N_DATA_REQ74370
Node: N_DATA_IND74672
Node: CONS Receipt Confirmation Service74977
Node: N_DATACK_REQ75270
Node: N_DATACK_IND75714
Node: CONS Expedited Data Transfer Service76218
Node: N_EXDATA_REQ76510
Node: N_EXDATA_IND76799
Node: CONS Reset Service77091
Node: N_RESET_REQ77375
Node: N_RESET_IND79015
Node: N_RESET_RES80651
Node: N_RESET_CON80954
Node: CONS Network Connection Release81241
Node: N_DISCON_REQ81489
Node: N_DISCON_IND81794
Node: CLNS86091
Node: N_UNITDATA_REQ86280
Node: N_UNITDATA_IND86567
Node: N_UDERROR_IND86879
Node: Extension Primitives89251
Node: SCCP Notice Service89591
Node: N_NOTICE_IND89773
Node: SCCP Inform Service90522
Node: N_INFORM_REQ90755
Node: N_INFORM_IND91856
Node: SCCP Coordination Service92969
Node: N_COORD_REQ93243
Node: N_COORD_IND93831
Node: N_COORD_RES94526
Node: N_COORD_CON95135
Node: SCCP State Service95812
Node: N_STATE_REQ96042
Node: N_STATE_IND97660
Node: SCCP PC State Service99333
Node: N_PCSTATE_IND99550
Node: SCCP Traffic Service100655
Node: N_TRAFFIC_IND100843
Node: NPI-SCCP Input-Output Controls102164
Node: NPI-SCCP Management Information Base102377
Node: Mapping NPI-SCCP Primitives102609
Node: Mapping NPI Primitives to ITU-T X.213103016
Node: Mapping of X.213 CONS Connect/Disconnect Primitives to NPI103439
Ref: Table A-1106762
Node: Mapping of X.213 CONS Data Transfer Primitives to NPI107170
Ref: Table A-2109926
Node: Mapping of X.213 CLNS Data Transfer Primitives to NPI110179
Ref: Table A-3111828
Node: Mapping NPI Primitives to ITU-T Q.711114662
Node: Mapping of Q.711 CONS Connect/Disconnect Primitives to NPI115187
Ref: Table A-4119300
Node: Mapping of Q.711 CONS Data Transfer Primitives to NPI120913
Ref: Table A-5123720
Ref: Table A-5b127565
Node: Mapping of Q.711 CLNS Data Transfer Primitives to NPI129502
Ref: Table A-6132138
Node: Mapping of Q.711 Management Primitives to NPI133568
Ref: Table A-7137420
Node: Mapping NPI Primitives to ETSI EN 300 009-1137493
Node: Mapping NPI Primitives to ANSI T1.112137792
Node: NPI-SCCP Header Files138032
Node: Protocol Primitive Header138443
Node: Protocol Primitive Header Listing139292
Node: Input-Output Control Header160779
Node: NPI-SCCP Library161902
Node: NPI-SCCP Drivers and Modules162349
Node: TCI Module163174
Node: TRI Driver and Module163610
Node: SCCP Multiplexing Driver164414
Node: SUA Application Server Driver and Module165010
Node: NPI Conversion Module165695
Node: TPI Conversion Module166663
Node: NPI-SCCP Utilities167641
Node: NPI-SCCP Compatibility and Porting168289
Node: License168501
Node: GNU Affero General Public License169114
Node: GNU Free Documentation License205884
Node: Glossary230871
Node: Acronyms232018
Node: References235865
Ref: NPI235979
Ref: Q.714236125
Ref: Q.711236369
Ref: Q.713236628
Ref: XNS236877
Ref: T1.111237036
Ref: T1.112237188
Ref: X.213237352
Ref: ISO8348237650
Ref: ISO8348/AD1237940
Ref: ISO8473238289
Ref: ISO8208238670
Ref: ISO8878239000
Ref: SVID239327
Ref: X.210239393
Node: Index239723

End Tag Table
