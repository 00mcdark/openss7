% -*- texinfo -*- vim: ft=texinfo
% vim: ft=texinfo nosmartindent nocindent noautoindent tw=100
% =========================================================================
%
% @(#) $Id: xti_sccp.texi,v 0.9.2.2 2008-11-26 12:01:34 brian Exp $
%
% =========================================================================
%
% Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
%
% All Rights Reserved.
%
% Permission is granted to make and distribute verbatim copies of this
% manual provided the copyright notice and this permission notice are
% preserved on all copies.
%
% Permission is granted to copy and distribute modified versions of this
% manual under the conditions for verbatim copying, provided that the
% entire resulting derived work is distributed under the terms of a
% permission notice identical to this one.
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2008-11-26 12:01:34 $ by $Author: brian $
%
% =========================================================================
\input texinfo @c -*- texinfo -*-
@c vim: ft=texinfo nosmartindent nocindent noautoindent tw=120
@c %**start of header
@setfilename xti_sccp.info
@include texi/args.texi
@set MANUAL_TITLE X/Open Transport Interface
@set MANUAL_TYPE Corrigendum for SCCP Conformance
@settitle @value{MANUAL_TITLE}
@c %**end of header

@dircategory OpenSS7
@direntry
* XTI-SCCP: (xti_sccp).		XTI Corrigendum for SCCP
@end direntry

@include texi/args.texi
@set MANUAL_TITLE X/Open Transport Interface
@set MANUAL_TYPE Corrigendum for SCCP Conformance

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file documents the SCCP Corrigendum to the X/Open Transport Interface.

This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, for
@value{PACKAGE_TITLE} version @value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
published by @uref{http://www.openss7.com/,OpenSS7 Corporation}.


Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}


All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual provided the copyright
notice and this permission notice are preserved on all copies.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed
document carries copying permission notice identical to this one except for the removal of this
paragraph (this paragraph not being relevant to the printed manual).

@end ignore
Permission to use, copy, modify, and distribute this documentation for any purpose and without fee
is hereby granted, provided that the above copyright notice appears in all copies and that both that
copyright notice and this permission notice appear in supporting documentation, and that the name
UNIX International not be used in advertising or publicity pertaining to distribution of the
software without specific, written prior permission. UNIX International makes no representations
about the suitability of this documentation for any purpose. It is provided ``as is'' without
express or implied warranty.

Permission is granted to copy and distribute modified versions of this manual under the conditions
for verbatim copying, provided the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual into another language,
under the above conditions for modified versions.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE X/Open Transport Interface
@set MANUAL_TYPE Corrigendum for SCCP Conformance

@set PART Signalling Connection Control
@set LONG Signalling Connection Control Part
@set SHORT SCCP
@set INTERFACE XTI-SCCP

@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2008  OpenSS7 Corporation
@subtitle All Rights Reserved.
@sp 4
@quotation
@subsubheading Abstract
This document specifies an (unofficial) corrigendum to the X/Open Transport Interface (XTI)
Specification (@pxref{XTI,,XTI}) for SS7 Signalling Connection Control Part (SCCP)
(@pxref{Q.711,,Q.711}) conformance in support of the SCCP to SCCP User primitive interface
(@pxref{Q.711,,Q.711}).  it supports the user-level XTI/TLI abstraction (@pxref{XTI,,XTI}) of the
Signalling Connection Control Part Interface (SCCPI) as well as providing a basis for SCCP User protocols using the
services of the SS7 Signalling Connection Control Part.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

@noindent
All Rights Reserved.

@noindent
Unauthorized distribution or duplication is prohibited.

@subsubheading Published by:
@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@sp 1

@ignore
@noindent
This software and related documentation is protected by copyright and distributed under licenses
restricting its use, copying, distribution and decompilation.  No part of this software or related
documentation may be reproduced in any form by any means without the prior written authorization of
the copyright holder, and licensors, if any.

@noindent
The recipient of this document, by its retention and use, warrants that the recipient will protect
this information and keep it confidential, and will not disclose the information contained in this
document without the written permission of its owner.

@noindent
@uref{http://www.openss7.com/,,OpenSS7 Corporation} reserves the right to revise this software and
documentation for any reason, including but not limited to, conformity with standards promulgated by
various agencies, utilization of advances in the state of the technical arts, or the reflection of
changes in the design of any techniques, or procedures embodied, described, or referred to herein.
@uref{http://www.openss7.com/,,OpenSS7 Corporation} is under no obligation to provide any feature
listed herein.
@end ignore

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of OpenSS7 Corporation not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  OpenSS7 Corporation makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@subsubheading Notice:

@noindent
@b{OpenSS7 Corporation disclaims all warranties with regard to this documentation including all
implied warranties of merchantability, fitness for a particular purpose, non-infringement, or title;
that the contents of the document are suitable for any purpose, or that the implementation of such
contents will not infringe on any third party patents, copyrights, trademarks or other rights.  In
no event shall OpenSS7 Corporation be liable for any direct, indirect, special or consequential
damages or any damages whatsoever resulting from loss of use, data or profits, whether in an action
of contract, negligence or other tortious action, arising out of or in connection with any use of
this document or the performance or implementation of the contents thereof.}

@sp 1

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation for any reason,
including but not limited to, conformity with standards promulgated by various agencies, utilization
of advances in the state of the technical arts, or the reflection of changes in the design of any
techniques, or procedures embodied, described, or referred to herein.  OpenSS7 Corporation is under
no obligation to provide any feature listed herein.

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@c Define an index of primitives
@defcodeindex pr
@c Define an index of primitive values
@defcodeindex pv
@c Define an index of primitive error values
@defcodeindex pe
@c Define an index of protocol states
@defcodeindex st
@c Define an index of input-output controls
@defcodeindex ct
@c Define an index of manual pages.
@defcodeindex mp
@c Define an index of MIB objects.
@defcodeindex mo

@c frags out automake
@c @ifnottex
@c @c concatenate indices for text, html and info
@syncodeindex pr cp
@syncodeindex pv cp
@syncodeindex pe cp
@syncodeindex st cp
@syncodeindex mp cp
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex ct cp
@syncodeindex mo cp
@c @end ifnottex

@include texi/macros.texi
@include texi/versions.texi

@iftex

@macro prim{name}
@code{\name\}@prindex \name\
@end macro

@macro pval{name}
@code{\name\}@pvindex \name\
@end macro

@macro perr{name}
@code{[\name\]}@peindex \name\
@end macro

@macro psta{name}
@code{\name\}@stindex \name\
@end macro

@macro parm{name}
@var{\name\}@vrindex \name\
@end macro

@macro pioc{name}
@code{\name\}@ctindex \name\
@end macro

@macro mobj{name}
@code{\name\}@moindex \name\
@end macro

@end iftex

@ifnottex
@c skip deep indexing for plain text, html and info
@c it messes up column with maximums (texinfo bug)

@macro prim{name}
@code{\name\}
@end macro

@macro pval{name}
@code{\name\}
@end macro

@macro perr{name}
@var{[\name\]}
@end macro

@macro psta{name}
@code{\name\}
@end macro

@macro parm{name}
@var{\name\}
@end macro

@macro pioc{name}
@code{\name\}
@end macro

@macro mobj{name}
@code{\name\}
@end macro

@end ifnottex

@ifnottex
@node Top
@top X/Open Transport Interface---Corrigendum for @value{SHORT} Conformance
@end ifnottex

@menu
* Preface::
* Introduction::
* Services::
* States and Events::
* Functions::
* Options::
* Header File::
* Protocol Terminology::
* License::
* Glossary::
* Acronyms::
* References::
@c @iftex
@c * Indices::
@c @end iftex
@c @ifnottex
* Index::
@c @end ifnottex
@end menu

@iftex
@c insert list of figures and tables for printed manuals
@page
@heading List of Figures
@listoffloats Figure
@page
@heading List of Tables
@listoffloats Table
@end iftex

@node Preface
@unnumbered Preface

@ignore
@section Security Warning

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation} not be used
in advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  @cite{OpenSS7 Corporation} makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} disclaims all warranties with regard to this
documentation including all implied warranties of merchantability, fitness for a particular purpose,
non-infringement, or title; that the contents of the document are suitable for any purpose, or that
the implementation of such contents will not infringe on any third party patents, copyrights,
trademarks or other rights.  In no event shall @cite{OpenSS7 Corporation} be liable for any direct,
indirect, special or consequential damages or any damages whatsoever resulting from loss of use,
data or profits, whether in an action of contract, negligence or other tortious action, arising out
of or in connection with any use of this document or the performance or implementation of the
contents thereof.

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} is making this documentation available as a
reference point for the industry.  While @cite{OpenSS7 Corporation} believes that these interfaces
are well defined in this release of the document, minor changes may be made prior to products
conforming to the interfaces being made available.
@end ignore

@section Abstract

This document is a Corrigendum for @value{SHORT} Conformance to the X/Open Transport Interface
containing technical details concerning the implementation of the @value{LONG} (@value{SHORT}) using
the X/Open Transport Interface (XTI).  It contains recommendations on software architecture
as well as platform and system applicability of @value{INTERFACE}.

The SCCP networking service is an accepted standard that is in widespread use through the world,
both as a public tariffed service provided by many national networks, and in private switches as a
component in corporate networks.  Its pervasive presence in the marketplace, and the consequential
huge industry-wide investment in SCCP applications, provides a good business case for supporting
SCCP networking through any complementary X/Open APIs.  Such is the case with the X/Open XTI API.
This XTI-SCCP API defines an SCCP service interface that is independent of any SCCP provider.  This
is acheived by using the existing XTI functions.

@ignore
@noindent
This document specifies a @value{MANUAL_TITLE} Specification in support of the OpenSS7 @value{LONG}
(@value{SHORT}) protocol stacks.  It provides abstraction of the @value{PART} interface to these
components as well as providing a basis for @value{PART} control for other @value{PART} protocols.
@end ignore

@section Purpose

The purpose of this document is to provide technical documentation of the @value{SHORT} X/Open Transport
Interface (@value{INTERFACE}).  This document is intended to be included with the
@cite{@value{PACKAGE_TITLE}} software package released by @cite{OpenSS7 Corporation}.  It is
intended to assist software developers, maintainers and users of the @value{INTERFACE} with
understanding the software architecture and technical interfaces that are made available in the
software package.

@section Intent

It is the intent of this document that it act as the primary source of information concerning the
@value{INTERFACE}.  This document is intended to provide information for writers of OpenSS7
@value{INTERFACE} applications as well as writers of OpenSS7 @value{INTERFACE} Users.

@section Audience

The audience for this document is software developers, maintainers and users and integrators of the
@value{INTERFACE}.  The target audience is developers and users of the OpenSS7 SS7 stack.

This API is aimed at SCCP users who wish to ensure the portability and interoperability of their
SCCP applications by making them independent of the SCCP proider.  X/Open's XTI API provides an
established interface to achieve this independence.  Implementors who already know XTI will
additionally benefit from their familiarity with the XTI programming environment.

@section Revision History

Although the author has attempted to ensure that the information in this document is complete and
correct, neither the Author nor OpenSS7 Corporation will take any responsibility in it.

Take care that you are working with a current version of this documentation: you will not be
notified of updates.  To ensure that you are working with a current version, check the
@uref{http://www.openss7.org/,OpenSS7 Project} website for a current version.

A current version of this specification is normall distributed with the @cite{@value{PACAKGE_TITLE}}
package,
@file{@value{PACKAGE}-@value{VERSION}}.@footnote{@url{http://www.openss7.org/repos/tarballs/@value{PACKAGE}-@value{VERSION}.tar.bz2}}

Only the texinfo or roff source is controlled.  A printed (or postscript) version of this document
is an @strong{UNCONTROLLED VERSION}.

@subsection Version Control

@smallexample
@verbatim
$Log: xti_sccp.texi,v $
Revision 0.9.2.2  2008-11-26 12:01:34  brian
- updated to FDL 1.3

Revision 0.9.2.1  2008-11-17 14:04:34  brian
- added documentation and conversion modules

@end verbatim
@end smallexample

@subsection ISO 9000 Compliance

Only the @TeX{}, texinfo, or roff source for this manual is controlled.  An opaque (printed,
postscript or portable document format) version of this manual is an @strong{UNCONTROLLED
VERSION}.

@section Organization

@ifnottex
@menu
  Introduction::		This introduction
* Services::			SCCP Services
* States and Events::		XTI-SCCP States and Events
* Functions::			XTI-SCCP Functions
* Options::			XTI-SCCP Options
* Header File::			XTI-SCCP Header File
* Protocol Terminology::	SCCP Protocol Terminology
* License::			License
* Glossary::			Glossary
* Acronyms::			Acronyms
* References::			References
* Index::			Index
@end menu
@end ifnottex
@ifnotinfo
@itemize @bullet
@item @ref{Introduction},
gives a brief introduction to SCCP and how the X/Open XTI API to any transport provider offers
significant benefits to SCCP application writers and users.  It also describes the requirements that
a conforming implementation of this XTI-SCCP API must satisfy.  Finally, it indicates possible
future development directions that may impact this API.
@item @ref{Services},
outlines the key elements involved in providing connection-less and connection-oriented service for
SCCP.
@item @ref{States and Events},
indicates that the XTI-SCCP API is fully compatible with the states, the incoming and outgoing
events and the sequence of function calls defined for XTI.
@item @ref{Functions},
describes the specific extensions to existing XTI functions for SCCP requirements.
@item @ref{Options},
identifies the options available in SCCP, and explains how these are handled by this SCCP API.
@item @ref{Header File},
presents the additional header file information needed for SCCP, to be added to the existing XTI
header file information provided in the XTI specification.
@item @ref{Protocol Terminology},
summarizes relevant SCCP protocol information for the convenience of users of this XTI-SCCP API.
@item @ref{License},
provides a listing of the licenses applicable to the code and information presented in this
document.
@item @ref{Glossary},
provides a glossary of terms.
@item @ref{Acronyms},
provides a list of common acronyms used in this and other documents.
@item @ref{References},
provides a list of references important to, or referred to by, this document.
@item @ref{Index},
provides an index to this document.
@end itemize
@end ifnotinfo
@ifplaintext
@itemize @bullet
@item @cite{Introduction},
gives a brief introduction to SCCP and how the X/Open XTI API to any transport provider offers
significant benefits to SCCP application writers and users.  It also describes the requirements that
a conforming implementation of this XTI-SCCP API must satisfy.  Finally, it indicates possible
future development directions that may impact this API.
@item @cite{Services},
outlines the key elements involved in providing connection-less and connection-oriented service for
SCCP.
@item @cite{States and Events},
indicates that the XTI-SCCP API is fully compatible with the states, the incoming and outgoing
events and the sequence of function calls defined for XTI.
@item @cite{Functions},
describes the specific extensions to existing XTI functions for SCCP requirements.
@item @cite{Options},
identifies the options available in SCCP, and explains how these are handled by this SCCP API.
@item @cite{Header File},
presents the additional header file information needed for SCCP, to be added to the existing XTI
header file information provided in the XTI specification.
@item @cite{Protocol Terminology},
summarizes relevant SCCP protocol information for the convenience of users of this XTI-SCCP API.
@item @cite{License},
provides a listing of the licenses applicable to the code and information presented in this
document.
@item @cite{Glossary},
provides a glossary of terms.
@item @cite{Acronyms},
provides a list of common acronyms used in this and other documents.
@item @cite{References},
provides a list of references important to, or referred to by, this document.
@item @cite{Index},
provides an index to this document.
@end itemize
@end ifplaintext

@section Typographical Conventions

This manual uses @cite{texinfo} typographic conventions.

@node Introduction
@chapter Introduction

@menu
* Scope::
* Relationship to XTI::
* Modes::
* Terminology::
* Conformance::
* Future Directions::
@end menu

@node Scope
@section Scope of the Specification

The purpose of the XTI-SCCP API is to provide the Signalling System No. 7 (SS7) Signalling
Connection Control Part (SCCP) Connectionless and Connection-Oriented Network Service under the
X/Open Transport Interface.

Provided throughout the world, SS7 is an accepted standard, provided by many national networks and
the international network for the switching of telephone call and service feature operation in the
global telephone network.  SS7 is also the mechanism whereby next generation networking technologies
interface with the incumbent fixed and mobile telephone networks.

Signalling Connection Control Part (SCCP) is the networking component use to transport Transaction
Capabilities Application Part (TCAP), Mobile Application Part (MAP), Base Station System Application
Part (BSSAP) and Radio Access Network Application Part (RANAP) protocols through an SS7 network.

SCCP is ideally suited for users requiring access on a global scale to mobile network services, or
even on a national scale.  The protocol provides varying levels of reliabiltiy and both a
connectionless and connection-oriented mode in a number of protocol classes.  Protocol class 0 is
especially suited to simple query-reponse transactions and provdes transport to Transaction
Capabilities Application Part (TCAP).  Protocol class 1 extends the connectionless service provideed
by protocol class 0 by providing a high level of assurance that messages are delivered in sequence.
This provides support for more strict operational classes of Transaction Capabilities Application
Part (TCAP).  For mobile network protocols requiring a connection-oriented network service, SCCP
provides protocol classes 2 and 3 that are connection-oriented protocols similar to X.25.  Protocol
class 2 provides for simple connection-oriented service, whereas protocol class 3 provides more
sophisticated connection-oriented service that supports flow control and expedited data transfer.

Applications interested in using SCCP simply for use by TCAP protocols will likely not be interested
in directly interfacing to the SCCP provider, but would rather interface with a TCAP provider using
the XTI-mOSI interface, or the APLI Library.

Applications interested in using SCCP directly will typically be application protocols that use the
connection-oriented modes of SCCP utilizing the connection-oriented protocol classes 2 and 3.

Examples of applications that may be interested in the extension of XTI for SCCP include:

@itemize @bullet
@item RANAP --- @dfn{Radio Access Network Application Part}
@item BSSAP --- @dfn{Base Station System Application Part}
@end itemize

The functions offer full access to all SCCP protocol services (for example, protocol classes 0, 1, 2
and 3) for applications such as BSSAP or RANAP or other services with direct SCCP access.

The basic SCCP services (connection establishment and release, data transfer and reset mechanism)
are provided either by the existing XTI functions or by a compatible extension of these functions.
@footnote{In particular, the reset mechanism is consistent with the X/Open X.25 extensions to XTI
described in XX25 (@ref{XX25,,XX25}).}

This XTI-SCCP API provides for portablility and interoperability of SCCP applications, so
encouraging the development of SCCP applications in open systems.  It defines an SCCP service
interface that is independent of any underlying SCCP provider.  Programmers with prior knowledge of
XTI benefit further from familiarity with the XTI programming environment.

@node Relationship to XTI
@section Relationship to the XTI Specification

XTI-SCCP provides access to SCCP providers through the XTI interface.

This document details the XTI-SCCP-specific options and SCCP-specific behaviours of the XTI
interface when used to access an SCCP provider.  The XTI-SCCP specification has been designed in
such a wasy as to allow existing generic XTI applications to run unchanged over SCCP.

This specification must be used in conjunction with the XTI specification.

@node Modes
@section Modes of the SCCP Service

The SCCP service interface supports two classes of connectionless service with two classes of
connection-oriented service with two modes:

@itemize @bullet
@item the switched-connection mode
@item the permanent-connection mode.
@end itemize

The switched-connection mode enables data to be trasnferred over an established connection (called a
Switched Virtual Circuit (SVC)) in a flow-controlled, sequence manner.  This circuit-oriented mode
is attractive to applications that require relatively long-lived, datastream-oriented interactions.

The permanent-connection mode has the same features as the switch-connection mode for the transfer
of data.  This service requires an pre-existing association (called a Permanent Virtual Circuit
(PVC)) between the peer users involved, which determines the characteristics of the data to be
transmitted.  No dynamic negotiation of options is supported by this mode.

A single SCCP end point does not support different modes of connections simultaneously.

The use of the interface---that is, the functions called and the order in which they are called---is
identical for SVCs or for PVCs.

@node Terminology
@section Terminology

@subheading Definition of Terms

The terminology used in this specification is that of the ITU-T standards that define the SCCP
service to which XTI-SCCP provides access.  For convenience, the abbreviations have been defined in
the Glossary (@pxref{Glossary}) for this specification.

Also, terms particular to the ITU-T SCCP protocol are described in @ref{Acronyms}.

@subheading Use of Naming Prefixes

To preserve uniqueness of the additions to XTI to support the SCCP service, the constants and the
flags defined by this specification have names that have the format @samp{T_SCCP_}@var{xxx}.

The new definitions are presented in the XTI-SCCP header file summary, see @ref{Header File}.

@node Conformance
@section Conformance Requirements

The XTI-SCCP conformance has two facets:

@itemize
@item the XTI-SCCP API
@item the underlying SCCP Service Provider.
@end itemize

@menu
* API Implementation::
* Underlying SCCP Service Provider::
@end menu

@node API Implementation
@subsection API Implementation

An XTI-SCCP conformant implementation provides the functions defined in @ref{Functions}.

The following points should be noted:

@itemize @bullet
@item When the XTI-SCCP user requests a feature that is supported by the XTI-SCCP API but not
supported by the underlying SCCP Service provider, the XTI-SCCP API returns a @perr{TNOTSUPPORT}
error.
@item An implementation of the XTI-SCCP API must only return the error codes defined by this
specification and the XTI specification.
@end itemize

@node Underlying SCCP Service Provider
@subsection Underlying SCCP Service Provider

An implementation of the underlying SCCP Service Provider that complies with this XTI-SCCP
specification will also comply with the requirements specified in ITU-T Recommendation Q.711, Q.712,
Q.713 and Q.714; ANSI T1.112; ETSI EN 300 009-1; or, JT-Q.711 through JT-Q.714.  The version
supported by the provider is indicated in an XTI-SCCP option (named @pval{T_SCCP_VERSION}), that is
defined in @ref{Options}.

@node Future Directions
@section Future Directions

@subheading Appendix for Security

XTI-SCCP-specific interworking security issues will be addressed in the XTI security appendix.

@node Services
@chapter Services

@menu
* Overview of the Connection-less Service::
* Overview of the Connection-Oriented Service::
* Mapping of SCCP Primitives::
@end menu

@node Overview of the Connection-less Service
@section Overview of the Connection-less Service

@menu
* CLNS Initialization/De-initialization::
* CLNS Data Transfer::
@end menu

@node CLNS Initialization/De-initialization
@subsection CLNS Initialization/De-initialization

There are no special considerations involved in the local management of an SCCP endpoint for
connection-less service.

@node CLNS Data Transfer
@subsection CLNS Data Transfer

Once an SCCP endpoint has been bound to a connection-less address, data may be transferrred to and
from the endpoint in full duplex mode.

Three existing XTI functions support data transfer in connectionless service:

@itemize
@item @manref{t_sndudata(3)}
@item @manref{t_rcvudata(3)}
@item @manref{t_rcvuderr(3)}
@end itemize

These two function enable SCCP users to send or receive between SCCP endpoints:

@itemize
@item unit data
@item unit data errors
@end itemize

@menu
* Receiving Unit Data::
* Sending Unit Data::
* Receiving Unit Data Errors::
@end menu

@node Receiving Unit Data
@subsubsection Receiving Unit Data

SCCP users are able to receive:

@itemize
@item unit data
@item unit data errors
@end itemize

Each element of this list genreates an event that unblock a synchronous call.

@node Sending Unit Data
@subsubsection Sending Unit Data

SCCP users are able to send:

@itemize
@item unit data
@end itemize

@node Receiving Unit Data Errors
@subsubsection Receiving Unit Data Errors

@node Overview of the Connection-Oriented Service
@section Overview of the Connection-Oriented Service

The connection-oriented service for SCCP consists of five phases of communication.  Like the
transport service, it includes:

@itemize @bullet
@item Initialization/De-initialization
@item Connection Establishment
@item Data Transfer
@item Connection Release
@end itemize

Also, unlike the transport service, it includes

@itemize @bullet
@item Reset
@end itemize

@table @strong
@item Notes:
@enumerate
@item The underlying SCCP provider manages NSDUs (Network Service Data Units) to carry data packets,
whereas a transport provider deals with TSDUs (Transport Service Data Units).  In the following
sections, we consider NSDU when the word TSDU is used.
@item @b{Bold} font is used in text for symbols that are XTI-SCCP API-specific.
@end enumerate
@end table

@menu
* CONS Initialization/De-initialization::
* CONS Connection Establishment::
* CONS Data Transfer::
* CONS Connection Release::
@end menu

@node CONS Initialization/De-initialization
@subsection CONS Initialization/De-initialization

There are no special considerations involved in the local management of an SCCP endpoint for
connection-oriented service.

When the network layer is restarted, or reset, all open user XTI-SCCP connections (including PVCs)
are given a disconnect indication.

@node CONS Connection Establishment
@subsection CONS Connection Establishment

For an SVC, the connection establishment functions map onto the SCCP connection setup procedures, so
that @manref{t_connect(3)} and @manref{t_accept(3)} cause connection request and connection accepted
packets to be generated, and incoming connection and connection confirmed packets cause
@pval{T_LISTEN} and @pval{T_CONNECT} events to be generated.

There is no equivalent protocol exchange on PVCs.  Functions @manref{t_connect(3)} causes a
@pval{T_CONNECT} event to be generated immediately, if the PVC is operable, and a
@pval{T_DISCONNECT} event to be generated immediately if it is inoperable.  When listening, a data
or interrupt packet arriving from a remote SCCP on an idle PVC causes the packet to be queue and a
@pval{T_LISTEN} event to be generated.  The user can invoke @manref{t_accept(3)} as usual, after
which a @pval{T_DATA} or @pval{T_EXDATA} event is generated for the queued packet.

@node CONS Data Transfer
@subsection CONS Data Transfer

Once an SCCP connection has been established between two users, data may be transferred back and
forth over the connection in full duplex mode.

Two existing XTI functions support data transfer in connection-oriented service:

@itemize
@item @manref{t_snd(3)}
@item @manref{t_rcv(3)}
@end itemize

These two functions enable SCCP users to send or receive over an SCCP connection:

@itemize
@item normal data
@item expedited data
@item connection resets
@end itemize

@menu
* Receiving Data::
* Sending Data::
* Connection Resets::
@end menu

@node Receiving Data
@subsubsection Receiving Data

SCCP users are able to receive:

@itemize
@item normal data
@item expedited data (if the @pval{T_EXPEDITED} flag is set on return from the call)
@item a reset indication (if the @pval{T_SCCP_RST} flag is set)
@end itemize

Each element of this list generates an event that unblocks a synchronous call.

If a reset indication or an explicit acknowledgement arrives during receipt of a data TSDU and some
data has already been trasnferred to the users buffer, then @manref{t_rcv(3)} returns, indicating
the number of bytes of data in the users buffer and with @pval{T_MORE} set in flags.  The reset
indication or explicit acknowledgement is returned by the next @manref{t_rcv(3)} call.

To allow unmodified programs to run over XTI-SCCP, reset indicattions are only given to the
application if the appropriate option has been negotiated on.  By default, receipt of a reset causes
the connection to be released (@pval{T_SCCP_RST_OPT} option defaults to @pval{T_NO}).

@node Sending Data
@subsubsection Sending Data

SCCP users are able to send over an SCCP connection:

@itemize
@item normal data
@item expedited data (by setting the @pval{T_EXPEDITED} flag)
@item a reset request or a confirmation (by setting the @pval{T_SCCP_RST} flag).
@end itemize

@node Connection Resets
@subsubsection Connection Resets

A reset may be invoked from the data transfer phase.  During this phase, either the user or the
network may reinitialize a virtual circuit at any time.

The reset is supported by using an additional flag @pval{T_SCCP_RST} in the functions
@manref{t_snd(3)} and @manref{t_rcv(3)}.

@enumerate
@item Sending a reset

A rest request is sent by setting the @pval{T_SCCP_RST} flag in a @manref{t_snd(3)} call with the
cause and the diagnostic of the reset in the two first octets of the @member{buf} argument.  The
cause is in the first octet and the diagnostic in the second octet.

The @manref{t_snd(3)} function returns immediately.  If further @manref{t_snd(3)} calls are
accepted while the reset is being performed, the send data will remain pending until the SCCP
provider receives the confirmation of reset.  This confirmation of reset is not returned to the
user.  The normal flow control mechanism may result in a subsequent @manref{t_snd(3)} in synchonous
mode blocking, or a @manref{t_snd(3)} call in asynchronous mode returning with @perr{TFLOW} error.

@item Receiving a reset

When a reset indication is received and the option @pval{T_SCCP_RST_OPT} is set to @pval{T_YES}, the
SCCP provider notifies the user with a @pval{T_DATA} event.  The user consumes this event with the
@manref{t_rcv(3)} call.  On return from @manref{t_rcv(3)}, @pval{T_SCCP_RST} is set in the
@member{flags} field, and the @member{buf} argument contains the cause of the reset in the first
octet and the diagnostic in the second octet.  If the users buffer is less than two bytes long then
the diagnostic value is discarded, and if the length is zero, the cause is also discarded.  All
further data presented on @manref{t_snd(3)} calls is discarded by the SCCP provider until the user
akcnowledges the reset by issuing a @manref{t_snd(3)} call with the @pval{T_SCCP_RST} flag set.  Any
cause and diagnostic passed with the @manref{t_snd(3)} call is ignored by the SCCP provider.  If the
SCCP user attempts to send data while a reset indication is pending, the @manref{t_snd(3)} call
returns with a @perr{TLOOK} error.  A subsequent @manref{t_look(3)} call will return a
@pval{T_DATA} event.  The user must consume the event before sneding further data.

@end enumerate

@table @strong
@item Notes:
@enumerate
@item Data sent prior to a reset may be discarded.  Data sent after a reset will be delivered to the
peer entity after it has been notified of the reset.  Data received after a reset will have been
sent by the peer entity after the reset.  No explicit acknowledgements will be received after a
reset for data sent prior to the reset.
@item Reset collisions are managed by the SCCP provider and have no effect for the user.
@end enumerate
@end table

@node CONS Connection Release
@subsection CONS Connection Release

The SCCP switched-connection mode only supports the abortive release.

The functions that support connection release in all cases are already defined:

@itemize
@item @manref{t_snddis(3)}, to send a request of a connection release
@item @manref{t_rcvdis(3)}, to receive an indication of a connection release.
@end itemize

Outstanding send and received data may be discarded.

Also, the user can indicate the reason of the connection release (the cause and the diagnostic) by
setting the @pval{T_SCCP_DISCON_REASON} option by calling @manref{t_optmgmt(3)} prior to calling
@manref{t_snddis(3)}.

Optionally, after receiving an indication of a connection release, the address of the user that
released the connection can be retrieved in the @pval{T_SCCP_DISCON_ADD} option, by calling the
function @manref{t_optmgmt(3)}.  In the same way, the SCCP options associated with the connection
release can be retrieved in specific XTI options defined to support the SCCP options
(@pxref{Options}).  The information may be overwritten if an incoming connection is queued on the
endpoint.

When @manref{t_snddis(3)} is invoked on a PVC, the circuit is reset with the cause and diagnostic
from @pval{T_SCCP_DISCON_REASON}, unless @pval{T_SCCP_DISCON_REASON} is set to @pval{T_UNSPEC}, in
which case the PVC is not reset.  The default value of @pval{T_SCCP_DISCON_REASON} for a PVC gives a
cause of @samp{0x80} and a diagnostic of @samp{0xF1}.  These values may be changed by using
@manref{t_optmgmt(3)}.

@table @strong
@item Notes:
@enumerate
@item The @pval{T_SCCP_DISCON_REASON} option is not permitted to take the value @pval{T_UNSPEC} on
an endpoint representing an SVC.
@end enumerate
@end table

Receipt of a reset indication with certain cause and diagnostic values generates a disconnect
indication.  These include the reset causes @samp{0x01} (out of order), @samp{0x11} (incompatible
destination) and @samp{0x1d} (network out of order), their private network equivalents (@samp{0x81},
@samp{0x91} and @samp{0x9D}) and the cause/diagnostic pair @samp{0x80}/@samp{0xF1} that are
generated by @manref{t_snddis(3)}.

For further details of the function referred to in this chapter, see their descriptions in
@ref{Functions}.

@node Mapping of SCCP Primitives
@section Mapping of SCCP Primitives

This section describes the mapping of the SCCP primitives described in ITU-T Recommendation Q.711
against the XTI Functions and Events.

@node Connection-Oriented Primitives
@subsection Connection-Oriented Primitives

Note that the @dfn{N-DATA-ACKNOWLEDGE} primitives of ITU-T Recommendation X.213 are not present
below (because SCCP does not support receipt confirmation, otherwise known as D-bit operation under
X.25).

@menu
* N-CONNECT::
* N-DATA::
* N-EXPEDITED-DATA::
* N-RESET::
* N-INFORM::
* N-DISCONNECT::
@end menu

@node N-CONNECT
@subsubsection N-CONNECT

@tabref{2-1} illustrates the parameters associated with the @dfn{N-CONNECT} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab21,2-1,N-CONNECT Primitive}

Note that @tabref{2-1} illustrates a characteristic of XTI that is not particular to SCCP: the
@dfn{calling address} in the @manref{t_connect(3)} call, the @dfn{called address} in the
@manref{t_listen(3)} call, the @dfn{responding address} in the @manref{t_accept(3)} call: all are
implied by the @member{fd} or @member{resfd} arguments to the corresponding call.  Also, the
@dfn{connection indication} on the @manref{t_connect(3)} and @manref{t_rcvconnect(3)} calls is
implied by the @member{fd} argument.

@page
@node N-DATA
@subsubsection N-DATA

@tabref{2-2} illustrates the parameters associated with the @dfn{N-DATA} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab22,2-2,N-DATA Primitive}

Note that in @tabref{2-2} there is no argument to either the @manref{t_snd(3)} or @manref{t_rcv(3)}
calls that can convey the @dfn{importance} parameter of the @dfn{N-DATA request}.  Therefore, the
@manref{t_optmgmt(3)} XTI function must be used to set the default @dfn{importance} parameter that
will be used on subsequent data transfers before @manref{t_snd(3)} is called.  Because conveying the
@dfn{importance} parameter on @dfn{N-DATA indication} primitives is optional and serves little
purpose, it is skipped in the XTI-SCCP API.

@node N-EXPEDITED-DATA
@subsubsection N-EXPEDITED-DATA

@tabref{2-4} illustrates the parameters associated with the @dfn{N-EXPEDITED-DATA} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab24,2-4,N-EXPEDITED-DATA Primitive}

@page
@node N-RESET
@subsubsection N-RESET

@tabref{2-5} illustrates the parameters associated with the @dfn{N-RESET} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab25,2-5,N-RESET Primitive}

@enumerate
@item Performing resets under XTI relies on the special data flag @pval{T_SCCP_RST} used instead of
@pval{T_MORE}, @pval{T_EXPEDITED} and @pval{T_PUSH} that is used to indicate that a reset is
required.
@item To remain compatible with pure XTI applications, the @dfn{N-RESET indication} primitive is not
indicated unless the XTI user indicates that it is willing to receive resets by setting
@pval{T_SCCP_RESET_OPT} to @pval{T_YES} using @manref{t_optmgmt(3)}.
@item There are several ways to specify the reset reason in the @dfn{N-RESET request}:
@itemize
@item Set @pval{T_SCCP_RESET_REASON} using @manref{t_optmgmt(3)} before the call to
@manref{t_snd(3)}.
@item Set @pval{T_SCCP_RESET_REASON} in the @member{data->opt} argument in the call to
@manref{t_sndopt(3)}.
@item Set the first octet of @member{buf} to the value of the reset reason and @member{nbytes} to
one in the call to @manref{t_snd(3)}.
@item Any combination of the above.
@end itemize
@item There are several ways to obtain the reset originator and reset reason from the @dfn{N-RESET
indication}:
@itemize
@item Read @pval{T_SCCP_RESET_ORIGIN} and @pval{T_SCCP_RESET_REASON} after the successful call to
@manref{t_rcv(3)} using @manref{t_optmgmt(3)}.
@item Read @pval{T_SCCP_RESET_ORIGIN} and @pval{T_SCCP_RESET_REASON} from the @member{data->opt}
buffer after the successful call to @manref{t_rcvopt(3)}.
@item Read the reset reason from the first octet of @member{buf} and the reset originator from the
second octet of @member{buf} when @member{nbytes} is set to two.
@item Any combination of the above.
@end itemize
@end enumerate

@page
@node N-INFORM
@subsubsection N-INFORM

@tabref{2-6} illustrates the parameters associated with the @dfn{N-INFORM} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab26,2-6,N-INFORM Primitive}

@enumerate
@item Performing informs under XTI relies on the special data flag @pval{T_SCCP_INF} used instead of
@pval{T_MORE}, @pval{T_EXPEDITED} and @pval{T_PUSH} that is used to indicate that an inform is
required.
@item To remain compatible with pure XTI applications, the @dfn{N-INFORM indication} primitive is
not indicates unless the XTI user indicates that it is willing to receive informs by setting
@pval{T_SCCP_INFORM_OPT} to @pval{T_YES} using @manref{t_optmgmt(3)}.
@item There are several ways to specify the inform reason and QoS options in the @dfn{N-INFORM
request}:
@itemize
@item Set @pval{T_SCCP_INFORM_REASON} and QoS options using @manref{t_optmgmt(3)} before the call to
@manref{t_snd(3)}.
@item Set @pval{T_SCCP_INFORM_REASON} and QoS optoins in the @member{data->opt} argument in a call
to @manref{t_sndopt(3)}.
@item Set the first octet of @member{buf} to the value of the reset reason and @member{nbytes} to
one in the call to @manref{t_snd(3)}.
@item Any combination of the above.  (Note that only the first two methods can transfer QoS
options.)
@end itemize
@item There are several ways to obtain the inform reason and QoS options from the @dfn{N-INFORM
indication}:
@itemize
@item Read @pval{T_SCCP_INFORM_REASON} and QoS parameter ranges after the successful call to
@manref{t_rcv(3)} using @manref{t_optmgmt(3)} and @manref{t_getinfo(3)}.
@item Read @pval{T_SCCP_INFORM_REASON} and QoS parameter ranges from the @member{data->opt} buffer
after a successful call to @manref{t_rcvopt(3)}.
@item Read the inform reason from the first octet of @member{buf} when @member{nbytes} is set to
one.
@item Any combination of the above.  (Note that only the first two methods can transfer QoS
options.)
@end itemize
@end enumerate

@page
@node N-DISCONNECT
@subsubsection N-DISCONNECT

@tabref{2-7} illustrates the parameters associated with the @dfn{N-DISCONNECT} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab27,2-7,N-DISCONNECT Primitive}

@node Connection-Less Primitives
@subsection Connection-Less Primitives

@menu
* N-UNIT-DATA::
* N-NOTICE::
@end menu

@node N-UNIT-DATA
@subsubsection N-UNIT-DATA

@tabref{2-8} illustrates the parameters associated with the @dfn{N-UNIT-DATA} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab28,2-8,N-UNIT-DATA Primitive}

@node N-NOTICE
@subsubsection N-NOTICE

@tabref{2-9} illustrates the parameters associated with the @dfn{N-NOTICE} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab29,2-9,N-NOTICE Primitive}

@node Management Primitives
@subsection Management Primitives

@menu
* N-STATE::
* N-PCSTATE::
* N-COORD::
@end menu

@node N-STATE
@subsubsection N-STATE

@tabref{2-10} illustrates the parameters associated with the @dfn{N-STATE} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab30,2-10,N-STATE Primitive}

@node N-PCSTATE
@subsubsection N-PCSTATE

@tabref{2-11} illustrates the parameters associated with the @dfn{N-PCSTATE} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab31,2-11,N-PCSTATE Primitive}

@node N-COORD
@subsubsection N-COORD

@tabref{2-12} illustrates the parameters associated with the @dfn{N-COORD} primitives provided for
the SCCP in ITU-T Recommendation Q.711.

@tabfig{xti_sccp_tab32,2-12,N-COORD Primitive}


@node States and Events
@chapter States and Events

To avoid major changes ot the XTI state definitions and state tables, resets are handled within the
data transfer state @psta{TS_DATA_XFER}.

The only difference is that a reset indication causes a @manref{t_snd(3)} call to return with a
@perr{TLOOK} error.  The event is reported as @pval{T_DATA} event by a subsequent call to
@manref{t_look(3)}.

@node Functions
@chapter Functions

This chapter describes extensions to the existing XTI functions (as defined in the XTI
specification), required for XTI support of SCCP.

The relevant description for SCCP use of existing XTI functions are presented below in alphabetical
order.

To ensure clarity of presentation, the options that contain SCCP parameters are specified separately
in @ref{Options}.

@menu
* XTI Function Considerations::
@end menu

@node XTI Function Considerations
@section XTI Function Considerations

@menu
* t_accept(3)::
* t_bind(3)::
* t_connect(3)::
* t_getinfo(3)::
* t_look(3)::
* t_listen(3)::
* t_open(3)::
* t_optmgmt(3)::
* t_rcv(3)::
* t_rcvconnect(3)::
* t_rcvdis(3)::
* t_rcvudata(3)::
* t_rcvuderr(3)::
* t_snd(3)::
* t_snddis(3)::
* t_sndudata(3)::
@end menu

@node t_accept(3)
@unnumberedsubsec t_accept(3)

The @manref{t_accept(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-CONNECT response} primitive.  The parameters of the @dfn{N-CONNECT response} primitive are
represented as follows:

@itemize ---
@item @emph{Responding address:} implied by the @member{resfd} argument to the call.  That is, the
address that is bound to the Stream represented by @member{resfd} is used as the responding address
parameter.  If the Stream associated with @member{resfd} is not bound to an address, the address
that is bound to @member{fd} is used instead.
The parameter @dfn{responding address} identifies the address of the SCCP service access point to
which the signalling connection has been established.  Under certain circumstances (e.g. a general
global title identifying replicated subsystems), the value of this parameter may be different from
the @dfn{called address} in the corresponding @dfn{N-CONNECT request}.

@item @emph{Quality of service parameter set:} contained in the @member{call->opt} argument to the
call.
When quality of service parameters are not specified, the last values set with @manref{t_optmgmt(3)}
are used.  When a parameter is not set with @manref{t_optmgmt(3)}, the default value is used.
The @dfn{quality of service parameter set} is used during call setup to negotiate the protocol class
for the connection and, if applicable (i.e. the protocol class is SCCP protocol class 3), the flow
control window size.  These parameters use the option names @pval{T_SCCP_PCLASS} and
@pval{T_SCCP_WINDOWSIZE}.  @pval{T_SCCP_WINDOWSIZE} is only meaningful when @pval{T_SCCP_PCLASS} has
the value @pval{T_SCCP_PCLASS_3}.

@item @emph{Expedited data selection:} contained in the @member{call->opt} argument to the call.
When not contained in the argument, the last value set with @manref{t_optmgmt(3)} is used.  If no
value was set, the default setting (non-use of expedited data) is selected.  The option name
@pval{T_SCCP_EDN} is used for expedited data selection.
The parameter @dfn{expedited data selection} may be used to indicate during setup whether expedited
data can be transferred via the connection.  A negotiation will be performed between SCCP users,
local and remote.

@item @emph{Importance:} contained in the @member{call->opt} argument to the call.
If the @dfn{importance} parameter is not provided, then the last setting of the parameter with a call
to @manref{t_optmgmt(3)} is used in its stead.  If no value was set, the default value is used.  The
option name @pval{T_SCCP_IMPORTANCE} is used for importance selection.
The @dfn{importance} parameter is a user optional parameter in request and response primitives that
results in the transmission of SCCP messages.  Its use allows the SCCP user to assign and indicate
to the SCCP a certain importance to the primitive.  During MTP and/or SCCP congestion, SCCP will
take decisions to send out or reject the resulting message, based on this importance and on the
severity of the congestion.

@item @emph{User data:} contained in the @member{call->udata} argument to the call.
Passing user data with the connection is optional.  When the @member{call->udata.buf} argument is
@pval{NULL}, or the @member{call->udata.len} argument is zero, no user data is passed with the
connection.

@item @emph{Connection identification:} contained in the @member{call->sequence} argument to the
call.
@end itemize

@node t_bind(3)
@unnumberedsubsec t_bind(3)

The @member{address} field of the @type{t_bind} structure contains the matching requirements for
routing incoming connections to the endpoint.  This may include (but is not limited to)
representation of one or more of the following:

@itemize @bullet
@item a local SNPA identifier
@item a local SCCP address
@item a local NSAP
@item a called user data matching requirement
@item a PVC number
@end itemize

Where an incoming call can be routed to multiple endpoints on the basis of their matching
requirements, the actual endpoint selected will be implementation dependent.

If the application likes to initiate a connection, it can either bind itself to a @pval{NULL}
address (by setting @member{req} to @pval{NULL} or @member{req->addr.len} to zero) or use any of the
matching requirements defined above.  If a @pval{NULL} address is used, the application is free to
use both SVCs and PVCs and any signalling route.  If matching requirements have been defined,
connections may be restricted to SVCs, a certain PVC, or a certain signalling route, depending ont
he matching criteria.

It is not possible to receive connection indications on a @pval{NULL} address.

@table @strong
@item Note:
An implementation may choose not to provide support for a wildcard mechanism for address
information, for example to route incoming connection whose call user data does not start with a
particular pattern.
@end table

@node t_connect(3)
@unnumberedsubsec t_connect(3)

The @manref{t_connect(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-CONNECT request} primitive and, in synchronous mode, the @dfn{N-CONNECT confirmation}
primitive (@pxref{t_rcvconnect(3)}).  The parameters of the @dfn{N-CONNECT request} primitive are
represented as follows:

@itemize ---
@item @emph{Called address:} contained in the @member{sndcall->addr} argument to the call.

@item @emph{Calling address:} implied by the @member{fd} argument to the call.  That is, the address
that is bound to the Stream represented by @member{fd} is used as the calling address parameter.

@item @emph{Quality of service parameter set:} contained in @pval{T_SS7_SCCP} options in the
@member{sndcall->opt} argument to the call.
When quality of service parameters are not specified, the last values set with @manref{t_optmgmt(3)}
are used.  When a parameter is not set with @manref{t_optmgmt(3)}, the default value is used.
The @dfn{quality of service parameter set} is used during call setup to negotiate the protocol class
for the connection and, if applicable (i.e. the protocol class is SCCP protocol class 3), the flow
control window size.  These parameters use the option names @pval{T_SCCP_PCLASS} and
@pval{T_SCCP_WINDOWSIZE}.  @pval{T_SCCP_WINDOWSIZE} is only meaningful when @pval{T_SCCP_PCLASS} has
the value @pval{T_SCCP_PCLASS_3}.

@item @emph{Expedited data selection:} contained in a @pval{T_SS7_SCCP} option in the
@member{sndcall->opt} argument to the call.
When not contained in the argument, the last value set with @manref{t_optmgmt(3)} is used.  If no
value was set, the default setting (non-use of expedited data) is selected.  The option name
@pval{T_SCCP_EDN} is used for expedited data selection.
The parameter @dfn{expedited data selection} may be used to indicate during setup whether expedited
data can be transferred via the connection.  A negotiation will be performed between SCCP users,
local and remote.

@item @emph{Importance:} contained in a @pval{T_SS7_SCCP} option in the @member{sndcall->opt}
argument to the call.
If the @dfn{importance} parameter is not provided, then the last setting of the parameter with a call
to @manref{t_optmgmt(3)} is used in its stead.  If no value was set, the default value is used.  The
option name @pval{T_SCCP_IMPORTANCE} is used for importance selection.
The @dfn{importance} parameter is a user optional parameter in request and response primitives that
results in the transmission of SCCP messages.  Its use allows the SCCP user to assign and indicate
to the SCCP a certain importance to the primitive.  During MTP and/or SCCP congestion, SCCP will
take decisions to send out or reject the resulting message, based on this importance and on the
severity of the congestion.

@item @emph{User data:} contained in the @member{sndcall->udata} argument on call.
Passing user data with the connection is optional.  When the @member{call->udata.buf} argument is
@pval{NULL}, or the @member{call->udata.len} argument is zero, no user data is passed with the
connection.

@item @emph{Connection identification:} implied by the @member{fd} argument to the call.
@end itemize

The @member{sndcall->addr} is used to select either an SVC or a PVC.

For an SVC, the @member{sndcall->addr} structure contains a representation of the addressing
information necessary to reach the destination, it may contain (but is not limited to) one or more
of the following:

@itemize @bullet
@item SNPA identifier
@item destination SCCP address
@item destination NSAP
@end itemize

When the connection has been established, the @member{rcvcall->addr} structure represents the
address on wich the call has been accepted.

For a PVC, the @member{sndcall->adddr} structure represents the PVC to be used.  If it is already in
use, the error @perr{TADDRBUSY} is returned.  On successful return:

@itemize @bullet
@item In synchronous mode, the PVC will be in state @psta{T_DATAXFER}.
@item In asynchronous mode, the PVC will be in state @psta{T_OUTCON} and a @pval{T_CONNECT} event
will be outstanding.
@end itemize

When the connection has been released, the @member{rcvcall->addr} structure represents the actual
PVC allocated.

@node t_getinfo(3)
@unnumberedsubsec t_getinfo(3)

The information returned by @manref{t_getinfo(3)} reflects the characteristics of the SCCP
connection, or, if no connection is established, the maximum characteristics an SCCP connection
could take on using the underlying SCCP provider.

The parameters of the @manref{t_getinfo(3)} function, for the different versions of the SCCP
protocol are presented in the table below:

@node t_look(3)
@unnumberedsubsec t_look(3)

No special considerations.

@node t_listen(3)
@unnumberedsubsec t_listen(3)

The @manref{t_listen(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-CONNECT indication} primitive.  The parameters of the @dfn{N-CONNECT indication} primitive
are represented as follows:

@itemize ---
@item @emph{Called address:} implied by the @member{fd} argument to the call.  That is, the
address that is bound to the Stream represented by @member{fd} is used as the called address
parameter.

@item @emph{Calling address:} contained in the @member{call->addr} argument upon successful return
from the call.

@item @emph{Quality of service parameter set:} contained in the @member{call->opt} argument upon
successful return from the call.
The @dfn{quality of service parameter set} is used during call setup to negotiate the protocol class
for the connection and, if applicable (i.e. the protocol class is SCCP protocol class 3), the flow
control window size.  These parameters use the option names @pval{T_SCCP_PCLASS} and
@pval{T_SCCP_WINDOWSIZE}.  @pval{T_SCCP_WINDOWSIZE} is only meaningful when @pval{T_SCCP_PCLASS} has
the value @pval{T_SCCP_PCLASS_3}.

@item @emph{Importance:} contained in the @member{call->opt} argument upon successful return from the
call.  Whether this value is indicated is implementation dependent.

@item @emph{User data:} contained in the @member{call->udata} argument upon successful return from
the call.
Passing user data with the connection is optional.  When the @member{call->udata.buf} argument is
@pval{NULL}, or the @member{call->udata.len} argument is zero, no user data was passed with the
connection.

@item @emph{Connection identification:} contained in the @member{call->sequence} argument upon
successful return from the call.
@end itemize

@node t_open(3)
@unnumberedsubsec t_open(3)

The function @manref{t_open(3)} is called at the first step in the initialization of an SCCP
endpoint.  This function returns various default characteristics associated with the different
versions of SCCP that are supported.  If, for example, an SCCP provider supports ANSI T1.112, the
characteristics returned are those of ANSI T1.112.  If the SCCP provider is limited to ITU-T Q.711,
the characteristics returned are those of ITU-T Q.711.

The parameters of the @manref{t_open(3)} function, for the different version of the SCCP protocol
are presented in the table below:

@node t_optmgmt(3)
@unnumberedsubsec t_optmgmt(3)

The function @manref{t_optmgmt(3)} uses specific options to support the SCCP service.  The options
are described in @ref{Options}.

@node t_rcv(3)
@unnumberedsubsec t_rcv(3)

The behavior of the function @manref{t_rcv(3)} remains unchanged.  The function can operate in
syncrhonous and asyncrhonous modes.  It follows the current flow control rules.

The default behavior is to acknowledge, in an automatic way, data sent with the Delivery
Confirmation bit and expedited data.

If expedited data arrives after part of a TSDU has been retrieved, receipt of the remainder of the
TSDU is suspended util the ETSDU has been processed.  Only after the full ETSDU has been retrieved
(the @pval{T_MORE} flag not set), the remainder of the TSDU is amde available to the user.

In addition to the @pval{T_EXPEDITED} and @pval{T_MORE} flags, the following flags can be set in the
argument @member{flags}:

@itemize @bullet
@item On return from the call, if @pval{T_SCCP_RST} is set in @member{flags}, this indicates that a
reset indication occurred.
@end itemize

When @pval{T_SCCP_RST} is returned, the argument @member{buf} contains the cause and diagnostic of
the reset.  Each one is coded in one octet.  The cause is encoded in the first octet, and the
diagnostic in the second octet.  If the user's buffer is less than two bytes long then the
diagnostic value is discarded, and if the length is zero, the cause is also discarded.

@node t_rcvconnect(3)
@unnumberedsubsec t_rcvconnect(3)

The @manref{t_rcvconnect(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-CONNECT confirmation} primitive.  The parameters of the @dfn{N-CONNECT confirmation}
primitive are represented as follows:

@itemize --
@item @emph{Responding address:} contained in the @member{call->addr} argument upon successful
return from the call.
The parameter @dfn{responding address} identifies the address of the SCCP service access point to
which the signalling connection has been established.  Under certain circumstances (e.g. a general
global title identifying replicated subsystems), the value of this parameter may be different from
the @dfn{called address} in the corresponding @dfn{N-CONNECT request}.

@item @emph{Quality of service parameter set:} contained in the @member{call->opt} argument upon
successful return from the call.
The @dfn{quality of service parameter set} is used during call setup to negotiate the protocol class
for the connection and, if applicable (i.e. the protocol class is SCCP protocol class 3), the flow
control window size.  These parameters use the option names @pval{T_SCCP_PCLASS} and
@pval{T_SCCP_WINDOWSIZE}.  @pval{T_SCCP_WINDOWSIZE} is only meaningful when @pval{T_SCCP_PCLASS} has
the value @pval{T_SCCP_PCLASS_3}.

@item @emph{Importance:} contained in the @member{call->opt} argument upon successful return from
the call.  Whether this value is indicated is implementation dependent.

@item @emph{User data:} contained in the @member{call->udata} argument upon successful return from
the call.
Passing user data with the connection is optional.  When the @member{call->udata.buf} argument is
@pval{NULL}, or the @member{call->udata.len} argument is zero, no user data was passed with the
connection.

@item @emph{Connection identification:} implied by the @member{fd} argument to the call.
@end itemize

@node t_rcvdis(3)
@unnumberedsubsec t_rcvdis(3)

The @manref{t_rcvdis(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-DISCONNECT indication} primitive.  The parameters of the @dfn{N-DISCONNECT indication}
primitive are represented as follows:

@itemize ---
@item @emph{Responding address:} contained in the @pval{T_SCCP_DISCON_ADD} option retrievable with
@manref{t_optmgmt(3)} after the call returns successfully.@footnote{XTI has no mechanism for passing
the responding address with the existing @manref{t_rcvdis(3)} arguments, and so this option
mechainsm is used.}

@item @emph{Originator} and @emph{Reason:} contained in the @member{dis->reason} argument upon
successful return from the call.  The @member{dis->reason} argument encodes both the
@dfn{originator} and the @dfn{reason} parameters of the release or refusal.

The value of the @dfn{originator} parameter can be ontained using the @code{T_SCCP_GET_ORIGIN}
C-preprocessor macro.  The @dfn{originator} indicates the initiator of the connection release or the
connection refusal and may assume the following values: @pval{T_PROVIDER}, the network service
provider; @pval{T_USER}, the network service user; or @pval{T_UNSPEC}, undefined.  The originator is
also contained in the @pval{T_SCCP_DISCON_ORIGIN} option retrievable with @manref{t_optmgmt(3)}
after the call returns successfully.

The value of the @dfn{reason} parameter can be obtained using the @code{T_SCCP_GET_CAUSE}
C-preprocessor macro.  When the @dfn{N-DISCONNECT indication} represents the release of an
established connection or the withdrawal of a connection indication, this reason is an SCCP release
cause.  When the @dfn{N-DISCONNECT indication} represents the refusal of an @dfn{N-CONNECT request},
this reason is an SCCP refusal cause.  The cause is also contained in the @pval{T_SCCP_DISCON_CAUSE}
option retrievable with @manref{t_optmgmt(3)} after the call returns successfully.

@item @emph{Importance:} not delivered.@footnote{ITU-T Recommendation Q.711 specifies that
delivering the @dfn{importance} parameter on @dfn{N-DISCONNECT indication} primitives is an
implemetnation option, and so this parameter is simply not delivered.}

@item @emph{User data:} contained in the @member{dis->udata} argument upon successful return from
the call.  Passing user data with disconnection is optional.  When the @member{dis->udata.buf}
argument is @pval{NULL}, or the @member{dis->udata.len} argument is zero, no user data was passed
with the disconnection.

@item @emph{Connection identification:} contained in the @member{dis->sequence} argument upon
successful return from the call.  When zero, it indicates that the disconnection pertains to the
connection associated with @member{fd}.
@end itemize

This function is used to receive an indication of a connection release.

The field @member{discon->reason} contains the SCCP originator and cause of the connection release.
The originator and the diagnostic are both encoded and can be retrieved using respectively the
@code{T_SCCP_GET_ORIGIN} C-preprocessor macro and the @code{T_SCCP_GET_CAUSE} C-proprocessor macro.

This function allows operations in accordance with XTI, but cannot be used to retrieve the address
of the user that released the connection.  For this purpose, the user has to call the function
@manref{t_optmgmt(3)} and retrieve the @pval{T_SCCP_DISCON_ADD} option.

For further details about the management of options, see @ref{Options}.

@node t_rcvudata(3)
@unnumberedsubsec t_rcvudata(3)

The behavior of the function @manref{t_rcvudata(3)} remains unchanged.  The function can operate in
synchronous and asynchronous modes.  It follows the current flow control rules.

@node t_rcvuderr(3)
@unnumberedsubsec t_rcvuderr(3)

The behavior of the function @manref{t_rcvuderr(3)} remains unchanged.  This function is used to
receive a unit data service message indicating the failure to deliver a previously sent message
invoked with the @manref{t_sndudata(3)} library call.

@node t_snd(3)
@unnumberedsubsec t_snd(3)

The behavior of the function @manref{t_snd(3)} remains unchanged.  The function can operate in
synchronous and asynchronous modes.

In addition to the @pval{T_EXPEDITED} and @pval{T_MORE} flags, the following flags can be set in the
argument @member{flags}:

@itemize @bullet
@item @pval{T_SCCP_RST}
If set in @member{flags}, this indicates to the underlying provider that a request or a confirmation
of reset is required.

The @manref{t_snd(3)} function returns immediately.  If further @manref{t_snd(3)} calls are
accepted while the reset request is being performed the send data will remain pending until the SCCP
provider receives the confirmation of reset.  This confirmation of reset is not returned to the
user.  The normal flow control mechanism may result in subsequent @manref{t_snd(3)} in synchronous
mode blocking, or a @manref{t_snd(3)} call in asynchronous mode returning the @perr{TFLOW} error.

The cause and diagnostic of a reset request are encoded in the two first octets of the @member{buf}
argument.  The cause is in the first octet and the diagnostic in the second octet.  If the
@member{buf} argument is @pval{NULL} or the @member{nbytes} is @samp{0}, then a cause of @samp{0}
and a diagnostic of @samp{0xFA} (that means user synchronization) are used.  If @member{nbytes} is
@samp{1}, the diagnostic is set to @samp{0}.

Any cause and diagnostic passed in the @manref{t_snd(3)} call are ignored by the SCCP provider when
senting a reset confirmation.

Data received after a successful @manref{t_snd(3)} call requesting a reset is data transmitted by
the peer after completion of the reset.
@end itemize

@node t_snddis(3)
@unnumberedsubsec t_snddis(3)

The @manref{t_snddis(3)} XTI library call is used to implement the ITU-T Recommendation Q.711
@dfn{N-DISCONNECT request} primitive.  The parameters of the @dfn{N-DISCONNECT request} primitive
are as represented follows:

@itemize ---
@item @emph{Responding address:} contained in the @member{call->addr} argument to the call.  For
XTI, this address is always implied by the @member{call->sequence} argument to the call and the
@member{call->addr} argument is ignored.  (It is the SCCP provider's responsibility to determine and
save the responding address associated with a given connection indication for use by this function.)

The @dfn{responding address} is only present in the @dfn{N-DISCONNECT} primitive only in the case
where the primitive is used to indicate rejection of a signalling connection establishment attempt
by an SCCP user function (that is, when @member{call->sequence} is non-zero).  The parameter conveys
the addres of the service access point from which the @dfn{N-DISCONNECT requeset} was issued and
under certain circumstances (e.g. a general global title identifying replicated subsystems), the
value of this parameter may be different from the @dfn{called address} in the corresponding
@dfn{N-CONNECT request} primitive.

@item @emph{Originator:} always @pval{T_USER} and so not passed as an argument on call.

@item @emph{Reason:} contained in the @member{call->opt} argument to the call.
If the @dfn{reason} parameter is not provided, then the last setting of the parameter with a call to
@manref{t_optmgmt(3)} is used in its stead.  If no value was set, the default value is used.  The
option name @pval{T_SCCP_DISCON_CAUSE} is used for cause selection.

@item @emph{Importance:} contained in the @member{call->opt} argument to the call.
If the @dfn{importance} parameter is not provided, then the last setting of the parameter with a call
to @manref{t_optmgmt(3)} is used in its stead.  If no value was set, the default value is used.  The
option name @pval{T_SCCP_IMPORTANCE} is used for importance selection.
The @dfn{importance} parameter is a user optional parameter in request and response primitives that
result in the transmission of SCCP messages.  Its use allows the SCCP user to assign and indicate to
SCCP a certain importance to the primitive.  During MTP and/or SCCP congestion, SCCP will take
decisions to send out or reject the resulting message, based on this importance and on the severity
of the congestion.

@item @emph{User data:} contained in the @member{call->udata} argument upon call.  Passing user data
with disconnection is optional.  When the @member{call->udata.buf} argument is @pval{NULL}, or the
@member{call->udata.len} argument is zero, no user data is passed with the disconnection.

@item @emph{Connection identification:} contained in the @member{call->sequence} argument upon call.
When zero, it indicates that the disconnection pertains to the connection associated with
@member{fd}.
@end itemize

The function is used to send a request of a connection release.

The function induces a state transfer to @psta{T_IDLE} and returns at the receipt of the
confirmation of the connection release.

In case of PVC-connection mode, @manref{t_snddis(3)} disassociates the user from the PVC and
normally resets the PVC.

@node t_sndudata(3)
@unnumberedsubsec t_sndudata(3)

The behavior of the function @manref{t_sndudata(3)} remains unchanged.  The function can operatin
in synchronous and asynchronous modes.  It follows current flow control rules.

@node Options
@chapter Options

The functions @manref{t_optmgmt(3)}, @manref{t_connect(3)}, @manref{t_listen(3)},
@manref{t_accept(3)}, and @manref{t_rcvconnect(3)}, all contain an @member{opt} argument of type
@type{struct netbuf} as an input or output parameter.  This argument is used to convey options, and
in particular SCCP Quality of Service Parameters and options, between SCCP user and SCCP provider.

Each option is formatted according to the structure @type{t_opthdr}, possibly followed by the option
value.

In the structure @type{t_opthdr}, the @member{name} field specifies the mnemonic of the option.

The @member{level} field specifies the protocol affected (here @pval{T_SCCP} for all options of the
XTI-SCCP API).

The @member{len} field specifies the total length of the option (that is, the length of the option
header @type{t_opthdr} lush the length of the option value, without the possible alignment
characters).

The @member{status} field of the returned options contains information about the success or failure
of a negotiation.

The structure @type{t_opthdr} is followed by the option value.

The XTI-SCCP user has to ensure that each option starts at a long-word (i.e. 32-bit) boundary.

@node Description of the XTI-SCCP Options
@section Description of the XTI-SCCP Options

The table presented in this section describes the options available in the XTI-SCCP API.  An XTI
implementation supports none, all or any subset of them.

All the names of the options are defined in the ``New Options to Support SCCP Service'' part of the
@file{<xti.h>} header file.

The legal optoin values shown in the SCCP options table are those limits defined in ITU-T Q.711
1993.  They are given as an example only.

The actual legacl option values in force for SCCP options are dependent on the version of the SCCP
protocol in use and the options in force for a particular SS7 network.

For each optoin, if the user gives a value that is not one of the allowed values, the provider will
negotiate it to a valid value.

The normal XTI option handling is employed for XTI-SCCP.  Chapter 5 of the XTI specification
describes this in detail.

XTI-SCCP options relevant only to a version of the SCCP protocol specification later than that in
use are treated as ``@dfn{unknown}'' or ``@dfn{not supported}'' by the XTI-SCCP provider.

Negotiable XTI-SCCP options that contain a value outside those defined for the particular version of
SCCP in use are @emph{not} considered to be ``@dfn{illegal options}'', but are negotiated to the
nearest legal option value by the XTI-SCCP provider.  (This allows for forward compatibility with
newer version of SCCP.)

Other XTI-SCCP options are considered to be illegal if they contain a value that cannot be
represented in the protocol or that cannot be interpreted by the provider.

@table @strong
@item Note:
Examples of the option values that cannot be represented are CUG number greater than that allowed
for basic format when X.25-1980 is in use, and a CUG number greater than that allowed for extended
format when X.25-1984 is in use.  An example of an option value that cannot be interpreted by the
provider is @pval{T_X25_REVCHG} being set to a value other than @pval{T_YES} or @pval{T_NO}.
@end table

The handling of ``@dfn{unknown},'' ``@dfn{not supported},'' and ``@dfn{illegal}'' options are
clearly described in Section 5.3.2, [Illegal Options] of the XTI specification.

SCCP facilities are conveyed by the options described under ``SCCP Options'' in the following table.

The option values associated with the endpoint are used by the SCCP provider to build a call packet.
Before user modification, the effective option values are the implementation defined default values
(for example, a combination of subscription time options and local provider configuraiton data).
The effective values can be modified at any time by the functions @manref{t_optmgmt(3)},
@manref{t_connect(3)}, @manref{t_listen(3)}, @manref{t_accept(3)} and @manref{t_rcvconnect(3)}.
Function @manref{t_optmgmt(3)} can be used to retrieve the implementation defined default values or
to reset the effective values to these defaults.  If an option value is set to @pval{T_UNSPEC}, the
associated SCCP option will not be specified in the call packet.

Options that are not user-settable are marked as @dfn{read-only} in the table below.

@tabfig{xti_sccp_tab51,5-1,SCCP-level Options}

@node Use of SCCP Options
@section Use of SCCP Options

The following tables identify the @member{name} field of the structure @type{t_opthdr} with the
mnemonic of the option, and the functions with which the option is meaningful.

@tabfig{xti_sccp_tab52,5-2,SCCP Service}

@node Header File
@appendix Header File

This appendix presents the additional header file information for XTI-SCCP.  Implementations
suporting XTI-SCCP will provide equivalent definitions in @header{<xti_sccp.h>}.  XTI-SCCP programs
should include @header{<xti_sccp.h>} as well as @header{<xti.h>}.

Values specified for some of the symbolic constants in this SCCP header definitions are designated
as not mandatory for conformance purposes.  These are identified by the comment accompanying the
constant definition.

@smallformat
@verbatiminclude xti_sccp.h
@end smallformat

@node Protocol Terminology
@appendix Protocol Terminology

@table @dfn
@item Protocol Address
The @dfn{Protocol Address} is the SCCP address.
@item Sending Data of Zero Octets
The SCCP service definition, both in connection-oriented mode and in permanent-connection mode,
permits sending of a TSDU of zero octets.
@item Expedited Data Negotiation
@dfn{Expedited Data Negotiation} is an optional ITU-T-specified DTE facility that may be used for a
given Virtual Call.  The calling DTE uses the @dfn{Expedited Data Negotiation Facility} during the
connection phase to indicate whether it wishes to use the expedited data-transfer procedures.  This
indication is provided by a higher layer entity in the calling DTE.  This facility is conveyed
transparently by public data networks but may be set to non-use of the expedited data-transfer
procedures by gateways and private networks that do not support them (see ISO/IEC 8208 and ITU-T
Recommendation X.25).
@item Fast Select
@dfn{Fast Select} is an optional user facility that may be requested by a DTE for a given Virtual
Call.  The @dfn{Fast Select} facility allows the DTE to transmit call setup and clearing packets
with a User Data Field of up to 128 octets.
@item Segmentation and Concatenation
The SCCP provider manages the segmentation and the concatenation of the TSDU (if the SCCP user did
not already make it).  At the XTI interface, when a TSDU is broken up into more that one sub-unit,
the @pval{T_MORE} flag is set on each sub-unit passed across the interface, except the last.
@item User Data
Since, at most, 128 octets of User Data may be sent in SCCP call and clear packets, the field
@member{udata.len} in the function @manref{t_connect(3)}, @manref{t_listen(3)}, @manref{t_rcvdis(3)}
and @manref{t_snddis(3)} should have a value of up to 128.
@end table

@node License
@unnumbered License

All code presented in this manual is licensed under the @ref{GNU Affero General Public License}.

The text of the manual are licensed under the @ref{GNU Free Documentation License}, with no
invariant sections, no front-cover texts and no back-cover texts.  Please note, however, that it is
just plain wrong to modify statements of, or attribute statements to, the author or @cite{OpenSS7
Corporation}.

@menu
* GNU Affero General Public License::
* GNU Free Documentation License::
@end menu

@include texi/agpl3.texi
@include texi/fdl13.texi

@node Glossary
@unnumbered Glossary

@table @emph
@item Signalling Data Link Service Data Unit
A grouping of SDL user data whose boundaries are preserved from one end of the signalling data link
connection to the other.
@item Data transfer
The phase in connection and connectionless modes that supports the transfer of data between to
signalling data link users.
@item SDL provider
The signalling data link layer protocol that provides the services of the signalling data link
interface.
@item SDL user
The user-level application or user-level or kernel-level protocol that accesses the services of the
signalling data link layer.
@item Local management
The phase in connection and connectionless modes in which a SDL user initializes a stream and
attaches a PPA address to the stream.  Primitives in this phase generate local operations only.
@item PPA
The point at which a system attaches itself to a physical communications medium.
@item PPA identifier
An identifier of a particular physical medium over which communication transpires.
@end table

@node Acronyms
@unnumbered Acronyms

@multitable @columnfractions 0.15 0.85
@item @dfn{ANSI} @tab American National Standards Institute
@item @dfn{API} @tab Application Programming Interface
@item @dfn{CCITT} @tab The International Telegraph and Telephone Consutative Committee, old name for ITU-T
@item @dfn{CONS} @tab Connection-Oriented Network Service
@item @dfn{CUD} @tab Call User Data
@item @dfn{DCE} @tab Data Circuit-terminating Equipment
@item @dfn{DDN} @tab Defence Data Network
@item @dfn{DLPI} @tab Data Link Provider Interface
@item @dfn{DLSAP} @tab Destination Link Service Access Point
@item @dfn{DNIC} @tab Data Network Identification Code
@item @dfn{DSAP} @tab Destination Service Access Point
@item @dfn{DTE} @tab Data Terminal Equipment 
@item @dfn{DXE} @tab DTE or DCE
@item @dfn{EM} @tab Event Management
@item @dfn{ENSDU} @tab Expedited Network Service Data Unit
@item @dfn{ETSI} @tab European Telecommunications Standards Institute
@item @dfn{HDLC} @tab High-Level Data Link Control
@item @dfn{IEEE} @tab Institute of Electrical and Electronics Engineers
@item @dfn{IP} @tab Internet Protocol
@item @dfn{ISDNI} @tab ISDN Interface
@item @dfn{ISDN} @tab Integrated Services Digital Network
@item @dfn{ISO} @tab International Organization for Standardization
@item @dfn{ISUPI} @tab ISUP Interface
@item @dfn{ISUP} @tab ISDN User Part
@item @dfn{ITU} @tab International Telecommunications Union
@item @dfn{ITU-T} @tab ITU Telecom Sector
@item @dfn{LAN} @tab Local Area Network
@item @dfn{LAPB} @tab Link Access Procedure (Balanced), ISO/IEC 7776
@item @dfn{LAPD} @tab Link Access Procedure D-Channel, Q.921
@item @dfn{LAPF} @tab Link Access Procedure Frame Mode, Q.922
@item @dfn{LAP} @tab Link Access Procedure
@item @dfn{LCI} @tab Logical Channel Identifier
@item @dfn{LLC1} @tab Logical Link Control Type 1
@item @dfn{LLC2} @tab Logical Link Control Type 2
@item @dfn{LLC3} @tab Logical Link Control Type 3
@item @dfn{LLC} @tab Logical Link Control
@item @dfn{LLI} @tab Logical Link Inteface
@item @dfn{LSAP} @tab Link Service Access Point
@item @dfn{MAC} @tab Media Access Control
@item @dfn{MTPI} @tab Message Transfer Part Interface
@item @dfn{MTP} @tab Message Transfer Part 
@item @dfn{NLI} @tab Network Layer Interface
@item @dfn{NPDU} @tab Network Protocol Data Unit
@item @dfn{NPI} @tab Network Provider Interface
@item @dfn{NPI} @tab Numbering Plan Indicator
@item @dfn{NSAP} @tab Network Service Access Point
@item @dfn{NSDU} @tab Network Service Data Unit
@item @dfn{NSP} @tab Network Service Provider
@item @dfn{NS} @tab Network Service
@item @dfn{NSU} @tab Network Service User
@item @dfn{NUI} @tab Network User Information
@item @dfn{OSI} @tab Open System Interconnection
@item @dfn{PAD} @tab Packet Assembler/Disassembler
@item @dfn{PDN} @tab Public Data Network
@item @dfn{PDU} @tab Protocol Data Unit
@item @dfn{PLP} @tab Packet Layer Protocol
@item @dfn{PPA} @tab Physical Point of Attachment
@item @dfn{PSDN} @tab Public Switched Data Network
@item @dfn{PSTN} @tab Public Switch Telephone Network
@item @dfn{PVC} @tab Permanent Virtual Circuit
@item @dfn{QOS} @tab Quality of Service
@item @dfn{RPOA} @tab Recognized Private Operating Agency
@item @dfn{SAP} @tab Service Access Point
@item @dfn{SCCPI} @tab Signalling Connection Control Part Interface
@item @dfn{SCCP} @tab Signalling Connection Control Part
@item @dfn{SDLI} @tab Signalling Data Link Interface
@item @dfn{SDL} @tab Signalling Data Link
@item @dfn{SDTI} @tab Signalling Data Terminal Interface
@item @dfn{SDT} @tab Signalling Data Terminal
@item @dfn{SDU} @tab Service Data Unit
@item @dfn{SLI} @tab Signalling Link Interface
@item @dfn{SLSAP} @tab Source Link Service Access Point
@item @dfn{SL} @tab Signalling Link
@item @dfn{SNPA} @tab Subnetwork Point of Attachment
@item @dfn{SSAP} @tab Source Service Access Point
@item @dfn{SVC} @tab Switched Virtual Circuit
@item @dfn{TCAP} @tab Transaction Capabilities Application Part
@item @dfn{TCI} @tab Transaction Component Interface
@item @dfn{TC} @tab Component Handling Sub-Layer
@item @dfn{TLI} @tab Transport Layer Interface
@item @dfn{TOA/NPI} @tab Type of Address/Numbering Plan Indicator
@item @dfn{TOA} @tab Type of Address
@item @dfn{TPI} @tab Transport Provider Interface
@item @dfn{TRI} @tab Transaction Interface
@item @dfn{TR} @tab Transaction Handling Sub-Layer
@item @dfn{VC} @tab Virtual Circuit
@item @dfn{WAN} @tab Wide Area Network
@item @dfn{X.121} @tab ITU-T Recommendation X.121
@item @dfn{X.25} @tab ITU-T Recommendation X.25
@item @dfn{X.28} @tab ITU-T Recommendation X.28
@item @dfn{X.3} @tab ITU-T Recommendation X.3
@item @dfn{X.75} @tab ITU-T Recommendation X.75
@item @dfn{XX25} @tab X.25 Programming Inteface using XTI
@item @dfn{XXX} @tab X.3, X.28, X.29
@end multitable

@node References
@unnumbered References
@enumerate
@item ITU-T Recommendation X.210, (Geneva, 1993), ``Information Technology --- Open Systems Interconnection --- Basic reference model: Conventions for the definition of OSI services,'' ISO/IEC 10731:1994.
@item ITU-T Recommendation X.217, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Service definition for the Association Control Service Element,'' ISO/IEC 8649:1996.
@item ITU-T Recommendation X.227, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Connection-oriented protocol for the Association Control Service Element: Protocol Specification,'' ISO/IEC 8650-1.
@item ITU-T Recommendation X.237, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Connectionless protocol for the Association Control Service Element: Protocol Specification,'' ISO/IEC 10035-1 : 1995.
@item ITU-T Recommendation X.216, (Geneva, 1994), ``Information Technology --- Open Systems Interconnection --- Presentation service definition,'' ISO/IEC 8822:1994.
@item ITU-T Recommendation X.226, (Geneva, 1994), ``Information Technology --- Open Systems Interconnection --- Connection-oriented presentation protocol: Protocol specification,'' ISO/IEC 8823-1:1994.
@item ITU-T Recommendation X.236, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Connectionless presentation protocol: Protocol specification,'' ISO/IEC 9576-1:1995.
@item ITU-T Recommendation X.215, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Session service definition,'' ISO/IEC 8326:1996.
@item ITU-T Recommendation X.225, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Connection-oriented session protocol: Protocol specification,'' ISO/IEC 8327-1:1996.
@item ITU-T Recommendation X.235, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Connectionless session protocol: Protocol specification,'' ISO/IEC 9548-1:1995.
@item ITU-T Recommendation X.214, (Geneva, 1995), ``Information Technology --- Open Systems Interconnection --- Transport service definition,'' ISO/IEC 8072:1996.
@item ITU-T Recommendation X.224
@item ITU-T Recommendation Q.700
@item ITU-T Recommendation Q.701
@item ITU-T Recommendation Q.702
@item ITU-T Recommendation Q.703
@item ITU-T Recommendation Q.704
@item Geoffrey Gerrien, ``CDI - Application Program Interface Guide,'' Gcom, Inc., March 1999.
@item ITU-T Recommendation Q.771, (Geneva, 1993), ``Signalling System No. 7 --- Functional description of transaction capabilities,'' (White Book).
@end enumerate

@ifnotplaintext
@c skip indexes for plain text (regex search works better)
@c @iftex
@c @node Indices
@c @unnumbered Indices
@c @end iftex

@c @ifnottex
@c @c concatenate indices for html and info
@node Index
@unnumbered Index
@printindex cp
@c @end ifnottex

@c @iftex
@c @menu
@c * Concept Index::
@c * Protocol State Index::
@c * Primitive Index::
@c * Primitive Structure and Type Index::
@c * Primitive Structure Field Index::
@c * Primitive Values Index::
@c * Primitive Error Values Index::
@c * Input-Output Control Index::
@c * MIB Object Index::
@c * Manual Page Index::
@c @end menu
@c 
@c @node Concept Index
@c @section Concept Index
@c @printindex cp
@c 
@c @page
@c @node Protocol State Index
@c @section Protocol State Index
@c @printindex st
@c 
@c @page
@c @node Primitive Index
@c @section Primitive Index
@c @printindex pr
@c 
@c @page
@c @node Primitive Structure and Type Index
@c @section Primitive Structure and Type Index
@c @printindex tp
@c 
@c @page
@c @node Primitive Structure Field Index
@c @section Primitive Structure Field Index
@c @printindex vr
@c 
@c @page
@c @node Primitive Values Index
@c @section Primitive Values Index
@c @printindex pv
@c 
@c @page
@c @node Primitive Error Values Index
@c @section Primitive Error Values Index
@c @printindex pe
@c 
@c @page
@c @node Input-Output Control Index
@c @section Input-Output Control Index
@c @printindex ct
@c 
@c @page
@c @node MIB Object Index
@c @section MIB Object Index
@c @printindex mo
@c 
@c @page
@c @node Manual Page Index
@c @section Manual Page Index
@c @printindex mp
@c @end iftex
@end ifnotplaintext

@page
@shortcontents
@page
@contents
@bye
