This is /home/brian/os8/stacks/doc/specs/sccpi/xti_sccp.info, produced by
makeinfo version 4.13 from /home/brian/os8/stacks/doc/specs/sccpi/xti_sccp.texi.

INFO-DIR-SECTION OpenSS7
START-INFO-DIR-ENTRY
* XTI-SCCP: (xti_sccp).		XTI Corrigendum for SCCP
END-INFO-DIR-ENTRY

This file documents the SCCP Corrigendum to the X/Open Transport Interface.

This is Edition 0.9a, last updated 2008-12-06, for OpenSS7 SS7 Stack version
0.9a release 8.20081103 published by OpenSS7 Corporation
(http://www.openss7.com/).

Copyright (C) 2001-2008  OpenSS7 Corporation (http://www.openss7.com/)
Copyright (C) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

Permission to use, copy, modify, and distribute this documentation for any
purpose and without fee is hereby granted, provided that the above copyright
notice appears in all copies and that both that copyright notice and this
permission notice appear in supporting documentation, and that the name UNIX
International not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior permission. UNIX
International makes no representations about the suitability of this
documentation for any purpose. It is provided "as is" without express or
implied warranty.

Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided the entire resulting
derived work is distributed under the terms of a permission notice identical to
this one.

Permission is granted to copy and distribute translations of this manual into
another language, under the above conditions for modified versions.


File: xti_sccp.info,  Node: Top,  Next: Preface,  Up: (dir)

 X/Open Transport Interface--Corrigendum for SCCP Conformance
*************************************************************

* Menu:

* Preface::
* Introduction::
* Services::
* States and Events::
* Functions::
* Options::
* Header File::
* Protocol Terminology::
* License::
* Glossary::
* Acronyms::
* References::
* Index::


File: xti_sccp.info,  Node: Preface,  Next: Introduction,  Prev: Top,  Up: Top

 Preface
********

 Abstract
=========

This document is a Corrigendum for SCCP Conformance to the X/Open Transport
Interface containing technical details concerning the implementation of the
Signalling Connection Control Part (SCCP) using the X/Open Transport Interface
(XTI).  It contains recommendations on software architecture as well as
platform and system applicability of XTI-SCCP.

The SCCP networking service is an accepted standard that is in widespread use
through the world, both as a public tariffed service provided by many national
networks, and in private switches as a component in corporate networks.  Its
pervasive presence in the marketplace, and the consequential huge industry-wide
investment in SCCP applications, provides a good business case for supporting
SCCP networking through any complementary X/Open APIs.  Such is the case with
the X/Open XTI API.  This XTI-SCCP API defines an SCCP service interface that
is independent of any SCCP provider.  This is acheived by using the existing
XTI functions.

 Purpose
========

The purpose of this document is to provide technical documentation of the SCCP
X/Open Transport Interface (XTI-SCCP).  This document is intended to be
included with the `OpenSS7 SS7 Stack' software package released by `OpenSS7
Corporation'.  It is intended to assist software developers, maintainers and
users of the XTI-SCCP with understanding the software architecture and
technical interfaces that are made available in the software package.

 Intent
=======

It is the intent of this document that it act as the primary source of
information concerning the XTI-SCCP.  This document is intended to provide
information for writers of OpenSS7 XTI-SCCP applications as well as writers of
OpenSS7 XTI-SCCP Users.

 Audience
=========

The audience for this document is software developers, maintainers and users
and integrators of the XTI-SCCP.  The target audience is developers and users
of the OpenSS7 SS7 stack.

This API is aimed at SCCP users who wish to ensure the portability and
interoperability of their SCCP applications by making them independent of the
SCCP proider.  X/Open's XTI API provides an established interface to achieve
this independence.  Implementors who already know XTI will additionally benefit
from their familiarity with the XTI programming environment.

 Revision History
=================

Although the author has attempted to ensure that the information in this
document is complete and correct, neither the Author nor OpenSS7 Corporation
will take any responsibility in it.

Take care that you are working with a current version of this documentation:
you will not be notified of updates.  To ensure that you are working with a
current version, check the OpenSS7 Project (http://www.openss7.org/) website
for a current version.

A current version of this specification is normall distributed with the
`{No value for `PACAKGE_TITLE'}' package, `strss7-0.9a.8.20081103'.(1)

Only the texinfo or roff source is controlled.  A printed (or postscript)
version of this document is an *UNCONTROLLED VERSION*.

 Version Control
----------------

     $Log: xti_sccp.texi,v $
     Revision 0.9.2.2  2008-11-26 12:01:34  brian
     - updated to FDL 1.3

     Revision 0.9.2.1  2008-11-17 14:04:34  brian
     - added documentation and conversion modules

 ISO 9000 Compliance
--------------------

Only the TeX, texinfo, or roff source for this manual is controlled.  An opaque
(printed, postscript or portable document format) version of this manual is an
*UNCONTROLLED VERSION*.

 Organization
=============

* Menu:

  Introduction::		This introduction
* Services::			SCCP Services
* States and Events::		XTI-SCCP States and Events
* Functions::			XTI-SCCP Functions
* Options::			XTI-SCCP Options
* Header File::			XTI-SCCP Header File
* Protocol Terminology::	SCCP Protocol Terminology
* License::			License
* Glossary::			Glossary
* Acronyms::			Acronyms
* References::			References
* Index::			Index

 Typographical Conventions
==========================

This manual uses `texinfo' typographic conventions.

---------- Footnotes ----------

(1) `http://www.openss7.org/repos/tarballs/strss7-0.9a.8.20081103.tar.bz2'


File: xti_sccp.info,  Node: Introduction,  Next: Services,  Prev: Preface,  Up: Top

1 Introduction
**************

* Menu:

* Scope::
* Relationship to XTI::
* Modes::
* Terminology::
* Conformance::
* Future Directions::


File: xti_sccp.info,  Node: Scope,  Next: Relationship to XTI,  Up: Introduction

1.1 Scope of the Specification
==============================

The purpose of the XTI-SCCP API is to provide the Signalling System No. 7 (SS7)
Signalling Connection Control Part (SCCP) Connectionless and
Connection-Oriented Network Service under the X/Open Transport Interface.

Provided throughout the world, SS7 is an accepted standard, provided by many
national networks and the international network for the switching of telephone
call and service feature operation in the global telephone network.  SS7 is
also the mechanism whereby next generation networking technologies interface
with the incumbent fixed and mobile telephone networks.

Signalling Connection Control Part (SCCP) is the networking component use to
transport Transaction Capabilities Application Part (TCAP), Mobile Application
Part (MAP), Base Station System Application Part (BSSAP) and Radio Access
Network Application Part (RANAP) protocols through an SS7 network.

SCCP is ideally suited for users requiring access on a global scale to mobile
network services, or even on a national scale.  The protocol provides varying
levels of reliabiltiy and both a connectionless and connection-oriented mode in
a number of protocol classes.  Protocol class 0 is especially suited to simple
query-reponse transactions and provdes transport to Transaction Capabilities
Application Part (TCAP).  Protocol class 1 extends the connectionless service
provideed by protocol class 0 by providing a high level of assurance that
messages are delivered in sequence.  This provides support for more strict
operational classes of Transaction Capabilities Application Part (TCAP).  For
mobile network protocols requiring a connection-oriented network service, SCCP
provides protocol classes 2 and 3 that are connection-oriented protocols
similar to X.25.  Protocol class 2 provides for simple connection-oriented
service, whereas protocol class 3 provides more sophisticated
connection-oriented service that supports flow control and expedited data
transfer.

Applications interested in using SCCP simply for use by TCAP protocols will
likely not be interested in directly interfacing to the SCCP provider, but
would rather interface with a TCAP provider using the XTI-mOSI interface, or
the APLI Library.

Applications interested in using SCCP directly will typically be application
protocols that use the connection-oriented modes of SCCP utilizing the
connection-oriented protocol classes 2 and 3.

Examples of applications that may be interested in the extension of XTI for
SCCP include:

   * RANAP -- "Radio Access Network Application Part"

   * BSSAP -- "Base Station System Application Part"

The functions offer full access to all SCCP protocol services (for example,
protocol classes 0, 1, 2 and 3) for applications such as BSSAP or RANAP or
other services with direct SCCP access.

The basic SCCP services (connection establishment and release, data transfer
and reset mechanism) are provided either by the existing XTI functions or by a
compatible extension of these functions.  (1)

This XTI-SCCP API provides for portablility and interoperability of SCCP
applications, so encouraging the development of SCCP applications in open
systems.  It defines an SCCP service interface that is independent of any
underlying SCCP provider.  Programmers with prior knowledge of XTI benefit
further from familiarity with the XTI programming environment.

---------- Footnotes ----------

(1) In particular, the reset mechanism is consistent with the X/Open X.25
extensions to XTI described in XX25 (*note XX25: XX25.).


File: xti_sccp.info,  Node: Relationship to XTI,  Next: Modes,  Prev: Scope,  Up: Introduction

1.2 Relationship to the XTI Specification
=========================================

XTI-SCCP provides access to SCCP providers through the XTI interface.

This document details the XTI-SCCP-specific options and SCCP-specific
behaviours of the XTI interface when used to access an SCCP provider.  The
XTI-SCCP specification has been designed in such a wasy as to allow existing
generic XTI applications to run unchanged over SCCP.

This specification must be used in conjunction with the XTI specification.


File: xti_sccp.info,  Node: Modes,  Next: Terminology,  Prev: Relationship to XTI,  Up: Introduction

1.3 Modes of the SCCP Service
=============================

The SCCP service interface supports two classes of connectionless service with
two classes of connection-oriented service with two modes:

   * the switched-connection mode

   * the permanent-connection mode.

The switched-connection mode enables data to be trasnferred over an established
connection (called a Switched Virtual Circuit (SVC)) in a flow-controlled,
sequence manner.  This circuit-oriented mode is attractive to applications that
require relatively long-lived, datastream-oriented interactions.

The permanent-connection mode has the same features as the switch-connection
mode for the transfer of data.  This service requires an pre-existing
association (called a Permanent Virtual Circuit (PVC)) between the peer users
involved, which determines the characteristics of the data to be transmitted.
No dynamic negotiation of options is supported by this mode.

A single SCCP end point does not support different modes of connections
simultaneously.

The use of the interface--that is, the functions called and the order in which
they are called--is identical for SVCs or for PVCs.


File: xti_sccp.info,  Node: Terminology,  Next: Conformance,  Prev: Modes,  Up: Introduction

1.4 Terminology
===============

 Definition of Terms
--------------------

The terminology used in this specification is that of the ITU-T standards that
define the SCCP service to which XTI-SCCP provides access.  For convenience,
the abbreviations have been defined in the Glossary (*note Glossary::) for this
specification.

Also, terms particular to the ITU-T SCCP protocol are described in *note
Acronyms::.

 Use of Naming Prefixes
-----------------------

To preserve uniqueness of the additions to XTI to support the SCCP service, the
constants and the flags defined by this specification have names that have the
format `T_SCCP_'XXX.

The new definitions are presented in the XTI-SCCP header file summary, see
*note Header File::.


File: xti_sccp.info,  Node: Conformance,  Next: Future Directions,  Prev: Terminology,  Up: Introduction

1.5 Conformance Requirements
============================

The XTI-SCCP conformance has two facets:

   * the XTI-SCCP API

   * the underlying SCCP Service Provider.

* Menu:

* API Implementation::
* Underlying SCCP Service Provider::


File: xti_sccp.info,  Node: API Implementation,  Next: Underlying SCCP Service Provider,  Up: Conformance

1.5.1 API Implementation
------------------------

An XTI-SCCP conformant implementation provides the functions defined in *note
Functions::.

The following points should be noted:

   * When the XTI-SCCP user requests a feature that is supported by the
     XTI-SCCP API but not supported by the underlying SCCP Service provider,
     the XTI-SCCP API returns a [TNOTSUPPORT] error.

   * An implementation of the XTI-SCCP API must only return the error codes
     defined by this specification and the XTI specification.


File: xti_sccp.info,  Node: Underlying SCCP Service Provider,  Prev: API Implementation,  Up: Conformance

1.5.2 Underlying SCCP Service Provider
--------------------------------------

An implementation of the underlying SCCP Service Provider that complies with
this XTI-SCCP specification will also comply with the requirements specified in
ITU-T Recommendation Q.711, Q.712, Q.713 and Q.714; ANSI T1.112; ETSI EN 300
009-1; or, JT-Q.711 through JT-Q.714.  The version supported by the provider is
indicated in an XTI-SCCP option (named `T_SCCP_VERSION'), that is defined in
*note Options::.


File: xti_sccp.info,  Node: Future Directions,  Prev: Conformance,  Up: Introduction

1.6 Future Directions
=====================

 Appendix for Security
----------------------

XTI-SCCP-specific interworking security issues will be addressed in the XTI
security appendix.


File: xti_sccp.info,  Node: Services,  Next: States and Events,  Prev: Introduction,  Up: Top

2 Services
**********

* Menu:

* Overview of the Connection-less Service::
* Overview of the Connection-Oriented Service::
* Mapping of SCCP Primitives::


File: xti_sccp.info,  Node: Overview of the Connection-less Service,  Next: Overview of the Connection-Oriented Service,  Up: Services

2.1 Overview of the Connection-less Service
===========================================

* Menu:

* CLNS Initialization/De-initialization::
* CLNS Data Transfer::


File: xti_sccp.info,  Node: CLNS Initialization/De-initialization,  Next: CLNS Data Transfer,  Up: Overview of the Connection-less Service

2.1.1 CLNS Initialization/De-initialization
-------------------------------------------

There are no special considerations involved in the local management of an SCCP
endpoint for connection-less service.


File: xti_sccp.info,  Node: CLNS Data Transfer,  Prev: CLNS Initialization/De-initialization,  Up: Overview of the Connection-less Service

2.1.2 CLNS Data Transfer
------------------------

Once an SCCP endpoint has been bound to a connection-less address, data may be
transferrred to and from the endpoint in full duplex mode.

Three existing XTI functions support data transfer in connectionless service:

   * `t_sndudata(3)' (*note (*manpages*)t_sndudata(3)::)

   * `t_rcvudata(3)' (*note (*manpages*)t_rcvudata(3)::)

   * `t_rcvuderr(3)' (*note (*manpages*)t_rcvuderr(3)::)

These two function enable SCCP users to send or receive between SCCP endpoints:

   * unit data

   * unit data errors

* Menu:

* Receiving Unit Data::
* Sending Unit Data::
* Receiving Unit Data Errors::


File: xti_sccp.info,  Node: Receiving Unit Data,  Next: Sending Unit Data,  Up: CLNS Data Transfer

2.1.2.1 Receiving Unit Data
...........................

SCCP users are able to receive:

   * unit data

   * unit data errors

Each element of this list genreates an event that unblock a synchronous call.


File: xti_sccp.info,  Node: Sending Unit Data,  Next: Receiving Unit Data Errors,  Prev: Receiving Unit Data,  Up: CLNS Data Transfer

2.1.2.2 Sending Unit Data
.........................

SCCP users are able to send:

   * unit data


File: xti_sccp.info,  Node: Receiving Unit Data Errors,  Prev: Sending Unit Data,  Up: CLNS Data Transfer

2.1.2.3 Receiving Unit Data Errors
..................................


File: xti_sccp.info,  Node: Overview of the Connection-Oriented Service,  Next: Mapping of SCCP Primitives,  Prev: Overview of the Connection-less Service,  Up: Services

2.2 Overview of the Connection-Oriented Service
===============================================

The connection-oriented service for SCCP consists of five phases of
communication.  Like the transport service, it includes:

   * Initialization/De-initialization

   * Connection Establishment

   * Data Transfer

   * Connection Release

Also, unlike the transport service, it includes

   * Reset

*Notes:*
       1. The underlying SCCP provider manages NSDUs (Network Service Data
          Units) to carry data packets, whereas a transport provider deals with
          TSDUs (Transport Service Data Units).  In the following sections, we
          consider NSDU when the word TSDU is used.

       2. Bold font is used in text for symbols that are XTI-SCCP API-specific.

* Menu:

* CONS Initialization/De-initialization::
* CONS Connection Establishment::
* CONS Data Transfer::
* CONS Connection Release::


File: xti_sccp.info,  Node: CONS Initialization/De-initialization,  Next: CONS Connection Establishment,  Up: Overview of the Connection-Oriented Service

2.2.1 CONS Initialization/De-initialization
-------------------------------------------

There are no special considerations involved in the local management of an SCCP
endpoint for connection-oriented service.

When the network layer is restarted, or reset, all open user XTI-SCCP
connections (including PVCs) are given a disconnect indication.


File: xti_sccp.info,  Node: CONS Connection Establishment,  Next: CONS Data Transfer,  Prev: CONS Initialization/De-initialization,  Up: Overview of the Connection-Oriented Service

2.2.2 CONS Connection Establishment
-----------------------------------

For an SVC, the connection establishment functions map onto the SCCP connection
setup procedures, so that `t_connect(3)' (*note (*manpages*)t_connect(3)::) and
`t_accept(3)' (*note (*manpages*)t_accept(3)::) cause connection request and
connection accepted packets to be generated, and incoming connection and
connection confirmed packets cause `T_LISTEN' and `T_CONNECT' events to be
generated.

There is no equivalent protocol exchange on PVCs.  Functions `t_connect(3)'
(*note (*manpages*)t_connect(3)::) causes a `T_CONNECT' event to be generated
immediately, if the PVC is operable, and a `T_DISCONNECT' event to be generated
immediately if it is inoperable.  When listening, a data or interrupt packet
arriving from a remote SCCP on an idle PVC causes the packet to be queue and a
`T_LISTEN' event to be generated.  The user can invoke `t_accept(3)' (*note
(*manpages*)t_accept(3)::) as usual, after which a `T_DATA' or `T_EXDATA' event
is generated for the queued packet.


File: xti_sccp.info,  Node: CONS Data Transfer,  Next: CONS Connection Release,  Prev: CONS Connection Establishment,  Up: Overview of the Connection-Oriented Service

2.2.3 CONS Data Transfer
------------------------

Once an SCCP connection has been established between two users, data may be
transferred back and forth over the connection in full duplex mode.

Two existing XTI functions support data transfer in connection-oriented service:

   * `t_snd(3)' (*note (*manpages*)t_snd(3)::)

   * `t_rcv(3)' (*note (*manpages*)t_rcv(3)::)

These two functions enable SCCP users to send or receive over an SCCP
connection:

   * normal data

   * expedited data

   * connection resets

* Menu:

* Receiving Data::
* Sending Data::
* Connection Resets::


File: xti_sccp.info,  Node: Receiving Data,  Next: Sending Data,  Up: CONS Data Transfer

2.2.3.1 Receiving Data
......................

SCCP users are able to receive:

   * normal data

   * expedited data (if the `T_EXPEDITED' flag is set on return from the call)

   * a reset indication (if the `T_SCCP_RST' flag is set)

Each element of this list generates an event that unblocks a synchronous call.

If a reset indication or an explicit acknowledgement arrives during receipt of
a data TSDU and some data has already been trasnferred to the users buffer,
then `t_rcv(3)' (*note (*manpages*)t_rcv(3)::) returns, indicating the number
of bytes of data in the users buffer and with `T_MORE' set in flags.  The reset
indication or explicit acknowledgement is returned by the next `t_rcv(3)'
(*note (*manpages*)t_rcv(3)::) call.

To allow unmodified programs to run over XTI-SCCP, reset indicattions are only
given to the application if the appropriate option has been negotiated on.  By
default, receipt of a reset causes the connection to be released
(`T_SCCP_RST_OPT' option defaults to `T_NO').


File: xti_sccp.info,  Node: Sending Data,  Next: Connection Resets,  Prev: Receiving Data,  Up: CONS Data Transfer

2.2.3.2 Sending Data
....................

SCCP users are able to send over an SCCP connection:

   * normal data

   * expedited data (by setting the `T_EXPEDITED' flag)

   * a reset request or a confirmation (by setting the `T_SCCP_RST' flag).


File: xti_sccp.info,  Node: Connection Resets,  Prev: Sending Data,  Up: CONS Data Transfer

2.2.3.3 Connection Resets
.........................

A reset may be invoked from the data transfer phase.  During this phase, either
the user or the network may reinitialize a virtual circuit at any time.

The reset is supported by using an additional flag `T_SCCP_RST' in the functions
`t_snd(3)' (*note (*manpages*)t_snd(3)::) and `t_rcv(3)' (*note
(*manpages*)t_rcv(3)::).

  1. Sending a reset

     A rest request is sent by setting the `T_SCCP_RST' flag in a `t_snd(3)'
     (*note (*manpages*)t_snd(3)::) call with the cause and the diagnostic of
     the reset in the two first octets of the BUF argument.  The cause is in
     the first octet and the diagnostic in the second octet.

     The `t_snd(3)' (*note (*manpages*)t_snd(3)::) function returns
     immediately.  If further `t_snd(3)' (*note (*manpages*)t_snd(3)::) calls
     are accepted while the reset is being performed, the send data will remain
     pending until the SCCP provider receives the confirmation of reset.  This
     confirmation of reset is not returned to the user.  The normal flow
     control mechanism may result in a subsequent `t_snd(3)' (*note
     (*manpages*)t_snd(3)::) in synchonous mode blocking, or a `t_snd(3)'
     (*note (*manpages*)t_snd(3)::) call in asynchronous mode returning with
     [TFLOW] error.

  2. Receiving a reset

     When a reset indication is received and the option `T_SCCP_RST_OPT' is set
     to `T_YES', the SCCP provider notifies the user with a `T_DATA' event.
     The user consumes this event with the `t_rcv(3)' (*note
     (*manpages*)t_rcv(3)::) call.  On return from `t_rcv(3)' (*note
     (*manpages*)t_rcv(3)::), `T_SCCP_RST' is set in the FLAGS field, and the
     BUF argument contains the cause of the reset in the first octet and the
     diagnostic in the second octet.  If the users buffer is less than two
     bytes long then the diagnostic value is discarded, and if the length is
     zero, the cause is also discarded.  All further data presented on
     `t_snd(3)' (*note (*manpages*)t_snd(3)::) calls is discarded by the SCCP
     provider until the user akcnowledges the reset by issuing a `t_snd(3)'
     (*note (*manpages*)t_snd(3)::) call with the `T_SCCP_RST' flag set.  Any
     cause and diagnostic passed with the `t_snd(3)' (*note
     (*manpages*)t_snd(3)::) call is ignored by the SCCP provider.  If the SCCP
     user attempts to send data while a reset indication is pending, the
     `t_snd(3)' (*note (*manpages*)t_snd(3)::) call returns with a [TLOOK]
     error.  A subsequent `t_look(3)' (*note (*manpages*)t_look(3)::) call will
     return a `T_DATA' event.  The user must consume the event before sneding
     further data.


*Notes:*
       1. Data sent prior to a reset may be discarded.  Data sent after a reset
          will be delivered to the peer entity after it has been notified of
          the reset.  Data received after a reset will have been sent by the
          peer entity after the reset.  No explicit acknowledgements will be
          received after a reset for data sent prior to the reset.

       2. Reset collisions are managed by the SCCP provider and have no effect
          for the user.


File: xti_sccp.info,  Node: CONS Connection Release,  Prev: CONS Data Transfer,  Up: Overview of the Connection-Oriented Service

2.2.4 CONS Connection Release
-----------------------------

The SCCP switched-connection mode only supports the abortive release.

The functions that support connection release in all cases are already defined:

   * `t_snddis(3)' (*note (*manpages*)t_snddis(3)::), to send a request of a
     connection release

   * `t_rcvdis(3)' (*note (*manpages*)t_rcvdis(3)::), to receive an indication
     of a connection release.

Outstanding send and received data may be discarded.

Also, the user can indicate the reason of the connection release (the cause and
the diagnostic) by setting the `T_SCCP_DISCON_REASON' option by calling
`t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) prior to calling
`t_snddis(3)' (*note (*manpages*)t_snddis(3)::).

Optionally, after receiving an indication of a connection release, the address
of the user that released the connection can be retrieved in the
`T_SCCP_DISCON_ADD' option, by calling the function `t_optmgmt(3)' (*note
(*manpages*)t_optmgmt(3)::).  In the same way, the SCCP options associated with
the connection release can be retrieved in specific XTI options defined to
support the SCCP options (*note Options::).  The information may be overwritten
if an incoming connection is queued on the endpoint.

When `t_snddis(3)' (*note (*manpages*)t_snddis(3)::) is invoked on a PVC, the
circuit is reset with the cause and diagnostic from `T_SCCP_DISCON_REASON',
unless `T_SCCP_DISCON_REASON' is set to `T_UNSPEC', in which case the PVC is
not reset.  The default value of `T_SCCP_DISCON_REASON' for a PVC gives a cause
of `0x80' and a diagnostic of `0xF1'.  These values may be changed by using
`t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::).

*Notes:*
       1. The `T_SCCP_DISCON_REASON' option is not permitted to take the value
          `T_UNSPEC' on an endpoint representing an SVC.

Receipt of a reset indication with certain cause and diagnostic values
generates a disconnect indication.  These include the reset causes `0x01' (out
of order), `0x11' (incompatible destination) and `0x1d' (network out of order),
their private network equivalents (`0x81', `0x91' and `0x9D') and the
cause/diagnostic pair `0x80'/`0xF1' that are generated by `t_snddis(3)' (*note
(*manpages*)t_snddis(3)::).

For further details of the function referred to in this chapter, see their
descriptions in *note Functions::.


File: xti_sccp.info,  Node: Mapping of SCCP Primitives,  Prev: Overview of the Connection-Oriented Service,  Up: Services

2.3 Mapping of SCCP Primitives
==============================

This section describes the mapping of the SCCP primitives described in ITU-T
Recommendation Q.711 against the XTI Functions and Events.


File: xti_sccp.info,  Node: Connection-Oriented Primitives

2.3.1 Connection-Oriented Primitives
------------------------------------

Note that the "N-DATA-ACKNOWLEDGE" primitives of ITU-T Recommendation X.213 are
not present below (because SCCP does not support receipt confirmation,
otherwise known as D-bit operation under X.25).

* Menu:

* N-CONNECT::
* N-DATA::
* N-EXPEDITED-DATA::
* N-RESET::
* N-INFORM::
* N-DISCONNECT::


File: xti_sccp.info,  Node: N-CONNECT,  Next: N-DATA,  Up: Connection-Oriented Primitives

2.3.1.1 N-CONNECT
.................

*note Table 2-1:: illustrates the parameters associated with the "N-CONNECT"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


+-------------------------------------------------------------------------------------------+
|                                        N-CONNECT                                          |
+--------------------------+-------------+----------------+----------------+----------------+
|XTI Function              | t_connect() |   t_listen()   |   t_accept()   | t_rcvconnect() |
|XTI Event                 |     --      |    T_LISTEN    |       --       |   T_CONNECT    |
+--------------------------+-------------+----------------+----------------+----------------+
|        Parameter         |   Request   |   Indication   |    Response    |  Confirmation  |
+--------------------------+-------------+----------------+----------------+----------------+
|Called address            | call->addr  |       fd       |       --       |       --       |
|Calling address           |     fd      |   call->addr   |       --       |       --       |
|Responding address        |     --      |       --       |     resfd      |   call->addr   |
|QoS parameter set         |  call->opt  |   call->opt    |   call->opt    |   call->opt    |
|Expedited data selection  |  call->opt  |  [call->opt]   |   call->opt    |  [call->opt]   |
|Importance                |  call->opt  |  [call->opt]   |   call->opt    |  [call->opt]   |
|User data                 | call->udata |  call->udata   |  call->udata   |  call->udata   |
|Connection identification |     fd      | call->sequence | call->sequence |       fd       |
+--------------------------+-------------+----------------+----------------+----------------+

                       _Table 2-1.  N-CONNECT Primitive_

Note that *note Table 2-1:: illustrates a characteristic of XTI that is not
particular to SCCP: the "calling address" in the `t_connect(3)' (*note
(*manpages*)t_connect(3)::) call, the "called address" in the `t_listen(3)'
(*note (*manpages*)t_listen(3)::) call, the "responding address" in the
`t_accept(3)' (*note (*manpages*)t_accept(3)::) call: all are implied by the FD
or RESFD arguments to the corresponding call.  Also, the "connection
indication" on the `t_connect(3)' (*note (*manpages*)t_connect(3)::) and
`t_rcvconnect(3)' (*note (*manpages*)t_rcvconnect(3)::) calls is implied by the
FD argument.


File: xti_sccp.info,  Node: N-DATA,  Next: N-EXPEDITED-DATA,  Prev: N-CONNECT,  Up: Connection-Oriented Primitives

2.3.1.2 N-DATA
..............

*note Table 2-2:: illustrates the parameters associated with the "N-DATA"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


+--------------------------------------------------------------------------------+
|                                    N-DATA                                      |
+--------------------------+--------------------------+--------------------------+
|XTI Function              |   t_sndopt(), t_snd()    |   t_rcvopt(), t_rcv()    |
|XTI Event                 |            --            |          T_DATA          |
+--------------------------+--------------------------+--------------------------+
|        Parameter         |         Request          |        Indication        |
+--------------------------+--------------------------+--------------------------+
|Importance                |        data->opt         |       [data->opt]        |
|User data                 | data->udata, buf, nbytes | data->udata, buf, nbytes |
|Connection identification |            fd            |            fd            |
+--------------------------+--------------------------+--------------------------+

                        _Table 2-2.  N-DATA Primitive_

Note that in *note Table 2-2:: there is no argument to either the `t_snd(3)'
(*note (*manpages*)t_snd(3)::) or `t_rcv(3)' (*note (*manpages*)t_rcv(3)::)
calls that can convey the "importance" parameter of the "N-DATA request".
Therefore, the `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) XTI function
must be used to set the default "importance" parameter that will be used on
subsequent data transfers before `t_snd(3)' (*note (*manpages*)t_snd(3)::) is
called.  Because conveying the "importance" parameter on "N-DATA indication"
primitives is optional and serves little purpose, it is skipped in the XTI-SCCP
API.


File: xti_sccp.info,  Node: N-EXPEDITED-DATA,  Next: N-RESET,  Prev: N-DATA,  Up: Connection-Oriented Primitives

2.3.1.3 N-EXPEDITED-DATA
........................

*note Table 2-4:: illustrates the parameters associated with the
"N-EXPEDITED-DATA" primitives provided for the SCCP in ITU-T Recommendation
Q.711.


+--------------------------------------------------------------------------------+
|                               N-EXPEDITED-DATA                                 |
+--------------------------+--------------------------+--------------------------+
|XTI Function              |   t_sndopt(), t_snd()    |   t_rcvopt(), t_rcv()    |
|XTI Event                 |            --            |         T_EXDATA         |
+--------------------------+--------------------------+--------------------------+
|        Parameter         |         Request          |        Indication        |
+--------------------------+--------------------------+--------------------------+
|User data                 | data->udata, buf, nbytes | data->udata, buf, nbytes |
|Connection identification |            fd            |            fd            |
+--------------------------+--------------------------+--------------------------+

                   _Table 2-4.  N-EXPEDITED-DATA Primitive_


File: xti_sccp.info,  Node: N-RESET,  Next: N-INFORM,  Prev: N-EXPEDITED-DATA,  Up: Connection-Oriented Primitives

2.3.1.4 N-RESET
...............

*note Table 2-5:: illustrates the parameters associated with the "N-RESET"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


+----------------------------------------------------------------------------------------------+
|                                           N-RESET                                            |
+--------------------------+------------------------+------------------------+---------+-------+
|XTI Function              |  t_sndopt(), t_snd()   |  t_rcvopt(), t_rcv()   | t_snd() |  --   |
|XTI Event                 |           --           |         T_DATA         |   --    |  --   |
+--------------------------+------------------------+------------------------+---------+-------+
|        Parameter         |        Request         |       Indication       |  Resp.  | Conf. |
+--------------------------+------------------------+------------------------+---------+-------+
|Originator                |         T_USER         | data->opt, buf, nbytes |   --    |  --   |
|Reason                    | data->opt, buf, nbytes | data->opt, buf, nbytes |   --    |  --   |
|Connection identification |           fd           |           fd           |   fd    |  fd   |
+--------------------------+------------------------+------------------------+---------+-------+

                        _Table 2-5.  N-RESET Primitive_

  1. Performing resets under XTI relies on the special data flag `T_SCCP_RST'
     used instead of `T_MORE', `T_EXPEDITED' and `T_PUSH' that is used to
     indicate that a reset is required.

  2. To remain compatible with pure XTI applications, the "N-RESET indication"
     primitive is not indicated unless the XTI user indicates that it is
     willing to receive resets by setting `T_SCCP_RESET_OPT' to `T_YES' using
     `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::).

  3. There are several ways to specify the reset reason in the "N-RESET
     request":
        * Set `T_SCCP_RESET_REASON' using `t_optmgmt(3)' (*note
          (*manpages*)t_optmgmt(3)::) before the call to `t_snd(3)' (*note
          (*manpages*)t_snd(3)::).

        * Set `T_SCCP_RESET_REASON' in the DATA->OPT argument in the call to
          `t_sndopt(3)' (*note (*manpages*)t_sndopt(3)::).

        * Set the first octet of BUF to the value of the reset reason and
          NBYTES to one in the call to `t_snd(3)' (*note
          (*manpages*)t_snd(3)::).

        * Any combination of the above.

  4. There are several ways to obtain the reset originator and reset reason
     from the "N-RESET indication":
        * Read `T_SCCP_RESET_ORIGIN' and `T_SCCP_RESET_REASON' after the
          successful call to `t_rcv(3)' (*note (*manpages*)t_rcv(3)::) using
          `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::).

        * Read `T_SCCP_RESET_ORIGIN' and `T_SCCP_RESET_REASON' from the
          DATA->OPT buffer after the successful call to `t_rcvopt(3)' (*note
          (*manpages*)t_rcvopt(3)::).

        * Read the reset reason from the first octet of BUF and the reset
          originator from the second octet of BUF when NBYTES is set to two.

        * Any combination of the above.


File: xti_sccp.info,  Node: N-INFORM,  Next: N-DISCONNECT,  Prev: N-RESET,  Up: Connection-Oriented Primitives

2.3.1.5 N-INFORM
................

*note Table 2-6:: illustrates the parameters associated with the "N-INFORM"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


+-----------------------------------------------------------------------------------+
|                                     N-INFORM                                      |
+---------------------------------+------------------------+------------------------+
|XTI Function                     |  t_sndopt(), t_snd()   |  t_rcvopt(), t_rcv()   |
|XTI Event                        |           --           |         T_DATA         |
+---------------------------------+------------------------+------------------------+
|           Parameter             |        Request         |       Indication       |
+---------------------------------+------------------------+------------------------+
|Reason                           | data->opt, buf, nbytes | data->opt, buf, nbytes |
|Quality of service parameter set |       data->opt        |       data->opt        |
|Connection identification        |           fd           |           fd           |
+---------------------------------+------------------------+------------------------+

                       _Table 2-6.  N-INFORM Primitive_

  1. Performing informs under XTI relies on the special data flag `T_SCCP_INF'
     used instead of `T_MORE', `T_EXPEDITED' and `T_PUSH' that is used to
     indicate that an inform is required.

  2. To remain compatible with pure XTI applications, the "N-INFORM indication"
     primitive is not indicates unless the XTI user indicates that it is
     willing to receive informs by setting `T_SCCP_INFORM_OPT' to `T_YES' using
     `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::).

  3. There are several ways to specify the inform reason and QoS options in the
     "N-INFORM request":
        * Set `T_SCCP_INFORM_REASON' and QoS options using `t_optmgmt(3)'
          (*note (*manpages*)t_optmgmt(3)::) before the call to `t_snd(3)'
          (*note (*manpages*)t_snd(3)::).

        * Set `T_SCCP_INFORM_REASON' and QoS optoins in the DATA->OPT argument
          in a call to `t_sndopt(3)' (*note (*manpages*)t_sndopt(3)::).

        * Set the first octet of BUF to the value of the reset reason and
          NBYTES to one in the call to `t_snd(3)' (*note
          (*manpages*)t_snd(3)::).

        * Any combination of the above.  (Note that only the first two methods
          can transfer QoS options.)

  4. There are several ways to obtain the inform reason and QoS options from
     the "N-INFORM indication":
        * Read `T_SCCP_INFORM_REASON' and QoS parameter ranges after the
          successful call to `t_rcv(3)' (*note (*manpages*)t_rcv(3)::) using
          `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) and `t_getinfo(3)'
          (*note (*manpages*)t_getinfo(3)::).

        * Read `T_SCCP_INFORM_REASON' and QoS parameter ranges from the
          DATA->OPT buffer after a successful call to `t_rcvopt(3)' (*note
          (*manpages*)t_rcvopt(3)::).

        * Read the inform reason from the first octet of BUF when NBYTES is set
          to one.

        * Any combination of the above.  (Note that only the first two methods
          can transfer QoS options.)


File: xti_sccp.info,  Node: N-DISCONNECT,  Prev: N-INFORM,  Up: Connection-Oriented Primitives

2.3.1.6 N-DISCONNECT
....................

*note Table 2-7:: illustrates the parameters associated with the "N-DISCONNECT"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


        +---------------------------------------------------------------+
        |                         N-DISCONNECT                          |
        +--------------------------+----------------+-------------------+
        |XTI Function              |   t_snddis()   |    t_rcvdis()     |
        |XTI Event                 |       --       |   T_DISCONNECT    |
        +--------------------------+----------------+-------------------+
        |        Parameter         |    Request     |    Indication     |
        +--------------------------+----------------+-------------------+
        |Originator                |     T_USER     |    dis->reason    |
        |Responding address        |   call->addr   | T_SCCP_DISCON_ADD |
        |Reason                    |   call->opt    |    dis->reason    |
        |User data                 |  call->udata   |    dis->udata     |
        |Connection identification | call->sequence |   dis->sequence   |
        |Importance                |   call->opt    |        --         |
        +--------------------------+----------------+-------------------+

                     _Table 2-7.  N-DISCONNECT Primitive_


File: xti_sccp.info,  Node: Connection-Less Primitives

2.3.2 Connection-Less Primitives
--------------------------------

* Menu:

* N-UNIT-DATA::
* N-NOTICE::


File: xti_sccp.info,  Node: N-UNIT-DATA,  Next: N-NOTICE,  Up: Connection-Less Primitives

2.3.2.1 N-UNIT-DATA
...................

*note Table 2-8:: illustrates the parameters associated with the "N-UNIT-DATA"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


           +--------------------------------------------------------+
           |                      N-UNIT-DATA                       |
           +--------------------------+--------------+--------------+
           |XTI Function              | t_sndudata() | t_rcvudata() |
           |XTI Event                 |      --      |    T_DATA    |
           +--------------------------+--------------+--------------+
           |        Parameter         |   Request    |  Indication  |
           +--------------------------+--------------+--------------+
           |Called address            |  data->addr  |      fd      |
           |Calling address           |      fd      |  data->addr  |
           |Sequence control          |  data->opt   |  data->opt   |
           |Return option             |  data->opt   |  data->opt   |
           |User data                 | data->udata  | data->udata  |
           |Importance                |  data->opt   |  data->opt   |
           |Connection identification |      fd      |      fd      |
           +--------------------------+--------------+--------------+

                      _Table 2-8.  N-UNIT-DATA Primitive_


File: xti_sccp.info,  Node: N-NOTICE,  Prev: N-UNIT-DATA,  Up: Connection-Less Primitives

2.3.2.2 N-NOTICE
................

*note Table 2-9:: illustrates the parameters associated with the "N-NOTICE"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


                       +---------------------------------+
                       |            N-NOTICE             |
                       +------------------+--------------+
                       |XTI Function      | t_rcvuderr() |
                       |XTI Event         |   T_UDERR    |
                       +------------------+--------------+
                       |    Parameter     |  Indication  |
                       +------------------+--------------+
                       |Called address    | uderr->addr  |
                       |Calling address   |      fd      |
                       |Reason for return | uderr->error |
                       |User data         |  (see text)  |
                       |Importance        |  uderr->opt  |
                       +------------------+--------------+

                       _Table 2-9.  N-NOTICE Primitive_


File: xti_sccp.info,  Node: Management Primitives

2.3.3 Management Primitives
---------------------------

* Menu:

* N-STATE::
* N-PCSTATE::
* N-COORD::


File: xti_sccp.info,  Node: N-STATE,  Next: N-PCSTATE,  Up: Management Primitives

2.3.3.1 N-STATE
...............

*note Table 2-10:: illustrates the parameters associated with the "N-STATE"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


              +---------------------------------------------------+
              |                     N-STATE                       |
              +--------------------------+------------------------+
              |        Parameter         | Indication             |
              +--------------------------+------------------------+
              |Connection identification |                        |
              +--------------------------+------------------------+

                       _Table 2-10.  N-STATE Primitive_


File: xti_sccp.info,  Node: N-PCSTATE,  Next: N-COORD,  Prev: N-STATE,  Up: Management Primitives

2.3.3.2 N-PCSTATE
.................

*note Table 2-11:: illustrates the parameters associated with the "N-PCSTATE"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


              +---------------------------------------------------+
              |                    N-PCSTATE                      |
              +--------------------------+------------------------+
              |        Parameter         | Indication             |
              +--------------------------+------------------------+
              |Connection identification |                        |
              +--------------------------+------------------------+

                      _Table 2-11.  N-PCSTATE Primitive_


File: xti_sccp.info,  Node: N-COORD,  Prev: N-PCSTATE,  Up: Management Primitives

2.3.3.3 N-COORD
...............

*note Table 2-12:: illustrates the parameters associated with the "N-COORD"
primitives provided for the SCCP in ITU-T Recommendation Q.711.


  +---------------------------------------------------------------------------+
  |                                 N-COORD                                   |
  +--------------------------+---------+------------+----------+--------------+
  |        Parameter         | Request | Indication | Response | Confirmation |
  +--------------------------+---------+------------+----------+--------------+
  |Connection identification |         |            |          |              |
  +--------------------------+---------+------------+----------+--------------+

                       _Table 2-12.  N-COORD Primitive_


File: xti_sccp.info,  Node: States and Events,  Next: Functions,  Prev: Services,  Up: Top

3 States and Events
*******************

To avoid major changes ot the XTI state definitions and state tables, resets
are handled within the data transfer state `TS_DATA_XFER'.

The only difference is that a reset indication causes a `t_snd(3)' (*note
(*manpages*)t_snd(3)::) call to return with a [TLOOK] error.  The event is
reported as `T_DATA' event by a subsequent call to `t_look(3)' (*note
(*manpages*)t_look(3)::).


File: xti_sccp.info,  Node: Functions,  Next: Options,  Prev: States and Events,  Up: Top

4 Functions
***********

This chapter describes extensions to the existing XTI functions (as defined in
the XTI specification), required for XTI support of SCCP.

The relevant description for SCCP use of existing XTI functions are presented
below in alphabetical order.

To ensure clarity of presentation, the options that contain SCCP parameters are
specified separately in *note Options::.

* Menu:

* XTI Function Considerations::


File: xti_sccp.info,  Node: XTI Function Considerations,  Up: Functions

4.1 XTI Function Considerations
===============================

* Menu:

* t_accept(3)::
* t_bind(3)::
* t_connect(3)::
* t_getinfo(3)::
* t_look(3)::
* t_listen(3)::
* t_open(3)::
* t_optmgmt(3)::
* t_rcv(3)::
* t_rcvconnect(3)::
* t_rcvdis(3)::
* t_rcvudata(3)::
* t_rcvuderr(3)::
* t_snd(3)::
* t_snddis(3)::
* t_sndudata(3)::


File: xti_sccp.info,  Node: t_accept(3),  Next: t_bind(3),  Up: XTI Function Considerations

 t_accept(3)
------------

The `t_accept(3)' (*note (*manpages*)t_accept(3)::) XTI library call is used to
implement the ITU-T Recommendation Q.711 "N-CONNECT response" primitive.  The
parameters of the "N-CONNECT response" primitive are represented as follows:

   -- _Responding address:_ implied by the RESFD argument to the call.  That
     is, the address that is bound to the Stream represented by RESFD is used
     as the responding address parameter.  If the Stream associated with RESFD
     is not bound to an address, the address that is bound to FD is used
     instead.  The parameter "responding address" identifies the address of the
     SCCP service access point to which the signalling connection has been
     established.  Under certain circumstances (e.g. a general global title
     identifying replicated subsystems), the value of this parameter may be
     different from the "called address" in the corresponding "N-CONNECT
     request".

   -- _Quality of service parameter set:_ contained in the CALL->OPT argument
     to the call.  When quality of service parameters are not specified, the
     last values set with `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) are
     used.  When a parameter is not set with `t_optmgmt(3)' (*note
     (*manpages*)t_optmgmt(3)::), the default value is used.  The "quality of
     service parameter set" is used during call setup to negotiate the protocol
     class for the connection and, if applicable (i.e. the protocol class is
     SCCP protocol class 3), the flow control window size.  These parameters
     use the option names `T_SCCP_PCLASS' and `T_SCCP_WINDOWSIZE'.
     `T_SCCP_WINDOWSIZE' is only meaningful when `T_SCCP_PCLASS' has the value
     `T_SCCP_PCLASS_3'.

   -- _Expedited data selection:_ contained in the CALL->OPT argument to the
     call.  When not contained in the argument, the last value set with
     `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) is used.  If no value
     was set, the default setting (non-use of expedited data) is selected.  The
     option name `T_SCCP_EDN' is used for expedited data selection.  The
     parameter "expedited data selection" may be used to indicate during setup
     whether expedited data can be transferred via the connection.  A
     negotiation will be performed between SCCP users, local and remote.

   -- _Importance:_ contained in the CALL->OPT argument to the call.  If the
     "importance" parameter is not provided, then the last setting of the
     parameter with a call to `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::)
     is used in its stead.  If no value was set, the default value is used.  The
     option name `T_SCCP_IMPORTANCE' is used for importance selection.  The
     "importance" parameter is a user optional parameter in request and
     response primitives that results in the transmission of SCCP messages.
     Its use allows the SCCP user to assign and indicate to the SCCP a certain
     importance to the primitive.  During MTP and/or SCCP congestion, SCCP will
     take decisions to send out or reject the resulting message, based on this
     importance and on the severity of the congestion.

   -- _User data:_ contained in the CALL->UDATA argument to the call.  Passing
     user data with the connection is optional.  When the CALL->UDATA.BUF
     argument is `NULL', or the CALL->UDATA.LEN argument is zero, no user data
     is passed with the connection.

   -- _Connection identification:_ contained in the CALL->SEQUENCE argument to
     the call.


File: xti_sccp.info,  Node: t_bind(3),  Next: t_connect(3),  Prev: t_accept(3),  Up: XTI Function Considerations

 t_bind(3)
----------

The ADDRESS field of the `t_bind' structure contains the matching requirements
for routing incoming connections to the endpoint.  This may include (but is not
limited to) representation of one or more of the following:

   * a local SNPA identifier

   * a local SCCP address

   * a local NSAP

   * a called user data matching requirement

   * a PVC number

Where an incoming call can be routed to multiple endpoints on the basis of
their matching requirements, the actual endpoint selected will be
implementation dependent.

If the application likes to initiate a connection, it can either bind itself to
a `NULL' address (by setting REQ to `NULL' or REQ->ADDR.LEN to zero) or use any
of the matching requirements defined above.  If a `NULL' address is used, the
application is free to use both SVCs and PVCs and any signalling route.  If
matching requirements have been defined, connections may be restricted to SVCs,
a certain PVC, or a certain signalling route, depending ont he matching
criteria.

It is not possible to receive connection indications on a `NULL' address.

*Note_*
     An implementation may choose not to provide support for a wildcard
     mechanism for address information, for example to route incoming
     connection whose call user data does not start with a particular pattern.


File: xti_sccp.info,  Node: t_connect(3),  Next: t_getinfo(3),  Prev: t_bind(3),  Up: XTI Function Considerations

 t_connect(3)
-------------

The `t_connect(3)' (*note (*manpages*)t_connect(3)::) XTI library call is used
to implement the ITU-T Recommendation Q.711 "N-CONNECT request" primitive and,
in synchronous mode, the "N-CONNECT confirmation" primitive (*note
t_rcvconnect(3)::).  The parameters of the "N-CONNECT request" primitive are
represented as follows:

   -- _Called address:_ contained in the SNDCALL->ADDR argument to the call.

   -- _Calling address:_ implied by the FD argument to the call.  That is, the
     address that is bound to the Stream represented by FD is used as the
     calling address parameter.

   -- _Quality of service parameter set:_ contained in `T_SS7_SCCP' options in
     the SNDCALL->OPT argument to the call.  When quality of service parameters
     are not specified, the last values set with `t_optmgmt(3)' (*note
     (*manpages*)t_optmgmt(3)::) are used.  When a parameter is not set with
     `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::), the default value is
     used.  The "quality of service parameter set" is used during call setup to
     negotiate the protocol class for the connection and, if applicable (i.e.
     the protocol class is SCCP protocol class 3), the flow control window
     size.  These parameters use the option names `T_SCCP_PCLASS' and
     `T_SCCP_WINDOWSIZE'.  `T_SCCP_WINDOWSIZE' is only meaningful when
     `T_SCCP_PCLASS' has the value `T_SCCP_PCLASS_3'.

   -- _Expedited data selection:_ contained in a `T_SS7_SCCP' option in the
     SNDCALL->OPT argument to the call.  When not contained in the argument,
     the last value set with `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::)
     is used.  If no value was set, the default setting (non-use of expedited
     data) is selected.  The option name `T_SCCP_EDN' is used for expedited
     data selection.  The parameter "expedited data selection" may be used to
     indicate during setup whether expedited data can be transferred via the
     connection.  A negotiation will be performed between SCCP users, local and
     remote.

   -- _Importance:_ contained in a `T_SS7_SCCP' option in the SNDCALL->OPT
     argument to the call.  If the "importance" parameter is not provided, then
     the last setting of the parameter with a call to `t_optmgmt(3)' (*note
     (*manpages*)t_optmgmt(3)::) is used in its stead.  If no value was set,
     the default value is used.  The option name `T_SCCP_IMPORTANCE' is used
     for importance selection.  The "importance" parameter is a user optional
     parameter in request and response primitives that results in the
     transmission of SCCP messages.  Its use allows the SCCP user to assign and
     indicate to the SCCP a certain importance to the primitive.  During MTP
     and/or SCCP congestion, SCCP will take decisions to send out or reject the
     resulting message, based on this importance and on the severity of the
     congestion.

   -- _User data:_ contained in the SNDCALL->UDATA argument on call.  Passing
     user data with the connection is optional.  When the CALL->UDATA.BUF
     argument is `NULL', or the CALL->UDATA.LEN argument is zero, no user data
     is passed with the connection.

   -- _Connection identification:_ implied by the FD argument to the call.

The SNDCALL->ADDR is used to select either an SVC or a PVC.

For an SVC, the SNDCALL->ADDR structure contains a representation of the
addressing information necessary to reach the destination, it may contain (but
is not limited to) one or more of the following:

   * SNPA identifier

   * destination SCCP address

   * destination NSAP

When the connection has been established, the RCVCALL->ADDR structure
represents the address on wich the call has been accepted.

For a PVC, the SNDCALL->ADDDR structure represents the PVC to be used.  If it
is already in use, the error [TADDRBUSY] is returned.  On successful return:

   * In synchronous mode, the PVC will be in state `T_DATAXFER'.

   * In asynchronous mode, the PVC will be in state `T_OUTCON' and a
     `T_CONNECT' event will be outstanding.

When the connection has been released, the RCVCALL->ADDR structure represents
the actual PVC allocated.


File: xti_sccp.info,  Node: t_getinfo(3),  Next: t_look(3),  Prev: t_connect(3),  Up: XTI Function Considerations

 t_getinfo(3)
-------------

The information returned by `t_getinfo(3)' (*note (*manpages*)t_getinfo(3)::)
reflects the characteristics of the SCCP connection, or, if no connection is
established, the maximum characteristics an SCCP connection could take on using
the underlying SCCP provider.

The parameters of the `t_getinfo(3)' (*note (*manpages*)t_getinfo(3)::)
function, for the different versions of the SCCP protocol are presented in the
table below:


File: xti_sccp.info,  Node: t_look(3),  Next: t_listen(3),  Prev: t_getinfo(3),  Up: XTI Function Considerations

 t_look(3)
----------

No special considerations.


File: xti_sccp.info,  Node: t_listen(3),  Next: t_open(3),  Prev: t_look(3),  Up: XTI Function Considerations

 t_listen(3)
------------

The `t_listen(3)' (*note (*manpages*)t_listen(3)::) XTI library call is used to
implement the ITU-T Recommendation Q.711 "N-CONNECT indication" primitive.  The
parameters of the "N-CONNECT indication" primitive are represented as follows:

   -- _Called address:_ implied by the FD argument to the call.  That is, the
     address that is bound to the Stream represented by FD is used as the
     called address parameter.

   -- _Calling address:_ contained in the CALL->ADDR argument upon successful
     return from the call.

   -- _Quality of service parameter set:_ contained in the CALL->OPT argument
     upon successful return from the call.  The "quality of service parameter
     set" is used during call setup to negotiate the protocol class for the
     connection and, if applicable (i.e. the protocol class is SCCP protocol
     class 3), the flow control window size.  These parameters use the option
     names `T_SCCP_PCLASS' and `T_SCCP_WINDOWSIZE'.  `T_SCCP_WINDOWSIZE' is
     only meaningful when `T_SCCP_PCLASS' has the value `T_SCCP_PCLASS_3'.

   -- _Importance:_ contained in the CALL->OPT argument upon successful return
     from the call.  Whether this value is indicated is implementation
     dependent.

   -- _User data:_ contained in the CALL->UDATA argument upon successful return
     from the call.  Passing user data with the connection is optional.  When
     the CALL->UDATA.BUF argument is `NULL', or the CALL->UDATA.LEN argument is
     zero, no user data was passed with the connection.

   -- _Connection identification:_ contained in the CALL->SEQUENCE argument upon
     successful return from the call.


File: xti_sccp.info,  Node: t_open(3),  Next: t_optmgmt(3),  Prev: t_listen(3),  Up: XTI Function Considerations

 t_open(3)
----------

The function `t_open(3)' (*note (*manpages*)t_open(3)::) is called at the first
step in the initialization of an SCCP endpoint.  This function returns various
default characteristics associated with the different versions of SCCP that are
supported.  If, for example, an SCCP provider supports ANSI T1.112, the
characteristics returned are those of ANSI T1.112.  If the SCCP provider is
limited to ITU-T Q.711, the characteristics returned are those of ITU-T Q.711.

The parameters of the `t_open(3)' (*note (*manpages*)t_open(3)::) function, for
the different version of the SCCP protocol are presented in the table below:


File: xti_sccp.info,  Node: t_optmgmt(3),  Next: t_rcv(3),  Prev: t_open(3),  Up: XTI Function Considerations

 t_optmgmt(3)
-------------

The function `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) uses specific
options to support the SCCP service.  The options are described in *note
Options::.


File: xti_sccp.info,  Node: t_rcv(3),  Next: t_rcvconnect(3),  Prev: t_optmgmt(3),  Up: XTI Function Considerations

 t_rcv(3)
---------

The behavior of the function `t_rcv(3)' (*note (*manpages*)t_rcv(3)::) remains
unchanged.  The function can operate in syncrhonous and asyncrhonous modes.  It
follows the current flow control rules.

The default behavior is to acknowledge, in an automatic way, data sent with the
Delivery Confirmation bit and expedited data.

If expedited data arrives after part of a TSDU has been retrieved, receipt of
the remainder of the TSDU is suspended util the ETSDU has been processed.  Only
after the full ETSDU has been retrieved (the `T_MORE' flag not set), the
remainder of the TSDU is amde available to the user.

In addition to the `T_EXPEDITED' and `T_MORE' flags, the following flags can be
set in the argument FLAGS:

   * On return from the call, if `T_SCCP_RST' is set in FLAGS, this indicates
     that a reset indication occurred.

When `T_SCCP_RST' is returned, the argument BUF contains the cause and
diagnostic of the reset.  Each one is coded in one octet.  The cause is encoded
in the first octet, and the diagnostic in the second octet.  If the user's
buffer is less than two bytes long then the diagnostic value is discarded, and
if the length is zero, the cause is also discarded.


File: xti_sccp.info,  Node: t_rcvconnect(3),  Next: t_rcvdis(3),  Prev: t_rcv(3),  Up: XTI Function Considerations

 t_rcvconnect(3)
----------------

The `t_rcvconnect(3)' (*note (*manpages*)t_rcvconnect(3)::) XTI library call is
used to implement the ITU-T Recommendation Q.711 "N-CONNECT confirmation"
primitive.  The parameters of the "N-CONNECT confirmation" primitive are
represented as follows:

   - _Responding address:_ contained in the CALL->ADDR argument upon successful
     return from the call.  The parameter "responding address" identifies the
     address of the SCCP service access point to which the signalling
     connection has been established.  Under certain circumstances (e.g. a
     general global title identifying replicated subsystems), the value of this
     parameter may be different from the "called address" in the corresponding
     "N-CONNECT request".

   - _Quality of service parameter set:_ contained in the CALL->OPT argument
     upon successful return from the call.  The "quality of service parameter
     set" is used during call setup to negotiate the protocol class for the
     connection and, if applicable (i.e. the protocol class is SCCP protocol
     class 3), the flow control window size.  These parameters use the option
     names `T_SCCP_PCLASS' and `T_SCCP_WINDOWSIZE'.  `T_SCCP_WINDOWSIZE' is
     only meaningful when `T_SCCP_PCLASS' has the value `T_SCCP_PCLASS_3'.

   - _Importance:_ contained in the CALL->OPT argument upon successful return
     from the call.  Whether this value is indicated is implementation
     dependent.

   - _User data:_ contained in the CALL->UDATA argument upon successful return
     from the call.  Passing user data with the connection is optional.  When
     the CALL->UDATA.BUF argument is `NULL', or the CALL->UDATA.LEN argument is
     zero, no user data was passed with the connection.

   - _Connection identification:_ implied by the FD argument to the call.


File: xti_sccp.info,  Node: t_rcvdis(3),  Next: t_rcvudata(3),  Prev: t_rcvconnect(3),  Up: XTI Function Considerations

 t_rcvdis(3)
------------

The `t_rcvdis(3)' (*note (*manpages*)t_rcvdis(3)::) XTI library call is used to
implement the ITU-T Recommendation Q.711 "N-DISCONNECT indication" primitive.
The parameters of the "N-DISCONNECT indication" primitive are represented as
follows:

   -- _Responding address:_ contained in the `T_SCCP_DISCON_ADD' option
     retrievable with `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) after
     the call returns successfully.(1)

   -- _Originator_ and _Reason:_ contained in the DIS->REASON argument upon
     successful return from the call.  The DIS->REASON argument encodes both the
     "originator" and the "reason" parameters of the release or refusal.

     The value of the "originator" parameter can be ontained using the
     `T_SCCP_GET_ORIGIN' C-preprocessor macro.  The "originator" indicates the
     initiator of the connection release or the connection refusal and may
     assume the following values: `T_PROVIDER', the network service provider;
     `T_USER', the network service user; or `T_UNSPEC', undefined.  The
     originator is also contained in the `T_SCCP_DISCON_ORIGIN' option
     retrievable with `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) after
     the call returns successfully.

     The value of the "reason" parameter can be obtained using the
     `T_SCCP_GET_CAUSE' C-preprocessor macro.  When the "N-DISCONNECT
     indication" represents the release of an established connection or the
     withdrawal of a connection indication, this reason is an SCCP release
     cause.  When the "N-DISCONNECT indication" represents the refusal of an
     "N-CONNECT request", this reason is an SCCP refusal cause.  The cause is
     also contained in the `T_SCCP_DISCON_CAUSE' option retrievable with
     `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) after the call returns
     successfully.

   -- _Importance:_ not delivered.(2)

   -- _User data:_ contained in the DIS->UDATA argument upon successful return
     from the call.  Passing user data with disconnection is optional.  When
     the DIS->UDATA.BUF argument is `NULL', or the DIS->UDATA.LEN argument is
     zero, no user data was passed with the disconnection.

   -- _Connection identification:_ contained in the DIS->SEQUENCE argument upon
     successful return from the call.  When zero, it indicates that the
     disconnection pertains to the connection associated with FD.

This function is used to receive an indication of a connection release.

The field DISCON->REASON contains the SCCP originator and cause of the
connection release.  The originator and the diagnostic are both encoded and can
be retrieved using respectively the `T_SCCP_GET_ORIGIN' C-preprocessor macro
and the `T_SCCP_GET_CAUSE' C-proprocessor macro.

This function allows operations in accordance with XTI, but cannot be used to
retrieve the address of the user that released the connection.  For this
purpose, the user has to call the function `t_optmgmt(3)' (*note
(*manpages*)t_optmgmt(3)::) and retrieve the `T_SCCP_DISCON_ADD' option.

For further details about the management of options, see *note Options::.

---------- Footnotes ----------

(1) XTI has no mechanism for passing the responding address with the existing
`t_rcvdis(3)' (*note (*manpages*)t_rcvdis(3)::) arguments, and so this option
mechainsm is used.

(2) ITU-T Recommendation Q.711 specifies that delivering the "importance"
parameter on "N-DISCONNECT indication" primitives is an implemetnation option,
and so this parameter is simply not delivered.


File: xti_sccp.info,  Node: t_rcvudata(3),  Next: t_rcvuderr(3),  Prev: t_rcvdis(3),  Up: XTI Function Considerations

 t_rcvudata(3)
--------------

The behavior of the function `t_rcvudata(3)' (*note
(*manpages*)t_rcvudata(3)::) remains unchanged.  The function can operate in
synchronous and asynchronous modes.  It follows the current flow control rules.


File: xti_sccp.info,  Node: t_rcvuderr(3),  Next: t_snd(3),  Prev: t_rcvudata(3),  Up: XTI Function Considerations

 t_rcvuderr(3)
--------------

The behavior of the function `t_rcvuderr(3)' (*note
(*manpages*)t_rcvuderr(3)::) remains unchanged.  This function is used to
receive a unit data service message indicating the failure to deliver a
previously sent message invoked with the `t_sndudata(3)' (*note
(*manpages*)t_sndudata(3)::) library call.


File: xti_sccp.info,  Node: t_snd(3),  Next: t_snddis(3),  Prev: t_rcvuderr(3),  Up: XTI Function Considerations

 t_snd(3)
---------

The behavior of the function `t_snd(3)' (*note (*manpages*)t_snd(3)::) remains
unchanged.  The function can operate in synchronous and asynchronous modes.

In addition to the `T_EXPEDITED' and `T_MORE' flags, the following flags can be
set in the argument FLAGS:

   * `T_SCCP_RST' If set in FLAGS, this indicates to the underlying provider
     that a request or a confirmation of reset is required.

     The `t_snd(3)' (*note (*manpages*)t_snd(3)::) function returns
     immediately.  If further `t_snd(3)' (*note (*manpages*)t_snd(3)::) calls
     are accepted while the reset request is being performed the send data will
     remain pending until the SCCP provider receives the confirmation of reset.
     This confirmation of reset is not returned to the user.  The normal flow
     control mechanism may result in subsequent `t_snd(3)' (*note
     (*manpages*)t_snd(3)::) in synchronous mode blocking, or a `t_snd(3)'
     (*note (*manpages*)t_snd(3)::) call in asynchronous mode returning the
     [TFLOW] error.

     The cause and diagnostic of a reset request are encoded in the two first
     octets of the BUF argument.  The cause is in the first octet and the
     diagnostic in the second octet.  If the BUF argument is `NULL' or the
     NBYTES is `0', then a cause of `0' and a diagnostic of `0xFA' (that means
     user synchronization) are used.  If NBYTES is `1', the diagnostic is set
     to `0'.

     Any cause and diagnostic passed in the `t_snd(3)' (*note
     (*manpages*)t_snd(3)::) call are ignored by the SCCP provider when senting
     a reset confirmation.

     Data received after a successful `t_snd(3)' (*note (*manpages*)t_snd(3)::)
     call requesting a reset is data transmitted by the peer after completion
     of the reset.


File: xti_sccp.info,  Node: t_snddis(3),  Next: t_sndudata(3),  Prev: t_snd(3),  Up: XTI Function Considerations

 t_snddis(3)
------------

The `t_snddis(3)' (*note (*manpages*)t_snddis(3)::) XTI library call is used to
implement the ITU-T Recommendation Q.711 "N-DISCONNECT request" primitive.  The
parameters of the "N-DISCONNECT request" primitive are as represented follows:

   -- _Responding address:_ contained in the CALL->ADDR argument to the call.
     For XTI, this address is always implied by the CALL->SEQUENCE argument to
     the call and the CALL->ADDR argument is ignored.  (It is the SCCP
     provider's responsibility to determine and save the responding address
     associated with a given connection indication for use by this function.)

     The "responding address" is only present in the "N-DISCONNECT" primitive
     only in the case where the primitive is used to indicate rejection of a
     signalling connection establishment attempt by an SCCP user function (that
     is, when CALL->SEQUENCE is non-zero).  The parameter conveys the addres of
     the service access point from which the "N-DISCONNECT requeset" was issued
     and under certain circumstances (e.g. a general global title identifying
     replicated subsystems), the value of this parameter may be different from
     the "called address" in the corresponding "N-CONNECT request" primitive.

   -- _Originator:_ always `T_USER' and so not passed as an argument on call.

   -- _Reason:_ contained in the CALL->OPT argument to the call.  If the
     "reason" parameter is not provided, then the last setting of the parameter
     with a call to `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::) is used
     in its stead.  If no value was set, the default value is used.  The option
     name `T_SCCP_DISCON_CAUSE' is used for cause selection.

   -- _Importance:_ contained in the CALL->OPT argument to the call.  If the
     "importance" parameter is not provided, then the last setting of the
     parameter with a call to `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::)
     is used in its stead.  If no value was set, the default value is used.  The
     option name `T_SCCP_IMPORTANCE' is used for importance selection.  The
     "importance" parameter is a user optional parameter in request and
     response primitives that result in the transmission of SCCP messages.  Its
     use allows the SCCP user to assign and indicate to SCCP a certain
     importance to the primitive.  During MTP and/or SCCP congestion, SCCP will
     take decisions to send out or reject the resulting message, based on this
     importance and on the severity of the congestion.

   -- _User data:_ contained in the CALL->UDATA argument upon call.  Passing
     user data with disconnection is optional.  When the CALL->UDATA.BUF
     argument is `NULL', or the CALL->UDATA.LEN argument is zero, no user data
     is passed with the disconnection.

   -- _Connection identification:_ contained in the CALL->SEQUENCE argument
     upon call.  When zero, it indicates that the disconnection pertains to the
     connection associated with FD.

The function is used to send a request of a connection release.

The function induces a state transfer to `T_IDLE' and returns at the receipt of
the confirmation of the connection release.

In case of PVC-connection mode, `t_snddis(3)' (*note (*manpages*)t_snddis(3)::)
disassociates the user from the PVC and normally resets the PVC.


File: xti_sccp.info,  Node: t_sndudata(3),  Prev: t_snddis(3),  Up: XTI Function Considerations

 t_sndudata(3)
--------------

The behavior of the function `t_sndudata(3)' (*note
(*manpages*)t_sndudata(3)::) remains unchanged.  The function can operatin in
synchronous and asynchronous modes.  It follows current flow control rules.


File: xti_sccp.info,  Node: Options,  Next: Header File,  Prev: Functions,  Up: Top

5 Options
*********

The functions `t_optmgmt(3)' (*note (*manpages*)t_optmgmt(3)::), `t_connect(3)'
(*note (*manpages*)t_connect(3)::), `t_listen(3)' (*note
(*manpages*)t_listen(3)::), `t_accept(3)' (*note (*manpages*)t_accept(3)::),
and `t_rcvconnect(3)' (*note (*manpages*)t_rcvconnect(3)::), all contain an OPT
argument of type `struct netbuf' as an input or output parameter.  This
argument is used to convey options, and in particular SCCP Quality of Service
Parameters and options, between SCCP user and SCCP provider.

Each option is formatted according to the structure `t_opthdr', possibly
followed by the option value.

In the structure `t_opthdr', the NAME field specifies the mnemonic of the
option.

The LEVEL field specifies the protocol affected (here `T_SCCP' for all options
of the XTI-SCCP API).

The LEN field specifies the total length of the option (that is, the length of
the option header `t_opthdr' lush the length of the option value, without the
possible alignment characters).

The STATUS field of the returned options contains information about the success
or failure of a negotiation.

The structure `t_opthdr' is followed by the option value.

The XTI-SCCP user has to ensure that each option starts at a long-word (i.e.
32-bit) boundary.


File: xti_sccp.info,  Node: Description of the XTI-SCCP Options

5.1 Description of the XTI-SCCP Options
=======================================

The table presented in this section describes the options available in the
XTI-SCCP API.  An XTI implementation supports none, all or any subset of them.

All the names of the options are defined in the "New Options to Support SCCP
Service" part of the `<xti.h>' header file.

The legal optoin values shown in the SCCP options table are those limits
defined in ITU-T Q.711 1993.  They are given as an example only.

The actual legacl option values in force for SCCP options are dependent on the
version of the SCCP protocol in use and the options in force for a particular
SS7 network.

For each optoin, if the user gives a value that is not one of the allowed
values, the provider will negotiate it to a valid value.

The normal XTI option handling is employed for XTI-SCCP.  Chapter 5 of the XTI
specification describes this in detail.

XTI-SCCP options relevant only to a version of the SCCP protocol specification
later than that in use are treated as ""unknown"" or ""not supported"" by the
XTI-SCCP provider.

Negotiable XTI-SCCP options that contain a value outside those defined for the
particular version of SCCP in use are _not_ considered to be ""illegal
options"", but are negotiated to the nearest legal option value by the XTI-SCCP
provider.  (This allows for forward compatibility with newer version of SCCP.)

Other XTI-SCCP options are considered to be illegal if they contain a value
that cannot be represented in the protocol or that cannot be interpreted by the
provider.

*Note_*
     Examples of the option values that cannot be represented are CUG number
     greater than that allowed for basic format when X.25-1980 is in use, and a
     CUG number greater than that allowed for extended format when X.25-1984 is
     in use.  An example of an option value that cannot be interpreted by the
     provider is `T_X25_REVCHG' being set to a value other than `T_YES' or
     `T_NO'.

The handling of ""unknown"," ""not supported"," and ""illegal"" options are
clearly described in Section 5.3.2, [Illegal Options] of the XTI specification.

SCCP facilities are conveyed by the options described under "SCCP Options" in
the following table.

The option values associated with the endpoint are used by the SCCP provider to
build a call packet.  Before user modification, the effective option values are
the implementation defined default values (for example, a combination of
subscription time options and local provider configuraiton data).  The
effective values can be modified at any time by the functions `t_optmgmt(3)'
(*note (*manpages*)t_optmgmt(3)::), `t_connect(3)' (*note
(*manpages*)t_connect(3)::), `t_listen(3)' (*note (*manpages*)t_listen(3)::),
`t_accept(3)' (*note (*manpages*)t_accept(3)::) and `t_rcvconnect(3)' (*note
(*manpages*)t_rcvconnect(3)::).  Function `t_optmgmt(3)' (*note
(*manpages*)t_optmgmt(3)::) can be used to retrieve the implementation defined
default values or to reset the effective values to these defaults.  If an
option value is set to `T_UNSPEC', the associated SCCP option will not be
specified in the call packet.

Options that are not user-settable are marked as "read-only" in the table below.


+---------------+--------------+--------------------+-----------------------------+
|               |   Type of    |                    |                             |
| Option Name   | Option Value | Legal Option Value |           Meaning           |
+---------------+--------------+--------------------+-----------------------------+
|T_SCCP_RST_OPT | t_uscalar_t  | T_YES/T_NO         | User supports resets.       |
|               |              | The default  value |                             |
|               |              | is T_NO.           |                             |
+---------------+--------------+--------------------+-----------------------------+
|T_SCCP_VERSION | t_uscalar_t  | T_SCCP_vvvv_yyyy   | Version  of the SCCP proto- |
|read-only      |              | with  vvvv  repre- | col specificaiton supported |
|               |              | senting the  vari- | by the SCCP provider.       |
|               |              | ant  (e.g.   ANSI, |                             |
|               |              | ITUT,  ETSI)   and |                             |
|               |              | yyyy  representing |                             |
|               |              | the  year  of  the |                             |
|               |              | specification.     |                             |
|               |              | The  default value |                             |
|               |              | is  implementation |                             |
|               |              | defined.           |                             |
+---------------+--------------+--------------------+-----------------------------+
|T_SCCP_DIS-    | t_uscalar_t  | See meaning.       | Reason   for  a  connection |
|CON_REASON     |              | The default  value | release that  includes  the |
|               |              | is 0xf1.           | cause  and  the diagnostic. |
|               |              |                    | This reason can be  encoded |
|               |              |                    | by         using        the |
|               |              |                    | T_SCCP_SET_CAUSE        and |
|               |              |                    | T_SCCP_SET_DIAG  C  prepro- |
|               |              |                    | cessor macros.              |
+---------------+--------------+--------------------+-----------------------------+
|T_SCCP_DIS-    | struct       | See text.          | Address  of  the  user that |
|CON_ADD        | t_sccpaddr   |                    | released the connection.    |
+---------------+--------------+--------------------+-----------------------------+

                       _Table 5-1.  SCCP-level Options_


File: xti_sccp.info,  Node: Use of SCCP Options

5.2 Use of SCCP Options
=======================

The following tables identify the NAME field of the structure `t_opthdr' with
the mnemonic of the option, and the functions with which the option is
meaningful.


       +---------------------+-----+------+-----+-----+------+-----+-----+
       |    Option Name      | (1) | (2)  |(3)  | (4) | (5)  |(6)  | (7) |
       +---------------------+-----+------+-----+-----+------+-----+-----+
       |T_SCCP_RST_OPT       |  X  |  X   |     |  X  |      |     |     |
       |T_SCCP_VERSION       |  X  |  X   |     |  X  |  X   | X   |  X  |
       |T_SCCP_DISCON_REASON |  X  |      |     |     |      | X   |  X  |
       |T_SCCP_DISCON_ADD    |  X  |      |     |     |      |     |  X  |
       +---------------------+-----+------+-----+-----+------+-----+-----+
       |                       (1)   t_optmgmt                           |
       |                       (2)   t_connect                           |
       |                       (3)   t_listen                            |
       |                       (4)   t_accept                            |
       |                       (5)   t_rcvconnect                        |
       |                       (6)   t_optmgmt before a call of t_snddis |
       |                       (7)   t_optmgmt after a call of t_rcvdis  |
       +-----------------------------------------------------------------+

                          _Table 5-2.  SCCP Service_


File: xti_sccp.info,  Node: Header File,  Next: Protocol Terminology,  Prev: Options,  Up: Top

Appendix A Header File
**********************

This appendix presents the additional header file information for XTI-SCCP.
Implementations suporting XTI-SCCP will provide equivalent definitions in
`<xti_sccp.h>'.  XTI-SCCP programs should include `<xti_sccp.h>' as well as
`<xti.h>'.

Values specified for some of the symbolic constants in this SCCP header
definitions are designated as not mandatory for conformance purposes.  These
are identified by the comment accompanying the constant definition.

/*****************************************************************************

 @(#) $Id: xti_sccp.h,v 0.9.2.1 2008-11-17 14:04:34 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-11-17 14:04:34 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: xti_sccp.h,v $
 Revision 0.9.2.1  2008-11-17 14:04:34  brian
 - added documentation and conversion modules

 Revision 0.9.2.8  2008-04-29 07:10:46  brian
 - updating headers for release

 Revision 0.9.2.7  2007/08/14 12:17:13  brian
 - GPLv3 header updates

 Revision 0.9.2.6  2007/02/13 14:05:30  brian
 - corrected ulong and long for 32-bit compat

 Revision 0.9.2.5  2006/09/25 12:10:09  brian
 - updated and doxygenified headers

 *****************************************************************************/

#ifndef _SYS_XTI_SCCP_H
#define _SYS_XTI_SCCP_H

#ident "@(#) $RCSfile: xti_sccp.h,v $ $Name: OpenSS7-0_9_2 $($Revision: 0.9.2.1 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/* This file can be processed with doxygen(1). */

/** @addtogroup xnet
  * @{ */

/** @file
  * XTI SCCP-Specific header file.
  *
  * This file contains specific SCCP option and management parameters.  */

#ifndef t_uscalar_t
#define t_uscalar_t     u_int32_t
#define t_scalar_t      int32_t
#endif

#ifdef SCCP_MAX_ADDR_LENGTH
#undef SCCP_MAX_ADDR_LENGTH
#endif
#define SCCP_MAX_ADDR_LENGTH    32

/** SCCP Address structure. */
typedef struct sockaddr_sccp {
        sa_family_t sccp_family;        /**< Address family. */
        uint8_t sccp_ni;                /**< Network indicator. */
        uint8_t sccp_ri;                /**< Routing indicator. */
        uint32_t sccp_pc;               /**< Point code. */
        uint8_t sccp_ssn;               /**< Subsystem number (0 not present). */
        uint8_t sccp_gtt;               /**< Global title translation type. */
        uint8_t sccp_nai;               /**< Nature of address indicator. */
        uint8_t sccp_es;                /**< Encoding scheme. */
        uint8_t sccp_nplan;             /**< Numbering plan. */
        uint8_t sccp_tt;                /**< Translation type. */
        uint8_t sccp_alen;              /**< Address length. */
        uint8_t sccp_addr[SCCP_MAX_ADDR_LENGTH]; /**< Address digits. */
} t_sccp_addr_t;

/** @name Routing Indicators
  * @{ */
#define SCCP_RI_DPC_SSN          0      /**< Route on DPC/SSN. */
#define SCCP_RI_GT               1      /**< Route on GT. */
/** @} */

/** @name Subsystem Numbers
  * @{ */
#define SCCP_SSN_UNKNOWN         0      /**< Subsystem unknown. */
#define SCCP_SSN_SCMG            1      /**< SCCP management. */
#define SCCP_SSN_RESERVED        2      /**< Reserved. */
#define SCCP_SSN_ISUP            3      /**< ISUP subsystem. */
#define SCCP_SSN_OMAP            4      /**< OMAP subsystem. */
#define SCCP_SSN_MAP             5      /**< MAP subsystem. */
#define SCCP_SSN_HLR             6      /**< HLR subsystem. */
#define SCCP_SSN_VLR             7      /**< VLR subsystem. */
#define SCCP_SSN_MSC             8      /**< MSC subsystem. */
#define SCCP_SSN_EIC             9      /**< EIC subsystem. */
#define SCCP_SSN_AUC            10      /**< AUC subsystem. */
#define SCCP_SSN_ISDN_SS        11      /**< ISDN Special Services subsystem. */
#define SCCP_SSN_RESERVED2      12      /**< Reserved. */
#define SCCP_SSN_BISDN          13      /**< Broadband ISDN subsystem. */
#define SCCP_SSN_TC_TEST        14      /**< Transaction Capabilities Test subsystem. */
/** @} */

/** @name Global Title Types
  * @{ */
#define SCCP_GTTTYPE_NONE        0      /**< No GT. */
#define SCCP_GTTTYPE_NAI         1      /**< NAI only. */
#define SCCP_GTTTYPE_TT          2      /**< TT only. */
#define SCCP_GTTTYPE_NP          3      /**< TT, ES, NPLAN. */
#define SCCP_GTTTYPE_NP_NAI      4      /**< TT, ES, NPLAN and NAI. */
/** @} */

/** @name Encoding Schemes
  * @{ */
#define SCCP_ES_UNKNOWN          0      /**< Encoding scheme unknown. */
#define SCCP_ES_BCD_ODD          1      /**< Encoding Binary Coded Decimal, odd digits. */
#define SCCP_ES_BCD_EVEN         2      /**< Encoding Binary Coded Decimal, even digits. */
#define SCCP_ES_NATIONAL         3      /**< Encoding National-Specific. */
/** @} */

/** @name Numbering Plan
  * @{ */
#define SCCP_NPLAN_UNKNOWN       0      /**< Numbering plan unknown. */
#define SCCP_NPLAN_ISDN          1      /**< ISDN numbering plan. */
#define SCCP_NPLAN_GENERIC       2      /**< Generic numbering plan. */
#define SCCP_NPLAN_DATA          3      /**< Data numbering plan. */
#define SCCP_NPLAN_TELEX         4      /**< Telex numbering plan. */
#define SCCP_NPLAN_MARITIME      5      /**< Maritime numbering plan. */
#define SCCP_NPLAN_LAND_MOBILE   6      /**< Land mobile numbering plan. */
#define SCCP_NPLAN_ISDN_MOBILE   7      /**< ISDN monile numbering plan. */
#define SCCP_NPLAN_PRIVATE       8      /**< Private numbering plan. */
/** @} */

/** XTI SCCP Option Level */
#define T_SS7_SCCP              3       /**< SCCP level (same as SI value). */

/** @name SCCP Transport Provider Options
  * @{ */
#define T_SCCP_PVAR             1       /**< Protocol variant. */
#define T_SCCP_MPLEV            2       /**< Protocol options. */
#define T_SCCP_DEBUG            3       /**< Debug. */

#define T_SCCP_CLUSTER          7       /**< Protocol option. */
#define T_SCCP_SEQ_CTRL         8       /**< Sequence control parameter. */
#define T_SCCP_PRIORITY         9       /**< Message priority. */

#define T_SCCP_PCLASS           10      /**< Protocol class. */
#define T_SCCP_IMPORTANCE       11      /**< Importance. */
#define T_SCCP_RET_ERROR        12      /**< Return on error. */
/** @} */

/** @name Protocl Classes
  * For use with T_SCCP_PCLASS.
  * @{ */
#define T_SCCP_PCLASS_0         0x01    /**< Protocol class 0. */
#define T_SCCP_PCLASS_1         0x02    /**< Protocol class 1. */
#define T_SCCP_PCLASS_2         0x04    /**< Protocol class 2. */
#define T_SCCP_PCLASS_3         0x08    /**< Protocol class 3. */
#define T_SCCP_PCLASS_ALL       0x0f    /**< Protocol class any. */
/** @} */

/** @name SCCP Disconnect Reaons and Unidata Errors
  * @{ */
#define T_SCCP_CLUST                    (0x0100)        /**< Cluster modifier. */
#define T_SCCP_DEST_AVAILABLE           (0x1001)        /**< Destination available. */
#define T_SCCP_DEST_PROHIBITED          (0x1002)        /**< Destination prohibitied. */
#define T_SCCP_DEST_CONGESTED           (0x1003)        /**< Destination congested. */
#define T_SCCP_CLUS_AVAILABLE           (T_SCCP_DEST_AVAILABLE |T_SCCP_CLUST)   /**< Cluster available. */
#define T_SCCP_CLUS_PROHIBITED          (T_SCCP_DEST_PROHIBITED|T_SCCP_CLUST)   /**< Cluster prohibited. */
#define T_SCCP_CLUS_CONGESTED           (T_SCCP_DEST_CONGESTED |T_SCCP_CLUST)   /**< Cluster congested. */
#define T_SCCP_RESTARTING               (0x1004)        /**< MTP Restart in progress. */
#define T_SCCP_USER_PART_UNKNOWN        (0x1005)        /**< MTP User Part unknown. */
#define T_SCCP_USER_PART_UNEQUIPPED     (0x1006)        /**< MTP User Part unequipped. */
#define T_SCCP_USER_PART_UNAVAILABLE    (0x1007)        /**< MTP User Part unavailable. */
/** @} */

/** @} */

#endif                          /* _SYS_XTI_SCCP_H */

// vim: com=srO\:/**,mb\:*,ex\:*/,srO\:/*,mb\:*,ex\:*/,b\:TRANS


File: xti_sccp.info,  Node: Protocol Terminology,  Next: License,  Prev: Header File,  Up: Top

Appendix B Protocol Terminology
*******************************

"Protocol Address"
     The "Protocol Address" is the SCCP address.

"Sending Data of Zero Octets"
     The SCCP service definition, both in connection-oriented mode and in
     permanent-connection mode, permits sending of a TSDU of zero octets.

"Expedited Data Negotiation"
     "Expedited Data Negotiation" is an optional ITU-T-specified DTE facility
     that may be used for a given Virtual Call.  The calling DTE uses the
     "Expedited Data Negotiation Facility" during the connection phase to
     indicate whether it wishes to use the expedited data-transfer procedures.
     This indication is provided by a higher layer entity in the calling DTE.
     This facility is conveyed transparently by public data networks but may be
     set to non-use of the expedited data-transfer procedures by gateways and
     private networks that do not support them (see ISO/IEC 8208 and ITU-T
     Recommendation X.25).

"Fast Select"
     "Fast Select" is an optional user facility that may be requested by a DTE
     for a given Virtual Call.  The "Fast Select" facility allows the DTE to
     transmit call setup and clearing packets with a User Data Field of up to
     128 octets.

"Segmentation and Concatenation"
     The SCCP provider manages the segmentation and the concatenation of the
     TSDU (if the SCCP user did not already make it).  At the XTI interface,
     when a TSDU is broken up into more that one sub-unit, the `T_MORE' flag is
     set on each sub-unit passed across the interface, except the last.

"User Data"
     Since, at most, 128 octets of User Data may be sent in SCCP call and clear
     packets, the field UDATA.LEN in the function `t_connect(3)' (*note
     (*manpages*)t_connect(3)::), `t_listen(3)' (*note
     (*manpages*)t_listen(3)::), `t_rcvdis(3)' (*note (*manpages*)t_rcvdis(3)::)
     and `t_snddis(3)' (*note (*manpages*)t_snddis(3)::) should have a value of
     up to 128.


File: xti_sccp.info,  Node: License,  Next: Glossary,  Prev: Protocol Terminology,  Up: Top

 License
********

All code presented in this manual is licensed under the *note GNU Affero
General Public License::.

The text of the manual are licensed under the *note GNU Free Documentation
License::, with no invariant sections, no front-cover texts and no back-cover
texts.  Please note, however, that it is just plain wrong to modify statements
of, or attribute statements to, the author or `OpenSS7 Corporation'.

* Menu:

* GNU Affero General Public License::
* GNU Free Documentation License::


File: xti_sccp.info,  Node: GNU Affero General Public License,  Next: GNU Free Documentation License,  Up: License

 GNU Affero General Public License
==================================



                    The GNU Affero General Public License.
                          Version 3, 19 November 2007

     Copyright (C) 2007 Free Software Foundation, Inc. `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.

 Preamble
---------

The GNU Affero General Public License is a free, copyleft license for software
and other kinds of works, specifically designed to ensure cooperation with the
community in the case of network server software.

The licenses for most software and other practical works are designed to take
away your freedom to share and change the works.  By contrast, our General
Public Licenses are intended to guarantee your freedom to share and change all
versions of a program-to make sure it remains free software for all its users.

When we speak of free software, we are referring to freedom, not price.  Our
General Public Licenses are designed to make sure that you have the freedom to
distribute copies of free software (and charge for them if you wish), that you
receive source code or can get it if you want it, that you can change the
software or use pieces of it in new free programs, and that you know you can do
these things.

Developers that use our General Public Licenses protect your rights with two
steps: (1) assert copyright on the software, and (2) offer you this License
which gives you legal permission to copy, distribute and/or modify the software.

A secondary benefit of defending all users' freedom is that improvements made
in alternate versions of the program, if they receive widespread use, become
available for other developers to incorporate.  Many developers of free
software are heartened and encouraged by the resulting cooperation.  However,
in the case of software used on network servers, this result may fail to come
about.  The GNU General Public License permits making a modified version and
letting the public access it on a server without ever releasing its source code
to the public.

The GNU Affero General Public License is designed specifically to ensure that,
in such cases, the modified source code becomes available to the community.  It
requires the operator of a network server to provide the source code of the
modified version running there to the users of that server.  Therefore, public
use of a modified version, on a publicly accessible server, gives the public
access to the source code of the modified version.

An older license, called the Affero General Public License and published by
Affero, was designed to accomplish similar goals.  This is a different license,
not a version of the Affero GPL, but Affero has released a new version of the
Affero GPL which permits relicensing under this license.

The precise terms and conditions for copying, distribution and modification
follow.

                             TERMS AND CONDITIONS
  0. Definitions.

     "This License" refers to version 3 of the GNU Affero General Public
     License.

     "Copyright" also means copyright-like laws that apply to other kinds of
     works, such as semiconductor masks.

     "The Program" refers to any copyrightable work licensed under this
     License.  Each licensee is addressed as "you".  "Licensees" and
     "recipients" may be individuals or organizations.

     To "modify" a work means to copy from or adapt all or part of the work in
     a fashion requiring copyright permission, other than the making of an
     exact copy.  The resulting work is called a "modified version" of the
     earlier work or a work "based on" the earlier work.

     A "covered work" means either the unmodified Program or a work based on
     the Program.

     To "propagate" a work means to do anything with it that, without
     permission, would make you directly or secondarily liable for infringement
     under applicable copyright law, except executing it on a computer or
     modifying a private copy.  Propagation includes copying, distribution
     (with or without modification), making available to the public, and in
     some countries other activities as well.

     To "convey" a work means any kind of propagation that enables other
     parties to make or receive copies.  Mere interaction with a user through a
     computer network, with no transfer of a copy, is not conveying.

     An interactive user interface displays "Appropriate Legal Notices" to the
     extent that it includes a convenient and prominently visible feature that
     (1) displays an appropriate copyright notice, and (2) tells the user that
     there is no warranty for the work (except to the extent that warranties
     are provided), that licensees may convey the work under this License, and
     how to view a copy of this License.  If the interface presents a list of
     user commands or options, such as a menu, a prominent item in the list
     meets this criterion.

  1. Source Code.

     The "source code" for a work means the preferred form of the work for
     making modifications to it.  "Object code" means any non-source form of a
     work.

     A "Standard Interface" means an interface that either is an official
     standard defined by a recognized standards body, or, in the case of
     interfaces specified for a particular programming language, one that is
     widely used among developers working in that language.

     The "System Libraries" of an executable work include anything, other than
     the work as a whole, that (a) is included in the normal form of packaging
     a Major Component, but which is not part of that Major Component, and (b)
     serves only to enable use of the work with that Major Component, or to
     implement a Standard Interface for which an implementation is available to
     the public in source code form.  A "Major Component", in this context,
     means a major essential component (kernel, window system, and so on) of
     the specific operating system (if any) on which the executable work runs,
     or a compiler used to produce the work, or an object code interpreter used
     to run it.

     The "Corresponding Source" for a work in object code form means all the
     source code needed to generate, install, and (for an executable work) run
     the object code and to modify the work, including scripts to control those
     activities.  However, it does not include the work's System Libraries, or
     general-purpose tools or generally available free programs which are used
     unmodified in performing those activities but which are not part of the
     work.  For example, Corresponding Source includes interface definition
     files associated with source files for the work, and the source code for
     shared libraries and dynamically linked subprograms that the work is
     specifically designed to require, such as by intimate data communication
     or control flow between those subprograms and other parts of the work.

     The Corresponding Source need not include anything that users can
     regenerate automatically from other parts of the Corresponding Source.

     The Corresponding Source for a work in source code form is that same work.

  2. Basic Permissions.

     All rights granted under this License are granted for the term of
     copyright on the Program, and are irrevocable provided the stated
     conditions are met.  This License explicitly affirms your unlimited
     permission to run the unmodified Program.  The output from running a
     covered work is covered by this License only if the output, given its
     content, constitutes a covered work.  This License acknowledges your
     rights of fair use or other equivalent, as provided by copyright law.

     You may make, run and propagate covered works that you do not convey,
     without conditions so long as your license otherwise remains in force.
     You may convey covered works to others for the sole purpose of having them
     make modifications exclusively for you, or provide you with facilities for
     running those works, provided that you comply with the terms of this
     License in conveying all material for which you do not control copyright.
     Those thus making or running the covered works for you must do so
     exclusively on your behalf, under your direction and control, on terms
     that prohibit them from making any copies of your copyrighted material
     outside their relationship with you.

     Conveying under any other circumstances is permitted solely under the
     conditions stated below.  Sublicensing is not allowed; section 10 makes it
     unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

     No covered work shall be deemed part of an effective technological measure
     under any applicable law fulfilling obligations under article 11 of the
     WIPO copyright treaty adopted on 20 December 1996, or similar laws
     prohibiting or restricting circumvention of such measures.

     When you convey a covered work, you waive any legal power to forbid
     circumvention of technological measures to the extent such circumvention
     is effected by exercising rights under this License with respect to the
     covered work, and you disclaim any intention to limit operation or
     modification of the work as a means of enforcing, against the work's
     users, your or third parties' legal rights to forbid circumvention of
     technological measures.

  4. Conveying Verbatim Copies.

     You may convey verbatim copies of the Program's source code as you receive
     it, in any medium, provided that you conspicuously and appropriately
     publish on each copy an appropriate copyright notice; keep intact all
     notices stating that this License and any non-permissive terms added in
     accord with section 7 apply to the code; keep intact all notices of the
     absence of any warranty; and give all recipients a copy of this License
     along with the Program.

     You may charge any price or no price for each copy that you convey, and
     you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

     You may convey a work based on the Program, or the modifications to
     produce it from the Program, in the form of source code under the terms of
     section 4, provided that you also meet all of these conditions:

       a. The work must carry prominent notices stating that you modified it,
          and giving a relevant date.

       b. The work must carry prominent notices stating that it is released
          under this License and any conditions added under section 7.  This
          requirement modifies the requirement in section 4 to "keep intact all
          notices".

       c. You must license the entire work, as a whole, under this License to
          anyone who comes into possession of a copy.  This License will
          therefore apply, along with any applicable section 7 additional terms,
          to the whole of the work, and all its parts, regardless of how they
          are packaged.  This License gives no permission to license the work in
          any other way, but it does not invalidate such permission if you have
          separately received it.

       d. If the work has interactive user interfaces, each must display
          Appropriate Legal Notices; however, if the Program has interactive
          interfaces that do not display Appropriate Legal Notices, your work
          need not make them do so.

     A compilation of a covered work with other separate and independent works,
     which are not by their nature extensions of the covered work, and which
     are not combined with it such as to form a larger program, in or on a
     volume of a storage or distribution medium, is called an "aggregate" if
     the compilation and its resulting copyright are not used to limit the
     access or legal rights of the compilation's users beyond what the
     individual works permit.  Inclusion of a covered work in an aggregate does
     not cause this License to apply to the other parts of the aggregate.

  6. Conveying Non-Source Forms.

     You may convey a covered work in object code form under the terms of
     sections 4 and 5, provided that you also convey the machine-readable
     Corresponding Source under the terms of this License, in one of these ways:

       a. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by the
          Corresponding Source fixed on a durable physical medium customarily
          used for software interchange.

       b. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by a written
          offer, valid for at least three years and valid for as long as you
          offer spare parts or customer support for that product model, to give
          anyone who possesses the object code either (1) a copy of the
          Corresponding Source for all the software in the product that is
          covered by this License, on a durable physical medium customarily used
          for software interchange, for a price no more than your reasonable
          cost of physically performing this conveying of source, or (2) access
          to copy the Corresponding Source from a network server at no charge.

       c. Convey individual copies of the object code with a copy of the written
          offer to provide the Corresponding Source.  This alternative is
          allowed only occasionally and noncommercially, and only if you
          received the object code with such an offer, in accord with subsection
          6b.

       d. Convey the object code by offering access from a designated place
          (gratis or for a charge), and offer equivalent access to the
          Corresponding Source in the same way through the same place at no
          further charge.  You need not require recipients to copy the
          Corresponding Source along with the object code.  If the place to copy
          the object code is a network server, the Corresponding Source may be
          on a different server (operated by you or a third party) that supports
          equivalent copying facilities, provided you maintain clear directions
          next to the object code saying where to find the Corresponding Source.
          Regardless of what server hosts the Corresponding Source, you remain
          obligated to ensure that it is available for as long as needed to
          satisfy these requirements.

       e. Convey the object code using peer-to-peer transmission, provided you
          inform other peers where the object code and Corresponding Source of
          the work are being offered to the general public at no charge under
          subsection 6d.


     A separable portion of the object code, whose source code is excluded from
     the Corresponding Source as a System Library, need not be included in
     conveying the object code work.

     A "User Product" is either (1) a "consumer product", which means any
     tangible personal property which is normally used for personal, family, or
     household purposes, or (2) anything designed or sold for incorporation
     into a dwelling.  In determining whether a product is a consumer product,
     doubtful cases shall be resolved in favor of coverage.  For a particular
     product received by a particular user, "normally used" refers to a typical
     or common use of that class of product, regardless of the status of the
     particular user or of the way in which the particular user actually uses,
     or expects or is expected to use, the product.  A product is a consumer
     product regardless of whether the product has substantial commercial,
     industrial or non-consumer uses, unless such uses represent the only
     significant mode of use of the product.

     "Installation Information" for a User Product means any methods,
     procedures, authorization keys, or other information required to install
     and execute modified versions of a covered work in that User Product from
     a modified version of its Corresponding Source.  The information must
     suffice to ensure that the continued functioning of the modified object
     code is in no case prevented or interfered with solely because
     modification has been made.

     If you convey an object code work under this section in, or with, or
     specifically for use in, a User Product, and the conveying occurs as part
     of a transaction in which the right of possession and use of the User
     Product is transferred to the recipient in perpetuity or for a fixed term
     (regardless of how the transaction is characterized), the Corresponding
     Source conveyed under this section must be accompanied by the Installation
     Information.  But this requirement does not apply if neither you nor any
     third party retains the ability to install modified object code on the
     User Product (for example, the work has been installed in ROM).

     The requirement to provide Installation Information does not include a
     requirement to continue to provide support service, warranty, or updates
     for a work that has been modified or installed by the recipient, or for
     the User Product in which it has been modified or installed.  Access to a
     network may be denied when the modification itself materially and
     adversely affects the operation of the network or violates the rules and
     protocols for communication across the network.

     Corresponding Source conveyed, and Installation Information provided, in
     accord with this section must be in a format that is publicly documented
     (and with an implementation available to the public in source code form),
     and must require no special password or key for unpacking, reading or
     copying.

  7. Additional Terms.

     "Additional permissions" are terms that supplement the terms of this
     License by making exceptions from one or more of its conditions.
     Additional permissions that are applicable to the entire Program shall be
     treated as though they were included in this License, to the extent that
     they are valid under applicable law.  If additional permissions apply only
     to part of the Program, that part may be used separately under those
     permissions, but the entire Program remains governed by this License
     without regard to the additional permissions.

     When you convey a copy of a covered work, you may at your option remove
     any additional permissions from that copy, or from any part of it.
     (Additional permissions may be written to require their own removal in
     certain cases when you modify the work.)  You may place additional
     permissions on material, added by you to a covered work, for which you
     have or can give appropriate copyright permission.

     Notwithstanding any other provision of this License, for material you add
     to a covered work, you may (if authorized by the copyright holders of that
     material) supplement the terms of this License with terms:

       a. Disclaiming warranty or limiting liability differently from the terms
          of sections 15 and 16 of this License; or

       b. Requiring preservation of specified reasonable legal notices or author
          attributions in that material or in the Appropriate Legal Notices
          displayed by works containing it; or

       c. Prohibiting misrepresentation of the origin of that material, or
          requiring that modified versions of such material be marked in
          reasonable ways as different from the original version; or

       d. Limiting the use for publicity purposes of names of licensors or
          authors of the material; or

       e. Declining to grant rights under trademark law for use of some trade
          names, trademarks, or service marks; or

       f. Requiring indemnification of licensors and authors of that material by
          anyone who conveys the material (or modified versions of it) with
          contractual assumptions of liability to the recipient, for any
          liability that these contractual assumptions directly impose on those
          licensors and authors.

     All other non-permissive additional terms are considered "further
     restrictions" within the meaning of section 10.  If the Program as you
     received it, or any part of it, contains a notice stating that it is
     governed by this License along with a term that is a further restriction,
     you may remove that term.  If a license document contains a further
     restriction but permits relicensing or conveying under this License, you
     may add to a covered work material governed by the terms of that license
     document, provided that the further restriction does not survive such
     relicensing or conveying.

     If you add terms to a covered work in accord with this section, you must
     place, in the relevant source files, a statement of the additional terms
     that apply to those files, or a notice indicating where to find the
     applicable terms.

     Additional terms, permissive or non-permissive, may be stated in the form
     of a separately written license, or stated as exceptions; the above
     requirements apply either way.

  8. Termination.

     You may not propagate or modify a covered work except as expressly
     provided under this License.  Any attempt otherwise to propagate or modify
     it is void, and will automatically terminate your rights under this
     License (including any patent licenses granted under the third paragraph
     of section 11).

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, you do not qualify to receive new licenses for the same
     material under section 10.

  9. Acceptance Not Required for Having Copies.

     You are not required to accept this License in order to receive or run a
     copy of the Program.  Ancillary propagation of a covered work occurring
     solely as a consequence of using peer-to-peer transmission to receive a
     copy likewise does not require acceptance.  However, nothing other than
     this License grants you permission to propagate or modify any covered
     work.  These actions infringe copyright if you do not accept this License.
     Therefore, by modifying or propagating a covered work, you indicate your
     acceptance of this License to do so.

 10. Automatic Licensing of Downstream Recipients.

     Each time you convey a covered work, the recipient automatically receives
     a license from the original licensors, to run, modify and propagate that
     work, subject to this License.  You are not responsible for enforcing
     compliance by third parties with this License.

     An "entity transaction" is a transaction transferring control of an
     organization, or substantially all assets of one, or subdividing an
     organization, or merging organizations.  If propagation of a covered work
     results from an entity transaction, each party to that transaction who
     receives a copy of the work also receives whatever licenses to the work
     the party's predecessor in interest had or could give under the previous
     paragraph, plus a right to possession of the Corresponding Source of the
     work from the predecessor in interest, if the predecessor has it or can
     get it with reasonable efforts.

     You may not impose any further restrictions on the exercise of the rights
     granted or affirmed under this License.  For example, you may not impose a
     license fee, royalty, or other charge for exercise of rights granted under
     this License, and you may not initiate litigation (including a cross-claim
     or counterclaim in a lawsuit) alleging that any patent claim is infringed
     by making, using, selling, offering for sale, or importing the Program or
     any portion of it.

 11. Patents.

     A "contributor" is a copyright holder who authorizes use under this
     License of the Program or a work on which the Program is based.  The work
     thus licensed is called the contributor's "contributor version".

     A contributor's "essential patent claims" are all patent claims owned or
     controlled by the contributor, whether already acquired or hereafter
     acquired, that would be infringed by some manner, permitted by this
     License, of making, using, or selling its contributor version, but do not
     include claims that would be infringed only as a consequence of further
     modification of the contributor version.  For purposes of this definition,
     "control" includes the right to grant patent sublicenses in a manner
     consistent with the requirements of this License.

     Each contributor grants you a non-exclusive, worldwide, royalty-free
     patent license under the contributor's essential patent claims, to make,
     use, sell, offer for sale, import and otherwise run, modify and propagate
     the contents of its contributor version.

     In the following three paragraphs, a "patent license" is any express
     agreement or commitment, however denominated, not to enforce a patent
     (such as an express permission to practice a patent or covenant not to sue
     for patent infringement).  To "grant" such a patent license to a party
     means to make such an agreement or commitment not to enforce a patent
     against the party.

     If you convey a covered work, knowingly relying on a patent license, and
     the Corresponding Source of the work is not available for anyone to copy,
     free of charge and under the terms of this License, through a publicly
     available network server or other readily accessible means, then you must
     either (1) cause the Corresponding Source to be so available, or (2)
     arrange to deprive yourself of the benefit of the patent license for this
     particular work, or (3) arrange, in a manner consistent with the
     requirements of this License, to extend the patent license to downstream
     recipients.  "Knowingly relying" means you have actual knowledge that, but
     for the patent license, your conveying the covered work in a country, or
     your recipient's use of the covered work in a country, would infringe one
     or more identifiable patents in that country that you have reason to
     believe are valid.

     If, pursuant to or in connection with a single transaction or arrangement,
     you convey, or propagate by procuring conveyance of, a covered work, and
     grant a patent license to some of the parties receiving the covered work
     authorizing them to use, propagate, modify or convey a specific copy of
     the covered work, then the patent license you grant is automatically
     extended to all recipients of the covered work and works based on it.

     A patent license is "discriminatory" if it does not include within the
     scope of its coverage, prohibits the exercise of, or is conditioned on the
     non-exercise of one or more of the rights that are specifically granted
     under this License.  You may not convey a covered work if you are a party
     to an arrangement with a third party that is in the business of
     distributing software, under which you make payment to the third party
     based on the extent of your activity of conveying the work, and under
     which the third party grants, to any of the parties who would receive the
     covered work from you, a discriminatory patent license (a) in connection
     with copies of the covered work conveyed by you (or copies made from those
     copies), or (b) primarily for and in connection with specific products or
     compilations that contain the covered work, unless you entered into that
     arrangement, or that patent license was granted, prior to 28 March 2007.

     Nothing in this License shall be construed as excluding or limiting any
     implied license or other defenses to infringement that may otherwise be
     available to you under applicable patent law.

 12. No Surrender of Others' Freedom.

     If conditions are imposed on you (whether by court order, agreement or
     otherwise) that contradict the conditions of this License, they do not
     excuse you from the conditions of this License.  If you cannot convey a
     covered work so as to satisfy simultaneously your obligations under this
     License and any other pertinent obligations, then as a consequence you may
     not convey it at all.  For example, if you agree to terms that obligate
     you to collect a royalty for further conveying from those to whom you
     convey the Program, the only way you could satisfy both those terms and
     this License would be to refrain entirely from conveying the Program.

 13. Remote Network Interaction; Use with the GNU General Public License.

     Notwithstanding any other provision of this License, if you modify the
     Program, your modified version must prominently offer all users interacting
     with it remotely through a network (if your version supports such
     interaction) an opportunity to receive the Corresponding Source of your
     version by providing access to the Corresponding Source from a network
     server at no charge, through some standard or customary means of
     facilitating copying of software.  This Corresponding Source shall include
     the Corresponding Source for any work covered by version 3 of the GNU
     General Public License that is incorporated pursuant to the following
     paragraph.

     Notwithstanding any other provision of this License, you have permission to
     link or combine any covered work with a work licensed under version 3 of
     the GNU General Public License into a single combined work, and to convey
     the resulting work.  The terms of this License will continue to apply to
     the part which is the covered work, but the work with which it is combined
     will remain governed by version 3 of the GNU General Public License.

 14. Revised Versions of this License.

     The Free Software Foundation may publish revised and/or new versions of
     the GNU Affero General Public License from time to time.  Such new
     versions will be similar in spirit to the present version, but may differ
     in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the Program
     specifies that a certain numbered version of the GNU Affero General Public
     License "or any later version" applies to it, you have the option of
     following the terms and conditions either of that numbered version or of
     any later version published by the Free Software Foundation.  If the
     Program does not specify a version number of the GNU Affero General Public
     License, you may choose any version ever published by the Free Software
     Foundation.

     If the Program specifies that a proxy can decide which future versions of
     the GNU Affero General Public License can be used, that proxy's public
     statement of acceptance of a version permanently authorizes you to choose
     that version for the Program.

     Later license versions may give you additional or different permissions.
     However, no additional obligations are imposed on any author or copyright
     holder as a result of your choosing to follow a later version.

 15. Disclaimer of Warranty.

     THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
     APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
     OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
     THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
     IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
     ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

 16. Limitation of Liability.

     IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
     ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE
     PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
     GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
     USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
     EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
     SUCH DAMAGES.

 17. Interpretation of Sections 15 and 16.

     If the disclaimer of warranty and limitation of liability provided above
     cannot be given local legal effect according to their terms, reviewing
     courts shall apply local law that most closely approximates an absolute
     waiver of all civil liability in connection with the Program, unless a
     warranty or assumption of liability accompanies a copy of the Program in
     return for a fee.


                          END OF TERMS AND CONDITIONS

 How to Apply These Terms to Your New Programs
----------------------------------------------

If you develop a new program, and you want it to be of the greatest possible
use to the public, the best way to achieve this is to make it free software
which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest to attach
them to the start of each source file to most effectively state the exclusion
of warranty; and each file should have at least the "copyright" line and a
pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.
     Copyright (C) YEAR NAME OF AUTHOR

     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Affero General Public License as published by
     the Free Software Foundation, either version 3 of the License, or (at
     your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Affero General Public License for more details.

     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see `http://www.gnu.org/licenses/'.

Also add information on how to contact you by electronic and paper mail.

If your software can interact with users remotely through a network, you should
also make sure that it provides a way for users to get its source.  For
example, if your program is a web application, its interface could display a
"Source" link that leads users to an archive of the code.  There are many ways
you could offer source, and different solutions will be better for different
programs; see section 13 for the specific requirements.

You should also get your employer (if you work as a programmer) or school, if
any, to sign a "copyright disclaimer" for the program, if necessary.  For more
information on this, and how to apply and follow the GNU AGPL, see
`http://www.gnu.org/licenses/'.


File: xti_sccp.info,  Node: GNU Free Documentation License,  Prev: GNU Affero General Public License,  Up: License

 GNU Free Documentation License
===============================



                        GNU FREE DOCUMENTATION LICENSE
                         Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to assure
     everyone the effective freedom to copy and redistribute it, with or without
     modifying it, either commercially or noncommercially.  Secondarily, this
     License preserves for the author and publisher a way to get credit for
     their work, while not being considered responsible for modifications made
     by others.

     This License is a kind of "copyleft", which means that derivative works of
     the document must themselves be free in the same sense.  It complements
     the GNU General Public License, which is a copyleft license designed for
     free software.

     We have designed this License in order to use it for manuals for free
     software, because free software needs free documentation: a free program
     should come with manuals providing the same freedoms that the software
     does.  But this License is not limited to software manuals; it can be used
     for any textual work, regardless of subject matter or whether it is
     published as a printed book.  We recommend this License principally for
     works whose purpose is instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium, that
     contains a notice placed by the copyright holder saying it can be
     distributed under the terms of this License.  Such a notice grants a
     world-wide, royalty-free license, unlimited in duration, to use that work
     under the conditions stated herein.  The "Document", below, refers to any
     such manual or work.  Any member of the public is a licensee, and is
     addressed as "you".  You accept the license if you copy, modify or
     distribute the work in a way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with modifications
     and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section of the
     Document that deals exclusively with the relationship of the publishers or
     authors of the Document to the Document's overall subject (or to related
     matters) and contains nothing that could fall directly within that overall
     subject.  (Thus, if the Document is in part a textbook of mathematics, a
     Secondary Section may not explain any mathematics.)  The relationship
     could be a matter of historical connection with the subject or with
     related matters, or of legal, commercial, philosophical, ethical or
     political position regarding them.

     The "Invariant Sections" are certain Secondary Sections whose titles are
     designated, as being those of Invariant Sections, in the notice that says
     that the Document is released under this License.  If a section does not
     fit the above definition of Secondary then it is not allowed to be
     designated as Invariant.  The Document may contain zero Invariant
     Sections.  If the Document does not identify any Invariant Sections then
     there are none.

     The "Cover Texts" are certain short passages of text that are listed, as
     Front-Cover Texts or Back-Cover Texts, in the notice that says that the
     Document is released under this License.  A Front-Cover Text may be at
     most 5 words, and a Back-Cover Text may be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the general
     public, that is suitable for revising the document straightforwardly with
     generic text editors or (for images composed of pixels) generic paint
     programs or (for drawings) some widely available drawing editor, and that
     is suitable for input to text formatters or for automatic translation to a
     variety of formats suitable for input to text formatters.  A copy made in
     an otherwise Transparent file format whose markup, or absence of markup,
     has been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if used
     for any substantial amount of text.  A copy that is not "Transparent" is
     called "Opaque".

     Examples of suitable formats for Transparent copies include plain ASCII
     without markup, Texinfo input format, LaTeX input format, SGML or XML
     using a publicly available DTD, and standard-conforming simple HTML,
     PostScript or PDF designed for human modification.  Examples of
     transparent image formats include PNG, XCF and JPG.  Opaque formats
     include proprietary formats that can be read and edited only by
     proprietary word processors, SGML or XML for which the DTD and/or
     processing tools are not generally available, and the machine-generated
     HTML, PostScript or PDF produced by some word processors for output
     purposes only.

     The "Title Page" means, for a printed book, the title page itself, plus
     such following pages as are needed to hold, legibly, the material this
     License requires to appear in the title page.  For works in formats which
     do not have any title page as such, "Title Page" means the text near the
     most prominent appearance of the work's title, preceding the beginning of
     the body of the text.

     The "publisher" means any person or entity that distributes copies of the
     Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document whose title
     either is precisely XYZ or contains XYZ in parentheses following text that
     translates XYZ in another language.  (Here XYZ stands for a specific
     section name mentioned below, such as "Acknowledgements", "Dedications",
     "Endorsements", or "History".)  To "Preserve the Title" of such a section
     when you modify the Document means that it remains a section "Entitled
     XYZ" according to this definition.

     The Document may include Warranty Disclaimers next to the notice which
     states that this License applies to the Document.  These Warranty
     Disclaimers are considered to be included by reference in this License,
     but only as regards disclaiming warranties: any other implication that
     these Warranty Disclaimers may have is void and has no effect on the
     meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the copyright
     notices, and the license notice saying this License applies to the
     Document are reproduced in all copies, and that you add no other
     conditions whatsoever to those of this License.  You may not use technical
     measures to obstruct or control the reading or further copying of the
     copies you make or distribute.  However, you may accept compensation in
     exchange for copies.  If you distribute a large enough number of copies
     you must also follow the conditions in section 3.

     You may also lend copies, under the same conditions stated above, and you
     may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly have
     printed covers) of the Document, numbering more than 100, and the
     Document's license notice requires Cover Texts, you must enclose the
     copies in covers that carry, clearly and legibly, all these Cover Texts:
     Front-Cover Texts on the front cover, and Back-Cover Texts on the back
     cover.  Both covers must also clearly and legibly identify you as the
     publisher of these copies.  The front cover must present the full title
     with all words of the title equally prominent and visible.  You may add
     other material on the covers in addition.  Copying with changes limited to
     the covers, as long as they preserve the title of the Document and satisfy
     these conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit legibly,
     you should put the first ones listed (as many as fit reasonably) on the
     actual cover, and continue the rest onto adjacent pages.

     If you publish or distribute Opaque copies of the Document numbering more
     than 100, you must either include a machine-readable Transparent copy
     along with each Opaque copy, or state in or with each Opaque copy a
     computer-network location from which the general network-using public has
     access to download using public-standard network protocols a complete
     Transparent copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you begin
     distribution of Opaque copies in quantity, to ensure that this Transparent
     copy will remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of the
     Document well before redistributing any large number of copies, to give
     them a chance to provide you with an updated version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document under the
     conditions of sections 2 and 3 above, provided that you release the
     Modified Version under precisely this License, with the Modified Version
     filling the role of the Document, thus licensing distribution and
     modification of the Modified Version to whoever possesses a copy of it.
     In addition, you must do these things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title distinct
          from that of the Document, and from those of previous versions (which
          should, if there were any, be listed in the History section of the
          Document).  You may use the same title as a previous version if the
          original publisher of that version gives permission.

       B. List on the Title Page, as authors, one or more persons or entities
          responsible for authorship of the modifications in the Modified
          Version, together with at least five of the principal authors of the
          Document (all of its principal authors, if it has fewer than five),
          unless they release you from this requirement.

       C. State on the Title page the name of the publisher of the Modified
          Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications adjacent
          to the other copyright notices.

       F. Include, immediately after the copyright notices, a license notice
          giving the public permission to use the Modified Version under the
          terms of this License, in the form shown in the Addendum below.

       G. Preserve in that license notice the full lists of Invariant Sections
          and required Cover Texts given in the Document's license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title, and add
          to it an item stating at least the title, year, new authors, and
          publisher of the Modified Version as given on the Title Page.  If
          there is no section Entitled "History" in the Document, create one
          stating the title, year, authors, and publisher of the Document as
          given on its Title Page, then add an item describing the Modified
          Version as stated in the previous sentence.

       J. Preserve the network location, if any, given in the Document for
          public access to a Transparent copy of the Document, and likewise the
          network locations given in the Document for previous versions it was
          based on.  These may be placed in the "History" section.  You may
          omit a network location for a work that was published at least four
          years before the Document itself, or if the original publisher of the
          version it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section all the
          substance and tone of each of the contributor acknowledgements and/or
          dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered in
          their text and in their titles.  Section numbers or the equivalent
          are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section may not
          be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled "Endorsements" or
          to conflict in title with any Invariant Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or appendices
     that qualify as Secondary Sections and contain no material copied from the
     Document, you may at your option designate some or all of these sections
     as invariant.  To do this, add their titles to the list of Invariant
     Sections in the Modified Version's license notice.  These titles must be
     distinct from any other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various parties--for
     example, statements of peer review or that the text has been approved by
     an organization as the authoritative definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text, and a
     passage of up to 25 words as a Back-Cover Text, to the end of the list of
     Cover Texts in the Modified Version.  Only one passage of Front-Cover Text
     and one of Back-Cover Text may be added by (or through arrangements made
     by) any one entity.  If the Document already includes a cover text for the
     same cover, previously added by you or by arrangement made by the same
     entity you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous publisher
     that added the old one.

     The author(s) and publisher(s) of the Document do not by this License give
     permission to use their names for publicity for or to assert or imply
     endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under this
     License, under the terms defined in section 4 above for modified versions,
     provided that you include in the combination all of the Invariant Sections
     of all of the original documents, unmodified, and list them all as
     Invariant Sections of your combined work in its license notice, and that
     you preserve all their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and multiple
     identical Invariant Sections may be replaced with a single copy.  If there
     are multiple Invariant Sections with the same name but different contents,
     make the title of each such section unique by adding at the end of it, in
     parentheses, the name of the original author or publisher of that section
     if known, or else a unique number.  Make the same adjustment to the
     section titles in the list of Invariant Sections in the license notice of
     the combined work.

     In the combination, you must combine any sections Entitled "History" in
     the various original documents, forming one section Entitled "History";
     likewise combine any sections Entitled "Acknowledgements", and any
     sections Entitled "Dedications".  You must delete all sections Entitled
     "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other documents
     released under this License, and replace the individual copies of this
     License in the various documents with a single copy that is included in
     the collection, provided that you follow the rules of this License for
     verbatim copying of each of the documents in all other respects.

     You may extract a single document from such a collection, and distribute
     it individually under this License, provided you insert a copy of this
     License into the extracted document, and follow this License in all other
     respects regarding verbatim copying of that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other separate and
     independent documents or works, in or on a volume of a storage or
     distribution medium, is called an "aggregate" if the copyright resulting
     from the compilation is not used to limit the legal rights of the
     compilation's users beyond what the individual works permit.  When the
     Document is included in an aggregate, this License does not apply to the
     other works in the aggregate which are not themselves derivative works of
     the Document.

     If the Cover Text requirement of section 3 is applicable to these copies
     of the Document, then if the Document is less than one half of the entire
     aggregate, the Document's Cover Texts may be placed on covers that bracket
     the Document within the aggregate, or the electronic equivalent of covers
     if the Document is in electronic form.  Otherwise they must appear on
     printed covers that bracket the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may distribute
     translations of the Document under the terms of section 4.  Replacing
     Invariant Sections with translations requires special permission from
     their copyright holders, but you may include translations of some or all
     Invariant Sections in addition to the original versions of these Invariant
     Sections.  You may include a translation of this License, and all the
     license notices in the Document, and any Warranty Disclaimers, provided
     that you also include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of this
     License or a notice or disclaimer, the original version will prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to Preserve its
     Title (section 1) will typically require changing the actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document except as
     expressly provided under this License.  Any attempt otherwise to copy,
     modify, sublicense, or distribute it is void, and will automatically
     terminate your rights under this License.

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, receipt of a copy of some or all of the same material does not
     give you any rights to use it.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of the GNU
     Free Documentation License from time to time.  Such new versions will be
     similar in spirit to the present version, but may differ in detail to
     address new problems or concerns.  See `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version number.  If
     the Document specifies that a particular numbered version of this License
     "or any later version" applies to it, you have the option of following the
     terms and conditions either of that specified version or of any later
     version that has been published (not as a draft) by the Free Software
     Foundation.  If the Document does not specify a version number of this
     License, you may choose any version ever published (not as a draft) by the
     Free Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that proxy's
     public statement of acceptance of a version permanently authorizes you to
     choose that version for the Document.

 11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any World
     Wide Web server that publishes copyrightable works and also provides
     prominent facilities for anybody to edit those works.  A public wiki that
     anybody can edit is an example of such a server.  A "Massive Multiauthor
     Collaboration" (or "MMC") contained in the site means any set of
     copyrightable works thus published on the MMC site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
     published by Creative Commons Corporation, a not-for-profit corporation
     with a principal place of business in San Francisco, California, as well
     as future copyleft versions of that license published by that same
     organization.

     "Incorporate" means to publish or republish a Document, in whole or in
     part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this License,
     and if all works that were first published under this License somewhere
     other than this MMC, and subsequently incorporated in whole or in part
     into the MMC, (1) had no cover texts or invariant sections, and (2) were
     thus incorporated prior to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the site
     under CC-BY-SA on the same site at any time before August 1, 2009,
     provided the MMC is eligible for relicensing.


 ADDENDUM: How to use this License for your documents
=====================================================

To use this License in a document you have written, include a copy of the
License in the document and put the following copyright and license notices
just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace
the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other combination
of the three, merge those two alternatives to suit the situation.

If your document contains nontrivial examples of program code, we recommend
releasing these examples in parallel under your choice of free software
license, such as the GNU General Public License, to permit their use in free
software.


File: xti_sccp.info,  Node: Glossary,  Next: Acronyms,  Prev: License,  Up: Top

 Glossary
*********

_Signalling Data Link Service Data Unit_
     A grouping of SDL user data whose boundaries are preserved from one end of
     the signalling data link connection to the other.

_Data transfer_
     The phase in connection and connectionless modes that supports the
     transfer of data between to signalling data link users.

_SDL provider_
     The signalling data link layer protocol that provides the services of the
     signalling data link interface.

_SDL user_
     The user-level application or user-level or kernel-level protocol that
     accesses the services of the signalling data link layer.

_Local management_
     The phase in connection and connectionless modes in which a SDL user
     initializes a stream and attaches a PPA address to the stream.  Primitives
     in this phase generate local operations only.

_PPA_
     The point at which a system attaches itself to a physical communications
     medium.

_PPA identifier_
     An identifier of a particular physical medium over which communication
     transpires.


File: xti_sccp.info,  Node: Acronyms,  Next: References,  Prev: Glossary,  Up: Top

 Acronyms
*********

"ANSI"       American National Standards Institute
"API"        Application Programming Interface
"CCITT"      The International Telegraph and Telephone Consutative Committee,
             old name for ITU-T
"CONS"       Connection-Oriented Network Service
"CUD"        Call User Data
"DCE"        Data Circuit-terminating Equipment
"DDN"        Defence Data Network
"DLPI"       Data Link Provider Interface
"DLSAP"      Destination Link Service Access Point
"DNIC"       Data Network Identification Code
"DSAP"       Destination Service Access Point
"DTE"        Data Terminal Equipment
"DXE"        DTE or DCE
"EM"         Event Management
"ENSDU"      Expedited Network Service Data Unit
"ETSI"       European Telecommunications Standards Institute
"HDLC"       High-Level Data Link Control
"IEEE"       Institute of Electrical and Electronics Engineers
"IP"         Internet Protocol
"ISDNI"      ISDN Interface
"ISDN"       Integrated Services Digital Network
"ISO"        International Organization for Standardization
"ISUPI"      ISUP Interface
"ISUP"       ISDN User Part
"ITU"        International Telecommunications Union
"ITU-T"      ITU Telecom Sector
"LAN"        Local Area Network
"LAPB"       Link Access Procedure (Balanced), ISO/IEC 7776
"LAPD"       Link Access Procedure D-Channel, Q.921
"LAPF"       Link Access Procedure Frame Mode, Q.922
"LAP"        Link Access Procedure
"LCI"        Logical Channel Identifier
"LLC1"       Logical Link Control Type 1
"LLC2"       Logical Link Control Type 2
"LLC3"       Logical Link Control Type 3
"LLC"        Logical Link Control
"LLI"        Logical Link Inteface
"LSAP"       Link Service Access Point
"MAC"        Media Access Control
"MTPI"       Message Transfer Part Interface
"MTP"        Message Transfer Part
"NLI"        Network Layer Interface
"NPDU"       Network Protocol Data Unit
"NPI"        Network Provider Interface
"NPI"        Numbering Plan Indicator
"NSAP"       Network Service Access Point
"NSDU"       Network Service Data Unit
"NSP"        Network Service Provider
"NS"         Network Service
"NSU"        Network Service User
"NUI"        Network User Information
"OSI"        Open System Interconnection
"PAD"        Packet Assembler/Disassembler
"PDN"        Public Data Network
"PDU"        Protocol Data Unit
"PLP"        Packet Layer Protocol
"PPA"        Physical Point of Attachment
"PSDN"       Public Switched Data Network
"PSTN"       Public Switch Telephone Network
"PVC"        Permanent Virtual Circuit
"QOS"        Quality of Service
"RPOA"       Recognized Private Operating Agency
"SAP"        Service Access Point
"SCCPI"      Signalling Connection Control Part Interface
"SCCP"       Signalling Connection Control Part
"SDLI"       Signalling Data Link Interface
"SDL"        Signalling Data Link
"SDTI"       Signalling Data Terminal Interface
"SDT"        Signalling Data Terminal
"SDU"        Service Data Unit
"SLI"        Signalling Link Interface
"SLSAP"      Source Link Service Access Point
"SL"         Signalling Link
"SNPA"       Subnetwork Point of Attachment
"SSAP"       Source Service Access Point
"SVC"        Switched Virtual Circuit
"TCAP"       Transaction Capabilities Application Part
"TCI"        Transaction Component Interface
"TC"         Component Handling Sub-Layer
"TLI"        Transport Layer Interface
"TOA/NPI"    Type of Address/Numbering Plan Indicator
"TOA"        Type of Address
"TPI"        Transport Provider Interface
"TRI"        Transaction Interface
"TR"         Transaction Handling Sub-Layer
"VC"         Virtual Circuit
"WAN"        Wide Area Network
"X.121"      ITU-T Recommendation X.121
"X.25"       ITU-T Recommendation X.25
"X.28"       ITU-T Recommendation X.28
"X.3"        ITU-T Recommendation X.3
"X.75"       ITU-T Recommendation X.75
"XX25"       X.25 Programming Inteface using XTI
"XXX"        X.3, X.28, X.29


File: xti_sccp.info,  Node: References,  Next: Index,  Prev: Acronyms,  Up: Top

 References
***********

  1. ITU-T Recommendation X.210, (Geneva, 1993), "Information Technology --
     Open Systems Interconnection -- Basic reference model: Conventions for the
     definition of OSI services," ISO/IEC 10731:1994.

  2. ITU-T Recommendation X.217, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Service definition for the Association
     Control Service Element," ISO/IEC 8649:1996.

  3. ITU-T Recommendation X.227, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connection-oriented protocol for the
     Association Control Service Element: Protocol Specification," ISO/IEC
     8650-1.

  4. ITU-T Recommendation X.237, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless protocol for the
     Association Control Service Element: Protocol Specification," ISO/IEC
     10035-1 : 1995.

  5. ITU-T Recommendation X.216, (Geneva, 1994), "Information Technology --
     Open Systems Interconnection -- Presentation service definition," ISO/IEC
     8822:1994.

  6. ITU-T Recommendation X.226, (Geneva, 1994), "Information Technology --
     Open Systems Interconnection -- Connection-oriented presentation protocol:
     Protocol specification," ISO/IEC 8823-1:1994.

  7. ITU-T Recommendation X.236, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless presentation protocol:
     Protocol specification," ISO/IEC 9576-1:1995.

  8. ITU-T Recommendation X.215, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Session service definition," ISO/IEC
     8326:1996.

  9. ITU-T Recommendation X.225, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connection-oriented session protocol:
     Protocol specification," ISO/IEC 8327-1:1996.

 10. ITU-T Recommendation X.235, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless session protocol: Protocol
     specification," ISO/IEC 9548-1:1995.

 11. ITU-T Recommendation X.214, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Transport service definition," ISO/IEC
     8072:1996.

 12. ITU-T Recommendation X.224

 13. ITU-T Recommendation Q.700

 14. ITU-T Recommendation Q.701

 15. ITU-T Recommendation Q.702

 16. ITU-T Recommendation Q.703

 17. ITU-T Recommendation Q.704

 18. Geoffrey Gerrien, "CDI - Application Program Interface Guide," Gcom, Inc.,
     March 1999.

 19. ITU-T Recommendation Q.771, (Geneva, 1993), "Signalling System No. 7 --
     Functional description of transaction capabilities," (White Book).


File: xti_sccp.info,  Node: Index,  Prev: References,  Up: Top

 Index
******

 [index ]
* Menu:

* license, AGPL:                         GNU Affero General Public License.
                                                                        (line 6)
* license, FDL:                          GNU Free Documentation License.
                                                                        (line 6)
* license, GNU Affero General Public License: GNU Affero General Public License.
                                                                        (line 6)
* license, GNU Free Documentation License: GNU Free Documentation License.
                                                                        (line 6)



Tag Table:
Node: Top1836
Node: Preface2228
Ref: Preface-Footnote-16433
Node: Introduction6509
Node: Scope6735
Ref: Scope-Footnote-110263
Node: Relationship to XTI10395
Node: Modes11001
Node: Terminology12264
Node: Conformance13101
Node: API Implementation13447
Node: Underlying SCCP Service Provider14080
Node: Future Directions14677
Node: Services14953
Node: Overview of the Connection-less Service15206
Node: CLNS Initialization/De-initialization15508
Node: CLNS Data Transfer15858
Node: Receiving Unit Data16650
Node: Sending Unit Data16960
Node: Receiving Unit Data Errors17196
Node: Overview of the Connection-Oriented Service17376
Node: CONS Initialization/De-initialization18462
Node: CONS Connection Establishment18966
Node: CONS Data Transfer20203
Node: Receiving Data20961
Node: Sending Data22065
Node: Connection Resets22431
Node: CONS Connection Release25716
Node: Mapping of SCCP Primitives28207
Node: Connection-Oriented Primitives28532
Node: N-CONNECT28967
Ref: Table 2-130839
Node: N-DATA31508
Ref: Table 2-232794
Node: N-EXPEDITED-DATA33472
Ref: Table 2-434703
Node: N-RESET34763
Ref: Table 2-536221
Node: N-INFORM38070
Ref: Table 2-639394
Node: N-DISCONNECT41457
Ref: Table 2-742855
Node: Connection-Less Primitives42913
Node: N-UNIT-DATA43078
Ref: Table 2-844478
Node: N-NOTICE44536
Ref: Table 2-945634
Node: Management Primitives45690
Node: N-STATE45849
Ref: Table 2-1046586
Node: N-PCSTATE46642
Ref: Table 2-1147402
Node: N-COORD47459
Ref: Table 2-1248281
Node: States and Events48337
Node: Functions48856
Node: XTI Function Considerations49384
Node: t_accept(3)49791
Node: t_bind(3)53433
Node: t_connect(3)54883
Node: t_getinfo(3)59186
Node: t_look(3)59763
Node: t_listen(3)59930
Node: t_open(3)61721
Node: t_optmgmt(3)62485
Node: t_rcv(3)62789
Node: t_rcvconnect(3)64125
Node: t_rcvdis(3)66092
Ref: t_rcvdis(3)-Footnote-169384
Ref: t_rcvdis(3)-Footnote-269560
Node: t_rcvudata(3)69761
Node: t_rcvuderr(3)70123
Node: t_snd(3)70578
Node: t_snddis(3)72485
Node: t_sndudata(3)75958
Node: Options76295
Node: Description of the XTI-SCCP Options77653
Ref: Table 5-183651
Node: Use of SCCP Options83707
Ref: Table 5-285172
Node: Header File85225
Node: Protocol Terminology95450
Node: License97537
Node: GNU Affero General Public License98136
Node: GNU Free Documentation License134906
Node: Glossary159893
Node: Acronyms161040
Node: References165029
Node: Index167798

End Tag Table
