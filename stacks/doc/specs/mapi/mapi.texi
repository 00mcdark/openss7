% -*- texinfo -*- vim: ft=texinfo
% vim: ft=texinfo nosmartindent nocindent noautoindent tw=120
% =========================================================================
%
% @(#) $Id: mapi.texi,v 0.9.2.6 2006/08/22 12:44:17 brian Exp $
%
% =========================================================================
%
% Copyright (C) 2001-2006  OpenSS7 Corporation <www.openss7.com>
%
% All Rights Reserved.
%
% Permission is granted to make and distribute verbatim copies of this
% manual provided the copyright notice and this permission notice are
% preserved on all copies.
%
% Permission is granted to copy and distribute modified versions of this
% manual under the conditions for verbatim copying, provided that the
% entire resulting derived work is distributed under the terms of a
% permission notice identical to this one
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2006/08/22 12:44:17 $ by $Author: brian $
%
% =========================================================================
\input texinfo @c -*- texinfo -*-
@c vim: ft=texinfo nosmartindent nocindent noautoindent tw=120
@c %**start of header
@setfilename mapi.info
@include texi/args.texi
@set MANUAL_TITLE Mobile Application Part Interface (MAPI)
@set MANUAL_TYPE Application Programming Interface
@settitle @value{MANUAL_TITLE}
@c %**end of header

@dircategory OpenSS7
@direntry
* MAPI: (mapi).			Mobile Application Part Interface
@end direntry

@include texi/args.texi
@set MANUAL_TITLE Mobile Application Part Interface (MAPI)
@set MANUAL_TYPE Application Programming Interface

@ifinfo
This file documents the OpenSS7 @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, for
@value{PACKAGE_TITLE} version @value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}
published by @uref{http://www.openss7.com/,OpenSS7 Corporation}.

Copyright @copyright{} 2001-2006  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

All Rights Reserved.

Permission to use, copy and distribute this documentation without modification, for any purpose and without fee or
royalty is hereby granted, provided that both the above copyright notice and this permission notice appears in all
copies and that the name of OpenSS7 Corporation not be used in advertising or publicity pertaining to distribution of
this documentation or its contents without specific, written prior permission.  OpenSS7 Corporation makes no
representation about the suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed document carries
copying permission notice identical to this one except for the removal of this paragraph (this paragraph not being
relevant to the printed manual).

@end ignore
OpenSS7 Corporation disclaims all warranties with regard to this documentation including all implied warranties of
merchantability, fitness for a particular purpose, non-infringement, or title; that the contents of the document are
suitable for any purpose, or that the implementation of such contents will not infringe on any third party patents,
copyrights, trademarks or other rights..  In no event shall OpenSS7 Corporation be liable for any direct, indirect,
special or consequential damages or any damages whatsoever resulting from loss of use, data or profits, whether in an
action of contract, negligence or other tortious action, arising out of or in connection with any use of this document
or the performance or implementation of the contents thereof.

OpenSS7 Corporation reserves the right to revise this software and documentation for any reason, including but not
limited to, conformity with standards promulgated by various agencies, utilization of advances in the state of the
technical arts, or the reflection of changes in the design of any techniques, or procedures embodied, described, or
referred to herein.  OpenSS7 Corporation is under no obligation to provide any feature listed herein.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE Mobile Application Part Interface (MAPI)
@set MANUAL_TYPE Application Programming Interface

@ignore
@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@end ignore
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2006  OpenSS7 Corporation
@subtitle All Rights Reserved.
@sp 4
@quotation
@subheading Abstract
This document is a @value{MANUAL_TYPE} containing technical details concerning the implementation of the
@value{MANUAL_TITLE} for OpenSS7.  It contains recommendations on software architecture as well as platform and system
applicability of the @value{MANUAL_TITLE}.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2006  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

@noindent
All Rights Reserved.

@subsubheading Published by:
@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Unauthorized distribution or duplication is prohibited.

@sp 1

@ignore
@noindent
This software and related documentation is protected by copyright and distributed under licenses restricting its use,
copying, distribution and decompilation.  No part of this software or related documentation may be reproduced in any
form by any means without the prior written authorization of the copyright holder, and licensors, if any.

@noindent
The recipient of this document, by its retention and use, warrants that the recipient will protect this information and
keep it confidential, and will not disclose the information contained in this document without the written permission of
its owner.

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation for any reason, including but not
limited to, conformity with standards promulgated by various agencies, utilization of advances in the state of the
technical arts, or the reflection of changes in the design of any techniques, or procedures embodied, described, or
referred to herein.  OpenSS7 Corporation is under no obligation to provide any feature listed herein.
@end ignore

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and without fee or
royalty is hereby granted, provided that both the above copyright notice and this permission notice appears in all
copies and that the name of OpenSS7 Corporation not be used in advertising or publicity pertaining to distribution of
this documentation or its contents without specific, written prior permission.  OpenSS7 Corporation makes no
representation about the suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@subsubheading Notice:

@noindent
@b{OpenSS7 Corporation disclaims all warranties with regard to this documentation including all implied warranties of
merchantability, fitness for a particular purpose, non-infringement, or title; that the contents of the document are
suitable for any purpose, or that the implementation of such contents will not infringe on any third party patents,
copyrights, trademarks or other rights..  In no event shall OpenSS7 Corporation be liable for any direct, indirect,
special or consequential damages or any damages whatsoever resulting from loss of use, data or profits, whether in an
action of contract, negligence or other tortious action, arising out of or in connection with any use of this document
or the performance or implementation of the contents thereof.}

@sp 1

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation for any reason, including but not
limited to, conformity with standards promulgated by various agencies, utilization of advances in the state of the
technical arts, or the reflection of changes in the design of any techniques, or procedures embodied, described, or
referred to herein.  OpenSS7 Corporation is under no obligation to provide any feature listed herein.

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Ed. @value{PACKAGE_RELEASE} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Ed.  @value{PACKAGE_RELEASE}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@c Define an index of primitives
@defindex pr
@c Define an index of primitive values
@defindex pv
@c Define an index of protocol states
@c @defindex ps

@c @syncodeindex pr cp
@c @syncodeindex pv cp
@c @syncodeindex tp cp
@c @syncodeindex vr cp

@include texi/macros.texi

@ifnottex
@node Top
@top Mobile Application Part Interface
@end ifnottex

@menu
* Preface::
* Introduction::
* The Mobile Application Layer::
* MAPI Services Definition::
* MAPI Primitives::
* Diagnostics Requirements::
* References::
* Addendum for 3GPP Conformance::
* Mapping MAPI Primitives to 3GPP TS 29.002::
* State/Event Tables::
* Primitive Precedence Tables::
* MAPI Header File Listing::
* License::
@end menu

@node Preface
@unnumbered Preface

@section Security Warning

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and without fee or
royalty is hereby granted, provided that both the above copyright notice and this permission notice appears in all
copies and that the name of @cite{OpenSS7 Corporation} not be used in advertising or publicity pertaining to
distribution of this documentation or its contents without specific, written prior permission.  @cite{OpenSS7
Corporation} makes no representation about the suitability of this documentation for any purpose.  It is provided ``as
is'' without express or implied warranty.

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} disclaims all warranties with regard to this documentation including
all implied warranties of merchantability, fitness for a particular purpose, non-infringement, or title; that the
contents of the document are suitable for any purpose, or that the implementation of such contents will not infringe on
any third party patents, copyrights, trademarks or other rights.  In no event shall @cite{OpenSS7 Corporation} be liable
for any direct, indirect, special or consequential damages or any damages whatsoever resulting from loss of use, data or
profits, whether in an action of contract, negligence or other tortious action, arising out of or in connection with any
use of this document or the performance or implementation of the contents thereof.

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} is making this documentation available as a reference point for the
industry.  While @cite{OpenSS7 Corporation} believes that these interfaces are well defined in this release of the
document, minor changes may be made prior to products conforming to the interfaces being made available.

@section Abstract

This document is a @value{MANUAL_TYPE} containing technical details concerning the implementation of the
@value{MANUAL_TITLE} for OpenSS7.  It contains recommendations on software architecture as well as platform and system
applicability of the @value{MANUAL_TITLE}.

@section Purpose

The purpose of this document is to provide technical documentation of the @value{MANUAL_TITLE}.  This document
is intended to be included with the OpenSS7 @cite{STREAMS}
@cpindex STREAMS
software package released by @cite{OpenSS7 Corporation}.  It is intended to assist software developers, maintainers and
users of the @value{MANUAL_TITLE} with understanding the software architecture and technical interfaces that are
made available in the software package.

@section Intent

It is the intent of this document that it act as the primary source of information concerning the @value{MANUAL_TITLE}.

@section Audience

The audience for this document is software developers, maintainers and users and integrators of the
@value{MANUAL_TITLE}.

@section Disclaimer

Although the author has attempted to ensure that the information in this document is complete and correct, neither
the Author nor OpenSS7 Corporation will take any responsibility in it.

@section Revision History

Take care that you are working with a current version of this documentation: you will not be notified of updates.  To
ensure that you are working with a current version, check the @uref{http://www.openss7.org/,OpenSS7 Project} website for
a current version.

A printed (or postscript) version of this document is an UNCONTROLLED version.

@smallexample

$Log: mapi.texi,v $
Revision 0.9.2.6  2006/08/22 12:44:17  brian
- documentation updates

Revision 0.9.2.5  2006/01/04 08:04:14  brian
- corrected documentation


@end smallexample

@node Introduction
@chapter Introduction

This document specifies a @cite{STREAMS}-based
@cpindex STREAMS
kernel-level instantiation of the 3GPP GSM/UMTS TS.29002 Mobile Application Part (MAP) service definition.  The Mobile
Application Part Interface (MAPI) enables the user of a mobile application service to access and use a wide variety of
conforming mobile application service providers without specific knowledge of the provider's protocol.  The service
interface is designed to support any operation class of transaction protocol.  This interface only specifies access to
mobile application layer service providers, and does not address issues concerning mobile application layer management,
protocol performance, and performance analysis tools.

This specification assumes that the reader is familiar with the 3GPP GSM/UTMS reference points and protocol stacks,
Mobile Application Part services, and STREAMS.

@section Related Documentation

@itemize ---
@item @strong{3GPP TS 29.002 Mobile Application Part (MAP)}
@item @strong{3GPP TS 29.202}
@item @strong{1993 ITU-T Q.771 Recommendation}
@item @strong{System V Interface Definition, Issue 2 -- Volume 3}
@item @strong{CCITT Recommendation X.200}
@item @strong{CCITT Recommendation X.201}
@end itemize

@subsection Role

This document specifies an interface that support the service provided by the Mobile Applications Part (MAP)
specification for 3GPP GSM/UMTS as described in 3GPP TS 29.002.  These specifications are targeted for use by developers
and testers of protocol modules that require Mobile Applications Part services.

@section Definitions, Acronyms, Abbreviations

@table @dfn
@item Application Context
@item Object Identifier
@item Calling Party
The Calling Party.
@item Called Party
The Called Party.
@item Operations Class
One of 5 ISO/OSI Transport Protocol Classes.
@item MAP
Mobile Applications Part
@item TCAP
Transaction Capabilities Application Part
@item SCCP
Service Connection Control Part
@item MTP
Message Transfer Part
@item TR
Transaction Sub-Layer
@item TC
Component Sub-Layer
@item IMSI
International Mobile Station Identifier
@item MSISDN
Mobile Station ISDN Directory Number (E.164)
@item ITU
International Telecommunications Union
@item ITU-T
International Telecommunications Union -- Telecom Sector
@item OSI
Open Systems Interconnect
@item ISO
International Organization for Standardization
@item MAP User
A user of the Mobile Application Part (MAP) Interface.
@item MAP Provider
A provider of the Mobile Application Part (MAP) Interface.
@item MAPI
The Mobile Application Part (MAP) Interface.
@item MS
Mobile Station.
@item Components
Transaction components as defined in ITU-T Recommendation Q.771.
@item QoS
Quality of Service
@item STREAMS
@cpindex STREAMS
A communication services development facility first available with UNIX System V Release 3.
@end table

@node The Mobile Application Layer
@chapter The Mobile Application Layer

The Mobile Application Layer provides the means to manage the operation of a mobile network.  It is responsible for the
routing and management of data exchange between the MAP-User entities.

@section Model of the MAPI

The MAPI defines the services provided by the MAP layer to the MAP-User at the boundary between the MAP layer and the
MAP layer user entity.  The interface consists of a set of primitives defined as STREAMS messages that provide access to
the MAP layer services, and are transferred between the MAP user entity and the MAP provider.  These primitives are of
two types: ones that originate from the MAP user, and others that originate from the MAP provider.  The primitives that
originate from the MAP user make requests to the MAP provider, or respond to an event of the MAP provider.  The
primitives that originate from the MAP provider are either confirmation of a request or are indications to the MAP user
that the event has occurred.  @emph{Figure 1} shows the model of the MAPI.
(See @ref{Modelling Principles, , , ,3GPP TS 29.002 V6.6.0}.)

@cartouche
@center Figure 1 -- @emph{Module of the MAP Interface}
@image{mapi_fig,4in}
@end cartouche

The MAPI allows the MAP provider to be configured with any MAP user (such as an HLR, MSC or SGSN application) that also
conforms to the MAPI.  A MAP user can also be a user program that conforms to the MAPI and accesses the MAP provider
using @samp{putmsg()} and @samp{getmsg()} system calls.
@footnote{@xref{putmsg(2), , , *manpages*, The UNIX Manual Pages}, also @pxref{getmsg(2), , , *manpages*, The UNIX Manual Pages}.}

@section MAP Services

The features of the MAP are defined in terms of the services provided by the MAP provider, and the individual primitives
that may flow between the MAP users and the MAP provider.

The services provided by the MAP are based on a number of application contexts corresponding to the 3GPP TS 29.002
Mobile Application Part application contexts.  In addition, the MAP supports services for local management.

@itemize @bullet
@item Local Management
@item Common Services
@item Mobility Services
@end itemize

@subsection Local Management

The MAP specifications also define a set of local management functions that apply to all application contexts.  These
services have local significance only.

Tables 1 and 2 summarizes the MAPI service primitives by their state and service.

@subsection Common Services

@sp 2
@center @b{Table X.  Common Services}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_OPEN		@tab			@tab
@item MAP_DELIM		@tab			@tab
@item MAP_CLOSE		@tab			@tab
@item MAP_UABORT	@tab User		@tab User
@item MAP_PABORT	@tab Provider		@tab User
@item MAP_NOTICE	@tab			@tab
@item MAP_STC1		@tab			@tab
@item MAP_STC2		@tab			@tab
@item MAP_STC3		@tab			@tab
@item MAP_STC4		@tab			@tab
@end multitable

@subsection Specific Services

@sp 2
@center @b{Table 3.  Specific Services}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_ACTSS		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_ACTTM		@tab HLR		@tab VLR or SGSN
@item MAP_ALERTSC	@tab HLR		@tab SMS-IWMSC
@item MAP_ANYMOD	@tab SCF		@tab HLR
@item			@tab PNA		@tab VLR or SGSN
@item MAP_ANYSUB	@tab SCF		@tab HLR
@item MAP_AUTH		@tab VLR		@tab MSC
@item MAP_AUTHFAIL	@tab VLR or SGSN	@tab HLR
@item MAP_CANCLOC	@tab HLR		@tab VLR or SGSN
@item MAP_CKIEMI	@tab VLR		@tab MSC
@item			@tab MSC or SGSN	@tab EIR
@item MAP_DEACTSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_DEACTTM	@tab HLR		@tab VLR or SGSN
@item MAP_DELSUBD	@tab HLR		@tab VLR or SGSN
@item MAP_ERASECC	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_ERASESS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_FAILURE	@tab GGSN		@tab HLR
@item MAP_FAS		@tab MSC-A		@tab MSC-B
@item MAP_FCKSSIND	@tab HLR		@tab VLR
@item MAP_FGRCSIG	@tab Anchor MSC		@tab Relay MSC
@item MAP_MTFSMS	@tab SMS-GMSC		@tab MSC or SGSN
@item MAP_MOFSMS	@tab MSC		@tab SMS-IWMSC
@item MAP_GETPASS	@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_INFORMSC	@tab HLR		@tab SMS-GMSC
@item MAP_INSSUBSD	@tab HLR		@tab VLR or SGSN
@item MAP_INTERGSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_ISTALERT	@tab VMSC or GMSC	@tab HLR
@item MAP_ISTCMD	@tab HLR		@tab VMSC or GMSC
@item MAP_MMEVENT	@tab VLR or SGSN	@tab SCF
@item MAP_MSGPRSPRES	@tab HLR		@tab GGSN
@item MAP_SUBSDATAMOD	@tab HLR		@tab SCF
@item MAP_PREPGC	@tab Anchor MSC		@tab Relay MSC
@item MAP_PREPHO	@tab MSC-A		@tab MSC-B
@item MAP_PREPSH	@tab MSC-B		@tab MSC-A
@item MAP_PROCAS	@tab MSC		@tab VLR
@item MAP_PROCGC	@tab Relay MSC		@tab Anchor MSC
@item MAP_PROCUSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_PROVRN	@tab HLR		@tab VLR
@item MAP_PROVSLOC	@tab GMLC		@tab VMSC or SGSN
@item MAP_PROVSUBI	@tab VLR		@tab SGSN
@item MAP_PURGEMS	@tab VLR or SGSN	@tab HLR
@item MAP_RDYSM		@tab MSC		@tab VLR
@item			@tab VLR or SGSN	@tab HLR
@item MAP_REGCC		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_REGPW		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_REGSS		@tab MSC		@tab VLR
@item MAP_REMUSRFREE	@tab HLR		@tab VLR
@item MAP_SMDELIVSTAT	@tab SMS-GMSC		@tab HLR
@item MAP_RESET		@tab HLR		@tab VLR or SGSN
@item MAP_RESTORE	@tab VLR		@tab HLR
@item MAP_SENDGCEND	@tab Relay MSC		@tab Anchor MSC
@item MAP_SENDEND	@tab MSC-B		@tab MSC-A
@item MAP_SENDAUTHI	@tab VLR or SGSN	@tab HLR
@item MAP_SENDIMSI	@tab VLR		@tab MSC
@item MAP_SENDID	@tab VLR		@tab old VLR
@item MAP_SENDSMSRI	@tab SMS-GMSC		@tab HLR
@item MAP_SENDGPRSRI	@tab GGSN		@tab HLR
@item MAP_SENDLCSRI	@tab GMLC		@tab HLR
@item MAP_SENDRI	@tab GMSC or SCF	@tab HLR or NPLR
@item MAP_SETREP	@tab HLR		@tab VLR
@item MAP_STATUS	@tab VLR		@tab HLR
@item MAP_SUBLOCREP	@tab VMSC or SGSN	@tab GMLC
@c @item MAP_SSINV	@tab
@item MAP_USSDNTFY	@tab SCF		@tab HLR
@item			@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_USSDREQ	@tab SCF		@tab HLR
@item			@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_UDGPRSLOC	@tab SGSN		@tab HLR
@item MAP_UDLOC		@tab VLR		@tab HLR
@end multitable

@section Service Categories

@subsection Mobility Management

@subsubsection Location Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_UDLOC		@tab VLR		@tab HLR
@item MAP_CANCLOC	@tab HLR		@tab VLR or SGSN
@item MAP_SENDID	@tab VLR		@tab old VLR
@item MAP_PURGEMS	@tab VLR or SGSN	@tab HLR
@item MAP_UDGPRSLOC	@tab SGSN		@tab HLR
@item MAP_MMEVENT	@tab VLR or SGSN	@tab SCF
@end multitable

@subsubsection Paging and Search

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PAGE		@tab VLR		@tab MSC
@item MAP_SEARCH	@tab VLR		@tab MSC
@end multitable

@subsubsection Access Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PROCAS	@tab MSC		@tab VLR
@end multitable

@subsubsection Handover Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PREPHO	@tab MSC-A		@tab MSC-B
@item MAP_SENDEND	@tab MSC-B		@tab MSC-A
@item MAP_PROCAS	@tab MSC-B		@tab MSC-A
@item MAP_FAS		@tab MSC-A		@tab MSC-B
@item MAP_PREPSH	@tab MSC-B		@tab MSC-A
@item MAP_ALLOCHN	@tab MSC		@tab VLR
@item MAP_SENDHOREP	@tab VLR		@tab MSC-B
@end multitable

@subsubsection Authentication Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_AUTH		@tab VLR		@tab MSC
@item MAP_SENDAUTHI	@tab VLR or SGSN	@tab HLR
@item MAP_AUTHFAIL	@tab VLR or SGSN	@tab HLR
@end multitable

@subsubsection Security Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SETCM		@tab VLR		@tab MSC
@end multitable

@subsubsection IEMI Managment Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_CKIEMI	@tab VLR		@tab MSC
@item			@tab MSC or SGSN	@tab EIR
@item MAP_GETIEMI	@tab VLR		@tab MSC
@end multitable

@subsubsection Subscriber Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_INSSUBSD	@tab HLR		@tab VLR or SGSN
@item MAP_DELSUBD	@tab HLR		@tab VLR or SGSN
@end multitable

@subsubsection Identity Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PROVIMSI	@tab VLR		@tab MSC
@item MAP_FNEWIMSI	@tab VLR		@tab MSC
@end multitable

@subsubsection Fault Recovery Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_RESET		@tab HLR		@tab VLR or SGSN
@item MAP_FCKSSIND	@tab HLR		@tab VLR
@item MAP_RESTORE	@tab VLR		@tab HLR
@end multitable

@subsubsection Subscriber Information Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_ANYQRY	@tab SCF		@tab HLR or GMLC or NPLR
@item MAP_PROVSUBI	@tab VLR		@tab SGSN
@item MAP_ANYSUB	@tab SCF		@tab HLR
@item MAP_ANYMOD	@tab SCF		@tab HLR
@item			@tab PNA		@tab VLR or SGSN
@item MAP_SUBSDATAMOD	@tab HLR		@tab SCF
@end multitable

@subsection Operation and Maintenance
@subsubsection Subscriber Tracing Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_ACTTM		@tab HLR		@tab VLR or SGSN
@item MAP_DEACTTM	@tab HLR		@tab VLR or SGSN
@item MAP_TRACESA	@tab VLR		@tab MSC
@end multitable

@subsubsection Miscellaneous Operation and Maintenance Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDIMSI	@tab VLR		@tab MSC
@end multitable

@subsection Call Handling

@subsubsection Call Handling Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDRI	@tab GMSC or SCF	@tab HLR or NPLR
@item MAP_PROVRN	@tab HLR		@tab VLR
@item MAP_RESUME	@tab VMSC		@tab GMSC
@item MAP_PREPGC	@tab Anchor MSC		@tab Relay MSC
@item MAP_PROCGC	@tab Relay MSC		@tab Anchor MSC
@item MAP_FGRCSIG	@tab Anchor MSC		@tab Relay MSC
@item MAP_SENDGCEND	@tab Relay MSC		@tab Anchor MSC
@item MAP_SETREP	@tab HLR		@tab VLR
@item MAP_STATUS	@tab VLR		@tab HLR
@item MAP_REMUSRFREE	@tab HLR		@tab VLR
@item MAP_ISTALERT	@tab VMSC or GMSC	@tab HLR
@item MAP-ISTCMD	@tab HLR		@tab VMSC or GMSC
@end multitable

@subsection Supplementary Service

@subsubsection Supplementary Service Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_REGSS		@tab MSC		@tab VLR
@item MAP_ERASESS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_ACTSS		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_DEACTSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_INTERGSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_REGPW		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_GETPASS	@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_PROCUSS	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_USSDREQ	@tab SCF		@tab HLR
@item			@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_USSDNTFY	@tab SCF		@tab HLR
@item			@tab HLR		@tab VLR
@item			@tab VLR		@tab MSC
@item MAP_SSINV		@tab MSC or HLR		@tab SCF
@item MAP_REGCC		@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@item MAP_ERASECC	@tab MSC		@tab VLR
@item			@tab VLR		@tab HLR
@end multitable

@subsection SMS Management Services

@subsubsection Short Message Service Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDSMSRI	@tab SMS-GMSC		@tab HLR
@item MAP_MOFSMS	@tab MSC		@tab SMS-IWMSC
@item MAP_SMDELIVSTAT	@tab SMS-GMSC		@tab HLR
@item MAP_RDYSM		@tab MSC		@tab VLR
@item MAP_RDYSM		@tab VLR or SGSN	@tab HLR
@item MAP_ALERTSC	@tab HLR		@tab SMS-IWMSC
@item MAP_INFORMSC	@tab HLR		@tab SMS-GMSC
@item MAP_SENDMTSMSI	@tab MSC		@tab VLR
@item MAP_SENDMOSMSI	@tab MSC		@tab VLR
@item MAP_MTFSMS	@tab SMS-GMSC		@tab MSC or SGSN
@end multitable

@subsection Network-Requested PDP Context Activation

@subsubsection Network-Requested PDP Context Activation Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDGPRSRI	@tab GGSN		@tab HLR
@item MAP_FAILURE	@tab GGSN		@tab HLR
@item MAP_MSGPRSPRES	@tab HLR		@tab GGSN
@end multitable

@subsection Location Service Management

@subsubsection Location Service Management Services

@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDLCSRI	@tab GMLC		@tab HLR
@item MAP_PROVSLOC	@tab GMLC		@tab VMSC or SGSN
@item MAP_SUBLOCREP	@tab VMSC or SGSN	@tab GMLC
@end multitable

@section MAP User Entities

@subsection Mobile Switching Centre (MSC) Service Sets

@sp 2
@center @b{Table X.  MSC performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PAGE		@tab VLR		@tab MSC
@item MAP_SEARCH	@tab VLR		@tab MSC
@item MAP_SENDHOREP	@tab VLR		@tab MSC
@item MAP_AUTH		@tab VLR		@tab MSC
@item MAP_SETCM		@tab VLR		@tab MSC
@item MAP_CKIEMI	@tab VLR		@tab MSC
@item MAP_GETIEMI	@tab VLR		@tab MSC
@item MAP_PROVIMSI	@tab VLR		@tab MSC
@item MAP_FNEWIMSI	@tab VLR		@tab MSC
@item MAP_TRACESA	@tab VLR		@tab MSC
@item MAP_SENDIMSI	@tab VLR		@tab MSC
@item MAP_ISTCMD	@tab HLR		@tab MSC
@item MAP_GETPASS	@tab VLR		@tab MSC
@item MAP_USSDREQ	@tab VLR		@tab MSC
@item MAP_USSDNTFY	@tab VLR		@tab MSC
@item MAP_MTFSMS	@tab SMS-GMSC		@tab MSC
@item MAP_PROVSLOC	@tab GMLC		@tab MSC
@end multitable

@sp 2
@center @b{Table X.  MSC invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PROCAS	@tab MSC		@tab VLR
@item MAP_CKIEMI	@tab MSC		@tab EIR
@item MAP_ALLOCHN	@tab MSC		@tab VLR
@item MAP_RESUME	@tab MSC		@tab GMSC
@item MAP_ISTALERT	@tab MSC		@tab HLR
@item MAP_REGSS		@tab MSC		@tab VLR
@item MAP_ERASESS	@tab MSC		@tab VLR
@item MAP_ACTSS		@tab MSC		@tab VLR
@item MAP_DEACTSS	@tab MSC		@tab VLR
@item MAP_INTERGSS	@tab MSC		@tab VLR
@item MAP_REGPW		@tab MSC		@tab VLR
@item MAP_PROCUSS	@tab MSC		@tab VLR
@item MAP_SSINV		@tab MSC		@tab SCF
@item MAP_REGCC		@tab MSC		@tab VLR
@item MAP_ERASECC	@tab MSC		@tab VLR
@item MAP_MOFSMS	@tab MSC		@tab SMS-IWMSC
@item MAP_RDYSM		@tab MSC		@tab VLR
@item MAP_SENDMTSMSI	@tab MSC		@tab VLR
@item MAP_SENDMOSMSI	@tab MSC		@tab VLR
@item MAP_SUBLOCREP	@tab MSC		@tab GMLC
@end multitable

@sp 2
@center @b{Table X.  MSC peer services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PREPHO	@tab MSC-A		@tab MSC-B
@item MAP_SENDEND	@tab MSC-B		@tab MSC-A
@item MAP_PROCAS	@tab MSC-B		@tab MSC-A
@item MAP_FAS		@tab MSC-A		@tab MSC-B
@item MAP_PREPSH	@tab MSC-B		@tab MSC-A
@item MAP_PREPGC	@tab Anchor MSC		@tab Relay MSC
@item MAP_PROCGC	@tab Relay MSC		@tab Anchor MSC
@item MAP_FGRCSIG	@tab Anchor MSC		@tab Relay MSC
@item MAP_SENDGCEND	@tab Relay MSC		@tab Anchor MSC
@end multitable

@subsection Home Location Register (HLR) Service Sets

@sp 2
@center @b{Table 1.  HLR performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_UDLOC		@tab VLR		@tab HLR
@item MAP_PURGEMS	@tab VLR or SGSN	@tab HLR
@item MAP_UDGPRSLOC	@tab SGSN		@tab HLR
@item MAP_SENDAUTHI	@tab VLR or SGSN	@tab HLR
@item MAP_AUTHFAIL	@tab VLR or SGSN	@tab HLR
@item MAP_RESTORE	@tab VLR		@tab HLR
@item MAP_ANYQRY	@tab SCF		@tab HLR
@item MAP_ANYSUB	@tab SCF		@tab HLR
@item MAP_ANYMOD	@tab SCF		@tab HLR
@item MAP_SENDRI	@tab GMSC or SCF	@tab HLR
@item MAP_STATUS	@tab VLR		@tab HLR
@item MAP_ISTALERT	@tab VMSC or GMSC	@tab HLR
@item MAP_ERASESS	@tab VLR		@tab HLR
@item MAP_ACTSS		@tab VLR		@tab HLR
@item MAP_DEACTSS	@tab VLR		@tab HLR
@item MAP_INTERGSS	@tab VLR		@tab HLR
@item MAP_REGPW		@tab VLR		@tab HLR
@item MAP_PROCUSS	@tab VLR		@tab HLR
@item MAP_REGCC		@tab VLR		@tab HLR
@item MAP_ERASECC	@tab VLR		@tab HLR
@item MAP_SENDSMSRI	@tab SMS-GMSC		@tab HLR
@item MAP_SMDELIVSTAT	@tab SMS-GMSC		@tab HLR
@item MAP_RDYSM		@tab VLR or SGSN	@tab HLR
@item MAP_SENDGPRSRI	@tab GGSN		@tab HLR
@item MAP_FAILURE	@tab GGSN		@tab HLR
@item MAP_USSDREQ	@tab SCF		@tab HLR
@item MAP_SENDLCSRI	@tab GMLC		@tab HLR
@item MAP_USSDNTFY	@tab SCF		@tab HLR
@end multitable

@sp 2
@center @b{Table 2.  HLR invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_CANCLOC	@tab HLR		@tab VLR or SGSN
@item MAP_INSSUBSD	@tab HLR		@tab VLR or SGSN
@item MAP_DELSUBD	@tab HLR		@tab VLR or SGSN
@item MAP_RESET		@tab HLR		@tab VLR or SGSN
@item MAP_FCKSSIND	@tab HLR		@tab VLR
@item MAP_SUBSDATAMOD	@tab HLR		@tab SCF
@item MAP_ACTTM		@tab HLR		@tab VLR or SGSN
@item MAP_DEACTTM	@tab HLR		@tab VLR or SGSN
@item MAP_PROVRN	@tab HLR		@tab VLR
@item MAP_SETREP	@tab HLR		@tab VLR
@item MAP_REMUSRFREE	@tab HLR		@tab VLR
@item MAP_ISTCMD	@tab HLR		@tab VMSC or GMSC
@item MAP_GETPASS	@tab HLR		@tab VLR
@item MAP_USSDREQ	@tab HLR		@tab VLR
@item MAP_USSDNTFY	@tab HLR		@tab VLR
@item MAP_SSINV		@tab HLR		@tab SCF
@item MAP_ALERTSC	@tab HLR		@tab SMS-IWMSC
@item MAP_INFORMSC	@tab HLR		@tab SMS-GMSC
@item MAP_MSGPRSPRES	@tab HLR		@tab GGSN
@end multitable

@subsection Visitor Location Register (VLR) Service Sets

@sp 2
@center @b{Table 3.  VLR performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_CANCLOC	@tab HLR		@tab VLR
@item MAP_PROCAS	@tab MSC		@tab VLR
@item MAP_ALLOCHN	@tab MSC		@tab VLR
@item MAP_INSSUBSD	@tab HLR		@tab VLR
@item MAP_DELSUBD	@tab HLR		@tab VLR
@item MAP_SENDID	@tab VLR		@tab old VLR
@item MAP_RESET		@tab HLR		@tab VLR
@item MAP_FCKSSIND	@tab HLR		@tab VLR
@item MAP_ANYMOD	@tab PNA		@tab VLR
@item MAP_ACTTM		@tab HLR		@tab VLR
@item MAP_DEACTTM	@tab HLR		@tab VLR
@item MAP_PROVRN	@tab HLR		@tab VLR
@item MAP_SETREP	@tab HLR		@tab VLR
@item MAP_REMUSRFREE	@tab HLR		@tab VLR
@item MAP_REGSS		@tab MSC		@tab VLR
@item MAP_ERASESS	@tab MSC		@tab VLR
@item MAP_ACTSS		@tab MSC		@tab VLR
@item MAP_DEACTSS	@tab MSC		@tab VLR
@item MAP_INTERGSS	@tab MSC		@tab VLR
@item MAP_REGPW		@tab MSC		@tab VLR
@item MAP_GETPASS	@tab HLR		@tab VLR
@item MAP_PROCUSS	@tab MSC		@tab VLR
@item MAP_USSDREQ	@tab HLR		@tab VLR
@item MAP_USSDNTFY	@tab HLR		@tab VLR
@item MAP_REGCC		@tab MSC		@tab VLR
@item MAP_ERASECC	@tab MSC		@tab VLR
@item MAP_RDYSM		@tab MSC		@tab VLR
@item MAP_SENDMTSMSI	@tab MSC		@tab VLR
@item MAP_SENDMOSMSI	@tab MSC		@tab VLR
@end multitable

@sp 2
@center @b{Table 4.  VLR invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_UDLOC		@tab VLR		@tab HLR
@item MAP_SENDID	@tab VLR		@tab old VLR
@item MAP_PURGEMS	@tab VLR		@tab HLR
@item MAP_MMEVENT	@tab VLR		@tab SCF
@item MAP_PAGE		@tab VLR		@tab MSC
@item MAP_SEARCH	@tab VLR		@tab MSC
@item MAP_SENDHOREP	@tab VLR		@tab MSC-B
@item MAP_AUTH		@tab VLR		@tab MSC
@item MAP_SENDAUTHI	@tab VLR		@tab HLR
@item MAP_AUTHFAIL	@tab VLR		@tab HLR
@item MAP_SETCM		@tab VLR		@tab MSC
@item MAP_CKIEMI	@tab VLR		@tab MSC
@item MAP_GETIEMI	@tab VLR		@tab MSC
@item MAP_PROVIMSI	@tab VLR		@tab MSC
@item MAP_FNEWIMSI	@tab VLR		@tab MSC
@item MAP_RESTORE	@tab VLR		@tab HLR
@item MAP_PROVSUBI	@tab VLR		@tab SGSN
@item MAP_TRACESA	@tab VLR		@tab MSC
@item MAP_SENDIMSI	@tab VLR		@tab MSC
@item MAP_STATUS	@tab VLR		@tab HLR
@item MAP_ERASESS	@tab VLR		@tab HLR
@item MAP_ACTSS		@tab VLR		@tab HLR
@item MAP_DEACTSS	@tab VLR		@tab HLR
@item MAP_INTERGSS	@tab VLR		@tab HLR
@item MAP_REGPW		@tab VLR		@tab HLR
@item MAP_GETPASS	@tab VLR		@tab MSC
@item MAP_PROCUSS	@tab VLR		@tab HLR
@item MAP_USSDREQ	@tab VLR		@tab MSC
@item MAP_USSDNTFY	@tab VLR		@tab MSC
@item MAP_REGCC		@tab VLR		@tab HLR
@item MAP_ERASECC	@tab VLR		@tab HLR
@item MAP_RDYSM		@tab VLR		@tab HLR
@end multitable

@subsection Equipment Identity Register (EIR) Service Sets

@sp 2
@center @b{Table X.  EIR performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_CKIEMI	@tab MSC or SGSN	@tab EIR
@end multitable

@subsection Serving GPRS Support Node (SGSN) Service Sets

@sp 2
@center @b{Table X.  SGSN performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_CANCLOC	@tab HLR		@tab SGSN
@item MAP_INSSUBSD	@tab HLR		@tab SGSN
@item MAP_DELSUBD	@tab HLR		@tab SGSN
@item MAP_RESET		@tab HLR		@tab SGSN
@item MAP_PROVSUBI	@tab VLR		@tab SGSN
@item MAP_ANYMOD	@tab PNA		@tab SGSN
@item MAP_ACTTM		@tab HLR		@tab SGSN
@item MAP_DEACTTM	@tab HLR		@tab SGSN
@item MAP_MTFSMS	@tab SMS-GMSC		@tab SGSN
@item MAP_PROVSLOC	@tab GMLC		@tab SGSN
@end multitable

@sp 2
@center @b{Table X.  SGSN invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_PURGEMS	@tab SGSN		@tab HLR
@item MAP_UDGPRSLOC	@tab SGSN		@tab HLR
@item MAP_MMEVENT	@tab SGSN		@tab SCF
@item MAP_SENDAUTHI	@tab SGSN		@tab HLR
@item MAP_AUTHFAIL	@tab SGSN		@tab HLR
@item MAP_CKIEMI	@tab SGSN		@tab EIR
@item MAP_RDYSM		@tab SGSN		@tab HLR
@item MAP_SUBLOCREP	@tab SGSN		@tab GMLC
@end multitable

@subsection Gateway GPRS Support Node (GGSN) Service Sets

@sp 2
@center @b{Table X.  GGSN performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_MSGPRSPRES	@tab HLR		@tab GGSN
@end multitable

@sp 2
@center @b{Table X.  GGSN invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDGPRSRI	@tab GGSN		@tab HLR
@item MAP_FAILURE	@tab GGSN		@tab HLR
@end multitable

@subsection Interworking MSC (IWMSC) for Short Message Service Service Sets

@sp 2
@center @b{Table X.  SMS-IWMSC performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_MOFSMS	@tab MSC		@tab SMS-IWMSC
@item MAP_ALERTSC	@tab HLR		@tab SMS-IWMSC
@end multitable

@subsection Gateway MSC (GMSC) for Short Message Service Service Sets

@sp 2
@center @b{Table X.  SMS-GMSC performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_INFORMSC	@tab HLR		@tab SMS-GMSC
@end multitable

@sp 2
@center @b{Table X.  SMS-GMSC invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDSMSRI	@tab SMS-GMSC		@tab HLR
@item MAP_SMDELIVSTAT	@tab SMS-GMSC		@tab HLR
@item MAP_MTFSMS	@tab SMS-GMSC		@tab MSC or SGSN
@end multitable

@subsection Gateway Mobile Location Center (GMLC) Service Sets

@sp 2
@center @b{Table X.  GMLC performed services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_ANYQRY	@tab SCF		@tab GMLC
@item MAP_SUBLOCREP	@tab VMSC or SGSN	@tab GMLC
@end multitable

@sp 2
@center @b{Table X.  GMLC invoked services.}
@multitable @columnfractions .4 .3 .3
@item @b{Service}	@tab @b{Invoker}	@tab @b{Performer}
@item MAP_SENDLCSRI	@tab GMLC		@tab HLR
@item MAP_PROVSLOC	@tab GMLC		@tab VMSC or SGSN
@end multitable

@node MAPI Services Definition
@chapter MAPI Services Definition

This chapter describes the services of the MAP primitives.  Time-sequence diagrams that illustrate the sequence of
primitives is included.  (Conventions for the time-sequence diagrams are defined in ITU-T X.210).  The format of the
primitives will be defined later in the document.

@section Local Management Services Definition

The services defined in this section are outside the scope of the international standards.  These services apply to all
applications contexts and specific service primitives.  They are invoked for the initialization or de-initialization of
a stream connected to the MAP provider.  They are also used to manage options supported by the MAP provider and to
report information on the supported parameter values.

@subsection MAP Information Reporting Service

This service provides information on the options supported by the MAP provider.

@itemize @bullet
@item @code{MAP_INFO_REQ}:
This primitive requests that the MAP provider return the values of all the supported protocol parameters.  This request
may be invoked during any phase.
@item @code{MAP_INFO_ACK}:
This primitive is in response to the @code{MAP_INFO_REQ} primitive and returns the values of the supported protocol
parameters to the MAP user.
@end itemize

The sequence of primitives for mobile application part information management is shown in Figure 2.

@cartouche
@center @b{Figure 2.  Sequence of Primitives;}
@center @b{MAP Information Reporting Serivce}
@end cartouche

@subsection MAP User Bind Service

The service allows a network address and application contexts to be associated with a stream.  It allows the MAP user
to negotiate the number of dialogues that can remain outstanding for that MAP user (a dialogue is considered
unacknowledged while it is awaiting a corresponding response or abort from the MAP user).  This service also defines
a mechanism that allows a stream (bound to a network address of the MAP user) to be reserved to handle remote initiated
dialogues only.  This stream is referred to as the listener stream.

@itemize @bullet
@item @code{MAP_BIND_REQ}:
This primitive requests that the MAP user be bound to a particular network address and application context, and
negotiate the number of allowable outstanding open indications for that address.
@item @code{MAP_BIND_ACK}:
This primitive is in response to the @code{MAP_BIND_REQ} primitive and indicates to the user that the specified MAP
user has been bound to a network address and application context.
@end itemize

The sequence of primitives for the MAP user bind service is shown in Figure 3.

@cartouche
@center @b{Figure 2.  Sequence of Primitives;}
@center @b{MAP User Bind Service}
@end cartouche

@subsection MAP User Unbind Service

This service allows the MAP user to be unbound from a network address and application context.

@itemize @bullet
@item @code{MAP_UNBIND_REQ}:
This primitive requests that the MAP user be unbound from the network address and application context(s) to which it was
previously bound.
@end itemize

The sequence of primitives for MAP user unbind service is shown in Figure 4.

@cartouche
@center @b{Figure 4.  Sequence of Primitives;}
@center @b{MAP User Unbind & Receipt Acknowledgement Services}
@end cartouche

@subsection Receipt Acknowledgement Service

@itemize @bullet
@item @code{MAP_OK_ACK}:
This primitive indicates to the MAP user that the previous MAP user originated primitive was received successfully by
the MAP provider.
@end itemize

An example showing the sequence of primitives for successful receipt acknowledgement is depicted in Figure 4.

@subsection Options Management Service

This service allows the MAP user to manage the QOS parameter values and other options associated with the MAP provider.

@itemize @bullet
@item @code{MAP_OPTMGMT_REQ}:
This primitive allows the MAP user to select default values for QoS parameters within the range supported by the MAP
provider, and to indicate the default selection of additional options supported by the MAP provider.
@end itemize

Figure 5 shows the sequence of primitives for MAP options management service.

@cartouche
@center @b{Figure 5.  Sequence of Primitives;}
@center @b{Options Management Service.}
@end cartouche

@subsection Error Acknowledgement Service

@itemize @bullet
@item @code{MAP_ERROR_ACK}:
This primitive indicates to the MAP user that a non-fatal error has occurred in the last MAP user originated request or
response primitive (listed in Figure 6), on the stream.
@end itemize

Figure 6 shows the sequence of primitives for the error acknowledgement service.

@cartouche
@center @b{Figure 6.  Sequence of Primitives;}
@center @b{Error Acknowledgement Service.}
@end cartouche

@section Dialogue Handling Definition

This section describes the required MAP service primitives that define the Dialogue Handling interface.

The queue model for Dialogue Handling is discussed in more detail in CCITT X.219.

The queue module represents the operation of a MAP dialogue in the abstract by a pair of queues linking the two MAP
user entities.  There is one queue for each direction of information flow.  Each queue represents a flow control
function in one direction of transfer.  The ability of a user to add objects to a queue will be determined by the
behaviour of the user removing objects from that queue, and the state of the queue.  The pair of queues is considered to
be available for each potential MAP dialogue.  Objects that are entered or removed from the queue are either as a result
of interactions at the two MAP users, or as a result of MAP provider initiatives.

@itemize @bullet
@item A queue is empty until a dialogue object has been entered and can be returned to this state, with loss of its
contents, by the MAP provider.
@item Objects can be entered into a queue as a result of the actions of the source MAP user, subject to control by the
MAP provider.
@item Objects may also be entered into a queue by the MAP provider.
@item Objects are removed from the queue under the control of the MAP user in n the same order as they were entered
except:
@itemize ---
@item if the object is of a type defined to be able to advance ahead of the preceding object (however, no object is
defined to be able to advance ahead of another object of the same type), or
@item if the following object is defined to be destructive with respect to the preceding object on the queue.  If
necessary, the last object on the queue will be deleted to allow a destructive object to be entered -- the will
therefore always be added to the queue.  For example, ``abort'' objects are defined to be destructive with respect to
all other objects.
@end itemize
@end itemize

Table Y shows the ordering relationships among the queue model objects.

@sp 1
@center @b{Table Y.  Ordering Relationship Between Queue Model Objects.}

@multitable {Components}{Open}{Components}{Delimiter}{Close}{Abort}
@item @b{Object X}
@item @b{Object Y}	@tab @b{Open}	@tab @b{Components}	@tab @b{Delimiter}	@tab @b{Close}	@tab @b{Abort}
@item @b{Open}		@tab N/A	@tab --			@tab --			@tab DES	@tab 
@item @b{Components}	@tab N/A	@tab --			@tab --			@tab DES	@tab 
@item @b{Deilmiter}	@tab N/A	@tab --			@tab --			@tab DES	@tab 
@item @b{Close}		@tab N/A	@tab --			@tab --			@tab DES	@tab 
@item @b{Abort}		@tab N/A	@tab N/A		@tab N/A		@tab --		@tab 
@end multitable
@table @dfn
@item AA
Indicates that Object X is defined to be able to advance ahead of preceding Object Y.
@item DES
Indicates that Object X is defined to be destructive with respect to the preceding Object Y.
@item --
Indicates that Object X is neither destructive with respect to Object Y, nor able to advance ahead of Object Y.
@item N/A
Indicates that Object X will not occur in a position succeeding Object Y in a valid state of a queue.
@end table

@subsection Dialogue Establishment Phase

A pair of queues is associated with a MAP dialogue between two MAP user entities when the MAP provider receives a
@code{MAP_OPEN_REQ} primitive at one of the MAP user interfaces resulting in the ``begin'' object being entered into
the queue.  The queues will remain associated with the MAP dialogue until a @code{MAP_CLOSE_REQ} or @dfn{indication}
primitive (resulting in an ``end'' object) is either entered or removed from a queue.  Similarly, in the queue from the
called MAP user, objects can be entered into the queue only after the ``continue'' object associated with the
@code{MAP_OPEN_RES} primitive has been entered into the queue.  Alternatively, the called MAP user can enter a
an ``end'' or ``abort'' object into the queue instead of the ``continue'' object to terminate the dialogue.

The MAP dialogue establishment procedure will fail if the MAP provider is unable to establish a TCAP dialogue, or if the
destination MAP user is unable to accept the @code{MAP_OPEN_IND}.
@c (see NC Release primitive definition).

@subsubsection User Primitives for Successful MAP Dialogue Establishment

@itemize @bullet
@item @code{MAP_OPEN_REQ}:
This primitive requests that the MAP provider establish a dialogue to the specified destination under an application
context.
@item @code{MAP_OPEN_RES}:
This primitives requests that the MAP provider accept a previous dialogue indication.
@end itemize

@subsubsection Provider Primitives for Successful MAP Dialogue Establishment

@itemize @bullet
@item @code{MAP_OPEN_IND}:
This primitive indicates to the MAP user that a dialogue request has been made within an application context by a user
at the specified source address.
@item @code{MAP_OPEN_CON}:
This primitive indicates to the MAP user that a dialogue request has been confirmed on the specified responding address.
@end itemize

The sequence of primitives for a successful MAP dialogue establishment is defined by the time sequence diagram as shown
in Figure 7.  The sequence of primitives for the MAP dialogue response token value determination is shown in Figure 8
(procedures for MAP response token value determination are discussed later).

@cartouche
@center @b{Figure 7.  Sequence of Primitives;}
@center @b{Successful MAP Dialogue Establishment}
@end cartouche

@cartouche
@center @b{Figure 8.  Sequence of Primitives;}
@center @b{MAP Dialogue Response Token Value Determination}
@end cartouche


@subsection Dialogue Component Transfer Phase

Flow control within the MAP dialogue is performed by management of the queue capacity, and by allowing objects of
certain types to be inserted to the queues as shown in Table 4.

@center @b{Table 4.  Flow Control Relationship Between Queued Model Objects}

@multitable @columnfractions .20 .20 .20 .20 .20
@item @b{Object X}
@item @b{Object Y}	@tab Class 1	@tab Class 2	@tab Class 3	@tab Class 4
@item @b{Class 1}	@tab Yes	@tab Yes	@tab Yes	@tab Yes
@item @b{Class 2}	@tab Yes	@tab Yes	@tab Yes	@tab Yes
@item @b{Class 3}	@tab Yes	@tab Yes	@tab Yes	@tab Yes
@item @b{Class 4}	@tab Yes	@tab Yes	@tab Yes	@tab Yes
@end multitable

@table @dfn
@item Yes
The addition of Object X may prevent further addition of Object Y.
@item No
The addition of Object X may not prevent the addition of Object Y.
@end table

@subsubsection User Primitives for Component Transfer

@itemize @bullet
@item @b{Service Specific Requests}:
These primitives request that the MAP provider invoke a service and transfer the specified (and any subsequent)
components.
@item @b{Service Specific Responses}:
These primitives request that the MAP provider return result for a service invocation and transfer the specified
(and any subsequent) components.
@item @code{MAP_DELIM_IND}:
This primitive requests that the MAP provider deliver any accumulated components from previous service specific request
or response primitives.
@end itemize

@subsubsection Provider Primitives for Component Transfer

@itemize @bullet
@item @b{Service Specific Indications}:
These primitives indicate to the MAP user an invocation and the indicated (and any
subsequent) components.
@item @b{Service Specific Confirmations}:
These primitives indicate to the MAP user a return result and the indicated (and any subsequent) components.
@item @code{MAP_DELIM_IND}:
This primitive indicates that the MAP provider has delivered any accumulated components belonging to the previous service
specific indication or confirmation primitive.
@end itemize

Figure 9 shows the sequence of primitives for successful component transfer.  The sequence of primitives may remain
incomplete if a @code{MAP_ABORT} or @code{MAP_CLOSE} primitive occurs.

@cartouche
@center @b{Figure 9.  Sequence of Primitives;}
@center @b{Component Transfer.}
@end cartouche

The sequence of primitives in a successful Class 1 operation is defined in the time sequence diagram as shown in Figure
10.

@cartouche
@center @b{Figure 10.  Sequence of Primitives;}
@center @b{Successful Confirmation of Receipt.}
@end cartouche

The sequence of primitives as shown above may remain incomplete if a @code{MAP_UABORT}, @code{MAP_PABORT} or
@code{MAP_CLOSE} primitive occurs (see Table 3).  A MAP user must not issue a @dfn{Service Specific Response} primitive
if no @dfn{Service Specific Indication} primitive for a confirmed service has been received, or if all such @dfn{Service
Specific Indication} primitives have been previously confirmed.  Following a @code{MAP_UABORT} or @code{MAP_PABORT}, a
MAP user may not issue a @dfn{Service Specific Response} to confirm outstanding @dfn{Service Specific Indication}
primitives received before the abort procedure was signalled.

@b{Note} --- The witholding of confirmation of a service by a MAP user can have an effect on the attainable throughput.

The sequence of primitives for component transfer is shown in the time sequence diagram in Figure 11.  This sequence of
primitives may remain incomplete if a @code{MAP_ABORT} or @code{MAP_CLOSE} primitive is issued.

@cartouche
@center @b{Figure 11.  Sequence of Primitives;}
@center @b{Expedited Data Transfer.}
@end cartouche

@subsection Dialogue Termination Phase

The MAP dialogue release procedure is initialized by the insertion of an ``abort'' or ``end'' object into the queue.
As shown in Table 3, the ``abort'' is destructive with respect to other objects in the queue, and eventually results in
the emptying of queues and termination of the MAP dialogue.

The sequence of primitivies depends on the origin of the release action.  The sequence of primitives may be:

@enumerate
@item invoked by one MAP user, with a request from that MAP user leading to an indication to the other;
@item invoked by both MAP users, with a request from each of the MAP users;
@item invoked by the MAP provider, with an indication to each of the MAP users;
@item invoked independently by one MAP user and the MAP provider, with a request from the originating MAP user and an
indication to the other.
@end enumerate

@subsubsection User Primitives for Dialogue Abort

@itemize @bullet
@item @code{MAP_ABORT_REQ}:
This primitive requests that the MAP provider deny an outstanding request for an association (@code{MAP_OPEN_IND}) or
abort an existing association.
@end itemize

@subsubsection Provider Primitives for Dialogue Abort

@itemize @bullet
@item @code{MAP_UABORT_IND}:
This primitive indicates to the MAP user that either a request for association has been denied or an existing
association has been terminated.
@item @code{MAP_PABORT_IND}:
This primitive indicates to the MAP user that either a request for association has been denied or an existing
association has been terminated.
@end itemize

The sequence of primitives are shown in the time sequence diagrams in n Figures 16, 17, 18 and 19.

@cartouche
@center @b{Figure 16.  Sequence of Primitives;}
@center @b{MAP User Invoked Abort.}
@end cartouche

@cartouche
@center @b{Figure 17.  Sequence of Primitives;}
@center @b{Simultaneous MAP User Invoked Abort.}
@end cartouche

@cartouche
@center @b{Figure 18.  Sequence of Primitives;}
@center @b{MAP Provider Invoked Abort.}
@end cartouche

@cartouche
@center @b{Figure 19.  Sequence of Primitives;}
@center @b{Simultaneous MAP User and MAP Provider Invoked Abort.}
@end cartouche

A MAP user may reject a MAP association establishment by issuing a @code{MAP_ABORT_REQ}.  The originator parameter in
the @code{MAP_UABORT_IND} primitive will indicate MAP user invoked release.  The sequence of events is shown in Figure
20.

@cartouche
@center @b{Figure 20.  Sequence of Primitives;}
@center @b{MAP User Rejection of a MAP Association Establishment Attempt.}
@end cartouche

If the MAP provider is unable to establish a MAP association, it indicates this to the requester by a
@code{MAP_PABORT_IND}.  The originator in this primitive indicates a MAP provider invoked release.  This is shown in
Figure 21.

@cartouche
@center @b{Figure 21.  Sequence of Primitives;}
@center @b{MAP Provider Rejection of a MAP Association Establishement Attempt.}
@end cartouche

@node MAPI Primitives
@chapter MAPI Primitives

This section describes the format and parameters of the MAPI primitives (Appendix A shows the mapping of the MAPI
primitives to the primitives defined in 3GPP TS 29.002 and ANSI41-D).  Also, it discusses the states in which the
primitive is valid, the resulting state and the acknowledgement that the primitive expects.  (The state/event tables for
these primitives are shown in Appendix B.  The precedence tables for the MAPI primitives are shown in Appendix C.)
Rules for 3GPP and ANSI conformance are described in Addendum to this document.

@sp 1
@center @b{Tabel 4. Local Management Service Primitives.}
@multitable @columnfractions .2 .3 .5
@item @b{SERVICE} @tab @b{PRIMITIVE} @tab @b{PARAMETERS}
@item Information	@tab @code{MAP_INFO_REQ}	@tab
@item Reporting		@tab @code{MAP_INFO_ACK}	@tab
@item Bind		@tab @code{MAP_BIND_REQ}	@tab
@item			@tab @code{MAP_BIND_ACK}	@tab
@item Unbind		@tab @code{MAP_UNBIND_REQ}	@tab
@item Error		@tab @code{MAP_ERROR_ACK}	@tab
@item Success		@tab @code{MAP_OK_ACK}		@tab
@end multitable

Tables 5, 6 and 7 provide a summary of the MAP primitives and their parameters.

@sp 1
@center @b{Table 5.  Association Establishment MAP Service Primitives.}
@multitable @columnfractions .2 .3 .5
@item @b{SERVICE} @tab @b{PRIMITIVE} @tab @b{PARAMETERS}
@item Association	@tab @code{MAP_OPEN_REQ}	@tab
(Application context name, Destination address, Destination reference, Originating address, Originating reference, Specific information)
@item Establishment	@tab @code{MAP_OPEN_IND}	@tab
(Application context name, Destination address, Destination reference, Originating address, Originating reference, Specific information)
@item			@tab @code{MAP_OPEN_RES}	@tab
(Application context name, Responding address, Result, Refuse-reason, Specific information)
@item			@tab @code{MAP_OPEN_CON}	@tab
(Application context name, Responding address, Result, Refuse-reason, Specific information, Provider-error)
@end multitable

@sp 1
@center @b{Table 6.  Component Transfer Service Primitives.}
@multitable @columnfractions .2 .3 .5
@item @b{SERVICE} @tab @b{PRIMITIVE} @tab @b{PARAMETERS}
@item Service		@tab @code{MAP_@i{XXX}_REQ}	@tab
(Specific information)
@item Specific		@tab @code{MAP_@i{XXX}_IND}	@tab
(Specific information)
@item Primitives	@tab @code{MAP_@i{XXX}_RES}	@tab
(Specific information)
@item			@tab @code{MAP_@i{XXX}_CON}	@tab
(Specific information)
@item Delimitation	@tab @code{MAP_DELIM_REQ}	@tab
(none)
@item			@tab @code{MAP_DELIM_IND}	@tab
(none)
@end multitable

@sp 1
@center @b{Table 7.  Association Termination MAP Service Primitives.}
@multitable @columnfractions .2 .3 .5
@item @b{SERVICE} @tab @b{PRIMITIVE} @tab @b{PARAMETERS}
@item Association	@tab @code{MAP_CLOSE_REQ}	@tab
(Release method, Specific information)
@item Termination	@tab @code{MAP_CLOSE_IND}	@tab
(Specific information)
@item Assocation	@tab @code{MAP_ABORT_REQ}	@tab
(User reason, Diagnostic information, Specific information)
@item Abort		@tab @code{MAP_UABORT_IND}	@tab
(User reason, Diagnostic information, Specific information)
@item Abort		@tab @code{MAP_PABORT_IND}	@tab
(Provider reason, Source)
@item Notice		@tab @code{MAP_NOTICE_IND}	@tab
()
@end multitable

@sp 1
@center @b{Table 8.  Secure Transport Primitives.}
@multitable @columnfractions .2 .3 .5
@item @b{SERVICE} @tab @b{PRIMITIVE} @tab @b{PARAMETERS}
@item Class 1		@tab @code{MAP_STC1_REQ}	@tab
@item			@tab @code{MAP_STC1_IND}	@tab
@item Class 2		@tab @code{MAP_STC2_REQ}	@tab
@item			@tab @code{MAP_STC2_IND}	@tab
@item Class 3		@tab @code{MAP_STC3_REQ}	@tab
@item			@tab @code{MAP_STC3_IND}	@tab
@item Class 4		@tab @code{MAP_STC4_REQ}	@tab
@item			@tab @code{MAP_STC4_IND}	@tab
@end multitable

@page
@section Management Primitives

These primitives appy to all protocol classes.

@node MAP_INFO_REQ
@subsection Information Request
@subheading MAP_INFO_REQ
@prindex MAP_INFO_REQ

This primitive requests the MAP provider to return the values of all supported protocol parameters
(@pxref{MAP_INFO_ACK}), and also the current state of the MAP provider.
@footnote{The @code{MAP_INFO_REQ} and @code{MAP_INFO_ACK} primitives have no effect on the state of the MAP provider and
do not appear in the state tables in @ref{State/Event Tables}.}

@subsubheading Format

The format of the message is one @samp{M_PROTO} message block and its structure is as follows:

@smallexample
typedef struct @{
        ulong PRIM_type;    /* always MAP_INFO_REQ */
@} MAP_info_req_t;
@tpindex MAP_info_req_t
@end smallexample

@subsubheading Parameters

@table @var
@item PRIM_type:
Indicates the primitive type.
@end table

@subsubheading Valid States

This primitive is valid in any state where a local acknowledgement is not pending.

@subsubheading New State

The new state remains unchanged from the old state.

@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledgements upon receipt of the
pirmitive:

@itemize ---
@item @b{Successful:}
Acknowledgement of the primitive with the @code{MAP_INFO_ACK} primitive described in @ref{MAP_INFO_ACK}.
@item @b{Non-fatal Errors:}
There are no errors associated with the issuance of this primitive.
@end itemize

@page
@node MAP_INFO_ACK
@subsection Information Acknowledgement
@subheading MAP_INFO_ACK
@prindex MAP_INFO_ACK

This primitive indicates to the MAP users any relevant protocol-dependent parameters.
@footnote{}
It should be initiated in response to the @code{MAP_INFO_REQ} primitive described above in @ref{MAP_INFO_REQ}.

@subsubheading Format

The format of the message is one @samp{M_PCPROTO} message block.  The format of the @samp{M_PCPROTO} message block is as
follows:

@smallexample
typedef struct @{
    ulong PRIM_type;        /* always MAP_INFO_ACK */
    ulong TSDU_size;        /* maximum TSDU size */
    ulong ETSDU_size;       /* maximum ETSDU size */
    ulong CDATA_size;       /* connect data size  */
    ulong DDATA_size;       /* disconnect data size */
    ulong ADDR_size;        /* address size */
    ulong ADDR_length;      /* address length */
    ulong ADDR_offset;      /* address offset */
    ulong QOS_length;       /* default QOS values length */
    ulong QOS_offset;       /* default QOS values offset */
    ulong QOS_range_length; /* QOS range length */
    ulong QOS_range_offset; /* QOS range offset */
    ulong OPTIONS_flags;    /* bit masking for options */
    ulong TIDU_size;        /* transaction interface data size */
    long  SERV_type;        /* service type */
    ulong CURRENT_state;    /* current state */
    ulong PROVIDER_type;    /* type of provider */
    ulong NODU_size;        /* optimal TSDU size */
    ulong PROTOID_length;   /* length of bound protocol ids */
    ulong PROTOID_offset;   /* offset of bound protocol ids */
    ulong MAPI_version;     /* supported MAPI version number */
@} MAP_info_ack_t;
@tpindex MAP_info_ack_t
@end smallexample

@subsubheading Parameters

@table @emph
@item PRIM_type
Indicates the primitive type.
@item TSDU_size
Specifies the maximum size (in octets) of Transaction Service User Data supported by the MAP provider.
@item ETSDU_size
Specifies the maximum size (in octets) of Expedited Transaction Service User Data supported by the MAP provider.
@item CDATA_size
Specifies the maximum number of octets of data that may be associated with a transaction initiation primitive for
operations class 1, 2 and 3 operation.
@item DDATA_size
Specifies the maximum number of octets of data that may be associated with a transaction termination primitive for
operations class 1, 2 and 3 operation.
@item ADDR_size
Specifies the maximum size (in decimal digits) of a network address.
@item ADDR_length, ADDR_offset
Specifies the length in bytes and offset from the beginning of the @code{M_PCPROTO} message block of the network address
bound on the stream on which the @code{MAP_INFO_REQ} was issued (a network address is bound to a stream via a
@code{MAP_BIND_REQ}).
@item QOS_length, QOS_offset

@item QOS_range_length, QOS_range_offset

@item OPTIONS_flags

@item TIDU_size@footnote{This is the amount of user components that may be present in a single service specific primitive.}
This is the size of the MAP protocol interface data unit, and should not exceed the tunable system limit, if non-zero,
for the size of a STREAMS message.
@item SERV_type
This field specified the service type supported by the MAP provider, and is one of the following:
@item CURRENT_state
THis is the current state of the MAP provider.
@item PROVIDER_type
This field specifies additional properties specific to the MAP provider and may alter the way the MAP user communicates.
MAP providers supporting the features of XTI in XPG4 and beyond must send up a version number as specified below.  The
following flags may be set by the provider:
@table @code
@item SENDZERO
This flag indicates that the MAP provider support the sending of zero-length (component-less) TSDUs.
@item XPG4_1
This indicates that the MAP provider conforms to XTI in XPG4 and supports primitives @code{MAP_ADDR_REQ} and
@code{MAP_ADDR_ACK}.
@end table

@item TODU_size

@item PROTOID_length, PROTOID_offset

@item MAPI_version
@end table

@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@subsubheading Rules

The following rules apply when the type of service is operations class 4:

@itemize ---
@item The @var{ETSDU_size}, @var{CDATA_size} and @var{DDATA_size} fields should be @samp{-2}.
@item The @var{TSDU_size} should be equal to the @var{TIDU_size}.
@end itemize

@page
@node MAP_BIND_REQ
@subsection Bind Application Context Request
@subheading MAP_BIND_REQ
@prindex MAP_BIND_REQ

This primitive requests that the MAP provider bind a protocol address to the @dfn{stream}, negotiate the number of
dialogue open indications allowed to be outstanding by the MAP provider for the specified protocol address, and activate
@footnote{A @dfn{stream} is viewed as active when the MAP provider may receive and transmit components (Trasaction
Protocol Data Units) associated with the @dfn{stream}}
the @dfn{stream} associated with the protocol address.

@subsubheading Format

The format of the message is one @samp{M_PROTO} message block.  The format of the @samp{M_PROTO} message block is as
follows:

@smallexample
typedef struct @{
    ulong PRIM_type;                /* always MAP_BIND_REQ */
    ulong ADDR_length;              /* length of protocol address */
    ulong ADDR_offset;              /* offset of protocol address */
    unsigned long DIAIND_number;    /* requested number of dialogue indications to be queued */
@} MAP_bind_req_t;
@tpindex MAP_bind_req_t
@end smallexample

@subsubheading Parameters

@vtable @var
@item PRIM_type
Indicates the primitive type.
@item ADDR_length
The length
@footnote{All lengths, offsets and sizes in all structures refer to the number of bytes.}
of the protocol address to be bound to the @dfn{stream}.
@item ADDR_offset
The offset from the beiginning of the @samp{M_PROTO} block where the protocol address begins.
The address in the @samp{M_PROTO} message block is however, aligned the same as it was received from the MAP user.
@item DIAIND_number
@footnote{This field should be ignored by those application contexts providing operations class 4 service.}
The requested number of connection indications
@footnote{If the number outstanding connect indications equals @var{CONIND_number}, the MAP provider need not discard
further incoming connect indications, but may chose to queue them internally until the number of outstanding connect
indications drops below CONNIND_number.}
allowed to be outstanding by the MAP provider for the specified protocol address.
@end vtable

@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to geenrate one of the following acknowledgements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitive:

@itemize ---
@item @b{Successful:}
Correct acknowledgement of the primitive is indicated with the @code{MAP_BIND_ACK} primitive described in
@ref{MAP_BIND_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TBADADDR
This indicates that the protocol address was in an incorrect format or the address contained illegal information.  It is
not indended to indicate protocol errors.
@item TNOADDR
This indicates that the MAP provider could not allocate an address.
@item TACCES
This indicates that the user did not have proper permissions for the use of the requested address.
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@item TADDRBUSY
This indicated that the requested address is already in use.
@end table
@end itemize

@page
@node MAP_BIND_ACK
@subsection Bind Application Context Acknowledgement
@subheading MAP_BIND_ACK
@prindex MAP_BIND_ACK

This primitive indicates to the MAP user that the specified protoocl address has been bound to the @dfn{stream}, that
the specified number of dialogue open indications are allowed to be queued by the MAP provider for th specified protocol
address, and that the @dfn{stream} associated with the specified protocol address has ben activated.

@subsubheading Format

The format of the message is one @samp{M_PCPROTO} message block.  The format of the @samp{M_PCPROTO} message block is as
follows:

@smallexample
typedef struct @{
    long PRIM_type;         /* always MAP_BIND_ACK */
    long ADDR_length;       /* length of address -- see note in sec. 1.4 */
    long ADDR_offset;       /* offset of address */
    ulong DIAIND_number;    /* dialogue open indications to be queued */
@} MAP_bind_ack_t;
@tpindex MAP_bind_ack_t
@end smallexample

@subsubheading Parameters

@vtable @var
@item PRIM_type
@item ADDR_length
@item ADDR_offset
@item DIAIND_number
@end vtable

@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@subsubheading Rules

The following rules apply to the binding of the specified protocol address to the @dfn{stream}:

@itemize ---
@item If the @var{ADDR_length}
@end itemize

@page
@node MAP_UNBIND_REQ
@subsection Unbind Application Context Request
@subheading MAP_UNBIND_REQ
@prindex MAP_UNBIND_REQ

This primitive requests that the MAP provider unbind the protocol address associated with the @dfn{stream} and
deactivate the @dfn{stream}.

@subsubheading Format

The format of the message is one @samp{M_PROTO} message block.  The format of the @samp{M_PROTO} mesage block is as
follows:

@smallexample
typedef struct @{
    long PRIM_type;         /* always MAP_UNBIND_REQ */
@} MAP_unbind_req_t;
@tpindex MAP_unbind_req_t
@end smallexample

@subsubheading Parameters

@vtable @var
@item PRIM_type:
Indicates primitive type.
@end vtable

@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate the following acknowledgements upon receipt of the primitive
and that the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Successful:}
Correct acknowledgement of the primitive is indicated with the @code{MAP_OK_ACK} primitive described in
@ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in
@ref{MAP_ERROR_ACK}.  The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occurred and the UNIX system error is indicated in the primitive.
@end table
@end itemize

@page
@node MAP_OPTMGMT_REQ
@subsection Options Management Request
@subheading MAP_OPTMGMT_REQ
@prindex MAP_OPTMGMT_REQ

This primitive allows the MAP user to manage the options associated with the @dfn{stream}.

@subsubheading Format

The format of the message is one @samp{M_PROTO} message block.  The format of the @samp{M_PROTO} message block is as
follows:

@smallexample
typedef struct @{
    long PRIM_type;         /* always MAP_OPTMGMT_REQ */
    long OPT_length;        /* options length */
    long OPT_offset;        /* options offset */
    long MGMT_flags;        /* flags */
@} MAP_optmgmt_req_t;
@tpindex MAP_optmgmt_req_t
@end smallexample

@subsubheading Parameters

@vtable @var
@item PRIM_type
Indicates the primitive type.
@item OPT_length
The length of the protocol options associated with the primitive.
@item OPT_offset
The offset from the beginning of the @samp{M_PROTO} message block where the options begin.  The proper alignment of
options is not guaranteed.  The options are, however, aligned the same as they were received from the MAP user.
@item MGMT_flags
The flags which define the request made by the MAP user.
@end vtable

@subsubheading Flags

@table @code
@item T_NEGOTIATE
Negotiate and set the options with the MAP provider.
@item T_CHECK
Check the validity of the specified options.
@item T_CURRENT
Return the options currently in effect.
@item T_DEFAULT
Return the default options.
@end table

@subsubheading Rules

For the rules governing the requests made by this primitive, see the @code{MAP_OPTMGMT_ACK} primitive described in
@ref{MAP_OPTMGMT_ACK}.

@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledgements upon receipt of the primitive
and that the MAP user await the acknowledgement before issuing any othe primitives:

@itemize ---
@item @b{Successful:}
Acknowledgement of the primitive with the @code{MAP_OPTMGMT_ACK} primitive described in @ref{MAP_OPTMGMT_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.  The allowable
errors are as follows:
@table @code
@item TACCES
This indicates that the user did not have proper permissions for the use of the requested options.
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TBADOPT
This indicates that the options as specified were in an incorrect format, or they contained illegal information.
@item TBADFLAG
This indicates that the flags as specified were incorrect or illegal.
@item TSYSERR
A system error has occured and the UNIX system error is indicated in the primitive.
@item TNOTSUPPORT
This MAP provider does not support the requested flag (@code{T_CHECK} or @code{T_CURRENT}).
@end table
@end itemize

@page
@node MAP_ADDR_REQ
@subsection Get Protocol Address Request
@subheading MAP_ADDR_REQ
@prindex MAP_ADDR_REQ

This primitive requests that the MAP provider return the local protocol address that is bound to the @dfn{stream} and
the address of the remote MAP entity if a dialogue has been established.

@subsubheading Format

The format of the message is one @samp{M_PROTO} message block.  The format of the @samp{M_PROTO} message block is as
follows:

@smallexample
typedef struct @{
    long PRIM_type;     /* always MAP_ADDR_REQ */
@} MAP_addr_req_t;
@tpindex MAP_addr_req_t
@end smallexample

@subsubheading Parameters

@vtable @var
@item PRIM_type
Indicates the primitive type.
@end vtable

@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Successful:}
Correct acknowledgement of the primitive is indicated with the @code{MAP_ADDR_ACK} primitive described in
@ref{MAP_ADDR_ACK}.
@item @b{Non-fatal errors:}
There are no errors associated with the issuance of this primitive.
@end itemize

@page
@node MAP_ADDR_ACK
@subsection Get Protocol Address Acknowledgement
@subheading MAP_ADDR_ACK
@prindex MAP_ADDR_ACK
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_OPTMGMT_ACK
@subsection Options Management Acknowledgement
@subheading MAP_OPTMGMT_ACK
@prindex MAP_OPTMGMT_ACK
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ERROR_ACK
@subsection Error Acknowledgement
@subheading MAP_ERROR_ACK
@prindex MAP_ERROR_ACK
@subsubheading Format
@subsubheading Parameters
@subsubheading Valid Error Codes
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_OK_ACK
@subsection Successful Receipt Acknowledgement
@subheading MAP_OK_ACK
@prindex MAP_OK_ACK
@subsubheading Format
@subsubheading Parameters
@subsubheading Valid States
@subsubheading New State

@page
@section Association Establishment Phase

@node MAP_OPEN_REQ
@subsection Association Establishment Request
@subheading MAP_OPEN_REQ
@prindex MAP_OPEN_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Successful Association Establishment:}
@item @b{Unsuccessful Association Establishment:}
@item @b{Non-fatal errors:}
@end itemize

@page
@node MAP_OPEN_IND
@subsection Association Establishment Indication
@subheading MAP_OPEN_IND
@prindex MAP_OPEN_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_OPEN_RES
@subsection Association Establishment Response
@subheading MAP_OPEN_RES
@prindex MAP_OPEN_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_OPEN_CON
@subsection Association Establishment Confirmation
@subheading MAP_OPEN_CON
@prindex MAP_OPEN_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@section Component Transfer Phase

@node MAP_DELIM_REQ
@subsection Component Delimitation Request
@subheading MAP_DELIM_REQ
@prindex MAP_DELIM_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DELIM_IND
@subsection Component Delimitation Indication
@subheading MAP_DELIM_IND
@prindex MAP_DELIM_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@section Association Termination Phase

@node MAP_CLOSE_REQ
@subsection Association Release Request
@subheading MAP_CLOSE_REQ
@prindex MAP_CLOSE_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CLOSE_IND
@subsection Association Release Indication
@subheading MAP_CLOSE_IND
@prindex MAP_CLOSE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ABORT_REQ
@subsection Association Abort Request
@subheading MAP_ABORT_REQ
@prindex MAP_ABORT_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_UABORT_IND
@subsection Association User Abort Indication
@subheading MAP_UABORT_IND
@prindex MAP_UABORT_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PABORT_IND
@subsection Association Provider Abort Indication
@subheading MAP_PABORT_IND
@prindex MAP_PABORT_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_NOTICE_IND
@subsection Association Notice Indication
@subheading MAP_NOTICE_IND
@prindex MAP_NOTICE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@section Secure Transport Primitives

@node MAP_STC1_REQ
@subsection Secure Transport Class 1 Request
@subheading MAP_STC1_REQ
@prindex MAP_STC1_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STC1_IND
@subsection Secure Transport Class 1 Indication
@subheading MAP_STC1_IND
@prindex MAP_STC1_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_STC2_REQ
@subsection Secure Transport Class 2 Request
@subheading MAP_STC2_REQ
@prindex MAP_STC2_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STC2_IND
@subsection Secure Transport Class 2 Indication
@subheading MAP_STC2_IND
@prindex MAP_STC2_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_STC3_REQ
@subsection Secure Transport Class 3 Request
@subheading MAP_STC3_REQ
@prindex MAP_STC3_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STC3_IND
@subsection Secure Transport Class 3 Indication
@subheading MAP_STC3_IND
@prindex MAP_STC3_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_STC4_REQ
@subsection Secure Transport Class 4 Request
@subheading MAP_STC4_REQ
@prindex MAP_STC4_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STC4_IND
@subsection Secure Transport Class 4 Indication
@subheading MAP_STC4_IND
@prindex MAP_STC4_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@section Service Specific Primitives


@node MAP_ACTSS_REQ
@subsection Activate Supplementary Service Request
@subheading MAP_ACTSS_REQ
@prindex MAP_ACTSS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ACTSS_IND
@subsection Activate Supplementary Service Indication
@subheading MAP_ACTSS_IND
@prindex MAP_ACTSS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ACTSS_RES
@subsection Activate Supplementary Service Response
@subheading MAP_ACTSS_RES
@prindex MAP_ACTSS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ACTSS_CON
@subsection Activate Supplementary Service Confirmation
@subheading MAP_ACTSS_CON
@prindex MAP_ACTSS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ACTTM_REQ
@subsection Activate Traceec Mode Request
@subheading MAP_ACTTM_REQ
@prindex MAP_ACTTM_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ACTTM_IND
@subsection Activate Traceec Mode Indication
@subheading MAP_ACTTM_IND
@prindex MAP_ACTTM_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ACTTM_RES
@subsection Activate Traceec Mode Response
@subheading MAP_ACTTM_RES
@prindex MAP_ACTTM_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ACTTM_CON
@subsection Activate Traceec Mode Confirmation
@subheading MAP_ACTTM_CON
@prindex MAP_ACTTM_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ALERTSC_REQ
@subsection Alert Service Center Request
@subheading MAP_ALERTSC_REQ
@prindex MAP_ALERTSC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ALERTSC_IND
@subsection Alert Service Center Indication
@subheading MAP_ALERTSC_IND
@prindex MAP_ALERTSC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ALERTSC_RES
@subsection Alert Service Center Response
@subheading MAP_ALERTSC_RES
@prindex MAP_ALERTSC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ALERTSC_CON
@subsection Alert Service Center Confirmation
@subheading MAP_ALERTSC_CON
@prindex MAP_ALERTSC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ALLOCHN_REQ
@subsection Allocate Handover Number Request
@subheading MAP_ALLOCHN_REQ
@prindex MAP_ALLOCHN_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ALLOCHN_IND
@subsection Allocate Handover Number Indication
@subheading MAP_ALLOCHN_IND
@prindex MAP_ALLOCHN_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ALLOCHN_RES
@subsection Allocate Handover Number Response
@subheading MAP_ALLOCHN_RES
@prindex MAP_ALLOCHN_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ALLOCHN_CON
@subsection Allocate Handover Number Confirmation
@subheading MAP_ALLOCHN_CON
@prindex MAP_ALLOCHN_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYMOD_REQ
@subsection Any Time Modification Request
@subheading MAP_ANYMOD_REQ
@prindex MAP_ANYMOD_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYMOD_IND
@subsection Any Time Modification Indication
@subheading MAP_ANYMOD_IND
@prindex MAP_ANYMOD_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYMOD_RES
@subsection Any Time Modification Response
@subheading MAP_ANYMOD_RES
@prindex MAP_ANYMOD_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYMOD_CON
@subsection Any Time Modification Confirmation
@subheading MAP_ANYMOD_CON
@prindex MAP_ANYMOD_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYQRY_REQ
@subsection Any Time Interrogation Request
@subheading MAP_ANYQRY_REQ
@prindex MAP_ANYQRY_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYQRY_IND
@subsection Any Time Interrogation Indication
@subheading MAP_ANYQRY_IND
@prindex MAP_ANYQRY_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYQRY_RES
@subsection Any Time Interrogation Response
@subheading MAP_ANYQRY_RES
@prindex MAP_ANYQRY_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYQRY_CON
@subsection Any Time Interrogation Confirmation
@subheading MAP_ANYQRY_CON
@prindex MAP_ANYQRY_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYSUB_REQ
@subsection Any Time Subscription Interrogation Request
@subheading MAP_ANYSUB_REQ
@prindex MAP_ANYSUB_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYSUB_IND
@subsection Any Time Subscription Interrogation Indication
@subheading MAP_ANYSUB_IND
@prindex MAP_ANYSUB_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ANYSUB_RES
@subsection Any Time Subscription Interrogation Response
@subheading MAP_ANYSUB_RES
@prindex MAP_ANYSUB_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ANYSUB_CON
@subsection Any Time Subscription Interrogation Confirmation
@subheading MAP_ANYSUB_CON
@prindex MAP_ANYSUB_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_AUTHFAIL_REQ
@subsection Authentication Failure Report Request
@subheading MAP_AUTHFAIL_REQ
@prindex MAP_AUTHFAIL_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_AUTHFAIL_IND
@subsection Authentication Failure Report Indication
@subheading MAP_AUTHFAIL_IND
@prindex MAP_AUTHFAIL_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_AUTHFAIL_RES
@subsection Authentication Failure Report Response
@subheading MAP_AUTHFAIL_RES
@prindex MAP_AUTHFAIL_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_AUTHFAIL_CON
@subsection Authentication Failure Report Confirmation
@subheading MAP_AUTHFAIL_CON
@prindex MAP_AUTHFAIL_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_AUTH_REQ
@subsection Authenticate Request
@subheading MAP_AUTH_REQ
@prindex MAP_AUTH_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_AUTH_IND
@subsection Authenticate Indication
@subheading MAP_AUTH_IND
@prindex MAP_AUTH_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_AUTH_RES
@subsection Authenticate Response
@subheading MAP_AUTH_RES
@prindex MAP_AUTH_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_AUTH_CON
@subsection Authenticate Confirmation
@subheading MAP_AUTH_CON
@prindex MAP_AUTH_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_CANCLOC_REQ
@subsection Cancel Location Request
@subheading MAP_CANCLOC_REQ
@prindex MAP_CANCLOC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CANCLOC_IND
@subsection Cancel Location Indication
@subheading MAP_CANCLOC_IND
@prindex MAP_CANCLOC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_CANCLOC_RES
@subsection Cancel Location Response
@subheading MAP_CANCLOC_RES
@prindex MAP_CANCLOC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CANCLOC_CON
@subsection Cancel Location Confirmation
@subheading MAP_CANCLOC_CON
@prindex MAP_CANCLOC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESET_REQ
@subsection Reset Request
@subheading MAP_RESET_REQ
@prindex MAP_RESET_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RESET_IND
@subsection Reset Indication
@subheading MAP_RESET_IND
@prindex MAP_RESET_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESET_CON
@subsection Reset Response
@subheading MAP_RESET_CON
@prindex MAP_RESET_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RESET_RES
@subsection Reset Confirmation
@subheading MAP_RESET_RES
@prindex MAP_RESET_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESTORE_REQ
@subsection Restore Request
@subheading MAP_RESTORE_REQ
@prindex MAP_RESTORE_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RESTORE_IND
@subsection Restore Indication
@subheading MAP_RESTORE_IND
@prindex MAP_RESTORE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESTORE_CON
@subsection Restore Response
@subheading MAP_RESTORE_CON
@prindex MAP_RESTORE_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RESTORE_RES
@subsection Restore Confirmation
@subheading MAP_RESTORE_RES
@prindex MAP_RESTORE_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESUME_REQ
@subsection Resume Call Handling Request
@subheading MAP_RESUME_REQ
@prindex MAP_RESUME_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RESUME_IND
@subsection Resume Call Handling Indication
@subheading MAP_RESUME_IND
@prindex MAP_RESUME_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESUME_RES
@subsection Resume Call Handling Confirmation
@subheading MAP_RESUME_RES
@prindex MAP_RESUME_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RESUME_CON
@subsection Resume Call Handling Response
@subheading MAP_RESUME_CON
@prindex MAP_RESUME_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SEARCH_REQ
@subsection Search for MS Request
@subheading MAP_SEARCH_REQ
@prindex MAP_SEARCH_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SEARCH_IND
@subsection Search for MS Indication
@subheading MAP_SEARCH_IND
@prindex MAP_SEARCH_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SEARCH_RES
@subsection Search for MS Confirmation
@subheading MAP_SEARCH_RES
@prindex MAP_SEARCH_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SEARCH_CON
@subsection Search for MS Response
@subheading MAP_SEARCH_CON
@prindex MAP_SEARCH_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CKIEMI_REQ
@subsection Check IEMI Request
@subheading MAP_CKIEMI_REQ
@prindex MAP_CKIEMI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CKIEMI_IND
@subsection Check IEMI Indication
@subheading MAP_CKIEMI_IND
@prindex MAP_CKIEMI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_CKIEMI_RES
@subsection Check IEMI Response
@subheading MAP_CKIEMI_RES
@prindex MAP_CKIEMI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_CKIEMI_CON
@subsection Check IEMI Confirmation
@subheading MAP_CKIEMI_CON
@prindex MAP_CKIEMI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DEACTSS_REQ
@subsection Deactivate Supplementary Service Request
@subheading MAP_DEACTSS_REQ
@prindex MAP_DEACTSS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DEACTSS_IND
@subsection Deactivate Supplementary Service Indication
@subheading MAP_DEACTSS_IND
@prindex MAP_DEACTSS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DEACTSS_RES
@subsection Deactivate Supplementary Service Response
@subheading MAP_DEACTSS_RES
@prindex MAP_DEACTSS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DEACTSS_CON
@subsection Deactivate Supplementary Service Confirmation
@subheading MAP_DEACTSS_CON
@prindex MAP_DEACTSS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DEACTTM_REQ
@subsection Deactivate Trace Mode Request
@subheading MAP_DEACTTM_REQ
@prindex MAP_DEACTTM_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DEACTTM_IND
@subsection Deactivate Trace Mode Indication
@subheading MAP_DEACTTM_IND
@prindex MAP_DEACTTM_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DEACTTM_RES
@subsection Deactivate Trace Mode Response
@subheading MAP_DEACTTM_RES
@prindex MAP_DEACTTM_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DEACTTM_CON
@subsection Deactivate Trace Mode Confirmation
@subheading MAP_DEACTTM_CON
@prindex MAP_DEACTTM_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DELSUBD_REQ
@subsection Delete Subscriber Data Request
@subheading MAP_DELSUBD_REQ
@prindex MAP_DELSUBD_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DELSUBD_IND
@subsection Delete Subscriber Data Indication
@subheading MAP_DELSUBD_IND
@prindex MAP_DELSUBD_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_DELSUBD_RES
@subsection Delete Subscriber Data Response
@subheading MAP_DELSUBD_RES
@prindex MAP_DELSUBD_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_DELSUBD_CON
@subsection Delete Subscriber Data Confirmation
@subheading MAP_DELSUBD_CON
@prindex MAP_DELSUBD_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ERASECC_REQ
@subsection Erase CC Entry Request
@subheading MAP_ERASECC_REQ
@prindex MAP_ERASECC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ERASECC_IND
@subsection Erase CC Entry Indication
@subheading MAP_ERASECC_IND
@prindex MAP_ERASECC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ERASECC_RES
@subsection Erase CC Entry Response
@subheading MAP_ERASECC_RES
@prindex MAP_ERASECC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ERASECC_CON
@subsection Erase CC Entry Confirmation
@subheading MAP_ERASECC_CON
@prindex MAP_ERASECC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ERASESS_REQ
@subsection Erase Supplementatry Service Request
@subheading MAP_ERASESS_REQ
@prindex MAP_ERASESS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ERASESS_IND
@subsection Erase Supplementatry Service Indication
@subheading MAP_ERASESS_IND
@prindex MAP_ERASESS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ERASESS_RES
@subsection Erase Supplementatry Service Response
@subheading MAP_ERASESS_RES
@prindex MAP_ERASESS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ERASESS_CON
@subsection Erase Supplementatry Service Confirmation
@subheading MAP_ERASESS_CON
@prindex MAP_ERASESS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FAILURE_REQ
@subsection Failure Report Request
@subheading MAP_FAILURE_REQ
@prindex MAP_FAILURE_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FAILURE_IND
@subsection Failure Report Indication
@subheading MAP_FAILURE_IND
@prindex MAP_FAILURE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FAILURE_RES
@subsection Failure Report Response
@subheading MAP_FAILURE_RES
@prindex MAP_FAILURE_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FAILURE_CON
@subsection Failure Report Confirmation
@subheading MAP_FAILURE_CON
@prindex MAP_FAILURE_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FAS_REQ
@subsection Forward Access Signalling Request
@subheading MAP_FAS_REQ
@prindex MAP_FAS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FAS_IND
@subsection Forward Access Signalling Indication
@subheading MAP_FAS_IND
@prindex MAP_FAS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FAS_RES
@subsection Forward Access Signalling Response
@subheading MAP_FAS_RES
@prindex MAP_FAS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FAS_CON
@subsection Forward Access Signalling Confirmation
@subheading MAP_FAS_CON
@prindex MAP_FAS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FCKSSIND_REQ
@subsection Forward Check SS Indication Request
@subheading MAP_FCKSSIND_REQ
@prindex MAP_FCKSSIND_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FCKSSIND_IND
@subsection Forward Check SS Indication Indication
@subheading MAP_FCKSSIND_IND
@prindex MAP_FCKSSIND_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FCKSSIND_RES
@subsection Forward Check SS Indication Response
@subheading MAP_FCKSSIND_RES
@prindex MAP_FCKSSIND_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FCKSSIND_CON
@subsection Forward Check SS Indication Confirmation
@subheading MAP_FCKSSIND_CON
@prindex MAP_FCKSSIND_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FGRCSIG_REQ
@subsection Forward Group Call Signalling Request
@subheading MAP_FGRCSIG_REQ
@prindex MAP_FGRCSIG_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FGRCSIG_IND
@subsection Forward Group Call Signalling Indication
@subheading MAP_FGRCSIG_IND
@prindex MAP_FGRCSIG_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FGRCSIG_RES
@subsection Forward Group Call Signalling Response
@subheading MAP_FGRCSIG_RES
@prindex MAP_FGRCSIG_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FGRCSIG_CON
@subsection Forward Group Call Signalling Confirmation
@subheading MAP_FGRCSIG_CON
@prindex MAP_FGRCSIG_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FNEWIMSI_REQ
@subsection Forward New IMSI Request
@subheading MAP_FNEWIMSI_REQ
@prindex MAP_FNEWIMSI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FNEWIMSI_IND
@subsection Forward New IMSI Indication
@subheading MAP_FNEWIMSI_IND
@prindex MAP_FNEWIMSI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_FNEWIMSI_RES
@subsection Forward New IMSI Response
@subheading MAP_FNEWIMSI_RES
@prindex MAP_FNEWIMSI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_FNEWIMSI_CON
@subsection Forward New IMSI Confirmation
@subheading MAP_FNEWIMSI_CON
@prindex MAP_FNEWIMSI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_GETIEMI_REQ
@subsection Obtain IEMI Request
@subheading MAP_GETIEMI_REQ
@prindex MAP_GETIEMI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_GETIEMI_IND
@subsection Obtain IEMI Indication
@subheading MAP_GETIEMI_IND
@prindex MAP_GETIEMI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_GETIEMI_RES
@subsection Obtain IEMI Response
@subheading MAP_GETIEMI_RES
@prindex MAP_GETIEMI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_GETIEMI_CON
@subsection Obtain IEMI Confirmation
@subheading MAP_GETIEMI_CON
@prindex MAP_GETIEMI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_GETPASS_REQ
@subsection Get Password Request
@subheading MAP_GETPASS_REQ
@prindex MAP_GETPASS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_GETPASS_IND
@subsection Get Password Indication
@subheading MAP_GETPASS_IND
@prindex MAP_GETPASS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_GETPASS_RES
@subsection Get Password Response
@subheading MAP_GETPASS_RES
@prindex MAP_GETPASS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_GETPASS_CON
@subsection Get Password Confirmation
@subheading MAP_GETPASS_CON
@prindex MAP_GETPASS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INFORMSC_REQ
@subsection Inform Service Center Request
@subheading MAP_INFORMSC_REQ
@prindex MAP_INFORMSC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INFORMSC_IND
@subsection Inform Service Center Indication
@subheading MAP_INFORMSC_IND
@prindex MAP_INFORMSC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INFORMSC_RES
@subsection Inform Service Center Response
@subheading MAP_INFORMSC_RES
@prindex MAP_INFORMSC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INFORMSC_CON
@subsection Inform Service Center Confirmation
@subheading MAP_INFORMSC_CON
@prindex MAP_INFORMSC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INSSUBSD_REQ
@subsection Insert Subscriber Data Request
@subheading MAP_INSSUBSD_REQ
@prindex MAP_INSSUBSD_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INSSUBSD_IND
@subsection Insert Subscriber Data Indication
@subheading MAP_INSSUBSD_IND
@prindex MAP_INSSUBSD_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INSSUBSD_RES
@subsection Insert Subscriber Data Response
@subheading MAP_INSSUBSD_RES
@prindex MAP_INSSUBSD_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INSSUBSD_CON
@subsection Insert Subscriber Data Confirmation
@subheading MAP_INSSUBSD_CON
@prindex MAP_INSSUBSD_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INTERGSS_REQ
@subsection Iterrogate Supplementary Service Request
@subheading MAP_INTERGSS_REQ
@prindex MAP_INTERGSS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INTERGSS_IND
@subsection Iterrogate Supplementary Service Indication
@subheading MAP_INTERGSS_IND
@prindex MAP_INTERGSS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_INTERGSS_RES
@subsection Iterrogate Supplementary Service Response
@subheading MAP_INTERGSS_RES
@prindex MAP_INTERGSS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_INTERGSS_CON
@subsection Iterrogate Supplementary Service Confirmation
@subheading MAP_INTERGSS_CON
@prindex MAP_INTERGSS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ISTALERT_REQ
@subsection IST Alert Request
@subheading MAP_ISTALERT_REQ
@prindex MAP_ISTALERT_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ISTALERT_IND
@subsection IST Alert Indication
@subheading MAP_ISTALERT_IND
@prindex MAP_ISTALERT_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ISTALERT_RES
@subsection IST Alert Response
@subheading MAP_ISTALERT_RES
@prindex MAP_ISTALERT_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ISTALERT_CON
@subsection IST Alert Confirmation
@subheading MAP_ISTALERT_CON
@prindex MAP_ISTALERT_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ISTCMD_REQ
@subsection IST Command Request
@subheading MAP_ISTCMD_REQ
@prindex MAP_ISTCMD_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ISTCMD_IND
@subsection IST Command Indication
@subheading MAP_ISTCMD_IND
@prindex MAP_ISTCMD_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_ISTCMD_RES
@subsection IST Command Response
@subheading MAP_ISTCMD_RES
@prindex MAP_ISTCMD_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_ISTCMD_CON
@subsection IST Command Confirmation
@subheading MAP_ISTCMD_CON
@prindex MAP_ISTCMD_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MMEVENT_REQ
@subsection Note MM Event Request
@subheading MAP_MMEVENT_REQ
@prindex MAP_MMEVENT_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MMEVENT_IND
@subsection Note MM Event Indication
@subheading MAP_MMEVENT_IND
@prindex MAP_MMEVENT_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MMEVENT_RES
@subsection Note MM Event Response
@subheading MAP_MMEVENT_RES
@prindex MAP_MMEVENT_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MMEVENT_CON
@subsection Note MM Event Confirmation
@subheading MAP_MMEVENT_CON
@prindex MAP_MMEVENT_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MOFSMS_REQ
@subsection Mobile Originated Forward Short Message Request
@subheading MAP_MOFSMS_REQ
@prindex MAP_MOFSMS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MOFSMS_IND
@subsection Mobile Originated Forward Short Message Indication
@subheading MAP_MOFSMS_IND
@prindex MAP_MOFSMS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MOFSMS_RES
@subsection Mobile Originated Forward Short Message Response
@subheading MAP_MOFSMS_RES
@prindex MAP_MOFSMS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MOFSMS_CON
@subsection Mobile Originated Forward Short Message Confirmation
@subheading MAP_MOFSMS_CON
@prindex MAP_MOFSMS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MSGRPSPRES_REQ
@subsection Note MS Present for GRPS Request
@subheading MAP_MSGRPSPRES_REQ
@prindex MAP_MSGRPSPRES_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MSGRPSPRES_IND
@subsection Note MS Present for GRPS Indication
@subheading MAP_MSGRPSPRES_IND
@prindex MAP_MSGRPSPRES_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MSGRPSPRES_RES
@subsection Note MS Present for GRPS Response
@subheading MAP_MSGRPSPRES_RES
@prindex MAP_MSGRPSPRES_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MSGRPSPRES_CON
@subsection Note MS Present for GRPS Confirmation
@subheading MAP_MSGRPSPRES_CON
@prindex MAP_MSGRPSPRES_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MTFSMS_REQ
@subsection Mobile Terminated Forward Short Message Request
@subheading MAP_MTFSMS_REQ
@prindex MAP_MTFSMS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MTFSMS_IND
@subsection Mobile Terminated Forward Short Message Indication
@subheading MAP_MTFSMS_IND
@prindex MAP_MTFSMS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_MTFSMS_RES
@subsection Mobile Terminated Forward Short Message Response
@subheading MAP_MTFSMS_RES
@prindex MAP_MTFSMS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_MTFSMS_CON
@subsection Mobile Terminated Forward Short Message Confirmation
@subheading MAP_MTFSMS_CON
@prindex MAP_MTFSMS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PAGE_REQ
@subsection Page Request
@subheading MAP_PAGE_REQ
@prindex MAP_PAGE_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PAGE_IND
@subsection Page Indication
@subheading MAP_PAGE_IND
@prindex MAP_PAGE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PAGE_RES
@subsection Page Response
@subheading MAP_PAGE_RES
@prindex MAP_PAGE_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PAGE_CON
@subsection Page Confirmation
@subheading MAP_PAGE_CON
@prindex MAP_PAGE_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPGC_REQ
@subsection Prepare Group Call Request
@subheading MAP_PREPGC_REQ
@prindex MAP_PREPGC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPGC_IND
@subsection Prepare Group Call Indication
@subheading MAP_PREPGC_IND
@prindex MAP_PREPGC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPGC_RES
@subsection Prepare Group Call Response
@subheading MAP_PREPGC_RES
@prindex MAP_PREPGC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPGC_CON
@subsection Prepare Group Call Confirmation
@subheading MAP_PREPGC_CON
@prindex MAP_PREPGC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPHO_REQ
@subsection Prepare Handover Request
@subheading MAP_PREPHO_REQ
@prindex MAP_PREPHO_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPHO_IND
@subsection Prepare Handover Indication
@subheading MAP_PREPHO_IND
@prindex MAP_PREPHO_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPHO_RES
@subsection Prepare Handover Response
@subheading MAP_PREPHO_RES
@prindex MAP_PREPHO_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPHO_CON
@subsection Prepare Handover Confirmation
@subheading MAP_PREPHO_CON
@prindex MAP_PREPHO_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPSH_REQ
@subsection Prepare Subsequent Handover Request
@subheading MAP_PREPSH_REQ
@prindex MAP_PREPSH_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPSH_IND
@subsection Prepare Subsequent Handover Indication
@subheading MAP_PREPSH_IND
@prindex MAP_PREPSH_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PREPSH_RES
@subsection Prepare Subsequent Handover Response
@subheading MAP_PREPSH_RES
@prindex MAP_PREPSH_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PREPSH_CON
@subsection Prepare Subsequent Handover Confirmation
@subheading MAP_PREPSH_CON
@prindex MAP_PREPSH_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCAS_REQ
@subsection Process Access Signalling Request
@subheading MAP_PROCAS_REQ
@prindex MAP_PROCAS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCAS_IND
@subsection Process Access Signalling Indication
@subheading MAP_PROCAS_IND
@prindex MAP_PROCAS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCAS_RES
@subsection Process Access Signalling Response
@subheading MAP_PROCAS_RES
@prindex MAP_PROCAS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCAS_CON
@subsection Process Access Signalling Confirmation
@subheading MAP_PROCAS_CON
@prindex MAP_PROCAS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCGC_REQ
@subsection Process Group Call Signalling Request
@subheading MAP_PROCGC_REQ
@prindex MAP_PROCGC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCGC_IND
@subsection Process Group Call Signalling Indication
@subheading MAP_PROCGC_IND
@prindex MAP_PROCGC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCGC_RES
@subsection Process Group Call Signalling Response
@subheading MAP_PROCGC_RES
@prindex MAP_PROCGC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCGC_CON
@subsection Process Group Call Signalling Confirmation
@subheading MAP_PROCGC_CON
@prindex MAP_PROCGC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCUSS_REQ
@subsection Process Unstructured SS Request
@subheading MAP_PROCUSS_REQ
@prindex MAP_PROCUSS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCUSS_IND
@subsection Process Unstructured SS Indication
@subheading MAP_PROCUSS_IND
@prindex MAP_PROCUSS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROCUSS_RES
@subsection Process Unstructured SS Response
@subheading MAP_PROCUSS_RES
@prindex MAP_PROCUSS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROCUSS_CON
@subsection Process Unstructured SS Confirmation
@subheading MAP_PROCUSS_CON
@prindex MAP_PROCUSS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVIMSI_REQ
@subsection Provide IMSI Request
@subheading MAP_PROVIMSI_REQ
@prindex MAP_PROVIMSI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVIMSI_IND
@subsection Provide IMSI Indication
@subheading MAP_PROVIMSI_IND
@prindex MAP_PROVIMSI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVIMSI_RES
@subsection Provide IMSI Response
@subheading MAP_PROVIMSI_RES
@prindex MAP_PROVIMSI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVIMSI_CON
@subsection Provide IMSI Confirmation
@subheading MAP_PROVIMSI_CON
@prindex MAP_PROVIMSI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVRN_REQ
@subsection Provide Roaming Number Request
@subheading MAP_PROVRN_REQ
@prindex MAP_PROVRN_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVRN_IND
@subsection Provide Roaming Number Indication
@subheading MAP_PROVRN_IND
@prindex MAP_PROVRN_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVRN_RES
@subsection Provide Roaming Number Response
@subheading MAP_PROVRN_RES
@prindex MAP_PROVRN_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVRN_CON
@subsection Provide Roaming Number Confirmation
@subheading MAP_PROVRN_CON
@prindex MAP_PROVRN_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVSLOC_REQ
@subsection Provide Subscriber Location Request
@subheading MAP_PROVSLOC_REQ
@prindex MAP_PROVSLOC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVSLOC_IND
@subsection Provide Subscriber Location Indication
@subheading MAP_PROVSLOC_IND
@prindex MAP_PROVSLOC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVSLOC_RES
@subsection Provide Subscriber Location Response
@subheading MAP_PROVSLOC_RES
@prindex MAP_PROVSLOC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVSLOC_CON
@subsection Provide Subscriber Location Confirmation
@subheading MAP_PROVSLOC_CON
@prindex MAP_PROVSLOC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVSUBI_REQ
@subsection Provide Subscriber Information Request
@subheading MAP_PROVSUBI_REQ
@prindex MAP_PROVSUBI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVSUBI_IND
@subsection Provide Subscriber Information Indication
@subheading MAP_PROVSUBI_IND
@prindex MAP_PROVSUBI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PROVSUBI_RES
@subsection Provide Subscriber Information Response
@subheading MAP_PROVSUBI_RES
@prindex MAP_PROVSUBI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PROVSUBI_CON
@subsection Provide Subscriber Information Confirmation
@subheading MAP_PROVSUBI_CON
@prindex MAP_PROVSUBI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PURGEMS_REQ
@subsection Purge MS Request
@subheading MAP_PURGEMS_REQ
@prindex MAP_PURGEMS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PURGEMS_IND
@subsection Purge MS Indication
@subheading MAP_PURGEMS_IND
@prindex MAP_PURGEMS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_PURGEMS_RES
@subsection Purge MS Response
@subheading MAP_PURGEMS_RES
@prindex MAP_PURGEMS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_PURGEMS_CON
@subsection Purge MS Confirmation
@subheading MAP_PURGEMS_CON
@prindex MAP_PURGEMS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RDYSM_REQ
@subsection Ready for SM Request
@subheading MAP_RDYSM_REQ
@prindex MAP_RDYSM_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RDYSM_IND
@subsection Ready for SM Indication
@subheading MAP_RDYSM_IND
@prindex MAP_RDYSM_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_RDYSM_RES
@subsection Ready for SM Response
@subheading MAP_RDYSM_RES
@prindex MAP_RDYSM_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_RDYSM_CON
@subsection Ready for SM Confirmation
@subheading MAP_RDYSM_CON
@prindex MAP_RDYSM_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGCC_REQ
@subsection Register CC Entry Request
@subheading MAP_REGCC_REQ
@prindex MAP_REGCC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGCC_IND
@subsection Register CC Entry Indication
@subheading MAP_REGCC_IND
@prindex MAP_REGCC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGCC_RES
@subsection Register CC Entry Response
@subheading MAP_REGCC_RES
@prindex MAP_REGCC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGCC_CON
@subsection Register CC Entry Confirmation
@subheading MAP_REGCC_CON
@prindex MAP_REGCC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGPW_REQ
@subsection Register Password Request
@subheading MAP_REGPW_REQ
@prindex MAP_REGPW_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGPW_IND
@subsection Register Password Indication
@subheading MAP_REGPW_IND
@prindex MAP_REGPW_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGPW_RES
@subsection Register Password Response
@subheading MAP_REGPW_RES
@prindex MAP_REGPW_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGPW_CON
@subsection Register Password Confirmation
@subheading MAP_REGPW_CON
@prindex MAP_REGPW_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGSS_REQ
@subsection Register Supplementary Service Request
@subheading MAP_REGSS_REQ
@prindex MAP_REGSS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGSS_IND
@subsection Register Supplementary Service Indication
@subheading MAP_REGSS_IND
@prindex MAP_REGSS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REGSS_RES
@subsection Register Supplementary Service Response
@subheading MAP_REGSS_RES
@prindex MAP_REGSS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REGSS_CON
@subsection Register Supplementary Service Confirmation
@subheading MAP_REGSS_CON
@prindex MAP_REGSS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REMUSRFREE_REQ
@subsection Remote User Free Request
@subheading MAP_REMUSRFREE_REQ
@prindex MAP_REMUSRFREE_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REMUSRFREE_IND
@subsection Remote User Free Indication
@subheading MAP_REMUSRFREE_IND
@prindex MAP_REMUSRFREE_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_REMUSRFREE_RES
@subsection Remote User Free Response
@subheading MAP_REMUSRFREE_RES
@prindex MAP_REMUSRFREE_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_REMUSRFREE_CON
@subsection Remote User Free Confirmation
@subheading MAP_REMUSRFREE_CON
@prindex MAP_REMUSRFREE_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDID_REQ
@subsection Send Identification Request
@subheading MAP_SENDID_REQ
@prindex MAP_SENDID_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDID_IND
@subsection Send Identification Indication
@subheading MAP_SENDID_IND
@prindex MAP_SENDID_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDID_RES
@subsection Send Identification Response
@subheading MAP_SENDID_RES
@prindex MAP_SENDID_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDID_CON
@subsection Send Identification Confirmation
@subheading MAP_SENDID_CON
@prindex MAP_SENDID_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SETCM_REQ
@subsection Set Ciphering Mode Request
@subheading MAP_SETCM_REQ
@prindex MAP_SETCM_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SETCM_IND
@subsection Set Ciphering Mode Indication
@subheading MAP_SETCM_IND
@prindex MAP_SETCM_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SETCM_RES
@subsection Set Ciphering Mode Response
@subheading MAP_SETCM_RES
@prindex MAP_SETCM_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SETCM_CON
@subsection Set Ciphering Mode Confirmation
@subheading MAP_SETCM_CON
@prindex MAP_SETCM_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SETREP_REQ
@subsection Set Reporting State Request
@subheading MAP_SETREP_REQ
@prindex MAP_SETREP_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SETREP_IND
@subsection Set Reporting State Indication
@subheading MAP_SETREP_IND
@prindex MAP_SETREP_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SETREP_RES
@subsection Set Reporting State Response
@subheading MAP_SETREP_RES
@prindex MAP_SETREP_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SETREP_CON
@subsection Set Reporting State Confirmation
@subheading MAP_SETREP_CON
@prindex MAP_SETREP_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SMDELIVSTAT_REQ
@subsection Report Short Message Delivery Status Request
@subheading MAP_SMDELIVSTAT_REQ
@prindex MAP_SMDELIVSTAT_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SMDELIVSTAT_IND
@subsection Report Short Message Delivery Status Indication
@subheading MAP_SMDELIVSTAT_IND
@prindex MAP_SMDELIVSTAT_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SMDELIVSTAT_RES
@subsection Report Short Message Delivery Status Response
@subheading MAP_SMDELIVSTAT_RES
@prindex MAP_SMDELIVSTAT_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SMDELIVSTAT_CON
@subsection Report Short Message Delivery Status Confirmation
@subheading MAP_SMDELIVSTAT_CON
@prindex MAP_SMDELIVSTAT_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDAUTHI_REQ
@subsection Send Authentication Information Request
@subheading MAP_SENDAUTHI_REQ
@prindex MAP_SENDAUTHI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDAUTHI_IND
@subsection Send Authentication Information Indication
@subheading MAP_SENDAUTHI_IND
@prindex MAP_SENDAUTHI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDAUTHI_RES
@subsection Send Authentication Information Response
@subheading MAP_SENDAUTHI_RES
@prindex MAP_SENDAUTHI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDAUTHI_CON
@subsection Send Authentication Information Confirmation
@subheading MAP_SENDAUTHI_CON
@prindex MAP_SENDAUTHI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDEND_REQ
@subsection Send End Signal Request
@subheading MAP_SENDEND_REQ
@prindex MAP_SENDEND_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDEND_IND
@subsection Send End Signal Indication
@subheading MAP_SENDEND_IND
@prindex MAP_SENDEND_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDEND_RES
@subsection Send End Signal Response
@subheading MAP_SENDEND_RES
@prindex MAP_SENDEND_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDEND_CON
@subsection Send End Signal Confirmation
@subheading MAP_SENDEND_CON
@prindex MAP_SENDEND_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDGCEND_REQ
@subsection Send Group Call End Signal Request
@subheading MAP_SENDGCEND_REQ
@prindex MAP_SENDGCEND_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDGCEND_IND
@subsection Send Group Call End Signal Indication
@subheading MAP_SENDGCEND_IND
@prindex MAP_SENDGCEND_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDGCEND_RES
@subsection Send Group Call End Signal Response
@subheading MAP_SENDGCEND_RES
@prindex MAP_SENDGCEND_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDGCEND_CON
@subsection Send Group Call End Signal Confirmation
@subheading MAP_SENDGCEND_CON
@prindex MAP_SENDGCEND_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDGPRSRI_REQ
@subsection Send Routing Information for GPRS Request
@subheading MAP_SENDGPRSRI_REQ
@prindex MAP_SENDGPRSRI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDGPRSRI_IND
@subsection Send Routing Information for GPRS Indication
@subheading MAP_SENDGPRSRI_IND
@prindex MAP_SENDGPRSRI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDGPRSRI_RES
@subsection Send Routing Information for GPRS Response
@subheading MAP_SENDGPRSRI_RES
@prindex MAP_SENDGPRSRI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDGPRSRI_CON
@subsection Send Routing Information for GPRS Confirmation
@subheading MAP_SENDGPRSRI_CON
@prindex MAP_SENDGPRSRI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDHOREP_REQ
@subsection Send Handover Report Request
@subheading MAP_SENDHOREP_REQ
@prindex MAP_SENDHOREP_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDHOREP_IND
@subsection Send Handover Report Indication
@subheading MAP_SENDHOREP_IND
@prindex MAP_SENDHOREP_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDHOREP_RES
@subsection Send Handover Report Response
@subheading MAP_SENDHOREP_RES
@prindex MAP_SENDHOREP_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDHOREP_CON
@subsection Send Handover Report Confirmation
@subheading MAP_SENDHOREP_CON
@prindex MAP_SENDHOREP_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDIMSI_REQ
@subsection Send IMSI Request
@subheading MAP_SENDIMSI_REQ
@prindex MAP_SENDIMSI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDIMSI_IND
@subsection Send IMSI Indication
@subheading MAP_SENDIMSI_IND
@prindex MAP_SENDIMSI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDIMSI_RES
@subsection Send IMSI Response
@subheading MAP_SENDIMSI_RES
@prindex MAP_SENDIMSI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDIMSI_CON
@subsection Send IMSI Confirmation
@subheading MAP_SENDIMSI_CON
@prindex MAP_SENDIMSI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDLCSRI_REQ
@subsection Send Routing Information for LCS Request
@subheading MAP_SENDLCSRI_REQ
@prindex MAP_SENDLCSRI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDLCSRI_IND
@subsection Send Routing Information for LCS Indication
@subheading MAP_SENDLCSRI_IND
@prindex MAP_SENDLCSRI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDLCSRI_RES
@subsection Send Routing Information for LCS Response
@subheading MAP_SENDLCSRI_RES
@prindex MAP_SENDLCSRI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDLCSRI_CON
@subsection Send Routing Information for LCS Confirmation
@subheading MAP_SENDLCSRI_CON
@prindex MAP_SENDLCSRI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDMOSMSI_REQ
@subsection Send Mobile Originated SMS Information Request
@subheading MAP_SENDMOSMSI_REQ
@prindex MAP_SENDMOSMSI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDMOSMSI_IND
@subsection Send Mobile Originated SMS Information Indication
@subheading MAP_SENDMOSMSI_IND
@prindex MAP_SENDMOSMSI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDMOSMSI_RES
@subsection Send Mobile Originated SMS Information Response
@subheading MAP_SENDMOSMSI_RES
@prindex MAP_SENDMOSMSI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDMOSMSI_CON
@subsection Send Mobile Originated SMS Information Confirmation
@subheading MAP_SENDMOSMSI_CON
@prindex MAP_SENDMOSMSI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDMTSMSI_REQ
@subsection Send Mobile Terminated SMS Information Request
@subheading MAP_SENDMTSMSI_REQ
@prindex MAP_SENDMTSMSI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDMTSMSI_IND
@subsection Send Mobile Terminated SMS Information Indication
@subheading MAP_SENDMTSMSI_IND
@prindex MAP_SENDMTSMSI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDMTSMSI_RES
@subsection Send Mobile Terminated SMS Information Response
@subheading MAP_SENDMTSMSI_RES
@prindex MAP_SENDMTSMSI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDMTSMSI_CON
@subsection Send Mobile Terminated SMS Information Confirmation
@subheading MAP_SENDMTSMSI_CON
@prindex MAP_SENDMTSMSI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDRI_REQ
@subsection Send Routing Information Request
@subheading MAP_SENDRI_REQ
@prindex MAP_SENDRI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDRI_IND
@subsection Send Routing Information Indication
@subheading MAP_SENDRI_IND
@prindex MAP_SENDRI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDRI_RES
@subsection Send Routing Information Response
@subheading MAP_SENDRI_RES
@prindex MAP_SENDRI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDRI_CON
@subsection Send Routing Information Confirmation
@subheading MAP_SENDRI_CON
@prindex MAP_SENDRI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDSMSRI_REQ
@subsection Send Routing Information for SM Request
@subheading MAP_SENDSMSRI_REQ
@prindex MAP_SENDSMSRI_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDSMSRI_IND
@subsection Send Routing Information for SM Indication
@subheading MAP_SENDSMSRI_IND
@prindex MAP_SENDSMSRI_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SENDSMSRI_RES
@subsection Send Routing Information for SM Response
@subheading MAP_SENDSMSRI_RES
@prindex MAP_SENDSMSRI_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SENDSMSRI_CON
@subsection Send Routing Information for SM Confirmation
@subheading MAP_SENDSMSRI_CON
@prindex MAP_SENDSMSRI_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SSINV_REQ
@subsection SS Invocation Notification Request
@subheading MAP_SSINV_REQ
@prindex MAP_SSINV_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SSINV_IND
@subsection SS Invocation Notification Indication
@subheading MAP_SSINV_IND
@prindex MAP_SSINV_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SSINV_RES
@subsection SS Invocation Notification Response
@subheading MAP_SSINV_RES
@prindex MAP_SSINV_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SSINV_CON
@subsection SS Invocation Notification Confirmation
@subheading MAP_SSINV_CON
@prindex MAP_SSINV_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_STATUS_REQ
@subsection Status Report Request
@subheading MAP_STATUS_REQ
@prindex MAP_STATUS_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STATUS_IND
@subsection Status Report Indication
@subheading MAP_STATUS_IND
@prindex MAP_STATUS_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_STATUS_RES
@subsection Status Report Response
@subheading MAP_STATUS_RES
@prindex MAP_STATUS_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_STATUS_CON
@subsection Status Report Confirmation
@subheading MAP_STATUS_CON
@prindex MAP_STATUS_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SUBLOCREP_REQ
@subsection Subscriber Location Report Request
@subheading MAP_SUBLOCREP_REQ
@prindex MAP_SUBLOCREP_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SUBLOCREP_IND
@subsection Subscriber Location Report Indication
@subheading MAP_SUBLOCREP_IND
@prindex MAP_SUBLOCREP_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SUBLOCREP_RES
@subsection Subscriber Location Report Response
@subheading MAP_SUBLOCREP_RES
@prindex MAP_SUBLOCREP_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SUBLOCREP_CON
@subsection Subscriber Location Report Confirmation
@subheading MAP_SUBLOCREP_CON
@prindex MAP_SUBLOCREP_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SUBSDATAMOD_REQ
@subsection Note Subscriber Data Modified Request
@subheading MAP_SUBSDATAMOD_REQ
@prindex MAP_SUBSDATAMOD_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SUBSDATAMOD_IND
@subsection Note Subscriber Data Modified Indication
@subheading MAP_SUBSDATAMOD_IND
@prindex MAP_SUBSDATAMOD_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_SUBSDATAMOD_RES
@subsection Note Subscriber Data Modified Response
@subheading MAP_SUBSDATAMOD_RES
@prindex MAP_SUBSDATAMOD_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_SUBSDATAMOD_CON
@subsection Note Subscriber Data Modified Confirmation
@subheading MAP_SUBSDATAMOD_CON
@prindex MAP_SUBSDATAMOD_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_TRACESA_REQ
@subsection Trace Subscriber Activity Request
@subheading MAP_TRACESA_REQ
@prindex MAP_TRACESA_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_TRACESA_IND
@subsection Trace Subscriber Activity Indication
@subheading MAP_TRACESA_IND
@prindex MAP_TRACESA_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_TRACESA_RES
@subsection Trace Subscriber Activity Response
@subheading MAP_TRACESA_RES
@prindex MAP_TRACESA_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_TRACESA_CON
@subsection Trace Subscriber Activity Confirmation
@subheading MAP_TRACESA_CON
@prindex MAP_TRACESA_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_UDGRPSLOC_REQ
@subsection Update GPRS Location Request
@subheading MAP_UDGRPSLOC_REQ
@prindex MAP_UDGRPSLOC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_UDGRPSLOC_IND
@subsection Update GPRS Location Indication
@subheading MAP_UDGRPSLOC_IND
@prindex MAP_UDGRPSLOC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_UDGRPSLOC_RES
@subsection Update GPRS Location Response
@subheading MAP_UDGRPSLOC_RES
@prindex MAP_UDGRPSLOC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_UDGRPSLOC_CON
@subsection Update GPRS Location Confirmation
@subheading MAP_UDGRPSLOC_CON
@prindex MAP_UDGRPSLOC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_UDLOC_REQ
@subsection Update Location Request
@subheading MAP_UDLOC_REQ
@prindex MAP_UDLOC_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_UDLOC_IND
@subsection Update Location Indication
@subheading MAP_UDLOC_IND
@prindex MAP_UDLOC_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_UDLOC_RES
@subsection Update Location Response
@subheading MAP_UDLOC_RES
@prindex MAP_UDLOC_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_UDLOC_CON
@subsection Update Location Confirmation
@subheading MAP_UDLOC_CON
@prindex MAP_UDLOC_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_USSDNTFY_REQ
@subsection Unstructured Supplementary Service Notify Request
@subheading MAP_USSDNTFY_REQ
@prindex MAP_USSDNTFY_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_USSDNTFY_IND
@subsection Unstructured Supplementary Service Notify Indication
@subheading MAP_USSDNTFY_IND
@prindex MAP_USSDNTFY_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_USSDNTFY_RES
@subsection Unstructured Supplementary Service Notify Response
@subheading MAP_USSDNTFY_RES
@prindex MAP_USSDNTFY_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_USSDNTFY_CON
@subsection Unstructured Supplementary Service Notify Confirmation
@subheading MAP_USSDNTFY_CON
@prindex MAP_USSDNTFY_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_USSDREQ_REQ
@subsection Unstructured Supplementary Service Request
@subheading MAP_USSDREQ_REQ
@prindex MAP_USSDREQ_REQ
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_USSDREQ_IND
@subsection Unstructured Supplementary Service Indication
@subheading MAP_USSDREQ_IND
@prindex MAP_USSDREQ_IND
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State

@page
@node MAP_USSDREQ_RES
@subsection Unstructured Supplementary Service Response
@subheading MAP_USSDREQ_RES
@prindex MAP_USSDREQ_RES
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State
@subsubheading Acknowledgements

This primitive requires the MAP provider to generate one of the following acknowledegements upon receipt of the
primitive, and the MAP user must wait for the acknowledgement before issuing any other primitives:

@itemize ---
@item @b{Success:}
Acknowledgement of the primitive with the @code{MAP_OK_ACK} primitive described in @ref{MAP_OK_ACK}.
@item @b{Non-fatal errors:}
These errors will be indicated with the @code{MAP_ERROR_ACK} primitive described in @ref{MAP_ERROR_ACK}.
The allowable errors are as follows:
@table @code
@item TOUTSTATE
The primitive would place the MAP interface out of state.
@item TSYSERR
A system error has occured and the UNIX System error in indicated in the primitive.
@end table
@end itemize

@page
@node MAP_USSDREQ_CON
@subsection Unstructured Supplementary Service Confirmation
@subheading MAP_USSDREQ_CON
@prindex MAP_USSDREQ_CON
@subsubheading Format
@subsubheading Parameters
@subsubheading Flags
@subsubheading Valid States
@subsubheading New State


@node Diagnostics Requirements
@chapter Diagnostics Requirements

Two error handling facilities should be provided to the MAP service user: one to handle non-fatal errors, and the other
to handle fatal errors.

@section Non-Fatal Error Handling Facility

These are errors that do not change the state of the MAP service interface as seen by the MAP service user and provide
the user with the option of reissuing the MAP primitive with the corrected options specification.  The non-fatal error
handling is provided only to those primitives that require acknowledgements, and uses the @code{MAP_ERROR_ACK} to report
these errors.  These errors retain the state of the MAP service interface the same as it was before the MAP provider
received the primitive that was in error.  Syntax errors and rule violations are reported via the non-fatal error
handling facility.

@section Fatal Error Handling Facility

These errors are issued by the MAP provider when it detects errors that are not correctable by the MAP user, or if it is
unable to report a correctible error to the MAP service user.  Fatal errors are indicated via the STREAMS message type
@code{M_ERROR} with the UNIX system error @code{EPROTO}.  The @code{M_ERROR} STREAMS message type will result in the
failure of all the UNIX system calls on the stream.  The MAP service user can recover from a fatal error by having all
the processes close the files associated with the stream, and then reopening them for processing.

@node References
@chapter References

@enumerate
@item CCITT X.213, (Geneva, 1986), ``Network Service Definition for Open Systems Interconnection (OSI) for CCITT Applications,'' (Grey Book).
@item ISO 8348 --- ``Information Processing Systems --- Data Communications --- Newtork Service Definition,'' 4/15/87
@item ISO 8348/AD --- ``Information Processing Systems --- Data Communications --- Newtork Service Definition --- Addendum 1: Connectionless Mode Transmission,'' 4/15/87
@item ISO 8373 --- ``Information Processing Systems --- Data Communicatoins Protocol for Providing the Connectionless Mode Network Service,'' SC6 N4542
@item ISO 8208 --- ``Information Processing Systems --- X.25 Packet Level Protocol for Data Terminal Equipment,'' 9/1/87
@item ISO 8878 --- ``Information Processing Systems --- Data Communications --- Use of X.25 to Provide the OSI Connection-Mode Network Service,'' 9/1/87
@item System V Interface Definition, Issue 2 -- Volume 3
@item CCITT X.210, (Geneva 1984), ``Open Systems Interconnection (OSI) Layer Service Definition Conventions,'' (Red Book)
@end enumerate

@node Addendum for 3GPP Conformance
@unnumbered Addendum for 3GPP Conformance

@node Mapping MAPI Primitives to 3GPP TS 29.002
@appendix Mapping MAPI Primitives to 3GPP TS 29.002

Table A-1 shows the mapping of the MAPI primitives to the MAP service definition primitives listed in 3GPP TS 29.002
Release 6.6.0.

@center @b{Table A-1.  Mapping of MAPI Primitives to 3GPP TS 29.002}
@multitable {@code{MAP_SMDELIVSTAT_REQ}}{MAP-ANY-TIME-SUBSCRIPTION-INTERROGATION @b{req}}
@item @b{MAP Primitive}		@tab @b{3GPP Service Primitive}
@item @code{MAP_OPEN_REQ}	@tab MAP-OPEN @b{req}
@item @code{MAP_OPEN_IND}	@tab MAP-OPEN @b{ind}
@item @code{MAP_OPEN_RES}	@tab MAP-OPEN @b{rsp}
@item @code{MAP_OPEN_CON}	@tab MAP-OPEN @b{cnf}
@item @code{MAP_CLOSE_REQ}	@tab MAP-CLOSE @b{req}
@item @code{MAP_CLOSE_IND}	@tab MAP-CLOSE @b{ind}
@item @code{MAP_DELIM_REQ}	@tab MAP-DELIMITER @b{req}
@item @code{MAP_DELIM_IND}	@tab MAP-DELIMITER @b{ind}
@item @code{MAP_ABORT_REQ}	@tab MAP-U-ABORT @b{req}
@item @code{MAP_UABORT_IND}	@tab MAP-U-ABORT @b{ind}
@item @code{MAP_PABORT_IND}	@tab MAP-P-ABORT @b{ind}
@item @code{MAP_NOTICE_IND}	@tab MAP-NOTICE @b{ind}

@item @code{MAP_STC1_REQ}	@tab MAP-SECURE-TRANSPORT-CLASS-1 @b{req}
@item @code{MAP_STC1_IND}	@tab MAP-SECURE-TRANSPORT-CLASS-1 @b{ind}
@item @code{MAP_STC2_REQ}	@tab MAP-SECURE-TRANSPORT-CLASS-2 @b{req}
@item @code{MAP_STC2_IND}	@tab MAP-SECURE-TRANSPORT-CLASS-2 @b{ind}
@item @code{MAP_STC3_REQ}	@tab MAP-SECURE-TRANSPORT-CLASS-3 @b{req}
@item @code{MAP_STC3_IND}	@tab MAP-SECURE-TRANSPORT-CLASS-3 @b{ind}
@item @code{MAP_STC4_REQ}	@tab MAP-SECURE-TRANSPORT-CLASS-4 @b{req}
@item @code{MAP_STC4_IND}	@tab MAP-SECURE-TRANSPORT-CLASS-4 @b{ind}

@item @code{MAP_ACTSS_REQ}	@tab MAP-ACTIVATE-SS @b{req}
@item @code{MAP_ACTSS_IND}	@tab MAP-ACTIVATE-SS @b{ind}
@item @code{MAP_ACTSS_RES}	@tab MAP-ACTIVATE-SS @b{rsp}
@item @code{MAP_ACTSS_CON}	@tab MAP-ACTIVATE-SS @b{cnf}
@item @code{MAP_ACTTM_REQ}	@tab MAP-ACTIVATE-TRACE-MODE @b{req}
@item @code{MAP_ACTTM_IND}	@tab MAP-ACTIVATE-TRACE-MODE @b{ind}
@item @code{MAP_ACTTM_RES}	@tab MAP-ACTIVATE-TRACE-MODE @b{rsp}
@item @code{MAP_ACTTM_CON}	@tab MAP-ACTIVATE-TRACE-MODE @b{cnf}
@item @code{MAP_ALERTSC_REQ}	@tab MAP-ALERT-SERVICE-CENTRE @b{req}
@item @code{MAP_ALERTSC_IND}	@tab MAP-ALERT-SERVICE-CENTRE @b{ind}
@item @code{MAP_ALERTSC_RES}	@tab MAP-ALERT-SERVICE-CENTRE @b{rsp}
@item @code{MAP_ALERTSC_CON}	@tab MAP-ALERT-SERVICE-CENTRE @b{cnf}
@item @code{MAP_ALLOCHN_REQ}	@tab MAP-ALLOCATE-HANDOVER-NUMBER @b{req}
@item @code{MAP_ALLOCHN_IND}	@tab MAP-ALLOCATE-HANDOVER-NUMBER @b{ind}
@item @code{MAP_ALLOCHN_RES}	@tab MAP-ALLOCATE-HANDOVER-NUMBER @b{rsp}
@item @code{MAP_ALLOCHN_CON}	@tab MAP-ALLOCATE-HANDOVER-NUMBER @b{cnf}
@item @code{MAP_ANYMOD_REQ}	@tab MAP-ANY-TIME-MODIFICATION @b{req}
@item @code{MAP_ANYMOD_IND}	@tab MAP-ANY-TIME-MODIFICATION @b{ind}
@item @code{MAP_ANYMOD_RES}	@tab MAP-ANY-TIME-MODIFICATION @b{rsp}
@item @code{MAP_ANYMOD_CON}	@tab MAP-ANY-TIME-MODIFICATION @b{cnf}
@item @code{MAP_ANYQRY_REQ}	@tab MAP-ANY-TIME-INTERROGATION @b{req}
@item @code{MAP_ANYQRY_IND}	@tab MAP-ANY-TIME-INTERROGATION @b{ind}
@item @code{MAP_ANYQRY_RES}	@tab MAP-ANY-TIME-INTERROGATION @b{rsp}
@item @code{MAP_ANYQRY_CON}	@tab MAP-ANY-TIME-INTERROGATION @b{cnf}
@item @code{MAP_ANYSUB_REQ}	@tab MAP-ANY-TIME-SUBSCRIPTION-INTERROGATION @b{req}
@item @code{MAP_ANYSUB_IND}	@tab MAP-ANY-TIME-SUBSCRIPTION-INTERROGATION @b{ind}
@item @code{MAP_ANYSUB_RES}	@tab MAP-ANY-TIME-SUBSCRIPTION-INTERROGATION @b{rsp}
@item @code{MAP_ANYSUB_CON}	@tab MAP-ANY-TIME-SUBSCRIPTION-INTERROGATION @b{cnf}
@item @code{MAP_AUTH_REQ}	@tab MAP-AUTHENTICATE @b{req}
@item @code{MAP_AUTH_IND}	@tab MAP-AUTHENTICATE @b{ind}
@item @code{MAP_AUTH_RES}	@tab MAP-AUTHENTICATE @b{rsp}
@item @code{MAP_AUTH_CON}	@tab MAP-AUTHENTICATE @b{cnf}
@item @code{MAP_AUTHFAIL_REQ}	@tab MAP-AUTHENTICATION-FAILURE-REPORT @b{req}
@item @code{MAP_AUTHFAIL_IND}	@tab MAP-AUTHENTICATION-FAILURE-REPORT @b{ind}
@item @code{MAP_AUTHFAIL_RES}	@tab MAP-AUTHENTICATION-FAILURE-REPORT @b{rsp}
@item @code{MAP_AUTHFAIL_CON}	@tab MAP-AUTHENTICATION-FAILURE-REPORT @b{cnf}
@item @code{MAP_CANCLOC_REQ}	@tab MAP-CANCEL-LOCATION @b{req}
@item @code{MAP_CANCLOC_IND}	@tab MAP-CANCEL-LOCATION @b{ind}
@item @code{MAP_CANCLOC_RES}	@tab MAP-CANCEL-LOCATION @b{rsp}
@item @code{MAP_CANCLOC_CON}	@tab MAP-CANCEL-LOCATION @b{cnf}
@item @code{MAP_CKIEMI_REQ}	@tab MAP-CHECK-IEMI @b{req}
@item @code{MAP_CKIEMI_IND}	@tab MAP-CHECK-IEMI @b{ind}
@item @code{MAP_CKIEMI_RES}	@tab MAP-CHECK-IEMI @b{rsp}
@item @code{MAP_CKIEMI_CON}	@tab MAP-CHECK-IEMI @b{cnf}
@item @code{MAP_DEACTSS_REQ}	@tab MAP-DEACTIVATE-SS @b{req}
@item @code{MAP_DEACTSS_IND}	@tab MAP-DEACTIVATE-SS @b{ind}
@item @code{MAP_DEACTSS_RES}	@tab MAP-DEACTIVATE-SS @b{rsp}
@item @code{MAP_DEACTSS_CON}	@tab MAP-DEACTIVATE-SS @b{cnf}
@item @code{MAP_DEACTTM_REQ}	@tab MAP-DEACTIVATE-TRACE-MODE @b{req}
@item @code{MAP_DEACTTM_IND}	@tab MAP-DEACTIVATE-TRACE-MODE @b{ind}
@item @code{MAP_DEACTTM_RES}	@tab MAP-DEACTIVATE-TRACE-MODE @b{rsp}
@item @code{MAP_DEACTTM_CON}	@tab MAP-DEACTIVATE-TRACE-MODE @b{cnf}
@item @code{MAP_DELSUBD_REQ}	@tab MAP-DELETE-SUBSCRIBER-DATA @b{req}
@item @code{MAP_DELSUBD_IND}	@tab MAP-DELETE-SUBSCRIBER-DATA @b{ind}
@item @code{MAP_DELSUBD_RES}	@tab MAP-DELETE-SUBSCRIBER-DATA @b{rsp}
@item @code{MAP_DELSUBD_CON}	@tab MAP-DELETE-SUBSCRIBER-DATA @b{cnf}
@item @code{MAP_ERASECC_REQ}	@tab MAP-ERASE-CC-ENTRY @b{req}
@item @code{MAP_ERASECC_IND}	@tab MAP-ERASE-CC-ENTRY @b{ind}
@item @code{MAP_ERASECC_RES}	@tab MAP-ERASE-CC-ENTRY @b{rsp}
@item @code{MAP_ERASECC_CON}	@tab MAP-ERASE-CC-ENTRY @b{cnf}
@item @code{MAP_ERASESS_REQ}	@tab MAP-ERASE-SS @b{req}
@item @code{MAP_ERASESS_IND}	@tab MAP-ERASE-SS @b{ind}
@item @code{MAP_ERASESS_RES}	@tab MAP-ERASE-SS @b{rsp}
@item @code{MAP_ERASESS_CON}	@tab MAP-ERASE-SS @b{cnf}
@item @code{MAP_FAILURE_REQ}	@tab MAP-FAILURE-REPORT @b{req}
@item @code{MAP_FAILURE_IND}	@tab MAP-FAILURE-REPORT @b{ind}
@item @code{MAP_FAILURE_RES}	@tab MAP-FAILURE-REPORT @b{rsp}
@item @code{MAP_FAILURE_CON}	@tab MAP-FAILURE-REPORT @b{cnf}
@item @code{MAP_FAS_REQ}	@tab MAP-FORWARD-ACCESS-SIGNALLING @b{req}
@item @code{MAP_FAS_IND}	@tab MAP-FORWARD-ACCESS-SIGNALLING @b{ind}
@item @code{MAP_FAS_RES}	@tab MAP-FORWARD-ACCESS-SIGNALLING @b{rsp}
@item @code{MAP_FAS_CON}	@tab MAP-FORWARD-ACCESS-SIGNALLING @b{cnf}
@item @code{MAP_FCKSSIND_REQ}	@tab MAP-FORWARD-CHECK-SS-INDICATION @b{req}
@item @code{MAP_FCKSSIND_IND}	@tab MAP-FORWARD-CHECK-SS-INDICATION @b{ind}
@item @code{MAP_FCKSSIND_RES}	@tab MAP-FORWARD-CHECK-SS-INDICATION @b{rsp}
@item @code{MAP_FCKSSIND_CON}	@tab MAP-FORWARD-CHECK-SS-INDICATION @b{cnf}
@item @code{MAP_FGRCSIG_REQ}	@tab MAP-FORWARD-GROUP-CALL-SIGNALLING @b{req}
@item @code{MAP_FGRCSIG_IND}	@tab MAP-FORWARD-GROUP-CALL-SIGNALLING @b{ind}
@item @code{MAP_FGRCSIG_RES}	@tab MAP-FORWARD-GROUP-CALL-SIGNALLING @b{rsp}
@item @code{MAP_FGRCSIG_CON}	@tab MAP-FORWARD-GROUP-CALL-SIGNALLING @b{cnf}
@item @code{MAP_FNEWIMSI_REQ}	@tab MAP-FORWARD-NEW-IMSI @b{req}
@item @code{MAP_FNEWIMSI_IND}	@tab MAP-FORWARD-NEW-IMSI @b{ind}
@item @code{MAP_FNEWIMSI_RES}	@tab MAP-FORWARD-NEW-IMSI @b{rsp}
@item @code{MAP_FNEWIMSI_CON}	@tab MAP-FORWARD-NEW-IMSI @b{cnf}
@item @code{MAP_GETIEMI_REQ}	@tab MAP-OBTAIN-IEMI @b{req}
@item @code{MAP_GETIEMI_IND}	@tab MAP-OBTAIN-IEMI @b{ind}
@item @code{MAP_GETIEMI_RES}	@tab MAP-OBTAIN-IEMI @b{rsp}
@item @code{MAP_GETIEMI_CON}	@tab MAP-OBTAIN-IEMI @b{cnf}
@item @code{MAP_GETPASS_REQ}	@tab MAP-GET-PASSWORD @b{req}
@item @code{MAP_GETPASS_IND}	@tab MAP-GET-PASSWORD @b{ind}
@item @code{MAP_GETPASS_RES}	@tab MAP-GET-PASSWORD @b{rsp}
@item @code{MAP_GETPASS_CON}	@tab MAP-GET-PASSWORD @b{cnf}
@item @code{MAP_INFORMSC_REQ}	@tab MAP-INFORM-SERVICE-CENTER @b{req}
@item @code{MAP_INFORMSC_IND}	@tab MAP-INFORM-SERVICE-CENTER @b{ind}
@item @code{MAP_INFORMSC_RES}	@tab MAP-INFORM-SERVICE-CENTER @b{rsp}
@item @code{MAP_INFORMSC_CON}	@tab MAP-INFORM-SERVICE-CENTER @b{cnf}
@item @code{MAP_INSSUBSD_REQ}	@tab MAP-INSERT-SUBSCRIBER-DATA @b{req}
@item @code{MAP_INSSUBSD_IND}	@tab MAP-INSERT-SUBSCRIBER-DATA @b{ind}
@item @code{MAP_INSSUBSD_RES}	@tab MAP-INSERT-SUBSCRIBER-DATA @b{rsp}
@item @code{MAP_INSSUBSD_CON}	@tab MAP-INSERT-SUBSCRIBER-DATA @b{cnf}
@item @code{MAP_INTERGSS_REQ}	@tab MAP-INTERROGATE-SS @b{req}
@item @code{MAP_INTERGSS_IND}	@tab MAP-INTERROGATE-SS @b{ind}
@item @code{MAP_INTERGSS_RES}	@tab MAP-INTERROGATE-SS @b{rsp}
@item @code{MAP_INTERGSS_CON}	@tab MAP-INTERROGATE-SS @b{cnf}
@item @code{MAP_ISTALERT_REQ}	@tab MAP-IST-ALERT @b{req}
@item @code{MAP_ISTALERT_IND}	@tab MAP-IST-ALERT @b{ind}
@item @code{MAP_ISTALERT_RES}	@tab MAP-IST-ALERT @b{rsp}
@item @code{MAP_ISTALERT_CON}	@tab MAP-IST-ALERT @b{cnf}
@item @code{MAP_ISTCMD_REQ}	@tab MAP-IST-COMMAND @b{req}
@item @code{MAP_ISTCMD_IND}	@tab MAP-IST-COMMAND @b{ind}
@item @code{MAP_ISTCMD_RES}	@tab MAP-IST-COMMAND @b{rsp}
@item @code{MAP_ISTCMD_CON}	@tab MAP-IST-COMMAND @b{cnf}
@item @code{MAP_MMEVENT_REQ}	@tab MAP-NOTE-MM-EVENT @b{req}
@item @code{MAP_MMEVENT_IND}	@tab MAP-NOTE-MM-EVENT @b{ind}
@item @code{MAP_MMEVENT_RES}	@tab MAP-NOTE-MM-EVENT @b{rsp}
@item @code{MAP_MMEVENT_CON}	@tab MAP-NOTE-MM-EVENT @b{cnf}
@item @code{MAP_MOFSMS_REQ}	@tab MAP-MO-FORWARD-SHORT-MESSAGE @b{req}
@item @code{MAP_MOFSMS_IND}	@tab MAP-MO-FORWARD-SHORT-MESSAGE @b{ind}
@item @code{MAP_MOFSMS_RES}	@tab MAP-MO-FORWARD-SHORT-MESSAGE @b{rsp}
@item @code{MAP_MOFSMS_CON}	@tab MAP-MO-FORWARD-SHORT-MESSAGE @b{cnf}
@item @code{MAP_MSGRPSPRES_REQ}	@tab MAP-NOTE-MS-PRESENT-FOR-GPRS @b{req}
@item @code{MAP_MSGRPSPRES_IND}	@tab MAP-NOTE-MS-PRESENT-FOR-GPRS @b{ind}
@item @code{MAP_MSGRPSPRES_RES}	@tab MAP-NOTE-MS-PRESENT-FOR-GPRS @b{rsp}
@item @code{MAP_MSGRPSPRES_CON}	@tab MAP-NOTE-MS-PRESENT-FOR-GPRS @b{cnf}
@item @code{MAP_MTFSMS_REQ}	@tab MAP-MT-FORWARD-SHORT-MESSAGE @b{req}
@item @code{MAP_MTFSMS_IND}	@tab MAP-MT-FORWARD-SHORT-MESSAGE @b{ind}
@item @code{MAP_MTFSMS_RES}	@tab MAP-MT-FORWARD-SHORT-MESSAGE @b{rsp}
@item @code{MAP_MTFSMS_CON}	@tab MAP-MT-FORWARD-SHORT-MESSAGE @b{cnf}
@item @code{MAP_PAGE_REQ}	@tab MAP-PAGE @b{req}
@item @code{MAP_PAGE_IND}	@tab MAP-PAGE @b{ind}
@item @code{MAP_PAGE_RES}	@tab MAP-PAGE @b{rsp}
@item @code{MAP_PAGE_CON}	@tab MAP-PAGE @b{cnf}
@item @code{MAP_PREPGC_REQ}	@tab MAP-PREPARE-GROUP-CALL @b{req}
@item @code{MAP_PREPGC_IND}	@tab MAP-PREPARE-GROUP-CALL @b{ind}
@item @code{MAP_PREPGC_RES}	@tab MAP-PREPARE-GROUP-CALL @b{rsp}
@item @code{MAP_PREPGC_CON}	@tab MAP-PREPARE-GROUP-CALL @b{cnf}
@item @code{MAP_PREPHO_REQ}	@tab MAP-PREPARE-HANDOVER @b{req}
@item @code{MAP_PREPHO_IND}	@tab MAP-PREPARE-HANDOVER @b{ind}
@item @code{MAP_PREPHO_RES}	@tab MAP-PREPARE-HANDOVER @b{rsp}
@item @code{MAP_PREPHO_CON}	@tab MAP-PREPARE-HANDOVER @b{cnf}
@item @code{MAP_PREPSH_REQ}	@tab MAP-PREPARE-SUBSEQUENT-HANDOVER @b{req}
@item @code{MAP_PREPSH_IND}	@tab MAP-PREPARE-SUBSEQUENT-HANDOVER @b{ind}
@item @code{MAP_PREPSH_RES}	@tab MAP-PREPARE-SUBSEQUENT-HANDOVER @b{rsp}
@item @code{MAP_PREPSH_CON}	@tab MAP-PREPARE-SUBSEQUENT-HANDOVER @b{cnf}
@item @code{MAP_PROCAS_REQ}	@tab MAP-PROCESS-ACCESS-SIGNALLING @b{req}
@item @code{MAP_PROCAS_IND}	@tab MAP-PROCESS-ACCESS-SIGNALLING @b{ind}
@item @code{MAP_PROCAS_RES}	@tab MAP-PROCESS-ACCESS-SIGNALLING @b{rsp}
@item @code{MAP_PROCAS_CON}	@tab MAP-PROCESS-ACCESS-SIGNALLING @b{cnf}
@item @code{MAP_PROCGC_REQ}	@tab MAP-PROCESS-GROUP-CALL-SIGNALLING @b{req}
@item @code{MAP_PROCGC_IND}	@tab MAP-PROCESS-GROUP-CALL-SIGNALLING @b{ind}
@item @code{MAP_PROCGC_RES}	@tab MAP-PROCESS-GROUP-CALL-SIGNALLING @b{rsp}
@item @code{MAP_PROCGC_CON}	@tab MAP-PROCESS-GROUP-CALL-SIGNALLING @b{cnf}
@item @code{MAP_PROCUSS_REQ}	@tab MAP-PROCESS-UNSTRUCTURED-SS-REQUEST @b{req}
@item @code{MAP_PROCUSS_IND}	@tab MAP-PROCESS-UNSTRUCTURED-SS-REQUEST @b{ind}
@item @code{MAP_PROCUSS_RES}	@tab MAP-PROCESS-UNSTRUCTURED-SS-REQUEST @b{rsp}
@item @code{MAP_PROCUSS_CON}	@tab MAP-PROCESS-UNSTRUCTURED-SS-REQUEST @b{cnf}
@item @code{MAP_PROVIMSI_REQ}	@tab MAP-PROVIDE-IMSI @b{req}
@item @code{MAP_PROVIMSI_IND}	@tab MAP-PROVIDE-IMSI @b{ind}
@item @code{MAP_PROVIMSI_RES}	@tab MAP-PROVIDE-IMSI @b{rsp}
@item @code{MAP_PROVIMSI_CON}	@tab MAP-PROVIDE-IMSI @b{cnf}
@item @code{MAP_PROVRN_REQ}	@tab MAP-PROVIDE-ROAMING-NUMBER @b{req}
@item @code{MAP_PROVRN_IND}	@tab MAP-PROVIDE-ROAMING-NUMBER @b{ind}
@item @code{MAP_PROVRN_RES}	@tab MAP-PROVIDE-ROAMING-NUMBER @b{rsp}
@item @code{MAP_PROVRN_CON}	@tab MAP-PROVIDE-ROAMING-NUMBER @b{cnf}
@item @code{MAP_PROVSLOC_REQ}	@tab MAP-PROVIDE-SUBSCRIBER-LOCATION @b{req}
@item @code{MAP_PROVSLOC_IND}	@tab MAP-PROVIDE-SUBSCRIBER-LOCATION @b{ind}
@item @code{MAP_PROVSLOC_RES}	@tab MAP-PROVIDE-SUBSCRIBER-LOCATION @b{rsp}
@item @code{MAP_PROVSLOC_CON}	@tab MAP-PROVIDE-SUBSCRIBER-LOCATION @b{cnf}
@item @code{MAP_PROVSUBI_REQ}	@tab MAP-PROVIDE-SUBSCRIBER-INFO @b{req}
@item @code{MAP_PROVSUBI_IND}	@tab MAP-PROVIDE-SUBSCRIBER-INFO @b{ind}
@item @code{MAP_PROVSUBI_RES}	@tab MAP-PROVIDE-SUBSCRIBER-INFO @b{rsp}
@item @code{MAP_PROVSUBI_CON}	@tab MAP-PROVIDE-SUBSCRIBER-INFO @b{cnf}
@item @code{MAP_PURGEMS_REQ}	@tab MAP-PURGE-MS @b{req}
@item @code{MAP_PURGEMS_IND}	@tab MAP-PURGE-MS @b{ind}
@item @code{MAP_PURGEMS_RES}	@tab MAP-PURGE-MS @b{rsp}
@item @code{MAP_PURGEMS_CON}	@tab MAP-PURGE-MS @b{cnf}
@item @code{MAP_RDYSM_REQ}	@tab MAP-READY-FOR-SM @b{req}
@item @code{MAP_RDYSM_IND}	@tab MAP-READY-FOR-SM @b{ind}
@item @code{MAP_RDYSM_RES}	@tab MAP-READY-FOR-SM @b{rsp}
@item @code{MAP_RDYSM_CON}	@tab MAP-READY-FOR-SM @b{cnf}
@item @code{MAP_REGCC_REQ}	@tab MAP-REGISTER-CC-ENTRY @b{req}
@item @code{MAP_REGCC_IND}	@tab MAP-REGISTER-CC-ENTRY @b{ind}
@item @code{MAP_REGCC_RES}	@tab MAP-REGISTER-CC-ENTRY @b{rsp}
@item @code{MAP_REGCC_CON}	@tab MAP-REGISTER-CC-ENTRY @b{cnf}
@item @code{MAP_REGPW_REQ}	@tab MAP-REGISTER-PASSWORD @b{req}
@item @code{MAP_REGPW_IND}	@tab MAP-REGISTER-PASSWORD @b{ind}
@item @code{MAP_REGPW_RES}	@tab MAP-REGISTER-PASSWORD @b{rsp}
@item @code{MAP_REGPW_CON}	@tab MAP-REGISTER-PASSWORD @b{cnf}
@item @code{MAP_REGSS_REQ}	@tab MAP-REGISTER-SS @b{req}
@item @code{MAP_REGSS_IND}	@tab MAP-REGISTER-SS @b{ind}
@item @code{MAP_REGSS_RES}	@tab MAP-REGISTER-SS @b{rsp}
@item @code{MAP_REGSS_CON}	@tab MAP-REGISTER-SS @b{cnf}
@item @code{MAP_REMUSRFREE_REQ}	@tab MAP-REMOTE-USER-FREE @b{req}
@item @code{MAP_REMUSRFREE_IND}	@tab MAP-REMOTE-USER-FREE @b{ind}
@item @code{MAP_REMUSRFREE_RES}	@tab MAP-REMOTE-USER-FREE @b{rsp}
@item @code{MAP_REMUSRFREE_CON}	@tab MAP-REMOTE-USER-FREE @b{cnf}
@item @code{MAP_RESET_REQ}	@tab MAP-RESET @b{req}
@item @code{MAP_RESET_IND}	@tab MAP-RESET @b{ind}
@item @code{MAP_RESET_RES}	@tab MAP-RESET @b{rsp}
@item @code{MAP_RESET_CON}	@tab MAP-RESET @b{cnf}
@item @code{MAP_RESTORE_REQ}	@tab MAP-RESTORE-DATA @b{req}
@item @code{MAP_RESTORE_IND}	@tab MAP-RESTORE-DATA @b{ind}
@item @code{MAP_RESTORE_RES}	@tab MAP-RESTORE-DATA @b{rsp}
@item @code{MAP_RESTORE_CON}	@tab MAP-RESTORE-DATA @b{cnf}
@item @code{MAP_RESUME_REQ}	@tab MAP-RESUME-CALL-HANDLING @b{req}
@item @code{MAP_RESUME_IND}	@tab MAP-RESUME-CALL-HANDLING @b{ind}
@item @code{MAP_RESUME_RES}	@tab MAP-RESUME-CALL-HANDLING @b{rsp}
@item @code{MAP_RESUME_CON}	@tab MAP-RESUME-CALL-HANDLING @b{cnf}
@item @code{MAP_SEARCH_REQ}	@tab MAP-SEARCH-FOR-MS @b{req}
@item @code{MAP_SEARCH_IND}	@tab MAP-SEARCH-FOR-MS @b{ind}
@item @code{MAP_SEARCH_RES}	@tab MAP-SEARCH-FOR-MS @b{rsp}
@item @code{MAP_SEARCH_CON}	@tab MAP-SEARCH-FOR-MS @b{cnf}
@item @code{MAP_SENDAUTHI_REQ}	@tab MAP-SEND-AUTHENTICATION-INFO @b{req}
@item @code{MAP_SENDAUTHI_IND}	@tab MAP-SEND-AUTHENTICATION-INFO @b{ind}
@item @code{MAP_SENDAUTHI_RES}	@tab MAP-SEND-AUTHENTICATION-INFO @b{rsp}
@item @code{MAP_SENDAUTHI_CON}	@tab MAP-SEND-AUTHENTICATION-INFO @b{cnf}
@item @code{MAP_SENDEND_REQ}	@tab MAP-SEND-END-SIGNAL @b{req}
@item @code{MAP_SENDEND_IND}	@tab MAP-SEND-END-SIGNAL @b{ind}
@item @code{MAP_SENDEND_RES}	@tab MAP-SEND-END-SIGNAL @b{rsp}
@item @code{MAP_SENDEND_CON}	@tab MAP-SEND-END-SIGNAL @b{cnf}
@item @code{MAP_SENDGCEND_REQ}	@tab MAP-SEND-GROUP-CALL-END-SIGNAL @b{req}
@item @code{MAP_SENDGCEND_IND}	@tab MAP-SEND-GROUP-CALL-END-SIGNAL @b{ind}
@item @code{MAP_SENDGCEND_RES}	@tab MAP-SEND-GROUP-CALL-END-SIGNAL @b{rsp}
@item @code{MAP_SENDGCEND_CON}	@tab MAP-SEND-GROUP-CALL-END-SIGNAL @b{cnf}
@item @code{MAP_SENDGPRSRI_REQ}	@tab MAP-SEND-ROUTING-INFO-FOR-GPRS @b{req}
@item @code{MAP_SENDGPRSRI_IND}	@tab MAP-SEND-ROUTING-INFO-FOR-GPRS @b{ind}
@item @code{MAP_SENDGPRSRI_RES}	@tab MAP-SEND-ROUTING-INFO-FOR-GPRS @b{rsp}
@item @code{MAP_SENDGPRSRI_CON}	@tab MAP-SEND-ROUTING-INFO-FOR-GPRS @b{cnf}
@item @code{MAP_SENDHOREP_REQ}	@tab MAP-SEND-HANDOVER-REPORT @b{req}
@item @code{MAP_SENDHOREP_IND}	@tab MAP-SEND-HANDOVER-REPORT @b{ind}
@item @code{MAP_SENDHOREP_RES}	@tab MAP-SEND-HANDOVER-REPORT @b{rsp}
@item @code{MAP_SENDHOREP_CON}	@tab MAP-SEND-HANDOVER-REPORT @b{cnf}
@item @code{MAP_SENDID_REQ}	@tab MAP-SEND-IDENTIFICATION @b{req}
@item @code{MAP_SENDID_IND}	@tab MAP-SEND-IDENTIFICATION @b{ind}
@item @code{MAP_SENDID_RES}	@tab MAP-SEND-IDENTIFICATION @b{rsp}
@item @code{MAP_SENDID_CON}	@tab MAP-SEND-IDENTIFICATION @b{cnf}
@item @code{MAP_SENDIMSI_REQ}	@tab MAP-SEND-IMSI @b{req}
@item @code{MAP_SENDIMSI_IND}	@tab MAP-SEND-IMSI @b{ind}
@item @code{MAP_SENDIMSI_RES}	@tab MAP-SEND-IMSI @b{rsp}
@item @code{MAP_SENDIMSI_CON}	@tab MAP-SEND-IMSI @b{cnf}
@item @code{MAP_SENDLCSRI_REQ}	@tab MAP-SEND-ROUTING-INFO-FOR-LCS @b{req}
@item @code{MAP_SENDLCSRI_IND}	@tab MAP-SEND-ROUTING-INFO-FOR-LCS @b{ind}
@item @code{MAP_SENDLCSRI_RES}	@tab MAP-SEND-ROUTING-INFO-FOR-LCS @b{rsp}
@item @code{MAP_SENDLCSRI_CON}	@tab MAP-SEND-ROUTING-INFO-FOR-LCS @b{cnf}
@item @code{MAP_SENDMOSMSI_REQ}	@tab MAP-SEND-INFO-FOR-MO-SMS @b{req}
@item @code{MAP_SENDMOSMSI_IND}	@tab MAP-SEND-INFO-FOR-MO-SMS @b{ind}
@item @code{MAP_SENDMOSMSI_RES}	@tab MAP-SEND-INFO-FOR-MO-SMS @b{rsp}
@item @code{MAP_SENDMOSMSI_CON}	@tab MAP-SEND-INFO-FOR-MO-SMS @b{cnf}
@item @code{MAP_SENDMTSMSI_REQ}	@tab MAP-SEND-INFO-FOR-MT-SMS @b{req}
@item @code{MAP_SENDMTSMSI_IND}	@tab MAP-SEND-INFO-FOR-MT-SMS @b{ind}
@item @code{MAP_SENDMTSMSI_RES}	@tab MAP-SEND-INFO-FOR-MT-SMS @b{rsp}
@item @code{MAP_SENDMTSMSI_CON}	@tab MAP-SEND-INFO-FOR-MT-SMS @b{cnf}
@item @code{MAP_SENDRI_REQ}	@tab MAP-SEND-ROUTING-INFORMATION @b{req}
@item @code{MAP_SENDRI_IND}	@tab MAP-SEND-ROUTING-INFORMATION @b{ind}
@item @code{MAP_SENDRI_RES}	@tab MAP-SEND-ROUTING-INFORMATION @b{rsp}
@item @code{MAP_SENDRI_CON}	@tab MAP-SEND-ROUTING-INFORMATION @b{cnf}
@item @code{MAP_SENDSMSRI_REQ}	@tab MAP-SEND-ROUTING-INFO-FOR-SM @b{req}
@item @code{MAP_SENDSMSRI_IND}	@tab MAP-SEND-ROUTING-INFO-FOR-SM @b{ind}
@item @code{MAP_SENDSMSRI_RES}	@tab MAP-SEND-ROUTING-INFO-FOR-SM @b{rsp}
@item @code{MAP_SENDSMSRI_CON}	@tab MAP-SEND-ROUTING-INFO-FOR-SM @b{cnf}
@item @code{MAP_SETCM_REQ}	@tab MAP-SET-CIPHERING-MODE @b{req}
@item @code{MAP_SETCM_IND}	@tab MAP-SET-CIPHERING-MODE @b{ind}
@item @code{MAP_SETCM_RES}	@tab MAP-SET-CIPHERING-MODE @b{rsp}
@item @code{MAP_SETCM_CON}	@tab MAP-SET-CIPHERING-MODE @b{cnf}
@item @code{MAP_SETREP_REQ}	@tab MAP-SET-REPORTING-STATE @b{req}
@item @code{MAP_SETREP_IND}	@tab MAP-SET-REPORTING-STATE @b{ind}
@item @code{MAP_SETREP_RES}	@tab MAP-SET-REPORTING-STATE @b{rsp}
@item @code{MAP_SETREP_CON}	@tab MAP-SET-REPORTING-STATE @b{cnf}
@item @code{MAP_SMDELIVSTAT_REQ} @tab MAP-REPORT-SM-DELIVER-STATUS @b{req}
@item @code{MAP_SMDELIVSTAT_IND} @tab MAP-REPORT-SM-DELIVER-STATUS @b{ind}
@item @code{MAP_SMDELIVSTAT_RES} @tab MAP-REPORT-SM-DELIVER-STATUS @b{rsp}
@item @code{MAP_SMDELIVSTAT_CON} @tab MAP-REPORT-SM-DELIVER-STATUS @b{cnf}
@item @code{MAP_SSINV_REQ}	@tab MAP-SS-INVOCATION-NOTIFICATION @b{req}
@item @code{MAP_SSINV_IND}	@tab MAP-SS-INVOCATION-NOTIFICATION @b{ind}
@item @code{MAP_SSINV_RES}	@tab MAP-SS-INVOCATION-NOTIFICATION @b{rsp}
@item @code{MAP_SSINV_CON}	@tab MAP-SS-INVOCATION-NOTIFICATION @b{cnf}
@item @code{MAP_STATUS_REQ}	@tab MAP-STATUS-REPORT @b{req}
@item @code{MAP_STATUS_IND}	@tab MAP-STATUS-REPORT @b{ind}
@item @code{MAP_STATUS_RES}	@tab MAP-STATUS-REPORT @b{rsp}
@item @code{MAP_STATUS_CON}	@tab MAP-STATUS-REPORT @b{cnf}
@item @code{MAP_SUBLOCREP_REQ}	@tab MAP-SUBSCRIBER-LOCATION-REPORT @b{req}
@item @code{MAP_SUBLOCREP_IND}	@tab MAP-SUBSCRIBER-LOCATION-REPORT @b{ind}
@item @code{MAP_SUBLOCREP_RES}	@tab MAP-SUBSCRIBER-LOCATION-REPORT @b{rsp}
@item @code{MAP_SUBLOCREP_CON}	@tab MAP-SUBSCRIBER-LOCATION-REPORT @b{cnf}
@item @code{MAP_SUBSDATAMOD_REQ} @tab MAP-NOTE-SUBSCRIBER-DATA-MODIFIED @b{req}
@item @code{MAP_SUBSDATAMOD_IND} @tab MAP-NOTE-SUBSCRIBER-DATA-MODIFIED @b{ind}
@item @code{MAP_SUBSDATAMOD_RES} @tab MAP-NOTE-SUBSCRIBER-DATA-MODIFIED @b{rsp}
@item @code{MAP_SUBSDATAMOD_CON} @tab MAP-NOTE-SUBSCRIBER-DATA-MODIFIED @b{cnf}
@item @code{MAP_TRACESA_REQ}	@tab MAP-TRACE-SUBSCRIBER-ACTIVITY @b{req}
@item @code{MAP_TRACESA_IND}	@tab MAP-TRACE-SUBSCRIBER-ACTIVITY @b{ind}
@item @code{MAP_TRACESA_RES}	@tab MAP-TRACE-SUBSCRIBER-ACTIVITY @b{rsp}
@item @code{MAP_TRACESA_CON}	@tab MAP-TRACE-SUBSCRIBER-ACTIVITY @b{cnf}
@item @code{MAP_UDGRPSLOC_REQ}	@tab MAP-UPDATE-GPRS-LOCATION @b{req}
@item @code{MAP_UDGRPSLOC_IND}	@tab MAP-UPDATE-GPRS-LOCATION @b{ind}
@item @code{MAP_UDGRPSLOC_RES}	@tab MAP-UPDATE-GPRS-LOCATION @b{rsp}
@item @code{MAP_UDGRPSLOC_CON}	@tab MAP-UPDATE-GPRS-LOCATION @b{cnf}
@item @code{MAP_UDLOC_REQ}	@tab MAP-UPDATE-LOCATION @b{req}
@item @code{MAP_UDLOC_IND}	@tab MAP-UPDATE-LOCATION @b{ind}
@item @code{MAP_UDLOC_RES}	@tab MAP-UPDATE-LOCATION @b{rsp}
@item @code{MAP_UDLOC_CON}	@tab MAP-UPDATE-LOCATION @b{cnf}
@item @code{MAP_USSDNTFY_REQ}	@tab MAP-UNSTRUCTURED-SS-NOTIFY @b{req}
@item @code{MAP_USSDNTFY_IND}	@tab MAP-UNSTRUCTURED-SS-NOTIFY @b{ind}
@item @code{MAP_USSDNTFY_RES}	@tab MAP-UNSTRUCTURED-SS-NOTIFY @b{rsp}
@item @code{MAP_USSDNTFY_CON}	@tab MAP-UNSTRUCTURED-SS-NOTIFY @b{cnf}
@item @code{MAP_USSDREQ_REQ}	@tab MAP-UNSTRUCTURED-SS-REQUEST @b{req}
@item @code{MAP_USSDREQ_IND}	@tab MAP-UNSTRUCTURED-SS-REQUEST @b{ind}
@item @code{MAP_USSDREQ_RES}	@tab MAP-UNSTRUCTURED-SS-REQUEST @b{rsp}
@item @code{MAP_USSDREQ_CON}	@tab MAP-UNSTRUCTURED-SS-REQUEST @b{cnf}

@end multitable

@section Application Contexts

@sp 2
@center @b{Table 1.  Application Contexts}
@multitable {v3}{subscriberDataModificationNotificationContext}{anyTimeSubscriptionInterrogation,}
@item @b{Ver.}	@tab @b{Application Contexts}				@tab @b{Operations}
@item v3	@tab locationCancellationContext			@tab cancelLocation
@item v3	@tab equipmentMngtContext				@tab checkIEMI
@item v2	@tab imsiRetrievalContext				@tab sendIMSI
@item v3	@tab infoRetrievalContext				@tab sendAuthenticationInfo
@item v3	@tab interVlrInfoRetrievalContext			@tab sendIdentification
@item v3	@tab handoverControlContext				@tab prepareHandover,@* forwareAccessSignalling,@* sendEndSignal,@* processAccessSignalling,@* prepareSubsequentHandover
@item v3	@tab mwdMngtContext					@tab readyForSM
@item v3	@tab msPurgingContext					@tab purgeMS
@item v2	@tab shortMsgAlertContext				@tab alertServiceCentre
@item v2	@tab resetContext					@tab reset
@item v2	@tab networkUnstructuredSsContext			@tab processUnstructuredSS-Request,@* unstructuredSS-Request,@* unstructuredSS-Notify
@item v3	@tab tracingContext					@tab activateTraceMode,@* deactivateTraceMode
@item v2	@tab networkFunctionalSsContext				@tab registerSS,@* eraseSS,@* activateSS,@* deactivateSS,@* registerPassword,@* interrogateSS,@* getPassword
@item v3	@tab shortMsgMO-RelayContext				@tab mo-forwardSM
@item v3	@tab shortMsgMT-RelayContext				@tab mt-forwardSM
@item v3	@tab shortMsgGatewayContext				@tab sendRoutingInfoForSM,@* reportSM-DeliveryStatus,@* InformServiceCentre
@item v3	@tab networkLocUpContext				@tab updateLocation,@* forwardCheckSs-Indication,@* restoreData,@* insertSubscriberData,@* activateTraceMode
@item v3	@tab gprsLocationUpdateContext				@tab updateGprsLocation,@* insertSubscriberData,@* activateTraceMode
@item v3	@tab subscriberDataMngtContext				@tab insertSubscriberData,@* deleteSubscriberData
@item v3	@tab roamingNumberEnquiryContext			@tab provideRoamingNumber
@item v3	@tab locationInfoRetrievalContext			@tab sendRoutingInfo
@item v3	@tab gprsNotifyContext					@tab noteMsPresentForGprs
@item v4	@tab gprsLocationInfoRetrievalContext			@tab sendRoutingInfoForGprs
@item v3	@tab failureReportContext				@tab failureReport
@item v4	@tab callControlTransferContext				@tab resumeCallHandling
@item v3	@tab susbcriberInfoEnquiryContext			@tab provideSubscriberInfo
@item v3	@tab anyTimeEnquiryContext				@tab anyTimeInterrogation
@item v3	@tab anyTimeInfoHandlingContext				@tab anyTimeSubscriptionInterrogation,@* anyTimeModification
@item v3	@tab ss-InvocationNotificationContext			@tab ss-InvocationNotification
@item v3	@tab groupCallControlContext				@tab prepareGroupCall,@* processGroupCallSignalling,@* forwardGroupCallSignalling,@* sendGroupCallEndSignal
@item v3	@tab reportingContext					@tab setReportingState,@* statusReport,@* remoteUserFree
@item v3	@tab callCompletionContext				@tab registerCC-Entry,@* eraceCC-Entry
@item v3	@tab isAlertingContext					@tab isAlert
@item v3	@tab ServiceTerminationContext				@tab istCommand
@item v3	@tab locationSvcEnquiryContext				@tab provideSubscriberLocation,@* subscriberLocationReport
@item v3	@tab locationSvcGatewayContext				@tab sendRoutingInfoForLCS
@item v3	@tab mm-EventReportingContext				@tab noteMM-Event
@item v3	@tab subscriberDataModificationNotificationContext	@tab noteSubscriberDataModified
@item v3	@tab authenticationFailureReportContext			@tab authenticationFailureReport
@item v3	@tab secureTransportHandlingContext			@tab secureTransportClass1,@* secureTransportClass2,@* secureTransportClass3,@* secureTransportClass4
@end multitable

@node State/Event Tables
@appendix State/Event Tables

@node Primitive Precedence Tables
@appendix Primitive Precedence Tables

@node MAPI Header File Listing
@appendix MAPI Header File Listing

@node License
@unnumbered License

@menu
* GNU Free Documentation License::
@end menu

@include texi/fdl.texi

@node Indices
@unnumbered Indices

@node Index of Primitives
@section Index of Primitives

@printindex pr

@node Index of Primitive Fields
@section Index of Primitive Fields

@printindex vr

@node Index of Primitive Structure Types
@section Index of Primitive Structure Types

@printindex tp

@page
@shortcontents
@page
@contents
@bye
