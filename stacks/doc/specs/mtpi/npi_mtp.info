INFO-DIR-SECTION OpenSS7
START-INFO-DIR-ENTRY
This is /home/brian/os8/stacks/doc/specs/mtpi/npi_mtp.info, produced by makeinfo version 4.11 from /home/brian/os8/stacks/doc/specs/mtpi/npi_mtp.texi.

* NPI-MTP: (npi_mtp).		NPI Corrigendum for MTP
END-INFO-DIR-ENTRY

This file documents the MTP Corrigendum to the Network Provider Interface.

This is Edition 0.9a, last updated 2009-01-16, for OpenSS7 SS7 Stack version
0.9a release 8.20081103 published by OpenSS7 Corporation
(http://www.openss7.com/).

Copyright (C) 2001-2008  OpenSS7 Corporation (http://www.openss7.com/)
Copyright (C) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

Permission to use, copy, modify, and distribute this documentation for any
purpose and without fee is hereby granted, provided that the above copyright
notice appears in all copies and that both that copyright notice and this
permission notice appear in supporting documentation, and that the name UNIX
International not be used in advertising or publicity pertaining to distribution
of the software without specific, written prior permission. UNIX International
makes no representations about the suitability of this documentation for any
purpose. It is provided "as is" without express or implied warranty.

Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided the entire resulting derived
work is distributed under the terms of a permission notice identical to this
one.

Permission is granted to copy and distribute translations of this manual into
another language, under the above conditions for modified versions.


File: npi_mtp.info,  Node: Top,  Next: Preface,  Up: (dir)

 Network Provider Interface--Corrigendum for MTP Conformance
************************************************************

* Menu:

* Preface::
* Introduction::
* NPI-MTP::
* NPI-MTP Rules for Conformance::
* NPI-MTP Mapping of Primitives::
* NPI-MTP Header File Listing::
* License::
* Glossary::
* Acronyms::
* References::
* Index::


File: npi_mtp.info,  Node: Preface,  Next: Introduction,  Prev: Top,  Up: Top

 Preface
********

This document is intended to provide information for writers of OpenSS7 Message
Transfer Part (MTP) applications at both the user and kernel level, as well as
writers of OpenSS7 Message Transfer Part (MTP) Users.

 Target Audience
================

The target audience is developers and users of the OpenSS7 SS7 protocol stack.

 Disclaimer
===========

Although the author has attempted to ensure that the information in this
document is complete and correct, neither the Author nor OpenSS7 Corporation
will take any responsibility in it.

 Revision History
=================

Take care that you are working with a current version of this document: you
will not be informed of updates.  For a current version, please see the source
documentation at `http://www.openss7.org/'.


     $Log: npi_mtp.texi,v $
     Revision 0.9.2.2  2008-11-26 12:01:33  brian
     - updated to FDL 1.3

     Revision 0.9.2.1  2008-11-17 14:04:32  brian
     - added documentation and conversion modules


File: npi_mtp.info,  Node: Introduction,  Next: NPI-MTP,  Prev: Preface,  Up: Top

1 Introduction
**************

This document describes the protocol-specific information that is relevant to
the SS7 Message Transfer Part (MTP) [Q.704, T1.111, JT-Q.704] NSP [NPI].  This
document also describes the protocol-specific information that is relevant when
MTP network services are provided over an IP network [M3UA].

In general, this document describes the characteristics that the MTP and M3UA
NSP have in common, with notes indicating where they differ.

This document also defines the data structures and constants required for MTP
and M3UA [M3UA] NSP that are exposed through the `<sys/npi_mtp.h>' header file.

* Menu:

* Protocol Address::
* Connection and Connectionless Modes::
* Sending Data of Zero Octets::
* Quality of Service Parameters::


File: npi_mtp.info,  Node: Protocol Address,  Next: Connection and Connectionless Modes,  Up: Introduction

1.1 Protocol Address
====================

In an MTP environment, the protocol address is the MTP-SAPI that identifies the
SS7 netweork, SS7 Signalling Point Code within the SS7 network, and the
MTP-User identifier (service indicator).


File: npi_mtp.info,  Node: Connection and Connectionless Modes,  Next: Sending Data of Zero Octets,  Prev: Protocol Address,  Up: Introduction

1.2 Connection and Connectionless Modes
=======================================

1.2.1 Connection-Oriented Mode
------------------------------

The Message Transfer Part NSP supports connect-oriented mode for MTP-User
protocols that form an association between two MTP-Users in an end-to-end
exchange.  This includes TUP [Q.721], ISUP [Q.761], BTNUP, BICC and other call
control protocols.

The Message Transfer Part does not support a true connection-oriented mode.
When associations are formed with `N_CONN_REQ', no protocol messages are
exchanged between the local and remote MTP users and the `N_CONN_REQ' primitive
will always succeed unless the remote MTP user is not known to the NSP.
Because of this, it is not possible for the Message Transfer Part to accept
incoming connections; `N_CONN_IND' primitives will not be issued by the NSP on
association formation (but may be issued on first data).

1.2.2 Connectionless Mode
-------------------------

The Message Transfer Part NSP supports connection-less mode for MTP-User
protocols that form one-to-many or many-to-one or many-to-many associations and
are not restricted to an end-to-end exchange of MTP.  This includes SCCP
[Q.711], MTUP, and other MTP Users of a connection-less nature.


File: npi_mtp.info,  Node: Sending Data of Zero Octets,  Next: Quality of Service Parameters,  Prev: Connection and Connectionless Modes,  Up: Introduction

1.3 Sending Data of Zero Octets
===============================

The Message Transfer Part, both in connection-oriented mode and in
connection-less mode, does not permit sending a NSDU of zero octets.  So, in
connection-less mode, if the number of `M_DATA' message blocks is zero, the
`N_UNITDATA_REQ' primitive will always faile with the `NPI_error' in the
`N_ERROR_ACK' set to `NBADDATA'.  In connection-oriented mode, if the number of
`M_DATA' message block bytes is zero, the `N_DATA_REQ' primitive will always
fail with the `NPI_error' in the `N_ERROR_ACK' set to `NBADDATA'.  If either the
`N_MORE_DATA_FLAG' is not set in the `DATA_xfer_flags', or the
`N_MORE_DATA_FLAG' is not set and the preceding `N_DATA_REQ' primitive
completed an NSDU (that is, the call has requested sending of a zero byte NSDU).


File: npi_mtp.info,  Node: Quality of Service Parameters,  Prev: Sending Data of Zero Octets,  Up: Introduction

1.4 Quality of Service Parameters
=================================

The quality of service parameter structures are specific to MTP.  All quality
of service parameters are association-related, that is, they are options with
end-to-end significance.  They may be negotiated in the NPI state `NS_IDLE',
and are read-only in all other states except `NS_UNBND'.

1.4.1 Quality of Service Structures
-----------------------------------

MTP-NPI provides quality of service structure selection for data, connections,
information and range information.  The MTP specific quality of service
structures are discussed in detail below.


File: npi_mtp.info,  Node: NPI-MTP,  Next: NPI-MTP Rules for Conformance,  Prev: Introduction,  Up: Top

2 NPI-MTP
*********

2.1 NPI Primitives
==================

This section describes the formats and rules for the Network Provider Interface
[NPI] that are specific to the Message Transfer Part [Q.704, T1.111, JT-Q.704].
This section must be used along with the generic Network Provider Interface
Specification [NPI] when implementing an NSP that will be configured with the
SS7 Message Transfer Part.

2.1.1 Protocol Address
----------------------

The network address is used in the `N_BIND_REQ', `N_BIND_ACK', `N_CONN_REQ',
`N_CONN_CON', `N_UNITDATA_REQ', `N_UNITDATA_IND' and `N_UDERROR_IND' primitives.

 Format
.......

The MTP network protocol address uses a `sockaddr' structure to support sockets
compatibility libraries consistent with the MTP XTI/TLI interface.

The network protocol address is formatted as follows:


     struct sockaddr_mtp {
     	sa_family_t mtp_family;		/* Address family */
     	uint16_t mtp_ni;		/* Network indicator */
     	uint16_t mtp_si;		/* Service indicator */
     	uint32_t mtp_pc;		/* Point code */
     	uint8_t mtp_zero[sizeof(struct sockaddr) - sizeof(ss_family_t) -
     			 sizeof(uint16_t) * 2 - sizeof(uint32_t)];
     } __attribute__ ((packed));

 Parameters
...........

MTP_FAMILY
     Specifies the MTP socket address family.  The address family is always
     `AF_MTP'.

MTP_NI
     Specifies the network indicator that specifies the SS7 network to which
     the address belongs.  A given MTP entity can belong to multiple SS7
     networks, particularly when acting as a gateway between networks.  The
     network indicator specifies to which network the MTP-SAPI belongs.

MTP_SI
     Specifies the service indicator of an MTP user.  The service indicator can
     take on one of the following values, each of which corresponds to an MTP
     user at the MTP entity.
    `N_SS7_MTP'
          Refers to the Message Transfer Part management itself.  MTP provides
          conformin to this specification support CLNS for this NSU.

    `N_SS7_SCCP'
          Refers to the Signalling Connection Control Part [Q.711].  MTP
          providers conforming to this specification support CLNS for this NSU.

    `N_SS7_TUP'
          Refers to the Telephone User Part (TUP)[Q.724].  MTP providers
          conforming to this specification support CONS for this NSU.

    `N_SS7_NUP'
          Refers to the Network User Part (NUP).  MTP providers conforming to
          this specification support CONS for this NSU.

    `N_SS7_ISUP'
          Refers to the Integrated Services Digital Network (ISDN) User Part
          (ISUP) [Q.764].  MTP providers conforming to this specification
          support CONS for this NSU.

    `N_SS7_DUP1'
          Refers to the Data User Part (Call and Circuit-related messages) MTP
          providers conforming to this specification support CONS for this NSU.

    `N_SS7_DUP2'
          Refers to the Data User Part (Facility registration and cancellation
          messages) MTP providers conforming to this specification support CONS
          for this NSU.

    `N_SS7_MTUP'
          Refers to the MTP Test User Part (MTUP).  MTP providers conforming to
          this specification support CLNS for this NSU.

    `N_SS7_BISDN'
          Refers to the Broadband ISDN User Part (B-ISDN).  MTP providers
          conforming to this specification support CONS for this NSU.

    `N_SS7_SISDN'
          Refers to the Satellite ISDN User Part (S-ISDN).  MTP providers
          conforming to this specification support CONS for this NSU.

    `N_SS7_SPNEUP'
          Refers to the Signal Processing Newtork Equipment User Part.  MTP
          providers conforming to this specification support CONS for this NSU.

    `N_SS7_AAL2_STC'
          MTP providers conforming to this specification support CONS for this
          NSU.

    `N_SS7_BICC'
          Refers to the Bearer Independent Call Control (BICC).  MTP providers
          conforming to this specification support CONS for this NSU.

    `N_SS7_GCP'
          Refers to the Gateway Control Protocol (GCP).  MTP provider
          conforming to this specification support CLNS for this NSU.

MTP_PC
     Specifies the signalling point code f the MTP provider entity.  The point
     code is normally coded as a 14-bit [Q.704] or 24-bit [T1.111] value, right
     justified in the MTP_PC field, that identifies the MTP entity.
     Non-significant bits are coded zero (`0').

MTP_ZERO
     Specifies padding to pad the size of the `sockaddr_mtp' structure to the
     size of a `sockaddr_storage' structure [XNS].

 Rules
......

The following rules are followed for the coding of the `sockaddr_mtp' structure:

  1. The MTP_FAMILY field must always be populated with the `AF_MTP' address
     family.  This specifies that the `sockaddr' structure contains an SS7
     Message Transfer Part protocol address.(1)

  2. The MTP_NI field is coded zero (`0') if the local MTP provider entity
     exists in only one network, or if the local MTP provider allows a default
     network.  When the MTP_NI field is specified as zero (`0') and a network
     indicator is required by the operation, the conforming MTP provider will
     assign a network indicator (default) or will return `NNOADDR'.

  3. If the local MTP provider entity exists in more than one network, the
     MTP_NI value indicating the selected entwork can be specified in the
     `sockaddr_mtp' address.  Which values of the MTP_NI field correspond to
     which networks is local to the the MTP provider.(2)

  4. The MTP_SI field is coded in conformance with Q.704 [Q.704], ANSI T1.111.4
     [T1.111], and other national variant [JT-Q.704] specifications of values
     for the Service Indicator in the MTP message.

  5. The MTP_PC field is always populated and must contain a non-zero value.
     The field continas the SS7 point code coded in conformance with Q.704
     [Q.704], ANSI T1.111.4 [T1.111] and other national variant [JT-Q.704]
     specifications and is the point code representation right justified with
     unused most significant bits coded zero (`0').(3)

The following rules apply to including the `sockaddr_mtp' structure in NPI
primitives:

`N_BIND_REQ'
`N_BIND_ACK'
     When included in these primitives, the MTP protocol address identifies the
     local MTP-SAPI to which the stream request to be (or has been) bound.

`N_INFO_ACK'
     When included in the `LOC_addr' field of these primitives, the MTP
     protocol address identifies the local MTP-SAPI to which the stream is
     bound.  When included in the `REM_addr' field of these primitives, the MTP
     protocol address identifies the remote MTP-SAPI to which the stream is
     connected.

`N_CONN_REQ'
`N_CONN_CON'
     When included in these primitives, the MTP protocol address identifies the
     remote MTP-SAPI to which the stream requests to be (or has been) connected.

`N_UNITDATA_REQ'
`N_UDERROR_IND'
     When included in these primitives, the MTP protocol address identifies the
     remote MTP-SAPI to which the message is being sent (or to which it was
     sent and returned an error).

`N_UNITDATA_IND'
     When included in the `N_UNITDATA_IND' primitive, the MTP protocol address
     identifies the local MTP-SAPI for which the message was received.

2.2 NPI Quality of Service
==========================

2.2.1 MTP Quality of Service Overview
-------------------------------------

2.2.2 MTP Quality of Service Formats
------------------------------------

The MTP provides the following quality of service structures:

2.2.2.1 Data Quality of Service Selection
.........................................

 N_QOS_SEL_DATA_MTP
...................

This quality of service structure type is used when selecting quality of
service parameters on a message by message basis with the `N_OPTMGMT_REQ'
primitive before issuing an `N_DATA_REQ' or `N_UNITDATA_REQ' primitive.

 Format
.......


     #define N_QOS_SEL_DATA_MTP      0x0801
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_DATA_MTP */
             np_ulong sls;                   /* signalling link selection */
             np_ulong mp;                    /* message priority */
     } N_qos_sel_data_mtp_t;

 Fields
.......

N_QOS_TYPE
     Specifies or indicates the quality of service structure type.  This field
     is always coded `N_QOS_SEL_DATA_MTP'.

SLS
     Specifies the value fo the Signalling Link Selection field to use in
     outgoing MTP messages, or indicates the value of the Signalling Link
     Selection field that was received in incoming MTP messages.

MP
     Specifies the value of the Message Priority field to use in outgoing MTP
     messages, or indicates the value of the Message Priority field that was
     received in incoming MTP messages.

2.2.2.2 Connection Quality of Service Selection
...............................................

 N_QOS_SEL_CONN_MTP
...................

This quality of service structure type is used when selecting quality of
service parameters on a connection with `N_CONN_REQ', `N_CONN_IND',
`N_CONN_RES' and `N_CONN_CON' primitives.

 Format
.......


     #define N_QOS_SEL_CONN_MTP      0x0802
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_CONN_MTP */
             np_ulong sls;                   /* signalling link selection */
             np_ulong mp;                    /* mssage priority */
     } N_qos_sel_conn_mtp_t;

 Fields
.......

N_QOS_TYPE
     Specifies or indicates the quality of service structure type.  This field
     is always coded to `N_QOS_SEL_CONN_MTP'.

SLS
     Specifies the default Signalling Link Selection value to be used on the
     connection.

MP
     Specifies the default Message Priority value to be used on the connection.

2.2.2.3 Information Quality of Service Selection
................................................

 N_QOS_SEL_INFO_MTP
...................

This quality of service structure type is used when selecting quality of
service parameters for information with the `N_INFO_ACK' primitive.

 Format
.......


     #define N_QOS_SEL_INFO_MTP      0x0803
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_SEL_INFO_MTP */
             np_ulong pvar;                  /* protocol variant */
             np_ulong popt;                  /* protocol options */
             np_ulong sls;                   /* signalling link selection */
             np_ulong mp;                    /* message piority */
     } n_qos_sel_info_mtp_t;

 Fields
.......

N_QOS_TYPE
     Indicates the quality of service structure type.  This field is always
     coded `N_QOS_SEL_INFO_MTP'.

PVAR
     Indicates the MTP protocol variant associated with the Stream.

POPT
     Indicates the MTP protocol options associated with the Stream.

SLS
     Indicates the default Signalling Link Selection value to be used on
     outgoing messages not specifying an SLS value.

MP
     Indicates the default Message Priority value to be used on outgoing
     messages not specifying an MP value.

2.2.2.4 Information Quality of Service Range
............................................

 N_QOS_RANGE_INFO_MTP
.....................

This quality of service structure type is used hwen indicating the range
quality of service parameters for information with the `N_INFO_ACK' primitive.

 Format
.......


     #define N_QOS_RANGE_INFO_MTP        0x0804
     typedef struct {
             np_ulong n_qos_type;            /* always N_QOS_RANGE_INFO_MTP */
             np_ulong sls_range;             /* signalling link selection mask */
             np_ulong mp_range;              /* message priority mask */
     } N_qos_range_info_mtp_t;

 Fields
.......

N_QOS_TYPE
     Indicates the quality of service structure type.  This field is always
     coded `N_QOS_RANGE_INFO_MTP'.

SLS_RANGE
     Indicates a bit mask that indicates the range of the SLS field.  This is
     typically a 4-bit bitmask for ITU-T variants, and a 5-bit or 8-bit bitmask
     for ANSI variants.

MP_RANGE
     Indicates a bit mask that indicates the range of the MP field.  This is
     typically a 0-bit bitmask for ITU-T variants, and a 2-bit bitmask for ANSI
     variants.

2.3 NPI Connection Modes
========================

---------- Footnotes ----------

(1) The MTP NSP may ignore this field: it is present for compatibility of the
address structure with the XTI/TPI version of the MTP interface.

(2) As an example of an instance where the MTP_NI field definition is local to
the MTP provider is for M3UA, where the value of the MTP_NI field may be
interpreted as a "Network Appearance".

(3) For example, the ANSI [T1.1111] point code 032-008-032 would be coded
0x00100810U.


File: npi_mtp.info,  Node: NPI-MTP Rules for Conformance,  Next: NPI-MTP Mapping of Primitives,  Prev: NPI-MTP,  Up: Top

3 NPI-MTP Rules for Conformance
*******************************

* Menu:

* CONS & CLNS: Local Management::
* CONS: NC Establishment Phase::
* CONS: Data Transfer Phase::
* CONS: NC Termination Phase::
* CLNS: Data Transfer Phase::


File: npi_mtp.info,  Node: CONS & CLNS: Local Management

3.1 CONS & CLNS: Local Management
=================================

* Menu:

* N_INFO_ACK::
* N_OPTMGMT_REQ::
* N_BIND_REQ::
* N_BIND_ACK::


File: npi_mtp.info,  Node: N_INFO_ACK,  Next: N_OPTMGMT_REQ,  Up: CONS & CLNS: Local Management

3.1.1 N_INFO_ACK
----------------

 Parameters
...........

`NSDU_size'
     Indicates the maximum size of the Network Service Data Unit in octets.

`ENSDU_size'
     Indicates the maximum size of the Expedited Network Service Data Unit in
     octets.

`CDATA_size'
     Indicates the maximum size of data included in the `N_CONN_REQ',
     `N_CONN_IND', `N_CONN_RES' and `N_CONN_CON' primitives.

`DDATA_size'
     Indicates the maximum size of data included in the `N_DISCON_REQ' or
     `N_DISCON_IND' primitives.

`ADDR_size'
     Indicates the maximum size of an address.  This is the size of the
     `sockaddr_mtp' structure.

`ADDR_length'
     Indicates the length of the associated protocol address.

`ADDR_offset'
     Indicates the offset of the associated protocol address from the beginning
     of the `M_PCPROTO' message block.

`QOS_length'
     Indicates the length of the selected quality of service parameters.

`QOS_offset'
     Indicates the offset of the selected quality of service parameters from
     the beginning of the `M_PCPROTO' message block.

`QOS_range_length'
     Indicates the length of the range of quality of service parameters.

`QOS_range_offset'
     Indicates the offset of the range of quality of service parameters from
     the beginning of the `M_PCPROTO' message block.

`OPTIONS_flags'
     Indicates the options flags.

`NIDU_size'
     Indicates the maximum size of the Network Interface Data Unit in octets.

`SERV_type'
     Indicates the service type.  The service type can be one of the following:
    `CLNS'
          Indicates that the NSP is in Connection-less mode for the current
          Stream.

    `CONS'
          Indicates that the NSP is in Connection-oriented mode for the current
          Stream.

`CURRENT_state'
     Indicates the current state of the NSP.  The current states can be one of
     the following:
    `NS_UNBND'
          Indicates that the interface is not bound to a network address.

    `NS_WACK_BREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_BIND_REQ' primitive.

    `NS_WACK_UREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_UNBIND_REQ' primitive.

    `NS_IDLE'
          Indicates that the interface is idle.

    `NS_WACK_OPTREQ'
          Indicates that the interface is pending local acknowledgment for an
          `N_OPTMGMT_REQ' primitive.

    `NS_WACK_RRES'
          Indicates that the interface is pending local acknowledgment for an
          `N_RESET_RES' primitive.

    `NS_WCON_CREQ'
          Indicates that the interface is awaiting confirmation of an
          `N_CONN_REQ' primitive.

    `NS_WRES_CIND'
          Indicates that the interface is awaiting response to an outstanding
          `N_CONN_IND' primitive.

    `NS_WACK_CRES'
          Indicates that the interface is pending local acknowledgment for an
          `N_CONN_RES' primitive.

    `NS_DATA_XFER'
          Indicates that the interface is in data transfer.

    `NS_WCON_RREQ'
          Indicates that the interface is awaiting confirmation to an
          outstanding `N_RESET_REQ' primitive.

    `NS_WRES_RIND'
          Indicates that the interface is awaiting response to an outstanding
          `N_RESET_IND' primitive.

    `NS_WACK_DREQ6'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_RIND'
          state.

    `NS_WACK_DREQ7'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_CIND'
          state.

    `NS_WACK_DREQ9'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_DATA_XFER'
          state.

    `NS_WACK_DREQ10'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WCON_RREQ'
          state.

    `NS_WACK_DREQ11'
          Indicates that the interface is pending local acknowledgment for an
          `N_DISCON_REQ' primitive and was previously in the `NS_WRES_RIND'
          state.

`PROVIDER_type'
     Indicates the type of NS provider.  The value of this field can be one of
     the following:
    `N_SNICFP'
          The provider is a subnetwork independent convergence
          function/protocol sub-layer of the network layer.

    `N_SUBNET'
          The provider is a subnetwork.

`NODU_size'
     Indicates the Network Optimal Data Unit size in octets.

`PROTOID_length'
     Indicates the length of the bound protocol identifiers.

`PROTOID_offset'
     Indicates the offset of the bound protocol identifiers from the beginning
     of the `M_PCPROTO' message block.

`NPI_version'
     Indicates the version of the NPI interface.

 Rules
......

Rules for sizes:

  1. MTP conforming NSP will return a value of `N_INVALID' (`-1U') for the
     `ENSDU_size' data size, indicating that the NSP does not support expedited
     data transfer.

  2. MTP conforming NSP will return the same defined value in the `NSDU_size',
     `CDATA_size' and `DDATA_size' fields.  This value is the maximum size of
     an NSU SDU that can be guaranteed transferred by the NSP.  The exact value
     of these fields will depend on the signalling links supported and in use
     by the MTP provider.

  3. MTP conforming NSP will return zero (`0'), `N_INVALID' (`-1U') or the same
     value as `NSDU_size' in the `CDATA_size' field.  When the MTP provider
     returns a value of zero (`0') or `N_INVALID' (`-1U') for `CDATA_size', it
     is indicating that connection data is not permitted with the `N_CONN_REQ'
     primitive.  When the MTP provider returns the same value as `NSDU_size',
     it is indicating that normal data is permitted with the `N_CONN_REQ'
     primitive.

  4. MTP conforming NSP will return zero (`0'), `N_INVALID' (`-1U') or the same
     value as `NSDU_size' in the `DDATA_size' field.  When the MTP provider
     returns a value of zero (`0') or `N_INVALID' (`-1U') for `DDATA_size', it
     is indicating that disconnection data is not permitted with the
     `N_DISCON_REQ' primitive.  When the MTP provider returns the same value as
     `NSDU_size', it is indicating that normal data is permitted with the
     `N_DISCON_REQ' primitive.

  5. MTP conforming NSP will return a value in the `NIDU_size' field that is
     less than or equal to the `NSDU_size' field, but must not be set to
     `N_INVALID' (`-1U') or zero (`0').(1)

  6. MTP conforming NSP will return a value of the `NODU_size' field that is
     less than or equal to the `NSDU_size' field, but must not be set to
     `N_INVALID' (`-1U') or zero (`0').(2)

  7. MTP conforming NSP will return the size of the `sockaddr' structure in the
     `ADDR_size' field.

Rules for provider type:

  1. MTP conforming NSP will return a provider type of `N_SNICFP'.

Rules for service type:

  1. When the stream is bound and `MTP_CONNECTION_ORIENTED' or
     `MTP_CONNECTIONLESS' flags were set in the `N_BIND_REQ', the service type
     will be set according to the requested service type.  (See *note
     N_BIND_REQ: N_BIND_REQ, and *note N_BIND_REQ: N_BIND_ACK.)

  2. When neither `MTP_CONNECTION_ORIENTED' nor `MTP_CONNECTIONLESS' flags are
     set in the `N_BIND_REQ', or the Stream is unbound, the MTP conforming NSP
     will return a service type of `CLNS' when bound to non-call-related MTP
     Users.  The MTP conforming NSP will return a service type of `CLNS' for
     the following MTP User:
        * SCCP--Signalling Connection Control Part

        * MTUP--MTP Test User Part

        * GCP--Gateway Control Protocol

        * Any other non-call-realted MTP User specified by the appropriate
          specification.

  3. When neither `MTP_CONNECTION_ORIENTED' nor `MTP_CONNECTIONLESS' flags are
     set in the `N_BIND_REQ', or the Stream is unbound, the MTP conforming NSP
     will return a service type of `CONS' when bound to call related MTP Users.
     The MTP conforming NSP will return a service type of `CONS' for the
     following MTP Users:
        * TUP--Telephone User Part

        * NUP--Network User Part

        * ISUP--ISDN User Part

        * DUP--Data User Part

        * B-ISDN--Broadband ISDN User Part

        * S-ISDN--Satellite ISDN User Part

        * SPNE UP--Signal Processing Network Equipment User Part

        * AAL2 STC--AAL Type 2 STC

        * BICC--Bearer Independent Call Control

        * Any other call-related MTP User specified by the appropriate
          specification.

Rules for flags:

  1. Because the MTP does not support receipt confirmation, the MTP conforming
     NSP will not set the `RECV_CONF_OPT' flag in the `OPTIONS_flags' field.

  2. Because the MTP does not support expedited data, the MTP conforming NSP
     will not set the `EX_DATA_OPT' flag in the `OPTIONS_flags' field.

Rules for states:

  1. Because MTP does not support the reset service from the MTP-User, the MTP
     conforming NSP will never return a `CURRENT_state' of `NS_WCON_RREQ',
     `NS_WRES_RIND' or `NS_WACK_RRES'.

Rules for Quality of Service Parameters:

  1. MTP conforming NSP will return an `N_QOS_SEL_INFO_MTP' structure indicated
     in the `QOS_length' and `QOS_offset' fields.

  2. MTP conforming NSP will return an `N_QOS_RANGE_INFO_MTP' structure
     indicated in the `QOS_range_length' and `QOS_range_offset' fields.

---------- Footnotes ----------

(1) Typically, the `NIDU_size' will be the same value as the `NSDU_size' for
narrowband SS7 links.  For ATM, High-Speed and M2PA links, or for M3UA, the
`NIDU_size' will typically be smaller than the `NSDU_size' when the maximum SIF
size supported by the link is greater than the maximum size of an `M_DATA'
message block.

(2) Typically the `NODU_size' field will be equal to the `NIDU_size'.


File: npi_mtp.info,  Node: N_OPTMGMT_REQ,  Next: N_BIND_REQ,  Prev: N_INFO_ACK,  Up: CONS & CLNS: Local Management

3.1.2 N_OPTMGMT_REQ
-------------------

 Parameters
...........

`QOS_length'
     Specifies the length of the QOS parameter values.

`QOS_offset'
     Specifies the offset of the QOS parameter values from the beginning of the
     `M_PROTO' or `M_PCPROTO' message block.

`OPTMGMT_flags'
     Specifies the options management flags associated with the request (see
     "Flags" below).

 Flags
......

`DEFAULT_RC_SEL'
     Specifies if default receipt confirmation is selected.

 Quality of Service Parameters
..............................

N_QOS_TYPE
     Specifies the QOS structure type.  For this primitive, the MTP conforming
     NSP will demand a structure type of `N_QOS_SEL_OPT_MTP'.

SLS
     Specifies the default value of the Signalling Link Selection field to be
     used in outgoing messages that do not contain an SLS value specified in
     the data transfer request.

MP
     Specifies the default value of the Message Priority field to be used in
     outgoing messages that do not contain an MP value specified in the data
     transfer request.

 Rules
......

Rules for QOS parameters:

  1. The QOS parameters used for any subsequent `N_DATA_REQ' or
     `N_UNITDATA_REQ' primitives will be the values set with the
     `N_OPTMGMT_REQ' primitive.

  2. For the MP QOS parameters to have any effect, the NSU muse be bound to a
     Stream supporting a protocol variant that provides for Message Priority
     (e.g. ANSI [T1.111, JT-Q.704] variants).

  3. Options for data transfer set with this primitive will only be valid for
     request or indication primitives issued after this primitive is
     successfully acknowledged.


File: npi_mtp.info,  Node: N_BIND_REQ,  Next: N_BIND_ACK,  Prev: N_OPTMGMT_REQ,  Up: CONS & CLNS: Local Management

3.1.3 N_BIND_REQ
----------------

 Parameters
...........

`ADDR_length'
     Specifies the length of the address to bind.

`ADDR_offset'
     Specifies the offset of the address to bind from the beginning of the
     `M_PROTO' message block.

`CONIND_number'
     Sepcifies the maximum number of outstanding connection indications.

`BIND_flags'
     Specifies the bind flags (see "Flags" below).

`PROTOID_length'
     Specifies the length of the protocol identifiers to bind.

`PROTOID_offset'
     Specifies the offset of the protocol identifiers to bind from the
     beginning of the `M_PROTO' message block.

 Flags
......

`DEFAULT_LISTENER'
     Specifies whether this Stream is to be treated as the default listener
     Stream.

`TOKEN_REQUEST'
     Specifies if a "token" should be assigned to the Stream and returned in
     the `N_BIND_ACK'.

`DEFAULT_DEST'
     Specifies if this Stream is to be treated as the default destination
     Stream.

 Rules
......

Rules for address specification:

  1. The Network Indicator (NI) value in the `mtp_ni' field of the address must
     be specified and known to the MTP NSP.(1)

  2. The Service Indicator (SI) int the `mtp_si' field of the address must be
     specified, cannot be SI values `0', `1' or `2', and must be known to the
     MTP NSP.

  3. The Signalling Point Code (PC) in the `mtp_pc' field of the address must
     be specified, non-zero, and known to the MTP NSP as a local point code in
     the specified network.(2)

  4. The address must not already be bound to a CLNS NSP for the same service
     indicator.

Rules for connection indications:

  1. The MTP NSP only supports a pseudo-connection-oriented service that cannot
     support true connection indications.  Nevertheless, connection indications
     can be emulated when data arrives for an association between endpoints.
     Therefore, the `CONIND_number' field can be set in accordance with the
     general rules for connection indications present in the Network Provider
     Interface [NPI].

Rules for bind flags:

  1. The MTP NSP will support the `DEFAULT_LISTENER' flag.  When the
     `DEFAULT_LISTENER' flag is set for a CONS MTP address (MTP-SAPI) as
     specified in the `N_BIND_REQ', any received message that does not belong
     to an existing connection will be delivered to the Stream bound with the
     `DEFAULT_LISTENER' flag as an `N_CONN_IND' primitive.

  2. The MTP NSP will support the `DEFAULT_DESTINATION' flag.  When the
     `DEFAULT_DESTINATION' flags is set for a CLNS MTP address (MTP-SAPI) as
     specified in the `N_BIND_REQ', any received message that does not belong
     to an existing bound CLNS Stream will be delivered to the Stream bound
     with the `DEFAULT_DESTINATION' flag.  There can be one
     `DEFAULT_DESTINATION' Stream per SI value, and one and only one
     `DEFAULT_DESTINATION' Stream per MTP provider instance.  If the
     `DEFAULT_DESTINATION' is SI-specific, an MTP address must be specified
     with the `mtp_pc' field set to zero and the appropriate `mtp_ni' and
     `mtp_si' values populated.  If the `DEFAULT_DESTINATION' is not
     SI-specific, no MTP address (MTP-SAPI) is provided and the fields
     `ADDR_length' and `ADDR_offset' are coded zero (`0').

  3. The MTP NSP will support the `TOKEN_REQUEST' flag.

Rules for protocol identifiers:

  1. The MTP NSP can optionally support the SI values specified in the
     `PROTOID_length' and `PROTOID_offset' fields.  When there is not MTP
     address (i.e. the `ADDR_length' and `ADDR_offset' fields are coded zero
     (`0')), the SI values equipped for the bound addresses whould be specified
     in this field.

---------- Footnotes ----------

(1) Network indicator values are assigned to the MTP NSP via the local layer
management interface.

(2) Signalling point code values are assigned to the MTP NSP via the local layer
management interface.


File: npi_mtp.info,  Node: N_BIND_ACK,  Prev: N_BIND_REQ,  Up: CONS & CLNS: Local Management

3.1.4 N_BIND_ACK
----------------

 Parameters
...........

`ADDR_length'
     Indicates the length of the bound address.

`ADDR_offset'
     Indicates the offset of the bound address from the beginning of the
     `M_PCPROTO' message block.

`CONIND_number'
     Indicates the number of negotiated maximum outstanding connection
     indications.

`TOKEN_value'
     Indicates the token value associated with the indicating Stream.

`PROTOID_length'
     Indicates the length of the bound protocol identifiers.

`PROTOID_offset'
     Indicates the offset of the bound protocol identifiers from the beginning
     of the `M_PCPROTO' message block.

 Rules
......

Rules for address specification:

  1. THe MTP NSP wil always return the address specified in the `N_BIND_REQ'
     primtiive in the `ADDR_length' and `ADDR_offset' fields.

Rules for token value:

  1. Althougt the MTP does not support true connection indications, where the
     token value is used, the MTP NSP will return a correct value of the token
     associated with the Strem in the `TOKEN_value' field.

Rules for connection indications:

  1. The MTP NSP will return the value requested in the `CONIND_number' field.

Rules for protocol identifiers:

  1. The MTP NSP may optionally include the bound SI values in the
     `PROTOID_length' and `PROTOID_offset' fields.


File: npi_mtp.info,  Node: CONS: NC Establishment Phase

3.2 CONS: NC Establishment Phase
================================

SS7 Message Transfer Part conforming NSP only provide a
pseudo-connection-oriented mode.  The connection establishment phase of this
pseudo-connection-oriented mode consists primarily of the `N_CONN_REQ' and
`N_CONN_CON' primitives.  Conneciton indications (and reponses) may also be
simulated.

* Menu:

* N_CONN_REQ::
* N_CONN_IND::
* N_CONN_RES::
* N_CONN_CON::


File: npi_mtp.info,  Node: N_CONN_REQ,  Next: N_CONN_IND,  Up: CONS: NC Establishment Phase

3.2.1 N_CONN_REQ
----------------

Requests that the NSP establish a pseudo-connection with the specified
destination address and quality of service parameters.

 Parameters
...........

`DEST_length'
     Specifies the length of the remote address.

`DEST_offset'
     Specifies the offset of the remote address from the beginning of the
     `M_PROTO' message block.

`CONN_flags'
     Specifies the options flags associated with the connection request.

`QOS_length'
     Specifies the length of the connection request options.

`QOS_offset'
     Specifies the offset of the connection request options from the begnning
     of the `M_PROTO' message block.

 Quality of Service Parameters
..............................

N_QOS_TYPE
     Specifies the QOS structure type.  For this primitive, the MTP conforming
     NSP will demand a structure type of `N_QOS_SEL_CONN_MTP'.

SLS
     Specifies the default value fo the Signalling Link Selection field to be
     used in outgoing messages that do not contain an SLS value specified in
     the data transfer request, or with the `N_OPTMGMT_REQ' primitive.  This
     includes any data included with the `N_CONN_REQ' primitive.

MP
     Specifies the default value of the Message Priority field to be used in
     outgoing messages that do not contain an SLS value specified in the data
     transfer request, or with the `N_OPTMGMT_REQ' primitive.  This includes
     any data included with the `N_CONN_REQ' primitive.

 Rules
......

Rules for address specification:

  1. The Network Indicator (NI) value in the MTP_NI field of the address must
     be specified, must be known to the MTP NSP, and must be the same as
     returned in the MTP_NI field of the `N_BIND_ACK' when the Stream was
     bound.(1)

  2. THe Service Indicatory (SI) in the MTP_SI field  of the address must be
     specified, cannot be SI values `0', `1' or `2', must be known the MTP NSP
     and must be the same as the value of the MTP_SI field returned in the
     `N_BIND_ACK' when the Stream was bound.

  3. The Signalling Point Code (PC) in the MTP_PC field of the address must be
     specified, non-zero, must be knonw to the MTP NSP as a remote point code
     in the specified network, and must be different than the MTP_PC field
     retrned in the `N_BIND_ACK' when the Stream was bound.(2)

  4. The destination address must not have already been connected to the
     address bound to the requesting Stream for the specified service indicator.

Rules for QOS parameters:

  1. For rules concerning the QOS parameters inlcuded in this primitive, see
     *note N_UNITDATA_REQ::.

Rules for data:

  1. The NSU can include data in the `N_CONN_REQ' primitive.  The options can
     then include data transfer options.  The MTP NSP will transfer such data
     and options as though it were placed in a separate `N_OPTDATA_REQ'
     primitive.

---------- Footnotes ----------

(1) Network indicator values are assigned to the MTP NSP via the layer
management interface.

(2) Signalling point code values are assigned to the MTP NSP via the layer
management interface.


File: npi_mtp.info,  Node: N_CONN_IND,  Next: N_CONN_RES,  Prev: N_CONN_REQ,  Up: CONS: NC Establishment Phase

3.2.2 N_CONN_IND
----------------

This primitive is not issued by an MTP conforming NSP and the NSP will never be
in state `NS_WRES_CIND'.


File: npi_mtp.info,  Node: N_CONN_RES,  Next: N_CONN_CON,  Prev: N_CONN_IND,  Up: CONS: NC Establishment Phase

3.2.3 N_CONN_RES
----------------

This primitive is not supported by an MTP conforming NSP and the NSP will never
be in state `NS_WRES_CIND'.

 Parameters
...........

 Rules
......


File: npi_mtp.info,  Node: N_CONN_CON,  Prev: N_CONN_RES,  Up: CONS: NC Establishment Phase

3.2.4 N_CONN_CON
----------------

Confirms that a pseudo-connection has been established with the requested
destination address.

Confirms that the reponding address has been associated with the Stream upon
which the confirmation is indicated.  The `N_CONN_CON' primitive is used ot
indicate the "MTP-RESUME-IND" and "MTP-COMPLETE-IND" MTP primitives.

 Parameters
...........

`RES_length'
     Indicates the length of the responding address.

`RES_offset'
     Indicates the offset of the responding address from the beginning of the
     `M_PROTO' message block.

`CONN_flags'
     Indicates the options flags associated with the connection confirmation.

`QOS_length'
     Indicates the length of the connection options.

`QOS_offset'
     Indicates the offset of the connection options from the beginning of the
     `M_PROTO' message block.

 Rules
......

Rules for address specification:

  1. For MTP conforming NSP, the responding address cannot be different from
     the requested address.  Therefore, the responding address should be
     omitted from the confirmation and the `RES_length' and `RES_offset' fields
     should be coded zero (`0') by the NSP and ignored by the NSU.

  2. If the responding address is included in the primitive, it must be the
     same as the destination address in the response.  This is a limitation of
     the protocol, not of the interface.

Rules for QOS parameters:

  1. The MTP conforming NSP does not indicate any QOS parameters in the
     `N_CONN_CON' primitive.  Therefore, the QOS parameters should be omitted
     from the confirmation and the `OPT_length' and `OPT_offset' fields should
     be coded zero (`0') by the NSP and ignored by the NSU.

Rules for data:

  1. The MTP conforming NSP does not indicate connection data in the
     `N_CONN_CON' primitive.


File: npi_mtp.info,  Node: CONS: Data Transfer Phase

3.3 CONS: Data Transfer Phase
=============================

* Menu:

* N_DATA_REQ::
* N_DATA_IND::
* N_EXDATA_REQ::
* N_EXDATA_IND::
* N_DATACK_REQ::
* N_DATACK_IND::


File: npi_mtp.info,  Node: N_DATA_REQ,  Next: N_DATA_IND,  Up: CONS: Data Transfer Phase

3.3.1 N_DATA_REQ
----------------

 Parameters
...........

`DATA_xfer_flags'
     Specifies the data transfer options flags (see "Flags" below).

 Flags
......

`N_MORE_DATA_FLAG'
     Specifies that the next `N_DATA_REQ' primitive forms part of the same NSDU.

`N_RC_FLAG'
     Specifies that receipt confirmation is requsted for the NSDU.

 Rules
......

Rules for flags:

  1. MTP conforming NSP do not accept the `N_RC_FLAG' in the `DATA_xfer_flags'.

  2. MTP conforming NSP accept the `N_MORE_DATA_FLAG' in the `DATA_xfer_flags'.

  3. MTP conforming NSP do not accept any other flags in the `DATA_xfer_flags'.


File: npi_mtp.info,  Node: N_DATA_IND,  Next: N_EXDATA_REQ,  Prev: N_DATA_REQ,  Up: CONS: Data Transfer Phase

3.3.2 N_DATA_IND
----------------

 Parameters
...........

`DATA_xfer_flags'
     Indicates the data transfer options (see "Flags" below).

 Flags
......

`N_MORE_DATA_FLAG'
     Indicates that the next `N_DATA_IND' forms part of the same NSDU.

`N_RC_FLAG'
     Indicates that receipt confirmation is requested on the NSDU.

 Rules
......

Rules for issue primitive:

  1. The `N_DATA_IND' primitive (or simply a `M_DATA' block) is issued to the
     NSU to indicate data.  The `N_DATA_IND' (or `M_DATA') is used in
     preference to the `N_UNITDATA_IND' primitive when the NSU has not
     requested received message priority or received signalling link selection
     with the `N_MTP_RECV_SLS' or `N_MTP_RECV_MP' options.

  2. The `N_DATA_IND' primitive is issued instead of `M_DATA' message blocks
     when the NSP needs to indicate that the subsequent `N_DATA_IND' primitive
     also forms part of the NSDU (i.e. the `N_MORE_DATA_FLAG' is set in the
     `DATA_xfer_flags' field).  Otherwise, the NSP may, at its option, issue
     either the `N_DATA_IND' or `M_DATA' indications.

Rules for flags:

  1. MTP conforming NSP do not set the `N_RC_FLAG' in the `DATA_xfer_flags'
     field.

  2. MTP conforming NSP set the `N_MORE_DATA_FLAG' in the `DATA_xfer_flags'
     field when the data delivered exceeds the `NIDU_size' value returned in
     the `N_INFO_ACK' primitive.  (See *note N_INFO_ACK::).

  3. MTP conforming NSP doe not set any other flags in the `DATA_xfer_flags'
     field.


File: npi_mtp.info,  Node: N_EXDATA_REQ,  Next: N_EXDATA_IND,  Prev: N_DATA_IND,  Up: CONS: Data Transfer Phase

3.3.3 N_EXDATA_REQ
------------------

 Rules
......

Rules for issuing primitive:

  1. The MTP conforming connect-oriented provider does not support expedited
     data transfer.  If the NSDU issues the `N_EXDATA_REQ' primitive, the
     service provider should respond with an `M_ERROR' primitive with error
     number [`EPROTO'].


File: npi_mtp.info,  Node: N_EXDATA_IND,  Next: N_DATACK_REQ,  Prev: N_EXDATA_REQ,  Up: CONS: Data Transfer Phase

3.3.4 N_EXDATA_IND
------------------

 Rules
......

Rules for issuing primitive:

  1. The MTP connection-oriented provider does not support expedited data
     transfer and should never issue this primitive.


File: npi_mtp.info,  Node: N_DATACK_REQ,  Next: N_DATACK_IND,  Prev: N_EXDATA_IND,  Up: CONS: Data Transfer Phase

3.3.5 N_DATACK_REQ
------------------

 Rules
......

Rules for issuing primitive:

  1. The MTP conforming connect-oriented provider does not support receipt
     confirmation.  If the NSDU issues the `N_DATACK_REQ' primitive, the
     service provider should respond with an `M_ERROR' primitive with error
     number [`EPROTO'].


File: npi_mtp.info,  Node: N_DATACK_IND,  Prev: N_DATACK_REQ,  Up: CONS: Data Transfer Phase

3.3.6 N_DATACK_IND
------------------

 Rules
......

Rules for issuing primitive:

  1. The MTP connection-oriented provider does not support receipt confirmation
     and should never issue this primitive.


File: npi_mtp.info,  Node: CONS: NC Termination Phase

3.4 CONS: NC Termination Phase
==============================

* Menu:

* N_DISCON_REQ::
* N_DISCON_IND::
* N_RESET_REQ::
* N_RESET_RES::
* N_RESET_IND::
* N_RESET_CON::


File: npi_mtp.info,  Node: N_DISCON_REQ,  Next: N_DISCON_IND,  Up: CONS: NC Termination Phase

3.4.1 N_DISCON_REQ
------------------

 Parameters
...........

`DISCON_reason'
     The disconnection or connection rejection reason.  (See "Reasons" below.)

`RES_length'
     The length of the responding MTP address (MTP-SAPI).

`RES_offset'
     The offset of the responding MTP address (MTP-SAPI) from the beginning of
     the `M_PROTO' message block.

`SEQ_number'
     Specifies the sequence number of the associated connection indication when
     refusing a connection, or zero (`0') when disconnecting an established
     connection.

 Reasons
........

`N_MTP_USER_PART_UNKNOWN'
     Disconnection because the remote user part (MTP-SAPI) is unknown.

`N_MTP_USER_PART_UNEQUIPPED'
     Disconnection because the remote user part (MTP-SAPI) is unequipped.

`N_MTP_USER_PART_UNAVAILABLE'
     Disconnection because the remote user part (MTP-SAPI) is unavailable.

 Rules
......

Rules for sequence number:

  1. The `SEQ_number' field is not supported by an MTP conforming NSP.  The
     field should be coded zero (`0') by the NSU and ignored by the NSP.

Rules for disconnect reasons:

  1. Any of the disconnect reasons listed above under "Reasons" can be
     specified by the NSU.

  2. The MTP conforming NSP will use the disconnect reason to determine the
     reason to give th peer when the peer attempts to send messages to a
     disconnected MTP-SAPI.


File: npi_mtp.info,  Node: N_DISCON_IND,  Next: N_RESET_REQ,  Prev: N_DISCON_REQ,  Up: CONS: NC Termination Phase

3.4.2 N_DISCON_IND
------------------

 Parameters
...........

`DISCON_orig'
     Indicates the disconnect originator.  The disconnect originator can be one
     of the following:
        * `N_PROVIDER'

        * `N_USER'

        * `N_UNSPECIFIED'

`DISCON_reason'
     Indicates the reason for disconnect or connection rejection.  (See
     "Reasons" below.)

`RES_length'
     Indicates the length of the responding MTP address (MTP-SAPI).

`RES_offset'
     Indicates the offset of the responding MTP address (MTP-SAPI) from the
     beginning of the `M_PROTO' message block.

 Reasons
........

`N_PROVIDER'
     The following disconnect reasons apply when the `DISCON_orig' is
     `N_PROVIDER':
    `N_MTP_DEST_PROHIBITED'
          Disconnection or connection rejection because the remote signalling
          point is inaccessible.

    `N_MTP_CLUS_PROHIBITED'
          Disconnection or connection rejection because the remote cluster is
          inaccessible.

    `N_MTP_RESTARTING'
          Disconnection or connection rejection because the local signalling
          point is restarting.

`N_USER'
     The following disconnect reasons apply when the `DISCON_orig' is `N_USER':
    `N_MTP_USER_PART_UNKNOWN'
          Disconnection or connection rejection because the remote user part
          (MTP-SAPI) is unknown.

    `N_MTP_USER_PART_UNEQUIPPED'
          Disconnection or connection rejection because the remote user part
          (MTP-SAPI) is unequipped.

    `N_MTP_USER_PART_UNAVAILABLE'
          Disconnection or connection rejection because the remote user part
          (MTP-SAPI) is unavailable.

 Rules
......

Rules for issuing primitive:

  1. This primitive is issued on a CONS service type Stream in response to an
     "MTP-PAUSE Indication", an "MTP-STATUS Indication" indicating user part
     inaccessibility, or an "MTP-RESTART-BEGINS Indication".

Rules for disconnect reason:

  1. When the primitive is issued in response to an "MTP-PAUSE Indication", the
     `DISCON_orig' is set to `N_PROVIDER' and the `DISCON_reason' is set to
     either `N_MTP_DEST_PROHIBITED' or `N_MTP_CLUSTER_PROHIBITED' depending on
     whether the "MTP-PAUSE Indication" indicaets a signalling point or a
     cluster.

  2. When the primitive is issued in response to an "MTP-RESTART-BEGINS
     Indication", the `DISCON_orig' is set to `N_PROVIDER' and the
     `DISCON_reason' is set to `N_MTP_RESTARTING'.

  3. When the primtiive is isused in response to an "MTP-STATUS Indication"
     indicating user part inaccessibility, the `DISCON_orgi' is set to `N_USER'
     and the `DISCON_reason' is set to `N_MTP_USER_PART_UNKNOWN',
     `N_MTP_USER_PART_UNEQUIPPED', or `N_MTP_USER_PART_UNAVAILABLE', depending
     on the nature of the status of the remote user.


File: npi_mtp.info,  Node: N_RESET_REQ,  Next: N_RESET_RES,  Prev: N_DISCON_IND,  Up: CONS: NC Termination Phase

3.4.3 N_RESET_REQ
-----------------

 Parameters
...........

`RESET_reason'
     Specifies the reason for reset.

 Rules
......

Rules for issuing primitive:

  1. The MTP conforming NSP does not support user-originated reset.  If the NSU
     issues a `N_RESET_REQ' primitive, the service provider should respond with
     an `N_ERROR_ACK' primitive with the error type set to `NNOTSUPPORT'.


File: npi_mtp.info,  Node: N_RESET_RES,  Next: N_RESET_IND,  Prev: N_RESET_REQ,  Up: CONS: NC Termination Phase

3.4.4 N_RESET_RES
-----------------

 Rules
......

Rules for issuing primitive:

  1. The normal rules for issuing this primitive apply.

  2. The MTP conforming NSP will not flush queues in response to this primitive.


File: npi_mtp.info,  Node: N_RESET_IND,  Next: N_RESET_CON,  Prev: N_RESET_RES,  Up: CONS: NC Termination Phase

3.4.5 N_RESET_IND
-----------------

 Parameters
...........

`RESET_orig'
     Indicates the originator of the reset.

`RESET_reason'
     Indicates the reason for the reset.

 Reasons
........

`N_PROVIDER'
     The following reset reasons apply when the `RESET_orig' is `N_PROVIDER':
    `N_MTP_DEST_CONGESTED(n)'
          Reset due to destination congestion at level "n".

    `N_MTP_CLUS_CONGESTED(n)'
          Reset due to cluster congestion at level "n".

 Rules
......

Rules for issuing primitive:

  1. MTP conforming NSP will issue this primitive when an "MTP-STATUS
     Indication" primtive is receive indicating congestion toward the remote
     MTP address (Signalling Point) or congestion toward a Cluster route.

Rules for reset reasons:

  1. The MTP conforming NSP will only set `RESET_orig' to `N_PROVIDER'.

  2. The MTP conforming NSP will only set `RESET_reason' to
     `N_MTP_DEST_CONGESTED(n)' or `N_MTP_CLUS_CONGESTED(n)'.


File: npi_mtp.info,  Node: N_RESET_CON,  Prev: N_RESET_IND,  Up: CONS: NC Termination Phase

3.4.6 N_RESET_CON
-----------------

 Rules
......

Rules for issuing primitive:

  1. The MTP conforming NSP does not support user-originated reset and will
     never issue this primitive nor enter the `NS_WCON_RREQ' state.


File: npi_mtp.info,  Node: CLNS: Data Transfer Phase

3.5 CLNS: Data Transfer Phase
=============================

* Menu:

* N_UNITDATA_REQ::
* N_UNITDATA_IND::
* N_UDERROR_IND::


File: npi_mtp.info,  Node: N_UNITDATA_REQ,  Next: N_UNITDATA_IND,  Up: CLNS: Data Transfer Phase

3.5.1 N_UNITDATA_REQ
--------------------

 Parameters
...........

`DEST_length'
     Specifies the length of the destination address.

`DEST_offset'
     Specifies the offset of the destination address from the beginning of the
     `M_PROTO' message block.

 Rules
......

Rules for source address:

  1. NPI does not permit the source address of the NSU to be specified.  The
     source MTP address (MTP-SAPI) that will be used as the source address for
     the data transmission will be the bound (MTP-SAPI).

  2. If no MTP-SAPI is bound (i.e. when the Stream is bound with
     `DEFAULT_DESTINATION' the MTP can either choose a source address or refuse
     the Stream with an `M_ERROR' message with error number [`EPROTO'].

Rules for destination address:

  1. The NSU must specify a destination address that is compatible with the
     bound MTP-SAPI.  If the destination address is not compatible with the
     MTP-SAPI, the MTP may return an `N_UDERROR_IND' primitive with an
     appropriate `ERROR_type' or refuse the Stream with an `M_ERROR' message
     with error number [`EPROTO'].

  2. If the NSU does not specify the destination address, the MTP can choose a
     destination address, return an `N_UDERROR_IND' primitive with an
     appropriate `ERROR_type', or refuse the Stream with an `M_ERROR' mesasge
     with error number [`EPROTO'].

Rules for QOS parameters:

  1. The QOS parameters SLS and MP will be set according to the last setting
     made with the `N_OPTMGMT_REQ' primitive.

  2. To set a specific SLS or MP value for an outgoing message, `N_OPTMGMT_REQ'
     must be called before `N_UNITDATA_REQ'.  In this case the `N_OPTMGMT_REQ'
     must be of message type `M_PROTO' and not `M_PCPROTO'.


File: npi_mtp.info,  Node: N_UNITDATA_IND,  Next: N_UDERROR_IND,  Prev: N_UNITDATA_REQ,  Up: CLNS: Data Transfer Phase

3.5.2 N_UNITDATA_IND
--------------------

 Parameters
...........

`SRC_length'
     Indicates the length of the source address.

`SRC_offset'
     Indicates the offset of the source address from the beginning of the
     `M_PROTO' message block.

`DEST_length'
     Indicates the length of the destination address.

`DEST_offset'
     Indicates the offset of the destination address from the beginning of the
     `M_PROTO' message block.

`ERROR_type'
     Indicates whether the indicated data encountered congestion.  (See
     "Errors" below.)

 Errors
.......

 Rules
......

Rules for issuing primitive:
  1. The `N_UNITDATA_IND' primtiive is used to indicate data.  It is issued
     whenever data is received for an NSDU on a Stream in CLNS mode.

  2. The `N_UNITDATA_IND' primitive is never issued by the MTP service provider
     in CONS mode.

Rules for source address:
  1. The source address is always set to the source address present in the
     corresponding received MSU.

  2. The source address indicates the received Originating Point Code (OPC)
     form the MTP Routing Label of the received message in the MTP_PC field as
     well as the received Service Indicator (SI) from the MTP Routing Label of
     the received message in the MTP_SI field.

  3. The MTP_NI field is set correctly according to local network indicator
     configuration.

Rules for destination address:
  1. The destination address is always set to the destination address present
     in the corresponding received MSU.

  2. The destination address indicates the received Destination Point Code
     (DPC) from the MTP Routing Label of the received message in the MTP_PC
     field as well as the received Service Indicator (SI) from the MTP Routing
     Label of the received message in the MTP_SI field.

  3. The MTP_NI field is set correclty according to local network indicator
     configuration.

Rules for error type:
  1. The MTP conforming NSP does not support congestion indication on a
     per-packet basis and this field will always be coded zero (`0').

Rules for data:
  1. The amount of data (in octets) indicated will not exceed the value of
     `NSDU_size' returned by the `N_INFO_ACK' primitive.  (See *note
     N_INFO_ACK: N_INFO_ACK.)


File: npi_mtp.info,  Node: N_UDERROR_IND,  Prev: N_UNITDATA_IND,  Up: CLNS: Data Transfer Phase

3.5.3 N_UDERROR_IND
-------------------

 Parameters
...........

`DEST_length'
     Indicates the length of the destination address.

`DEST_offset'
     Indicates the offset of the destination address from the beginning of the
     `M_PROTO' message block.

`ERROR_type'
     Indicates the reason for the unit data error indication.  The `ERROR_type'
     field can assume one of the values listed under "Errors" below.

 Errors
.......

`N_MTP_DEST_CONGESTED(n)'
     The path toward the indicated remote signalling point has become congested
     at the level indicated.

`N_MTP_CLUS_CONGESTED(n)'
     The path toward the indicated cluster route has become congested at the
     level indicated.

`N_MTP_DEST_PROHIBITED'
     The path toward the indicated remote signalling point is unavailable.

`N_MTP_CLUS_PROHIBITED'
     The path toward the indicated cluster route is unavailable.

`N_MTP_RESTARTING'
     The local MTP is retsarting.

`N_MTP_USER_PART_UNKNOWN'
     The indicated remote user part (MTP-SAPI) is inaccessbile for unknown
     reasons.

`N_MTP_USER_PART_UNEQUIPPED'
     The indicated remote user part (MTP-SAPI) is inaccessbile because it is
     unequipped.

`N_MTP_USER_PART_UNAVAILABLE'
     The indicated remote user part (MTP-SAPI) is inaccessbile because it is
     unavailable.

 Rules
......

Rules for issuing primitive:
  1. This primitive is issued in response to an `N_UNITDATA_REQ' under the same
     circumstances that an "MTP-PAUSE Indication" or "MTP-STATUS Indication"
     primitive would be issued in response to an "MTP-TRANSFER Request"
     (responsive).

  2. This primitive is issued independent of an `N_UNITDATA_REQ' under the same
     circumstances that an "MTP-PAUSE Indication", "MTP-STATUS Indication",
     `MTP-RESUME Indication' would be issued (preventative).

  3. This primitive is issued independent of an `N_UNITDATA_REQ' whenever an
     "MTP-RESETART-BEGINS Indication" or "MTP-RESTART-COMPLETE Indication"
     would be given to the MTP-User.

Rules for destination address:
  1. If the error was associated with an `N_UNITDATA_REQ' primitive, the
     destination address will contain the destination address from the
     `N_UNITDATA_REQ' primitive.

  2. If the error was not associated with an `N_UNITDATA_REQ' primitive (i.e.
     the indication is preventative rather than responsive), the destination
     address contains the affected address to which the error corresponds.

  3. For error types `N_MTP_DEST_PROHIBITED' and `N_MTP_CLUS_PROHIBITED', the
     MTP_PC field of the destination address indicates the member or cluster
     that is prohibited.

  4. For error types `N_MTP_DEST_PROHIBITED' and `N_MTP_CLUS_PROHIBITED', the
     MTP_SI field is not significant and should be ignored by the NSU.

  5. For error types `N_MTP_USER_PART_UNKNOWN', `N_MTP_USER_PART_UNEQUIPPED' and
     `N_MTP_USER_PART_UNAVAILABLE', the MTP_SI field is significant and
     indicates the MTP User (MTP-SAPI) that is inaccessible for the reason
     indicated.

  6. For error types `N_MTP_USER_PART_UNKNOWN', `N_MTP_USER_PART_UNEQUIPPED' and
     `N_MTP_USER_PART_UNAVAILABLE', the MTP_PC field of the destination address
     indicates the signalling point to which the affected user part belongs.

Rules for error type:
  1. Error type `N_MTP_DEST_PROHIBITED' corresponds to an "MTP-PAUSE
     Indication" primitive.

  2. Error type `N_MTP_CLUS_PROHIBITED' corresponds to an "MTP-PAUSE
     Indication" primitive.  This error type is only indicated if the protocol
     variant and NSP support cluster routing.

  3. Primitives with error types `N_MTP_DEST_PROHIBITED' or
     `N_MTP_CLUS_PROHIBITED' are issued either in response to an
     `N_UNITDATA_REQ' to a prohibited destination (in which case the
     `N_UDERROR_IND' can contain `M_DATA' message blocks representing the
     message), or in response to the detected inaccessiblity of the destination
     (in which case the `N_UDERROR_IND' does not contain `M_DATA' message
     blocks representing a message).

  4. Error type `N_MTP_USER_PART_UNKNOWN', `N_MTP_USER_PART_UNEQUIPPED' and
     `N_MTP_USER_PART_UNAVAILABLE' correspond to an equivalent "MTP-STATUS
     Indication" primitive.  These error types do not include `M_DATA' message
     blocks.

Rules for data:
  1. If the error indication is as a result of data that was transmitted using
     an `N_UNITDATA_REQ' primitive (responsive), the data will be returned in
     `M_DATA' message blocks along with the `N_UDERROR_IND' primitive.

  2. If the error indication was not a result of data being transmitted
     (preventative), no `M_DATA' message blocks will be returned in the
     `N_UDERROR_IND' primitive.


File: npi_mtp.info,  Node: NPI-MTP Mapping of Primitives,  Next: NPI-MTP Header File Listing,  Prev: NPI-MTP Rules for Conformance,  Up: Top

Appendix A NPI-MTP Mapping of Primitives
****************************************

A.1 The mapping of NPI Primitives to MTP
========================================

The mapping of NPI primitives to Q.704 [Q.704] and ANSI T1.111 [T1.111] is
shown in *note Table A-1::.


          +-----------------------------------+-----------------------+
          |          MTP Primitive            |     NPI Primitive     |
          +-------------------+---------------+------+----------------+
          |Generic Name       | Specific Name | Mode | Type           |
          +-------------------+---------------+------+----------------+
          |MTP-TRANSFER       | Request       | CLNS | N_UNITDATA_REQ |
          |                   |               +------+----------------+
          |                   |               | CONS | M_DATA         |
          |                   |               |      | N_DATA_REQ     |
          |                   +---------------+------+----------------+
          |                   | Indication    | CLNS | N_UNITDATA_IND |
          |                   |               +------+----------------+
          |                   |               | CONS | M_DATA         |
          |                   |               |      | N_DATA_IND     |
          +-------------------+---------------+------+----------------+
          |MTP-PAUSE          | Indication    | CLNS | N_UDERROR_IND  |
          |                   |               +------+----------------+
          |                   |               | CONS | N_DISCON_IND   |
          +-------------------+---------------+------+----------------+
          |MTP-RESUME         | Indication    | CLNS | N_UDERROR_IND  |
          |                   |               +------+----------------+
          |                   |               | CONS | --             |
          +-------------------+---------------+------+----------------+
          |MTP-STATUS         | Indication    | CLNS | N_UDERROR_IND  |
          |                   |               +------+----------------+
          |                   |               | CONS | N_RESET_IND    |
          |                   |               |      | N_RESET_CON    |
          +-------------------+---------------+------+----------------+
          |MTP-RESTART-BEGINS | Indication    | CLNS | N_UDERROR_IND  |
          |                   |               +------+----------------+
          |                   |               | CONS | N_DISCON_IND   |
          +-------------------+---------------+------+----------------+
          |MTP-RESTART-ENDS   | Indication    | CLNS | N_UDERROR_IND  |
          |                   |               +------+----------------+
          |                   |               | CONS | --             |
          +-------------------+---------------+------+----------------+

           _Table A-1.  Mapping of NPI primitives to MTP Primitives_


File: npi_mtp.info,  Node: NPI-MTP Header File Listing,  Next: License,  Prev: NPI-MTP Mapping of Primitives,  Up: Top

Appendix B NPI-MTP Header File Listing
**************************************

/*****************************************************************************

 @(#) $Id: npi_mtp.h,v 0.9.2.1 2008-11-17 14:04:32 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-11-17 14:04:32 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: npi_mtp.h,v $
 Revision 0.9.2.1  2008-11-17 14:04:32  brian
 - added documentation and conversion modules

 Revision 0.9.2.6  2008-04-29 07:10:46  brian
 - updating headers for release

 Revision 0.9.2.5  2007/08/14 12:17:12  brian
 - GPLv3 header updates

 Revision 0.9.2.4  2007/02/13 14:05:30  brian
 - corrected ulong and long for 32-bit compat

 *****************************************************************************/

#ifndef _SYS_NPI_MTP_H
#define _SYS_NPI_MTP_H

#ident "@(#) $RCSfile: npi_mtp.h,v $ $Name: OpenSS7-0_9_2 $($Revision: 0.9.2.1 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/* This file can be processed with doxygen(1). */

/*
 *  LiS npi.h is version 1
 */
#ifndef N_VERSION_2

#define N_CURRENT_VERSION   0x02        /* current version of NPI */
#define N_VERSION_2         0x02        /* version of npi, December 16, 1991 */

/*
 * Information acknowledgement
 */
typedef struct {
        np_ulong PRIM_type;             /* always N_INFO_ACK */
        np_ulong NSDU_size;             /* maximum NSDU size */
        np_ulong ENSDU_size;            /* maximum ENSDU size */
        np_ulong CDATA_size;            /* connect data size */
        np_ulong DDATA_size;            /* discon data size */
        np_ulong ADDR_size;             /* address size */
        np_ulong ADDR_length;           /* address length */
        np_ulong ADDR_offset;           /* address offset */
        np_ulong QOS_length;            /* QOS values length */
        np_ulong QOS_offset;            /* QOS values offset */
        np_ulong QOS_range_length;      /* length of QOS values' range */
        np_ulong QOS_range_offset;      /* offset of QOS values' range */
        np_ulong OPTIONS_flags;         /* bit masking for options supported */
        np_ulong NIDU_size;             /* network i/f data unit size */
        np_long SERV_type;              /* service type */
        np_ulong CURRENT_state;         /* current state */
        np_ulong PROVIDER_type;         /* type of NS provider */
        np_ulong NODU_size;             /* optimal NSDU size */
        np_ulong PROTOID_length;        /* length of bound protocol ids */
        np_ulong PROTOID_offset;        /* offset of bound protocol ids */
        np_ulong NPI_version;           /* version # of npi that is supported */
} __N_info_ack_t;

#define N_info_ack_t __N_info_ack_t

/*
 * Bind acknowledgement
 */
typedef struct {
        np_ulong PRIM_type;             /* always N_BIND_ACK */
        np_ulong ADDR_length;           /* address length */
        np_ulong ADDR_offset;           /* offset of address */
        np_ulong CONIND_number;         /* connection indications */
        np_ulong TOKEN_value;           /* value of "token" assigned to stream */
        np_ulong PROTOID_length;        /* length of bound protocol ids */
        np_ulong PROTOID_offset;        /* offset of bound protocol ids */
} __N_bind_ack_t;

#define N_bind_ack_t __N_bind_ack_t

#endif                          /* N_VERSION_2 */

#ifndef NSF_UNBND
#define NSF_UNBND       (1<<NS_UNBND      )
#define NSF_WACK_BREQ   (1<<NS_WACK_BREQ  )
#define NSF_WACK_UREQ   (1<<NS_WACK_UREQ  )
#define NSF_IDLE        (1<<NS_IDLE       )
#define NSF_WACK_OPTREQ (1<<NS_WACK_OPTREQ)
#define NSF_WACK_RRES   (1<<NS_WACK_RRES  )
#define NSF_WCON_CREQ   (1<<NS_WCON_CREQ  )
#define NSF_WRES_CIND   (1<<NS_WRES_CIND  )
#define NSF_WACK_CRES   (1<<NS_WACK_CRES  )
#define NSF_DATA_XFER   (1<<NS_DATA_XFER  )
#define NSF_WCON_RREQ   (1<<NS_WCON_RREQ  )
#define NSF_WRES_RIND   (1<<NS_WRES_RIND  )
#define NSF_WACK_DREQ6  (1<<NS_WACK_DREQ6 )
#define NSF_WACK_DREQ7  (1<<NS_WACK_DREQ7 )
#define NSF_WACK_DREQ9  (1<<NS_WACK_DREQ9 )
#define NSF_WACK_DREQ10 (1<<NS_WACK_DREQ10)
#define NSF_WACK_DREQ11 (1<<NS_WACK_DREQ11)
#endif                          /* NSF_UNBND */

#ifndef __HAVE_MTP_ADDR
typedef struct mtp_addr {
        unsigned int family __attribute__ ((packed));
        unsigned short int ni __attribute__ ((packed));
        unsigned short int si __attribute__ ((packed));
        unsigned int pc __attribute__ ((packed));
} mtp_addr_t;

#define __HAVE_MTP_ADDR
#endif

#define N_QOS_SEL_DATA_MTP      0x0801
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_DATA_MTP */
        np_ulong sls;                   /* signalling link selection */
        np_ulong mp;                    /* message priority */
} N_qos_sel_data_mtp_t;

#define N_QOS_SEL_CONN_MTP      0x0802
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_CONN_MTP */
} N_qos_sel_conn_mtp_t;

#define N_QOS_SEL_INFO_MTP      0x0803
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_SEL_INFO_MTP */
        np_ulong pvar;                  /* protocol variant */
        np_ulong popt;                  /* protocol options */
        np_ulong sls;                   /* signalling link selection */
        np_ulong mp;                    /* message priority */
} N_qos_sel_info_mtp_t;

#define N_QOS_RANGE_INFO_MTP    0x0804
typedef struct {
        np_ulong n_qos_type;            /* always N_QOS_RANGE_INFO_MTP */
        np_ulong sls_range;             /* signalling link selection mask */
        np_ulong mp_range;              /* message priority mask */
} N_qos_range_info_mtp_t;

typedef union N_qos_mtp {
        np_ulong n_qos_type;
        N_qos_sel_conn_mtp_t n_qos_conn;
        N_qos_sel_data_mtp_t n_qos_data;
        N_qos_sel_info_mtp_t n_qos_info;
        N_qos_range_info_mtp_t n_qos_range;
} N_qos_mtp_t;

#define N_MTP_M_CLUSTER                 (0x00000100)
#define N_MTP_M_MEMBER                  (0x00001000)
#define N_MTP_AVAILABLE                 (0x00000001)
#define N_MTP_PROHIBITED                (0x00000002)
#define N_MTP_CONGESTED(__s)            (0x00000003|((__s)<<16))
#define N_MTP_DEST_AVAILABLE            (N_MTP_AVAILABLE|N_MTP_M_MEMBER )
#define N_MTP_DEST_PROHIBITED           (N_MTP_PROHIBITED|N_MTP_M_MEMBER )
#define N_MTP_DEST_CONGESTED(__s)       (N_MTP_CONGESTED(__s)|N_MTP_M_MEMBER )
#define N_MTP_CLUS_AVAILABLE            (N_MTP_AVAILABLE|N_MTP_M_CLUSTER)
#define N_MTP_CLUS_PROHIBITED           (N_MTP_PROHIBITED|N_MTP_M_CLUSTER)
#define N_MTP_CLUS_CONGESTED(__s)       (N_MTP_CONGESTED(__s)|N_MTP_M_CLUSTER)
#define N_MTP_RESTARTING                (0x00001004)
#define N_MTP_RESTARTED                 (0x00001005)
#define N_MTP_USER_PART_UNKNOWN         (0x00001006)
#define N_MTP_USER_PART_UNEQUIPPED      (0x00001007)
#define N_MTP_USER_PART_UNAVAILABLE     (0x00001008)
#define N_MTP_CONGESTION_STATUS(__x)    (((__x)>>16))

#endif                          /* _SYS_NPI_MTP_H */


File: npi_mtp.info,  Node: License,  Next: Glossary,  Prev: NPI-MTP Header File Listing,  Up: Top

 License
********

* Menu:

* GNU Affero General Public License::
* GNU Free Documentation License::


File: npi_mtp.info,  Node: GNU Affero General Public License,  Next: GNU Free Documentation License,  Up: License

 GNU Affero General Public License
==================================



                    The GNU Affero General Public License.
                          Version 3, 19 November 2007

     Copyright (C) 2007 Free Software Foundation, Inc. `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies of this
     license document, but changing it is not allowed.

 Preamble
---------

The GNU Affero General Public License is a free, copyleft license for software
and other kinds of works, specifically designed to ensure cooperation with the
community in the case of network server software.

The licenses for most software and other practical works are designed to take
away your freedom to share and change the works.  By contrast, our General
Public Licenses are intended to guarantee your freedom to share and change all
versions of a program-to make sure it remains free software for all its users.

When we speak of free software, we are referring to freedom, not price.  Our
General Public Licenses are designed to make sure that you have the freedom to
distribute copies of free software (and charge for them if you wish), that you
receive source code or can get it if you want it, that you can change the
software or use pieces of it in new free programs, and that you know you can do
these things.

Developers that use our General Public Licenses protect your rights with two
steps: (1) assert copyright on the software, and (2) offer you this License
which gives you legal permission to copy, distribute and/or modify the software.

A secondary benefit of defending all users' freedom is that improvements made
in alternate versions of the program, if they receive widespread use, become
available for other developers to incorporate.  Many developers of free
software are heartened and encouraged by the resulting cooperation.  However,
in the case of software used on network servers, this result may fail to come
about.  The GNU General Public License permits making a modified version and
letting the public access it on a server without ever releasing its source code
to the public.

The GNU Affero General Public License is designed specifically to ensure that,
in such cases, the modified source code becomes available to the community.  It
requires the operator of a network server to provide the source code of the
modified version running there to the users of that server.  Therefore, public
use of a modified version, on a publicly accessible server, gives the public
access to the source code of the modified version.

An older license, called the Affero General Public License and published by
Affero, was designed to accomplish similar goals.  This is a different license,
not a version of the Affero GPL, but Affero has released a new version of the
Affero GPL which permits relicensing under this license.

The precise terms and conditions for copying, distribution and modification
follow.

                             TERMS AND CONDITIONS
  0. Definitions.

     "This License" refers to version 3 of the GNU Affero General Public
     License.

     "Copyright" also means copyright-like laws that apply to other kinds of
     works, such as semiconductor masks.

     "The Program" refers to any copyrightable work licensed under this
     License.  Each licensee is addressed as "you".  "Licensees" and
     "recipients" may be individuals or organizations.

     To "modify" a work means to copy from or adapt all or part of the work in
     a fashion requiring copyright permission, other than the making of an
     exact copy.  The resulting work is called a "modified version" of the
     earlier work or a work "based on" the earlier work.

     A "covered work" means either the unmodified Program or a work based on
     the Program.

     To "propagate" a work means to do anything with it that, without
     permission, would make you directly or secondarily liable for infringement
     under applicable copyright law, except executing it on a computer or
     modifying a private copy.  Propagation includes copying, distribution
     (with or without modification), making available to the public, and in
     some countries other activities as well.

     To "convey" a work means any kind of propagation that enables other
     parties to make or receive copies.  Mere interaction with a user through a
     computer network, with no transfer of a copy, is not conveying.

     An interactive user interface displays "Appropriate Legal Notices" to the
     extent that it includes a convenient and prominently visible feature that
     (1) displays an appropriate copyright notice, and (2) tells the user that
     there is no warranty for the work (except to the extent that warranties
     are provided), that licensees may convey the work under this License, and
     how to view a copy of this License.  If the interface presents a list of
     user commands or options, such as a menu, a prominent item in the list
     meets this criterion.

  1. Source Code.

     The "source code" for a work means the preferred form of the work for
     making modifications to it.  "Object code" means any non-source form of a
     work.

     A "Standard Interface" means an interface that either is an official
     standard defined by a recognized standards body, or, in the case of
     interfaces specified for a particular programming language, one that is
     widely used among developers working in that language.

     The "System Libraries" of an executable work include anything, other than
     the work as a whole, that (a) is included in the normal form of packaging
     a Major Component, but which is not part of that Major Component, and (b)
     serves only to enable use of the work with that Major Component, or to
     implement a Standard Interface for which an implementation is available to
     the public in source code form.  A "Major Component", in this context,
     means a major essential component (kernel, window system, and so on) of
     the specific operating system (if any) on which the executable work runs,
     or a compiler used to produce the work, or an object code interpreter used
     to run it.

     The "Corresponding Source" for a work in object code form means all the
     source code needed to generate, install, and (for an executable work) run
     the object code and to modify the work, including scripts to control those
     activities.  However, it does not include the work's System Libraries, or
     general-purpose tools or generally available free programs which are used
     unmodified in performing those activities but which are not part of the
     work.  For example, Corresponding Source includes interface definition
     files associated with source files for the work, and the source code for
     shared libraries and dynamically linked subprograms that the work is
     specifically designed to require, such as by intimate data communication
     or control flow between those subprograms and other parts of the work.

     The Corresponding Source need not include anything that users can
     regenerate automatically from other parts of the Corresponding Source.

     The Corresponding Source for a work in source code form is that same work.

  2. Basic Permissions.

     All rights granted under this License are granted for the term of
     copyright on the Program, and are irrevocable provided the stated
     conditions are met.  This License explicitly affirms your unlimited
     permission to run the unmodified Program.  The output from running a
     covered work is covered by this License only if the output, given its
     content, constitutes a covered work.  This License acknowledges your
     rights of fair use or other equivalent, as provided by copyright law.

     You may make, run and propagate covered works that you do not convey,
     without conditions so long as your license otherwise remains in force.
     You may convey covered works to others for the sole purpose of having them
     make modifications exclusively for you, or provide you with facilities for
     running those works, provided that you comply with the terms of this
     License in conveying all material for which you do not control copyright.
     Those thus making or running the covered works for you must do so
     exclusively on your behalf, under your direction and control, on terms
     that prohibit them from making any copies of your copyrighted material
     outside their relationship with you.

     Conveying under any other circumstances is permitted solely under the
     conditions stated below.  Sublicensing is not allowed; section 10 makes it
     unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

     No covered work shall be deemed part of an effective technological measure
     under any applicable law fulfilling obligations under article 11 of the
     WIPO copyright treaty adopted on 20 December 1996, or similar laws
     prohibiting or restricting circumvention of such measures.

     When you convey a covered work, you waive any legal power to forbid
     circumvention of technological measures to the extent such circumvention
     is effected by exercising rights under this License with respect to the
     covered work, and you disclaim any intention to limit operation or
     modification of the work as a means of enforcing, against the work's
     users, your or third parties' legal rights to forbid circumvention of
     technological measures.

  4. Conveying Verbatim Copies.

     You may convey verbatim copies of the Program's source code as you receive
     it, in any medium, provided that you conspicuously and appropriately
     publish on each copy an appropriate copyright notice; keep intact all
     notices stating that this License and any non-permissive terms added in
     accord with section 7 apply to the code; keep intact all notices of the
     absence of any warranty; and give all recipients a copy of this License
     along with the Program.

     You may charge any price or no price for each copy that you convey, and
     you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

     You may convey a work based on the Program, or the modifications to
     produce it from the Program, in the form of source code under the terms of
     section 4, provided that you also meet all of these conditions:

       a. The work must carry prominent notices stating that you modified it,
          and giving a relevant date.

       b. The work must carry prominent notices stating that it is released
          under this License and any conditions added under section 7.  This
          requirement modifies the requirement in section 4 to "keep intact all
          notices".

       c. You must license the entire work, as a whole, under this License to
          anyone who comes into possession of a copy.  This License will
          therefore apply, along with any applicable section 7 additional terms,
          to the whole of the work, and all its parts, regardless of how they
          are packaged.  This License gives no permission to license the work in
          any other way, but it does not invalidate such permission if you have
          separately received it.

       d. If the work has interactive user interfaces, each must display
          Appropriate Legal Notices; however, if the Program has interactive
          interfaces that do not display Appropriate Legal Notices, your work
          need not make them do so.

     A compilation of a covered work with other separate and independent works,
     which are not by their nature extensions of the covered work, and which
     are not combined with it such as to form a larger program, in or on a
     volume of a storage or distribution medium, is called an "aggregate" if
     the compilation and its resulting copyright are not used to limit the
     access or legal rights of the compilation's users beyond what the
     individual works permit.  Inclusion of a covered work in an aggregate does
     not cause this License to apply to the other parts of the aggregate.

  6. Conveying Non-Source Forms.

     You may convey a covered work in object code form under the terms of
     sections 4 and 5, provided that you also convey the machine-readable
     Corresponding Source under the terms of this License, in one of these ways:

       a. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by the
          Corresponding Source fixed on a durable physical medium customarily
          used for software interchange.

       b. Convey the object code in, or embodied in, a physical product
          (including a physical distribution medium), accompanied by a written
          offer, valid for at least three years and valid for as long as you
          offer spare parts or customer support for that product model, to give
          anyone who possesses the object code either (1) a copy of the
          Corresponding Source for all the software in the product that is
          covered by this License, on a durable physical medium customarily used
          for software interchange, for a price no more than your reasonable
          cost of physically performing this conveying of source, or (2) access
          to copy the Corresponding Source from a network server at no charge.

       c. Convey individual copies of the object code with a copy of the written
          offer to provide the Corresponding Source.  This alternative is
          allowed only occasionally and noncommercially, and only if you
          received the object code with such an offer, in accord with subsection
          6b.

       d. Convey the object code by offering access from a designated place
          (gratis or for a charge), and offer equivalent access to the
          Corresponding Source in the same way through the same place at no
          further charge.  You need not require recipients to copy the
          Corresponding Source along with the object code.  If the place to copy
          the object code is a network server, the Corresponding Source may be
          on a different server (operated by you or a third party) that supports
          equivalent copying facilities, provided you maintain clear directions
          next to the object code saying where to find the Corresponding Source.
          Regardless of what server hosts the Corresponding Source, you remain
          obligated to ensure that it is available for as long as needed to
          satisfy these requirements.

       e. Convey the object code using peer-to-peer transmission, provided you
          inform other peers where the object code and Corresponding Source of
          the work are being offered to the general public at no charge under
          subsection 6d.


     A separable portion of the object code, whose source code is excluded from
     the Corresponding Source as a System Library, need not be included in
     conveying the object code work.

     A "User Product" is either (1) a "consumer product", which means any
     tangible personal property which is normally used for personal, family, or
     household purposes, or (2) anything designed or sold for incorporation
     into a dwelling.  In determining whether a product is a consumer product,
     doubtful cases shall be resolved in favor of coverage.  For a particular
     product received by a particular user, "normally used" refers to a typical
     or common use of that class of product, regardless of the status of the
     particular user or of the way in which the particular user actually uses,
     or expects or is expected to use, the product.  A product is a consumer
     product regardless of whether the product has substantial commercial,
     industrial or non-consumer uses, unless such uses represent the only
     significant mode of use of the product.

     "Installation Information" for a User Product means any methods,
     procedures, authorization keys, or other information required to install
     and execute modified versions of a covered work in that User Product from
     a modified version of its Corresponding Source.  The information must
     suffice to ensure that the continued functioning of the modified object
     code is in no case prevented or interfered with solely because
     modification has been made.

     If you convey an object code work under this section in, or with, or
     specifically for use in, a User Product, and the conveying occurs as part
     of a transaction in which the right of possession and use of the User
     Product is transferred to the recipient in perpetuity or for a fixed term
     (regardless of how the transaction is characterized), the Corresponding
     Source conveyed under this section must be accompanied by the Installation
     Information.  But this requirement does not apply if neither you nor any
     third party retains the ability to install modified object code on the
     User Product (for example, the work has been installed in ROM).

     The requirement to provide Installation Information does not include a
     requirement to continue to provide support service, warranty, or updates
     for a work that has been modified or installed by the recipient, or for
     the User Product in which it has been modified or installed.  Access to a
     network may be denied when the modification itself materially and
     adversely affects the operation of the network or violates the rules and
     protocols for communication across the network.

     Corresponding Source conveyed, and Installation Information provided, in
     accord with this section must be in a format that is publicly documented
     (and with an implementation available to the public in source code form),
     and must require no special password or key for unpacking, reading or
     copying.

  7. Additional Terms.

     "Additional permissions" are terms that supplement the terms of this
     License by making exceptions from one or more of its conditions.
     Additional permissions that are applicable to the entire Program shall be
     treated as though they were included in this License, to the extent that
     they are valid under applicable law.  If additional permissions apply only
     to part of the Program, that part may be used separately under those
     permissions, but the entire Program remains governed by this License
     without regard to the additional permissions.

     When you convey a copy of a covered work, you may at your option remove
     any additional permissions from that copy, or from any part of it.
     (Additional permissions may be written to require their own removal in
     certain cases when you modify the work.)  You may place additional
     permissions on material, added by you to a covered work, for which you
     have or can give appropriate copyright permission.

     Notwithstanding any other provision of this License, for material you add
     to a covered work, you may (if authorized by the copyright holders of that
     material) supplement the terms of this License with terms:

       a. Disclaiming warranty or limiting liability differently from the terms
          of sections 15 and 16 of this License; or

       b. Requiring preservation of specified reasonable legal notices or author
          attributions in that material or in the Appropriate Legal Notices
          displayed by works containing it; or

       c. Prohibiting misrepresentation of the origin of that material, or
          requiring that modified versions of such material be marked in
          reasonable ways as different from the original version; or

       d. Limiting the use for publicity purposes of names of licensors or
          authors of the material; or

       e. Declining to grant rights under trademark law for use of some trade
          names, trademarks, or service marks; or

       f. Requiring indemnification of licensors and authors of that material by
          anyone who conveys the material (or modified versions of it) with
          contractual assumptions of liability to the recipient, for any
          liability that these contractual assumptions directly impose on those
          licensors and authors.

     All other non-permissive additional terms are considered "further
     restrictions" within the meaning of section 10.  If the Program as you
     received it, or any part of it, contains a notice stating that it is
     governed by this License along with a term that is a further restriction,
     you may remove that term.  If a license document contains a further
     restriction but permits relicensing or conveying under this License, you
     may add to a covered work material governed by the terms of that license
     document, provided that the further restriction does not survive such
     relicensing or conveying.

     If you add terms to a covered work in accord with this section, you must
     place, in the relevant source files, a statement of the additional terms
     that apply to those files, or a notice indicating where to find the
     applicable terms.

     Additional terms, permissive or non-permissive, may be stated in the form
     of a separately written license, or stated as exceptions; the above
     requirements apply either way.

  8. Termination.

     You may not propagate or modify a covered work except as expressly
     provided under this License.  Any attempt otherwise to propagate or modify
     it is void, and will automatically terminate your rights under this
     License (including any patent licenses granted under the third paragraph
     of section 11).

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, you do not qualify to receive new licenses for the same
     material under section 10.

  9. Acceptance Not Required for Having Copies.

     You are not required to accept this License in order to receive or run a
     copy of the Program.  Ancillary propagation of a covered work occurring
     solely as a consequence of using peer-to-peer transmission to receive a
     copy likewise does not require acceptance.  However, nothing other than
     this License grants you permission to propagate or modify any covered
     work.  These actions infringe copyright if you do not accept this License.
     Therefore, by modifying or propagating a covered work, you indicate your
     acceptance of this License to do so.

 10. Automatic Licensing of Downstream Recipients.

     Each time you convey a covered work, the recipient automatically receives
     a license from the original licensors, to run, modify and propagate that
     work, subject to this License.  You are not responsible for enforcing
     compliance by third parties with this License.

     An "entity transaction" is a transaction transferring control of an
     organization, or substantially all assets of one, or subdividing an
     organization, or merging organizations.  If propagation of a covered work
     results from an entity transaction, each party to that transaction who
     receives a copy of the work also receives whatever licenses to the work
     the party's predecessor in interest had or could give under the previous
     paragraph, plus a right to possession of the Corresponding Source of the
     work from the predecessor in interest, if the predecessor has it or can
     get it with reasonable efforts.

     You may not impose any further restrictions on the exercise of the rights
     granted or affirmed under this License.  For example, you may not impose a
     license fee, royalty, or other charge for exercise of rights granted under
     this License, and you may not initiate litigation (including a cross-claim
     or counterclaim in a lawsuit) alleging that any patent claim is infringed
     by making, using, selling, offering for sale, or importing the Program or
     any portion of it.

 11. Patents.

     A "contributor" is a copyright holder who authorizes use under this
     License of the Program or a work on which the Program is based.  The work
     thus licensed is called the contributor's "contributor version".

     A contributor's "essential patent claims" are all patent claims owned or
     controlled by the contributor, whether already acquired or hereafter
     acquired, that would be infringed by some manner, permitted by this
     License, of making, using, or selling its contributor version, but do not
     include claims that would be infringed only as a consequence of further
     modification of the contributor version.  For purposes of this definition,
     "control" includes the right to grant patent sublicenses in a manner
     consistent with the requirements of this License.

     Each contributor grants you a non-exclusive, worldwide, royalty-free
     patent license under the contributor's essential patent claims, to make,
     use, sell, offer for sale, import and otherwise run, modify and propagate
     the contents of its contributor version.

     In the following three paragraphs, a "patent license" is any express
     agreement or commitment, however denominated, not to enforce a patent
     (such as an express permission to practice a patent or covenant not to sue
     for patent infringement).  To "grant" such a patent license to a party
     means to make such an agreement or commitment not to enforce a patent
     against the party.

     If you convey a covered work, knowingly relying on a patent license, and
     the Corresponding Source of the work is not available for anyone to copy,
     free of charge and under the terms of this License, through a publicly
     available network server or other readily accessible means, then you must
     either (1) cause the Corresponding Source to be so available, or (2)
     arrange to deprive yourself of the benefit of the patent license for this
     particular work, or (3) arrange, in a manner consistent with the
     requirements of this License, to extend the patent license to downstream
     recipients.  "Knowingly relying" means you have actual knowledge that, but
     for the patent license, your conveying the covered work in a country, or
     your recipient's use of the covered work in a country, would infringe one
     or more identifiable patents in that country that you have reason to
     believe are valid.

     If, pursuant to or in connection with a single transaction or arrangement,
     you convey, or propagate by procuring conveyance of, a covered work, and
     grant a patent license to some of the parties receiving the covered work
     authorizing them to use, propagate, modify or convey a specific copy of
     the covered work, then the patent license you grant is automatically
     extended to all recipients of the covered work and works based on it.

     A patent license is "discriminatory" if it does not include within the
     scope of its coverage, prohibits the exercise of, or is conditioned on the
     non-exercise of one or more of the rights that are specifically granted
     under this License.  You may not convey a covered work if you are a party
     to an arrangement with a third party that is in the business of
     distributing software, under which you make payment to the third party
     based on the extent of your activity of conveying the work, and under
     which the third party grants, to any of the parties who would receive the
     covered work from you, a discriminatory patent license (a) in connection
     with copies of the covered work conveyed by you (or copies made from those
     copies), or (b) primarily for and in connection with specific products or
     compilations that contain the covered work, unless you entered into that
     arrangement, or that patent license was granted, prior to 28 March 2007.

     Nothing in this License shall be construed as excluding or limiting any
     implied license or other defenses to infringement that may otherwise be
     available to you under applicable patent law.

 12. No Surrender of Others' Freedom.

     If conditions are imposed on you (whether by court order, agreement or
     otherwise) that contradict the conditions of this License, they do not
     excuse you from the conditions of this License.  If you cannot convey a
     covered work so as to satisfy simultaneously your obligations under this
     License and any other pertinent obligations, then as a consequence you may
     not convey it at all.  For example, if you agree to terms that obligate
     you to collect a royalty for further conveying from those to whom you
     convey the Program, the only way you could satisfy both those terms and
     this License would be to refrain entirely from conveying the Program.

 13. Remote Network Interaction; Use with the GNU General Public License.

     Notwithstanding any other provision of this License, if you modify the
     Program, your modified version must prominently offer all users interacting
     with it remotely through a network (if your version supports such
     interaction) an opportunity to receive the Corresponding Source of your
     version by providing access to the Corresponding Source from a network
     server at no charge, through some standard or customary means of
     facilitating copying of software.  This Corresponding Source shall include
     the Corresponding Source for any work covered by version 3 of the GNU
     General Public License that is incorporated pursuant to the following
     paragraph.

     Notwithstanding any other provision of this License, you have permission to
     link or combine any covered work with a work licensed under version 3 of
     the GNU General Public License into a single combined work, and to convey
     the resulting work.  The terms of this License will continue to apply to
     the part which is the covered work, but the work with which it is combined
     will remain governed by version 3 of the GNU General Public License.

 14. Revised Versions of this License.

     The Free Software Foundation may publish revised and/or new versions of
     the GNU Affero General Public License from time to time.  Such new
     versions will be similar in spirit to the present version, but may differ
     in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the Program
     specifies that a certain numbered version of the GNU Affero General Public
     License "or any later version" applies to it, you have the option of
     following the terms and conditions either of that numbered version or of
     any later version published by the Free Software Foundation.  If the
     Program does not specify a version number of the GNU Affero General Public
     License, you may choose any version ever published by the Free Software
     Foundation.

     If the Program specifies that a proxy can decide which future versions of
     the GNU Affero General Public License can be used, that proxy's public
     statement of acceptance of a version permanently authorizes you to choose
     that version for the Program.

     Later license versions may give you additional or different permissions.
     However, no additional obligations are imposed on any author or copyright
     holder as a result of your choosing to follow a later version.

 15. Disclaimer of Warranty.

     THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
     APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
     OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
     THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
     IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
     ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

 16. Limitation of Liability.

     IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
     ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE
     PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
     GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
     USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
     EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
     SUCH DAMAGES.

 17. Interpretation of Sections 15 and 16.

     If the disclaimer of warranty and limitation of liability provided above
     cannot be given local legal effect according to their terms, reviewing
     courts shall apply local law that most closely approximates an absolute
     waiver of all civil liability in connection with the Program, unless a
     warranty or assumption of liability accompanies a copy of the Program in
     return for a fee.


                          END OF TERMS AND CONDITIONS

 How to Apply These Terms to Your New Programs
----------------------------------------------

If you develop a new program, and you want it to be of the greatest possible
use to the public, the best way to achieve this is to make it free software
which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest to attach
them to the start of each source file to most effectively state the exclusion
of warranty; and each file should have at least the "copyright" line and a
pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND A BRIEF IDEA OF WHAT IT DOES.
     Copyright (C) YEAR NAME OF AUTHOR

     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Affero General Public License as published by
     the Free Software Foundation, either version 3 of the License, or (at
     your option) any later version.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Affero General Public License for more details.

     You should have received a copy of the GNU Affero General Public License
     along with this program.  If not, see `http://www.gnu.org/licenses/'.

Also add information on how to contact you by electronic and paper mail.

If your software can interact with users remotely through a network, you should
also make sure that it provides a way for users to get its source.  For
example, if your program is a web application, its interface could display a
"Source" link that leads users to an archive of the code.  There are many ways
you could offer source, and different solutions will be better for different
programs; see section 13 for the specific requirements.

You should also get your employer (if you work as a programmer) or school, if
any, to sign a "copyright disclaimer" for the program, if necessary.  For more
information on this, and how to apply and follow the GNU AGPL, see
`http://www.gnu.org/licenses/'.


File: npi_mtp.info,  Node: GNU Free Documentation License,  Prev: GNU Affero General Public License,  Up: License

 GNU Free Documentation License
===============================



                        GNU FREE DOCUMENTATION LICENSE
                         Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     `http://fsf.org/'

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to assure
     everyone the effective freedom to copy and redistribute it, with or without
     modifying it, either commercially or noncommercially.  Secondarily, this
     License preserves for the author and publisher a way to get credit for
     their work, while not being considered responsible for modifications made
     by others.

     This License is a kind of "copyleft", which means that derivative works of
     the document must themselves be free in the same sense.  It complements
     the GNU General Public License, which is a copyleft license designed for
     free software.

     We have designed this License in order to use it for manuals for free
     software, because free software needs free documentation: a free program
     should come with manuals providing the same freedoms that the software
     does.  But this License is not limited to software manuals; it can be used
     for any textual work, regardless of subject matter or whether it is
     published as a printed book.  We recommend this License principally for
     works whose purpose is instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium, that
     contains a notice placed by the copyright holder saying it can be
     distributed under the terms of this License.  Such a notice grants a
     world-wide, royalty-free license, unlimited in duration, to use that work
     under the conditions stated herein.  The "Document", below, refers to any
     such manual or work.  Any member of the public is a licensee, and is
     addressed as "you".  You accept the license if you copy, modify or
     distribute the work in a way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with modifications
     and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section of the
     Document that deals exclusively with the relationship of the publishers or
     authors of the Document to the Document's overall subject (or to related
     matters) and contains nothing that could fall directly within that overall
     subject.  (Thus, if the Document is in part a textbook of mathematics, a
     Secondary Section may not explain any mathematics.)  The relationship
     could be a matter of historical connection with the subject or with
     related matters, or of legal, commercial, philosophical, ethical or
     political position regarding them.

     The "Invariant Sections" are certain Secondary Sections whose titles are
     designated, as being those of Invariant Sections, in the notice that says
     that the Document is released under this License.  If a section does not
     fit the above definition of Secondary then it is not allowed to be
     designated as Invariant.  The Document may contain zero Invariant
     Sections.  If the Document does not identify any Invariant Sections then
     there are none.

     The "Cover Texts" are certain short passages of text that are listed, as
     Front-Cover Texts or Back-Cover Texts, in the notice that says that the
     Document is released under this License.  A Front-Cover Text may be at
     most 5 words, and a Back-Cover Text may be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the general
     public, that is suitable for revising the document straightforwardly with
     generic text editors or (for images composed of pixels) generic paint
     programs or (for drawings) some widely available drawing editor, and that
     is suitable for input to text formatters or for automatic translation to a
     variety of formats suitable for input to text formatters.  A copy made in
     an otherwise Transparent file format whose markup, or absence of markup,
     has been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if used
     for any substantial amount of text.  A copy that is not "Transparent" is
     called "Opaque".

     Examples of suitable formats for Transparent copies include plain ASCII
     without markup, Texinfo input format, LaTeX input format, SGML or XML
     using a publicly available DTD, and standard-conforming simple HTML,
     PostScript or PDF designed for human modification.  Examples of
     transparent image formats include PNG, XCF and JPG.  Opaque formats
     include proprietary formats that can be read and edited only by
     proprietary word processors, SGML or XML for which the DTD and/or
     processing tools are not generally available, and the machine-generated
     HTML, PostScript or PDF produced by some word processors for output
     purposes only.

     The "Title Page" means, for a printed book, the title page itself, plus
     such following pages as are needed to hold, legibly, the material this
     License requires to appear in the title page.  For works in formats which
     do not have any title page as such, "Title Page" means the text near the
     most prominent appearance of the work's title, preceding the beginning of
     the body of the text.

     The "publisher" means any person or entity that distributes copies of the
     Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document whose title
     either is precisely XYZ or contains XYZ in parentheses following text that
     translates XYZ in another language.  (Here XYZ stands for a specific
     section name mentioned below, such as "Acknowledgements", "Dedications",
     "Endorsements", or "History".)  To "Preserve the Title" of such a section
     when you modify the Document means that it remains a section "Entitled
     XYZ" according to this definition.

     The Document may include Warranty Disclaimers next to the notice which
     states that this License applies to the Document.  These Warranty
     Disclaimers are considered to be included by reference in this License,
     but only as regards disclaiming warranties: any other implication that
     these Warranty Disclaimers may have is void and has no effect on the
     meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the copyright
     notices, and the license notice saying this License applies to the
     Document are reproduced in all copies, and that you add no other
     conditions whatsoever to those of this License.  You may not use technical
     measures to obstruct or control the reading or further copying of the
     copies you make or distribute.  However, you may accept compensation in
     exchange for copies.  If you distribute a large enough number of copies
     you must also follow the conditions in section 3.

     You may also lend copies, under the same conditions stated above, and you
     may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly have
     printed covers) of the Document, numbering more than 100, and the
     Document's license notice requires Cover Texts, you must enclose the
     copies in covers that carry, clearly and legibly, all these Cover Texts:
     Front-Cover Texts on the front cover, and Back-Cover Texts on the back
     cover.  Both covers must also clearly and legibly identify you as the
     publisher of these copies.  The front cover must present the full title
     with all words of the title equally prominent and visible.  You may add
     other material on the covers in addition.  Copying with changes limited to
     the covers, as long as they preserve the title of the Document and satisfy
     these conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit legibly,
     you should put the first ones listed (as many as fit reasonably) on the
     actual cover, and continue the rest onto adjacent pages.

     If you publish or distribute Opaque copies of the Document numbering more
     than 100, you must either include a machine-readable Transparent copy
     along with each Opaque copy, or state in or with each Opaque copy a
     computer-network location from which the general network-using public has
     access to download using public-standard network protocols a complete
     Transparent copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you begin
     distribution of Opaque copies in quantity, to ensure that this Transparent
     copy will remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of the
     Document well before redistributing any large number of copies, to give
     them a chance to provide you with an updated version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document under the
     conditions of sections 2 and 3 above, provided that you release the
     Modified Version under precisely this License, with the Modified Version
     filling the role of the Document, thus licensing distribution and
     modification of the Modified Version to whoever possesses a copy of it.
     In addition, you must do these things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title distinct
          from that of the Document, and from those of previous versions (which
          should, if there were any, be listed in the History section of the
          Document).  You may use the same title as a previous version if the
          original publisher of that version gives permission.

       B. List on the Title Page, as authors, one or more persons or entities
          responsible for authorship of the modifications in the Modified
          Version, together with at least five of the principal authors of the
          Document (all of its principal authors, if it has fewer than five),
          unless they release you from this requirement.

       C. State on the Title page the name of the publisher of the Modified
          Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications adjacent
          to the other copyright notices.

       F. Include, immediately after the copyright notices, a license notice
          giving the public permission to use the Modified Version under the
          terms of this License, in the form shown in the Addendum below.

       G. Preserve in that license notice the full lists of Invariant Sections
          and required Cover Texts given in the Document's license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title, and add
          to it an item stating at least the title, year, new authors, and
          publisher of the Modified Version as given on the Title Page.  If
          there is no section Entitled "History" in the Document, create one
          stating the title, year, authors, and publisher of the Document as
          given on its Title Page, then add an item describing the Modified
          Version as stated in the previous sentence.

       J. Preserve the network location, if any, given in the Document for
          public access to a Transparent copy of the Document, and likewise the
          network locations given in the Document for previous versions it was
          based on.  These may be placed in the "History" section.  You may
          omit a network location for a work that was published at least four
          years before the Document itself, or if the original publisher of the
          version it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section all the
          substance and tone of each of the contributor acknowledgements and/or
          dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered in
          their text and in their titles.  Section numbers or the equivalent
          are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section may not
          be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled "Endorsements" or
          to conflict in title with any Invariant Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or appendices
     that qualify as Secondary Sections and contain no material copied from the
     Document, you may at your option designate some or all of these sections
     as invariant.  To do this, add their titles to the list of Invariant
     Sections in the Modified Version's license notice.  These titles must be
     distinct from any other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various parties--for
     example, statements of peer review or that the text has been approved by
     an organization as the authoritative definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text, and a
     passage of up to 25 words as a Back-Cover Text, to the end of the list of
     Cover Texts in the Modified Version.  Only one passage of Front-Cover Text
     and one of Back-Cover Text may be added by (or through arrangements made
     by) any one entity.  If the Document already includes a cover text for the
     same cover, previously added by you or by arrangement made by the same
     entity you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous publisher
     that added the old one.

     The author(s) and publisher(s) of the Document do not by this License give
     permission to use their names for publicity for or to assert or imply
     endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under this
     License, under the terms defined in section 4 above for modified versions,
     provided that you include in the combination all of the Invariant Sections
     of all of the original documents, unmodified, and list them all as
     Invariant Sections of your combined work in its license notice, and that
     you preserve all their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and multiple
     identical Invariant Sections may be replaced with a single copy.  If there
     are multiple Invariant Sections with the same name but different contents,
     make the title of each such section unique by adding at the end of it, in
     parentheses, the name of the original author or publisher of that section
     if known, or else a unique number.  Make the same adjustment to the
     section titles in the list of Invariant Sections in the license notice of
     the combined work.

     In the combination, you must combine any sections Entitled "History" in
     the various original documents, forming one section Entitled "History";
     likewise combine any sections Entitled "Acknowledgements", and any
     sections Entitled "Dedications".  You must delete all sections Entitled
     "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other documents
     released under this License, and replace the individual copies of this
     License in the various documents with a single copy that is included in
     the collection, provided that you follow the rules of this License for
     verbatim copying of each of the documents in all other respects.

     You may extract a single document from such a collection, and distribute
     it individually under this License, provided you insert a copy of this
     License into the extracted document, and follow this License in all other
     respects regarding verbatim copying of that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other separate and
     independent documents or works, in or on a volume of a storage or
     distribution medium, is called an "aggregate" if the copyright resulting
     from the compilation is not used to limit the legal rights of the
     compilation's users beyond what the individual works permit.  When the
     Document is included in an aggregate, this License does not apply to the
     other works in the aggregate which are not themselves derivative works of
     the Document.

     If the Cover Text requirement of section 3 is applicable to these copies
     of the Document, then if the Document is less than one half of the entire
     aggregate, the Document's Cover Texts may be placed on covers that bracket
     the Document within the aggregate, or the electronic equivalent of covers
     if the Document is in electronic form.  Otherwise they must appear on
     printed covers that bracket the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may distribute
     translations of the Document under the terms of section 4.  Replacing
     Invariant Sections with translations requires special permission from
     their copyright holders, but you may include translations of some or all
     Invariant Sections in addition to the original versions of these Invariant
     Sections.  You may include a translation of this License, and all the
     license notices in the Document, and any Warranty Disclaimers, provided
     that you also include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of this
     License or a notice or disclaimer, the original version will prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to Preserve its
     Title (section 1) will typically require changing the actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document except as
     expressly provided under this License.  Any attempt otherwise to copy,
     modify, sublicense, or distribute it is void, and will automatically
     terminate your rights under this License.

     However, if you cease all violation of this License, then your license
     from a particular copyright holder is reinstated (a) provisionally, unless
     and until the copyright holder explicitly and finally terminates your
     license, and (b) permanently, if the copyright holder fails to notify you
     of the violation by some reasonable means prior to 60 days after the
     cessation.

     Moreover, your license from a particular copyright holder is reinstated
     permanently if the copyright holder notifies you of the violation by some
     reasonable means, this is the first time you have received notice of
     violation of this License (for any work) from that copyright holder, and
     you cure the violation prior to 30 days after your receipt of the notice.

     Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under this
     License.  If your rights have been terminated and not permanently
     reinstated, receipt of a copy of some or all of the same material does not
     give you any rights to use it.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of the GNU
     Free Documentation License from time to time.  Such new versions will be
     similar in spirit to the present version, but may differ in detail to
     address new problems or concerns.  See `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version number.  If
     the Document specifies that a particular numbered version of this License
     "or any later version" applies to it, you have the option of following the
     terms and conditions either of that specified version or of any later
     version that has been published (not as a draft) by the Free Software
     Foundation.  If the Document does not specify a version number of this
     License, you may choose any version ever published (not as a draft) by the
     Free Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that proxy's
     public statement of acceptance of a version permanently authorizes you to
     choose that version for the Document.

 11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any World
     Wide Web server that publishes copyrightable works and also provides
     prominent facilities for anybody to edit those works.  A public wiki that
     anybody can edit is an example of such a server.  A "Massive Multiauthor
     Collaboration" (or "MMC") contained in the site means any set of
     copyrightable works thus published on the MMC site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
     published by Creative Commons Corporation, a not-for-profit corporation
     with a principal place of business in San Francisco, California, as well
     as future copyleft versions of that license published by that same
     organization.

     "Incorporate" means to publish or republish a Document, in whole or in
     part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this License,
     and if all works that were first published under this License somewhere
     other than this MMC, and subsequently incorporated in whole or in part
     into the MMC, (1) had no cover texts or invariant sections, and (2) were
     thus incorporated prior to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the site
     under CC-BY-SA on the same site at any time before August 1, 2009,
     provided the MMC is eligible for relicensing.


 ADDENDUM: How to use this License for your documents
=====================================================

To use this License in a document you have written, include a copy of the
License in the document and put the following copyright and license notices
just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace
the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other combination
of the three, merge those two alternatives to suit the situation.

If your document contains nontrivial examples of program code, we recommend
releasing these examples in parallel under your choice of free software
license, such as the GNU General Public License, to permit their use in free
software.


File: npi_mtp.info,  Node: Glossary,  Next: Acronyms,  Prev: License,  Up: Top

 Glossary
*********

_Signalling Data Link Service Data Unit_
     A grouping of SDL user data whose boundaries are preserved from one end of
     the signalling data link connection to the other.

_Data transfer_
     The phase in connection and connectionless modes that supports the
     transfer of data between to signalling data link users.

_SDL provider_
     The signalling data link layer protocol that provides the services of the
     signalling data link interface.

_SDL user_
     The user-level application or user-level or kernel-level protocol that
     accesses the services of the signalling data link layer.

_Local management_
     The phase in connection and connectionless modes in which a SDL user
     initializes a stream and attaches a PPA address to the stream.  Primitives
     in this phase generate local operations only.

_PPA_
     The point at which a system attaches itself to a physical communications
     medium.

_PPA identifier_
     An identifier of a particular physical medium over which communication
     transpires.


File: npi_mtp.info,  Node: Acronyms,  Next: References,  Prev: Glossary,  Up: Top

 Acronyms
*********

SDLI      Signalling Data Link Interface
SDL       Signalling Data Link
SDL SDU   Signalling Data Link Service Data Unit
ITU-T     International Telecommunications Union
          - Telecom Sector
PPA       Physical Point of Attachment


File: npi_mtp.info,  Node: References,  Next: Index,  Prev: Acronyms,  Up: Top

 References
***********

  1. ITU-T Recommendation X.210, (Geneva, 1993), "Information Technology --
     Open Systems Interconnection -- Basic reference model: Conventions for the
     definition of OSI services," ISO/IEC 10731:1994.

  2. ITU-T Recommendation X.217, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Service definition for the Association
     Control Service Element," ISO/IEC 8649:1996.

  3. ITU-T Recommendation X.227, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connection-oriented protocol for the
     Association Control Service Element: Protocol Specification," ISO/IEC
     8650-1.

  4. ITU-T Recommendation X.237, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless protocol for the
     Association Control Service Element: Protocol Specification," ISO/IEC
     10035-1 : 1995.

  5. ITU-T Recommendation X.216, (Geneva, 1994), "Information Technology --
     Open Systems Interconnection -- Presentation service definition," ISO/IEC
     8822:1994.

  6. ITU-T Recommendation X.226, (Geneva, 1994), "Information Technology --
     Open Systems Interconnection -- Connection-oriented presentation protocol:
     Protocol specification," ISO/IEC 8823-1:1994.

  7. ITU-T Recommendation X.236, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless presentation protocol:
     Protocol specification," ISO/IEC 9576-1:1995.

  8. ITU-T Recommendation X.215, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Session service definition," ISO/IEC
     8326:1996.

  9. ITU-T Recommendation X.225, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connection-oriented session protocol:
     Protocol specification," ISO/IEC 8327-1:1996.

 10. ITU-T Recommendation X.235, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Connectionless session protocol: Protocol
     specification," ISO/IEC 9548-1:1995.

 11. ITU-T Recommendation X.214, (Geneva, 1995), "Information Technology --
     Open Systems Interconnection -- Transport service definition," ISO/IEC
     8072:1996.

 12. ITU-T Recommendation X.224

 13. ITU-T Recommendation Q.700

 14. ITU-T Recommendation Q.701

 15. ITU-T Recommendation Q.702

 16. ITU-T Recommendation Q.703

 17. ITU-T Recommendation Q.704

 18. Geoffrey Gerrien, "CDI - Application Program Interface Guide," Gcom, Inc.,
     March 1999.

 19. ITU-T Recommendation Q.771, (Geneva, 1993), "Signalling System No. 7 --
     Functional description of transaction capabilities," (White Book).


File: npi_mtp.info,  Node: Index,  Prev: References,  Up: Top

 Index
******

 [index ]
* Menu:

* license, AGPL:                         GNU Affero General Public License.
                                                                        (line 6)
* license, FDL:                          GNU Free Documentation License.
                                                                        (line 6)
* license, GNU Affero General Public License: GNU Affero General Public License.
                                                                        (line 6)
* license, GNU Free Documentation License: GNU Free Documentation License.
                                                                        (line 6)



Tag Table:
Node: Top1828
Node: Preface2227
Node: Introduction3312
Node: Protocol Address4163
Node: Connection and Connectionless Modes4510
Node: Sending Data of Zero Octets5905
Node: Quality of Service Parameters6876
Node: NPI-MTP7618
Ref: NPI-MTP-Footnote-120062
Ref: NPI-MTP-Footnote-220206
Ref: NPI-MTP-Footnote-320398
Node: NPI-MTP Rules for Conformance20486
Node: CONS & CLNS: Local Management20843
Node: N_INFO_ACK21045
Ref: N_INFO_ACK-Footnote-130759
Ref: N_INFO_ACK-Footnote-231083
Node: N_OPTMGMT_REQ31154
Node: N_BIND_REQ32929
Ref: N_BIND_REQ-Footnote-136767
Ref: N_BIND_REQ-Footnote-236867
Node: N_BIND_ACK36971
Node: CONS: NC Establishment Phase38413
Node: N_CONN_REQ38905
Ref: N_CONN_REQ-Footnote-141919
Ref: N_CONN_REQ-Footnote-242013
Node: N_CONN_IND42111
Node: N_CONN_RES42366
Node: N_CONN_CON42664
Node: CONS: Data Transfer Phase44585
Node: N_DATA_REQ44810
Node: N_DATA_IND45521
Node: N_EXDATA_REQ47137
Node: N_EXDATA_IND47588
Node: N_DATACK_REQ47917
Node: N_DATACK_IND48367
Node: CONS: NC Termination Phase48672
Node: N_DISCON_REQ48900
Node: N_DISCON_IND50371
Node: N_RESET_REQ53283
Node: N_RESET_RES53794
Node: N_RESET_IND54130
Node: N_RESET_CON55198
Node: CLNS: Data Transfer Phase55520
Node: N_UNITDATA_REQ55703
Node: N_UNITDATA_IND57540
Node: N_UDERROR_IND59923
Node: NPI-MTP Mapping of Primitives64730
Ref: Table A-167738
Node: NPI-MTP Header File Listing67807
Node: License77238
Node: GNU Affero General Public License77441
Node: GNU Free Documentation License114210
Node: Glossary139196
Node: Acronyms140342
Node: References140685
Node: Index143453

End Tag Table
