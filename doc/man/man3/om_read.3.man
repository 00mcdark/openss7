'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) doc/man/man3/om_read.3.man
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH OM_READ 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B om_read
\-  read a segment of a string in a private object
.\"
.\"
.SH INTERFACE
.PP
XOM.
.[
xom c607
.]
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xom.h>
.PP
.BR OM_return_code
.PD 0
.HP
om_read(
.RS
.HP
.BI "const OM_private_object " subject ,
.HP
.BI "const OM_type " type ,
.HP
.BI "const OM_value_position " value_position ,
.HP
.BI "const OM_boolean " local_string ,
.HP
.BI "const OM_string_length *" string_offset ,
.HP
.BI "OM_string *" elements
.RE
.HP
.RB );
.PD
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.IR subject "\0\fBSubject\fP(Private Object)
The subject, which remains accessible.
.TP
.IR type "\0\fBType\fP(Type)
Identifies the type of the attribute, one of whose values is to be read.
.TP
.IR value_position "\0\fBValue Position\fP(Value Position)
The position within the above attribute of the value to be read.
.TP
.IR local_string "\0\fBLocal String\fP(Boolean)
If true, indicates that the value is to be translated into the
implementation-defined local character set representation (which may entail
the loss of some information).
.TP
.IR string_offset "\0\fBString Offset\fP(String Offset)
The offset, in octets, of the start of the string segment to be read.
.sp
If it exceeds the total length of the string, the argument is taken to be equal
to the string length.
.sp
In the C interface, the Starting Position argument and the Next Position result
of the generic interface are realized as the String Offset argument.  That is,
this argument is both an input and result argument.
.sp
When returned, the offset, in octets, of the start of the next string segment
to be read, or zero if the value's final segment was read.  This result is
present if, and only if, the Return Code result is success
.RB [ OM_SUCCESS ].
.sp
In the C interface, the Starting Position argument and the Next Position result
of the generic interface are realized as the String Offset argument.  The value
returned as the Next Position result may be used as the value for the Starting
Position argument in the next call of the funciton.  This allows for sequential
reading of the value of a long string.
.TP
.IR elements "\0\fBElements\fP()
The space the client provides for the segment to be read.  The string's
contents initially are unspecified.  The string's length initially is the
number of octets required to contain the segment that the function is to read.
.sp
The service modifies this argument.  The string's elements are made the
elements actually read.  The string's length is made the number of octets
required to hold the segment actually read.  This may be smaller than the
initial length if the segment is the last in a long string.
.sp
If Local String is true, the segments that will be returned will be those of
the translated string.  Depending on the characteristics of the
implementation-defined local character set, these may not correspond directly
to the segments that would be obtained if Local-String were false.
.\"
.\"
.SH DESCRIPTION
.PP
The
.BR om_read ()
function reads a segment of an attribute value in a private object, the
.IR subject .
The segment that is returned is a segment of the string value that would have
been returned if the complete value has been read in a single call.
.PP
An offset of zero indicates the start of the string.  An offset that has been
returned by a previous call to
.BR om_read ()
causes the segment following the one returned by that previous call to be
returned.  The effects of using other offsets may vary between implementations.
.TP
.B Note:
This function enables the client to read an arbitrarily long value without
requiring that the service place a copy of the entire value in memory.
.\"
.\"
.SH "RETURN VALUE"
.PP
Upon successful completion, the zero value of
.RB [ OM_SUCCESS ]
is returned. Otherwise, a non-zero diagnostic error value is returned.
.\"
.\"
.SH ERRORS
.PP
When
.BR om_read ()
fails, it returns a non-zero error code, as follows:
.TP
.RB [ OM_FUNCTION_INTERRUPTED ]
The function was aborted by an external force (for example, a keystroke,
designated for this purpose, at a user interface).
.TP
.RB [ OM_MEMORY_INSUFFICIENT ]
The service cannot allocate the main memory it needs to complete the function.
.TP
.RB [ OM_NETWORK_ERROR ]
The service could not successfully employ the network upon which its
implementation depends.
.TP
.RB [ OM_NO_SUCH_OBJECT ]
A purported object is nonexistent or the purported handle is invalid.
.TP
.RB [ OM_NO_SUCH_TYPE ]
A purported type identifier is undefined.
.TP
.RB [ OM_NOT_PRESENT ]
An attribute value is absent, not present.
.TP
.RB [ OM_NOT_PRIVATE ]
An object is public, not private.
.TP
.RB [ OM_PERMANENT_ERROR ]
The service encountered a permanent difficulty other than those denoted by
other return codes.
.TP
.RB [ OM_POINTER_INVALID ]
In the C inteface, an invalid pointer was supplied as a function argument or as
the receptacle for a function result.
.TP
.RB [ OM_SYSTEM_ERROR ]
The service could not successfully employ the operating system upon which its
implementation depends.
.TP
.RB [ OM_TEMPORARY_ERROR ]
The service encountered a temporary difficulty other than those denoted by
other return codes.
.TP
.RB [ OM_WRONG_VALUE_SYNTAX ]
An attribute has, or would have, a value whose syntax is not permitted.
.PP
Other arguments passed to or returned by the function are unaffected.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR XOM (3).
.\"
.\"
.SH "BUGS"
.PP
.BR om_read ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR om_read ()
is compatible with
.IR "Solstice OSI 8.0 "  to " 9.0
and implementations based on
XOM,
.[
xom c607
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
Note that many add-on OSI packages for popular UNIX SVR 4.2 based releases
provided the XOM interface and the associated set of X/Open, IEEE and ISO
standard interfaces.
.IP \(em
The function is source compatible only.  Binary compatibility was not
attempted.
.PP
See also,
.BR XOM (3),
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
XOM.
.[
xom c607
.]
.\"
.\"
.SH HISTORY
.PP
.BR om_read ()
first appeared in XOM.
.[
xom c607
.]
.\"
.\"
.SH VERSIONS
.PP
This manual page was written for the 
.B @PACKAGE_TITLE@
XOM Library.
.\"
.\"
.[
$LIST$
.]
.T4
