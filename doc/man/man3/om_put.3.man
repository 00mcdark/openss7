'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id$
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date$ by $Author$
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log$
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH OM_PUT 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B om_put
\-  place or replace in one private object copies of the attribute values of another public or private object.
.\"
.\"
.SH INTERFACE
.PP
XOM.
.[
xom osi
.]
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xom.h>
.PP
.B OM_return_code
.PD 0
.HP
om_put(
.RS
.HP
.BI "OM_private_object " destination ,
.HP
.BI "const OM_modification " modification ,
.HP
.BI "const OM_object " source ,
.HP
.BI "const OM_type_list " included_types ,
.HP
.BI "const OM_value_position " initial_value ,
.HP
.BI "const OM_value_position " limiting_value
.RE
.HP
.RB );
.PD
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.IR destination "\0\fBDestination\fP(Private Object)
The destination, which remains accessible.  The destination's class is
unaffected.
.TP
.IR modification "\0\fBModification\fP(Modification)
The nature of the requested modification.  The modification determines how the
.BR om_put ()
function uses the attribute values in the source to modify the object.  In all
cases, for each attribute present in the source, copies of its values are
placed in the object's destination attribute of the same type.  The data value
is chosen from amoung the following:
.RS
.IP \(bu \w'\(bu\(em'u
.B insert-at-beginning
.br
The source values are inserted before any existing destination values.  (The
latter are retained.)
.IP \(bu
.B insert-at-certain-point
.br
The source values are inserted before the value at a specified position in the
destination attribute.  (The latter are retained.)
.IP \(bu
.B insert-at-end
.br
The source values are inserted after any existing destination values.  (The
latter are retained.)
.IP \(bu
.B replace-all
.br
The source values are placed in the destination attibute.  The existing
destination values, if any, are discarded.  (The latter are discarded.)
.IP \(bu
.B replace-certain-values
.br
The source values are substituted for the values at specified positions in the
destination attribute.  (The latter are discarded.)
.PP
Discarded attributes are removed by the implementation; the application does
not delete them.
.RE
.TP
.IR source "\0\fBSource\fP(Object)
The source, which remains accessible.  The source's class is ignored.  However,
the attributes being copied from the source must be compatible with the
destination's class definition.
.TP
.IR included_types "\0\fBIncluded Types\fP(Type List)
Identifies the types of the attributes to be included in the destination
(provided that they appear in the source); if the list is empty, or if (in the
C interface) the argument is a
.B NULL
pointer, then all attributes are to be included.
.TP
.IR initial_value "\0\fBInitial Value\fP(Value Position)
Relevant if, and only if, the Modification argument is
.BR insert-at-certain-point " or
.BR replace-certain-values ,
in which case it identifies the position within each destination attribute at
which source values are to be inserted, or of the first value to be replaced,
respectively.
.sp
If the Modification argument is
.B insert-at-certain-point
and if the Initial Value argument is
.B all-values
or exceeds the number of values present in a destination attribute, the
argument is taken to be equal to the number of values present.
.TP
.IR limiting_value "\0\fBLimiting Value\fP(Value Position)
Relevant if, and only if, the Modification argument is
.BR replace-certain-values ,
in which case it identifies the position within each destination attribute, one
beyond that of the last value to be replaced.  If this argument is present, it
must be greater than the Initial Value argument.
.sp
If it is
.B all-values
or exceeds the number of values present in a destination attribute, the
argument is taken to be equal to that number.
.\"
.\"
.SH DESCRIPTION
.PP
The
.BR om_put ()
function places or replaces in one private object, the
.IR destination ,
copies of the attribute values of another, public or private object, the
.IR source .
Only those attributes that pertain to the destination object are copied,
attributes that are not relevant are ignored.  The client may specify that the
source's values are to replace all or particular values in the destination, or
to be inserted at a particular position within each attribute.  All string
values being copied that are in the local representation are first converted
into the non-local representation for that syntax (which may entail the loss of
some information).
.\"
.\"
.SH "RETURN VALUE"
.PP
Upon successful completion, the zero value of
.RB [ OM_SUCCESS ]
is returned. Otherwise, a non-zero diagnostic error value is returned.
.\"
.\"
.SH ERRORS
.PP
When
.BR om_put ()
fails, it returns a non-zero error code, as follows:
.TP
.RB [ OM_FUNCTION_DECLINED ]
The function does not apply to the object to which it is addressed.
.TP
.RB [ OM_FUNCTION_INTERRUPTED ]
The function was aborted by an external force (for example, a keystroke,
designated for this purpose, at a user interface).
.TP
.RB [ OM_MEMORY_INSUFFICIENT ]
The service cannot allocate the main memory it needs to complete the function.
.TP
.RB [ OM_NETWORK_ERROR ]
The service could not successfully employ the network upon which its
implementation depends.
.TP
.RB [ OM_NO_SUCH_CLASS ]
A purported class identifier is undefined.
.TP
.RB [ OM_NO_SUCH_MODIFICATION ]
A purported modification identifier is undefined.
.TP
.RB [ OM_NO_SUCH_OBJECT ]
A purported object is nonexistent or the purported handle is invalid.
.TP
.RB [ OM_NO_SUCH_SYNTAX ]
A purported syntax identifier is undefined.
.TP
.RB [ OM_NO_SUCH_TYPE ]
A purported type identifier is undefined.
.TP
.RB [ OM_NOT_CONCRETE ]
A class is abstract, not concrete.
.TP
.RB [ OM_NOT_PRESENT ]
An attribute value is absent, not present.
.TP
.RB [ OM_NOT_PRIVATE ]
An object is public, not private.
.TP
.RB [ OM_PERMANENT_ERROR ]
The service encountered a permanent difficulty other than those denoted by
other return codes.
.TP
.RB [ OM_POINTER_INVALID ]
In the C inteface, an invalid pointer was supplied as a function argument or as
the receptacle for a function result.
.TP
.RB [ OM_SYSTEM_ERROR ]
The service could not successfully employ the operating system upon which its
implementation depends.
.TP
.RB [ OM_TEMPORARY_ERROR ]
The service encountered a temporary difficulty other than those denoted by
other return codes.
.TP
.RB [ OM_TOO_MANY_VALUES ]
AN implementation limit prevents the addiiton to an object of another attribute
value.  This limit is undefined.
.TP
.RB [ OM_VALUES_NOT_ADJACENT ]
The descriptors for the values of a particular attribute are not adjacent.
.TP
.RB [ OM_WRONG_VALUE_LENGTH ]
An attribute has, or would have, a value that violates the value length
constraints in force.
.TP
.RB [ OM_WRONG_VALUE_MAKEUP ]
An attribute has, or would have, a value that violates a constraint of the
value's syntax.
.TP
.RB [ OM_WRONG_VALUE_NUMBER ]
An attribute has, or would have, a value that violates the value number
constraints in force.
.TP
.RB [ OM_WRONG_VALUE_POSITION ]
The usage of value position(s) identified in the argument(s) of a function is
invalid.
.TP
.RB [ OM_WRONG_VALUE_SYNTAX ]
An attribute has, or would have, a value whose syntax is not permitted.
.TP
.RB [ OM_WRONG_VALUE_TYPE ]
An object has, or would have, an attribute whose type is not permitted.
.PP
Other arguments passed to or returned by the function are unaffected.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR XOM (3).
.\"
.\"
.SH "BUGS"
.PP
.BR om_put ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR om_put ()
is compatible with
.IR "Solstice OSI 8.0 "  to " 9.0
and implementations based on
XOM,
.[
xom osi
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
Note that many add-on OSI packages for popular UNIX SVR 4.2 based releases
provided the XOM interface and the associated set of X/Open, IEEE and ISO
standard interfaces.
.IP \(em
The function is source compatible only.  Binary compatibility was not
attempted.
.PP
See also,
.BR XOM (3),
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
XOM.
.[
xom osi
.]
.\"
.\"
.SH HISTORY
.PP
.BR om_put ()
first appeared in XOM.
.[
xom osi
.]
.\"
.\"
.SH VERSIONS
.PP
This manual page was written for the 
.B @PACKAGE_TITLE@
XOM Library.
.\"
.\"
.[
$LIST$
.]
.T4
