'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id$
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date$ by $Author$
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log$
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH DLPIAPI 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "OpenSS7 DLPI API Library"
.\" =========================================================================
.SH NAME
.B DLPIAPI, dlpiapi, libdlpiapi
\- DLPI API Library
.\"
.\"
.SH INTERFACE
.PP
DLPI
.[
dlpi revision 2.0.0
.]
Application Program Interface.
.[
dlpiapi
.]
.br
.IR "GCOM, Inc." ,
specific and proprietary.
.\"
.\"
.SH LIBRARY
.PP
.BR libdlpiapi (3),
the
.IR "DLPI API Library" .
.\"
.\"
.SH SYNOPSIS
.ad l
.nh
.PP
.B #include <sys/types.h>
.br
.B #include <sys/ioctl.h>
.br
.B #include <sys/stropts.h>
.br
.B #define _SUN_SOURCE
.br
.B #define _HPUX_SOURCE
.br
.B #define _AIX_SOURCE
.br
.B #include <sys/dlpi.h>
.br
.B #include <dlpiapi.h>
.HP
\fBint dlpi_attach_ppa\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIppa\fP);
.PD 0
.HP
\fBint dlpi_bind_dlsap\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIdlsap\fP, \fBint\fP\ \fIconind_nr\fP);
.HP
\fBint dlpi_clear_zombies\fP(\fBvoid\fP);
.HP
\fBint dlpi_close\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_complete_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIrequest\fP, \fBchar *\fP\fIcaller\fP, \fBint\fP\ \fIdiscard_un_iframes\fP);
.HP
\fBint dlpi_configure_dlsaps\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIlocal_dlsap\fP, \fBulong\fP\ \fIremote_dlsap\fP);
.HP
\fBint dlpi_connect\fP(\fBulong\fP\ \fIppa\fP, \fBulong\fP\ \fIbind_dlsap\fP, \fBulong\fP\ \fIlocal_dlsap\fP, \fBulong\fP\ \fIremote_dlsap\fP);
.HP
\fBint dlpi_connect_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpeer_sap\fP);
.HP
\fBint dlpi_connect_wait\fP(\fBint\fP\ \fIdata\fP);
.HP
\fBvoid dlpi_decode_ctl\fP(\fBchar *\fP\fIp\fP);
.HP
\fBchar *dlpi_decode_disconnect_reason\fP(\fBlong\fP\ \fIreason\fP);
.HP
\fBint dlpi_discon_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIreason\fP);
.HP
\fBint dlpi_disconnect_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIreason\fP);
.HP
\fBint dlpi_get_a_msg\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIbuf\fP, \fBint\fP\ \fIcnt\fP);
.HP
\fBint dlpi_get_info\fP(\fBchar *\fP\fIptr\fP);
.HP
\fBint dlpi_get_style\fP(\fBvoid\fP);
.HP
\fBint dlpi_init\fP(\fBuint\fP\ \fIlog_optns\fP, \fBchar *\fP\fIlog_name\fP);
.HP
\fBint dlpi_init_FILE\fP(\fBuint\fP\ \fIlog_optns\fP, \fBFILE *\fP\fIlog_file\fP);
.HP
\fBint dlpi_listen\fP(\fBulong\fP\ \fIppa\fP, \fBulong\fP\ \fIbind_dlsap\fP, \fBulong\fP\ \fIlocal_dlsap\fP, \fBulong\fP\ \fIremote_dlsap\fP, \fBuint\fP\ \fIfork_options\fP);
.HP
\fBint dlpi_open\fP(\fBchar *\fP\fIhostname\fP);
.HP
\fBint dlpi_open_data\fP(\fBvoid\fP);
.HP
\fBint dlpi_open_log\fP(\fBvoid\fP);
.HP
\fBint dlpi_perror\fP(\fBchar *\fP\fIprefix\fP);
.HP
\fBint dlpi_print_msg\fP(\fBchar *\fP\fImsg\fP, \fBuint\fP\ \fIlength\fP, \fBint\fP\ \fIindent\fP);
.HP
\fBint dlpi_printf\fP(\fBchar *\fP\fIfmt\fP, \fB...\fP);
.HP
\fBint dlpi_put_both\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIhdr_ptr\fP, \fBint\fP\ \fIhdr_lgth\fP, \fBchar *\fP\fIdata_ptr\fP, \fBint\fP\ \fIdata_lgth\fP);
.HP
\fBint dlpi_put_proto\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIlgth\fP);
.HP
\fBint dlpi_rcv\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIdata_ptr\fP, \fBint\fP\ \fIbfr_len\fP, \fBint\fP\ \fIflags\fP, \fBlong *\fP\fIout_code\fP);
.HP
\fBint dlpi_rcv_msg\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIdata_ptr\fP, \fBint\fP\ \fIdata_cnt\fP, \fBint\fP\ \fIflags\fP);
.HP
\fBint dlpi_read_data\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIbuf\fP, \fBint\fP\ \fIcnt\fP);
.HP
\fBint dlpi_reset_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_reset_res\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_attach_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIppa\fP);
.HP
\fBint dlpi_send_bind_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIdlsap\fP, \fBint\fP\ \fIconind_nr\fP, \fBint\fP\ \fIservice_mode\fP, \fBint\fP\ \fIconn_mgnt\fP, \fBint\fP\ \fIauto_flags\fP);
.HP
\fBint dlpi_send_connect_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpeer_sap\fP);
.HP
\fBint dlpi_send_connect_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIcorrelation\fP, \fBulong\fP\ \fIdlpi_token\fP);
.HP
\fBint dlpi_send_detach_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_disconnect_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIreason\fP);
.HP
\fBint dlpi_send_info_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_reset_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_reset_res\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_stats_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_test_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP, \fBunsigned char *\fP\fIaddr_ptr\fP, \fBint\fP\ \fIaddr_len\fP);
.HP
\fBint dlpi_send_test_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP, \fBunsigned char *\fP\fIaddr_ptr\fP, \fBint\fP\ \fIaddr_len\fP);
.HP
\fBint dlpi_send_uic\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIdata_len\fP, \fBunsigned char *\fP\fIaddr_ptr\fP, \fBint\fP\ \fIaddr_len\fP);
.HP
\fBint dlpi_send_unbind_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_send_xid_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP, \fBunsigned char *\fP\fIaddr_ptr\fP, \fBint\fP\ \fIaddr_len\fP);
.HP
\fBint dlpi_send_xid_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP, \fBunsigned char *\fP\fIaddr_ptr\fP, \fBint\fP\ \fIaddr_len\fP);
.HP
\fBint dlpi_set_log_size\fP(\fBlong\fP\ \fIlog_size\fP);
.HP
\fBint dlpi_set_signal_handling\fP(\fBint\fP\ \fIfd\fP, \fBdlpi_sig_func_t\fP\ \fIfunc\fP, \fBint\fP\ \fIsig_num\fP, \fBint\fP\ \fIprimitive_mask\fP);
.HP
\fBint dlpi_set_unnum_frame_handler\fP(\fBint\fP\ \fIfd\fP, \fBunnum_frame_t\fP\ \fIhandler\fP);
.HP
\fBint dlpi_test_req\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP);
.HP
\fBint dlpi_test_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP);
.HP
\fBint dlpi_uic_req\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP);
.HP
\fBint dlpi_unbind_dlsap\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint dlpi_test_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP);
.HP
\fBint dlpi_xid_res\fP(\fBint\fP\ \fIfd\fP, \fBulong\fP\ \fIpfb\fP, \fBchar *\fP\fIdatap\fP, \fBint\fP\ \fIlength\fP);
.HP
\fBint dlpi_write_data\fP(\fBint\fP\ \fIfd\fP, \fBchar *\fP\fIbuf\fP, \fBint\fP\ \fIcnt\fP);
.HP
\fBint dlpi_xray_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIupa\fP, \fBint\fP\ \fIon_off\fP, \fBint\fP\ \fIhi_wat\fP, \fBint\fP\ \fIlo_wat\fP);
.PD
.ad b
.hy 6
.\"
.\"
.SH OVERVIEW
.PP
.B libdlpiapi
is an
.B OpenSS7
implementation of the
.I GCOM
DLPI API Library
.[
dlpiapi
.]
for
.BR "Linux Fast-STREAMS" .
.\"
.\"
.SH DESCRIPTION
.PP
The
.I DLPI API Library
is a library of DLPI helper and utility functions designed for use with the Data
Link Provider Interface (DLPI),
.[
dlpi revision 2.0.0
.]
.BR dlpi (7).
The original library was designed by
.IR "GCOM, Inc." ,
.RB < http://www.gcom.com/ >,
and first documented
.[
dlpiapi
.]
in 1995.
.PP
The DLPI API Library documented here is the
.B OpenSS7
implementation of a library intended on being a work-alike with the
.I GCOM
library in accordance with the
.I GCOM
documentation.
.[
dlpiapi
.]
.PP
The
.IR GCOM -compatible
DLPI API Library should not be confused with the
.IR Solaris \(rg-compatible
DLPI Library,
.BR libdlpi (3).
The two libraries are incompatible and have namespace conflicts (primarily on
.BR dlpi_open (3)
and
.BR dlpi_close (3)).
.\"
.\"
.SH FUNCTIONS
.PP
.B libdlpiapi
implements the following DLPI API library functions:
.TS
tab(:);
lb1c1ls.
dlpi_attach_ppa\fR(3):-:T{
attach a PPA.
T}
dlpi_bind_dlsap\fR(3):-:T{
bind a DLSAP.
T}
dlpi_clear_zombies\fR(3):-:T{
clear zombies.
T}
dlpi_close\fR(3):-:T{
close.
T}
dlpi_complete_req\fR(3):-:T{
complete a prior request.
T}
dlpi_configure_dlsaps\fR(3):-:T{
configure DLSAPs.
T}
dlpi_connect\fR(3):-:T{
create and connect.
T}
dlpi_connect_req\fR(3):-:T{
connect.
T}
dlpi_connect_wait\fR(3):-:T{
listen.
T}
dlpi_decode_ctl\fR(3):-:T{
decode a control message.
T}
dlpi_decode_disconnect_reason\fR(3):-:T{
decode disconnect reason.
T}
dlpi_detach_ppa\fR(3):-:T{
detach a PPA.
T}
dlpi_discon_req\fR(3):-:T{
disconnect.
T}
dlpi_get_a_msg\fR(3):-:T{
get a message.
T}
dlpi_get_both\fR(3):-:T{
get control and data.
T}
dlpi_get_info_strm\fR(3):-:T{
get information.
T}
dlpi_get_style_strm\fR(3):-:T{
get provider style.
T}
dlpi_init\fR(3):-:T{
initialize the library.
T}
dlpi_listen\fR(3):-:T{
listen.
T}
dlpi_open\fR(3):-:T{
open.
T}
dlpi_open_log\fR(3):-:T{
open a log file.
T}
dlpi_perror\fR(3):-:T{
print an error string.
T}
dlpi_print_msg\fR(3):-:T{
print a message.
T}
dlpi_printf\fR(3):-:T{
print a string.
T}
dlpi_put_both\fR(3):-:T{
put control and data.
T}
dlpi_put_proto\fR(3):-:T{
put control message.
T}
dlpi_rcv\fR(3):-:T{
receive data.
T}
dlpi_rcv_msg\fR(3):-:T{
receive data message.
T}
dlpi_read_data\fR(3):-:T{
read data.
T}
dlpi_reset_req\fR(3):-:T{
reset.
T}
dlpi_reset_res\fR(3):-:T{
accept reset.
T}
dlpi_send_attach_req\fR(3):-:T{
send \fB\)DL_ATTACH_REQ\fP(7).
T}
dlpi_send_bind_req\fR(3):-:T{
send \fB\)DL_BIND_REQ\fP(7).
T}
dlpi_send_connect_req\fR(3):-:T{
send \fB\)DL_CONNECT_REQ\fP(7).
T}
dlpi_send_connect_res\fR(3):-:T{
send \fB\)DL_CONNECT_RES\fP(7).
T}
dlpi_send_detach_req\fR(3):-:T{
send \fB\)DL_DETACH_REQ\fP(7).
T}
dlpi_send_disconnect_req\fR(3):-:T{
send \fB\)DL_DISCONNECT_REQ\fP(7).
T}
dlpi_send_info_req\fR(3):-:T{
send \fB\)DL_INFO_REQ\fP(7).
T}
dlpi_send_reset_req\fR(3):-:T{
send \fB\)DL_RESET_REQ\fP(7).
T}
dlpi_send_reset_res\fR(3):-:T{
send \fB\)DL_RESET_RES\fP(7).
T}
dlpi_send_stats_req\fR(3):-:T{
send \fB\)DL_GET_STATISTICS_REQ\fP(7).
T}
dlpi_send_test_req\fR(3):-:T{
send \fB\)DL_TEST_REQ\fP(7).
T}
dlpi_send_test_res\fR(3):-:T{
send \fB\)DL_TEST_RES\fP(7).
T}
dlpi_send_uic\fR(3):-:T{
send \fB\)DL_DATA_REQ\fP(7).
T}
dlpi_send_unbind_req\fR(3):-:T{
send \fB\)DL_UNBIND_REQ\fP(7).
T}
dlpi_send_xid_req\fR(3):-:T{
send \fB\)DL_XID_REQ\fP(7).
T}
dlpi_send_xid_res\fR(3):-:T{
send \fB\)DL_XID_RES\fP(7).
T}
dlpi_set_log_size\fR(3):-:T{
set the log file size.
T}
dlpi_set_signal_handling\fR(3):-:T{
set signal handling.
T}
dlpi_set_unnum_frame_handler\fR(3):-:T{
set U-frame handler.
T}
dlpi_set_test_req\fR(3):-:T{
set TEST request.
T}
dlpi_set_test_res\fR(3):-:T{
set TEST response.
T}
dlpi_uic_req\fR(3):-:T{
issue U-frame.
T}
dlpi_unbind_dlsap\fR(3):-:T{
unbind from a DLSAP.
T}
dlpi_xid_req\fR(3):-:T{
request XID.
T}
dlpi_xid_res\fR(3):-:T{
response to XID.
T}
dlpi_write_data\fR(3):-:T{
write data.
T}
dlpi_xray_req\fR(3):-:T{
create an xray Stream.
T}
.TE
.\"
.\"
.SH USAGE
.PP
To use the DLPI API Library, include
.RB < sys/dlpi.h >
and
.RB < dlpiapi.h >
header files in C language programs.
Add the
.RB ` -ldlpiapi '
flag to the linker command when linking C language programs that use this
library, or add
.B @libdir@/libdlpiapi.a
to the objects linked.
.\"
.\"
.SH MT CONTEXT
.PP
The
.B @PACKAGE_TITLE@
implementation of the DLPI API Library is fully thread-safe.
The variables documented as global are instead contained in thread-specific
data.
When static buffers are returned, these buffers are instead thread-specific.
.\"
.\"
.SH RETURN
.PP
Most function call return zero (0) on success and minus one (-1) on error.
.\"
.\"
.SH ERRORS
.PP
When most functions fail, they return minus one (-1) and set the global
.IR errno (3)
variable to an appropriate error code.
.\"
.\"
.SH NOTICES
.PP
The
.B DLPI API Library
is
.IR GCOM -specific.
.[
dlpiapi
.]
It may be necessary to define the `C' preprocessor symbol,
.BR _GCOM_SOURCE ,
before including the
.RB < sys/dlpi.h >
header file to expose the symbolic constants, data structures and declarations
necessary for the use of these functions.  It may be necessary to include the
.RB < dlpiapi.h >
header file to expose the symbolic constants, data structures and declarations
necessary for the user of these functions.
.\"
.\"
.SH FILES
.PP
.TP
.B @includedir@/@PACKAGE@/sys/dlpi.h
the standard DLPI
.[
dlpi revision 2.0.0
.]
header file.
.TP
.B @includedir@/@PACKAGE@/dlpiapi.h
the
.IR GCOM -specific
header file.
.TP
.B @libdir@/libdlpiapi.a
the static library version of the DLPI API Library.
.TP
.B @libdir@/libdlpiapi.so
the shared object library version of the DLPI API Library.
.\"
.\"
.SH BUGS
.PP
The DLPI API Library has no known bugs.
.\"
.\"
.SH SEE ALSO
.PP
.BR dlpi (7),
.BR cdiapi (3),
.BR dlpiapi (3),
.BR npiapi (3),
.IR STREAMS (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The OpenSS7 DLPI API library is compatible with documentation of the GCOM DLPI
API library
.[
dlpiapi
.]
and applications based on the DLPI API, with the following compatibility
considerations:
.IP \(em \w'\(em\(em'u
Application programming interfaces for devices and modules that implement the
Data Link Provider Interface (DLPI),
.[
dlpi revision 2.0.0
.]
.BR dlpi (7),
have not been subjected to standardization and are, therefore, inherently
non-portable.  Portable \fISTREAMS\fP applications, drivers and modules will
utilize the service primitive interface directly using
.BR putmsg (2s),
.BR getmsg (2s),
.BR write (2s),
.BR read (2s)
and
.BR ioctl (2s)
system calls and the definitions provided in the
.RB < sys/dlpi.h >
header file.
.IP \(em
.B DLPI API Library
functions are
.IR GCOM -specific,
.[
dlpiapi
.]
and are provided only for porting
.I GCOM
applications, drivers and modules to
.BR "Linux Fast-STREAMS" .
They are inherently non-portable.  These functions will be avoided by portable
DLPI application programs, drivers and modules.
.IP \(em
Binary compatibility is not attempted, only source compatibility: any binary
compatibility experienced is coincidental and may change on a future release.
.RS
.PP
It may be necessary to recompile all applications programs, and \fISTREAMS\fP
drivers and modules, that share definitions with the DLPI API library through
the
.RB < dlpiapi.h >
header file, using
.B @PACKAGE_TITLE@
supplied header files.
.RE
.IP \(em
The
.B @PACKAGE_TITLE@
implementation of the DLPI API Library is designed to be fully thread-safe.
When used in a POSIX threads environment, the implementation is not expected
to be bug-for-bug compatible with the
.I GCOM
implementation, which does not document interactions with multi-threaded
programs.
.PP
For further compatibility information, see
.BR dlpi (7)
and
.IR STREAMS (9).
.\"
.\"
.SH CONFORMANCE
.PP
DLPI,
.[
dlpi revision 2.0.0
.]
DLPI API documentation.
.[
dlpiapi
.]
.\"
.\"
.SH HISTORY
.PP
DLPI
first appeared in SVR 4.
.[
svr4
.]
.PP
DLPI API documentation
.[
dlpiapi
.]
was first issued by
.I GCOM
in 1995.
.\"
.\"
.SH VERSIONS
.PP
This manual page was written for the
.B @PACKAGE_TITLE@
version of the
DLPI API Library.
.\"
.\"
.[
$LIST$
.]
.TI
