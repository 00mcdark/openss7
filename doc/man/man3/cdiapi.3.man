'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: cdiapi.3.man,v 1.1.2.2 2011-02-07 02:18:00 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2011-02-07 02:18:00 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: cdiapi.3.man,v $
.\" Revision 1.1.2.2  2011-02-07 02:18:00  brian
.\" - updated manual pages
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH CDIAPI 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "OpenSS7 CDI API Library"
.\" =========================================================================
.SH NAME
.B cdiapi, libcdiapi
\- CDI API Library
.\"
.\"
.SH INTERFACE
.PP
CDI
.[
cdi revision @PACKAGE_VERSION@
.]
Application Program Interface.
.[
cdiapi
.]
.br
.IR "GCOM, Inc." ,
specific and proprietary.
.\"
.\"
.SH LIBRARY
.PP
.BR libcdiapi (3),
the
.IR "CDI API Library" .
.\"
.\"
.SH SYNOPSIS
.ad l
.nh
.PP
.B #include <sys/types.h>
.br
.B #include <sys/ioctl.h>
.br
.B #include <sys/stropts.h>
.br
.B #include <sys/cdi.h>
.br
.B #include <cdiapi.h>
.HP
\fBint cdi_allow_input_req\fP(\fBint\fP\ \fIfd\fP, \fBint\ *\fP\fIstate_ptr\fP);
.PD 0
.HP
\fBint cdi_attach_req\fP(\fBint\fP\ \fIfd\fP, \fBlong\fP\ \fIppa\fP, \fBint\ *\fP\fIstate_ptr\fP);
.HP
\fBint cdi_close\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBvoid cdi_decode_ctl\fP(\fBchar\ *\fP\fImsg\fP);
.HP
\fBchar *cdi_decode_modem_sigs\fP(\fBunsigned int\fP\ \fIsigs\fP);
.HP
\fBint cdi_detach_req\fP(\fBint\fP\ \fIfd\fP, \fBint\ *\fP\fIstate_ptr\fP);
.HP
\fBint cdi_dial_req\fP(\fBint\fP\ \fIfd\fP, \fBunsigned int\fP\ \fIppa\fP, \fBunsigned int\fP\ \fIsigs\fP, \fBchar\ *\fP\fIdial_string\fP, \fBint\fP\ \fIdial_length\fP);
.HP
\fBint cdi_disable_req\fP(\fBint\fP\ \fIfd\fP, \fBunsigned long\fP\ \fIdisposal\fP, \fBint\ *\fP\fIstate_ptr\fP);
.HP
\fBint cdi_enable_req\fP(\fBint\fP\ \fIfd\fP, \fBint\ *\fP\fIstate_ptr\fP);
.HP
\fBint cdi_get_a_msg\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIbuf\fP, \fBint\fP\ \fInbytes\fP);
.HP
\fBint cdi_get_modem_sigs\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIflag\fP);
.HP
\fBint cdi_init\fP(\fBint\fP\ \fIlog_options\fP, \fBchar\ *\fP\fIlog_name\fP);
.HP
\fBint cdi_init_FILE\fP(\fBint\fP\ \fIlog_options\fP, \fBFILE\ *\fP\fIlog_file\fP);
.HP
\fBint cdi_modem_sig_poll\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint cdi_modem_sig_req\fP(\fBint\fP\ \fIfd\fP, \fBunsigned int\fP\ \fIsigs\fP);
.HP
\fBint cdi_open\fP(\fBchar\ *\fP\fIhostname\fP);
.HP
\fBint cdi_open_data\fP(\fBvoid\fP);
.HP
\fBint cdi_perror\fP(\fBchar\ *\fP\fImsg\fP);
.HP
\fBint cdi_printf\fP(\fBchar\ *\fP\fIfmt\fP, \fB...\fP);
.HP
\fBvoid cdi_print_msg\fP(\fBunsigned\ char\ *\fP\fIbuf\fP, \fBunsigned int\fP\ \fInbytes\fP, \fBint\fP\ \fIindent\fP);
.HP
\fBint cdi_put_allow_input_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint cdi_put_attach_req\fP(\fBint\fP\ \fIfd\fP, \fBlong\fP\ \fIppa\fP);
.HP
\fBint cdi_put_both\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIctrl_ptr\fP, \fBint\fP\ \fIctrl_length\fP, \fBchar\ *\fP\fIdata_ptr\fP, \fBint\fP\ \fIdata_length\fP, \fBint\fP\ \fIflags\fP);
.HP
\fBint cdi_put_data\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIdata_ptr\fP, \fBint\fP\ \fIdata_length\fP, \fBlong\fP\ \fIflags\fP);
.HP
\fBint cdi_put_detach_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint cdi_put_dial_req\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIdial_string\fP, \fBint\fP\ \fIdial_length\fP);
.HP
\fBint cdi_put_disable_req\fP(\fBint\fP\ \fIfd\fP, \fBunsigned long\fP\ \fIdisposal\fP);
.HP
\fBint cdi_put_enable_req\fP(\fBint\fP\ \fIfd\fP);
.HP
\fBint cdi_put_frame\fP(\fBint\fP\ \fIfd\fP, \fBunsigned char\fP\ \fIaddress\fP, \fBunsigned char\fP\ \fIcontrol\fP, \fBunsigned\ char\ *\fP\fIbuf\fP, \fBint\fP\ \fInbytes\fP);
.HP
\fBint cdi_put_proto\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fInbytes\fP, \fBlong\fP\ \fIflags\fP);
.HP
\fBint cdi_rcv_msg\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIbuf\fP, \fBint\fP\ \fInbytes\fP, \fBlong\fP\ \fIflags\fP);
.HP
\fBint cdi_read_data\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIbuf\fP, \fBint\fP\ \fInbytes\fP);
.HP
\fBint cdi_set_log_size\fP(\fBlong\fP\ \fInbytes\fP);
.HP
\fBint cdi_wait_ack\fP(\fBint\fP\ \fIfd\fP, \fBunsigned long\fP\ \fIprimitive\fP, \fBint\ *\fP\fIstate_ptr\fP);
.HP
\fBint cdi_write_data\fP(\fBint\fP\ \fIfd\fP, \fBchar\ *\fP\fIbuf\fP, \fBint\fP\ \fInbytes\fP);
.HP
\fBint cdi_xray_req\fP(\fBint\fP\ \fIfd\fP, \fBint\fP\ \fIupa\fP, \fBint\fP\ \fIon_off\fP, \fBint\fP\ \fIhi_wat\fP, \fBint\fP\ \fIlo_wat\fP);
.PD
.ad b
.hy 6
.\"
.\"
.SH OVERVIEW
.PP
.B libcdiapi
is an
.B OpenSS7
implementation of the
.I GCOM
CDI API Library
.[
cdiapi
.]
for
.BR "Linux Fast-STREAMS" .
.\"
.\"
.SH DESCRIPTION
.PP
The
.I CDI API Library
is a library of CDI helper and utility functions designed for use with the
Communications Device Interface (CDI),
.[
cdi revision @PACKAGE_VERSION@
.]
.BR cdi (7).
The original library was designed by
.IR "GCOM, Inc." ,
.RB < http://www.gcom.com/ >,
and first documented
.[
cdiapi
.]
in 1997.
.PP
The CDI API Library documented here is the
.B OpenSS7
implementation of a library intended on being a work-alike with the
.I GCOM
library in accordance with the
.I GCOM
documentation.
.[
cdiapi
.]
.\"
.\"
.SH FUNCTIONS
.PP
.B libcdiapi
implements the following CDI API library functions:
.TS
tab(:);
lb1c1lss.
cdi_allow_input_req\fR(3):-:T{
.ad l
.nh
send \fBCD_ALLOW_INPUT_REQ\fR(7) and await ack.
T}
cdi_attach_req\fR(3):-:T{
.ad l
.nh
send \fBCD_ATTACH_REQ\fP(7) and await ack.
T}
cdi_close\fR(3):-:T{
.ad l
.nh
close a CDI stream.
T}
cdi_decode_ctl\fR(3):-:T{
.ad l
.nh
decode primitive and output to log file.
T}
cdi_decode_modem_sigs\fR(3):-:T{
.ad l
.nh
decode modem signals to string.
T}
cdi_detach_req\fR(3):-:T{
.ad l
.nh
send \fBCD_DETACH_REQ\fP(7) and await ack.
T}
cdi_dial_req\fR(3):-:T{
.ad l
.nh
dial a modem.
T}
cdi_disable_req\fR(3):-:T{
.ad l
.nh
send \fBCD_DISABLE_REQ\fP(7) and await ack.
T}
cdi_enable_req\fR(3):-:T{
.ad l
.nh
send \fBCD_ENABLE_REQ\fP(7) and await ack.
T}
cdi_get_a_msg\fR(3):-:T{
.ad l
.nh
get a message.
T}
cdi_get_modem_sigs\fR(3):-:T{
.ad l
.nh
send \fBCD_MODEM_SIG_POLL\fP(7) and await ack.
T}
cdi_init\fR(3):-:T{
.ad l
.nh
initialize CDI library.
T}
cdi_init_FILE\fR(3):-:T{
.ad l
.nh
initialize CDI library with log file.
T}
cdi_modem_sig_poll\fR(3):-:T{
.ad l
.nh
put at \fBCD_MODEM_SIG_POLL\fP primitive.
T}
cdi_modem_sig_req\fR(3):-:T{
.ad l
.nh
put \fBCD_MODEM_SIG_REQ\fP(7) primitive.
T}
cdi_open\fR(3):-:T{
.ad l
.nh
open local or remote CDI stream.
T}
cdi_open_data\fR(3):-:T{
.ad l
.nh
open a CDI stream.
T}
cdi_perror\fR(3):-:T{
.ad l
.nh
\fBperror\fP(3) to log file.
T}
cdi_printf\fR(3):-:T{
.ad l
.nh
print message to log file.
T}
cdi_print_msg\fR(3):-:T{
.ad l
.nh
print data with indented hexadecimal.
T}
cdi_put_allow_input_req\fR(3):-:T{
.ad l
.nh
put \fBCD_ALLOW_INPUT_REQ\fP(7) primitive.
T}
cdi_put_attach_req\fR(3):-:T{
.ad l
.nh
put \fBCD_ATTACH_REQ\fP(7) primitive.
T}
cdi_put_both\fR(3):-:T{
.ad l
.nh
put control and data.
T}
cdi_put_data\fR(3):-:T{
.ad l
.nh
put a data message.
T}
cdi_put_detach_req\fR(3):-:T{
.ad l
.nh
put \fBCD_DETACH_REQ\fP(7) primitive.
T}
cdi_put_dial_req\fP(3):-:T{
.ad l
.nh
put \fBCD_ENABLE_REQ\fP(7) primitive with dial string.
T}
cdi_put_disable_req\fR(3):-:T{
.ad l
.nh
put \fBCD_DISABLE_REQ\fP(7) primitive.
T}
cdi_put_enable_req\fR(3):-:T{
.ad l
.nh
put \fBCD_ENABLE_REQ\fP(7) primitive.
T}
cdi_put_frame\fR(3):-:T{
.ad l
.nh
put a frame.
T}
cdi_put_proto\fR(3):-:T{
.ad l
.nh
put a control message.
T}
cdi_rcv_msg\fR(3):-:T{
.ad l
.nh
receive a message.
T}
cdi_read_data\fR(3):-:T{
.ad l
.nh
read data from CDI stream.
T}
cdi_set_log_size\fR(3):-:T{
.ad l
.nh
set log file size.
T}
cdi_wait_ack\fR(3):-:T{
.ad l
.nh
wait for an acknowledgement.
T}
cdi_write_data\fR(3):-:T{
.ad l
.nh
write data to CDI stream.
T}
cdi_xray_req\fR(3):-:T{
.ad l
.nh
X-ray a CDI stream.
T}
.TE
.\"
.\"
.SH USAGE
.PP
To use the CDI API Library, include
.RB < sys/cdi.h >
and
.RB < cdiapi.h >
header files in C language programs.
Add the
.RB ` -lcdiapi '
flag to the linker command when linking C language programs that use this
library.
.PP
.\"
.SS Preparing the Library
.PP
The following functions are used to prepare the CDI API library:
.TP
.BR cdi_init (3)
Initializes the CDI API library, opens a log file for use by the initializing
process and sets the logging options associated with the file.
.TP
.BR cdi_init_FILE (3)
Initializes the CDI API library, uses the provided log file, and sets the loggin
options associated with the file.
.TP
.BR cdi_set_log_size (3)
Sets the maximum log size.  Once this maximum log size is reached, the file will
be rotated.
.\"
.SS Opening a CDI Stream
.PP
The following functions are used to open or close a CDI stream:
.TP
.BR cdi_open (3)
Opens a new CDI stream on the local or a remote host.
.TP
.BR cdi_open_data (3)
Opens a new CDI stream on the local host.
.TP
.BR cdi_close (3)
Closes a CDI stream on the local or remote host.
.\"
.SS Manipulating the Device
.PP
The following functions are used to associate and manipulate a device:
.TP
.BR cdi_attach_req (3)
Issues a
.BR CD_ATTACH_REQ (7)
primitive to attach the CDI stream to a Physical Point of Attachment (PPA).
This function awaits acknowledgement.
.TP
.BR cdi_detach_req (3)
Issues a
.BR CD_DETACH_REQ (7)
primitive to detach the CDI stream from the underlying device (PPA).
This function awaits acknowledgement.
.TP
.BR cdi_enable_req (3)
Issues a
.BR CD_ENABLE_REQ (7)
primitive to enable the underlying device associated with the attached PPA for
the current stream.
This function awaits acknowledgement.
.TP
.BR cdi_disable_req (3)
Issues a
.BR CD_DISABLE_REQ (7)
primitive to disable the underlying device associated with the attached PPA for
the current stream.
This function awaits acknowledgement.
.TP
.BR cdi_allow_input_req (3)
Issues a
.BR CD_ALLOW_INPUT_REQ (7)
primitive to place the underlying device in full duplex mode for the current
stream.
This function awaits acknowledgement.
.TP
.BR cdi_put_attach_req (3)
Issues a
.BR CD_ATTACH_REQ (7)
primitive to attach the CDI stream to a Physical Point of Attachment (PPA).
This function does not await acknowledgement.
.TP
.BR cdi_put_detach_req (3)
Issues a
.BR CD_DETACH_REQ (7)
primitive to detach the CDI stream from the underlying device (PPA).
This function does not await acknowledgement.
.TP
.BR cdi_put_enable_req (3)
Issues a
.BR CD_ENABLE_REQ (7)
primitive to enable the underlying device associated with the attached PPA for
the current stream.
This function does not await acknowledgement.
.TP
.BR cdi_put_disable_req (3)
Issues a
.BR CD_DISABLE_REQ (7)
primitive to disable the underlying device associated with the attached PPA for
the current stream.
This function does not await acknowledgement.
.TP
.BR cdi_put_allow_input_req (3)
Issues a
.BR CD_ALLOW_INPUT_REQ (7)
primitive to place the underlying device in full duplex mode for the current
stream.
This function does not await acknowledgement.
.TP
.BR cdi_wait_ack (3)
Await acknowledgement for a previously issued primitive.
.\"
.SS Data Communications
.PP
The following functions are used to pass data and primitives to and from a CDI
stream:
.TP
.BR cdi_write_data (3)
Writes data to the device.
.TP
.BR cdi_read_data (3)
Reads data from the device.
.TP
.BR cdi_rcv_msg (3)
Receives a message on the CDI stream.
.TP
.BR cdi_put_proto (3)
Puts a
.BR M_PROTO (9)
message on the CDI Stream.
.TP
.BR cdi_put_data (3)
Puts a
.BR M_DATA (9)
message on the CDI Stream.
.TP
.BR cdi_put_both (3)
Puts both a
.BR M_PROTO (9)
and
.BR M_DATA (9)
message on the CDI Stream.
.TP
.BR cdi_put_frame (3)
Puts a frame with address and control bytes prepended to data.
.\"
.SS Utilities
.PP
The following functions are used for general purposes:
.TP
.BR cdi_modem_sig_req (3)
Sets modem leads by issuing a\
.BR CD_MODEM_SIG_REQ (7)
primitive.
.TP
.BR cdi_printf (3)
Prints information to the CDI API Library log file.
.TP
.BR cdi_decode_modem_sigs (3)
Decodes modem signals (leads) and provides a diagnostic character string.
.TP
.BR cdi_decode_ctl (3)
Decodes a control message and places the decoded data in the log.
.TP
.BR cdi_print_msg (3)
Decodes a data message and places the hexadecimal representation in the log.
.TP
.BR cdi_perror (3)
Prints an error message to the log.
.\"
.\"
.SH MT CONTEXT
.PP
The
.B @PACKAGE_TITLE@
implementation of the CDI API Library is fully thread-safe.
The variables documented as global are instead contained in thread-specific
data.
Functions that return static buffers, such as
.BR cdi_decode_modem_sigs (3),
return a pointer to a thread-specific buffer.
.\"
.\"
.SH RETURN
.PP
Most function call return zero (0) on success and minus one (-1) on error.
.\"
.\"
.SH ERRORS
.PP
When most functions fail, they return minus one (-1) and set the global
.IR errno (3)
variable to an appropriate error code.
.\"
.\"
.SH NOTICES
.PP
The
.B CDI API Library
is
.IR GCOM -specific.
.[
cdiapi
.]
It may be necessary to define the `C' preprocessor symbol,
.BR _GCOM_SOURCE ,
before including the
.RB < sys/cdi.h >
header file to expose the symbolic constants, data structures and declarations
necessary for the use of these functions.  It may be necessary to include the
.RB < cdiapi.h >
header file to expose the symbolic constants, data structures and declarations
necessary for the user of these functions.
.\"
.\"
.SH FILES
.PP
.TP
.B @includedir@/@PACKAGE@/sys/cdi.h
the standard CDI
.[
cdi revision @PACKAGE_VERSION@
.]
header file.
.TP
.B @includedir@/@PACKAGE@/cdiapi.h
the
.IR GCOM -specific
header file.
.TP
.B @libdir@/libcdiapi.a
the static library version of the CDI API Library.
.TP
.B @libdir@/libcdiapi.so
the shared object library version of the CDI API Library.
.\"
.\"
.SH BUGS
.PP
The CDI API Library has no known bugs.
.\"
.\"
.SH SEE ALSO
.PP
.BR cdi (7),
.BR cdiapi (3),
.BR dlpiapi (3),
.BR npiapi (3),
.IR STREAMS (9).
.\"
.\"
.SH COMPATIBILITY
.PP
The OpenSS7 CDI API library is compatible with documentation of the GCOM CDI
API library
.[
cdiapi
.]
and applications based on the CDI API, with the following compatibility
considerations:
.IP \(em \w'\(em\(em'u
Application programming interfaces for devices and modules that implement the
Communications Device Interface (CDI),
.[
cdi revision @PACKAGE_VERSION@
.]
.BR cdi (7),
have not been subjected to standardization and are, therefore, inherently
non-portable.  Portable \fISTREAMS\fP applications, drivers and modules will
utilize the service primitive interface directly using
.BR putmsg (2s),
.BR getmsg (2s),
.BR write (2s),
.BR read (2s)
and
.BR ioctl (2s)
system calls and the definitions provided in the
.RB < sys/cdi.h >
header file.
.IP \(em
.B CDI API Library
functions are
.IR GCOM -specific,
.[
cdiapi
.]
and are provided only for porting
.I GCOM
applications, drivers and modules to
.BR "Linux Fast-STREAMS" .
They are inherently non-portable.  These functions will be avoided by portable
CDI application programs, drivers and modules.
.IP \(em
Binary compatibility is not attempted, only source compatibility: any binary
compatibility experienced is coincidental and may change on a future release.
.RS
.PP
It may be necessary to recompile all applications programs, and \fISTREAMS\fP
drivers and modules, that share definitions with the CDI API library through
the
.RB < cdiapi.h >
header file, using
.B @PACKAGE_TITLE@
supplied header files.
.RE
.IP \(em
The
.B @PACKAGE_TITLE@
implementation of the CDI API Library is designed to be fully thread-safe.
When used in a POSIX threads environment, the implementation is not expected
to be bug-for-bug compatible with the
.I GCOM
implementation, which does not document interactions with multi-threaded
programs.
.PP
For further compatibility information, see
.BR cdi (7)
and
.IR STREAMS (9).
.\"
.\"
.SH CONFORMANCE
.PP
CDI,
.[
cdi revision @PACKAGE_VERSION@
.]
CDI API documentation.
.[
cdiapi
.]
.\"
.\"
.SH HISTORY
.PP
CDI first appeared in NCR Comten around 1989.
.PP
CDI API documentation
.[
cdiapi
.]
was first issued by
.I GCOM
in 1997.
.\"
.\"
.SH VERSIONS
.PP
This manual page was written for the
.B @PACKAGE_TITLE@
version of the
CDI API Library.
.\"
.\"
.[
$LIST$
.]
.TI
