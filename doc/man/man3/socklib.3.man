'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: socklib.3.man,v 1.1.2.1 2009-06-21 10:34:24 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2009-06-21 10:34:24 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: socklib.3.man,v $
.\" Revision 1.1.2.1  2009-06-21 10:34:24  brian
.\" - added files to new distro
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.\"
.\"
.TH SOCKLIB 3 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Library Calls"
.\"
.\"
.SH NAME
.B libsocklib, socklib
\- BSD Sockets Compatibility Library
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/socket.h>
.ad l
.HP 12
.BI "int accept(int " socket ", struct sockaddr *" address ", socklen_t *" address_len );
.PD 0
.HP
.BI "int bind(int " socket ", const struct sockaddr *" address ", socklen_t " address_len );
.HP
.BI "int connect(int " socket ", const struct sockaddr *" address ", socklen_t " address_len );
.HP
.BI "int getpeername(int " socket ", struct sockaddr *" address ", socklen_t *" address_len );
.HP
.BI "int getsockname(int " socket ", struct sockaddr *" address ", socklen_t *" address_len );
.HP
.BI "int getsockopt(int " socket ", int " level ", int " option_name ", void *" option_value ", socklen_t *" option_len );
.HP
.BI "int listen(int " socket ", int " backlog );
.HP
.BI "ssize_t recv(int " socket ", void *" buffer ", size_t " length ", int " flags );
.HP
.BI "ssize_t recvfrom(int " socket ", void *" buffer ", size_t " length ", int " flags ", struct sockaddr *" address ", socklen_t *" address_len );
.HP
.BI "ssize_t recvmsg(int " socket ", struct msghdr *" message ", int " flags );
.HP
.BI "ssize_t send(int " socket ", const void *" buffer ", size_t " length ", int " flags );
.HP
.BI "ssize_t sendmsg(int " socket ", const struct msghdr *" message ", int " flags );
.HP
.BI "ssize_t sendto(int " socket ", const void *" message ", size_t " length ", int " flags ", const struct sockaddr *" dest_addr ", socklen_t " dest_len );
.HP
.BI "int setsockopt(int " socket ", int " level ", int " option_name ", const void *" option_value ", socklen_t " option_len );
.HP
.BI "int shutdown(int " socket ", int " how );
.HP
.BI "int socket(int " domain ", int " type ", int " protocol );
.HP
.BI "int socketpair(int " domain ", int " type ", int " protocol ", int " socket_vector[2] );
.HP
.BI "int shutdown(int " socket ", int " how );
.PD
.ad b
.\"
.\"
.SH ARGUMENTS
.TP \w'\fIoption_value\fR\(em'u
.I socket
Specifies the file descriptor of the socket.
.PD 0
.TP
.IR address
A pointer to a socket address.
.TP
.IR address_len
The length of the socket address.
.TP
.IR dest_addr
A pointer to a socket address.
.TP
.IR dest_len
The length of the socket address.
.TP
.I level
The protocol level of the option.
.TP
.I option_name
The name of the option.
.TP
.I option_value
A pointer to a memory extent containing the option value.
.TP
.I option_len
The length of the option.
.TP
.I buffer
A user data buffer.
.TP
.I length
The length of the data buffer.
.TP
.I flags
Option flags.
.TP
.I message
A message header describing the message.
.TP
.I how
How to shutdown the socket.
.TP
.I domain
The protocol family.
.TP
.I type
The socket type.
.TP
.I protocol
The protocol within the protocol family.
.TP
.I socket_vector
Array to receive 2 file descriptors.
.PD
.\"
.\"
.SH OVERVIEW
.PP
.B libsocklib
is an
.B OpenSS7
implementation of the
.I BSD Sockets Compatibility Library
for
.BR "Linux Fast-STREAMS" .
.\"
.\"
.SH DESCRIPTION
.PP
.B libsocklib
implements the following Sockets API library functions:
.sp
.TS
llsss.
\fBaccept\fP(3)	\-\ accept a connection.
\fBbind\fP(3)	\-\ bind a socket.
\fBconnect\fP(3)	\-\ establish a connection.
\fBgetpeername\fP(3)	\-\ get remote socket name.
\fBgetsockname\fP(3)	\-\ get local socket name.
\fBgetsockopt\fP(3)	\-\ get a socket option.
\fBlisten\fP(3)	\-\ listen for connections.
\fBrecv\fP(3)	\-\ receive data on a connection.
\fBrecvfrom\fP(3)	\-\ receive data from a socket.
\fBrecvmsg\fP(3)	\-\ receive a message on a socket.
\fBsend\fP(3)	\-\ send data on a connection.
\fBsendmsg\fP(3)	\-\ send a message on a socket.
\fBsendto\fP(3)	\-\ send data to a socket.
\fBsetsockopt\fP(3)	\-\ set a socket option.
\fBshutdown\fP(3)	\-\ shutdown a socket.
\fBsockatmark\fP(3)	\-\ test if socket at mark.
\fBsocket\fP(3)	\-\ create a socket.
\fBsocketpair\fP(3)	\-\ create a pair of connected sockets.
.TE
.\"
.\"
.SH OPTIONS
.PP
.SS "Socket Level Options"
.PP
Several options are independent of the transport service provider.  These
options are specified at option level
.BR SOL_SOCKET ,
and are defined as follows:
.TP
.B SO_DEBUG
Turns on recording of debugging information.  This option enables or disables
debugging in the underlying protocol modules.  This option takes an
.B int
value.  This is a Boolean option.
.TP
.B SO_BROADCAST
Permits sending of broadcast messages, if this is supported by the protocol
This option takes an
.B int
value.  This is a Boolean option.
.TP
.B SO_REUSEADDR
Specifies that the rules used in validating addresses supplied to
.BR bind (3)
should allow reused of local addresses, if this is supported by the protocol.
This option takes an
.B int
value.  This is a Boolean option.
.TP
.B SO_KEEPALIVE
Keeps connections active by enabling the periodic transmission of messages, if
this is supported by the protocol.  This option takes an
.B int
value.
.IP ""
If the connected socket failes ot respond to these messages, the connection is
broken and thread writing to that socket are notified with a
.RI { SIGPIPE }
signal.
This is a Boolean option.
.TP
.B SO_LINGER
Lingers on a
.BR close (2)
if data is present.  This option controls the action taken when unsent
messages qeuue on a socket and
.BR close (2)
is performed.  If
.B SO_LINGER
is set, the system shall block the process during
.BR close (2)
until it can transmit the data or until the time expires.  If
.B SO_LINGER
is not specified, and
.BR close (2)
is issued, the system handle the call in a way that allows the process to
continue as quicly as possible.  This option takes a
.B linger
structure, as defined in the
.RB < sys/socket.h >
header, to specify the state of the option and linger interval.
.TP
.B SO_OOBINLINE
Lesaves received out-of-band data (data marked urgent) inline.  This option
takes an
.B int
value.  This is a Boolean option.
.TP
.B SO_SNDBUF
Sets send buffer size.  This option takes an
.B int
value.
.TP
.B SO_RCVBUF
Sets receive buffer size.  This option taks an
.B int
value.
.TP
.B SO_DONTROUTE
Requests that outgoing message bypass the standard routing facilities.  The
destination shall be on a directly-connected network, and messages are
directed to the appropriate network interface according to the destination
address.  The effect, if any, of this option depends on what protocol is in
use.  This option takes an
.B int
value.  This is a Boolen option.
.TP
.B SO_RCVLOWAT
Sets the minimum number of bytes to process fo socket input operations.  The
default value for
.B SO_RCVLOWAT
is one
.RB ( 1 ).
If
.B SO_RCVLOWAT
is set to a larger value, blocking receive calls normally wait until they have
received the smaller of the low water mark value or the requested amount.
(They may return less than the low water mark if an error occurs, a signal is
caught, or the type of data next in the receive queue is different from that
returned; for example, out-of-band data.)  This option takes an
.B int
value.  Note that not all implementations allow this option to be set.
.TP
.B SO_RCVTIMEO
Sets the timeout value that specifies the maximum amount fo time an input
function waits until it completes.  It accpets a
.B timeval
structure with the number of seconds and microseconds specifying the limit on
how long to wait for an input operation to complete.  If a receive operation
has blocked for this much time without receiving additional data, it shall
return with a partial count or
.IR errno (3)
set to
.RB [ EAGAIN ]
or
.RB [ EWOULDBLOCK ]
if no data is received.  The default for this option is zero, which indicates
that a receive operation shall not time out.  This option takes a
.B timeval
structure.  Note that not all implementations allow this option to be set.
.TP
.B SO_SNDLOWAT
Sets the minimum number of bytes to process for socket output operations.
Non-blocking output operations shall process no data if flow control does not
allow the smaller of the send low water mark value or the entire request to be
processed.  This option takes an
.B int
value.  Note that not all implementations allow this option to be set.
.TP
.B SO_SNDTIMEO
Sets the timeout valud specifying the amount of time that an output function
blocks because flow control prevents the data from being sent.  If a send
operation has blocked for this time, it shall return with a partial count or
with
.IR errno (3)
set to
.RB [ EAGAIN ]
or
.RB [ EWOULDBLOCK ]
if no dta is sent.  The default for this option is zero, which indicates that
a send operation shall not time out.  This option stores a
.B timeval
structure.  Note that not all implementations allow this option to be set.
.PP
The following options are read-only:
.TP
.B SO_ACCEPTCONN
Reports whether the socket is listening.  This option shall store an
.B int
value.  This is a Boolean option.
.TP
.B SO_ERROR
Reports information about error status and clears it.  This option shall store
an
.B int
value.
.TP
.B SO_TYPE
Reports the socket type.  This option shall store an
.B int
value.
.PP
For Boolean options,
.IR false ,
zero
.RB ( 0 )
indicates that the option is disabled and
.IR true ,
one
.RB ( 1 )
indicates that the option is enabled.
.\"
.\"
.\".TP
.\".B SO_BSDCOMPAT
.\".TP
.\".B SO_PASSCRED
.\".TP
.\".B SO_PEERCRED
.\".TP
.\".B SO_BINDTODEVICE
.\".TP
.\".B SO_PRIORITY
.\"
.\"
.\".SH FUNCTIONS
.\".PP
.\"
.\"
.\".SH CAVEATS
.\".PP
.\"
.\"
.\".SH "RETURN VALUE"
.\".PP
.\"Upon successful completion,
.\".BR xxx ()
.\"returns 0.  Otherwise, -1 is
.\"returned and errno is set to indicate the error.
.\"
.\"
.\".SH ERRORS
.\".PP
.\"The
.\".BR xxx ()
.\"function will fail if:
.\"
.\"
.SH "SEE ALSO"
.PP
.BR accept (3),
.BR bind (3),
.BR connect (3),
.BR getpeername (3),
.BR getsockname (3),
.BR getsockopt (3),
.BR listen (3),
.BR recv (3),
.BR recvfrom (3),
.BR recvmsg (3),
.BR send (3),
.BR sendmsg (3),
.BR sendto (3),
.BR setsockopt (3),
.BR shutdown (3),
.BR sockatmark (3),
.BR socket (3),
.BR socketpair (3).
.\"
.\"
.SH COMPATIBILITY
.PP
This function and sockets implementation is compatible to
.IR "SVR 4.2" ,
.[
svr42
.]
and implementations based on
.IR "SVR 4.2" ,
including
.IR Solaris \(rg,
.[
soldoc
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IP \(em
.PP
See
.BR sockets (3)
and
.BR socklib (3)
for more compatibility information.
.\"
.\"
.SH "CONFORMING TO"
.PP
.I SVR4 .
.[
svr4
.]
.\"
.\"
.SH HISTORY
.PP
Early implemetnations of
.IR SVR4 ,
.[
svr4
.]
and
.IR Solaris \(rg,
.[
soldoc
.]
had implementations of
.BR libsocklib .
Recent implementations typically use
.BR libsocket (3).
.\"
.\"
.[
$LIST$
.]
.TI
