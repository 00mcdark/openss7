'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id$
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date$ by $Author$
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log$
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH AP_RO_BIND_REQ 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "ASCE/Presentation ROSE Interface (XAP-ROSE)"
.SH NAME
.B AP_RO_BIND_REQ
\- initiate establishment of an XAP-ROSE association.
.\"
.\"
.SH INTERFACE
.PP
XAP,
.[
XAP c303
.]
XAP-ROSE.
.[
XAP-ROSE
.]
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <xap_rose.h>
.HP
.B int ap_snd(
.br
.BI "int " fd ,
.br
.BI "unsigned long " sptype ,
.br
.BI "ap_ro_cdata_t *" cdata ,
.br
.BI "ap_osi_vbuf_t *" ubuf ,
.br
.BI "int " flags ,
.br
.BI "unsigned long *" aperrno_p );
.\"
.\"
.SH ARGUMENTS
.PP
.TP \w'\fIaperrno_p\fP\(em'u
.I fd
a file descriptor associated with the XAP-ROSE instance as returned from
.BR ap_open (3).
.PD 0
.TP
.I sptype
always
.B AP_RO_BIND_REQ
for this primitive.
.TP
.I cdata
a pointer to the control data structure for the primitive.
.TP
.I ubuf
a pointer to the user information for the primitive.
.TP
.I flags
flags for the primitive.
.TP
.I aperrno_p
a pointer to a memory extent into which to receive the diagnostic error code.
.PD
.\"
.\"
.SH DESCRIPTION
.PP
The AP_RO_BIND_REQ primitive is used by the ROSE service user with the
.BR ap_snd (3)
function and the XAP-ROSE environment to being the establishment of an association between two
application entities wishing to use ROSE services.  After sending an AP_RO_BIND_REQ primitive, no
other primitives can be issued, except A_ABORT_REQ until an AP_RO_BIND_CNF or A_PABORT_IND primitive
is received.
.PP
The ROPM maps the AP_RO_BIND_REQ primitive to the
.BR A_ASSOC_REQ (7)
service directly.  The effects and restrictions of sending the AP_RO_BIND_REQ primitive are
identical to the
.BR A_ASSOC_REQ (7)
primitive.
.PP
Refer to the table on the
.BR ap_snd (3)
manual page, under the
.BR A_ASSOC_REQ (7)
section, for these effects and restrictions.
.PP
To send an AP_RO_BIND_REQ primitive, the arguments to
.BR ap_snd (3)
must be set as described below.
.PP
.TP \w'\fIaperrno_p\fP:\(em'u
.IR fd :
This integer value refers to the file descriptor returned from a previous
.BR ap_open (3)
call.  It identifies the library instance that supports the association.
.TP
.IR sptype :
This argument must be set to
.BR AP_RO_BIND_REQ .
.TP
.IR cdata :
The following members of the
.I cdata
structure are used for this primitive:
.RS
.RS 4
.PP
.nf
\f(CW\s-1\
long udata_length;      /* length of user information   */
long pci;               /* Presentation Context Id      */
ap_a_assoc_env_t *env;  /* environment attribute values */
\s+1\fP
.fi
.RE
.PP
The
.I cdata->udata_length
argument must be set  to the number of octets of encoded user information that will be sent  with
this primitive if the primitive is issued as more that one
.BR ap_snd (3)
invocation.  If the primitive is issued as a single
.BR ap_snd (3)
invocation, this field will be ignored.
.PP
The
.I cdata->pci
argument must be set to a value representing the presentation context identifier or a valid abstract
syntax contained in the environment attribute AP_RO_PCI_LIST.  The ROSE PDU will be encoded within a
presentation data value identified by this
.IR pci .
.PP
The
.I cdata->env
argument can be used to override XAP environment attribute values used as parameters to the
A-ASSOCIATE request which carries the RO-BIND request service.  If no attribute values are to be
overridden,
.I cdata->env
may be set to
.BR NULL .
Otherwise,
.I cdata->env
must point to an
.B ap_a_assoc_env_t
structure, and the elements defined on the A_ASSOC_REQ manual page in the
.BR XAP (3)
specification are used for this primitive.
.PP
The
.I cdata->type
argument signals the type of encoding that is to be used to encode the
.BR AP_RO_BIND_REQ .
If the
.I cdata->type
is set to
.B AP_RO_DIRECT_REF
the
.I cdata->value.global
will contain the object identifier that will be usd for the encoding.  If
.I cdata->type
is set to
.B AP_RO_INDIRECT_REF
then the
.I cdata->pci
value will be used for the indirect-reference encoding.  If
.I cdata->type
is set to
.B AP_RO_DIR_AND_INDIR
then the
.I cdata->value.global will contain the transfer syntax that will be used for
the encoding and the
.I cdata->pci
will be used for the indirect-reference.
The global element of the
.I cdata->value
element is an
.B ap_objid_t
structure containing the contents octets of the BER encoding of the OBJECT
IDENTIFIER.  See the referenced XAP specification and ISO 8825-1, Basic
Encoding Rules (BER) for details of how to use this structure.
.RE
.TP
.IR ubuf :
Use of the
.I ubuf
argument is described on the
.BR ap_snd (3)
manual page.
.TP
.IR flags :
The
.I flags
argument is used to control certain aspects of primitive processing as
described in the manual page for
.BR ap_snd (3).
.TP
.IR aperrno_p :
This must point to a location which will be set to an error code if a failure
occurs.
.\"
.\"
.SH ORIGINATOR
.PP
This primitive is originated by the XAP interface client.
.\"
.\"
.SH STATE
.PP
.SS Valid States
.PP
.SS New State
.PP
.\"
.\"
.SH RETURN
.PP
Refer to the manual page for
.BR ap_rcv (3)
in the referenced XAP specification.
.[
xap c303
.]
.\"
.\"
.SH ERRORS
.PP
In addition to those listed in the manual page for
.BR ap_snd (3),
the following AP_RO_BIND_REQ errors can occur:
.TP \w'[\fBAP_RO_BADCD_TYPE\fP]\(em'u
.RB [ AP_BADROLE ]
The
.B AP_INITIATOR
bit of the
.B AP_ROLE
attribute is not set.
.\".TP
.\".RB [ AP_BADCD_TOKENS ]
.\"The value of
.\".I tokens
.\"is not valid.
.TP
.RB [ AP_RO_BAD_PCI ]
The
.I pci
is not in the
.BR AP_RO_PCI_LIST .
.TP
.RB [ AP_BADPRIM ]
For
.B XAP-ROSE
primitives, this error code may be returned if the identified instance is not
an
.B XAP-ROSE
instance\(emthat is, the service provider selected in the call to
.BR ap_open (3)
does not support a ROSE service provider, or the
.B AP_ROSE_MODE
flag has not been set in the
.B AP_MODE_SEL
environment attribute.
.TP
.RB [ AP_RO_BADCD_TYPE ]
The value of
.I type
is not valid.
.\"
.\"
.SH NOTICES
.PP
.B AP_RO_BIND_REQ
must be used instead of
.BR A_ASSOCIATE_REQ (7)
when
.B AP_MODE_SEL
contains
.BR AP_ROSE_MODE .
.PP
The ROSE service definition
.[
x219
.]
defines a bind operation that creates an association over which subsequent
operation requests and replies are transferred.  The ROSE service definition
also defines an unbind operation that destroys the association created by the
bind operation.
.PP
Depending on the version of the ROSE specification
.[
x219
.]
.[
x229
.]
implemented by the XAP-ROSE provider, the bind and unbind operations may either
be defined as macros using the A-ASSOCIATE and A-RELEASE primitives, with the
ROSE protocol encoded in the user information portion of these primitives, or
as the separate ROSE primitives BIND and UNBIND.
.PP
In the XAP-ROSE API, if the underlying ROSE implementation supports the BIND
and UNBIND primitives, the AP_RO_BIND_XXX and AP_RO_UNBIND_XXX primitives can
be used as described in the following sections.  Their usage is simlar to that
of other ROSE primitives defined through XAP-ROSE.
.PP
In the case where the A-ASSOCIATE and A-RELEASE primitives are to be used, the
XAP-ROSE API user can implement the bind/unbind operation using the ACSE
primitives defined by XAP.  The rules for encoding the operation arguments for
these primitives are those defined by XAP for the relevant primitives, rather
than the rules defined in this specification for encoding other operation and
reply arguments.
.PP
The ROSE service specification
.[
ISO 9072-1
.]
has macro definitions for the bind and unbind operations.  These macros show
the required tagging of the user information portions of the ACSE A-ASSOCIATE
and A-RELEASE primitives when embedded in the Association-information EXTERNAL
encoding.
.\"
.\"
.SH SEE ALSO
.PP
.BR XAP-ROSE (3),
.BR XAP (3),
.BR ap_env (3),
.BR ap_open (3),
.BR ap_snd (3),
.BR A_ASSOC_REQ (7).
.\"
.\"
.SH BUGS
.PP
.B AP_RO_BIND_REQ
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.B AP_RO_BIND_REQ
is compatible with implementation based on XAP and XAP-ROSE, such as
.IR "Solaris SunLink" \(rg
.[
sunlink-apli
.]
and
.IR "HP-UX OTS/9000" \(rg,
.[
hpuxapli
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IP \(em
.PP
See
.BR XAP-ROSE (3)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
XAP,
.[
XAP c303
.]
XAP-ROSE.
.[
XAP-ROSE
.]
.\"
.\"
.SH HISTORY
.PP
.B AP_RO_BIND_REQ
first appeared in XAP-ROSE.
.[
XAP-ROSE
.]
.\"
.\"
.SH VERSIONS
.PP
This manual page was written for the OpenSS7 XAP Library under the OpenSS7
Project.
.\"
.\"
.[
$LIST$
.]
.\"
.\"
.T4
