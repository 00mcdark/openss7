'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: chi.7.man,v 1.1.2.3 2011-02-07 02:18:28 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2011-02-07 02:18:28 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: chi.7.man,v $
.\" Revision 1.1.2.3  2011-02-07 02:18:28  brian
.\" - updated manual pages
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH CHI 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "Channel Interface (CHI)"
.SH NAME
.B chi
\- Channel Interface
.SH SYNOPSIS
.PP
.B #include <ss7/chi.h>
.br
.B #include <ss7/chi_ioctl.h>
.HP
.BI "int " ch_stream " = open(" ch_device ", " flags );
.SH DESCRIPTION
.PP
The Channel Interface,
.BR CHI ,
specifices a
.IR STREAMS (4)-based
kernel-level instantiation of a Channel interface definition compatible with
the Multiplex,
.BR mx (4),
and Media Gateway
.BR mg (4),
drivers.  The Channel Interface (CHI) enables the user of a channel to access
and use any variety of conforming communications media channels, without
specific knowledge of the provider's protocol.  The service interface is
designed to support any media channel service provider, and does not address
issues concerning channel management, protocol performance, and performance
analysis tools.  The specification assumes that the reader is familiar with
ITU-T synchronous digital hierarchy and
.IR STREAMS (4).
.PP
.B CHI
specifies an interface that supports the service provided by various low level
device drivers such as the X400P-SS7 driver,
.BR x400p (4),
and X100P-SS7 driver
.BR x100p (4).
These specifications are targeted for use by developers and testers fo
protocol modules that require channel service.
.SS "The Channel Services Provider"
.PP
The Channel Services Provider provides the means to manage the connection and
disconnection of channels.  It is a local control protocol in the sense that
there not necessarily any remote peer entities.  Communications is between
the local user entity and the local provider entity.
.SS "Model of the CHI"
.PP
The CHI defines the service provided by the channel services provider to
channel services user at the boundary between the channel services provider
and the channel services user entity.  The interface consists of a set of
primitives defined as
.IR STREAMS (4)
messages that provide access to the channel services, and a transferred
between the channel services user entity and the channel services provider
entity.  These primitives are of two types: ones that originate from the
channel services user (CSU), and other that originate from the channel services
provider (CSP).  The primitives that originate from the CSU make requests to
the CSP, or respond to an indication or event of the CSP.  The primitives that
originate from the CSP are either confirmation of a requires or are indications
to the CSU that an event has occurred.
.PP
The CHI allows the CSP to be configured with any media streams (such as
G.703/G.704 digital channels) that also conform to the CHI.  A CSU can also be
a user program that conforms to the CHI and accesses the CSP via
.BR putmsg (2s)
and
.BR getmsg (2s)
system calls.
.TP
.B CHI Services
The features of the CHI are defined in terms of services provided by the CSP,
and the individual primitives that may flow between the CSU and CSP.
.TP
.B Local Management
The CHI specification also defines a set of local management functions.  These
services have significance only to the local stream.
.SH "CHI SERVICES DEFINITION"
.PP
.SS "Local Management Services"
.PP
The channel service provider provides the following local management services:
.PP
.B Information Service.
The information service provides the channel service user with the ability to
query the channel service provider concerning options and parameters specific
to the channel service provider and associated with an attached channel.  The
information service uses the following primitives:
.IP \(em 4
.BR CH_INFO_REQ (7):
Request information about the attached channel and channel service provider.
.IP \(em 4
.BR CH_INFO_ACK (7):
Indicates information about the attached channel and channel service provider.
.PP
.B Options Management Service.
The options management service provides a mechanism whereby the channel
service user can query and change parameters associated with the attached
channel and manage options associated with the channel service provider.
The options management service uses the following primitives:
.IP \(em 4
.BR CH_OPTMGMT_REQ (7):
Manage the specified options.
.IP \(em 4
.BR CH_OPTMGMT_ACK (7):
Acknowledge that the management of the previously specified options is
complete.
.PP
.B Channel Attachment Service.
The channel attachment service provides the channel service user with the
ability to attach a specified channel to the requesting stream for a
stream associated with a
.B CH_STYLE2
channel service provider.  The channel attachment service is not available on
a stream associated with a
.B CH_STYLE1
channel service provider.
The channel attachment service uses the following primitives:
.IP \(em 4
.BR CH_ATTACH_REQ (7):
Attach the specified channel to the requesting stream.
.PP
.B Channel Detachment Service.
The channel detachment service provides the channel service user with the
ability to detach a previously attached channel from the requesting stream.
The requesting stream must be associated with a
.B CH_STYLE2
channel service provider and must have previously successfully executed a
.BR CH_ATTACH_REQ (7)
primitive.
The channel detachment service uses the following primitives:
.IP \(em 4
.BR CH_DETACH_REQ (7):
Detach the currently attached channel from the requesting stream.
.PP
.B Receipt Acknowledgement Service.
The receipt acknowledgement service provides an indication to the channel
service user of the positive or negative acknowledgement of the previous
primitive issued by the channel service user.
The receipt acknowledgement service uses the following primitives:
.IP \(em 4
.BR CH_OK_ACK (7):
Successful receipt acknowledgement.
.IP \(em 4
.BR CH_ERROR_ACK (7):
Unsuccessful receipt acknowledgement.
.SS "Connection Services"
.PP
The channel service provider provides the following connection services:
.PP
.B Enable Service.
The enable service provides the channel service user with the ability to
enable the attached channel.  Some channel service providers can enable
channels (prepare them for operation) locally, and others will require
exchanges with the transmission peer that will take some time before the
channel can be enabled.
The enable service uses the following primitives:
.IP \(em 4
.BR CH_ENABLE_REQ (7):
Request that the attached channel be enabled.
This primitives requires local acknowledgement.
.IP \(em 4
.BR CH_ENABLE_CON (7):
Confirms that the attached channel has been enabled as requested.
.PP
.B Disable Service.
The disable service provides the channel service user with the ability to
disable the attached channel.  Some channel service providers can disable
channels (remove them from operation) locally, and others will require
exchanges with the transmission peer that may take some time before the
channel can be disabled.
In addition, it is possible that an autonomous disabling of the channel occurs
without the request of the channel service user.  In this case, the channel
disable service is used to indicate to the channel service user that an
autonomous disabling of the channel has occurred.
The disable service uses the following primitives:
.IP \(em 4
.BR CH_DISABLE_REQ (7):
Request that the attached enabled channel be disabled.
This primitives requires local acknowledgement.
.IP \(em 4
.BR CH_DISABLE_CON (7):
Confirms that the attached channel has been enabled as requested.
.IP \(em 4
.BR CH_DISABLE_IND (7):
Indicates that the attached channel has autonomously been disabled.
.PP
.B Connect Service.
The connect service provides the channel service user with the ability to
connect an enabled channel in the receive and/or transmit directions.  Some
channel service providers can connect channels locally, and others will
required exchanges with the transmission peer that will take some time before
the channel can be connected in the specified direction.
The connect service uses the following primitives:
.IP \(em 4
.BR CH_CONNECT_REQ (7):
Requests that the attached and enabled channel be connected in the specified
direction.
This primitives requires local acknowledgement.
.IP \(em 4
.BR CH_CONNECT_CON (7):
Confirms that the attached and enabled channel has been connected in the
indicated directions as requested.
.PP
.B Disconnect Service.
The disconnect service provides the channel service user with the ability to
disconnect a connected channel in the specified receive or transmit
directions.  Some channel service providers can disconnect channels locally,
and others will require exchanges with the transmission peer that may take some
time before the channel can be disconnected in the specified direction.  In
addition, it is possible that an autonomous disconnection occurs without the
request of the channel service user.  In this case, the channel disconnect
service is used to indicate to the channel service user that an autonomous
disconnection has occurred in the indicated directions.
The disconnect service uses the following primitives:
.IP \(em 4
.BR CH_DISCONNECT_REQ (7):
Requests that the attached, enabled and connected channel be disconnected in
ths specified directions.
This primitives requires local acknowledgement.
.IP \(em 4
.BR CH_DISCONNECT_CON (7):
Confirms that the attached, enabled and connected channel has been
disconnected in the indicated directions as requested.
.IP \(em 4
.BR CH_DISCONNECT_IND (7):
Indicates that the channel has been autonomously disconnected in the indicated
directions.
.SS "Event Services"
.PP
The channel service provider provides the following event services:
.PP
.B Notification Service.
The notification service is used by the channel service provider to
inform the channel service user that a specific event has occurred.
The notification service uses the following primitives:
.IP \(em 4
.BR CH_EVENT_IND (7):
Indicates that the indicated event has occurred.
.SS "Media Services"
.PP
The channel service provider provides the following media services:
.PP
.B Data Transfer Service.
The data transfer service is used by the channel service user to request the
transmission of channel media data on the channel.  It is also used by the
channel service provider to indicate the reception of channel media data on
the channel.
The data transfer service uses the following primitives:
.IP \(em 4
.BR CH_DATA_REQ (7):
Requests that the specified media data be transmitted.
.IP \(em 4
.BR CH_DATA_IND (7):
Indicates that the indicated media data was received.
.SH "MULTIPLEXED CONNECTIONS"
.PP
In support of multiplexing drivers that do not wish to link an additional CHI
stream for each channel, an extension to the CHI service interface was
crafted to support multiplexing many virtual CHI channels onto a single
Stream.  This enhancement was created to ease the burden of configuration
control of multiplexing drivers in protocol stacks.
.PP
Without this enhancement, switching matrices and media gateways implemented
as multiplexing drivers that required that a channel not be shared between
channel users would require that an additional channel Stream be temporarily
linked under the multiplexing driver for each open of a media Stream on the
multiplexing driver.  While this is not impossible, it does not scale well.
.PP
A case where this is evident is in the MG protocol stack, where a separate
channel connection must be established for each RTP media connection.  The
approach taken historically was to create a pool of channel Streams that are
permanently linked under the RTP driver, and from which an RTP stream can be
selected when a mediate gateway connection is initiated.  This was performed
at the UDP-to-RTP, RTP-to-channel, channel-to-matrix, matrix-to-MG layers.
An obvious difficulty with this approach is that only a fixed number of
application Streams can be opened and active at any given point in time.
Further, configuration information specifying the size of the pools is
required and the linking was necessarily performed at boot time using a
startup script.  Modifications of pool sizes while the protocol stack is
running is difficult with this approach.
.PP
By provide a multiplex Stream that supports an unlimited number of
connections, the @acronym{STREAMS} stack runs more efficiently and the number
of connections is limited only by available memory.
.PP
It should be noted, however, that multiplexed CHI Streams are intended as an
internal module-to-module interface, and the multiplexed service interface is
not intended on being directly used by user-space programs (other than test
programs).
.SS Operation
.PP
The multiplexed CHI service interface modifies the CHI primitives by
prepending a channel identifier tag to each end every CHI primitive.  This
tag is a 32-bit work in 32-bit kernels and a 64-bit word on 64-bit kernels.
The intention here is that the tag be able to hold a memory pointer.
.PP
The tag value in the upward direction is selected by the by the CHI user
module and should be sufficiently unique that the CHI user can distinguish
messages belonging to different virtual CHI interfaces on the Stream.  The
tag value in the downward direction is selected by the CHI provider and must
be used by the CHI user in all further primitives associated with the
channel.  A tag is associated with a virtual CHI interface when the first
.BR CH_ATTACH_REQ "(7) (Style II)"
or
.BR CH_ENABLE_REQ "(7) (Style I)"
primitive is issued.  The CHI provider associates the user tag with the
virtual interface and will tag all CHI primitives issued to the CHI user for
the virtual interface with the CHI user selected tag.  In this way, the CHI
user can independently control each of the virtual interfaces associated with
the Stream.
.PP
When a virtual interface transitions to the
.BR CHS_UNINIT " (Style II)"
or
.BR CHS_ATTACHED " (Style I)"
state (as a result of the success of a
.BR CH_DETACH_REQ "(7) (Style II)"
or
.BR CH_DISABLE_REQ "(7) (Style I)"
primitive), the virtual interface is destroyed and its associated tag
removed.  Upon successful processing of a
.BR CH_ATTACH_REQ "(7) (Style II)"
or
.BR CH_ENABLE_REQ "(7) (Style I)"
primitive, a new virtual interface is created and the tag provided with the 
.BR CH_ATTACH_REQ "(7) (Style II)"
or
.BR CH_ENABLE_REQ "(7) (Style I)"
primitive will be associated with the newly created virtual interface.
.PP
Aside from this different and the tagging of primitives, each virtual
interface operates in a manner similar to an interface provided on on
independent Stream.  However, because the Stream does not belong to a single
interface, several issues emerge:
.IP 1. \w'0.\(em'u
Under the normal non-multiplexed CHI,
.BR CH_ATTACH_REQ (7)
and
.BR CH_ENABLE_REQ (7)
primitives are normally issued by the CHI user as
.BR M_PROTO (9)
message blocks.  Under the multiplexed CHI,
.BR CH_ATTACH_REQ (7)
and
.BR CH_ENABLE_REQ (7)
primitives should be issued by the CHI user as
.BR M_PCPROTO (9)
message blocks, particularly when setup delays are critical.
.IP 2. \w'0.\(em'u
In the non-multiplexed CHI Stream, the CH user must await acknowledgement for
primitives required an acknowledgement before issuing any other primitives.
This is largely because the Stream head will only process one priority
message at a time.  If an
.BR M_PCPROTO (9)
message appears at the Stream head while another is queued, the first will be
discarded.  For the multiplexed CHI stream, the module representing the CH
user must be cognisant of this fact.  The multiplexed interface was not
intended to be used by use processes, but, for test programs, the user must
await acknowledgement of primitives that require acknowledgement before
issuing any other primitives on any virtual interface.
.IP 3. \w'0.\(em'u
In the non-multiplex CHI Stream, the CHS provider issues
.BR M_ERROR (9)
message upstream with the error numbers set to
.RB [ EPROTO ]
to indicate fatal protocol errors.  These error messages can be correlated
with the interface because there is only one interface per Stream.  In the
multiplexed CHI Stream, these error messages can no longer be correlated with
the virtual interface.  Therefore, the CHS provider should issue a
.BR CH_EVENT_IND (7)
message instead.
.PP
Aside from these, relatively minor issues, each virtual interface on the
multiplexed CHI Stream acts as a real interface on its own Stream.
.SH OPTIONS
.PP
The Channel Interface (CHI) does not define any general options at this
time.  Options specific to the underlying CH provider will be defined in the
manual page for the specific CH provider.
.SH CAVEATS
.PP
This documentation is not complete and needs some work before it is finalized.
.SH FILES
.PP
The Channel Interface (CHI) is defined in the
.BR <sys/chi.h>
and
.BR <sys/chi_ioctl.h>
header files.  Additional header files are specified by specific providers of
the CHI interface.
.SH DEVICES
.PP
The Channel Inteface (CHI) does not provide any devices of its own.
Specific providers of the interface will provide their own devices.
.SH MODULES
.PP
Some generic
.IR STREAMS (4)
modules can be provided that convert between the CHI interface and other
interfaces (such as the MXI).
.SH "SEE ALSO"
.PP
.BR CH_ATTACH_REQ (7),
.BR CH_CONNECT_CON (7),
.BR CH_CONNECT_REQ (7),
.BR CH_DATA_IND (7),
.BR CH_DATA_REQ (7),
.BR CH_DETACH_REQ (7),
.BR CH_DISABLE_CON (7),
.BR CH_DISABLE_IND (7),
.BR CH_DISABLE_REQ (7),
.BR CH_DISCONNECT_CON (7),
.BR CH_DISCONNECT_IND (7),
.BR CH_DISCONNECT_REQ (7),
.BR CH_ENABLE_CON (7),
.BR CH_ENABLE_REQ (7),
.BR CH_ERROR_ACK (7),
.BR CH_EVENT_IND (7),
.BR CH_INFO_ACK (7),
.BR CH_INFO_REQ (7),
.BR CH_OK_ACK (7),
.BR CH_OPTMGMT_ACK (7),
.BR CH_OPTMGMT_REQ (7).
.SH "VERSIONS"
.PP
This manpage was written for CHI Version 1.
.XX
.[
chi revision @PACKAGE_VERSION@ draft @PACKAGE_RELEASE@
.]
.[
$LIST$
.]
.TI
