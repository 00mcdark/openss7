'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: mi_bufcall.9.man,v 1.1.2.3 2011-02-07 02:18:40 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2011-02-07 02:18:40 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: mi_bufcall.9.man,v $
.\" Revision 1.1.2.3  2011-02-07 02:18:40  brian
.\" - updated manual pages
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH MI_BUFCALL 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B mi_bufcall
\- reliable alternative to \fBbufcall\fP(9)
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _MPS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/mpsddi.h>
.HP
.BI "void \fRmi_bufcall(\fPqueue_t *" q ", int " size ", int " priority \fR)\fP;
.\"
.\"
.SH ARGUMENTS
.PP
.TP \w'\ priority\ 'u
.I q
Specifies the queue that is to be passed to
.BR qenable (9).
.PD 0
.TP
.I size
Specifies the required buffer size.
.TP
.I priority
Specifies the priority as used by the standard
.I STREAMS
.BR bufcall (9)
mechanism.
.PD
.\"
.\"
.SH INTERFACE
.PP
.IR MPS \(rg-specific
DDI.
.\"
.\"
.SH DESCRIPTION
.PP
.BR mi_bufcall ()
provides a reliable alternative to
.BR bufcall (9).
Standard
.I STREAMS
.BR bufcall (9)
is intended to be called when
.BR allocb (9)
is unable to allocate a block for a message, and invokes a specified callback
function (typically
.BR qenable (9))
with a given queue when a large enough block becomes available.  This can
cause system problems if the stream closes so that the queue becomes invalid
before the callback function is invoked.
.PP
The
.BR mi_bufcall ()
is a reliable alternative, as the queue is not deallocated until the call is
complete.  It uses the standard
.BR bufcall (9)
mechanism with its own internal callback routine.  The callback routine
either invokes
.BR qenable (9)
with the specified
.I q
parameter, or simply deallocates the instance data associated with the stream
if the queue has already been closed.
.\"
.\"
.SH USAGE
.PP
.BR mi_bufcall ()
is used in the common situation where an attempt is made to allocate a message
block with
.BR allocb (9),
which fails, and then the message being processed is put on the queue using
.BR putbq (9)
(from a service procedure) or
.BR putq (9)
(from a put procedure)
and a buffer call is issued with
.BR bufcall (9)
that, once it expires, simply enables the queue on which the message was
placed awaiting a buffer.
This would normally involve allocating some area in the private structure for
buffer callback identifiers, invoking
.BR bufcall (9)
with a pointer to a simple function that performs
.BR qenable (9)
on its argument.  Then the buffer callbacks must be cancelled before
.BR qi_qclose (9)
returns.
.BR mi_bufcall ()
accomplishes these last steps in a single function call.
.\"
.\"
.SH RETURN
.PP
.BR mi_bufcall ()
returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
When
.BR mi_bufcall ()
fails, it fails silently (because it returns
.BR void ).
Having
.BR mi_bufcall ()
return
.B void
was not a particularly good idea.
.BR mi_bufcall ()
fails when there is insufficient memory available to allocate the necessary
internal data structures to represent the buffer call.  Because
.BR mi_bufcall ()
returns
.BR void ,
it is not possible to determine whether the call was successful or whether it
failed, rendering the function rather useless.
.PP
.IR MacOT \(rg
documentation
.[
macspg
.]
indicates that when
.BR mi_bufcall ()
detects a failure from the
.BR bufcall (9)
routine called internally, it sets a timer and continues to reattempt until
.BR bufcall (9)
succeeds.  The problem with this approach on
.B @PACKAGE_TITLE@
is that both
.BR bufcall (9)
and
.BR timeout (9)
allocate a
.I STREAMS
event structure,
.BR strevent (9).
When
.BR bufcall (9)
fails, so will
.BR timeout (9).
.\"
.\"
.SH CONTEXT
.PP
.BR mi_bufcall ()
can be called from any context, including user context, module procedures,
call-outs, callbacks, soft interrupts (tasklets and bottom halves), and
interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR mi_bufcall ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
.BR mi_bufcall ()
is an
.IR MPS \(rg-specific
function:
.BR _MPS_SOURCE ", " _AIX_SOURCE " or " _MAC_SOURCE
must be defined before including DDI/DKI include files to expose this symbol.
.BR "@PACKAGE_TITLE@"
must also have been compiled with
.BR CONFIG_STREAMS_COMPAT_MPS ", " CONFIG_STREAMS_COMPAT_MPS_MODULE ", "
.BR CONFIG_STREAMS_COMPAT_AIX ", " CONFIG_STREAMS_COMPAT_AIX_MODULE ", "
.BR CONFIG_STREAMS_COMPAT_MAC " or " CONFIG_STREAMS_COMPAT_MAC_MODULE
defined.
.PP
Under the current implementations of
.BR mi_bufcall ()
it is necessary to use the other
.IR MPS \(rg-specific
functions when allocating a stream:
e.g.
.BR mi_open_comm (9)
and
.BR mi_close_comm (9).
.PP
Because
.BR mi_bufcall ()
stores a buffer callback identifier in the module private structure for
queue,
.IR q ,
.BR mi_bufcall ()
cannot be called for a queue pair that has not had its private structure
allocated with one of the
.BR mi_open_comm (9)
family of functions.
.PP
Because
.BR mi_bufcall ()
utilizes
.BR bufcall (9),
many of the caveats that apply to that function also applies to
.BR mi_bufcall ().
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR mi_bufcall ()
is an
.IR MPS \(rg-specific
function that should not be used by portable
.I STREAMS
drivers or modules.
A similar, and equally non-portable function, is the
.IR Solaris \(rg-specific
.BR qbufcall (9)
facility.
Portable
.I STREAMS
drivers and modules should use the more standard
.BR bufcall (9)
function directly.
.PP
.B @PACKAGE_TITLE@
.[
@PACKAGE@-@VERSION@
.]
provides enhancements to the
.BR bufcall (9)
facility that permit it to function similar to
.BR mi_bufcall ()
without changing the
.BR bufcall (9)
function prototype.
See
.BR bufcall (9)
for more details.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR bufcall (9),
.BR qbufcall (9),
.BR unbufcall (9),
.BR qunbufcall (9),
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR mi_bufcall ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR mi_bufcall ()
is
compatible with
.IR MPS \(rg,
.IR AIX \(rg,
.IR MacOT \(rg,
and
.IR Solaris \(rg,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR mi_bufcall ()
is an
.IR MPS \(rg-specific
function and should not be used by portable
.I STREAMS
drivers and modules.
The more common
.BR bufcall (9)
or
.BR qbufcall (9)
function should be used in its stead.
.IP \(em
.IR MacOT \(rg
specifies
.[
macspg
.]
that
.BR mi_bufcall ()
uses the module instance list maintained by
.BR mi_open_comm (9)
and
.BR mi_close_comm (9)
to determine if the stream is still open before attempting the callback; that the standard
.BR bufcall (9)
function is used to schedule the callback; the ultimate callback is
.BR qenable (9)
on the queue passed to
.BR mi_bufcall ().
.B @PACKAGE_TITLE@
does not use the module instance data list maintained by
.BR mi_open_comm (9)
and
.BR mi_close_comm (9);
it increases the reference count on the queue structure,
.IR q ,
which precludes it from be deallocated until after the buffer callback has run.  See also the
.B @PACKAGE_TITLE@
enhancements to
.BR bufcall (9).
.IP \(em
.BR mi_bufcall ()
is provided for source level compatibility with
.IR MPS \(rg
for the purpose of porting
.IR MPS \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.BR "@PACKAGE_TITLE@"
.[
@PACKAGE@-@VERSION@
.]
differ from that of
.IR MPS \(rg,
binaries are incompatible.
.IP \(em
.BR mi_bufcall ()
only provides functionality comparable to
.IR MPS \(rg
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR mi_bufcall ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
and
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR MPS \(rg
DDI documentation,
.IR MacOT \(rg
DDI documentation,
.[
macotr
.]
.[
macspg
.]
.IR AIX \(rg
documentation.
.[
aixcpc
.]
.\"
.\"
.SH HISTORY
.PP
.BR mi_bufcall ()
first appeared in
.IR MPS \(rg.
.BR mi_bufcall ()
is a
Mentat, Inc. function that goes all the way back to the
.RI pre- OSF/1
.I Mentat
implementations.
.BR mi_bufcall ()
appears in
.IR MacOT \(rg
.[
macspg
.]
and
.IR AIX \(rg.
.[
aixcpc
.]
An undocumented version of
.BR mi_copyin ()
appears in
.IR Solaris \(rg.
.\"
.\"
.[
$LIST$
.]
.TI
