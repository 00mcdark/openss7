'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id$
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date$ by $Author$
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log$
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH BCANPUTNEXTANY 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B bcanputnextany
\- check if message can be put to any (non-zero) band on the next queue
.\"
.\"
.SH SYNOPSIS
.HP
.B #include <sys/stream.h>
.HP
.BI "int bcanputnextany(queue_t *" q ");
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the
.BR queue (9)
forward from which to check.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS ,
implementation extension.
.\"
.\"
.SH DESCRIPTION
.PP
.BR bcanputnextany ()
checks the next
.BR queue (9)
from the specified queue,
.IR q ,
that has a
.IR qi_srvp (9)
service procedure defined, or which has a
.B NULL
.I q_next
pointer.
.PP
For that queue, if the number of blocked queue bands,
.IR q_blocked ,
is less than the number of available queue bands,
.IR q_nband ,
then a message can be written to some non-zero message band.
.PP
When the number of blocked bands,
.IR q_blocked ,
is equal to the number of available bands,
.IR q_nband ,
and even if
.I q_nband
is zero, then there is no available non-zero message band that will accept messages.
Message bands to which no message have been written to at least once (i.e., do not have a
.BR qband (9)
structure) are not checked.
This is the same as the
.BR POLLWRBAND ,
.BR S_WRBAND ,
events or
.BR I_CANPUT (7)
command with the
.B ANYBAND
flag as a argument.
.\"
.\"
.SH USAGE
.PP
.BR bcanputnextany ()
is a variation of
.BR bcanputany (9)
that starts instead with the queue past the specified queue.
.BR bcanputnextany ()
is used by the Stream head in support of the
.BR POLLWRBAND
flag to the
.BR poll (2s)
system call and the
.BR I_CANPUT (7)
.BR ioctl (2s)
command with the
.B ANYBAND
flag.
.\"
.\"
.SH RETURN
.PP
When there exists an available, non-zero band, that is not flow controlled forward from the
queue,
.IR q ,
.BR bcanputnextany ()
returns true
.RB ( 1 );
otherwise, it returns false
.RB ( 0 ).
.\"
.\"
.SH ERRORS
.PP
.BR bcanputnextany ()
always succeeds.
.\"
.\"
.SH CONTEXT
.PP
.BR bcanputnextany ()
can be called from any context, including user context, module procedures, callouts, callbacks, soft
interrupts (tasklets and bottom halves), and interrupt service routines.
.BR bcanputnextany ()
must be called from a synchronous context [see
.BR mp-streams (9)].
.\"
.\"
.SH MP-STREAMS
.PP
.BR bcanputnextany ()
is MP-safe when called from the correct context.
.BR bcanputnextany ()
cannot be called from an asynchronous context, unless bracketed with
.BR freezestr (9)
and
.BR unfreezestr (9).
.PP
It is possible, due to race conditions in a multiprocessor (MP) system, that
.BR bcanputnextany ()
can be called for a queue and return true (1) and yet the Stream becomes flow controlled before a
call to
.BR putnext (9).
The caller to
.BR putnext (9).
is then in violation of flow-control rules; however, the extent of this violation is bounded.

.\"
.\"
.SH NOTICES
.PP
.BR bcanputnextany ()
is not a standard
.I STREAMS
function, but it is exported for use by the Stream head,
.BR sth (4),
particularly when the Stream head is built as a separate kernel module.
.\"
.\"
.\".SH IMPLEMENTATION
.\".PP
.\"
.\"
.SH "SEE ALSO"
.PP
.BR queue (9),
.IR qi_srvp (9),
.BR bcanputany (9),
.BR sth (4),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR bcanputnextany ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR bcanputnextany ()
is compatible with
.IR "SVR 4.2 MP" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
.[
svr4spg
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR bcanputnextany ()
is roughly compatible with the internal operations described for
.IR "SVR 4 STREAMS"
in
.RI \(lq "The Magic Garden Explained" \(rq.
.[
magic
.]
.IP ""
.BR bcanputnextany ()
is an internal function that will not be called by portable
.I STREAMS
drivers or modules.
.PP
See
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4" .
.[
svr4spg
.]
.\"
.\"
.SH HISTORY
.PP
.BR bcanputnextany ()
is new for
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.[
$LIST$
.]
.TI
