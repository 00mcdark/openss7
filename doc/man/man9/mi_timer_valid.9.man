'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) doc/man/man9/mi_timer_valid.9.man
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH MI_TIMER_VALID 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B mi_timer_valid
\- test the validity of a \fISTREAMS\fR timer message
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _MPS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/mpsddi.h>
.HP
.BI "int mi_timer_valid(mblk_t *" mp );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I mp
the timer message to test.
.\"
.\"
.SH INTERFACE
.PP
.IR MPS \(rg-specific
DDI.
.\"
.\"
.SH DESCRIPTION
.PP
.BR mi_timer_valid ()
is used to test the validitiy of a timer message when it is removed from a
queue as well as to treat the timer message with the proper disposition as a
side-effect of the test.
.BR mi_timer_valid ()
should always be used to test a timer message (of type
.BR M_PCSIG (9))
that was passed to a
.IR qi_putp (9)
procedure or removed from a queue in the
.IR qi_srvp (9)
procedure.
This is because the timer may have changed it state (been cancelled,
rescheduled, move to another queue) after it was already queued to the
procedure that is now processing it.
If the timer event should not be processed,
.BR mi_timer_valid ()
will return false and will apply any necessary side-effect of the call
(including freeing the message), before returning.
If the timer event should be processed,
.BR mi_timer_valid ()
returns true.
.\"
.\"
.SH USAGE
.PP
.BR mi_timer_valid ()
should be used to check
.BR M_PCSIG (9)
messages that are passed to a
.IR qi_putp (9)
procedure or that have been removed from a queue in the
.IR qi_srvp (9)
procedure of a
.I STREAMS
driver or module that use the
.BR mi_timer (9)
facilities.
.PP
If the
.BR mi_timer_valid ()
function is not called for these messages, the entire
.BR mi_timer (9)
mechanism will break, exposing the system to races and instability.
.\"
.\"
.SH RETURN
.PP
When
.BR mi_timer_valid ()
returns 
.BR true  " (1)
when the message should be processed; and,
.BR false " (0)
when it should not.
.\"
.\"
.SH ERRORS
.PP
.BR mi_timer_valid ()
always succeeds.  However, if passed a
.B NULL
or invalid pointer, or a pointer to an invalid structure, the kernel may
become unstable and a kernel panic may ensue.
.\"
.\"
.SH CONTEXT
.PP
.BR mi_timer_valid ()
can be called from any context, but is intended to be called on
.BR M_PCSIG (9)
message arriving at a
.I STREAMS
driver of module
.IR qi_putp (9)
or
.IR qi_srvp (9)
procedure.
.\"
.\"
.SH MP-STREAMS
.PP
.BR mi_timer_valid ()
is MP-safe.  The implementation uses atomic exchanges to ensure the atomicity
of the timer message state.
.\"
.\"
.SH NOTICES
.PP
.BR mi_timer_valid ()
is an
.IR MPS \(rg-specific
function:
.BR _MPS_SOURCE ,
.B _AIX_SOURCE
or
.B _MAC_SOURCE
must be defined before including DDI/DKI include files to expose this symbol.
.BR "@PACKAGE_TITLE@"
must also have been compiled with
.BR CONFIG_STREAMS_COMPAT_MPS ,
.BR CONFIG_STREAMS_COMPAT_MPS_MODULE ,
.BR CONFIG_STREAMS_COMPAT_AIX ,
.BR CONFIG_STREAMS_COMPAT_AIX_MODULE ,
.BR CONFIG_STREAMS_COMPAT_MAC
or
.B CONFIG_STREAMS_COMPAT_MAC_MODULE
defined.
.PP
Timer messages enter ther target queue as
.BR M_PCSIG (9)
messages.  Whenever a queue that can receive a timer message receives a
.BR M_PCSIG (9)
message, it should call
.BR mi_timer_valid (),
passing the
.BR M_PCSIG (9)
message as a parameter.  If the function returns true, then the timer message is valid and should be
processed.  If the function returns false, then the timer message was either deleted or cancelled.
In this case, the correct course of action is to ignore the message (i.e. do not free it).
.PP
.B Warning:
.\"This function may not be called at interrupt time, and it may not be called twice on the same timer.
.IR MacOT \(rg
docmentation stats that this function may not be called twice on the same timer.
.B @PACKAGE_TITLE@
relaxes this restriction, but the relaxed restriction is non-portable.  The
proper way to requeue a message is to use
.BR mi_timer (9)
with a zero (0)
.I msec
argument.
.PP
Care must be taken when flushing queues that can possibly contain timer
messages.  A form of the
.BR flushq (9)
arguments should be chosen that will not flush
.BR M_PCSIG (9)
messages, or the queue should be frozen and messages flushed manually.
.\"
.\"
.SH IMPLEMENTATION
.PP
Depending on the state of the timer message, it will be treated as follows:
.IP \(bu \w'\(bu\(em'u
If the timer is in the
.B TB_IDLE
state,
.I false
is returned.
.IP \(bu
If the timer is in the
.B TB_ACTIVE
state, it is moved to the
.B TB_TRANSIENT
state and
.I true
is returned.
.IP \(bu
If the timer is in the
.B TB_TRANSIENT
state,
.I true
is returned.
.IP \(bu
If the timer is in the
.B TB_CANCELLED
state, it is moved to the
.B TB_IDLE
state and
.I false
is returned.
.IP \(bu
If the timer is in the
.B TB_RESCHEDULED
state, it is rescheduled, moved to the
.B TB_ACTIVE
state and
.I false
is returned.
.IP \(bu
If the timer is in the
.B TB_ZOMBIE
state, the timer message is freed using
.BR freemsg (9),
and
.I false
is returned.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR mi_timer (9),
.BR mi_timer_alloc (9),
.BR mi_timer_cancel (9),
.BR mi_timer_free (9),
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR mi_timer_valid ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR mi_timer_valid ()
is
compatible with
.IR MPS \(rg,
.IR AIX \(rg,
.IR MacOT \(rg,
and
.IR Solaris \(rg,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR mi_timer_valid ()
is an
.IR MPS \(rg-specific
function and should not be used by portable
.I STREAMS
drivers and modules.
The more common
.BR toid_t
should be used in its stead.
.IP \(em
.BR mi_timer_valid ()
is provided for source level compatibility with
.IR MPS \(rg
for the purpose of porting
.IR MPS \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.BR "@PACKAGE_TITLE@"
.[
@PACKAGE@-@VERSION@
.]
differ from that of
.IR MPS \(rg,
binaries are incompatible.
.IP \(em
.BR mi_timer_valid ()
only provides functionality comparable to
.IR MPS \(rg
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR mi_timer_valid ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
and
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR MPS \(rg
DDI documentation,
.IR MacOT \(rg
DDI documentation,
.[
macotr
.]
.[
macspg
.]
.IR AIX \(rg
documentation.
.[
aixcpc
.]
.\"
.\"
.SH HISTORY
.PP
.BR mi_timer_valid ()
first appeared in
.IR MPS \(rg.
.BR mi_timer_valid ()
is a
Mentat, Inc. function that goes all the way back to the
.RI pre- OSF/1
.I Mentat
implementations.
.BR mi_timer_valid ()
appears in
.IR MacOT \(rg
.[
macspg
.]
and
.IR AIX \(rg.
.[
aixcpc
.]
An undocumented version of
.BR mi_timer_valid ()
appears in
.IR Solaris \(rg.
.\"
.\"
.[
$LIST$
.]
.TI
