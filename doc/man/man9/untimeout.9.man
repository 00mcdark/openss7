'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id$
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date$ by $Author$
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log$
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH UNTIMEOUT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B untimeout
\- stop a timer
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.br
.B #include <sys/dki.h>
.PP
.PD 0
.HP
.BI "int untimeout(int " toid );
.HP
.BI "toid_t untimeout(toid_t " toid );
.HP
.BI "timeout_id_t untimeout(timeout_id_t " toid );
.PD
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I toid
the timeout identifier returned by
.BR timeout (9)
or
.BR qtimeout (9).
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR untimeout ()
stops a timer previously started with
.BR timeout (9).
.I toid
is the timer identifier that was returned from a previous call to
.BR timeout (9).
.PP
.BR untimeout ()
is typically used to stop timers before they expire, and to deallocate timers
before a stream is closed.
.\"
.\"
.SH RETURN
.PP
.BR untimeout ()
returns a
.B timo_t
defined as follows:
.sp
.nf
typedef unsigned long toid_t;
typedef unsigned long timeout_id_t;
.fi
.PP
The return value from
.BR untimeout ()
is undefined and ignored.
.\"
.\"
.SH ERRORS
.PP
.BR untimeout ()
fails silently
.RI ( retval
is ignored) when
the timer associated with the timer identifier
.I toid
no longer exists or is invalid.
.\"
.\"
.SH CONTEXT
.PP
.BR untimeout ()
can be called from any context including: user context,
.IR qi_qopen (9),
.IR qi_qclose (9),
.IR qi_putp (9)
or
.IR qi_srvp (9),
procedures,
.BR bufcall (9),
.BR qbufcall (9),
.BR timeout (9),
or
.BR qtimeout (9)
callback functions,
or interrupt service routines.
Note, however, that behaviour will be different when called from interrupt
service routines or from within the callback being cancelled.
See
.RI \(lq MP-STREAMS ",\(rq below."
.\"
.\"
.SH MP-STREAMS
.PP
.BR untimeout ()
is MP-safe; however, the caller of
.BR untimeout ()
must ensure that the callback function has not returned from running before
calling
.BR untimeout ().
.PP
Because the module is permitted to unload after calling
.BR untimeout ()
for all outstanding timer callbacks, the call to
.BR untimeout ()
will not return until either the callback function has completed, or the
callback function has been cancelled.  Therefore the callback function will be
guaranteed not to run once 
.BR untimeout ()
has returned for all outstanding callbacks
.I when called from the
.BR qclose (9)
.IR procedure .
When called from within the callback being cancelled, or at interrupt context
(having interrupted the callback on the same processor), the function will return
before the callback completes.
.\"
.\"
.SH NOTICES
.PP
.BR untimeout ()
can be called with a
.I toid
returned by
.BR timeout (9),
or
.BR qtimeout (9).
(For
.BR qtimeout (9)
it is more appropriate to use the
.BR quntimeout (9)
function.)
.PP
.BR untimeout ()
must be called for all outstanding timeout calls from the
.IR qi_qclose (9)
procedure of the modules before exiting and unloading.
.PP
Because
.B Linux Fast-STREAMS
.[
lfs
.]
uses object indices to
.B strevent
structures that expire once the callback function has run, when
.BR untimeout ()
is called, it must be called promptly and should never be called after the callback function has
already completed.  Also, the callback function should remove all global references to
.I toid
so that stale timeout call handles do not exist in the system.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR timeout (9),
.BR dtimeout (9),
.BR itimeout (9),
.BR qtimeout (9).
.\"
.\"
.SH BUGS
.PP
.BR untimeout ()
has no known bugs.
.PP
Problems (race conditions) existed prior to
.B streams-0.9.2.5
that exhibited symptoms on multi-core (8-way) machines.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR untimeout ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4"
.[
svr4dk
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
The
.IR UnixWare \(rg
function prototype returns
.BR void .
.IP \(em
Under
.IR LiS ,
.[
lis
.]
.BR timeout (9)
creates a Linux timer structure, assigns it a sequential integer timer
identifier, and places it in a timer list.  Whenever
.I LiS
stops a timer, it
checks the list for the integer timer identifier with interrupts disabled.
This is an exhaustive linear search.  This is inefficient.
.I STREAMS
drivers or modules that stop timers often will experience poorer performance
than if the Linux kernel timer facility was used directly.
.\".IP \(em
.\"Symbol
.\".BR lis_untimeout ()
.\"is provided for compatibility with
.\".IR LiS .
.\"See
.\".BR liscompat (9).
.\".BR lis_untimeout ()
.\"calls
.\".BR untimeout ()
.\"directly.
.IP \(em
.IR AIX \(rg
.[
aixdoc
.]
describes this function as accepting an
.B int
.I bcid
and returning an
.B int
return value.
.B Linux Fast-STREAMS
use of a
.B long
for
.BR toid_t " and " timeout_id_t ,
but which is only internally significant to 32-bits,
maintains compatibility with
.IR "SVR 3"
.[
svr3spg
.]
based systems maintaining the
.B int
prototype.
.IP \(em
.IR Solaris \(rg
.[
soldoc
.]
describes this function as having the following prototype:
.sp
.nf
.BI "clock_t untimeout(timeout_id_t " toid );
.fi
.sp
The
.B clock_t
return value is described as being
.B -1
when the
.I toid
is not found and zero or positive otherwise.
.sp
.B Linux Fast-STREAMS
also exhibits this behaviour.  The zero or positive value is the number
of ticks remaining before expiry of the timer at the time that it was
cancelled.
.B Linux Fast-STREAMS
will only return a value other than
.B -1
when the timer has been cancelled and the callback function has not run.
That is, in the case of a collision between the call to
.B unbufcall
and the buffer callback, 
.B -1
will be returned.
.IP \(em
Both
.IR AIX \(rg
.[
aixdoc
.]
and
.IR OSF/1 \(rg
.[
osfdoc
.]
have different prototypes for
.BR timeout (9)
and
.BR untimeout (9)
when used for
.I STREAMS
as when used for other drivers.  The prototypes for
.BR timeout (9)
and
.BR untimeout (9)
for use by
.I STREAMS
are the old
.I SVR 3
.[
svr3spg
.]
definitions which use an
.B int
for the
.BR toid_t .
.IP \(em
See
.BR timeout (9)
for more information on
.B toid_t .
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR untimeout ()
first appeared in
.IR "SVR 2" .
.[
svr2
.]
.\"
.\"
.[
$LIST$
.]
.TI
