'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: mi_sleeplock.9.man,v 1.1.2.1 2009-06-21 10:38:47 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual
.\" under the terms of the GNU Free Documentation License, Version 1.3 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
.\" copy of the license is included in the section entitled "GNU Free
.\" Documentation License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaning to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF
.\" SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2009-06-21 10:38:47 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: mi_sleeplock.9.man,v $
.\" Revision 1.1.2.1  2009-06-21 10:38:47  brian
.\" - added files to new distro
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore T
.R2
.so openss7.macros
.\"
.\"
.TH MI_SLEEPLOCK 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B mi_sleeplock
\- acquire a lock on a queue private structure
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _MPS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/mpsddi.h>
.HP
.BI "caddr_t \fRmi_sleeplock(\fPqueue_t *" q \fR)\fP;
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue to which the associated private structure is to be acquired and
locked.
.\"
.\"
.SH INTERFACE
.PP
.IR MPS \(rg-specific
DDI.
.PP
.I "Linux Fast-STREAMS"
specific.
.\"
.\"
.SH DESCRIPTION
.PP
.BR mi_trylock (),
.BR mi_sleeplock (9),
and
.BR mi_unlock (9)
are a set of per queue pair Stream locking functions that can be used with the
functions from the
.BR mi_open_comm (9)
family.
.PP
.BR mi_sleeplock ()
attempts to lock the private structure associated with the queue,
.IR q .
When successful, the function returns a pointer to the private structure.
When the lock cannot be immediately required, the calling process is put to sleep awaiting the
release of the lock and awoken either on a signal or upon acquiring the lock.
When unsuccessful (the process is interrupted by a signal), the function returns
.BR NULL .
.\"
.\"
.SH USAGE
.PP
.BR mi_sleeplock ()
simplifies the implementation of private structure locks for fully MP-SAFE
.IR STREAMS (9)
modules and drivers.  The function attempts to lock the private structure associated with queue
pair,
.IR q ,
and serializes access to the associated private structure.  While the lock is held, access to the
private structure is exclusive to the lock holder.
.PP
.BR mi_sleeplock ()
is called during a open or close routine when the routine wishes exclusive access to the private
structure (perhaps to alter state variables).
.PP
When
.BR mi_sleeplock ()
fails to acquire the lock, the caller will sleep.  When the lock is released by the current lock
holder, the sleeping process will be woken.
.\"
.\"
.SH RETURN
.PP
When
.BR mi_sleeplock ()
succeeds, it returns a pointer to the locked private structure associated with queue,
.IR q ;
when unsucessful, it returns
.BR NULL .
.\"
.\"
.SH ERRORS
.PP
.BR mi_sleeplock ()
fails and returns
.B NULL
when the process' sleep is interrupted by a signal.
When
.BR mi_sleeplock ()
fails and returns
.BR NULL ,
the caller has the option of simply reinvoking
.BR mi_sleeplock ().
.\"
.\"
.SH CONTEXT
.PP
.BR mi_sleeplock ()
can be called from any blockable context, including user context, and module open and close
procedures.
.\"
.\"
.SH MP-STREAMS
.PP
.BR mi_sleeplock ()
is MP-safe, however, see
.BR SV_WAIT_SIG (9).
.\"
.\"
.SH NOTICES
.PP
.BR mi_sleeplock ()
must only be called for a private structure that was allocated with
.BR mi_alloc (9)
or
.BR mi_alloc_sleep (9),
or one of the other private structure allocation functions from the
.BR mi_open_comm (9)
family of functions.
.PP
Any queue that uses
.BR mi_sleeplock (9)
should have a queue service procedure.
.PP
Each successful call to
.BR mi_sleeplock ()
must be matched with a corresponding call to
.BR mi_unlock (9)
or processor or process deadlock may occur.
.PP
The lock acquired by
.BR mi_sleeplock ()
on the private structure associated with queue,
.IR q ,
is not a recursive lock.  That is, if
.BR mi_sleeplock ()
is called twice for the same queue,
.IR q ,
and with no intervening
.BR mi_unlock (9),
and the first call to
.BR mi_sleeplock ()
succeeds, the second call will sleep indefinitely  This is the best behaviour for
.IR STREAMS (9)
open and close procedures which are seldomly written with reentrancy in mind.
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR mi_sleeplock ()
is implemented using synchronization variable lock functions.  See
.BR SV_WAIT_SIG (9)
for more information.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR mi_trylock (9),
.BR mi_unlock (9),
.BR SV_WAIT_SIG (9),
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR mi_sleeplock ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR mi_sleeplock ()
is
compatible with
.IR MPS \(rg,
.IR AIX \(rg,
.IR MacOT \(rg,
and
.IR Solaris \(rg,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR mi_sleeplock ()
is an OpenSS7 Project specific implementation of an
.IR MPS \(rg-compatible
function and should not be used by portable
.I STREAMS
drivers and modules.
.IP \(em
.BR mi_sleeplock ()
is provided for use with SS7 drivers and modules that need some automatic locking of queue pair
private structure for speed and efficiency.
.IP \(em
.BR mi_sleeplock ()
does not exist in any other
.IR MPS \(rg
implementation other than
.IR "Linux Fast-STREAMS" .
.PP
See
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
.BR suncompat (9),
and
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
Conforms to
.B OpenSS7
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR mi_sleeplock ()
is new for
.BR "@PACKAGE_TITLE@" .
It is largely equivalent to the
.BR ss7_trylock (9)
SS7 common function that appeared in early releases of the
.B strss7
package and is also contained in
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.[
$LIST$
.]
.TI
