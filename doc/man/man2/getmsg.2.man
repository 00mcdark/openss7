'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) $Id: getmsg.2.man,v 1.1.2.2 2011-02-07 02:17:57 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2011-02-07 02:17:57 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: getmsg.2.man,v $
.\" Revision 1.1.2.2  2011-02-07 02:17:57  brian
.\" - updated manual pages
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH GETMSG 2 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ System Calls"
.\"
.\"
.SH NAME
.B getmsg
\- get next message off a stream
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <stropts.h>
.HP 8
.BI "int getmsg(int " fd ", struct strbuf *" ctlptr ", struct strbuf *" dataptr ", int *" flagsp );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I fd
the file descriptor from which to get a message.
.TP
.I ctlptr
a pointer to a
.B strbuf
structure to hold any control part of the message.
.TP
.I dataptr
a pointer to a
.B strbuf
structure to hold any data part of the message.
.TP
.I flagsp
a pointer to a integer containing passed in and returned flags.
.\"
.\"
.SH DESCRIPTION
.PP
.B getmsg
reads a
.I STREAMS
message from the read queue of a stream head into the
caller supplied buffers.  The read messages will contain a control part or a
data part or both.  The data and control parts of the message are handled
separately by
.BR getmsg ().
.PP
The meaning and interpretation of the contents of the control part and data
part are specific to the
.I STREAMS
module to which the stream head is attached.
The semantics of these contents forms a necessary part of the
.I STREAMS
module
documentation.
.PP
The arguments to
.BR getmsg ()
are interpreted as follows:
.PP
.I fd
specifies a file descriptor referencing an open stream.
.PP
.I ctlptr
a pointer to a
.B strbuf
structure which describes the area used to store the control part of the
received message.
.PP
.I datptr
a pointer to a
.B strbuf
structure which describes the area used to store the data part of the
received message.
.PP
The
.B strbuf
structure contains the following members:
.sp
.nf
\fC\s-1\
struct strbuf {
    int maxlen;         /* maximum buffer length */
    int len;            /* length of data */
    char *buf;          /* ptr to buffer */
};
\s+1\fR
.fi
.TP
.I maxlen
specifies the maximum number of bytes that the buffer pointed to by
.I buf
can hold.
When 0 is specified,
.I maxlen
requests that only zero-length message be retrieved.
When -1 is specified,
.I maxlen
requests that the corresponding control or data part not be retrieved.
When set to a positive value,
.I maxlen
requests that at maximum only
.I maxlen
bytes of the control or data part be retrieved.
.TP
.I len
is a return value only.  See
.BR "\*(lqRETURN VALUES\*(rq" ,
below.
.TP
.I buf
points to the buffer into which the data or control information is to be placed.
.PP
If
.IR ctlptr " or " datptr
is
.BR NULL ,
or the corresponding
.I maxlen
field is set to -1, the control or data part of the message is not
processed and is left on the stream head read queue.
.PP
.I flagsp
should point to an integer that indicates the type of message
the user is able to receive and will return the type of message received.
.PP
For
.BR getmsg (),
.I flagsp
points to an integer that
can have one of the following values:
.TP
.B 0
requests retrieval of the first available message on the stream
head read queue regardless of message priority;
.TP
.B RS_HIPRI
requests retrieval of the first high priority message on the stream
head read queue, and that low priority messages not be processed.
.PP
If the stream head is set for non-blocking operation and no message of the
specified type and priority band is available to be read,
.BR getmsg ()
will fail and set
.I errno
to
.RB [ EAGAIN "] or [" EWOULDBLOCK ].
If the stream head is set for blocking operation,
.BR getmsg ()
will block until a message of the specified type and priority band becomes
available on the stream head read queue, or the call is interrupted by a
signal.
If the call is interrupted by a signal in this fashion,
.BR getmsg ()
will fail and set
.I errno
to
.BR EINTR .
.\"
.PP
If a hangup occurs on the stream from which messages are to be retrieved,
\fBgetmsg\fR continues to operate normally, as described above, until the
stream head read queue is empty.  Thereafter, it returns 0 in the \fIlen\fR
field of \fIctlptr\fR and \fIdataptr\fR.
.\"
.\"
.SH "RETURN VALUES"
.PP
Upon failure,
.BR getmsg ()
will return -1 and set
.I errno
as described under
.BR \*(lqERRORS\*(rq ,
below.
.PP
Upon success,
.BR getmsg ()
will return a non-negative value with any of the following flags set:
.TP
.B MORECTL
indicates that more control information belonging to the same message is
waiting to be retrieved from the stream head read queue with a subsequent
.BR getmsg ()
operation.
.TP
.B MOREDATA
indicates that more data belonging to the same message is waiting to be
retrieved from the stream head read queue with a subsequent
.BR getmsg ()
operation.
.TP
.B 0
indicates that the entire message was received successfully.
.PP
.BR getmsg ()
with the appropriate arguments will retrieve a higher priority message before
the remainder of a partially retrieved lower priority message is retrieved.
.PP
Upon success,
.BR getmsg ()
will also alter the
.I len
values in the
.B strbuf
structures pointed to by
.IR ctlbuf " and " datbuf
and the integer value pointed to by
.IR flagp ,
as follows:
The
.I maxlen
member is not altered on return.
If the
.IR ctlptr " or " datptr
are not
.BR NULL ,
and
.I maxlen
is not -1,
the existence and length of the retrieved message is returned in the
.I len
member.
If there is no control or data part retrieved, the
.I len
member of the corresponding
.B strbuf
structure is set to -1.
.PP
If the control or data part retrieved is of zero-length, the control or data
part is removed from the stream head read queue and the returned
.I len
is set to 0.
If
.I maxlen
is greater than or equal to 0 and the number of bytes in the control or
data part is greater than
.IR maxlen ,
only
.I maxlen
bytes are retrieved and the remaining bytes of the corresponding part are left
on the stream head read queue.  In the return value
the corresponding more flag
.RB ( MORECTL " or " MOREDATA )
is set.
The
.I buf
member is not altered on return.
.PP
The integer pointed to by
.I flagsp
will contain one of the following values:
.TP
.BR 0,
the retrieved message is not a high priority message;
.TP
.BR RS_HIPRI,
the retrieved message is a high priority message.
.\"
.\"
.SH ERRORS
.PP
Upon failure,
.BR getmsg ()
will
return -1 and set
.I errno
as follows:
.TP
.RB [ EISDIR ]
.I fd
refers to a directory.
.TP
.RB [ EBADF ]
.I fd
is not a valid file descriptor or is not open for reading.
.TP
.RB [ EFAULT ]
A specified address is outside the user's accessible address space.
Specified addresses include,
.IR ctlptr ", " datptr ", " flagsp ,
and the
.I buf
fields of the
.B strbuf
structure pointed to by
.IR cttlptr " and " datptr .
.TP
.RB [ ENODEV ]
.I fd
refers to a device that does not support the
.BR getmsg ()
system call.
.TP
.RB [ ENOSTR ]
.I fd
refers to a device that has no stream associated with it.
.TP
.RB [ EIO ]
I/O error, or,
.I fd
refers to a stream that is open but is in the process of closing.
.\".TP
.\".RB [ EPERM ]
.\".I fd
.\"points to a dynamic device and read permission on the device is denied.
.\"
.\"
.\"
.TP
.RB [ EINVAL ]
.I fd
is linked under a multiplexing driver; or,
.BR getmsg ()
is not supported; or, the flags pointed to by
.I flagsp
were invalid for
.BR getmsg ().
.TP
.RB [ EAGAIN "], [" EWOULDBLOCK ]
The stream head is set for non-blocking operation and
.BR getmsg ()
would block: that is, no message of the requested type and priority band is
available to be read.
.TP
.RB [ EINTR ]
A signal was caught, or an
.BR M_SIG (9)
message processed, before the call to
.BR getmsg ()
could return any data.
.TP
.RB [ ENOSTR ]
.I fd
has no stream associated with the file descriptor.
.TP
.RB [ EBADMSG ]
The message at the head of the queue is of an invalid message type (valid
message types include:
.BR M_DATA ", " M_PROTO " and " M_PCPROTO );
or, the message at head of the of the queue is not of the requested type
as specified by
.IR flagsp .
.PP
Other errors may be returned by
.BR getmsg ().
If the
.I STREAMS
module sends a
.BR M_ERROR (9)
message to the stream head, the error returned on all subsequent read
operations, including
.BR getmsg (),
is specified in the
.BR M_ERROR (9)
message by the
.I STREAMS
module.
Which errors are returned under which conditions form part of the
necessary documentation of the
.I STREAMS
module.
.\"
.\"
.SH NOTICES
.PP
.SS Multi-Threading
.PP
.BR getmsg ()
is thread-safe; however, multiple threads performing concurrent partial reads
on the same stream will interfere with each other.  POSIX mandatory file
locks, (see
.BR lockf (3)),
can be used to avoid interference.
.SS "Asynchronous I/O"
.PP
If the file is set for blocking operation (see
.BR fcntl (2)),
then
.BR getmsg ()
will block waiting for a  message to arrive on the stream head.  When the file
is set for non-blocking operation,
.BR getmsg ()
will not block, but will return the appropriate error number
.RB ([EBADMSG "], [" ERESTARTSYS "], [" EAGAIN "], [" EWOULDBLOCK ])
if a message of the correct type was not immediately available for retrieval at the stream head.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR intro (2),
.BR poll (2s),
.BR putmsg (2s),
.BR read (2s),
.BR write (2s),
.BR streamio (7).
.\"
.\"
.SH BUGS
.PP
.BR getmsg ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR getmsg ()
is compatible with SVID,
.[
svid
.]
XID,
.[
xbd5
.]
SUSv2,
.[
susv2
.]
SUSv3,
.[
susv3
.]
POSIX,
and implementations based on
.IR "SVR 4.2" ,
.[
svr42cr
.]
including
.IR AIX \(rg,
.IR HP-UX \(rg,
.IR OSF/1 \(rg,
.IR Solaris \(rg,
.IR SUPER-UX \(rg,
.IR UnixWare \(rg,
.IR UXP/V \(rg.
.\"
.\"
.SH CONFORMANCE
.PP
SVID,
.[
svid
.]
XID,
.[
xbd5
.]
SUSv2,
.[
susv2
.]
SUSv3,
.[
susv3
.]
POSIX.
.\"
.\"
.SH HISTORY
.PP
.BR getmsg ()
first appeared in SVR 3.
.[
svr3
.]
.\"
.\"
.[
$LIST$
.]
.TI
