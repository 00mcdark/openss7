'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) doc/man/man4/ptem.4.man
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH PTEM 4 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ System File Formats"
.\"
.\"
.SH NAME
.B ptem
\- \fISTREAMS\fR Pseudo-Terminal Emulation Module
.\"
.\"
.SH SYNOPSIS
.HP
.BI "int ioctl(" fd ", " \fRI_PUSH\fP ", " \fR\(lqptem\(rq\fP );
.\"
.\"
.SH DESCRIPTION
.PP
.\"
.SS "Hardware Emulation Module"
.PP
If a Stream supports a terminal interface, a driver or module that understands all intput-output
controls to suport terminal semantics (specified by
.BR termio (7)
and
.BR termios (3))
is needed.  If there is no hardware driver that understands all input-output control commands
downstream from the
.B ldterm
module, a hardware emulation module must be placed downstream from the line discipline module.  The
function of the hardware emulation module is to understand and acknowledge the input-output controls
that may be sent t the process at the Stream head and to mediate the passage of control information
downstream.  The combination of the line discipline module and the hardware emulation module behaves
as if there were an actual terminal on that Stream.
.PP
The hardware emulation module is necessary whenever there is no
.BR tty (4)
driver at the end of the Stream.  For example, it is necessary in a pseudo-terminal situation where
there is process to process communication on one system and in a network situation where a termio
interface is expected (e.g., remote login) but there is no
.BR tty (4)
driver on the Stream.
.PP
Most of the action taken by the hardware emulation module are the same regardless of the underlying
architecture.  However, there are some actions that are different depending on whether the
communication is local or remote and whether the underlying transport protocol used to support the
remote connection.  For example,
.BR rlmod (4),
is a hardware emulation module for the TCP/IP transport provider interface.  This hardware emulation
module
behaves ina way understood by the TPC/IP protocol driver that exists below
.BR rlmod (4).
On receive of a
.B TCSBRK
input-output control,
.BR rlmod (4)
sends a
.BR M_BREAK (9)
message downstream.  When the baud rate is 0, the hardware emulation module sens a "TPI" message
requesting disconnect.  These actions are valid for a network situation but may not make sense in
other environments when there is no module/driver below to understand the "TPI" message or handle
.BR M_BREAK (9)
messages.
.PP
Each hardware emulation module has a
.BR qi_qopen (9),
.BR qi_qclose (9),
read and write queue
.BR qi_putp (9)
procedure.
.PP
THe hardware emulation modules does the following:
.IP \(bu \w'\(bu\(em'u
Processes, if appropriate, and acknowledges receipt of the following intput-output controls on its
write-side queue by sendin an
.BR M_IOCACK (9)
message upstream:
.BR TCSETA ,
.BR TCSETAW ,
.BR TCSETAF ,
.BR TCSETS ,
.BR TCSETSW ,
.BR TCSETSF ,
.BR TCGETA ,
.BR TCGETS " and
.BR TCSBRK .
.IP \(bu
Akcnowledges the Extended UNIX colde (\(lqEUC\(rq) input-output controls.
.IP \(bu
If the environment supports windowing, it acknowledges the windowing input-output controls:
.BR TIOCSWINSZ ,
.BR TIOCGWINSZ " and
.BR JWINSIZE .
If the environment does not support windowing, it sends an
.BR M_IOCNAK (9)
message upstream.
.IP \(bu
If any other input-output controls are received on its write-side queue, the hardware emulation
mdoule sends an
.BR M_IOCNAK (9)
message upstream.
.IP \(bu
When the hardware emulation module receives an
.BR M_IOCTL (9)
message on its write queue to set the baud rate to zero (0)
.RB ( TCSETAW
with
.I CBAUD
set to
.IR B0 ),
it sends an
.BR M_IOCACK (9)
message upstream and an appropriate message downstream.  For networking situations, this will
probably be a
.BR M_PROTO (9)
message which is a,
.BR tpi (7),
Transport Provider Interface,
.B T_DISCON_REQ (7),
message requesting the transport provider to disconnect.
.IP \(bu
All other messages (e.g,
.BR M_DATA (9))
not mentioned here are passed to the next module or driver in the Stream.
.PP
The hardware emulation module processes messages in a way consistent with the driver that exists
below.
.\"
.SS "Pseudo-Terminal Emulation Module"
.PP
Since the pseudo-terminal subsystem has no hardware driver downstream from the
.BR ldterm (4)
module to process the terminal input-output control commands, another module that understands
input-output control commands,
.BR ptem ,
is pushed onto the Stream before
.BR ldterm (4).
The
.B ptem
module processes all the terminal input-output commands and mediates the passage of control
information downstream.
.PP
.BR ldterm (4)
and
.B ptem
together behave like a real terminal.  Since there is no real terminal or modem in the
pseudo-terminal subsystem , some of the input-output control commands are ignored and cause on an
acknowledgement of the command.  The
.B ptem
module keeps track of the terminal parameter set by various set commands such as
.B TCSETA
or
.B TCSETAW
but does not usually perform any action.  For example, if one of the set input-output control
commands is called, none of the bits in the
.I c_cflag
field of
.BR termio (7)
has any effect on the pseudo-terminal except if the baud rate is set to zero
.RB ( 0 ).
When the baud rate is set to zero
.RB ( 0 ),
it has the effect of hanging up the pseudo-terminal.
.PP
The pseudo-terminal has no concept of parity so none of the flags in the
.I c_iflag
that control the processing of parity errors have any effect.  The delays specified in the
.I c_oflag
field are also not supported.
.PP
The
.B ptem
module does the following:
.IP \(bu \w'\(bu\(em'u
Processes, if appropriate, and acknowledges receipt of the following input-output controls on its
write-side queue by sending an
.BR M_IOCACK (9)
message upstream:
.BR TCSETA ,
.BR TCSETAW ,
.BR TCSETAF ,
.BR TCSETS ,
.BR TCSETSW ,
.BR TCSETSF ,
.BR TCGETA " and"
.BR TCGETS .
.IP \(bu
Keeps track of the window size; information needed for the
.BR TIOCSWINSZ ,
.BR TIOCGWINSZ ,
.BR JWINSIZE ,
input-output control commands.
.IP \(bu
When it receives any other input-output control command on its write-side queue, it sends an
.BR M_IOCNAK (9)
message upstream.
.IP \(bu
It passes downstream the following input-output control commands after processing them:
.BR TCSETA ,
.BR TCSETAW ,
.BR TCSETAF ,
.BR TCSETS ,
.BR TCSETSW ,
.BR TCSETSF ,
.BR TCSBRK " and"
.BR TIOCSWINSZ .
.IP \(bu
.B ptem
frees any
.BR M_IOCNAK (9)
messages it receives on its read-side queue in case the
.BR pckt (4)
module is not on the pseudo terminal subsystem and the above input-output controls get to the
master's Stream head which would then send an
.BR M_IOCNAK (9)
message.
.IP \(bu
In its open routine,
.B ptem
sends a
.BR M_SETOPTS (9)
message upstream requesting allocation of a controlling terminal.
.IP \(bu
When the
.B ptem
modules receives an
.BR M_IOCTL (9)
message of type
.B TCSBRK
on its read-side queue, it sends an
.BR M_IOCACK (9)
message downlstream and a
.BR M_BREAK (9)
message upstream.
.IP \(bu
When
.B ptem
receives an intput-output control message on its write-side queue to set the baud rate to zero
.RB ( TCSETAW
with
.I CBAUD
set to
.BR B0 ),
it sends an
.BR M_IOCACK (9)
message upstream and a zero-length message downstream.
.IP \(bu
When
.B ptem
receives an
.BR M_IOCTL (9)
message of type
.B TIOCSIGNAL
on its read queue, it sends an
.BR M_IOCACK (9)
downstream and a
.BR M_PCSIG (9)
message upstream where the signa number is the same as in the
.BR M_IOCTL (9)
message.
.IP \(bu
When
.B ptem
receives an
.BR M_IOCTL (9)
of type
.BR TIOCREMOTE
on its read queue, it sends an
.BR M_IOCACK (9)
message downstream and the appropriate
.BR M_CTL (9)
message upstream to enable/disable canonical processing.
.IP \(bu
When
.B ptem
receives an
.BR M_DELAY (9)
message on its read or write queue, it discards the message and does not act on it.
.IP \(bu
When
.B ptrm
receive an
.BR M_IOCTL (9)
message with type
.B JWINSIZE
on its write side queue and if the values in the
.BR jwinsize
structure of
.B ptem
are not zero, it sends an
.BR M_IOCACK (9)
message upstream with the
.BR jwinsize
structure.  If the values are zero, it sends a
.sp
.RS
The
.B jwinsize
structure is defined in
.B <sys/jioctl.h>
as follows:
.sp
.nf
\fC\s-1\
struct jwinsize {
    char bytesx;
    char bytesy;
    short bitsx;
    short bitsy;
};\s+1\fP
.fi
.TP \w'\ bytesx\(em'u
.I bytesx
Horizontal window size in characters.
.PD 0
.TP
.I bytesy
Vertical window size in characters.
.TP
.I bitsx
Horizontal window size in bits.
.TP
.I bitsy
Vertical window size in bits.
.PD
.RE
.BR M_IOCNAK (9)
message upstream.
.IP \(bu
When
.B ptem receives an
.BR M_IOCTL (9)
message of type
.B TIOCGWINSZ
on its write queue and if the values in the
.BR winsize
structure are not zero, it sends an
.BR M_IOCACK (9)
message upstream with the
.BR winsize
structure.  If the values are zero, it sends an
.BR M_IOCNAK (9)
messag upstream.  It also saves the information passed to it in the
.BR winsize
structure and sends a
.IR STREAMS (9)
signal message for signal
.RI { SIGWINCH }
upstream to the slave process if the size changed.
.sp
.RS
The
.B winsize
structure is defined in
.B <sys/termios.h>
as follows:
.sp
.nf
\fC\s-1\
struct winsize {
    unsigned short ws_row;
    unsigned short ws_col;
    unsigned short ws_xpixel;
    unsigned short ws_ypixel;
};\s+1\fP
.fi
.TP \w'\ ws_ypixel\(em'u
.I ws_row
The number of rows for the window vertical dimension.
.PD 0
.TP
.I ws_col
The number of columns for the window horizontal dimension.
.TP
.I ws_xpixel
The number of pixels for the window horizontal dimension.
.TP
.I ws_ypixel
The number of pixels for the window vertical dimension.
.PD
.RE
.IP \(bu
When
.B ptem receives an
.BR M_IOCTL (9)
message of type
.B TIOCGWINSZ
on its read queue and if the values in the
.BR winsize
structure are not zero, it sends an
.BR M_IOCACK (9)
message downstream with the
.BR winsize
structure.  If the values are zero, it sends an
.BR M_IOCNAK (9)
messag downstream  It also saves the information passed to it in the
.BR winsize
structure and sends a
.IR STREAMS (9)
signal message for signal
.RI { SIGWINCH }
upstream to the slave process if the size changed.
.IP \(bu
All other messages are passed to the next module or driver.
.\"
.SS "Open and Close Routines"
.PP
.\"
.SS "Write-Side Processing"
.PP
.\"
.SS "Read-Side Processing"
.PP
.\"
.\"
.SH USAGE
.PP
.B ptem
forms part of the
.IR "SVR4 Terminal Subsystem" .
As such, it is normally the first module of two modules pushed on the slave
side of a pseudo-terminal,
.BR pts (4).
It is intended to work with
.BR ldterm (4)
pushed above it, and
.BR pckt (4)
pushed on the master side of a pseduo-terminal to form a completely functional
pseudo-terminal device.
.\"
.\"
.SH IOCTLS
.PP
Input-output controls are processed upon the reception of a
.BR M_IOCTL (9)
message.  Any
.BR M_IOCNAK (9)
messages received from downstream are discarded (caused by lack of a
.BR pckt (4)
module pushed on the master side of the pseudo-terminal).
.PP
The following are processed on the write queue.
.TP \w'\fBTIOCGWINSZ\fR\(em'u
.B TCSETA
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TCSETAW
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
If the baud rate is set to zero
.RI ( CBAUD
set to
.BR BO ),
a zero-length message is sent downstream.
.TP
.B TCSETAF
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TCSETS
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TCSETSW
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TCSETSF
Processed and acknowledged on write queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TCGETA
Processed and acknowledged on write queue.
.TP
.B TCGETS
Processed and acknowledged on write queue.
.TP
.B TIOCSWINSZ
Also echoed downstream for use by
.BR pckt (4).
.TP
.B JWINSIZE
Processed and acknowledged on write queue.
Negatively acknowledged if values are zero.
Saves information in structure.
.PP
The following are processed on the read queue.
.TP \w'\fBTIOCGWINSZ\fR\(em'u
.B TCSBRK
Processed and acknowledged on read queue.
Also echoed downstream for use by
.BR pckt (4).
.TP
.B TIOCSIGNAL
Processed and acknowledged on read queue.
Also, an
.BR M_PCSIG (9)
message is sent upstream with the signal number contained in the message.
.TP
.B TIOCREMOTE
Processed and acknowledged on read queue.
Also, an
.BR M_CTL (9)
message is sent upstream to
.BR ldterm (4)
to enable or disable canonical processing.
.PP
The following are processed on the read or write queue.
.TP \w'\fBTIOCGWINSZ\fR\(em'u
.B TIOCGWINSZ
Processed and acknowledged on write queue.
Negatively acknowledged if values are zero.
Saves information in structure.
If different, sends
.BR M_PCSIG (9)
with signal
.RI { SIGWINCH }.
.\"
.\"
.\".SH NOTICES
.\".PP
.\"
.\"
.\".SH EXAMPLES
.\".PP
.\"
.\"
.SH MODULES
.PP
.B ptem
is a
.I STREAMS
pushable module called
.RI \(lq ptem \(rq.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR ldterm (4),
.BR pckt (4),
.BR ptc (4),
.BR ptm (4),
.BR ptmx (4tty),
.BR pts (4tty),
.BR pty (4),
.BR ttcompat (4),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.B ptem
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.B ptem
is compatible with
.IR "SVR 4.2" ,
.[
svr42
.]
and implementations based on
.IR "SVR 4.2" ,
.[
svr42
.]
such as
.IR Solaris \(rg,
.[
soldoc
.]
.IR OSF/1 \(rg,
.[
osfdoc
.]
and
.IR UnixWare \(rg,
.[
uw7doc
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IP \(em
.PP
See
.BR STREAMS (9)
for more compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2,
.[
svr42
.]
SVID,
.[
svid
.]
XID,
.[
xbd5
.]
SUSv2,
.[
susv2
.]
SUSv3.
.[
susv3
.]
.\"
.\"
.SH HISTORY
.PP
.B pckt
first appeared in SVR 3.
.[
svr3
.]
.\"
.\"
.[
$LIST$
.]
.TI
