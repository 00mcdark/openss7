'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) doc/man/man4/sc.4.man
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH SC 4 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Modules"
.\"
.\"
.SH NAME
.B sc
\- \fISTREAMS\fR configuration module
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stropts.h>
.br
.B #include <sys/sc.h>
.HP
.IB t " = open(" /dev/nuls ", " 0 );
.HP
.BI ioctl( t ", " I_PUSH ", " \*(lqsc\*(rq );
.\"
.\"
.SH DESCRIPTION
.PP
.B sc
is a
.I STREAMS
configuration module for
.BR "Linux Fast-STREAMS" .
It interprets a set of
.B sc
.BR ioctl (2s)
commands and provides information about the streams configuration.
.B sc
does not interpret any
.BR M_DATA ", " M_PROTO " or " M_PCPROTO
messages either from above or below the module.
.B sc
can be pushed on the the null stream
.BR nuls (4)
or any other suitable stream available to the caller (e.g.
.BR sad (4)).
.\"
.\"
.SH USAGE
.PP
The
.B sc
module is not intended to be used directly by application program developers.
It is used by the
.BR scls (8)
utility an other utilities needing to enquire about the configuration of
.BR "Linux Fast-STREAMS" .
.\"
.\"
.SH IOCTLS
.PP
This subsection details the
.BR ioctl (2s)
commands that are made available by pushing the
.B sc
module.  For general information on input-output controls for
.I STREAMS
drivers, see
.BR streamio (7).
.\"
.SS SC_IOC_LIST
.PP
.I arg
is a pointer to a
.BR sc_list
structure in the user's address space.
.PP
The
.B sc_list
structure contains the following members:
.PP
.RS
.nf
\fC\s-1\
struct sc_list {
    int sc_nmods;
    struct sc_mlist *sc_mlist;
};
\s+1\fP
.fi
.TP \w'sc_mlist\(em'u
.I sc_nmods
On call, specifies the number of
.B sc_mlist
structures that are provided in the caller's buffer pointed to by
.IR sc_mlist .
On return, specifies the number of
.B sc_mlist
structures that are available to be written to the caller's buffer pointed to
by
.IR sc_mlist ,
regardless of the space provided by the caller.
.TP
.I sc_mlist
Provides a pointer to a user buffer that contains at least
.I sc_nmods
number of
.B sc_mlist
structures in an array.
The module will return no more than the number of modules available, or the
number of modules requested,  whichever is less.  However,
.I sc_nmods
will always return the number of modules available.
.PP
By calling with a
.I sc_nmods
of zero and a
.I sc_mlist
of
.BR NULL ,
the caller can determine the number of modules that are available to
be returned in
.IR sc_mlist
so that the buffer may be appropriately sized for a subsequent call.
.RE
.PP
The
.B sc_mlist
structure contains the following members:
.PP
.RS
.nf
\fC\s-1\
struct sc_mlist {
    int major;
    struct sc_module_info mi[4];
    struct sc_module_stat ms[4];
};
\s+1\fP
.fi
.TP \w'major\(em'u
.I major
Specifies the
.I major
device number for the driver whose information is contained in this entry.
.TP
.I mi
Contains the
.B module_info
structures associated with the driver with the
.I major
device number specified; or with the module if the
.I major
device number is zero.
The four
.I mi
structures correspond to those associated with the
.I qi_minfo
field of the
.IR st_rdinit ", " st_wrinit ", " st_muxrinit " and " st_muxwinit
.BR qinit (9)
structures referenced by the driver or module's
.BR streamtab (9)
structure.
.\"Note that if the driver definition contains more than one
.\".BR module_info (9)
.\"structure in the definition, only that associated with the write side of the upper multiplexer
.\"(i.e.,
.\".I st_wrinit
.\"in
.\".BR streamtab (9))
.\"will be retrieved.
For details of the
.B module_info
structure, see
.BR module_info (9).
.TP
.I ms
Contains the
.B module_stats
structures associated with the driver with the
.I major
device number specified; or with the module if the
.I major
device number is zero.
The four
.I ms
structures correspond to those associated with the
.I qi_mstat
field of the
.IR st_rdinit ", " st_wrinit ", " st_muxrinit " and " st_muxwinit
.BR qinit (9)
structures referenced by the driver or module's
.BR streamtab (9)
structure.
.\"Note that if the driver definition contains more than one
.\".BR module_stat (9)
.\"structure in the definition, only that associated with the write side of the upper multiplexer
.\"(i.e.,
.\".I st_wrinit
.\"in
.\".BR streamtab (9))
.\"will be retrieved.
For details of the
.B module_stat
structure, see
.BR module_stat (9).
.RE
.\"
.SS SC_IOC_TUNE
.PP
.I arg
is a pointer to an
.B sc_tlist
structure in the user's address space.
.PP
The
.B sc_tlist
structure contains the following members:
.PP
.RS
.nf
struct sc_tlist {
    int sc_ntune;
    struct sc_tune *sc_list;
};
.fi
.TP
.I sc_ntune
On call, specifies the number of
.B sc_tune
structures that are provided in the caller's buffer pointed to by
.IR sc_list .
On return, specifies the number of
.B sc_tune
structures that are available to be written to the caller's buffer pointed to
by
.IR sc_list ,
regardless of the space provided by the caller.
.TP
.I sc_list
Provides a pointer to a user buffer that contains at least
.I sc_ntune
number of
.B sc_tune
structures in an array.
The module will return no more than the number of tunable objects available,
or the number of tunable objects requested, whichever is less.  However,
.I sc_ntune
will always return the number of modules available.
.PP
By calling with a
.I sc_ntune
of zero and a
.I sc_list
of
.BR NULL ,
the caller can determine the number of modules that are available to be
returned in
.IR sc_list
so that the buffer may be appropriately sized for a subsequent call.
.RE
.PP
The
.B sc_tune
structure contains the following members:
.sp
.RS
.nf
\fC\s-1\
struct sc_tune {
    long sc_major;
    char sc_name[FMNAMSZ + 1];
    int sc_flags;
    ssize_t sc_minpsz;
    ssize_t sc_maxpsz;
    size_t sc_hiwat;
    size_t sc_lowat;
    int sc_trclevel;
};
\s+1\fP
.fi
.TP \w'\fIsc_trclevel\fR\(em'u
.I sc_major
On call, specifies the major device number for the driver whose information is
to be tuned or zero for a module.  When unused, this member is set to zero.
This member is always set on return to the major device number of the STREAMS
driver or zero for a STREAMS module.
.TP
.I sc_name
On call, provides the name of the STREAMS module or driver to which tunables
are to be applied.  When unused, the first character of this field is set to
null (0).  This member is always set on return to the name of the STREAMS
driver or module to which the tunable object applies.
.TP
.I sc_flags
Flags that indicate which of the folllowing tunables are to be applied an to
which queues they are to be applied.
.I sc_flags
can be a bitwize OR of zero or more of the following values:
.sp
.RS
.TP \w'\fBSC_SET_LOWERMUX\fR\(em'u
.B SC_SET_MINPSZ
When set, the value in
.I sc_minpsz
will be applied.
.PD 0
.TP
.B SC_SET_MAXPSZ
When set, the value in
.I sc_maxpsz
will be applied.
.TP
.B SC_SET_HIWAT
When set, the value in
.I sc_hiwat
will be applied.
.TP
.B SC_SET_LOWAT
When set, the value in
.I sc_lowat
will be applied.
.TP
.B SC_SET_TRCLEVEL
When set, the value in
.I sc_trclevel
will be applied.
.TP
.B SC_SET_RDQUEUE
When set, tunables will apply to the read queue.
.TP
.B SC_SET_WRQUEUE
When set, tunables will apply to the write queue.
.TP
.B SC_SET_LOWERMUX
When set, tunables will apply to the lower multiplex.
.PD
.RE
.TP
.I sc_minpsz
Provides the minimum packet size accepted by the queue.  This field is only
significant if
.B SC_SET_MINPSZ
is set in
.IR sc_flags .
.TP
.I sc_maxpsz
Provides the maximum packet size accepted by the queue.  This field is only
significant if
.B SC_SET_MAXPSZ
is set in
.IR sc_flags .
.TP
.I sc_hiwat
Provides the high water mark for the queue.  This field is only
significant if
.B SC_SET_HIWAT
is set in
.IR sc_flags .
.TP
.I sc_lowat
Provides the low water mark for the queue.  This field is only
significant if
.B SC_SET_LOWAT
is set in
.IR sc_flags .
.TP
.I sc_trclevel
Provides the trace level for the queue.  This field is only
significant if
.B SC_SET_TRCLEVEL
is set in
.IR sc_flags .
.RE
.\"
.SS SC_IOC_STATS
.PP
.I arg
is a pointer to an
.B sc_slist
structures in the user's address space.
.PP
The
.B sc_slist
structure contains the following members:
.PP
.RS
.nf
struct sc_slist {
    int sc_nstat;
    struct sc_stat *sc_list;
};
.fi
.TP
.I sc_nstat
On call, specifies the number of
.B sc_stat
structures that are provided in the caller's buffer point to be
.IR sc_list .
On return, specifies the number of
.B sc_stat
structure that are available to be written to the caller's buffer pointed to
by
.IR sc_list ,
regardless of the spaced provided by the caller.
.TP
.I sc_list
Provides a pointer to a user buffer that contains at least
.I sc_nstat
mber of
.B sc_stat
structures in an array.
The module will return no more than the number of statistics objects
available, or the number of statistics objects requested, whichever is less.
However,
.I sc_nstat
will always return the number of objects available.
.PP
By calling with a
.I sc_nstat
of zero and a
.I sc_list
of
.BR NULL ,
the caller can determine the number of objects that are available to be
returned in
.IR sc_list
so that the buffer may be appropriately sized for a subsequent call.
.RE
.PP
The
.B sc_stat
structure contains the following members:
.sp
.RS
.nf
\fC\s-1\
struct sc_stat {
    unsigned long sc_alloc;
    unsigned long sc_hiwat;
};
\s+1\fP
.fi
.TP \w'\fIsc_hiwat\fR\(em'u
.I sc_alloc
On return, this member is set to the current number of allocated objects of the
type indicated by the index into the array.
.TP
.I sc_hiwat
On return, this member is set to the high water mark of allocations of objects
of the type indicated by the index into the array since the last system
reboot.
.RE
.PP
Each index in the array pointed to by
.I sc_list
corresponds to a different dynamically allocated object as follows (in order
of index):
.TP \w'\fBSC_DYN_STREVENT\fR\(em'u
.B SC_DYN_STREAM
The number of
.B shinfo
structures allocated, which corresponds to the number of Stream heads
allocated.
.TP
.B SC_DYN_QUEUE
The nunber of
.B queinfo
structures allocated, which corresponds to the number of queue pairs
allocated.
.TP
.B SC_DYN_MSGBLOCK
The number of
.B mbinfo
structure allocated separately, which corresponds to the number of message,
.BR mblk_t (9),
blocks allocated.
Linux Fast-STREAMS does not separately allocate message blocks, but allocates
a message block, data block and fast buffer simultaneously, and this number is
always zero.
.TP
.B SC_DYN_MDBBLOCK
The number of
.B dbinfo
structures allocated separately, which corresponds to the number of data,
.BR dblk_t (9)
blocks allocated.
Linux Fast-STREAMS does not separately allocate data blocks, but allocates a
message block, data block and fast buffer simultaneously, and this number
represents the number of combined message-data-fast-buffer allocations.
.TP
.B SC_DYN_LINKBLK
The number of
.B linkinfo
structures allocated, which corresponds to the number of link,
.BR linkblk (9)
blocks allocated.  Link blocks are used when performing temporary or permanent
linkage of a Stream under a multiplexing driver.  See
.IR I_LINK (7)
and
.IR I_PLINK (7).
.TP
.B SC_DYN_STREVENT
The number of
.B seinfo
structures allocated, which corresponds to the number of STREAMS event,
.BR strevent (9),
blocks allocated.  STREAMS event blocks are used for timers, bufcalls, and
welds.
.TP
.B SC_DYN_QBAND
The number of
.B bandinfo
structures allocated, which corresponds to the number of queue band,
.BR qband (9),
structures allocated.  Queue band structures are allocated for every message
band from 1 to the highest referenced queue band for a queue in a queue pair.
.TP
.B SC_DYN_STRAPUSH
The number of
.B apinfo
structures allocated, which corresponds to the number of autopush structures
allocated.  An autopush structure is allocated for each autopush specification
for a driver.
.TP
.B SC_DYN_DEVINFO
The number of
.B devinfo
structures allocated, which corresponds to the number of device information
structures allocated for Solaris compatibility.
.TP
.B SC_DYN_MODINFO
The number of
.B mdlinfo
structures allocated, which corresponds to the number of module information
structures allocated for Solaris compatibility.
.TP
.B SC_DYN_SYNQ
The number of
.B syncq
structures allocated, which corresponds to the number of syncrhonization
barriers associated with STREAMS modules and drivers requiring
synchronization.
.\"
.\"
.SH SIGNALS
.PP
When a configuration change is detected by the
.B sc
module that would result in a different response to the
.B SC_IOC_LIST
input-output control (that is, the addition, removal or alteration of the
characteristics of a STREAMS module or driver), the module will issue a
.BR M_PCSIG (9)
message,
containing the
.RI { SIGPOLL }
signal,
to all open Stream heads (except not necessarily the Stream head which effected the
change).
This results in the immediate generation of a
.RI { SIGPOLL }
signal to processes registered for the
.B S_MSG
event using the
.IR I_SETSIG (7)
input-output control, or to the process group leader.  See
.BR M_PCSIG (9).
.PP
This feature was added to permit the STREAMS SNMP agent to cache configuration
information and hold open a Stream with the
.B sc
module pushed and receive a
.RI { SIGPOLL }
signal whenever the agent cache is invalidated.
.\"
.\"
.SH NOTICES
.PP
Note that the
.B sc
module is not yet capable of copying and providing access to the private statistics area indicated
by the
.I ms_xprt
and
.I ms_xsize
members of the
.BR module_stat (9)
structure.  This is an unnecessary limitation.
At some point it would make sense to add a
.B SC_IOC_STATS
command that would retrieve both the
.BR module_stat (9)
structure and the private statistics for a single module or driver.
.\"
.\"
.SH EXAMPLES
.PP
See the source code for
.BR scls "(8) and " strtune (8).
.\"
.\"
.SH MODULES
.PP
.B sc
is a
.I STREAMS
module named
.RI \*(lq sc \*(rq.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR ioctl (2s),
.BR nuls (4),
.BR sad (4)),
.BR scls (8),
.BR strtune (8),
.BR streamio (7),
.BR autopush (8),
.BR streamtab (9),
.BR module_info (9),
.BR module_stat (9).
.\"
.\"
.SH BUGS
.PP
The
.B sc
module has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
Many implementations of
.I STREAMS
have some mechanism for augmenting the functionality of the
.BR sad (4)
driver.  Some implementations, such as
.IR AIX \(rg,
.[
aixspg
.]
.IR HP-UX \(rg,
.[
hpuxspg
.]
provide an
.B sc
module for this purpose.
.IP \(em \w'\(em\(em'u
.IR AIX \(rg
.[
aixspg
.]
provides an
.B sc
module for the purpose of allowing
.BR autopush (8)
to use device names instead of major device numbers, and to support the
.BR scls (8)
utility.
.IP \(em
.IR AIX \(rg
.[
aixspg
.]
requires the use of the
.B sc
modules with the
.BR nuls (4)
driver.
.IP \(em
.IR HP-UX \(rg
.[
hpuxspg
.]
describes the
.B sc
module as a core
.I STREAMS
module used by
.BR autopush (8)
and provides support for device names instead of device numbers, and providing
supplemental functions for the
.BR sad (4)
driver.
.IP \(em
.B sc
can be pushed over any stream, unlike the
.IR AIX \(rg
or
.IR HP-UX \(rg
documentation.
The user must have sufficient privilege to push the
.B sc
module.
.IP \(em
Internals of the
.B sc
module is implementation dependent, not subject to standardization, and not
documented.
This manual page documents the
.B "Linux Fast-STREAMS"
implementation of the
.B sc
module.
Compatibility with other implementations is not guaranteed.
.IP \(em
The
.B SC_IOC_TUNE
input-output control is specific to
.B "Linux Fast-STREAMS"
and should not be used by portable programs.
.IP \(em
The
.B SC_IOC_STAT
input-output control is specific to
.B "Linux Fast-STREAMS"
and should not be used by portable programs.
.IP \(em
The generation of
.RI { SIGPOLL }
signals on configuration changes is specific to
.B "Linux Fast-STREAMS"
and should not be expected by portable programs.
.\"
.\"
.SH CONFORMANCE
.PP
None.  (This manual page.)
Conformance is verified using the
.BR test-sc (8)
verification test suite.
.\"
.\"
.SH HISTORY
.PP
An
.B sc
module for extending the capabilities of the
.BR sad (4)
driver appear in
.IR AIX \(rg
.[
aixspg
.]
and
.IR HP-UX \(rg
.[
hpuxspg
.]
documentation.
.PP
The
.B SC_IOC_TUNE
and
.B SC_IOC_STATS
capabilities,
and
.RI { SIGPOLL }
feature,
are specific to
.B "Linux Fast-STREAMS"
and were first added in release
.B 0.9.2.4
of the
.B streams
package.
.\"
.\"
.[
$LIST$
.]
.TI
