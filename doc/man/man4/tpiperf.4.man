'\" rtp
.\" vim: ft=nroff sw=4 noet nocin nosi com=b\:.\\\" fo+=tcqlorn tw=77
.\" =========================================================================
.\"
.\" @(#) doc/man/man4/tpiperf.4.man
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
.\" Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
.\" Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to copy, distribute and/or modify this manual under
.\" the terms of the GNU Free Documentation License, Version 1.3 or any later
.\" version published by the Free Software Foundation; with no Invariant
.\" Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the
.\" license is included in the section entitled "GNU Free Documentation
.\" License".
.\"
.\" Permission to use, copy and distribute this manual without modification,
.\" for any purpose and without fee or royalty is hereby granted, provided
.\" that both the above copyright notice and this permission notice appears
.\" in all copies and that the name of OpenSS7 Corporation not be used in
.\" advertising or publicity pertaining to distribution of this documentation
.\" or its contents without specific, written prior permission.  OpenSS7
.\" Corporation makes no representation about the suitability of this manual
.\" for any purpose.  It is provided "as is" without express or implied
.\" warranty.
.\"
.\" Permission is granted to process this file through groff and print the
.\" results, provided the printed document carries a copying permission
.\" notice identical to this one except for the removal of this paragraph
.\" (this paragraph not being relevant to the printed manual).
.\"
.\" OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS MANUAL
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
.\" PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
.\" DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
.\" CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS,
.\" TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL OPENSS7 CORPORATION BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY
.\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
.\" IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH ANY USE OF THIS DOCUMENT OR THE PERFORMANCE
.\" OR IMPLEMENTATION OF THE CONTENTS THEREOF.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this manual
.\" page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from the
.\" use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.  The
.\" author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database openss7.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
search-truncate 40
search-ignore CGIQOSTU
.R2
.so openss7.macros
.\"
.\"
.TH TPIPERF 4 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ Modules"
.\"
.\"
.SH NAME
.B tpiperf
\- Transport Provider Interface performance module (TPIPERF)
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stropt.h>
.br
.B #include <sys/tpiperf.h>
.HP 8
.BI "" tli_stream " = t_open(" tli_device ", " 0 );
.HP 8
.BI ioctl( tli_stream ", " \fRI_PUSH\fP ", " \*(lqtpiperf\*(rq );
.PD 0
.HP 8
.BI ioctl( tli_stream ", " \fRI_POP\fP ", " \*(lqtpiperf\*(rq );
.BI t_close( tli_stream );
.PD
.\"
.\"
.SH DESCRIPTION
.PP
The
.B tpiperf
module is a STREAMS module that provides a transport user supporting the
.I \(lqTransport Provider Interface\(rq
(TPI)
.[
tpi revision 2.0.0 draft 2
.]
with a high performance read/write interface.
.\"
.\"
.SH USAGE
.PP
.B tpiperf
is only suitable for connection-oriented transport service providers of type
.I T_COTS
or
.IR T_COTS_ORD .
(But, from the discussion below under
.RI \(rq IOCTLS \(rq,
it could easily be extended to work for connectionless transport service
providers.)
.PP
The
.B tpiperf
module is typically pushed on an XTI/TLI stream after it has been opened,
bound and placed in the connected state using
.BR xti (3)
library calls or
.BR tpi (7)
primitives.
Once the stream is in the connected state, the
.B tpiperf
module is pushed.
.PP
Once pushed, the module acts in the default mode, which is to do nothing but
pass messages up and down unaffected.
There are three other modes into which the module can be placed with the use of
input-output control commands to acheive several performance testing
objectives.  These modes are discard mode (discard all received data
messages), echo mode (echo all received data messages back to the sender), and
two generation modes (duplicate sent messages as fast a possible to the
peer).  These modes are described in greater detail under
.RI \(lq IOCTLS \(rq,
below.
.PP
On particular mode that received some use at the
.I 10th SCTP Interop
at the
.I University of British Columbia
was the discard mode.  With an SCTP Stream in discard mode, it was possible to
transfer 750 Mbps on a 1Gb link to the OpenSS7 implementation.  It was,
however, subsequently discovered that the connection was quite noisy (buggy
connection tracking implementation in the 2.16.17 FC5 kernel), and fully
saturating 1Gb clean links seems quite possible.
.\"
.\"
.SH IOCTLS
.PP
.B tpiperf
supports several input-output controls that are used to control its behaviour
once is has been pushed onto a TPI stream: (No symbols are defined for these
input-output controls, the command are simple numbers.)
.TP
.BR NONE [0]
Set the mode of the module to
.BR NONE .
In this mode, the module behaves as though it was not present.  All messages
received from the TPI Stream below are simply passed up and all messages
received from upstream are simply passed down.  This is the default mode of
the
.B tpiperf
module after it has been pushed on a Stream.
.IP ""
This input-output control takes no argument.
.TP
.BR DISCARD [1]
Set the mode of the module to
.BR DISCARD .
In the discard mode, the module acts as a bit bucket for data messages.  All
TPI data indication messages received from the Stream below are discarded.
All messages received from upstream are passed downstream as in the default
mode.
.IP ""
This input-output control takes no argument.
.IP ""
Messages are handled as follows:
.sp
.TS
lc.
\fIFrom downstream:\fP
\fBM_DATA\fP(9)	discard
\fBT_UNITDATA_IND\fP(7)	discard
\fBT_OPTDATA_IND\fP(7)	discard
\fBT_DATA_IND\fP(7)	discard
\fBT_EXDATA_IND\fP(7)	discard

\fIAll others:\fP
others	normal treatment
.TE
.TP
.BR ECHO [2]
Sets the mode of the module to
.BR ECHO .
In the echo mode, the module acts as an echo server for data messages.  All
TPI data indication messages received from the Stream below are transformed
into data request messages and passed back downstream.  All messages received
from upstream are passed downstream as in the default mode.
.IP ""
This input-output control takes no argument.
.IP ""
Messages are handled as follows:
.sp
.TS
lcl.
\fIFrom downstream:\fP
\fBM_DATA\fP(9)	echoed as	\fBM_DATA\fP(9)
\fBT_UNITDATA_IND\fP(7)	echoed as	\fBT_UNITDATA_REQ\fP(7)
\fBT_OPTDATA_IND\fP(7)	echoed as	\fBT_OPTDATA_REQ\fP(7)
\fBT_DATA_IND\fP(7)	echoed as	\fBT_DATA_REQ\fP(7)
\fBT_EXDATA_IND\fP(7)	echoed as	\fBT_EXDATA_REQ\fP(7)

\fIAll others:\fP
others	normal treatment
.TE
.TP
.BR GENERATE-1 [3]
Sets the mode of the module to
.BR GENERATE-1 .
In the single stream generation mode, the module generates messages as
described by the argument to the control.  The argument consists of a pointer
to an array of two
.B uint32_t
elements.  The first element of the argument array specifies the
maximum number of messages to generate.  The second element, the maximum
number of messages to send in a burst.
.IP ""
Messages are handled as follows:
.sp
.TS
lcl.
\fIFrom downstream:\fP
\fBM_DATA\fP(9)	discarded
\fBT_UNITDATA_IND\fP(7)	discarded
\fBT_OPTDATA_IND\fP(7)	discarded
\fBT_DATA_IND\fP(7)	discarded
\fBT_EXDATA_IND\fP(7)	discarded

\fIFrom upstream:\fP
\fBM_DATA\fP(9)	store and generate as	\fBM_DATA\fR(9)(req)
\fBT_UNITDATA_REQ\fP(7)	store and generate as	\fBT_UNITDATA_REQ\fR(7)(req)
\fBT_OPTDATA_REQ\fP(7)	store and generate as	\fBT_OPTDATA_REQ\fR(7)(req)
\fBT_DATA_REQ\fP(7)	store and generate as	\fBT_DATA_REQ\fR(7)(req)
\fBT_EXDATA_REQ\fP(7)	store and generate as	\fBT_EXDATA_REQ\fR(7)(req)

\fIAll others:\fP
others	normal treatment
.TE
.IP ""
It takes the user sending a data request primitive to kick the message
generation off.  Each time that a data request message is received in this
mode, it is saved and the previous saved message (if any) discarded.  When
a message is saved the write-side service procedure is enabled with
.BR qenable (9).
.IP ""
On each execution of the write side service procedures,
.I burst
duplicates of the stored message is sent downstream subject to flow control.
Once the maximum number of messages is sent, the Stream is disconnected by
sending a 
.BR T_DISCON_REQ (7)
downstream and a
.BR T_DISCON_IND (7)
upstream and the module reverts to the default mode.
.TP
.BR GENERATE-N [4]
In the multiple stream generation mode, the module generates message as
described by the argument to the control.  The argument consists of a pointer
to an array of three
.B uint32_t
elements.  The first element of the argument array specifies the maximum
number of messages to generate.  The second element, the maximum number of
messages to send in a burst.  The third and final element, the number of
streams upon which to generate messages.
.IP ""
This mode is currently incomplete.
.IP ""
The intention of this mode was to generate message on multiple SCTP streams
but it has not been completed in the code at the time of writing this manual
page.
.TP
.BR STATISTICS [5]
This input-output control command does not change the mode of the module.
What it does is collect and reset two statistics on the operation of the
module.  The two statistics collected are the accumulated number of messages
handled (passed, discarded, echoed, or generated) and the accumulated number
of bytes in the handled messages.  These two statistics are transfered into
the array of two
.B uint32_t
elements indicated by the argument to the call which is a pointer to the
array.  In addition to collecting the statitics, the two counts are reset to
zero.
.\"
.\"
.SH EXAMPLES
.PP
The test case executable program that was used at the Interop is the
.BR test-interop (8)
program included in the package, which provides a good example of the use of
this module.
.\"
.\"
.SH NOTICES
.PP
.B GENERATE-N
mode is incomplete and will probably crash your kernel if invoked.
.\"
.\"
.SH MODULES
.PP
.B tpiperf
.I STREAMS
module.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR xti (3),
.BR tpi (7),
.BR M_DATA (9),
.BR T_UNITDATA_IND (7),
.BR T_OPTDATA_IND (7),
.BR T_DATA_IND (7),
.BR T_EXDATA_IND (7),
.BR T_UNITDATA_REQ (7),
.BR T_OPTDATA_REQ (7),
.BR T_DATA_REQ (7),
.BR T_EXDATA_REQ (7),
.BR T_DISCON_REQ (7),
.BR T_DISCON_IND (7),
.BR qenable (9),
.BR test-interop (8).
.\"
.\"
.SH FILES
.PP
.I /lib/modules/\`uname -r\`/streams-tpiperf.o
.\"
.\"
.SH BUGS
.PP
.B tpiperf
has no known bugs (with the exception that
.B GENERATE-N
mode is not yet fully implemented).
.\"
.\"
.SH COMPATIBILITY
.PP
.B tpiperf
is compatible with
.BR "XNS 5.2"
.[
xns98
.]
and
.BR "SVR 4.2" ,
.[
svr42spg
.]
with the following portability considerations:
.PP
This
module is specific to
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.SH CONFORMANCE
.PP
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.SH HISTORY
.PP
.B tpiperf
module first appeared in
.BR "@PACKAGE_TITLE@" .
.\"
.\"
.[
$LIST$
.]
.TI
