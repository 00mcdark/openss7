\input texinfo
@c -*- texinfo -*-
@c vim: ft=texinfo nosmartindent nocindent noautoindent tw=100
@c =========================================================================
@c
@c @(#) $Id: pgw.texi,v 1.1.2.3 2011-02-07 02:21:36 brian Exp $
@c
@c =========================================================================
@c
@c Copyright (c) 2010-2011  Optranex Incorporated <http://www.optranex.com/>
@c Copyright (c) 2008-2010  Monavacon Limited <http://www.monavacon.com/>
@c Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
@c Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
@c
@c All Rights Reserved.
@c
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3 or
@c any later version published by the Free Software Foundation; with no
@c Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
@c copy of the license is included in the section entitled "GNU Free
@c Documentation License".
@c
@c Permission to use, copy and distribute this documentation without
@c modification, for any purpose and without fee or royalty is hereby
@c granted, provided that both the above copyright notice and this
@c permission notice appears in all copies and that the name of OpenSS7
@c Corporation not be used in advertising or publicity pertaining to
@c distribution of this documentation or its contents without specific,
@c written prior permission.  Monavacon Limited makes no representation
@c about the suitability of this documentation for any purpose.  It is
@c provided "as is" without express or implied warranty.
@c 
@c Permission is granted to process this file through Tex and print the
@c results, provided the printed document carries copying permission
@c notice identical to this one except for the removal of this paragraph
@c (this paragraph not being relevant to the printed manual).
@c 
@c OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
@c DOCUMENTATION INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY,
@c FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE
@c CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE
@c IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY
@c PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL
@c OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR
@c CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
@c USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
@c OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
@c THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS
@c THEREOF.
@c 
@c Since the Linux kernel and libraries are constantly changing, this
@c manual page may be incorrect or out-of-date.  The author(s) assume no
@c responsibility for errors or omissions, or for damages resulting from
@c the use of the information contained herein.  The author(s) may not
@c have taken the same level of care in the production of this manual,
@c which is licensed free of charge, as they might when working
@c professionally.
@c 
@c Formatted or processed versions of this manual, if unaccompanied by
@c the source, must acknowledge the copyright and authors of this work.
@c
@c -------------------------------------------------------------------------
@c
@c U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
@c on behalf of the U.S. Government ("Government"), the following
@c provisions apply to you.  If the Software is supplied by the Department
@c of Defense ("DoD"), it is classified as "Commercial Computer Software"
@c under paragraph 252.227-7014 of the DoD Supplement to the Federal
@c Acquisition Regulations ("DFARS") (or any successor regulations) and the
@c Government is acquiring only the license rights granted herein (the
@c license rights customarily provided to non-Government users).  If the
@c Software is supplied to any unit or agency of the Government other than
@c DoD, it is classified as "Restricted Computer Software" and the
@c Government's rights in the Software are defined in paragraph 52.227-19
@c of the Federal Acquisition Regulations ("FAR") (or any successor
@c regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
@c NASA Supplement to the FAR (or any successor regulations).
@c
@c =========================================================================
@c 
@c Commercial licensing and support of this software is available from
@c OpenSS7 Corporation at a fee.  See http://www.openss7.com/
@c 
@c =========================================================================
@c
@c Last Modified $Date: 2011-02-07 02:21:36 $ by $Author: brian $
@c
@c =========================================================================

@setfilename pgw.info
@include ../../../scripts/texi/args.texi
@set MANUAL_TITLE Optranex 248 PSTN Gateway
@set MANUAL_TYPE Field Trial Plan of Record
@settitle @value{MANUAL_TITLE}

@dircategory OpenSS7
@direntry
* PSTN Gateway: (pgw).			Optranex 248 PSTN Gateway
@end direntry

@include ../../../scripts/texi/args.texi
@set MANUAL_TITLE Optranex 248 PSTN Gateway
@set MANUAL_TYPE Field Trial Plan of Record

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file provides the @value{MANUAL_TYPE} for @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of the
@cite{@value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version @value{PACKAGE_VERSION}
Release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}.

Copyright @copyright{} 2010-2011  @uref{http://www.optranex.com/, Optranex Incorporated} @*
Copyright @copyright{} 2008-2010  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2001  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

All Rights Reserved.

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation},
@cite{Monavacon Limited} and @cite{Optranex Incorporated} not be used in advertising or publicity
pertaining to distribution of this documentation or its contents without specific, written prior
permission.  @cite{OpenSS7 Corporation}, @cite{Monavacon Limited} and @cite{Optranex Incorporated.}
make no representation about the suitability of this documentation for any purpose.  It is provided
``as is'' without express or implied warranty.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed
document carries copying permission notice identical to this one except for the removal of this
paragraph (this paragraph not being relevant to the printed manual).

@end ignore
OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT
THE CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN
NO EVENT SHALL OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.
@end ifinfo

@include ../../../scripts/texi/args.texi
@set MANUAL_TITLE Optranex 248 PSTN Gateway
@set MANUAL_TYPE Field Trial Plan of Record

@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 1
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@subtitle Updated @value{PACKAGE_PDATE}
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2010-2011  Optranex Incorporated
@subtitle All Rights Reserved.
@sp 4
@quotation
@chapheading Abstract:
This document provides a @value{MANUAL_TYPE} for the @value{MANUAL_TITLE}.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll

@chapheading Published by:

@sp 1

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Copyright @copyright{} 2010-2011  @uref{http://www.optranex.com/, Optranex Incorporated} @*
Copyright @copyright{} 2008-2010  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

@noindent
All Rights Reserved.

@sp 1

@noindent
Unauthorized distribution or duplication is prohibited.

@sp 1

@noindent
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation},
@cite{Monavacon Limited} and @cite{Optranex Incoporated} not be used in advertising or
publicity pertaining to distribution of this documentation or its contents without specific, written
prior permission.  @cite{OpenSS7 Corporation}, @cite{Monavacon Limited} and @cite{Optranex
Incorporated} make no representation about the suitability of this documentation for any purpose.
It is provided ``as is'' without express or implied warranty.

@chapheading Notice:

@noindent
@strong{OpenSS7 Corporation, Monavacon Limited and Optranex Incorporated disclaim all
warranties with regard to this documentation including all implied warranties of merchantability,
fitness for a particular purpose, non-infringement, or title; that the contents of the document are
suitable for any purpose, or that the implementation of such contents will not infringe on any third
party patents, copyrights, trademarks or other rights.  In no event shall OpenSS7 Corporation,
Monavacon Limited nor Optranex Incorporated be liable for any direct, indirect, special or
consequential damages or any damages whatsoever resulting from loss of use, data or profits, whether
in an action of contract, negligence or other tortious action, arising out of or in connection with
any use of this document or the performance or implementation of the contents thereof.}

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@c Define an index of primitives
@defcodeindex pr
@c Define an index of primitive values
@defcodeindex pv
@c Define an index of primitive error values
@defcodeindex pe
@c Define an index of protocol states
@defcodeindex st
@c Define an index of input-output controls
@defcodeindex ct
@c Define an index of manual pages.
@defcodeindex mp
@c Define an index of MIB objects.
@defcodeindex mo

@c frags out automake
@c @ifnottex
@c @c concatenate indices for text, html and info
@syncodeindex pr cp
@syncodeindex pv cp
@syncodeindex pe cp
@syncodeindex st cp
@syncodeindex mp cp
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex ct cp
@syncodeindex mo cp
@c @end ifnottex

@include texi/macros.texi
@include texi/versions.texi
@include texi/prims.texi

@ifnottex
@node Top
@top @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@heading About This Manual
This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of
@cite{The @value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version
@value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} of the
@value{PACKAGE_TITLE} package.
@end ifnottex

@menu
* Executive Overview::
* Preface::
* Introduction::
* Application Architecture::
* Solution Architecture::
* Network Architecture::
* Reference Architecture::
* Protocol Architecture::
* Software Architecture::
* Hardware Architecture::
* Platform Architecture::
* Management Architecture::
* System Architecture::
* Logistics::
* Provisioning Plan::
* Test Plan::
* Alternate Hardware::
* Protocol Values::
* Programmatic Interfaces::
* Platform Sizing::
* Bibliography::
* Licenses::
* Index::
@end menu

@iftex
@c insert list of figures and tables for printed manuals
@page
@heading List of Figures
@listoffloats Figure
@page
@heading List of Tables
@listoffloats Table
@end iftex
@page
@heading List of Examples
@listoffloats Example
@page
@heading List of Messages
@listoffloats Message

@node Executive Overview
@unnumbered Executive Overview

This document provides a @dfn{@value{MANUAL_TYPE}} for the @cite{@value{MANUAL_TITLE}}.  The initial and primary
purposes of this equipment is to provide a scalable, carrier-grade platform for interconnecting VoIP
backbone networks to the PSTN using SS7.

@subsubheading The OpenSS7 Project

The @uref{http://www.openss7.org/, OpenSS7 Project} is an open source software project that has
developed many protocol components within the @acronym{SS7}, @acronym{SIGTRAN}, @acronym{ISDN} and
@acronym{VoIP} protocol stacks.  Intellectual property rights for the OpenSS7 Project are held by
@uref{http://www.openss7.com/, OpenSS7 Corporation}.  All OpenSS7 Project software is eventually
licensed under the @dfn{GNU Affero General Public License Version 3}.  OpenSS7 Corporation also
provide commercial licensing of OpenSS7 Project software under terms less restrictive than the
@acronym{AGPLv3}.

@subsubheading The OpenSS7 Carrier VoIP Switch

OpenSS7 can provide VoIP gateway capabilities in a high-performance, low-cost, small-footprint
platform leaveraging the @cite{GNU/Linux} operating system distributions and tools, and utilizing
low-cost commodity, or high-quality standardized hardware.

For details on platform applications, see @ref{Application Architecture} and @ref{Network
Architecture}.

@subsubheading Open Source Software

The OpenSS7 Project leverages the widespread use of GNU/Linux operation systems, distributions, and
FSF tools such as @samp{autoconf} and @dfn{RPM}.  For example, this document was formatted for
@acronym{PDF}, @acronym{HTML}, info and plain text using the GNU @dfn{texinfo} system,
@samp{autoconf}, and the @TeX{} formatting system.

The open source model avoids proprietary lock-in and permits in-house or outsourced development.
All source code is available for use and modification by the end customer.  All build tools,
documentation and associated resources are generally available.  The availability of the source code
and complete documentation eases problem resolution and can offer upgrades and fixes even in advance
of client problem reports.  

For details on software solutions, see @ref{Protocol Architecture} and @ref{Software Architecture}.

@subsubheading Commodity Hardware

By best utilizing commodity PC or standardized CompactPCI hardware, OpenSS7 makes available the
highest performance platforms available on the market at back-to-school prices.  When carrier-grade
and large scale is not essential, 3GHz Pentium class servers in hardened rack mount chassis can be
used at a fraction of the cost, and yet outperform, other solutions.  Where carrier-grade is
necessary, embedded Linux on standardized @acronym{PICMG 2.16 NEBS} compliant chassis make for a
higher cost, but more reliable alternative.

For details on hardware solutions, see @ref{Platform Architecture} and @ref{Hardware Architecture}.

@subsubheading Rapid Development

The OpenSS7 Project has already developed protocol components completing the SS7 and SIGTRAN
signaling stacks including @acronym{MTP} Level 2 and Level 3, @acronym{ISUP}, @acronym{SCCP},
@acronym{TCAP}; and @acronym{SCTP}, @acronym{M2PA}, @acronym{M2UA}, @acronym{M3UA}, @acronym{SUA}
and @acronym{TUA}.  Development of a Carrier VoIP Switch to meet initial field requirements needs
only the development of some intermediate and auxillary modules.

For details on scheduling, see @ref{Logistics}.

@subsubheading An Evolving Solution

The OpenSS7 Project is evolving to support more protocol stacks including ISDN and VoIP.

@subsubheading Conclusions

In summary, an OpenSS7 Carrier VoIP Switch an excellent application of the OpenSS7 SS7 and VoIP stacks and
can be provided at a affordable price on short time-lines, while offering an evolution path for
future deployment applications.

@sp 4

@flushright
@email{bidulock@@openss7.org, Brian Bidulock}
The OpenSS7 Project
@end flushright

@node Preface
@unnumbered Preface

@section Document Information
@cindex Document information

@subsection Abstract
@cindex Document abstract

This document provides a @dfn{@value{MANUAL_TYPE}} for the @cite{@value{MANUAL_TITLE}}.

@subsection Objective
@cindex Document objective

The objective of this document is to provide a @dfn{@value{MANUAL_TYPE}} for the deployment of the low
cost, high-performance, @cite{@value{MANUAL_TITLE}} using OpenSS7 protocol components, software, and
compatible systems and hardware.

@subsection Intent
@cindex Document intent

The intent of this document is to act as a @dfn{@value{MANUAL_TYPE}} for an project for an @dfn{@value{MANUAL_TYPE}}.
As a @dfn{@value{MANUAL_TYPE}}, this document discusses components and systems which are not necessarily
complete.  @uref{http://www.openss7.com/,OpenSS7 Corporation} is under no obligation to provide any
software, system or feature listed herein.

@subsection Audience
@cindex Document audience

This document is intended for a technical audience.  The reaser should be familiar with most most
3GPP, ETSI, ITU-T and ANSI, SS7, IMS, H.323, H.225, H.245, as well as IETF drafts and RFCS for RTP,
SIP, SIP-T, MEGACO, MGCP, and SIGTRAN protocols.

@subsection Revisions
@cindex Document revisions

Take care that you are working with a current version of this document: you will not be notified of
updates.  To ensure that you are working with a current version, contact the
@uref{mailto:bidulock@@openss7.org,Author}, or check @uref{http://www.openss7.org/,The OpenSS7
Project} website for a current version.

@subsubsection Version Control

@smallexample
@verbatim
$Log: pgw.texi,v $
Revision 1.1.2.3  2011-02-07 02:21:36  brian
- updated manuals

Revision 1.1.2.2  2010-03-10 08:42:18  brian
- added Optranex files

Revision 1.1.2.1  2010-02-22 14:25:51  brian
- added new documentation files

@end verbatim
@end smallexample

@subsubsection ISO 9000 Compliance

Only the @TeX{}, @command{texinfo}, or @command{roff} source for this document is controlled.  An
opaque (printed or postscript) version of this document is an @strong{UNCONTROLLED VERSION}.

@subsection Disclaimer
@cindex Document disclaimer

@noindent
@cite{OpenSS7 Corporation}, @cite{Monavacon Limited} and @cite{Optranex Incoporated} disclaim
all warranties with regard to this documentation including all implied warranties of
merchantability, fitness for a particular purpose, non-infringement, or title; that the contents of
the document are suitable for any purpose, or that the implementation of such contents will not
infringe on any third party patents, copyrights, trademarks or other rights..  In no event shall
@cite{OpenSS7 Corporation}, @cite{Monavacon Limited}, nor @cite{Optranex Incorporated} be
liable for any direct, indirect, special or consequential damages or any damages whatsoever
resulting from loss of use, data or profits, whether in an action of contract, negligence or other
tortious action, arising out of or in connection with any use of this document or the performance or
implementation of the contents thereof.

@noindent
@cite{OpenSS7 Corporation} reserves the right to revise this software and documentation for any
reason, including but not limited to, conformity with standards promulgated by various agencies,
utilization of advances in the state of the technical arts, or the reflection of changes in the
design of any techniques, or procedures embodied, described, or referred to herein.  @cite{OpenSS7
Corporation} is under no obligation to provide any feature listed herein.

@section Document Organization
@cindex Document organization

This document is organized as follows:

@table @emph
@item @ref{Introduction}
Introduction to the @cite{@value{MANUAL_TITLE}} application.
@item @ref{Application Architecture}
The application requirements and architecture.
@item @ref{Solution Architecture}
The solution architecture for the application.
@item @ref{Network Architecture}
The network architecture for the application.
@item @ref{Reference Architecture}
The reference architecture for the application.
@item @ref{System Architecture}
The architecture of the @cite{@value{MANUAL_TITLE}} system.
@item @ref{Platform Architecture}
The architecture of the @cite{@value{MANUAL_TITLE}} platform.
@item @ref{Management Architecture}
The architecture of the @cite{@value{MANUAL_TITLE}} management.
@item @ref{Protocol Architecture}
The protocol architecture supporting the application.
@item @ref{Software Architecture}
The software architecture supporting the protocol stack and application.
@item @ref{Hardware Architecture}
The hardware architecture supporting the protocol stack and application.
@item @ref{Logistics}
Project logistics for completion of the VoIP GW application.
@item @ref{Programmatic Interfaces}
Programmatic interfaces to selected protocol components.
@item @ref{Platform Sizing}
Detailed platform sizing considerations.
@item @ref{Index}
Index of concepts.
@end table


@node Introduction
@chapter Introduction
@cindex Introduction

This document provides a @dfn{@value{MANUAL_TYPE}} for a  patform to provide scalable
@cite{@value{MANUAL_TITLE}} capabilities.  The primary driver for the @cite{@value{MANUAL_TITLE}} is
to provide a system capable of interconnecting a SIP VoIP backbone to the PSTN using SS7.  This
document provide a @cite{@value{MANUAL_TYPE}} for a trial system to provide this capability at a
number of scale points.

The proposal utilizes, where possible, existing OpenSS7 protocol stack components and provides a
development plan for components that are specific to the @cite{@value{MANUAL_TITLE}} initial
requirements.

This document discusses the resulting software configuration that will be put in place on the
production system, the platform configuration for the production system, and a network configuration
for deployment.  Also discussed is an overview of the project management logistics for successful
completion over the course of this development project.

It is intended that the document be a ``living'' document, that is updated over the course of this
development project.

@menu
* The Optranex 248 PSTN Gateway::
* Project Drivers::
* Scope::
@end menu

@node The Optranex 248 PSTN Gateway
@section The Optranex 248 PSTN Gateway
@cindex The Optranex 248 PSTN Gateway

This project provides an @cite{@value{MANUAL_TITLE}} platform that provides interconnection to the
PSTN using SS7 ISUP trunks and is capable of routing calls to and from the PSTN and a VoIP backbone
network using @cite{SIP-T}, @cite{ITU-T Q.1912.5} and @cite{3GPP TS 29.163} signaling and RTP
transport.

@node Project Drivers
@section Project Drivers
@cindex Project drivers

The lead purpose of the @cite{@value{MANUAL_TITLE}} is to provide PSTN interconnection to an
existing VoIP backbone and deployment infrastructure that lacks same.

@subsection Project Objectives
@cindex Project objectives

The objectives that @cite{Optranex Incorporated} wishes to acheive during the trial are as
follows:

@enumerate
@item Validation of correct implementation of the @cite{Optranex 248} switch hardware, firmware and
software drivers.  This will be acheived by exchanging channel data with the AT&T interconnection
using aggregated DS-3 over SONET.

@item Validation of correct fail-over using 1:1 APS on the @cite{Optranex 248} switch hardware,
firmware and software drivers.  This will be achieved by completing hardware fail-over between cards
on the redundant @cite{Optranex 248} switch platforms.

@item Demonstration of the maximum handling capacity of the @cite{Optranex 248} switch.  The
@cite{Optranex 248} switch is capable of connecting 2 x OC-48s for a total of 96 DS-3s (approximately
64,000 channels) in a redundant configuration.  In simplex configuration, each server is capable of
96 DS-3s for a maximum simplex configuration of 192 DS-3s (approximately 128,000 channels).  This
will be acheived by loading the platforms to their maximum channel handling capacity and then
performing voice quality assessment on a number of channels.

@item Demonstrate standard (RFC 4666) M3UA operation with the SS7 signaling network.

@item Demonstrate standard (ANSI T1.113-2000) ISUP operation with the SS7 signaling network.

@item Demonstrate standard (RFC 3621) SIP operation with the SIP network.

@item Demonstrate basic SIP to ISUP interworking operation according to SIP-T (RFC 3398),
@cite{ITU-T Q.1912.5} and @cite{3GPP TS 29.163 Release 9}.
@end enumerate

@node Scope
@section Scope
@cindex Scope

Because of early deployment drivers yet requirements for scale, the @cite{@value{MANUAL_TITLE}}
platform is constructed using hardened PC telephony hardware in a NEBS 3/ETSI compliant chassis
providing carrier-grade serviciablity and reliability.  Non-carrier-grade platforms utilizing
commodity PC hardware for lower scale or lower reliability installations are possible.

@menu
* Phases::
* Gates::
@end menu

@node Phases
@subsection Phases
@cindex Project phases

The longer term project is broken into the following phases:

@table @dfn
@item Phase 1 @footnote{Although some reference is made to capabilities supporting other phases,
@dfn{Phase 1} and @dfn{Phase 2} are the focus of this document.} The initial phase of the project is
intended to provide the capabilities of the @cite{@value{MANUAL_TITLE}} for PSTN to VoIP backbone
tandem for H.323.
@item Phase 2
The second phase of the project adds tandem gateway capabilities for SIP-T.
@item Phase 3
The third phase of the project adds network service capabilities.
@item Phase 4
The fourth phase of the project adds softswitch capabilities.
@item Phase 5
The fifth phase of the project completes a VoIP (NGN) switch.
@end table

Although some reference is made to capabilities supporting other phases, @dfn{Phase 1} and
@dfn{Phase 2} are the focus of this document.

@node Gates
@subsection Gates
@cindex Project gates

Each phase of the project consists of seven gates.  The seven gates are defined as follows:

@table @dfn

@item Gate 0 --- Concept

@noindent
@dfn{Gate 0} is passed when the initial concept has been elucidated and work is begun on a
High-Level Design.  This is an internal OpenSS7 gate.

@item Gate 1 --- High Level Design

@dfn{Gate 1} is passed when the high-level design has been reviewed to the satisfaction of the
consumers of the project.  This is an external review gate.  OpenSS7 internally passes this gate
once the High-Level Design has been published and work is begun on a detailed design.@footnote{This
document is a High-Level Design an Proposal document and it meets the internal requirements for
passing Gate 1 of Phase 1 and Phase 2 of the VoIP GW project.  An external review of this document
by a Beta or Gamma client or sponsor is pending.}

@item Gate 2 --- Detailed Design

@dfn{Gate 2} is passed when the detailed design has been reviewed to the satisfaction of the
consumers of the project and the developers on the project.  This is an external as well as an
internal review gate.  OpenSS7 passes this gate once the Detailed Design has been published and work
base begin on development and implementation of the design.@footnote{OpenSS7 requires a contractual
commitment for purchase from a Beta or Gamma client, or funding from a Sponsor of the OpenSS7
Project, before this gate can be passed and development started.} Passing this gate moves from the
design stage to the development stage of the project.

@item Gate 3 --- Development and Implementation

@dfn{Gate 3} is passed when the software and systems development and implementation to the detailed
design is complete and testing has begun.  This is an internal review gate.  OpenSS7 internally
passes this gate when software is code complete and hardware has been installed for testing.

@item Gate 4 --- System Test

@dfn{Gate 4} is passed once the product implementation meets all internal ad hoc and formal
conformance test suites and internal testing is complete.  This is an internal review gate.  OpenSS7
passes this gate internally once conformance testing is complete.  Passing this gate moves from the
development stage to the support stage of the project.

@item Gate 5 --- Acceptance Test

@dfn{Gate 5} is passed once the product implementation has passed external Gamma client acceptance
testing.  This is an external review gate.  OpenSS7 passes this gate internally once participation
in external acceptance testing is complete.

@item Gate 6 --- Project Complete

@dfn{Gate 6} is passed once all support obligations for the product implementation have been
discharged.  This is an internal review gate.  OpenSS7 passes this gate once support agreements have
terminated.

@end table

@noindent
For more details on Gate scheduling for Phase 1 and Phase 2 of the VoIP GW project, @pxref{Logistics}.

@node Application Architecture
@chapter Application Architecture
@cindex Application architecture

The @cite{@value{MANUAL_TITLE}} is intended to provide high performance and high density PSTN to VoIP
backbone gateway adding SS7 interconnection capability to an existing or back-end VoIP network.

@section Application Requirements

Application requirements have been broken into 5 phases using the timeboxing approach.

@subsection Phase 1 Requirements

Phase 1 requirements provide a VoIP gateway capability that will connect an existing H.323 VoIP
network to the PSTN using SS7 ISUP trunks.

@itemize @bullet
@item Integral Media Gateway for RTP/RTCP to G.703/G.704 G.711 A- and mu-law.
@item Integral Signaling Gateway for SS7 ISUP and SS7 TCAP.
@item Local Number Portability.
@item Lawful Intercept.
@end itemize

@itemize @bullet
@item Integral Media Gateway Controller for H.323
@item Integral Back End functions for H.323.
@item Integral H.323 Gatekeeper.
@end itemize

@subsection Phase 2 Requirements

Phase 2 requirements provide SIP-T capabilities.

@itemize @bullet
@item Integral Media Gateway Controller for SIP-T.
@item Integral Back End functions for SIP-T.
@item Integral SIP redirect/proxy server.
@end itemize

@subsection Phase 3 Requirements

Phase 3 requirements provide network service capabilities.

@itemize @bullet
@item ENUM support.
@item AAA support.
@item EAP authentication.
@item External PLMN authentication.
@item GSM MSC/VLR capabilities.
@item ETSI Tiphon 4 interworking.
@item ISDN support on E interface.
@end itemize

@subsection Phase 4 Requirements

Phase 4 requirements expose internal interfaces to provide softswitch capabilities.

@itemize @bullet
@item J Interface (SIGTRAN) exposed.
@item N Interface (MGCP, H.248/MEGACO) exposed.
@end itemize

@subsection Phase 5 Requirements

Phase 5 requirements complete full VoIP (NGN) switching.

@itemize @bullet
@item Support for directly attached H.323, SIP and MGCP IP Phone terminals.
@item Full RAS support for internal H.323 gatekeeper and SIP proxy server.
@item Full class 5 residential/business feature set.
@end itemize

@node Solution Architecture
@chapter Solution Architecture
@cindex Solution architecture


Although the functions of @dfn{Media Gateway Controller}, @dfn{Media Gateway} and @dfn{Signaling
Gateway} have been decomposed, and in the past these functional groups have been implemented on
separate physical platforms, modern compute capacity and densities permit these functions to be
integrated into a single physical platform without limitation.  Open standard interfaces are
utilized internal to the platform to permit a decomposed model to be split out and to permit
3GPP IMS CN compatibility as well as ETSI Tiphon Version 4 and Multi-Services Forum Version 3
compatibility.

@section @cite{@value{MANUAL_TITLE}} Deployment

In light of the foregoing, the solution architecture takes the form of an integrated PSTN Gateway
capable of providing a number of functional groups in the traditional models.  The
@cite{@value{MANUAL_TITLE}} integrates the following functional groups while still permitting
standard interfaces to be exposed for maximum deployment flexibility:

@itemize @bullet
@item Integral @dfn{Media Gateway Controller} for SIP-T.
@item Integral @dfn{Media Gateway} for RTP/RTCP to PDH G.703/704 G.711 conversion.
@item Integral @dfn{Signaling Gateway} for SS7 ISUP, TCAP and ISDN signaling conversion.
@item Integral @dfn{Redirect/Proxy} server for SIP-T.
@end itemize

@section Distinguishing Features

The primary distinguishing feature of the @cite{Optranex 248} switch is extreme reduction of the
following:

@itemize @bullet
@item capital expense (3 orders of magnitude);
@item power consumption (2 orders of magnitude);
@item footprint (2 orders of magnitude);
@item closed and proprietary software (erradicated);
@item cost per channel (3 orders of magnitude).
@end itemize

@subsection Capital Expense Reduction

The capital expense reduction from competing solutions (Telcobridges) is approximately $500,000 (1 x
OC-48 worth of OC-3 traffic), reduced to $5,000 (1 x OC-48) for the @cite{Optranex 248} switch.
This is 2 orders of magnitude lower than competing solutions.
Capital expense reduction from current popular solutions (Genband) is approximately $2,500,000 (1 x OC-48
worth of traffic), reduced to $5000 (1 x OC-48) for the @cite{Optranex 248} switch.
This is 3 orders of magnitude lower than current popular solutions.

@subsection Power Consuption Reduction

The power consuption reduction is from 50 kWatt for competing and popular solutions to less than 1
kWatt for the @cite{Optranex 248} switch.  Power consumption is 2 orders of magnitude lower than
competing solutions.

@subsection Footprint Reduction

The footprint reduction is from 2 full 7' bays (48 U) to 2 x 1U x 20" deep chassis.  This is 2
orders of magnitude reduction in footprint.

@subsection Closed and Proprietary Software Reduction

Whereas competing solutions provide some open-source software, the @cite{Optranex 248} switch is
completed implemented with open and open-source software.

@subsection Cost per Channel Reduction

Cost per channel reduction over approaches used by FreeSwitch, Asterisk, OpenPBX and others is from
approximately $4.64 to $5.65 a channel, to $0.008.  This is approximately 3 orders of magnitude
reduction in per-channel costs.@footnote{See @cite{High Density SONET/SDH MG Interface for VoIP
Trunking, B. Bidulock, April 24, 2009}.}

@section Call Flows

This section provides some illustrative application call flows:@footnote{This section is not
intended as a @dfn{Detailed Design}, but provides illustration only for these @dfn{Application
Notes}.  Refer to RFC XXXX for detailed information.}

@node Network Architecture
@chapter Network Architecture
@cindex Network architecture

The network architecture is illustrated in @figref{1}.

@figuresized{pgw01,1,Network Architecture,6.0in}

@noindent
The network architecture consists of the following major components:

@itemize @bullet
@item @dfn{Customer SIP Network} --- A customer SIP network containing SIP UAs for originating and
terminating calls.  Each UA is associated with at least one NANP telephone number assigned to the
customer SIP network.
@item @dfn{Customer SIP Proxy} --- An inbound and outbound SIP proxy used to pass calls to a Voice
Peering Proxy (perhaps coexistent with the customer SIP proxy) and a PSTN GW.
@item @dfn{Voice Peering Proxy} --- A voice peering fabric proxy based on Carrier ENUM
capable of determining whether outbound calls are destined for a Voice Peering fabric or the PSTN
GW.

The purpose of a voice peering SIP proxy is to perform Carrier ENUM for the purposes of routing
customer calls to a voice peering fabric or network for PSTN bypass.  As there is no initial
requirement for voice peering, this proxy is not shown in @figref{1}.  Nevertheless, this proxy
might be coexistent with the customer SIP proxy or the carrier proxy.
@item @dfn{Carrier Proxy} --- A telephony routing SIP proxy capable of Carrier ENUM or interaction with
the C-SCP.  This proxy might be coexistent with the @i{C-SCP} or an @cite{Optranex 248} gateway
switch.

The purpose of the carrier SIP proxy is to perform analysis and routing in conjunction with the
@i{C-SCP} platform when necessary and determine to which of a number of @cite{Optranex 248} gateway
switches to route the call.  Traffic estimates for 200 DS3sa requires the use of at least two
@cite{Optranex 248} gateway switches.
@item @dfn{C-SCP Platform} --- The @i{Converged-SCP} platform capable of number portability dips and the
interworking with the carrier proxy as described in this document.
@item @dfn{Router/Firewall} --- An Internet Protocol Router/Firewall for the purpose of IP
connectivity between the elements in the IP domain.
@item @dfn{Optranex 248 Gateway Switch} --- The @cite{Optranex 248} gateway switch(es) connecting
the IP and CS domains.
@item @dfn{SONET ADM} --- SONET Add-Drop Multiplexer(s) providing SONET connectivity between each
@cite{Optranex 248} switch and the PSTN.
@item @dfn{Public Switched Telephone Network} --- The PSTN consisting of Lata and Carrier access
tandems for outbound and egress traffic.
@end itemize

@noindent
In @figref{1}, the @cite{Optranex 248} switch acts as a set of implicitly registered telephone
subscriber User Agents towards the customer SIP proxies, and as an originating, terminating or
tandem local switch to the PSTN.

@menu
* Ethernet Connections::
* SONET/SDH Connections::
@end menu

@node Ethernet Connections
@section Ethernet Connections

As illustrated in @figref{5}, Ethernet connectivity of the @cite{Optranex 248} switch will consist
of four separate 1000BaseT Ethernet interfaces per server chassis for a total of eight separate
1000BaseT connections.  These 1000baseT Network Interface connections are RJ-45 connectors that
should be interconnected using Category 6 cable.@footnote{Shielded twisted pair (STP) is required
for NEBS-3 compliance and the server chassis ports are designed to work with STP cable; however, the
servers will operate with unshielded twisted pair (UTP) cable.}

These 1000BaseT physical network interfaces will be used to support a number of separate subnetworks
impressed on VLANs: one VLAN dedicated to each subnetwork.

In addition to the 1000BaseT ports described above, each server chassis has a single 100baseT port
dedicated to an on-board Remote Management Module (RMM).  This is also illustrated in @figref{5}.
The 100baseT network interface connections are RJ-45 connectors that should be interconnected using
Category 5 cable.@footnote{Again, STP is required for NEBS-3 compliants but UTP will function.}

These 100BaseT physical network interfaces do not require VLANs and may, instead, be connected on a
dedicated non-VLAN subnetwork.

@figuresized{pgw05,5,Ethernet Network Interfaces,5.0in}

@noindent
IEEE 802.1q prioritization will be used for prioritizing traffic on the various VLANs.  The priority
of the various VLANs from lowest to highest are as follows:

@enumerate
@item public Internet traffic;
@item test-bed RTP traffic;
@item test-bed SIP traffic;
@item test-bed @dfn{SIGTRAN M3UA} traffic;
@item customer RTP traffic;
@item customer SIP traffic;
@item @dfn{SIGTRAN M3UA} traffic;
@item management traffic.
@end enumerate

@subheading IP Address Requirements

The IP address requirements for the @cite{Optranex 248} are as follows:

@itemize
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN1 for public Internet access.  These IP addresses must be able to address the
public internet for software download and installation.  These IP addresses can operate through a
NAT to reach the public internet.  Connection to the internet can be made intermittent or temporary
for the purposes of security.
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN2 for test-bed RTP traffic.  These IP addresses need only adddress each other.
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN3 for test-bed SIP traffic.  These IP addresses need only address each other.
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN4 for test-bed M3UA traffic.  These IP addresses need only address each other.
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN5 for customer RTP traffic.  These IP addresses must be directly addressable from
customer SIP networks (proxies or SBCs) and must be able to directly address customer SIP networks
(proxies or SBCs).
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN6 for customer SIP traffic.  These IP addresses must be directly addressable from
the carrier proxy (C-SCP) and must be able to directly address the carrier proxy (C-SCP).  (These IP
addresses might also need to directly address (and be addressed by) customer proxies.)
@item Eight IP addresses (one for each 1000baseT port on each server chassis) assigned to the
subnetwork on VLAN7 for SIGTRAN M3UA traffic.  These IP addresses must be directly addressable to
and from the SIGTRAN Signaling Gateways.
@item Ten IP addresses (one for each 1000baseT port, and one for each 100baseT port, on each sever
chassis) with the eight (8) 1000baseT ports assigned to the subnetwork on VLAN8, and the two (2)
100baseT ports connected on a non-VLAN segment (but to the same subnetwork as VLAN8), for management
traffic.  This VLAN is expected to carry DNS traffic, NTP traffic, SNMP traffic, Remote Management
Traffic, and SSH access from remote locations.  These IP addresses must be able to address DNS and
NTP servers.  Also, some form of remote SSH or other access to the Remote Management Modules and
login to the server chassis is required.
@end itemize

@noindent
I would prefer if these addresses were not statically defined, but were acquited using DHCP and
populated in DNS through either static or dynamic-DNS assignment from DHCP.

@subheading Traffic Requirements

The traffic requirements for each VLAN is listed in @tabref{T-6}, and detailed in the sections that
follow:

@tabfig{pgwt06,T-6,Traffic Requirements}

@subsubheading RTP Traffic Calculations

Each G.711 circuit can pass 8000 octets per second or 64 kbps.  With a 10 millisecond packetization
on AVT RTP G.711 PCMU, the RTP payload is 80 octets.  With a 30 millisecond packetization on AVT RTP
G.711 PCMU, the RTP payload is 240 octets.  Each RTP has the following overheads:

@multitable {18}{octets}{Ethernet packet overheads.}
@item 18 @tab octets @tab Ethernet packet overheads.
@item 4 @tab octets @tab VLAN packet overheads.
@item 20 @tab octets @tab IPv4 header overheads.
@item 8 @tab octets @tab UDP header overheads.
@item 12 @tab octets @tab RTP header overheads.
@item 62 @tab octets @tab Total overheads.
@end multitable

The packet size for 10ms packets with 80 octet payload is 142 octets or 1,136 bits.  10ms packets
are generated 100 times per second per direction per channel, or 113,600 bits per second per
direction.  The efficiency of the 10ms RTP packet is approximately 56%.  A DS3 of 672 channels
requires a bandwidth of 76.3392 Mbps (in each direction) of 10ms RTP G.711 packets.

The packet size for 30ms packets with 240 octet payload is 302 octets or 2,416 bits.  30ms packets
are generated 33-1/3 times per second per direction per channel, or 80,533 bits per second per
direction.  The efficiency of the RTP packet is approximately 80%.  A DS3 of 672 channels requires a
bandwidth of 54.1185 Mbps (in each direction) of 30ms RTP G.711 packets.

@ignore
The packet size for 90ms packets with 720 octet payload is 782 octets or 6,256 bits.  90ms packets
are generated 11.1 times per second per direction per channel, or 69,511 bits per second per
direction.  The efficiency of the RTP packet is approximately 92%.  A DS3 of 672 channels required a
bandwidth of  46.711467 Mbps (in each direction) of 90ms RTP G.711 packets.
@end ignore

@subsection Internet Ethernet Traffic

The @cite{Optranex 248} switch requires (temporary or permanent) connectivity to the public
Internet for the purpose of downloading software loads and performing software upgrades.  This is
the lowest priority traffic.  It is recommended that this traffic be performed using a VLAN
dedicated to public Internet access.  This VLAN should have a gateway that may be used as a default
gateway and that provides NAT/Firewall access to the public Internet.  It is anticipated that this
connectivity to the public Internet will be used largely for installation and upgrade procedures
only.  As such, it can be temporary.

@subsection Test-Bed RTP Ethernet Traffic

The requirement for test-bed RTP Ethernet traffic is illustrated in @figref{7}.

@figuresized{pgw07,7,Test-Bed RTP Ethernet Traffic,5.0in}

@noindent
For the trial, during performance and capacity testing, it will be necessary to pass a significant
amount of test-bed RTP traffic between load generators and also intra-switch traffic between the two
server chassis making up the @cite{Optranex 248} switch.  The primary purpose of test-bed RTP
traffic is to accept traffic from load generators and voice quality assessment equipment.

It is recommended that Test-Bed RTP connectivity be performed using a VLAN dedicated to RTP traffic
between the test-bed network and the @cite{Optranex 248} switch.  Separate IPv4 IP addresses for
each of the network connections in each of the server chassis of the @cite{Optranex 248} switch
should be allocated on this dedicated VLAN subnetwork.  All network interfaces of each
@cite{Optranex 248} service should be connected to this VLAN.

Four IP addresses per server chassis (total 8 IP addresses) on the test-bed RTP VLAN is required due
to the number of RTP ports that are required.  64,512 channels requires 129,024 UDP ports, which,
when spaced 2 apart (for RTCP), and consuming half of the available UDP port space, requires 8 IP
addresses in a load-sharing configuration such as is used for performance testing.  In an
active-standby arrangement, each server would require 8 IP addresses of its own on this VLAN, and
would also require 10G Ethernet connectivity.

For example, if @code{VLAN 001} is used for Test-Bed RTP traffic, and Class C subnetwork
@code{192.168.1.0/24} is associated with @code{VLAN 001}, the A-side of the @cite{Optranex 248}
platform could be assigned IP addresses @code{192.168.1.10}, @code{.11}, @code{.12} and @code{.13}
on VLAN 001, and the B-side of the @cite{Optranex 248} switch could be assigned IP addresses
@code{192.168.1.20}, @code{.21}, @code{.22} and @code{.23}.  This configuration is illustrated in
@figref{7}.

For maximum capacity performance testing, switches and routers on the Test-Bed RTP VLAN must be
capable of passing 64,512 channels of G.711 RTP with 10 millisecond and 30 millisecond
packetization.
A 10 millisecond packetization consists of 80 octets of RTP AVT payload every 10 milliseconds for
64,512 channels full duplex or 2 x 6,451,200 packets per second.
A 30 millisecond packetization consists of 240 octets of RTP AVT payload every 30 milliseconds for
64,512 channels full-duplex or 2 x 2,150,400 packets per second.
Each RTP packet on the VLAN has 18 octets of Ethernet overhead, 4 octets of VLAN overhead, 20 octets
of IPv4 overhead, 8 octets of UDP overhead, and 12 octets of RTP overhead, for a total of 62 octets
of overhead.
At 10 millisecond packetization that is 62 octets of overhead and 80 octets of payload at 2 x
6,451,200 packets per second or 14.65712 Gbps.
At 30 millisecond packetization that is 62 octets of overhead and 240 octets of payload at 2 x
2,150,400 packets per second or 10.39073 Gbps.
4 x 1000baseT network connections are capable of 8 Gbps full duplex maximum: therefore, it will
be possible to test 2 x 32,256 channels (2 x OC-48) or 2 x 7.32856 Gbps at 10ms packetization or
2 x 5.195365 Gpbs at 30ms packetization during capacity testing.  A single OC-48 (2.488 Mbps) SFP
loop-back cable will be provided to permit 32,256 channels of loopback (2 x 64,512 channels) for
capacity performance testing.

@subsection Test-Bed SIP Ethernet Traffic

For the trial, a test-bed SIP proxy and test-bed SIP softphones will also be connected on the same
VLAN as the customer proxies.

For capacity performance testing, this VLAN must be capable of processing a maximum of 64,512
simultaneous calls, consisting of 3 minute average holding time.  This consists of a maximum of
64,512 calls every 3 minutes, or 360 calls per second, which is on the order of 12 megabits per
second of SIP signaling.

@subsection Test-Bed SIGTRAN M3UA Ethernet Traffic

It is recommended that test-bed @dfn{SIGTRAN M3UA} connection be performed using a VLAN dedicated to
communications between the A- and B-side of the @cite{Optranex 248} switch.  Separate IPv4 IP
addresses for each of the server chassis of the @cite{Optranex 248} switch should be allocated on
this dedicated VLAN subnetwork.  Router connectivity between the @cite{Optranex 248} switch servers
should be restricted to the MAC and IPv4 IP addresses of those servers.  PoE or GRE may be used
between the router and @cite{Optranex 248} switch servers to simplify firewall designs for, and
further isolate, this traffic.

@subsubsection Test-Bed SIGTRAN M3UA Network Configuration

SCTP Multihoming is (@cite{RFC 4960}) is necessary to provide path and network interface redundancy
for @dfn{SIGTRAN M3UA}.  However, SCTP Multihoming does not function properly through a NAT.  This
problem can be side-stepped using SCTP-aware NAT (doesn't really exist yet in standard form) or by
using LT2P, PoE, GRE or other point-to-point route encapsulation for establishing direct IP
connections through the edge router.

As the IP addresses of the A- and B-side of the @cite{Optranex 248} platform for test-bed
@dfn{SIGTRAN M3UA} traffic may be wholly within a private IP network, route encapsulation is not
necessary.  (For the normal case, see @ref{SIGTRAN M3UA Network Configuration}.)

@subsubsection Test-Bed SIGTRAN M3UA AS Configuration

The @cite{Optranex 248} switch servers will be configured as two M3UA IP Server Processes
(IPSPs) serving seperate Application Server(s).  There will be one Application Server for each of
the A- and B-side of the @cite{Optranex 248} platform.  Application Servers will be configured
simplex (in standby or loadshare traffic modes).

@subsubheading Signaling Point Codes

The @cite{Optranex 248} switch will require two small-network experimental SS7 signaling point
codes for loop-back trunk configuration for capacity and performance testing.  Four point codes will
be initially selected from the highest available point code block in ANSI Signaling Point Code
Block listing, @cite{Table B3/T1.111.8}.  The ANSI point code block assignments are listed in
@tabref{T-3}.

@tabfig{pgwt03,T-3,ANSI Point Code Block Assignments}

@noindent
This point code will permit 4 trunk groups for testing to be configured:

@tabfig{pgwt04,T-4,Loop-Around Trunk Group Assignment}

@noindent
These point codes will not be addressable from the public SS7 network and will only by addressable
internally.  Also, the trunk groups at the ends of which these signaling point codes are assigned
will not terminate nor transit the PSTN, but will be configured as loop-around trunks between the A-
and B-Side of the @cite{Optranex 248} switch.  @xref{Test-Bed Copper OC-48 Loop Back}.

@subsubsection Test-Bed SIGTRAN M3UA Traffic Requirements

Sufficient bandwidth between the side of the @cite{Optranex 248} gateway switch for @dfn{SIGTRAN
M3UA} is required for proper test operation.  For performance testing capacity, SONET connectivity
consists of 2 OC-12 and 1 OC-48 of test traffic, for a total of 72 DS3s.  With average 3-minute
holding times, expected average call attempt traffic will be (72 x 672)/180 or 268 calls per second.
A typical ISUP call averages 5 messages with an average of 28 octets per message.  Adding
@dfn{SIGTRAN M3UA} overheads@footnote{18 octets of Ethernet packet overhead, 4 octets of VLAN packet
overhead, 20 octets of IPv4 header overhead, 16 octets of SCTP packet overhead, 8 octets of DATA
chunk overhead, 12 octets of M3UA overhead.} yeilds an average of 106 octets per message.  At 268
calls per second, this totals a mere 227,264 bits per second.

Nevertheless, it is important that this traffic be given priority over less important flows (such as
RTP traffic).

@subsection Test-Bed DNS Ethernet Traffic

@subsection Customer RTP Ethernet Traffic

It is recommended that Customer RTP connectivity be performed using a VLAN dedicated to RTP traffic
between the customer networks and the @cite{Optranex 248} switch.  Separate IPv4 IP addresses for
each of the 1000baseT network interfaces on each of the server chassis@footnote{If the optional
10Gig Ethernet connectivity is provided, this interface would require 4 separate IP address for the
one interface.} of the @cite{Optranex 248} switch should be allocated on this dedicated VLAN
subnetwork.  All four 1000baseT network interfaces on each @cite{Optranex 248} server chassis should
be attached to this VLAN subnetwork.

Although, for the trail, the amount of traffic is significantly lower than the maximum capacity of
the @cite{Optranex 248} switch, IP addresses should be allocated and network connections attached in
accordance with the maximum capacity configuration of the switch.  This avoids making disruptive
modifications at a later date due to growth of the live platform.

@figuresized{pgw09,9,Customer RTP Ethernet Traffic,5.0in}

@noindent
Therefore, four IPv4 IP addresses per server chassis (total 8 IP addresses) on the customer RTP VLAN
is required due to the number of RTP ports that are required in a maximum configuration.  In a
maximum configuration, 64,512 channels requires 129,024 UDP ports, which, when spaced 2 apart (for
RTCP), and consuming half of the available UDP port space for a given IP address, requires 8 IPv4 IP
addresses in a load-sharing configuration such as is used for performance testing.  In an
active-standby arrangement, the active server assumes all 8 IP addresses (using IP takeover if
necessary) on this VLAN, and would also require 10GE connectivity.

For example, if @code{VLAN 003} is used for Customer RTP traffic, and Class C subnetwork
@code{192.168.3.0/24} is associated with @code{VLAN 003}, the A-side of the @cite{Optranex 248}
platform could be assigned IPv4 IP addresses @code{192.168.3.10}, @code{.11}, @code{.12} and
@code{.13}; the B-side, @code{192.168.3.20}, @code{.21}, @code{.22} and @code{.23}.  This
configuration is illustrated in @figref{9}.

For the trial, during normal operation (no capacity performance testing in effect), this VLAN must
be capable of passing approximately 2016 channels of G.711 RTP PCMU with 10 millisecond and 30
millisecond packetization.
A 10 millisecond packetization consists of 80 octets of RTP AVT payload every 10 milliseconds for
2,016 channels full-duplex or 2 x 201,600 packets per second.
A 30 millisecond packetization consists of 240 octets of RTP AVT payload every 30 milliseconds for
2,016 channels full-duplex or 2 x 67,200 packets per second.
Each RTP packet on the VLAN has 18 octets of Ethernet overhead, 4 octets of VLAN overhead, 20 octets
of IPv4 overhead, 8 octets of UDP overhead, and 12 octets of RTP overhead, for a total of 62 octets
of overhead.
At 10 millisecond packetization that is 62 octets of overhead and 80 octets of payload at 2 x
201,600 packets per second or 458.0353 Mbps.
At 30 millisecond packetization that is 62 octets of overhead and 240 octets of payload at 2 x
67,200 packets per second or 324.7104 Mbps.@footnote{Note that if the entire OC-12 were to be
utilitized during the trial, the number of channels could increase by a factor of four to 8064,
giving 1.833 Gbps of RTP traffic at 10ms packetization or 1.3 Gbps of RTP traffic at 30ms
packetization.}

@subsection Customer SIP Ethernet Traffic

It is recommended that Carrier Proxy SIP connectivity be performed using a VLAN dedicated to SIP
signaling between the carrier proxy and the @cite{Optranex 248} switch.@footnote{Note that
currently the @cite{Carrier Proxy} is envisioned as being coexistent with the @i{C-SCP}.}  Separate
IPv4 IP addresses for each of the server chassis of the @cite{Optranex 248} switch should be
allocated on this dedicated VLAN subnetwork.  Two 1000baseT network interfaces on each server
chassis should be attached to this VLAN subnetwork.  Network interfaces distinct from those used for
@i{C-SCP} connection should be used.

For the trial, this VLAN must be capable of processing a maximum of approximately 2000 simultaneous
channels of traffic, consisting of 3 minute average holding time calls.  This consists of a maximum
of approximately 2000 calls every three minutes or 12 calls per second, which is on the order of a
megabit per second of
traffic.@footnote{Increasing the capacity at trial to the full OC-12 would not increase the customer
SIP signaling bandwidth to significant levels.}

@subsection SIGTRAN M3UA Ethernet Traffic

It is recommended that @dfn{SIGTRAN M3UA} connection be performed using a VLAN dedicated to
communications between the @cite{Optranex 248} switch and the PSTN SS7 network.  Separate IPv4 IP
addresses for each of the server chassis of the @cite{Optranex 248} should be allocated on this
dedicated VLAN subnetwork.  Router connectivity between the @cite{Optranex 248} switch servers and
the @dfn{SIGTRAN M3UA} signaling gateway(s) should be restricted to the MAC and IPv4 IP addresses
of those servers.  PoE or GRE may be used between the router and @cite{Optranex 248} switch servers
to simplify firewall designs for, and further isolate, this traffic.

@subsubsection SIGTRAN M3UA Network Configuration

SCTP Multihoming (@cite{RFC 4960}) is necessary to provide path and network interface redundancy for
SIGTRAN M3UA.  However, SCTP Multihoming does not function properly through a NAT.  This problem can
be side-stepped using SCTP-aware NAT (doesn't really exist yet in a standard form) or by using L2TP,
PoE, GRE or other point-to-point route encapsulation for establishing direct IP connections through
the edge router.

If Signaling Gateway (SG) IP addresses are within a private network, direct addressing is possible.
If the SG IP addresses are in a public network or VPN external to the private network to which the
@cite{Optranex 248} is attached, route encapsulation to allow the @cite{Optranex 248} to assign
direct IP addresses allocated from the external network.

An additional requirement for the trial is that all SCTP addresses must be IPv4 addresses.

@subsubsection SIGTRAN M3UA AS Configuration

The @cite{Optranex 248} switch servers will be configured as two M3UA Application Server Processes
(ASPs) serving the same Application Server(s).  There will be one Application Server for each of the
SS7 Signaling Point Codes assigned to the @cite{Optranex 248} switch.  Applications Servers should
be configurable at the SG in either standby or loadshare traffic modes.

@subsubheading Signaling Point Codes

The @cite{Optranex 248} switch will have at least one SS7 point code allocated across both
A- and B-side server chassis.

@subsubsection SIGTRAN M3UA Traffic Requirements

Sufficient bandwidth between the @cite{Optranex 248} gateway switch and the @dfn{SIGTRAN M3UA}
signaling gateways is required for proper operation.  For the trial, SONET connectivity consists of
OC-12 SONET connections; however, only 3 DS3s worth of traffic is initially provided.  With average
3-minute holding times, expected average call attempt traffic will be (3 x 672)/180 or 12 calls per
second.
A typical ISUP call averages 5 messages with an average of 28 octets per message.  Adding
@dfn{SIGTRAN M3UA} overheads@footnote{18 octets of Ethernet packet overhead, 4 octets of VLAN packet
overhead, 20 octets of IPv4 header overhead, 16 octets of SCTP packet overhead, 8 octets of DATA
chunk overhead, 12 octets of M3UA overhead.} yeilds an average of 106 octets per message.  At 12
calls per second, this totals a mere 10,176 bits per second.

Nevertheless, it is important that this traffic be given priority over less important flows (such as
RTP traffic).

@subsection DNS Ethernet Traffic 

@subsection Management Ethernet Traffic

It is recommended that management connectivity be performed using a VLAN dedicated to communications
between management stations and the @cite{Optranex 248} switch.  Separate IPv4 IP address for each
server chassis of the @cite{Optranex 248} should be allocated on this dedicated VLAN subnetwork.
All four 1000baseT network interfaces on each server chassis should be attached to this VLAN
subnetwork.  Separate IPv4 IP addresses for integrated management of the servers and management of
the application should be provided.  Management traffic is expected to be insignificant in terms of
bandwidth.

@subsubsection DNS Ethernet Traffic

The @cite{Optranex 248} requires access to DNS for both internal and external hosts to be able to
resolve domain names.

@subsubsection NTP Ethernet Traffic

The @cite{Optranex 248} requires a permanently available @dfn{NTP (Network Time Protocol)} source to
synchronize the time-of-day clocks between the platforms and to the network.  Should the NTP source
be temporarily unavailable, the A- and B-sides of the platform will attempt to synchronize to each
other with the A-side as master and the B-side as slave.  A network NTP source can be provided using
any (or all) of the standard methods: unicast request/response, multicast source, broadcast source.
It is preferred that all methods operate on the Management VLAN.

Management stations and monitoring devices should be synchronized to the same time source as the
@cite{Optranex 248} platform.

@page
@node SONET/SDH Connections
@section SONET/SDH Connections

The SONET/SDH network connections are illustrated at the top of @figref{6}.

@figuresized{pgw06,6,SONET/SDH Network Interfaces,5.0in}

@noindent
There are two primary SONET/SDH connections:

@enumerate
@item One PSTN Aggregated DS3 over SONET OC-12 connection to the PSTN for carrying live customer
traffic and PSTN test traffic during the trial.
@item One copper SFP loopback connection for the purpose of capacity performance testing.
@end enumerate

@subsection PSTN Aggregated DS3 over SONET

The primary traffic-bearing SONET/SDH connection for the trial consists of an OC-12 connection which
will initially connect 3 aggregated DS3s (a maximum of 2016 channels).  These trunks will be
organized into trunk groups and assigned a number that will also be assigned (for trunk groups
containing outgoing and two-way trunk members) in the @i{C-SCP} platform.  It is recommended
that the OC-12 connection to the interconnect ADM be completed as a 1:1 APS connection where the
working OC-12 is connected to one of the two server chassis in the @cite{Optranex 248} switch, and
the protect OC-12 is connected to the other of the two server chassis in the @cite{Optranex 248}
switch.

@subsubsection Synchronization

The @cite{Optranex 248} card contains a stratum 3 clock with accuracy for OC-192 operation.  It is
expected that aggregated DS3's are network synchronized to the SONET network or to a stratum 3
clock.  If this is not the case, positive and negative pointer adjustment compensation on the
Synchronous Payload Envelope for each aggregated DS-3 will be required.@footnote{I would prefer to
avoid this unless absolutely necessary.} The system side of the OC-48 framer on the @cite{Optranex
248} card is frame-locked to the line side.  Line-side timing can be derived from the SONET network
received line signal or can be taken from the on-board stratum 3 clock.

When not connected to the SONET network, and for performance or capacity testing only, the A-side of
the @cite{Optranex 248} chassis can be configured to take its syncrhonization from the local stratum
3 clock; and the B-side of the @cite{Optranex 248} chassis can be configured to take its timing from
the receive SONET line.

When connected to the SONET network, both the A- and B-sides of the @cite{Optranex 248} gateway
switch should be configured to take their timing directly from the SONET receive line, with a
fallback to the local stratum 3 clock (and a possible further fall back to DPLL hold).

@subsection Test-Bed Copper OC-48 Loop Back

For the purpose of capacity and performance testing, an additional SONET/SDH connection will be
simulated using an SFP copper loopback cable capable of 2.488 Gbps operation.  One end of this cable
is attached to the A-side of the @cite{Optranex 248} platform; the other, to the B-side.  This
connection will be capable of passing 32,256 channels between the A- and B-sides of the
@cite{Optranex 248} for capacity and performance testing.

@subsection Trunk Group Configuration

@subsubsection Controlling Exchange

It must be identified whether the @cite{Optranex 248} or the remote exchange is the controlling
exchange on all two-way trunks.

@subsubsection Circuit Management Groups

Circuit management groups will need to be identified.  It needs to be specified whether circuit
groups align with T1 circuit groups embedded in the aggregated DS3 or, if multiplexing or
transmuxing is performed between the aggregated DS3 and the remote switches, the circuit group
assignments.

@subsubsection Continuity Testing

It must be identified, for all trunks (whether one-way incoming, one-way outgoing, or two-way),
whether automatic continuity testing is required and on what basis continuity testing is required
(i.e. none, statistical, periodic).  The period must be identified if periodic.

For calls terminating on the @cite{Optranex 248}, for trial, I would prefer to skip the continuity
check procedures.  If this is permitted under interconnect agreement, I would prefer to release the
call with cause value 41 (Temporary Failure) on all terminating calls with automatic continuity
request in the IAM.  This may increase the signaling load, particularly if (as AT&T does sometimes)
continuity testing is performed on @strong{every} call.  If interconnect agreements require, the
@cite{Optranex 248} will be configured for proper installation of loopback on incoming automatic
continuity request calls, and for automatic continuity rechecks.  The requirements for the
interconnect agreement need to be identified.

For calls originating from the @cite{Optranex 248} (and dual-siezure), for trial, I would prefer to
skip the continuity check procedures.  First preference is to suppress continuity check for all
outgoing circuits.  As a second preference, should interconnect agreements require continuity checks
on outgoing calls, again only for trial, I would prefer to blindly indicate successful COT when the
procedures are invoked.  The purpose of this is to initially avoid the need to implement the
required digital filtering for continuity tone positive and negative detection.  Because generation
of COT tone is a less onerous requirement, COT tone can be generated but detection blindly accepted.
For trial it needs to be identified as to whether full continuity testing 

For outgoing calls I would be prefer to skip per-call continuity testing, for trial, and only
configure for management initiated continuity tests for circuit turn-up.

If continuity testing is required periodically on outgoing calls under interconnect agreement, I
would prefer to blindly indicate successful continuity test.

@itemize @bullet
@item release the call with cause value 41 (Temporary Failure);
@item install a loopback (vs. hi-lo);
@item allow the test to fail.
@end itemize

@noindent
Also, for continuity tests on calls terminating to the @cite{Optranex 248}, I would prefer, for the
purposes of trial, a loopback arrangement.

@subsection Test Lines

For the purpose of test calls providing the capability of voice path quality assessment, a number of
test lines will be necessary.  Test line terminations will be required on, or via, interconnect
switches on the PSTN.  Test line terminations will also be provided on the @cite{Optranex 248}
switch.  Test lines include

@multitable @columnfractions .1 .9
@item 100 @tab balance and noise test termination (type 100 test line) (balanced-termination)
@item 101 @tab test board communication (type 101 test line)
@item 102 @tab milliwatt test (type 102 test line) (milliwatt)
@item 103 @tab supervisory and signaling test circuit (type 103 test line) (not with SS7)
@item 104 @tab transmission measuring and noise checking (type 104 test line) (silent-termination)
@item 105 @tab automatic transmission measuring test (type 105 test line)
@item 106 @tab spare
@item 107 @tab data transmission test (type 107 test line)
@item 108 @tab digital circuit loopback test (type 108 test line) (loopback)
@item 109 @tab echo canceller test (type 109 test line)
@end multitable

@node Reference Architecture
@chapter Reference Architecture
@cindex Reference architecture

There are several reference architectures to which the solution architecture applies, as follows:

@enumerate
@item IETF SIP Architecture
@item Multiservices Switching Forum Release 1, 2 and 3 Architectures
@item ETSI Tiphon Release 4 Architecture
@item ITU-T TR.45 Architecture
@item 3GPP Release 9 IMS Architecture
@end enumerate

@noindent
Of these, by far the most important is the @cite{3GPP Release 9 IMS Architecture} as described in
@cite{3GPP TS 23.002 V9.2.0 (2009-12)}: the
@cite{3GPP Release 9 IMS Architecture}
encompasses
portions of the @cite{ITU-T TR.45 Architecture} as it subsumes @cite{ITU-T Recommendation Q.1912.5};
the @cite{ETSI TIPHON Release 4 Architecture} has fallen asside for the 
@cite{3GPP Release 9 IMS Architecture};
the @cite{Multiservices Switching Form Release 3 Architecture} defers to the 
@cite{3GPP Release 9 IMS Architecture}
for all of the non-legacy components; and,
the @cite{IETF SIP Architecture} is antiquated for telephony.

The 
@cite{3GPP Release 9 IMS Architecture}@footnote{See @cite{3GPP TS 23.002 V9.2.0 (2009-12)}.}
consists of four or five elements of interest, and about as many interfaces of interest, in the
current discussions:

@table @dfn
@item MRFC
The @dfn{MRFC} is the @dfn{Media Resource Function Controller}.
This function in the solution architecture is provided primarily by the @cite{Optranex 248} switch.
@item MRFP
The @dfn{MRFP} is the @dfn{Media Resource Function Processor}.
This function in the solution architecture is provided primarily by the @cite{Optranex 248} switch.
@item MGCF
The @dfn{MGCF} is the @dfn{Media Gateway Controller Function}.
This function in the solution architecture is provided primarily by the @cite{Optranex 248} switch.
@item MGF
The @dfn{MGF} is the @dfn{Media Gateway Function}.
This function in the solution architecture is provided primarily by the @cite{Optranex 248} switch.
@item BGCF
The @dfn{BGCF} is the @dfn{Breakout Gateway Controller Function}.
This function in the solution architecture is provided primarily by the customer proxy but partially
by the @i{C-SCP} platform.
@item I-CSCF
The @dfn{I-CSCF} is the @dfn{Interrogating Call Services Control Function}.
This function in the solution architecture is provided primarily by the customer proxy but partially
by the @i{C-SCP} platform.
@item S-CSCF
The @dfn{S-CSCF} is the @dfn{Serving Call Services Control Function}.
This function in the solution architecture is provided by the customer proxy.
@end table

@table @dfn
@item Mn Interface (MGCF to MGW)
The @dfn{Mn} reference point describes the interfaces between the @dfn{MGCF} and @dfn{IMS-MGW} in
the @dfn{IMS}.  It has the following properties:
@itemize @bullet
@item full compliance with the H.248 standard functions for IMS---PSTN/PLMN interworking;
@item flexible connection handling that allows support of different call models and different media
processing pruposes not restricted to H.232 usage;
@item open architecture where extensions/Packages definition work on the interface may be carried
out;
@item dynamic sharing of IMS-MGW physical node resources (a physical IMS-MGW can be partitioned into
logically separate virtual MGWs/domains consisting of a set of statically allocated terminations);
@item dynamic sharing of transmission resources between the domains as the IMS-MGW controls bearers
and manage resources according to the H.248 protocols and functions for IMS.
@end itemize
@noindent
The @dfn{Mn} reference point is internal to the @cite{Optranex 248} switch and is, therefore, not
exposed.

@item Mg Interface (MGCF to CSCF)
The @dfn{Mg} reference point allows the MGCF to forward incoming session signaling (from the
circuit switched network) to the CSCF for the purpose of interworking with circuit switched
networks.  The protocol used for the @dfn{Mg} reference point is SIP (as defined by @cite{RFC 3261},
other relevant RFCs, and additional enhancements introduced to support 3GPP's needs).

@item Mr Interface (S-CSCF to MRFC)
The @dfn{Mr} reference point allows interaction between an S-CSCF and an MRFC.  The protocol used for
the @dfn{Mr} reference point is SIP (as defined in @cite{RFC 3261}, other relevant RFCs, and
additional enhancements introducted to support 3GPP's needs).

@item Mp Interface (MRFC to MRFP)
The @dfn{Mp} reference point allows an MRFC to control media stream resources provided by an MRF.
The @dfn{Mp} reference point has the following properties:
@itemize @bullet
@item full compliance with the H.248 standard; and,
@item open architecture where extensions (packages) definition work on the interface may be carried
out.
@end itemize
@noindent
The @dfn{Mp} reference point is internal to the @cite{Optranex 248} switch and is, therefore, not
exposed.

@item Mj Interface (BGCF to MGCF)
The @dfn{Mj} reference point allows the Breakout Gateway Control Function to exchange session
signaling messages with the Media Gateway Control Function for the purpose of interworking to the
circuit-switched networks, or for transit networks.  The @dfn{Mj} reference point is based on
external specifications (i.e. SIP).
@end table

@node Protocol Architecture
@chapter Protocol Architecture
@cindex Protocol architecture
@menu
* C-SCP Interworking Call Flows::
* Calls from PSTN to SIP::
* Calls from SIP to PSTN::
* ENUM Calls from PSTN to SIP::
* ENUM Calls from SIP to PSTN::
@end menu

@node C-SCP Interworking Call Flows
@section C-SCP Interworking Call Flows

The following sections provide interworking call flows between the @cite{Optranex 248} switch and
the @i{C-SCP} platform.

@node Calls from PSTN to SIP
@section Calls from PSTN to SIP

Calls from the PSTN terminating on the SIP network that are processed by the @cite{Optranex 248}
switch and further processed by the @i{C-SCP} platform are illustrated in @figref{2}.

@figuresized{pgw02,2,Calls from PSTN to SIP,6.0in}

@noindent
@enumerate

@item Point (1) in @figref{2}.

A call is originated and terminates from the PSTN on the @cite{Optranex 248} switch.  An ISUP
@msg{IAM} is received by the @cite{Optranex 248} switch.  For an example of the @msg{IAM}, see
@ref{iam:ex0}.

@cartouche
@float Example,iam:ex0
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{CdPN} @tab NSN, 777-666-5555
@item @parm{JIP} @tab 830-660
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Joe"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Sue"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM received by Optranex 248 in Successful PSTN to SIP Call}}
@end float
@end cartouche

@item Point (2) in @figref{2}.

The information from the received @msg{IAM} is translated to a SIP @msg{INVITE} message and the
@msg{INVITE} is sent to the @cite{Carrier Proxy}.

Calls coming from the PSTN will have information translated from the @msg{IAM} to a SIP @msg{INVITE}
and the @msg{INVITE} will be sent to the @cite{Carrier Proxy} for number analysis and customer proxy
selection or treatment.

All fields in the @msg{INVITE} (@prim{Request-URI}, @prim{To}, @prim{From},
@prim{P-Asserted-Identity}, and @prim{P-Requested-Identity}) will have a @strong{tel} URI formatted
number.

The @msg{INVITE} corresponding to the above @msg{IAM} is listed in @ref{message:msg1}.

@cartouche
@float Message,message:msg1
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001
Max-Forwards: 33
From: "Joe" <tel:+16666666666>;tag=7643kals
To: "Sue" <tel:+14444444444>
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:gw1@heramax.com:5060;transport=udp>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 INVITE generated from IAM in Successful PSTN to SIP Call}}
@end float
@end cartouche

For more detail concerning the mapping of ISUP parameters to the outgoing @msg{INVITE} method, see
@ref{Translation of IAM to INVITE} and @ref{Example IAM to INVITE Translation}.

@item Point (3) in @figref{2}.

The @cite{Carrier Proxy} forwards the @msg{INVITE} as a stateful proxy to the @i{C-SCP}.

@cartouche
@float Message,message:msg50
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
Max-Forwards: 32
From: "Joe" <tel:+16666666666>;tag=7643kals
To: "Sue" <tel:+14444444444>
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:gw1@heramax.com:5060;transport=udp>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy INVITE in Successful PSTN to SIP Call}}
@end float
@end cartouche

@item Point (4) in @figref{2}.

If the @i{C-SCP} platform expects that it will take longer that 200 milliseconds to respond
to an @msg{INVITE} with a @msg{3xx}, @msg{4xx} or @msg{5xx} response, it should send a @msg{100
Trying} message in response to the @msg{INVITE}.  Should the @i{C-SCP} platform delay in
responding to the @msg{INVITE}, the @cite{Optranex 248} or @cite{Carrier Proxy} might cancel the
@msg{INVITE} with a @msg{CANCEL} request for the dialog (should the call be released on the ISUP
side before the response is received).  The @i{C-SCP} platform is expected to acknowledge the
@msg{CANCEL} request and not further respond to the corresponding @msg{INVITE}.

@cartouche
@float Message,message:msg2
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{100 Trying Response from C-SCP for Successful PSTN to SIP Call}}
@end float
@end cartouche

@item Point (5) in @figref{2}.

The @i{C-SCP} platform will analyze the information and either return a @msg{305 Use Proxy}
message directing the @cite{Carrier Proxy} to send the call to a customer proxy, or will return a
@msg{4xx} or @msg{5xx} message indicating an error with a @prim{Reason} header indicating the
@cite{Q.850} or @cite{ANSI} cause value according to the logic outlined later under unsuccessful
call flows.

The @i{C-SCP} platform, for successful calls, sends a @msg{305 Use Proxy} message in response to the
@cite{Carrier Proxy} with the customer proxy to which to forward the call in the @prim{Contact}
header.  The procedure for analyzing the received @msg{INVITE} is detailed in @ref{Extracting
Information from the INVITE}.

An example using DNS SRV entries is as follows:

@cartouche
@float Message,message:msg3
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=7643kals
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 INVITE
Contact: "Sue Zy" <sip:sue@customer1.com>
P-Asserted-Identity: Joe Bloe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy from C-SCP for Successful PSTN to SIP Call}}
@end float
@end cartouche

For other mechanisms for distributing calls over customer proxies, see @ref{305 Use Proxy Response}.

@item Point (6) in @figref{2}.

The @cite{Carrier Proxy} acknowledges the response with an @msg{ACK} message.

@cartouche
@float Message,message:msg4
@smallformat
@verbatim
ACK sip:tellingua@heramax.com SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA.1
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
Max-Forwards: 70
From: "Joe" <tel:+16666666666>;tag=7643kals
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 ACK
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 ACK Request for Successful PSTN to SIP Call}}
@end float
@end cartouche

@item Point (7) in @figref{2}.

Information from the @msg{305 Use Proxy} response from the @i{C-SCP} platform (primarily the
@prim{Contact} headers) is used to formulate a new @msg{INVITE} message that is then sent to the
customer proxy.  For more details, see @ref{Processing of the 305 Use Proxy Reponse}.

@item Point (8) in @figref{2}.

The customer proxy then forwards the @msg{INVITE} message within the customer's SIP network.

Additional actions beyond point (8) in @figref{2} are in accordance with @cite{3GPP TS 29.163 V9.0.0
(2009-12)} and the interactions between the @dfn{MGCF} and @dfn{I-CSCF} or @dfn{S-CSCF} as desribed
in @cite{3GPP TS 24.229 V9.2.0 (2009-12)} and do not further involve the @i{C-SCP} platform.

@end enumerate

@subsection Translation of IAM to INVITE


The translation from the @msg{IAM} to the @msg{INVITE} at the @cite{Optranex 248} switch, sent to
the @cite{Carrier Proxy} will be in accordance with @cite{3GPP TS 29.163 V9.0.0 (2009-12)
7.2.3.2.2.}, summarized and with additional features as follows:

@subsubsection B Number

The @prim{Request-URI} and @prim{To} field will always contain the non-ported or ported called
number.

@sp 1
@smallexample
INVITE tel:+19996665555 SIP/2.0
To: <tel:+19996665555>
...
@end smallexample

@noindent
If the @msg{IAM} @dfn{Forward Call Indicators} indicates @pval{number translated} the @parm{npdi}
parameter will be added to the @prim{Request-URI} (but not the @prim{To} header).

@sp 1
@smallexample
INVITE tel:+19996665555;npdi SIP/2.0
To: <tel:+19996665555>
...
@end smallexample

@noindent
If the @msg{IAM} @parm{Generic Address Parameter} parameter contains a ported number it will be the
number in the @prim{To} header and the @prim{Request-URI}.  The @dfn{Called Party Number} (which in
this case is the LRN) will be added to the @prim{Request-URI} (but not the @prim{To} header) in the
@parm{rn} parameter field.@footnote{See @cite{3GPP TS 29.163 7.2.3.2.2A}.}

@sp 1
@smallexample
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
To: <tel:+19996665555>
...
@end smallexample

@noindent
If the @msg{IAM} @parm{Generic Name} parameter is present and contains a @pval{original called name}
that is @pval{presentation-allowed}, it will be used in the @prim{display-name} portion of the
@prim{To} field.  If the name is not available, the @prim{display-name} @samp{"Unavailable"} will be
used instead.@footnote{See @cite{3GPP TS 29.163 7.2.3.2.2.3}.}

@sp 1
@smallexample
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
To: "Joe" <tel:+19996665555>
...
@end smallexample

@subsubsection A Number

If the @parm{Calling Party Number} is not present, or the @parm{Calling Party Number} is
@pval{presentation-restricted}, and there is no @parm{Generic Address Parameter} @pval{additional
user provided number}, the @prim{From} header will contain:

@sp 1
@smallexample
@verbatim
From: "Anonymous" <sip:anonymous@anonymous.invalid>;tag=XXX
@end verbatim
@end smallexample

@noindent
If the @parm{Calling Party Number} is present, but is @pval{presentation-restricted}, the
@samp{"id"} token will be added to a @prim{Privacy} header.

@sp 1
@smallexample
Privacy: id
@end smallexample

@noindent
If the @parm{Calling Party Number} is present and is @pval{presentation-allowed}, or there is a
@parm{Generic Address Parameter} @pval{additional user provided number} that is
@pval{presentation-allowed}, the @prim{From} header will contain the @dfn{tel URL} formatted number:

@sp 1
@smallexample
From: <tel:+14443332222>;tag=XXX
@end smallexample

@noindent
If there is a @parm{Calling Party Number} present (whether @pval{presentation-allowed} or
@pval{presentation-restricted}, as long as it is network-provided and verified, it will be placed in
the @prim{P-Asserted-Identity} header.  This behaviour is consistent with that described for the
@dfn{MGCF} in @cite{3GPP TS 29.163 7.2.3.2.2}.

@sp 1
@smallexample
P-Asserted-Identity: <tel:+14443332222>
@end smallexample

@noindent
Otherwise, if no network-provided or verified @parm{Calling Party Number} is present, the
@prim{P-Asserted-Identity} header will contain the invalid number (000-000-0000).@footnote{Inserting
an invalid number in the @parm{user-info} portion of the @strong{tel} URI is in variation from
@cite{3GPP TS 29.163}, which has no method for passing calling party parameters without a calling
party number.}

@sp 1
@smallexample
P-Asserted-Identity: <tel:+10000000000>
@end smallexample

@noindent
If a @parm{Jurisdiction Information Parameter} parameter is present in the @msg{IAM}, it will be
added in the @parm{rn} field of the @prim{P-Asserted-Identity} header (but not the @prim{From}
header).  This behaviour is consistent with @cite{RFC 3325} and @cite{RFC 4694}.@footnote{See
@cite{RFC 4694} Section 5.2.4.  Note, however, that neither ITU-T Q.1912.5/1998 nor @cite{3GPP TS 29.163
V9.0.0} support the concept of communicating the @parm{Jurisdiction Information Parameter} from the
@msg{IAM} to the @msg{INVITE}.}

@sp 1
@smallexample
P-Asserted-Identity: <tel:+10000000000;rn=+1860660>
@end smallexample

@noindent
The incoming trunk group will always be placed in the @prim{P-Asserted-Identity} header (but not the
@prim{From} header) and can be used to determine the @parm{Jurisdiction Information Parameter} if
one is present.  This behaviour is consistent with @cite{RFC 3325} and @cite{RFC 4904}.

@sp 1
@smallexample
P-Asserted-Identity: <tel:+10000000000;rn=+1860660;trgp=7654321>
@end smallexample

@noindent
If there is a @parm{Calling Party Category} parameter in the @msg{IAM}, it will be added to the
@prim{P-Asserted-Identity} (but not the @prim{From} header) in the @parm{cpc} parameter.  This
behaviour is consistent with that described for the @dfn{MGCF} in @cite{3GPP TS 29.163 Annex
C.2}.@footnote{See @cite{3GPP TS 29.163 V9.0.0 (2009-12) Annex C.2}, @cite{RFC 3325} and
@cite{draft-patel-dispatch-cpc-oli-parameter-02}.  See also, @cite{3GPP TS 29.163 7.2.3.2.2.3A}.}

@sp 1
@smallexample
@verbatim
P-Asserted-Identity:
 <tel:+14443332222;cpc=ordinary;oli=00;rn=+1860660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
@end verbatim
@end smallexample

@noindent
If there is an @parm{Originating Line Information} parameter in the @msg{IAM}, it will be added to
the @prim{P-Asserted-Identity} (but not the @prim{From} header) in the @parm{oli} parameter.  This
behaviour is consistent with that described for the @dfn{MGCF} in @cite{3GPP TS 29.163 Annex
H.2}.@footnote{See @cite{3GPP TS 29.163 V9.0.0 (2009-12) Annex H.2}, @cite{RFC 3325} and
@cite{draft-patel-dispatch-cpc-oli-parameter-02}.  See also, @cite{3GPP TS 29.163 7.2.3.2.2.3B}.}

@sp 1
@smallexample
@verbatim
P-Asserted-Identity:
 <tel:+14443332222;cpc=ordinary;oli=00;rn=+1860660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
@end verbatim
@end smallexample

@noindent
If there is a @parm{Generic Name} parameter in the @msg{IAM} containing the @pval{calling name}
(ISUP method) and it is @pval{presentation-allowed}, it will be used as the @prim{display-name} of
both the @prim{From} and @prim{P-Asserted-Identity} URIs.  When it is @pval{presentation-restricted}
it will only be used for the @prim{P-Asserted-Identity} URI and privacy will be elevated to
@samp{user}.  If the name is not available, the @prim{display-name} @samp{"Unavailable"} will be
used.  This behavior is consistent with that described for the @dfn{MGCF} in @cite{3GPP TS
29.163}.@footnote{See @cite{3GPP TS 29.163 V9.0.0}, @cite{ITU-T Rec. Q.1912.5} and @cite{RFC 3325}.}

@sp 1
@smallexample
@verbatim
From: Unavailable <sip:anonymous@anonymous.invalid>;tag=XXX
P-Asserted-Identity: Unavailable
 <tel:+14443332222;cpc=ordinary;oli=00;rn=+1860660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
@end verbatim
@end smallexample

@sp 1
@smallexample
@verbatim
From: "Anonymous" <sip:anonymous@anonymous.invalid>;tag=XXX
P-Asserted-Identity: Joe
 <tel:+14443332222;cpc=ordinary;oli=00;rn=+1860660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: user
@end verbatim
@end smallexample

@subsubsection Charging Information

Charging information from the received @msg{IAM} will be translated to a @prim{P-Charge-Info} header
added to the resulting @msg{INVITE} in accordance with @cite{draft-york-sipping-p-charge-info-07}
with the following considerations:

@itemize @bullet
@item @cite{draft-york-sipping-p-charge-info-07} shows only @strong{sip} URIs (and crude ones without a
@parm{user=phone} parameter); however, the ABNF syntax of the @prim{P-Charge-Info} header allows an
@parm{addr-spec} to be included in the header.  The @cite{Optranex 248} platform will always place a
@strong{tel} URI in the @prim{P-Charge-Info} header.
@end itemize

@noindent
Whenever a @prim{P-Charge-Info} header is included in the resulting @msg{INVITE}, the incoming trunk
group will always be placed in the @prim{P-Charge-Info} header (in addition to the
@prim{P-Asserted-Identity} header in the @parm{tgrp} parameter of the @strong{tel} URI.  This
placement of the @parm{tgrp} parameter in a @strong{tel} URI is in accordance with @cite{RFC 4904}.
This incoming trunk group can be used to determine a @parm{Jurisdiction Information Parameter} when
one was not present in the received @msg{IAM} and none was assigned to the incoming trunk group at
the @cite{Optranex 248}.

If there is a @parm{Charge Number} parameter present in the receive @msg{IAM}, a
@prim{P-Charge-Info} header will be added to the resulting @msg{INVITE} in accordance with
@cite{draft-york-sipping-p-charge-info-07}.  The address digits (when present) of the @parm{Charge
Number} will be provided in the @parm{telephone-subscriber} portion of a @strong{tel} URI in the
@prim{P-Charge-Info} header.  When address digits are not present in the @parm{Charge Number}
parameter (because the nature-of-address value indicates that no address is provided) either the
@parm{Calling Party Number} or @parm{Called Party Number} parameter will be used as the source of
the address digits.  An @parm{npi} parameter will be added to the header with the value @pval{ISDN}
in accordance with @cite{draft-york-sipping-p-charge-info-07}.  A @parm{noa} parameter will also be
added to the header with the nature-of-address value contained in the @parm{Charge Number}
parameter, also in accordance with @cite{draft-york-sipping-p-charge-info-07}.  Because a
@parm{Originating Line Information} parameter must also be present whenever a @parm{Charge Number}
is present in a received ANSI @msg{IAM}, the @parm{Originating Line Information} parameter will be
added to the @strong{tel} URI in the @prim{P-Charge-Info} header (in addition to the
@prim{P-Asserted-Identity} header).  This use of the @parm{oli} parameter in a @strong{tel} URI is
in accordance with @cite{3GPP TS 29.163} and @cite{draft-patel-dispatch-cpc-oli-parameter-02}.

@sp 1
@smallexample
@verbatim
P-Charge-Info: <tel:+13333333333;oli=00
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN;noa=3
@end verbatim
@end smallexample

@noindent
If there is an @parm{Originating Line Information} parameter present in the received @msg{IAM}, but
no @parm{Charge Number}, the @parm{Calling Party Number} will instead be used to populate the
@parm{telephone-subscriber} portion of the @strong{tel} URI in the @prim{P-Charge-Info}
header in accordance with @cite{ANSI T1.113/2000}.@footnote{Note that the @parm{Called Party Number}
is always present and the @parm{Calling Party Number} must be present in an ANSI @msg{IAM} when the
@parm{Originating Line Information} parameter is present and no @parm{Charge Number} is present.}  A
@parm{npi} parameter will also be added to the @prim{P-Charge-Info} header with the value
@pval{ISDN}.  No @parm{noa} parameter will be added to the @prim{P-Charge-Info} header.  This
addition of the @parm{npi} and @parm{noa} parameters is in accordance with
@cite{draft-york-sipping-p-charge-info-07}.  For example:

@sp 1
@smallexample
@verbatim
P-Charge-Info: <tel:+12223334444;oli=00
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
@end verbatim
@end smallexample

@noindent
If a @parm{Jurisdiction Information Parameter} is also present in the received @msg{IAM}, or a
@parm{Jurisdiction Information Parameter} value is associated with the incoming trunk group, it will
be added as a @parm{rn} parameter in the @strong{tel} URI of any @prim{P-Charge-Info} header (in
addition to the @parm{P-Asserted-Identity} header).  This use of the @parm{rn} parameter to
represent @parm{JIP} in @strong{tel} URIs associated with the origination is in accordance with
@cite{RFC 4694}.

@sp 1
@smallexample
@verbatim
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
@end verbatim
@end smallexample

@subsubsection Example IAM to INVITE Translation

For this example the @msg{IAM} has the contents shown in @ref{iam:ex1}.

@cartouche
@float Example,iam:ex1
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{CdPN} @tab NSN, 777-666-5555
@item @parm{JIP} @tab 830-660
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Joe"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Sue"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM for IAM to INVITE Translation Example}}
@end float
@end cartouche

@noindent
The @msg{INVITE} corresponding to the @msg{IAM} in @ref{iam:ex1} is shown in @ref{message:msg5}.

@cartouche
@float Message,message:msg5
@smallformat
@verbatim
INVITE tel:+999666555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP sip:gw1.heramax.com:5060;branch=z9hG4bK-000001
Max-Forwards: 33
From: Joe <tel:+16666666666>;tag=7643kals
To: Sue <tel:+4444444444>
CSeq: 1 INVITE
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com;user=phone>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IPV4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 INVITE from IAM for Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@noindent
Notes for @ref{message:msg5}:

@enumerate
@item  @prim{Request-URI}

The @parm{telephone-subscriber} portion of the @prim{Request-URI} contains the ported number from
the @parm{GAP} parameter.  The @parm{npdi} parameter is present in the @prim{Request-URI} indicating
that the number was dipped by the originator, and the @parm{rn} parameter is present in the
@prim{Request-URI} and contains the local routing number.

@item @prim{Max-Forwards}

The value of the @prim{Max-Forwards} header is calculated by applying a weighting factor to the ISUP
@parm{Hop Counter} parameter.

@item @prim{From}

The @parm{display-name} portion of the @prim{From} header contains the @pval{presentation-allowed}
calling name from the @parm{Generic Name} ISUP parameter.  The @parm{telephone-subscriber} portion
of the @prim{From} header contains the @pval{presentation-allowed} additional user provided number
from the @parm{Generic Address Parameter} ISUP parameter.

@item @prim{To}

The @parm{display-name} portion of the @prim{To} header contains the @pval{presentation-allowed}
original called name from the @parm{Generic Name} ISUP parameter.  The @parm{telephone-subscriber}
portion of the @prim{To} header contains the @pval{presentation-allowed} dialled number from the
@parm{Generic Address Parameter} ISUP parameter.

@item @prim{P-Asserted-Identity}

The @parm{display-name} portion of the @prim{P-Asserted-Identity} header contains the
@pval{presentation-allowed} calling name from the @parm{Generic Name} ISUP parameter.  The
@parm{telephone-subscriber} portion of the @prim{P-Asserted-Identity} header contains the
@pval{presentation-restricted} calling pary number from the @parm{Calling Party Number} ISUP
parameter.

@item @prim{Privacy}

The @prim{Privacy} header contains the @parm{id} token because the @parm{telephone-subscriber}
portion of the @prim{P-Asserted-Identity} header is @pval{presentation-restricted}.  The privacy
level is set to @parm{id} insted of @parm{user} because the @parm{display-name} portion of the
@prim{P-Asserted-Identity} header is @pval{presentation-allowed}.

@item @prim{P-Charge-Info}

The @prim{P-Charge-Info} header is added to the message because an @parm{Originating Line
Information} parameter is present in the received @msg{IAM}.  The @parm{telephone-subscriber}
portion of the @strong{tel} URI in the header is taken from the @parm{Calling Party Number} because
a @parm{Charge Number} does not appear in the @msg{IAM}.  The @parm{oli} and @parm{tgrp} parameter
in the @strong{tel} URI in the @parm{P-Charge-Info} is always populated by the @cite{Optranex 248}.
Because a @parm{Jurisdiction Information Parameter} is present in the received @msg{IAM}, a
@parm{rn} parameter is populated in the @strong{tel} URI.  The @parm{npi} header parameter has the
value @pval{ISDN} because the numbering plan of the @parm{Calling Party Number} is E.164.

@item SDP

The SDP specification for the call is calculated by mapping the incoming ISUP circuit from the CS
domain to a fixed IP address (host name) and RTP port number on the IMS CN side.  The remainder of
the specification is for PCM mu-law 8000 samples per second audio (speech).

@end enumerate


@subsection Processing of Calls Terminating from the PSTN

The requirements for @i{C-SCP} processing of the @msg{INVITE} from the @cite{Carrier Proxy}
for calls terminating from the PSTN are described in this subsection.

@subsubsection Extracting Information from the INVITE

The @i{C-SCP} platform should largely ignore the @prim{From} and @prim{To} headers in the
@msg{INVITE} (except, of course, for the @parm{tag} parameter).

For information concerning the termination of the call (B Number), the @i{C-SCP} platform
should examine the @parm{Request-URI} instead of the @prim{To} header of the @msg{INVITE}.

For information concerning the originator (A Number) of the call, the @i{C-SCP} platform should
examine the @parm{P-Asserted-Identity} header instead of the @parm{From} header of the @msg{INVITE}.

For information concerning the charging (Charge Information) of the call, the @i{C-SCP}
platform should examine the @parm{P-Charge-Info} header instead of the @parm{From} header of the
@msg{INVITE}.

The @i{C-SCP} platform should determine the called party parameters (B number) from the
@prim{Request-URI} of the @msg{INVITE}.  The minimum information that will be present in the
@prim{Request-URI} will be the @parm{Called Party Number}.  The most information that will be in the
@prim{Request-URI} will be the @parm{Called Party Number}, @pval{number translated} (NP dip)
indication and @parm{Local Routing Number}.  The called party name may also be present in the
@prim{display-name} field of the @prim{To} header.  See @tabref{T-1} for details.

@tabfig{pgwt01,T-1,Request-URI Parameter Mapping}

@noindent
The @i{C-SCP} platform should determine the calling party parameters (A number) from the
@prim{P-Asserted-Identity} header of the @msg{INVITE}.  The minimum information present will be the
incoming trunk group number.  The most information present will be the calling name, calling number,
calling party's category, originating line information, jurisdiction information parameter and
incoming trunk group number.  See @tabref{T-2} for details.

@tabfig{pgwt02,T-2,P-Asserted-Identity Parameter Mapping}

@noindent
The @i{C-SCP} platform should determine the charging information from the @prim{P-Charge-Info}
header of the @msg{INVITE}.  The minimum information present (when the header is present) will be
the charge number, originating line information, and incoming trunk group number.  The most
information present will be the charge number, originating line informaation, incoming trunk group
number, numbering plan indicator and nature of address indicator value.  See @tabref{T-5} for
details.

@tabfig{pgwt05,T-5,P-Charge-Info Parameter Mapping}

@subsubsection 305 Use Proxy Response

Using the B number parameters in the @prim{Request-URI} of the @msg{INVITE} as listed in
@tabref{T-1}, (and possibly using the A number parameters in the @prim{P-Asserted-Identity} header
as listed in @tabref{T-2}, and perhaps the charge information parameter in the @prim{P-Charge-Info}
header as listed in @tabref{T-5}), the @i{C-SCP} platform should determine the customer proxy
(or proxies) to which to route the call and return them in a @msg{305 Use Proxy} or @msg{303 Proxy
Redirect} response to the @msg{INVITE}.

The @prim{Contact} header(s) contained in the @msg{305 Use Proxy} or @msg{303 Proxy Redirect}
response must be formatted as @strong{sip} URIs.

A possible response to the example above is shown in @ref{message:msg6}.

@cartouche
@float Message,message:msg6
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+19996665555@sansay1.customer1.com;user=phone>
Contact: <sip:+19996665555@sansay2.customer2.com;user=phone>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response for Successful PSTN to SIP Call -- Explicity Proxy}}
@end float
@end cartouche

@noindent
Depending on preferred network configuration, the @i{C-SCP} can either directly address
customer proxies in the @prim{Contact} headers of the @msg{305 Use Proxy} or @msg{303 Proxy
Redirect} response (as shown in @ref{message:msg6}), or can use sip DNS SRV records for the domain
by specifiying the general domain, as shown in @ref{message:msg7}.

@cartouche
@float Message,message:msg7
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+19996665555@customer1.com;user=phone>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response for Successful PSTN to SIP Call -- DNS SRV Approach}}
@end float
@end cartouche

@noindent
The @i{C-SCP} may also do an ENUM query to determine the user within the customer domain
similar to that shown in @ref{message:msg8}.

Note that in this approach, the @prim{Contact} header no longer contains a @strong{tel} URI
formatted @parm{user-info} portion in the @strong{sip} URI, but contains an actual @strong{sip} user
name.  Note that this @emph{will} affect the @prim{Request-URI} in the @msg{INVITE} message
ultimately launched to the Customer Proxy, but, in accordance with @cite{RFC 3261}, the @prim{To}
field will remain unaltered.

@cartouche
@float Message,message:msg8
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:sue@customer1.com>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response for Successful PSTN to SIP Call -- I-ENUM Query Approach}}
@end float
@end cartouche

@noindent
As an option, the @i{C-SCP} may also query a CNAM database and determine the calling name for
the @parm{Calling Party Number} and alter the @prim{P-Asserted-Identity} to reflect the calling
party name, as shown in @ref{message:msg9}.

@cartouche
@float Message,message:msg9
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:sue@customer1.com>
P-Asserted-Identity: Joe Bloe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response for Successful PSTN to SIP Call -- CNAM Query Approach}}
@end float
@end cartouche

@subsubsection Processing of the 305 Use Proxy Reponse

The @cite{Carrier Proxy} switch may adjust the @prim{To} and @prim{From} fields on the @msg{INVITE}
sent to the customer proxy.  The @prim{To} header may be adjusted from information in the
@prim{Contact} header of the @msg{305 Use Proxy} response; the @prim{From} header may be adjusted
from information in the @prim{P-Asserted-Identity} header of the @msg{305 Use Proxy} response.

The values in the @prim{Contact} header or headers consistitute the entire target set for the
gateway.  Acting as a proxy, the @cite{Carrier Proxy} selects members in the target set and for each
performs the following (in accordance with @cite{draft-ietf-speermint-srv-naptr-use-06}, @cite{RFC
2915} and @cite{RFC 2782}):

@enumerate
@item A DNS @prim{NAPTR} query is performed on the domain name portion of the @strong{sip} URI.  If
there are records in the result, the @samp{_sip._udp.*} record is selected.  Otherwise, if there are
no records in the result, a new name is generated by concatentating @samp{_sip._udp.} and the
domain name.
@item A DNS @prim{SRV} query is performed on the name resulting from the previous step.  If there
are records in the result, a record is selected according to the rules of DNS @prim{SRV} entries.
Otherwise, the original domain name portion of the @strong{sip} URI selected as the new name.
@item If the result from the previous step is an @prim{A} or @prim{AAAA} @prim{RR}, this step is
skipped and the IP address is used to address the @msg{INVITE} to the customer proxy.  If the result
from the previous step is a name, a DNS @prim{QUERY} query is performed on the name.
@end enumerate

@subsubsection Example of a Successful Call from PSTN to SIP

Refer to @figref{2} for the messages exchanged that correspond with the numbers below.

@enumerate

@item Point (1) in @figref{2}.

A call is generated within the PSTN and terminates on the @cite{Optranex 248} switch.  The
@cite{Optranex 248} switch receives an @msg{IAM} message, which, in this example, contains the
parameters shown in @ref{iam:ex2}.

@cartouche
@float Example,iam:ex2
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{CdPN} @tab NSN, 777-666-5555
@item @parm{JIP} @tab 830-660
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Joe"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Sue"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM received for Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (2) in @figref{2}.

The @cite{Optranex 248} switch uses the information from the received @msg{IAM} to generate an
@msg{INVITE} message which is sent to the @i{Carrier Proxy}.  The @msg{INVITE} corresponding to the
@msg{IAM} shown in @ref{iam:ex2} is shown in @ref{message:msg10}.

@cartouche
@float Message,message:msg10
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com:5060;user=phone>
Max-Forwards: 33
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{INVITE generated for Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (3) in @figref{2}.

The @cite{Carrier Proxy} forwards the @msg{INVITE} message to the @i{C-SCP} for processing.

@cartouche
@float Message,message:msg51
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
Max-Forwards: 32
From: "Joe" <tel:+16666666666>;tag=7643kals
To: "Sue" <tel:+14444444444>
Call-ID: 4Fde34wkd11wsGFDs3@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:gw1@heramax.com:5060;transport=udp>
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{INVITE forwarded in Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (4) in @figref{2}.

In this example, the @i{C-SCP} platform determines that it might not respond to the @msg{INVITE}
message within 200 milliseconds and so sends a @msg{100 Trying} message as shown in
@ref{message:msg11}.

@cartouche
@float Message,message:msg11
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{100 Trying Response in Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (5) in @figref{2}.

The @i{C-SCP} platform must perform the processing described in this document (@pxref{Processing of
Calls Terminating from the PSTN}) and, when the call is successful, return a @msg{305 Use Proxy}
message contianing the customer proxy or proxies to which to redirect the call.

@cartouche
@float Message,message:msg12
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:sue@customer1.com>
P-Asserted-Identity: Joe Bloe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>;npi=ISDN
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response in Successful PSTN to SIP Call Example}}
@end float
@end cartouche

Note that in @ref{message:msg12}, the @prim{Contact} header is translated with an I-ENUM query to
the actual sip address of the termination and uses the generic domain usable in the @pval{NAPTR} and
@pval{SRV} entry approach.

@item Point (6) in @figref{2}.

The @cite{Carrier Proxy} switch acknowledges the @msg{305 Use Proxy} response with an @msg{ACK}
request as shown in @ref{message:msg13}.

@cartouche
@float Message,message:msg13
@smallformat
@verbatim
ACK sip:anonymous@gw1.heramax.com SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 ACK
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com:5060;user=phone;transport=udp>
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{ACK Request in Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (7) in @figref{2}.

The @cite{Carrier Proxy} switch generates an @msg{INVITE} message toward the specified customer
proxy.  The customer proxy is not within the @dfn{MGCF} trust domain and, therefore, all privacy
fields are stripped.  The @msg{INVITE} message is shown in @ref{message:msg14}.

@cartouche
@float Message,message:msg14
@smallformat
@verbatim
INVITE sip:sue@customer1.com SIP/2.0
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001
From: "Joe" <tel:+16666666666>;tag=XXX
To: "Sue" <tel:+14444444444>
Call-ID: 111223@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com:5060;user=phone;transport=udp>
Max-Forwards: 33
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Customer Proxy INVITE for Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (8) in @figref{2} and beyond.

The @i{C-SCP} platform is no longer involved in the call.  Interaction between the @cite{Carrier
Proxy} and the customer proxy is in accordance with the exchange between the @dfn{MGCF} and
@dfn{I-CSCF} or @dfn{S-CSCF} in @cite{3GPP TS 24.229} and @cite{3GPP TS 29.163} (and RFCs called out
by these specification) with minor variations for US networks.

@end enumerate

@subsection Treatment of PSTN Originated Calls at the C-SCP Platform

Because the @cite{Optranex 248} switch is not populated with subscriber data@footnote{The
@cite{Optranex 248} switch is not being populated with customer data for the trial: it is capable of
populating customer data and forming dial plans from such data, particularly using the ENUM approach
illustrated in @ref{ENUM Calls from PSTN to SIP}.} and, therefore, cannot perform
number analysis, and also because the @cite{Optranex 248} switch does not perform LNP
dips,@footnote{The @cite{Optranex 248} switch will not perform LNP dips for the trial: the switch is
capable of performing TCAP LNP dips or I-ENUM number portability dips in normal operation as
illustrated in @ref{ENUM Calls from SIP to PSTN}.} the @i{C-SCP} must perform part of the normal
ISUP processing and distinguish to the @cite{Optranex 248} switch various digit analysis failures so
that the @cite{Optranex 248} switch can apply the necessary treatment of the call.  This can in some
cases be peformed with a selection of a response code to the @msg{INVITE} sent to the @i{C-SCP}
platform, in other cases must be distinguished using the @prim{Reason} header.@footnote{See RFC 3326
and draft-jesske-dispatch-reason-in-responses-01 for more information on the @prim{Reason} header.
Note that this header is also proscribed by @cite{ITU-T Recommendation Q.1912.5} as well as
@cite{3GPP TS 29.163}.}

@figuresized{pgw04,4,Treatment of PSTN Calls,6.0in}

@noindent
The basic call flow for a unsuccessful (treated) call terminating from the PSTN is illustrated in
@figref{4}.  The key features of the call flow are as follows:

@enumerate

@item Point (1) in @figref{4}.

The PSTN has generated a call that terminates on the @cite{Optranex 248}, and an @msg{IAM} is
launched from the PSTN to the @cite{Optranex 248}.
An example of the @msg{IAM} is shown in @ref{iam:ex3}.

@item Point (2) in @figref{4}.

The @cite{Optranex 248} translates the information from the received @msg{IAM} to a SIP @msg{INVITE}
and sends it to the @cite{Carrier Proxy} platform for processing.  The translation of the
information from the received @msg{IAM} into the sent SIP @msg{INVITE} was detailed previously in
@ref{Translation of IAM to INVITE}.  An example of the @msg{INVITE} is shown in @ref{message:msg26}.

@item Point (3) in @figref{4}.

The @cite{Carrier Proxy} forwards the @msg{INVITE} to the @i{C-SCP} for further processing.
An example of the @msg{INVITE} message is shown in @ref{message:msg54}.

@item Point (4) in @figref{4}.

As the @cite{Carrier Proxy} has forwarded the @msg{INVITE} message and is no longer in control of
when a response will be made, the @cite{Carrier Proxy} responds with a @msg{100 Trying} message to
the @cite{Optranex 248}.
An example of the @msg{INVITE} message is shown in @ref{message:msg56}.

Should the @cite{Carrier Proxy} delay in responding to the @msg{INVITE}, the @cite{Optranex 248}
might cancel the @msg{INVITE} with a @msg{CANCEL} request for the dialog (should the call be
released before a response is forthcoming).  In the event of a @msg{CANCEL} request and not further
respond to the corresponding @msg{INVITE}.

@item Point (5) in @figref{4}.

If the @i{C-SCP} platform expects that it will take longer that 200 milliseconds to respond to an
@msg{INVITE} with a @msg{3xx}, @msg{4xx} or @msg{5xx} response, it should send a @msg{100 Trying}
message in response to the @msg{INVITE}.

Should the @i{C-SCP} platform delay in responding to the @msg{INVITE}, the @cite{Optranex 248} might
cancel the @msg{INVITE} with a @msg{CANCEL} request for the dialog (should the call be released
before a response is forthcoming).  In the event of a @msg{CANCEL}, the @cite{Carrier Proxy} and
@i{C-SCP} platform are expected to acknowledge the @msg{CANCEL} request and not further respond to
the corresponding @msg{INVITE}.
An example of the @msg{100 Trying} message is shown in @ref{message:msg11}.

@item Point (6) in @figref{4}.

The @i{C-SCP} platform analyzes the information in the received @msg{INVITE} message and
determines that treatment is necessary and sends a @msg{4xx} or @msg{5xx} response.  The specific
logic that the @i{C-SCP} platform uses to determine this, and the specific response chosen, is
detailed later in @ref{Treatment of PSTN Calls}.
An example of a @msg{404} message is shown in @ref{message:msg27}.

@item Point (7) in @figref{4}.

The @cite{Carrier Proxy} returns the @msg{4xx} or @msg{5xx} response to the @cite{Optranex 248}
gateway switch.
An example of a @msg{404} message is shown in @ref{message:msg55}.

@item Point (8) in @figref{4}.

The @cite{Optranex 248} switch, upon receiving the @msg{4xx} or @msg{5xx} response, acknowledges
that response by sending a @msg{ACK} message to the @cite{Carrier Proxy} in a acknowledgement.
An example of the @msg{ACK} message is shown in @ref{message:msg28}.

@item Point (9) in @figref{4}.

The @cite{Carrier Proxy}, upon receiving the @msg{ACK} from the @cite{Optranex 248} gateway switch,
propagates the @msg{ACK} message to the @i{C-SCP}.
An example of the @msg{ACK} message is shown in @ref{message:msg58}.

@item Point (10) in @figref{4}.

The @cite{Optranex 248} switch releases both the RTP and channel resources associated with the
incoming call and issues an ISUP @msg{REL} message to the previous PSTN switch with the appropriate
cause value (from the @prim{Reason} header of the received @msg{4xx} or @msg{5xx} response).

@item Point (11) in @figref{4}.

The previous PSTN switch acknowledges the release with an ISUP @msg{RLC} message.

@end enumerate

@subsubsection Treatment of PSTN Calls

At point (6) in @figref{4}, the @i{C-SCP} platform should examine the B Number information
present in the @prim{Request-URI} per @tabref{T-1} (and possibly A number information present in the
@prim{P-Asserted-Identity} per @tabref{T-2}) of the @msg{INVITE} and take exception in accordance
with @cite{3GPP TS 29.163}, @cite{ITU-T Q.1912.5} and @cite{RFC 3326} as detailed below.

When the destination number (@parm{telephone-subscriber} portion of the @prim{Request-URI})
exists and is allocated to a customer, the @i{C-SCP} formulates a @msg{305 Use Proxy} response
and places the customer proxy (or proxies) in the @prim{Contact} header of the @msg{305 Use Proxy}
response as discussed earlier.  An example is repeated in @ref{message:msg15}.

@cartouche
@float Message,message:msg15
@smallformat
@verbatim
SIP/2.0 305 Use Proxy
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:sue@customer1.com>
P-Asserted-Identity: Joe Bloe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{305 Use Proxy Response for Successful PSTN to SIP Call Example}}
@end float
@end cartouche

@subsubheading Unallocated (unassigned) number

When a dipped non-ported number is not found (that is, there is a @parm{npdi} parameter in the
@prim{Request-URI} but no @parm{rn} parameter, and the @parm{telephone-subscriber} portion of the
@prim{Request-URI} is not allocated to a customer) the @i{C-SCP} platform should respond with a
@msg{404 Not Found} response with @prim{Reason} headers as shown in @ref{message:msg17}.

@cartouche
@float Message,message:msg17
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=1 ;text="unallocated (unassigned) number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Unallocated Destination Number Caused Treatment}}
@end float
@end cartouche

@noindent
Note that the @pval{ANSI} field in the @prim{Reason} header is an extension to @cite{RFC 3326} and
@cite{draft-jesske-dispatch-reason-in-responses-01}.  This field is used in the same fashion as
@pval{Q.850} fields, with the exception that the cause values correspond to ANSI cause values
defined in @cite{ANSI T1.113/2000}.

When a non-dipped or dipped-non-ported number (@parm{telephone-subscriber} portion of the
@prim{Request-URI}) is within a number block allocated to the customer but has no subscriber
assigned, the @i{C-SCP} platform should respond with a @msg{404 Not Found} response with
@prim{Reason} headers as shown in @ref{message:msg18}.

@cartouche
@float Message,message:msg18
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=1 ;text="unallocated (unassigned) number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Unallocated Destination Number Caused Treatment}}
@end float
@end cartouche

@noindent
Note that the @pval{ANSI} field in the @prim{Reason} header is an extension to @cite{RFC 3326} and
@cite{draft-jesske-dispatch-reason-in-responses-01}.  This field is used in the same fashion as
@pval{Q.850} fields, with the exception that the cause values correspond to ANSI cause values
defined in @cite{ANSI T1.113/2000}.

@subsubheading No route to destination
@subsubheading Send special information tone
@subsubheading Misdialled trunk prefix
@subsubheading User busy
@subsubheading Subscriber absent
@subsubheading Call rejected
@subsubheading Number changed

If the number (@parm{telephone-subscriber} portion of the @prim{Request-URI}) has been changed
and redirect is in force, the @i{C-SCP} should respond with a @msg{404 Not Found} response with
@prim{Reason} headers as shown in @ref{message:msg20}.

@cartouche
@float Message,message:msg20
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=22 ;text="number changed"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Number Changed Caused Treatment -- 404 Not Found Response}}
@end float
@end cartouche

@noindent
or, alternately if automatic redirect is to be performed, a @msg{301 Moved Permanently} response
with @prim{Reason} headers as shown in @ref{message:msg21}.

@cartouche
@float Message,message:msg21
@smallformat
@verbatim
SIP/2.0 301 Moved Permanently
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <tel:+19998887777>
Reason: Q.850 ;cause=22 ;text="number changed"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Number Changed Caused Treatment -- 301 Moved Permanently Response}}
@end float
@end cartouche

@noindent
where @samp{999-888-7777} is the new number.

@subsubheading Redirect to new destination
@subsubheading Destination out of order
@subsubheading Invalid number format (address incomplete)

If the destination number format (@parm{telephone-subscriber} portion of the
@prim{Request-URI}) is invalid (e.g. the number is an international rather than national number),
the @i{C-SCP} should respond with a @msg{484 Address Incomplete} response with @prim{Reason}
headers as shown in @ref{message:msg22}.

@cartouche
@float Message,message:msg22
@smallformat
@verbatim
SIP/2.0 484 Address Incomplete
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=28 ;text="invalid number format (address incomplete)"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Invalid Number Format Caused Treatment}}
@end float
@end cartouche

@subsubheading Normal, unspecified
@subsubheading No circuit/channel available
@subsubheading Network out of order

Should the network be out of order the @i{C-SCP} platform should return a
@msg{500 Server Internal Error} response with @prim{Reason} headers as shown in @ref{message:msg24}.

@cartouche
@float Message,message:msg24
@smallformat
@verbatim
SIP/2.0 500 Server Internal Error
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=38 ;text="network out of order"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Network Out-of-order Caused Treatment}}
@end float
@end cartouche

@subsubheading Temporary failure

Should a temporary failure occur in the @i{C-SCP} platform, either associated with the
platform or this specific dialog, it should return a @msg{500 Server Internal Error} response with
@prim{Reason} headers as shown in @ref{message:msg23}.

@cartouche
@float Message,message:msg23
@smallformat
@verbatim
SIP/2.0 500 Server Internal Error
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=41 ;text="temporary failure"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Temporary Failure Caused Treatment}}
@end float
@end cartouche

@subsubheading Switching equipment congestion

Should the @i{Tel-Lingu} platform be experiencing congestion, it should return a
@msg{500 Server Internal Error} response with @prim{Reason} headers as shown in @ref{message:msg25}.

@cartouche
@float Message,message:msg25
@smallformat
@verbatim
SIP/2.0 500 Server Internal Error
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=42 ;text="switching equipment congestion"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Switching Equipment Congestion Caused Treatment}}
@end float
@end cartouche

@subsubheading Resource unavailable, unspecified

@subsubheading Misrouted call to a ported number

When a dipped ported number is not found (that is, there is a @parm{npdi} and @parm{rn}
parameter in the @prim{Request-URI}, but the @parm{telephone-subscriber} portion of the
@prim{Request-URI} is not allocated to a customer) the @i{C-SCP} platform should send a
@msg{404 Not Found} response with @prim{Reason} headers as shown in @ref{message:msg16}.

@cartouche
@float Message,message:msg16
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: ANSI ;cause=26 ;text="misrouted call to a ported number"
Reason: Q.805 ;cause=14 ;text="QoR: ported number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Misrouted Call to Ported Number Caused Treatment}}
@end float
@end cartouche

@noindent
Note that the @pval{ANSI} field in the @prim{Reason} header is an extension to @cite{RFC 3326} and
@cite{draft-jesske-dispatch-reason-in-responses-01}.  This field is used in the same fashion as
@pval{Q.850} fields, with the exception that the cause values correspond to ANSI cause values
defined in @cite{ANSI T1.113/2000}.

@subsubheading Number portability Query on Release -- number not found

When a non-dipped number (@parm{telephone-subscriber} portion of the @prim{Request-URI} with
no @parm{npdi} parameter in the @prim{Request-URI}) is found to be ported out, the response should
be a @msg{404 Not Found} response with @prim{Reason} headers as shown in @ref{message:msg19}.

@cartouche
@float Message,message:msg19
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=182.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: ANSI ;cause=27 ;text="NP QoR - number not found"
Reason: Q.850 ;cause=14 ;text="QoR: ported number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Number Not Found Caused Treatment}}
@end float
@end cartouche

@subsubsection Example of an Unsuccessful Call from PSTN to SIP

Refer to @figref{2} for the messages exchanged that correspond with the numbers below.

@enumerate
@item Point (1) in @figref{2}.

A call is generated by the PSTN and an @msg{IAM} is sent to the @cite{Optranex 248} as the
terminating switch.  The @msg{IAM} for this example contains the information shown in @ref{iam:ex3}.

@cartouche
@float Example,iam:ex3
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{CdPN} @tab NSN, 777-666-5555
@item @parm{JIP} @tab 830-660
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Joe"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Sue"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM received for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

For the purpose of this example, the LRN present in the CdPN (777-666-5555) is a correct LRN for the
@cite{Optranex 248}, however, the ported number (999-666-5555) is no longer ported here and has been
ported out.

@item Point (2) in @figref{2}.

The @cite{Optranex 248} translates the incoming @msg{IAM} to a SIP @msg{INVITE} and sends it to the
@cite{Carrier Proxy} for processing.

@cartouche
@float Message,message:msg26
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001
From: "Joe" <tel:+16666666666>;tag=XXX
To: "Sue" <tel:+14444444444>
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com:5060;user=phone;transport=udp>
Max-Forwards: 33
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 INVITE for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@noindent
Notes:
@itemize
@item The @strong{tel} URI in the @prim{Request-URI} contains the termination number.  In this case,
the number is ported and was translated as indicated by the @parm{npdi} parameter, and the LRN
associated with the ported number is provided in the @parm{rn} parameter.

@item The @prim{From} and @prim{To} header contain the additional user provided calling number and
the dialed number from the @msg{IAM}.

@item The @prim{Contact} header provides only displayable information about the originator.

@item The @prim{Max-Forwards} header value is calculated by applying a weighting factor to the
received ISUP @parm{Hop Counter} parameter.

@item The @prim{P-Asserted-Identity} header provides private infomration about the originator,
including the calling party number, calling party's cagetory, originating line information,
jurisdiction information parameter, incoming trunk group and terminating gateway switch.

@item the @prim{P-Charge-Info} header provides the private information about the originator,
including the charge number, calling party's category, originating line information, jurisdiction
information parameter, incoming trunk group and terminating gateway switch.

@item The @parm{trunk-context} parameter, in the various headers in which it appears, contains the
hostname associated with the specific @cite{Optranex 248} gateway switch that received the call.
The @parm{tgrp} parameter is only meaningful within the context of this gateway switch.
@end itemize

@item Point (3) in @figref{2}.

The @cite{Carrier Proxy} forwards the @msg{INVITE} to the @i{C-SCP} for further processing.

@cartouche
@float Message,message:msg54
@smallformat
@verbatim
INVITE tel:+19996665555;npdi;rn=+17776665555 SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z8hG4bK-AAAAAA
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XXX
To: "Sue" <tel:+14444444444>
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+16666666666
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com
 @gw1.heramax.com:5060;user=phone;transport=udp>
Max-Forwards: 32
P-Asserted-Identity: Joe
 <tel:+12223334444;cpc=ordinary;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Privacy: id
P-Charge-Info: <tel:+12223334444;oli=00;rn=+1830660
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com>
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy INVITE for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@noindent
Note that the @msg{INVITE} message forwarded is not altered from the @msg{INVITE} message received
with the exception of the header fields which must be altered for proxy behaviour in accordance with
@cite{RFC 3261}.

@item Point (4) in @figref{2}.

The @cite{Carrier Proxy}, because it has forwarded the @msg{INVITE} message and cannot determine
when it will receive a response, responds to the incoming invite with a @msg{100 Trying} message.

@cartouche
@float Message,message:msg56
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy 100 Trying for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (5) in @figref{2}.

The @i{C-SCP} platform determines that it will respond in sufficient time and skips sending a
@msg{100 Trying} message.

@item Point (6) in @figref{2}.

The @i{C-SCP} looks up the destination number (999-666-5555) and determines that the number
does not belong to a customer.  Because the @prim{Request-URI} contains a @parm{npdi} indication, as
well as a @parm{rn} routing number, it surmizes that the call to the ported number has been
misrouted.  So, it responds with a @msg{404 Not Found} response and includes the @prim{Reason}
header with cause values appropriate for a misrouted call to a ported number.

@cartouche
@float Message,message:msg27
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z8hG4bK-AAAAAA;received=192.168.9.30
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: ANSI ;cause=26 ;text="misrouted call to a ported number"
Reason: Q.805 ;cause=14 ;text="QoR: ported number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{C-SCP 404 Not Found Response for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (7) in the @figref{2}.

The @cite{Carrier Proxy}, upon receiving the @msg{4xx} or @msg{5xx} response, forwards the response
to the @cite{Optranex 248} gateway switch.

@cartouche
@float Message,message:msg55
@smallformat
@verbatim
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 INVITE
Reason: ANSI ;cause=26 ;text="misrouted call to a ported number"
Reason: Q.805 ;cause=14 ;text="QoR: ported number"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy 404 Not Found Response for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (8) in the @figref{2}.

Upon receiving the @msg{404 Not Found} response, the @cite{Optranex 248} switch acknowledges receipt
of the @msg{4xx} message.

@cartouche
@float Message,message:msg28
@smallformat
@verbatim
ACK sip:anonymous@gw1.heramax.com SIP/2.0
Via: SIP/2.0/UDP gw1.heraax.com:5060;branch=z9hG4bK-000001
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 ACK
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 ACK for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (9) in the @figref{2}.

The @cite{Carrier Proxy}, upon receiving the @msg{ACK} from the @cite{Optranex 248}, forwards the
request to the @i{C-SCP}.

@cartouche
@float Message,message:msg58
@smallformat
@verbatim
ACK sip:anonymous@gw1.heramax.com SIP/2.0
Via: SIP/2.0/UDP cp.heraax.com:5060;branch=z9hG4bK-AAAAAA
Via: SIP/2.0/UDP gw1.heraax.com:5060;branch=z9hG4bK-000001;received=192.168.9.10
From: "Joe" <tel:+16666666666>;tag=XX
To: "Sue" <tel:+14444444444>;tag=YY
Call-ID: 111222@gw1.heramax.com
CSeq: 1 ACK
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy ACK for Unsuccessful PSTN to SIP Call Example}}
@end float
@end cartouche

@item Point (10) in the @figref{2}.

While acknowledging the receipt of the @msg{404 Not Found} response, the @cite{Optranex 248} switch
formulates an ISUP @msg{REL} message and includes cause value 26 ("misrouted call to a ported
number") and releases the call setup.

Note that the release cause is taken directly from the @prim{Reason} headers of the received
@msg{404 Not Found} response.  The @pval{ANSI} release cause is used in preferrence to any
@pval{Q.850} release cause present.  When no release cause is present (neither @prim{Reason} header
field is present), the release cause indicating failure beyond an interworking point will be used.
Also note that the location of the cause will be beyond and interworking point.

@item Point (11) in the @figref{2}.

The originating PSTN switch completes the release of the call by sending a @msg{RLC} message to the
@cite{Optranex 248} switch.
@end enumerate

@page
@node Calls from SIP to PSTN
@section Calls from SIP to PSTN

Calls from SIP (IMS CN) to the PSTN (CS Domain) are illustrated in @figref{3}.

@figuresized{pgw03,3,Calls from SIP to PSTN,6.0in}

@noindent
Call flows shown in blue (between the @cite{Carrier Proxy} and the @i{C-SCP}) are now transparent
to both the @cite{Customer Proxy} and the @cite{Optranex 248} gateway switch and are no longer
specified by this document (neither the @cite{Customer Proxy} nor the @cite{Optranex 248} gateway
switch need to know that the @i{C-SCP} exists.

@enumerate
@item Point (1) in @figref{3}.

A user agent (UA) in a customer SIP network initiates a call and launches an @msg{INVITE} message to
the customer's outgoing SIP proxy.  An example of an @msg{INVITE} message is shown in
@ref{message:msg29}.

@cartouche
@float Message,message:msg29
@smallformat
@verbatim
INVITE sip:+19725552222@ss1.customer1.com;user=phone SIP/2.0
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9
Max-Forwards: 70
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=0fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Contact: <sip:alice@client.customer1.com;transport=udp>
Proxy-Authorization: Digest username="alice", realm="customer1.com",
 nonce="dc3a5ab25302aa931904ba7d88fa1cf5", opaque="",
 uri="sip:+19725552222@ss1.customer1.com;user=phone",
 response="ccdca50cb091d587421457305d097458c"
Content-Type: application/sdp
Content-Length: 154

v=0
o=alice 2890844526 2890844526 IN IP4 client.customer1.com
s=-
c=IN IP4 client.customer1.com
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{UA INVITE for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (2) in @figref{3}.

The customer's outgoing SIP proxy acknowledges receipt of the @msg{INVITE} with a @msg{100 Trying}
response.  An example of the response is shown in @ref{message:msg30}.

@cartouche
@float Message,message:msg30
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9
 ;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Customer Proxy 100 Trying Response for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (3) in @figref{3}.

The customer's outgoing SIP proxy determines that the call is to be sent to the PSTN and forwards
the @msg{INVITE} message to the @cite{Carrier Proxy}.
In performing this function, the customer's outgoing SIP proxy is performing the @dfn{I-CSCF}
(Interrogating Call Services Control Function) of the 3GPP IMS architecture and the @cite{Carrier
Proxy} is acting in the role of the @dfn{BGCF} (Breakout Gateway Control Function).

@cartouche
@float Message,message:msg31
@smallformat
@verbatim
INVITE sip:+19725552222@cp.heramax.com;user=phone SIP/2.0
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
Max-Forwards: 69
Record-Route: <sip:ss1.customer1.com;lr>
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Contact: <sip:alice@client.customer1.com;transport=udp>
Content-Type: application/sdp
Content-Length: 154

v=0
o=alice 2890844526 2890844526 IN IP4 client.customer1.com
s=-
c=IN IP4 client.customer1.com
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Customer Proxy INVITE for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (4) in @figref{3}.

The @cite{Carrier Proxy} forwards the @msg{INVITE} message received from the customer's outgoing SIP
proxy to the @i{C-SCP} platform for authorization and route selection.  Calls coming from the SIP
network will have the @msg{INVITE} from the customer SIP proxy forwarded directly to the @i{C-SCP}
platform without the need for additional processing at the @cite{Carrier Proxy}.

When the customer's outgoing SIP proxy is not considered part of the @cite{Carrier Proxy}'s trust
network, the @cite{Carrier Proxy} strips all trust headers from the @msg{INVITE} before forwarding
the information on to the @i{C-SCP}.  When the customer's outgoing SIP proxy is considered part of
the @cite{Carrier Proxy}'s trust network, the @cite{Carrier Proxy} proxies the @msg{INVITE} message
to the @i{C-SCP} (without modifying any non-proxy headers or fields).

@cartouche
@float Message,message:msg33
@smallformat
@verbatim
INVITE sip:+19725552222@telingua.heramax.com;user=phone SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
Max-Forwards: 68
Record-Route: <sip:ss1.customer1.com;lr>
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Contact: <sip:alice@client.customer1.com;transport=udp>
Content-Type: application/sdp
Content-Length: 154

v=0
o=alice 2890844526 2890844526 IN IP4 client.customer1.com
s=-
c=IN IP4 client.customer1.com
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy C-SCP INVITE for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (5) in @figref{3}.

The @cite{Carrier Proxy} optionally (at some point when it determines that a retransmission of an
@msg{INVITE} might occur before a response is issued, not necessarily at the point shown) issues a
@msg{100 Trying} message to the customer proxy.

@cartouche
@float Message,message:msg32
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Optranex 248 100 Trying Response for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (6) in @figref{3}.

The @i{C-SCP} platform acknowledges receipt of the @msg{INVITE} with a @msg{100 Trying}
response.

@cartouche
@float Message,message:msg34
@smallformat
@verbatim
SIP/2.0 100 Trying
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.30
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{C-SCP 100 Trying Response for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (7) in @figref{3}.

The @i{C-SCP} platform determines that the client is authorized to connect to the PSTN and
populates route information in the @prim{Contact} headers of a @msg{302 Moved Temporarily} response.
In performing this function the @i{C-SCP} platform performs the role of a @dfn{BGCF} (Breakout
Gateway Control Function) in the @cite{3GPP TS 23.002} architecture.

The @i{C-SCP} platform must implement the dial plan.  I would suggest that the @dfn{Sansay} proxies
and customer SIP phones be configured to send @parm{tel} URL formatted numbers or @parm{tel} URL
formatted numbers in a @strong{sip} URI@footnote{For formatting of @strong{tel} URLs in @strong{sip}
URIs, see RFC 3261 section 19.1.6.} in the @prim{To}, @prim{From} and the @prim{Request-URI} fields.
Otherwise the @i{C-SCP} platform must be able to accept any of the possible URI
variations.@footnote{See RFC 4504 Section 5.3 for variations on addressing provided by a SIP phone.}

Should the @i{C-SCP} platform discover a difficulty with the @prim{addr-spec} in a @dfn{sip} URI or
@prim{telephone-subscriber} in a @strong{tel} URL, the plaform can respond to the @msg{INVITE} with
a normal @msg{4xx} or @msg{5xx} response which will be relayed back to the customer proxy.

To direct the call to the telephone network, the @i{C-SCP} should formulate a @msg{302 Moved
Temporarily} response and place the destination number parameters and route information in the
@prim{Contact} headers present in the message.

The @prim{Contact} header should be formatted as a SIP URI so that the identity of the selected
gateway can be provided to the @cite{Carrier Proxy}.

For example:

@cartouche
@float Message,message:msg35
@smallformat
@verbatim
SIP/2.0 302 Moved Temporarily
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.30
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Contact: Bob <sip:+19725552222;npdi
 ;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com@gw1.heramax.com>
 ;user=phone
Contact: Bob <sip:+19725552222;npdi
 ;tgrp=EDTNAB01DS1;trunk-context=gw2.heramax.com@gw2.heramax.com>
 ;user=phone
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
P-Asserted-Identity: Alice <tel:+13145551111;cpc=ordinary;oli=00;rn=+1830660>
Privacy: none
CSeq: 1 INVITE
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{C-SCP 302 Moved Temporarily Response for Successful SIP to PSTN Call}}
@end float
@end cartouche

@noindent
Notes:
@itemize
@item The @prim{Contact} headers in the @msg{302 Moved Temporarily} response must be formatted as a
@strong{sip} URI (so that the resulting @msg{INVITE} message will be forwarded to the correct
@cite{Optranex 248} gateway switch).

@item The @prim{Contact} headers in the @msg{302 Moved Temporarily} response must contain the dip
indicator, @parm{npdi}, and, when the number is a ported number, must contain the LRN in the
@parm{rn} parameter.

@item Each @prim{Contact} header in the @msg{302 Moved Temporarily} response must contain
@parm{trunk-context} and @parm{tgrp} parameters indicating the domain name of the specific
@cite{Optranex 248} gateway switch selected and the trunk group (route) to use on that switch.  The
domain name portion of the @strong{sip} URI must also contain the domain name of the same
@cite{Optranex 248} gateway switch.

@item The @prim{P-Asserted-Identity} header, if any, in the @msg{302 Moved Temporarily} response
must be formatted as a @strong{tel} URI.

@item A @prim{P-Asserted-Identity} header must be included if the calling party number or calling
party's category is to be included in the resulting @msg{IAM}.

@item The @prim{P-Charge-Info} header, if any, in the @msg{302 Moved Temporarily} response must be
formatted as a @strong{tel} URI.

@item A @prim{P-Charge-Info} header must be included if the charge number, originating line
information, or jurisdiction information parameter is to be included in the resulting @msg{IAM}.

@item Any @prim{Privacy} header included in the @msg{302 Moved Temporarily} response will be used to
control the presentation of the calling party number and calling name (ISUP CNAM method).  A setting
of @pval{id} or higher protects the calling party number; @pval{user} or higher protects the calling
name.
@end itemize

@item Point (8) in @figref{3}.

The @cite{Carrier Proxy} acknowledges receipt of the @msg{302 Moved Temporarily} response with
an @msg{ACK} message.

@cartouche
@float Message,message:msg36
@smallformat
@verbatim
ACK sip:tellingua@customer1.com SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
Max-Forwards: 70
Route: <sip:gw1.heramax.com;lr>
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
 ;tag=314159
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 ACK
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy ACK for Successful SIP to PSTN Call}}
@end float
@end cartouche

@item Point (9) in @figref{3}.

The @cite{Carrier Proxy} adds the contents of the @prim{Contact} header into its target set and
issues an @msg{INVITE} message to the first target.

@cartouche
@float Message,message:msg53
@smallformat
@verbatim
INVITE sip:+19725552222;npdi;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com\
 @gw1.heramax.com;user=phone SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
Max-Forwards: 67
Record-Route: <sip:ss1.customer1.com;lr>
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Contact: <sip:alice@client.customer1.com;transport=udp>
P-Asserted-Identity: Alice <tel:+13145551111;cpc=ordinary;oli=00;rn=+1830660>
Privacy: none
Content-Type: application/sdp
Content-Length: 154

v=0
o=alice 2890844526 2890844526 IN IP4 client.customer1.com
s=-
c=IN IP4 client.customer1.com
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{Carrier Proxy retargetted INVITE for Success SIP to PSTN Call}}
@end float
@end cartouche

@noindent
Notes:
@itemize
@item The @prim{Request-URI} contains the @strong{sip} URI exactly as returned in the @msg{302 Moved
Temporarily} response @prim{Contact} header in accordance with @cite{RFC 3261}.
@item The @prim{P-Asserted-Identity}, @prim{P-Charge-Info} and @prim{Privacy} headers are taken
directly from the @msg{302 Moved Temporarily} response.  This is consistent with proxy behaviour.
@end itemize

@item Point (10) in @figref{3}.

The @cite{Optranex 248} translates the incoming @msg{INVITE} message and the headers to formulate an
@msg{IAM} which is sent to the PSTN.

The @msg{INVITE} and headers received by the @cite{Optranex 248} platform is mapped to an @msg{IAM}
message as detailed in @ref{Translation of INVITE to IAM}.  This
process results in the @msg{IAM} shown in @ref{iam:ex4}, which is sent to the SS7 network.

@cartouche
@float Example,iam:ex4
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 314-555-1111, presentation-allowed
@item @parm{CdPN} @tab NSN, 972-555-2222
@item @parm{JIP} @tab 830-660
@c @item @parm{GAP} @tab ported number, NSN, 999-666-5555
@c @item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@c @item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Alice"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Bob"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM sent for Successful SIP to PSTN Call}}
@end float
@end cartouche

After this point, the @cite{Carrier Proxy} platform is no longer necessarily in the message exchange
which follows along according to @cite{RFC 3261}, @cite{RFC 3666}, @cite{RFC 3372}, @cite{ITU-T
Q.1912.5} and @cite{3GPP TS 29.163}.@footnote{Note that the IP address and UDP port number in the
@msg{180 Ringing} or @msg{OK} response to the original @msg{INVITE} is mapped from the bearer
circuit selected for the call.}
@end enumerate

@subsection Translation of INVITE to IAM

Fields from the received @msg{INVITE} are mapped to the outgoing @msg{IAM} parameter by the
@cite{Optranex 248} as follows:

@itemize @bullet

@item If the @parm{trunk-context} parameter in the @prim{Request-URI} does not correspond to the
receiving @cite{Optranex 248} platform, a @msg{502 Bad Gateway} response will be returned and no
@msg{IAM} will be generated.

@item The translated @msg{IAM} will be sent on the trunk group specified with the @parm{tgrp}
parameter of the @prim{Request-URI}.  If all trunks are busy in the trunk group, a @msg{503 Service
Unavailable} response will be generated so that the @cite{Carrier Proxy} can try the next route.
When all routes are busy, the @cite{Carrier Proxy} will issue treatment toward the SIP proxy (e.g.
@msg{503 Service Unavailable}).

@item If the @prim{Request-URI} header has @parm{npdi} parameter set in the @parm{tel} URI formatted
@parm{user-info} portion of the @prim{Request-URI} in accordance with @cite{RFC 4694}, the
@pval{number translated} bit will be set in the @parm{Forward Call Indicators} of the @msg{IAM}.

@item The @prim{telephone-subscriber} from the @strong{tel} URI of the @prim{Request-URI} (or if a
@parm{rn} parameter is present, the contents of the @parm{rn} parameter) will be used to populate
the @parm{Called Party Number} of the @msg{IAM}.  This is consistent with the behavior of the
@dfn{MGCF} described in @cite{3GPP TS 29.163 7.2.3.1.2A} and @cite{RFC 4694}.

@item If the @parm{rn} parameter exists in the @prim{Request-URI} @parm{user-info} @strong{tel} URI
portion, the @prim{telephone-subscriber} part of the @strong{tel} URI will be used to populate the
ported number in a @parm{Generic Address Parameter} in the @msg{IAM}.  This is consistent with the
behavior of the @dfn{MGCF} described in @cite{3GPP TS 29.163 7.2.3.1.2A} and @cite{RFC 4694}.

@item If the @parm{cic} parameter exists in the @prim{Request-URI} @strong{tel} URI in accordance
with @cite{RFC 4694}, the value of this parameter will be used to populate a @parm{Carrier
Identification} parameter in the outgoing @msg{IAM}.

@item If the @parm{dai} parameter exists in the @prim{Request-URI} @strong{tel} URI in accordance
with @cite{draft-yu-tel-dai-08}, the value of this parameter will be used to populate the
@parm{Carrier Selection Information} parameter in the outgoing @msg{IAM}.

@item If there is a recognized @prim{telephone-subscriber} portion in the @prim{To} header and it
does not correspond to the @parm{Called Party Number}, a @pval{"dialled number"} @parm{Generic
Address Parameter} will be added to the outgoing @msg{IAM}.

@item If there is a @prim{display-name} portion in the @prim{To} header and the ISUP CNAM method is
marked on the trunk group, a @pval{"original called name"} @parm{Generic Name} parameter that is
@pval{presentation-allowed} will be added to the outgoing @msg{IAM}.

@item If a @parm{cpc} parameter exists in the @prim{P-Asserted-Identity} header, a @parm{Calling
Party Category} parameter will be included in the @msg{IAM} with the value indicated.  This
behaviour is consistent with that described for the @dfn{MGCF} in @cite{3GPP TS 29.163 Annex
C.1}.@footnote{See @cite{3GPP TS 29.163 V9.0.0 (2009-12) Annex C.1} and
@cite{draft-patel-dispatch-cpc-oli-parameter-02}.}

@item If a @parm{oli} parameter exists in the @prim{P-Charge-Info} or @prim{P-Asserted-Identity} header;
an @parm{Originating Line Information} parameter will be included in the @msg{IAM} with the value
indicated.  This behaviour is consistent with that described for the @dfn{MGCF} in @cite{3GPP TS
29.163 Annex H.1}.@footnote{See @cite{3GPP TS 29.163 V9.0.0 (2009-12) Annex H.1} and
@cite{draft-patel-dispatch-cpc-oli-parameter-02}.}

@item If an @parm{rn} parameter exists in the @prim{P-Charge-Info} or @prim{P-Asserted-Identity}
header, it will be used to populate the @parm{Jurisdiction Information Parameter} in the outgoing
@msg{IAM}.  This behaviour is consistent with @cite{RFC 4694}.@footnote{See @cite{RFC 4694} Section
5.2.4.  Note, however, that neither @cite{ITU-T Q.1912.5/1998} nor @cite{3GPP TS 29.163 V9.0.0}
support the concept of communicating the @parm{Jurisdiction Information Parameter} from the
@msg{INVITE} to the @msg{IAM}.}

@item If a valid @prim{telephone-subscriber} number is present in the @prim{P-Charge-Info} header,
and it is different from the @parm{Calling Party Number} when the @parm{noa} parm is 1, 2, 3 or
absent, or, it is different from the @parm{Called Party Number} when the @parm{noa} parm is 5, 6 or
7, it will be used in the @parm{Charge Number} parameter in the outgoing @msg{IAM}.  When a
@parm{npi} or @parm{noa} parameter is also present in the @prim{P-Charge-Info} header, the
numbering-plan-indicator and nature-of-address in the @parm{Charge Number} parameter will be
populated accordingly.  This behaviour is consistent with that described in
@cite{draft-york-sipping-p-charge-info-07}.

@item If a valid @prim{telephone-subscriber} number is present in the @prim{P-Asserted-Identity}
header, it will be used in the @parm{Calling Party Number} parameter of the outgoing @msg{IAM}.  If
a @prim{Privacy} header exists and is set to @samp{id} (or wider scope), the @parm{Calling Party
Number} will be marked @pval{presentation-restricted}; otherwise, it will be marked
@pval{presentation-allowed}.

@item If a @prim{display-name} exists in the @prim{P-Asserted-Identity} header and the trunk is
configured for ISUP CNAM method, the @prim{display-name} will be placed in a calling name
@parm{Generic Name} parameter in the outgoing @msg{IAM}.  If a @prim{Privacy} header exists and is
set to @samp{user} (or wider scope), the @parm{Generic Name} will be marked
@pval{presentation-restricted}; otherwise, it will be marked, @pval{presentation-allowed}.

@item If there is a recognized @prim{telephone-subscriber} portion in the @prim{From} header, and it
is different from that of the @prim{P-Asserted-Identity} header, an @pval{"additional user provided
number - not verified"} @parm{Generic Address Parameter} will be placed in the outgoing @msg{IAM}
with @pval{presentation-allowed}.

@item If there is a @prim{display-name} portion in the @prim{From} header, and the outgoing trunk is
marked for ISUP CNAM, a @pval{"calling name"} @parm{Generic Name} parameter will be placed in the
outgoing @msg{IAM} marked @pval{presentation-allowed} (if one is not already present).

@end itemize

@subsubsection Example of INVITE to IAM Translation

So, for the SIP @msg{INVITE} message last presented, and repeated in @ref{message:msg38},

@cartouche
@float Message,message:msg38
@smallformat
@verbatim
INVITE sip:+19725552222;npdi;tgrp=EDTNAB01DS1;trunk-context=gw1.heramax.com\
 @gw1.heramax.com;user=phone SIP/2.0
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
Max-Forwards: 67
Record-Route: <sip:ss1.customer1.com;lr>
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Contact: <sip:alice@client.customer1.com;transport=udp>
P-Asserted-Identity: Alice <tel:+13145551111;cpc=ordinary;oli=00;rn=+1830660>
Privacy: none
Content-Type: application/sdp
Content-Length: 154

v=0
o=alice 2890844526 2890844526 IN IP4 client.customer1.com
s=-
c=IN IP4 client.customer1.com
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{302 Moved Temporarily Response for SIP to PSTN Call Example}}
@end float
@end cartouche

the outgoing IAM would be as shown in @ref{iam:ex5}.

@cartouche
@float Example,iam:ex5
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CdPN} @tab NSN, 999-888-7777
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{JIP} @tab 830-660
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@item @parm{GN} @tab calling name, "Joe", presentation-allowed
@item @parm{GN} @tab called name, "Sue", presentation-allowed
@end multitable
@caption{@emph{IAM sent for Successful SIP to PSTN Call Example}}
@end float
@end cartouche

@subsection Processing of Calls Terminating on the PSTN

For calls terminating on the PSTN, the @cite{Carrier Proxy} is responsible for controlling
interactions with the @i{C-SCP}.  In conjunction with the @i{C-SCP}, the @cite{Carrier Proxy} is
responsible for formatting a SIP @msg{INVITE} message toward the @cite{Optranex 248} that contains
information apporpriate for the SIP to ISUP interworking.

The functions of the @cite{Carrier Proxy} in its interaction with the @cite{Customer Proxy} and
@cite{Optranex 248} does not need to deviate from the basic stateless or stateful transaction
behaviour described in @cite{RFC 3261}.  As such, any popular commercial or open-source
implementation of a SIP proxy server can be used to perform this function.  Nevertheless, the
specific interaction between the @cite{Carrier Proxy} and the @i{C-SCP} is implementation and
network specific and does not really need to conform to a standard.

The steps involved are as follows:

@itemize
@item Forwarding the initial SIP @msg{INVITE}, received by the @cite{Carrier Proxy} to the @i{C-SCP}
platform.  This is detailed in @ref{Forwarding the Initial SIP INVITE}.
@item Extracting information from the forwarded SIP @msg{INVITE} at the @i{C-SCP} platform.  This is
detailed in @ref{Extracting Information from the SIP INVITE}.
@item Generating a @msg{302 Moved Temporarily} response at the @i{C-SCP} and processing the response
at the @cite{Carrier Proxy}.  This is detailed in @ref{302-Moved-Temporarily Response}.
@item Generating the SIP @msg{INVITE} message sent to the @cite{Optranex 248} gateway switch at the
@cite{Carrier Proxy}.  This is detailed in @ref{Generating the Gateway INVITE}.
@end itemize

@noindent
A complete example is provided in @ref{Example of a Successful Call from SIP to PSTN}.

@subsubsection Forwarding the Initial SIP INVITE

When the @cite{Carrier Proxy} receives a SIP @msg{INVITE} message from a @cite{Customer Proxy}, it
determines whether the call is to be forwarded to the PSTN, on whether some other action is to be
performed on the nascent session.  This determination could include querying a Carrier ENUM
database, or some other mechanism.  Upon deciding that the calls is to be forwarded to the PSTN
through a @cite{Optranex 248} gateway switch, the @cite{Carrier Proxy} processing the message and
forwards a SIP @msg{INVITE} message to the @i{C-SCP}.  In processing the received @msg{INVITE}
message and formulating a SIP @msg{INVITE} message to send to the @i{C-SCP}, the @cite{Carrier
Proxy} should perform all of the actions necessary for trust domains, particularly with regards to
@prim{P-Requested-Identity}, @prim{P-Asserted-Identity}, @prim{P-Charge-Info} and @prim{Privacy}
fields.  That is, any untrusted private headers received from the @cite{Customer Proxy} should be
stripped unless the customer proxy is within the same trust domain as the @cite{Carrier Proxy}.

Examples are provided in @ref{SIP to PSTN Example Point 3}, for Point (3) and (4) in @figref{3}.

@subsubsection Extracting Information from the SIP INVITE

Examples are provided in @ref{SIP to PSTN Example Point 5}, for Point (5) and (6) in @figref{3}.

@subsubsection 302-Moved-Temporarily Response

@subsubheading Formulating the 302-Moved-Temporarily Response

Examples are provided in @ref{SIP to PSTN Example Point 6}, for Point (6) and (7) in @figref{3}.

@subsubheading Processing the 302-Moved-Temporarily Response

Examples are provided in @ref{SIP to PSTN Example Point 8}, for Point (8) and (9) in @figref{3}.

@subsection Generating the Gateway INVITE

The @cite{Carrier Proxy} is responsible for analyzing information from the received @msg{302 Moved
Temporarily} response, incorporating that information into the target set for the session and
formulating a SIP @msg{INVITE} message to the first of the indicated gateways (as indicated by the
@prim{Contact} headers in the @msg{302 Moved Temporarily} response).  When formulating the
@msg{INVITE} message, the @cite{Carrier Proxy} should take the actions described in @cite{RFC 3261}
with the following additional considerations:

Examples are provided in @ref{SIP to PSTN Example Point 9}, for Point (9) in @figref{3}.

@itemize
@item The @cite{Carrier Proxy} should not return the @msg{302 Moved Temporarily} response message
received from the @i{C-SCP} back to the @cite{Customer Proxy} for processing, but must process the
response itself.
@item The @cite{Carrier Proxy} must not fork the target set resulting from the @msg{302 Moved
Temporarily} response message.
@item Any @prim{P-Asserted-Identity}, @prim{Privacy}, and @prim{P-Charge-Info} headers present in
the @msg{302 Moved Temporarily} response message or to be added by the @cite{Carrier Proxy} should
be forwarded to the @cite{Optranex 248} platform.
@end itemize

@subsubsection Example of a Successful Call from SIP to PSTN

@enumerate
@item @anchor{SIP to PSTN Example Point 1} Point (1) in @figref{3}.

A SIP @msg{INVITE} message is launched by a UA in the cutomer SIP network initiating a session with
the @cite{Customer Proxy}.

The precise format of this message is not specified by this dcoument, but, however, is envisioned to
be similar to the following:

@item @anchor{SIP to PSTN Example Point 2} Point (2) in @figref{3}.

The @cite{Customer Proxy} optionally responds with a @msg{100 Trying} message.

@item @anchor{SIP to PSTN Example Point 3} Point (3) in @figref{3}.

The @cite{Customer Proxy} determines that the session is to be established within the
@url{heramax.com} network and forwards the message to the @cite{Carrier Proxy}.  In forwarding the
@msg{INVITE} to the @cite{Carrier Proxy}, the @cite{Customer Proxy} should utilize DNS @pval{NAPTR}
and @pval{SRV} entries to provide redundancy between images of the @cite{Carrier Proxy}.  Also note
that the @cite{Carrier Proxy} can easily support UDP, TCP and SCTP, both with and without TLS by
utilizing software such as @cite{SER} or @cite{OpenSIPS}.@footnote{@cite{OpenSIPS} was formerly
called @cite{OpenSER}.}

@item @anchor{SIP to PSTN Example Point 4} Point (4) in @figref{3}.

The @cite{Carrier Proxy} determines that the call is destined toward the PSTN and forwards a
header-filtered @msg{INVITE} message to the @i{C-SCP}.

The precise format of this message is no longer specified by this document, but, however, was
envisioned to be similar to the following:

@item @anchor{SIP to PSTN Example Point 5} Point (5) in @figref{3}.

The @cite{Carrier Proxy} optionally responds with a @msg{100 Trying} message to suppress
retransmission of the @cite{INVITE}.

@item @anchor{SIP to PSTN Example Point 6} Point (6) in @figref{3}.

The @i{C-SCP} optionally responds with a @msg{100 Trying} message to suppress retransmission of the
@cite{INVITE}.

@item @anchor{SIP to PSTN Example Point 7} Point (7) in @figref{3}.

The @i{C-SCP} processes the received @msg{INIVTE} and formulates a @msg{302 Moved Temporarily}
response.

The precise format of this message is no longer specified by this document, but, however, was
envisioned to be similar to the following:

@item @anchor{SIP to PSTN Example Point 8} Point (8) in @figref{3}.

The @cite{Carrier Proxy} acknowledges the @msg{302 Moved Temporarily} response.

@item @anchor{SIP to PSTN Example Point 9} Point (9) in @figref{3}.

The @cite{Carrier Proxy} formulates a branch @msg{INVITE} message from the original @msg{INVITE}
message received from the @cite{Customer Proxy} and the @msg{302 Moved Temporarily} response
formulated by the @i{C-SCP} and sends the @msg{INVITE} message to the appropriate target within the
current target set defined by the @msg{302 Moved Temporarily} response message.

@item @anchor{SIP to PSTN Example Point 10} Point (10) in @figref{3}.

The selected @cite{Optranex 248} gateway switch receives the @msg{INVITE} message from the
@cite{Carrier Proxy} and generates a corresponding ISUP @msg{IAM} message which is sent to the SS7
network.

@item @anchor{SIP to PSTN Example Point 11} Point (11) in @figref{3}.

The @cite{Optranex 248} optionally response with a @msg{100 Trying} message.

@item Remainder oF Session

The remainder of the session establishment is according to normal SIP to ISUP conversion mechanisms
(@cite{SIP-T}, @cite{Q.1912.5}, @cite{3GPP TS 29.163}).  The @cite{Carrier Proxy} can decide at the
time that it issues the @msg{INVITE} message to the @cite{Optranex 248} platform whether it wishes
to continue receiving requests or not.

@end enumerate

@subsection Treatment of SIP Originating Calls

@subsubsection Treatment of SIP Calls

@noindent
@subsubheading Q.850 Cause Values

The mapping of @cite{Q.850} cause values returned in an @msg{ACM} or @msg{REL} message to SIP
responses is illustrated: for the normal class of cause values, in @tabref{T-18}; resource
unavailable class, @tabref{T-19}; service or option not available class,
@tabref{T-20}.@footnote{Note that this mapping is consistent with @cite{Table 21/Q.1912.5}.} These
@cite{Q.850} cause vaules will be mapped to the corresponding SIP response listed in the tables.
SIP @msg{4xx} or @msg{5xx} response, @msg{CANCEL} or @msg{BYE} message will include the
@prim{Reason} header that contains the @pval{Q.850} cause value.  An example is provided in
@ref{message:msg60}.

@tabfig{pgwt18,T-18,Q.850 Cause Value to SIP Response Mapping - Normal Class}

@tabfig{pgwt19,T-19,Q.850 Cause Value to SIP Response Mapping - Resource Unavailable Class}

@tabfig{pgwt20,T-20,Q.850 Cause Value to SIP Response Mapping - Service or Option Not Available Class}

@cartouche
@float Message,message:msg60
@smallformat
@verbatim
SIP/2.0 500 Server Internal Error
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.30
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=34 ;text="resource unavailable"
Reason: SIP ;cause=500 ;text="server internal error"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{Q.850 Cause Value to SIP Response Mapping Example}}
@end float
@end cartouche

@subsubheading ANSI Cause Values

The mapping of @cite{ANSI} cause values returned in an @msg{ACM} or @msg{REL} message to SIP
responses is illustrated: for the normal class of cause values, in @tabref{T-21}; resource
unavailable class, @tabref{T-22}; service or option not available class,
@tabref{T-23}.@footnote{Note that this mapping is consistent with @cite{Table 21/Q.1912.5}.} These
@cite{ANSI} cause values will be mapped to the corresponding SIP response listed in the tables.  The
SIP @msg{4xx} or @msg{5xx} response, @msg{CANCEL} or @msg{BYE} message will include the
@prim{Reason} header that contains the @pval{ANSI} cause value, as well as a @pval{Q.850}
@prim{Reason} header that contains the corresponding @pval{Q.850} cause value.  An example is
provided in @ref{message:msg61}.

@tabfig{pgwt21,T-21,ANSI Cause Value to SIP Response Mapping - Normal Class}

@tabfig{pgwt22,T-22,ANSI Cause Value to SIP Response Mapping - Resource Unavailable Class}

@tabfig{pgwt23,T-23,ANSI Cause Value to SIP Response Mapping - Service or Option Not Available Class}

@cartouche
@float Message,message:msg61
@smallformat
@verbatim
SIP/2.0 500 Server Internal Error
Via: SIP/2.0/UDP cp.heramax.com:5060;branch=z9hG4bK-000001;received=192.168.9.30
Via: SIP/2.0/UDP ss1.customer1.com:5060;branch=z9hG4bK2d4790.1;received=192.0.2.111
Via: SIP/2.0/UDP client.customer1.com:5060;branch=z9hG4bK74bf9;received=192.0.2.101
From: Alice <sip:+13145551111@ss1.customer1.com;user=phone>
 ;tag=9fxced76sl
To: Bob <sip:+19725552222@ss1.customer1.com;user=phone>
Call-ID: 2xTb9vxSit55XU7p8@customer1.com
CSeq: 1 INVITE
Reason: Q.850 ;cause=1 ;text="unallocated (unassigned) number"
Reason: SIP ;cause=404 ;text="not found"
Content-Length: 0
@end verbatim
@end smallformat
@caption{@emph{ANSI Cause Value to SIP Response Mapping Example}}
@end float
@end cartouche

@subsubsection Examples of Unsuccessful Calls from SIP to PSTN

@page
@node ENUM Calls from PSTN to SIP
@section ENUM Calls from PSTN to SIP

A viable option to using the @i{C-SCP} platform for calls terminating on the SIP network from
the PSTN is to use an I-ENUM or P-ENUM DNS server hierarchy.  In this approach, rather than using
the @i{C-SCP} platform as a redirect server, the @cite{Optranex 248} directly queries an ENUM
database (e.g. bind9, powerdns).  Either a host in the internal network provides a dedicated DNS
server, or the @cite{Optranex 248} platform acts as a primary DNS server and delegates to ENUM
servers maintained by (or on behalf of) the Customer.

Advantages of this arrangement over the @msg{305 Use Proxy} or @msg{303 Proxy Redirect} approach
with the @i{C-SCP} platform are as follows:

@enumerate
@item ENUM provides distributed management of mapping from terminating number to
@strong{sip} URI through delegation.  Customer records can be delegated to the customer.

@item ENUM provides for local caching of transformations at the @cite{Optranex 248}.  Local
cacheing of results using the @msg{305 Use Proxy} or @msg{303 Proxy Redirect} is not possible.  A
@msg{302 Moved Temporarily} message instead of a @msg{305 Use Proxy} or @msg{303 Proxy Redirect}
could be used to provide caching using the @prim{Expires} header or the @parm{expires} parameter in
the @prim{Contact} headers in the @msg{302 Moved Temporarily} response, however, this mechanism
provides no real help with the management of caching as does the ENUM DNS-based approach.

@item ENUM provides for IXFR (incremental zone transfers) which would allow the @cite{Optranex
248} to slave off of the external distributed (even customer managed) ENUM servers and permit
per-call lookups to be local to the @cite{Optranex 248}.

@item If the DNS SRV approach is used to distribute calls over like customer proxies for
redundancy, a DNS query will be required per call anyway.  See
@cite{draft-ietf-speermint-srv-naptr-use-06}.

@item The @cite{Optranex 248} does not appear to need to know any of the information on the
@i{C-SCP} platform for the purpose of terminating calls: it just needs to know the @strong{sip}
URI associated with the B Number and the results of a lookup attempt.
@end enumerate

@subsection ENUM Call Flows from PSTN to SIP

@subsubsection Successful ENUM Call Flow from PSTN to SIP

A successful ENUM call flow from the PSTN to SIP is illustrated in @figref{10}.

@figuresized{pgw10,10,Successful ENUM Calls from PSTN to SIP,6.0in}

@noindent
@itemize @bullet
@item Point (1) in @figref{10}.

A call terminating from the PSTN to the @cite{Optranex 248} switch begins with the receipt of an
ANSI ISUP @msg{IAM} message.  For example, see @ref{iam:ex6}.

@cartouche
@float Example,iam:ex6
@multitable @columnfractions 0.08 0.92
@item @parm{FCI} @tab @pval{number translated}
@item @parm{CgPN} @tab NSN, 222-333-4444, presentation-restricted
@item @parm{CdPN} @tab NSN, 777-666-5555
@item @parm{JIP} @tab 830-660
@item @parm{GAP} @tab ported number, NSN, 999-666-5555
@item @parm{GAP} @tab dialed number, NSN, 444-444-4444, presentation-allowed
@item @parm{GAP} @tab additional user provided number - not verified, NSN, 666-666-6666, presentation-allowed
@item @parm{GN} @tab calling name, name available/unknown, @samp{"Joe"}, presentation-allowed
@item @parm{GN} @tab original called name, name available/unknown, @samp{"Sue"}, presentation-allowed
@item @parm{CPC} @tab ordinary subscriber
@item @parm{OLI} @tab ANI 0
@end multitable
@caption{@emph{IAM received for Successful ENUM PSTN to SIP Call}}
@end float
@end cartouche

@item Point (2) in @figref{10}.

The @cite{Optranex 248} uses the @parm{Called Party Number} and potentially the @pval{ported number}
in a @parm{Generic Address Parameter} to initiate an ENUM lookup.  In the worst case scenario, a DNS
NAPTR query is sent to an root ENUM server.  The query is, for example:

@sp 1
@example
5.5.5.5.6.6.6.9.9.9.e164.arpa
@end example

@noindent
Note that this query and response are not required if either the @cite{Optranex 248} has a cached
result for the query, or accepts zone transfers from the master or customer ENUM database.

@item Point (3) in @figref{10}.

The root ENUM server performs a lookup which either results in a @strong{sip} URI or an error
response.  If an error response is returned, the @cite{Optranex 248} can immediately release the
call using an ANSI ISUP @msg{REL} message with the appropriate cause value.  When a successful
response is received, the @cite{Optranex 248} selects those @prim{NAPTR} @prim{RR}s that support
@pval{E2U} resolution service.  For example:

@sp 1
@example
@verbatim
$ORIGIN 5.5.5.5.6.6.6.9.9.9.e164.arpa.
NAPTR 10 100 "u" "E2U+pstn:tel"
"!^.*$!sip:sue@customer1.com!".
@end verbatim
@end example

@noindent
Note that this query and response are not required if either the @cite{Optranex 248} has a cached
result for the query, or accepts zone transfers from the master or customer ENUM database.

@item Point (4) in @figref{10}.

If a @strong{sip} URI is returned with a domain name portion that does not correspond to an A
pointer; a DNS @prim{NAPTR} lookup is performed to determine the precise host for this query in
accordance with @cite{RFC 2915}.  This permits the DNS @prim{NAPTR} and @prim{SRV} mechanism to be
used to distribute calls over redundant incoming customer proxies in accordance with @cite{RFC
2782}.  In this example, the target of the DNS @prim{NAPTR} query is:

@sp 1
@example
@verbatim
customer1.com
@end verbatim
@end example

@noindent
Note that this query and response are not required if either the @cite{Optranex 248} has a cached
result for the query, accepts zone transfers from the master or customer DNS database, or the
@strong{sip} URI contains a host portion that resolves to an A pointer or a known host to IP address
mapping at the @cite{Optranex 248} (e.g. @file{/etc/hosts} entry).

@item Point (5) in @figref{10}.

In response to the DNS @prim{NAPTR} query, the root DNS server responds with series of "s"
substitutions.  In this example, the zone records might look like:

@sp 1
@example
@verbatim
IN NAPTR  50 50 "s" "SIPS+D2T" "" _sips._tcp.customer1.com
IN NAPTR  90 50 "s" "SIP+D2T"  "" _sip._tcp.customer1.com
IN NAPTR 100 50 "s" "SIP+D2U"  "" _sip._udp.customer1.com
@end verbatim
@end example

@noindent
Note that this query and response are not required if either the @cite{Optranex 248} has a cached
result for the query, accepts zone transfers from the master or customer DNS database, or the
@strong{sip} URI contains a host portion that resolves to an A pointer or a known host to IP address
mapping at the @cite{Optranex 248} (e.g. @file{/etc/hosts} entry).

@item Point (6) in @figref{10}.

The @cite{Optranex 248} selects a target from the response to the @prim{NAPTR} DNS query on the
target domain and generates a DNS @prim{SRV} query on the service target.  In this example, the
@cite{Optranex 248} only supports UDP and therefore selects the entry:

@sp 1
@example
@verbatim
_sip._udp.customer1.com
@end verbatim
@end example

@noindent
If the previous DNS @prim{NAPTR} lookup results in no records, a normal DNS @prim{SRV} lookup for
@samp{_sip._udp.customer1.com} is performed instead.

Note that the caching period on @prim{NAPTR} @prim{SRV} entries is typically 1 to 12 hours
permitting for infrequent refresh of the information.  Should the customer DNS (or authoritative
DNS) be configured for zone transfers to the @cite{Optranex 248}, the interval can be extended
indefinitely.

@item Point (7) in @figref{10}.

The response to the DNS @prim{SRV} contains either a DNS @prim{A} record or @prim{AAAA} record, or
does not (e.g. it contains a @prim{CNAME} record).  If the response contains an @prim{A} or
@prim{AAAA} record, the IP address of the record is used directly.  Otherwise, @cite{RFC 2782} is
followed and and @prim{A} record results.  In this example assume that a @prim{CNAME} record results
as follows:

@sp 1
@example
@verbatim
$ORIGIN customer1.com
_sip._udp SRV 0 1 5060 proxy1.customer1.com
_sip._udp SRV 0 1 5060 proxy2.customer1.com
@end verbatim
@end example

@noindent
Note that the caching period on @prim{SRV} entries is typically on the order of days permitting for
very infrequent refresh of the information.  Should the customer DNS (or authoritative DNS) be
configured for zone transfers to the @cite{Optranex 248}, the interval can be extended indefinitely.

@item Point (8) in @figref{10}.

When there is no @prim{A} nor @prim{AAAA} record in the response to the DNS @prim{SRV} query, the
procedures of @cite{RFC 2782} are followed to select a record look up an @prim{A} or @prim{AAAA}
record from, for example, a @prim{CNAME} record.  In this example, the target of the DNS query is
the @prim{CNAME} from the @prim{SRV} response:

@sp 1
@example
@verbatim
proxy1.customer1.com
@end verbatim
@end example

@noindent
Note that if no records were returned to the previous DNS @prim{SRV} request, a normal @prim{A}
request would be made on just domain target @samp{customer1.com}.

Note that caching period on @prim{A} records can be days causing very infrequent lookups of the
information.

@item Point (9) in @figref{10}.

The response on the query to the specific customer proxy will result (when successful) an an @prim{A}
or @prim{AAAA} record which can then be used as the IP address of the proxy.

@sp 1
@example
@verbatim
$ORIGIN customer1.com
proxy1 A 172.30.79.10
proxy2 A 172.30.79.11
@end verbatim
@end example

@item Point (10) in @figref{10}.

The @cite{Optranex 248}, using the results from the @parm{NAPTR} and @parm{SRV} lookups (whether
cached, slaved or remote), formulates an @msg{INVITE} to the @strong{sip} URI resulting from the
lookup and directs it at the customer's incoming proxy (indicated in the @strong{sip} URI or DNS SRV
result from the lookup).

@cartouche
@float Message,message:msg39
@smallformat
@verbatim
INVITE sip:sue@customer1.com SIP/2.0
Via: SIP/2.0/UDP gw1.heramax.com:5060;branch=z9hG4bK-000001
From: "Joe" <tel:+16666666666>;tag=XXX
To: "Sue" <tel:+14444444444>
Call-ID: 111223@gw1.heramax.com
CSeq: 1 INVITE
Contact: <sip:+16666666666@gw1.heramax.com:5060;user=phone;transport=udp>
Max-Forwards: 33
Content-Type: application/sdp
Content-Length: 134

v=0
o=GW 2890844527 2890844527 IN IP4 gw1.heramax.com
s=-
c=IN IP4 gw1.heramax.com
t=0 0
m=audio 3456 RTP/AVP 0
a=rtpmap:0 PCMU/8000
@end verbatim
@end smallformat
@caption{@emph{ENUM Customer INVITE for Successful PSTN to SIP Call}}
@end float
@end cartouche

@item Point (11) in @figref{10}.

The customer proxy determines the location of the destination UA and fowards the @msg{INVITE} using
@cite{RFC 3261} procedures.

@item Point (12) in @figref{10}.

A @msg{100 Trying} is potentially returned and the call completes or is treated according to
@cite{RFC 3261} procedures.

@item Point (13) in @figref{10}.

A @msg{100 Trying} is potentially returned from the UA and the call completes or is treated
according to @cite{RFC 3261} procedures.

@end itemize

@noindent
The ENUM call flow has the significant advantage that, with proper ENUM and DNS management, the
majority of calls will not have to query outside the @cite{Optranex 248}.  With 64,512 circuits at
an average 3 minute holding time, the resulting 360 calls per second can avoid 4 message exchanges
with the network per call.  Also, terminating calls do not rely upon the availability of an external
box.  If the root ENUM/DNS server should go down, cached and slaved results in the ENUM/DNS server
local to the @cite{Optranex 248} can be used.  As incremental zone transfers might stop during a
root or customer ENUM/DNS server outage, some calls terminating from the PSTN might be directed to
an incorrect customer proxy; however, the customer proxy will be able to treat those calls and
return appropriate error codes to the @cite{Optranex 248} for releasing the call with the proper
cause values back to the PSTN.

@heading Example BIND9 Zone Files

An example of a @command{bind9} configuration file is illustrated in @ref{bind9:ex0}.

@cartouche
@float Example,bind9:ex0
@example
@verbatim
acl good_sources { 192.168.0.0/24; };

options {
	...
	also-notify	{ 192.168.0.10; 192.168.0.11; };
	allow-query	{ localhost; good_sources; };
	allow-transfer	{ localhost; good_sources; };
	allow-recursion	{ localhost; good_sources; };
	...
};

...

zone "1.e164.heramax.com" IN {
	type master;
	file "/etc/bind/db.1.e164.heramax.com";
	allow-query { any; };
	allow-transfer { good_sources; };
	notify yes;
	also-notify { 192.168.0.10; 192.168.0.11; };
	zone-statistics yes;
	
};
@end verbatim
@end example
@caption{@emph{Example BIND9 configuration file (@file{named.conf.local})}}
@end float
@end cartouche

@noindent
An example of a @command{bind9} zone file is illustrated in @ref{bind9:ex1}.

@cartouche
@float Example,bind9:ex1
@example
@verbatim
$TTL 86400
$ORIGIN heramax.com.
@ IN SOA ns.heramax.com. root.ns.heramax.com. (
	2009013000
	28800
	14400
	3600000
	86400 )
NS  ns.heramax.com.
IN NAPTR  50 50 "s" "SIPS+D2T" "" _sips._tcp.heramax.com.
IN NAPTR  90 50 "s" "SIP+D2T" "" _sip._tcp.heramax.com.
IN NAPTR  90 50 "s" "SIP+D2U" "" _sip._udp.heramax.com.
_sips._tcp SRV 0 1 5060 gw1.heramax.com.
_sips._tcp SRV 0 1 5060 gw2.heramax.com.
_sip._tcp  SRV 0 1 5060 gw1.heramax.com.
_sip._tcp  SRV 0 1 5060 gw2.heramax.com.
_sip._udp  SRV 0 1 5060 gw1.heramax.com.
_sip._udp  SRV 0 1 5060 gw2.heramax.com.
gw1 IN A 192.168.0.10.
gw2 IN A 192.168.0.11.
@end verbatim
@end example
@caption{@emph{Example BIND9 zone file}}
@end float
@end cartouche

@noindent
An example of a @command{bind9} zone file is illustrated in @ref{bind9:ex2}.

@cartouche
@float Example,bind9:ex2
@example
@verbatim
$ORIGIN 1.e164.heramax.com.
@ IN SOA ns.heramax.com. root.ns.heramax.com. (
	2009013000
	28800
	14400
	3600000
	86400 )
NS  ns.heramax.com.
1.1.0.9.4.0.8.7 3600 IN NAPTR 100 10 "u" \
	"E2U+sip" "!^(.*)$!sip:\\1@openss7.net!" .
1.1.0.9.4.0.8.7 3600 IN NAPTR 100 10 "u" \
	"E2U+pstn:tel" "!^(.*)$!tel:\\1;npdi;phone-context=openss7!" .
@end verbatim
@end example
@caption{@emph{Example BIND9 zone file}}
@end float
@end cartouche

@subsubsection Unsuccessful ENUM Call Flow from PSTN to SIP

When the ENUM call flow from PSTN to SIP is unsuccessful, it can be treated in four locations:

@enumerate
@item At the @cite{Optranex 248} as a result of a local NAPTR or SRV lookup that is cached or
slaved.  When an error result is returned to either of the DNS lookups, the error result can be
mapped onto ANSI ISUP @parm{Cause} values in the @msg{REL} message.

In contrast to the @i{C-SCP} redirect server approach, where it is not possible for the
@cite{Optranex 248} to treat the call immediately from local data, the ENUM/DNS approach permits
this.  Although calls that go to treatment by far the minority of calls, this saves additional delay
and additional trunk holding times after seizure.

@item At the ENUM/DNS root server as a result of a local NAPTR or SRV lookup.  When an error result
is returned to either of the

@item At the Customer Proxy as a result of proxy operation.

@item At the Customer UA.
@end enumerate

@page
@node ENUM Calls from SIP to PSTN
@section ENUM Calls from SIP to PSTN

A viable option to using the @i{C-SCP} platform for analyzing and routing calls terminating on the
PSTN from the SIP network is to use the same I-ENUM or P-ENUM DNS server hierarchy presented in
@ref{ENUM Calls from PSTN to SIP}.  In this approach, rather than using the @i{C-SCP} platform as a
redirect server, the @cite{Optranex 248} directly queries an ENUM database (e.g. bind9, powerdns).
Either a host in the internal network provides a dedicated DNS server, or the @cite{Optranex 248}
platform acts as a primary DNS server and delegates to ENUM servers maintained by (or on behalf of)
the Customer.

Advantages of this arrangement over the @msg{302 Moved Temporarily} approach with the @i{C-SCP}
platform are as follows:

@enumerate
@item ENUM provides distributed management of mapping from terminating number to
@strong{sip} URI through delegation.  Customer records can be delegated to the customer.

@item ENUM provides for local caching of transformations at the @cite{Optranex 248}.  Local
cacheing of results using the @msg{302 Moved Temporarily} @prim{Expires} header or the
@parm{expires} parameter in the @prim{Contact} headers in the @msg{302 Moved Temporarily} response,
however, this mechanism provides no real help with the management of caching as does the ENUM
DNS-based approach.

@item ENUM provides for IXFR (incremental zone transfers) which would allow the @cite{Optranex
248} to slave off of the external distributed (even customer managed) ENUM servers and permit
per-call lookups to be local to the @cite{Optranex 248}.
@end enumerate

@subsection ENUM Call Flow from SIP to PSTN

@enumerate
@item The SIP phone within the customer network generates an @msg{INVITE} message toward the
customer proxy.

@item The customer proxy authenticates the SIP phone user and determines that the call is to be
routed via the @cite{Optranex 248} gateway switch and forwards the @msg{INVITE}.

@item The @cite{Optranex 248} gateway switch receives the @msg{INVITE} and initiates call processing
consisting of the following steps:

@enumerate
@item The format of the @prim{From}, @prim{P-Requested-Identity}, @prim{P-Asserted-Identity},
@prim{To} and @prim{Request-URI} headers are examined for proper format.

@item After determining a proper E.164 number associated with the originator, the number is used to
perform an ENUM lookup.  The gateway examines the response for @samp{E2U+pstn:tel} and
@samp{E2U+SIP} records.  The @samp{E2U+SIP} response record is examined to ensure that the domain
portion of the @strong{sip} URI contains a inbound customer proxy that corresponds to the outbound
customer proxy from which the @msg{INVITE} message was received (authorization and verification).
The @parm{phone-context} parameter in the @samp{E2U+pstn:tel} record is used to establish the
originating class of service (MTA), and any @parm{rn} in the @strong{tel} URI can be used to
establish the @parm{JIP}.  The @parm{cpc} and @parm{oli} can be used to provide charging
information.  The @strong{tel} URI may also contain a @prim{P-Charge-Info} header substitutions
which can contain a billing (charge) number.  (When the @parm{oli} is incuded without a header
substitution, the calling number is used by default by ANSI ISUP as the charge number.)

@item After determining a proper E.164 number associated with the termination, the number is used to
perform an ENUM number portability lookup.  The resulting @samp{E2U+pstn:tel} record contains the
number portability dip indicator and the routing number (if applicable).

@item After routing the destination number (whether called number or local routing number), the gateway
performs an I-ENUM lookup on the destination number and obtains a @samp{E2U+pstn:tel} record
containng the terminating MTA and OCN in the @parm{phone-context} parameter.  This value is used to
establish the terminating class of service (MTA, OCN).

@item Having established the originating class of service and the terminating class of service,
a P-ENUM lookup is performed on a screening ENUM tree for the destination number.  The
@samp{E2U+pstn:tel} record in the response can contain a @parm{tsn} (Transit Network Selector)
parameter or a @parm{tgrp} and @parm{trunk-context} parameter.  These parameter are used to
establish the outgoing trunk group associated with the transit network.
@end enumerate

@item Finally, the @cite{Optranex 248} gateway switch formulates an ANSI ISUP @msg{IAM} and launches
it toward the selected transit network on the selected trunk group.  The rest of the call completes
as normal.

@end enumerate

@noindent
This arrangement provides for the option of placing a voice-peering proxy between the customer proxy
and the gateway.  This proxy can perform its own I-ENUM lookups for the voice peering exchange and
route SIP calls over the voice peering fabric, only passing calls to the gateway when the voice
peering fabric is not available.  Also, when multiple gateways are involved, the proxy can select
the appropriate gateway using any number of factors.  When this proxy performs a number portability
dip, it can include the @parm{npdi} and possibly @parm{rn} in the Request-URI so that the gateway
does not have to redip for NP.  Also, if a P-ENUM dip is also performed (for access restrictions and
verification on the originator, or for the termination), a @parm{P-Asserted-Identity} field and the
@parm{Request-URI} forwarded to the gateway can contain the associated parameters and the
@parm{enumdi} parameter indicating that another P-ENUM dip is not required.

As a fall-back for the NP ENUM dip, the gateway can launch an SS7 LNP dip or perform the @msg{302
Moved Temporarily} proceedure with the @i{C-SCP} when necessary.

@subsubsection ENUM Tables (DNS Zones)

The following ENUM trees are required by the @cite{Optranex 248} gateway to implement the call flow
as described above:

@itemize @bullet
@item P-ENUM base tree providing @samp{E2U+SIP} entries for calls terminating to customer SIP networks
from the PSTN (used also in the reverse direction for verification and authorization), and
@samp{E2U+pstn:tel} entries for establishing the @parm{phone-context}, @parm{rn}, @parm{oli},
@parm{cpc} and @prim{P-Charge-Info} header substitutions for call origination through the gateway.

@item NP ENUM tree providing @samp{E2U+pstn:tel} entries for number portability with @parm{npdi} and
@parm{rn} parameters as required.

@item P-ENUM tree partitioned by originating class of service (MTA) providing @samp{E2U+pstn:tel}
entries providing @parm{phone-context}, @parm{tns}, @parm{trgrp} and @parm{trunk-context} parameters
for routing.
@end itemize

@subsubheading P-ENUM Tree

@sp 1
@example
@verbatim
*.e164.heramax.com (base ENUM tree)
*.[mta2].[mta1].e164.heramax.com (screening ENUM tree)
@end verbatim
@end example

@subsubheading NP ENUM Tree

@sp 1
@example
@verbatim
*.e164.arpa (user ENUM tree)
@end verbatim
@end example

@node Software Architecture
@chapter Software Architecture
@cindex Software architecture
@menu
* General Software Architecture::
* SIP to ISUP Interworking::
* Carrier Proxy::
@end menu

The software architecture of the @cite{Optranex 248} switch contains select components of the
@cite{OpenSS7} @acronym{STREAMS} and Signaling Protocol Stacks.  Also included are the @cite{Optranex
Incorporated} firmware and software drivers for the @cite{Optranex 248}.

@node General Software Architecture
@section General Software Architecture

The software architecture of the @cite{Optranex 248} switch uses primarily the protocol and media
processing componets of the @cite{OpenSS7 Project}.  Additional components include the
@cite{sofia-SIP} SIP stack and the @cite{OpenNMS net-snmp} SNMP agent framework.  The software
architecture is decomposed into the following major components:

@enumerate
@item The @dfn{Signaling Stack} provides the ISUP/SIGTRAN signaling functions for use by the
@cite{Optranex 248} switch (@pxref{Signaling Stack}).
@item The @dfn{Media Stack} provides the SONET/SDH and RTP media handling functions as well as the
integrated media gateway functions of the @cite{Optranex 248} switch (@pxref{Media Stack}).
@item The @dfn{Application Subsystem} provides the @cite{sofia-SIP} SIP stack and SIP-ISUP
interworking functionality (@pxref{Application Subsystem}).
@item The @dfn{Management Subsystem} provides the active @cite{net-snmp} SNMP agents required to
configure, measure, monitor, alarm and manage the signaling and media stacks in the @cite{Optranex
248} (@pxref{Management Subsystem}).
@end enumerate

@menu
* Signaling Stack::
* Media Stack::
* Application Subsystem::
* Management Subsystem::
@end menu

@page
@node Signaling Stack
@subsection Signaling Stack

An overview of the signaling stack is illustrated in @figref{12}.

@figuresized{pgw12,12,Signaling Stack,3.5in}

@noindent
The signaling stack consists of the following primary subsystems:

@enumerate
@item An ISUP driver (@pxref{ISUP Driver}).
@item The SIGTRAN stack providing SS7 connectivity for the ISUP driver (@pxref{SIGTRAN Stack}).
@end enumerate

@menu
* ISUP Driver::
* SIGTRAN Stack::
@end menu

@node ISUP Driver 
@subsubsection ISUP Driver 

As illustrated in @figref{12},
the @dfn{ISUP Driver} consists of a monolithic pseudo-device multiplexing driver, @file{/dev/isup},
that implements the @dfn{ISDN User Part} of the SS7 stack in accordance with ITU-T Recommendation
Q.764 and ANSI T1.113/2000 as well as several other variants.  The driver is responsible for
performing ISUP signaling for the @cite{Optranex 248} switch.  The upper service interface is the
@dfn{Call Control Interface} (CCI) developed by @cite{OpenSS7} and documented in the CCI
specification.  The lower service interface is the @dfn{Message Transfer Part Interface} (MTPI)
which is capable of connecting both to @cite{OpenSS7}'s traditional SS7 stack implementation of MTP
as well as @cite{OpenSS7}'s SIGTRAN M3UA stack, in a transparent fashion.

The @dfn{ISUP Driver} provides management streams for use by the active SNMP agent that is
responsible for configuring, measuring, monitoring and maintaining ISUP signaling.

@node SIGTRAN Stack
@subsubsection SIGTRAN Stack

As illustrated in @figref{12},
the @dfn{SIGTRAN Stack} consists of a sequence of pseudo-device and multiplexing drivers that
provide all of the SIGTRAN connectivity for the signaling stack.

@table @dfn

@item M3UA Driver
The @dfn{M3UA Driver} is the @cite{OpenSS7} @acronym{STREAMS} implementation of the AS-side of the
@acronym{M3UA} protocol as specified in RFC 4666.  Two AS are implemented, one for communications
with an SG in the SS7 network; another for A-side/B-side communications between ISUP drivers on the
duplicated platforms.  The driver provides a @dfn{Message Transfer Part Interface} (MTPI) at its
upper service interface which is @cite{OpenSS7}'s implementation of the Q.704/ANSI T1.111.4 service
primitive interface.  The driver provides a @dfn{Network Provider Interface} (NTPI) at its lower
service interface for communications with the underlying @dfn{SCTP Driver}.

The driver provides management streams for use by the active SIGTRAN SNMP agent that is responsible
for configuration, measurements, monitoring, auditing and controlling M3UA using the @cite{OpenSS7}
enterprise MIB for M3UA.

@item SCTP Driver
The @dfn{SCTP Driver} is the @cite{OpenSS7} @acronym{STREAMS} implementation of @acronym{SCTP}.
This is a high-performance concurrent multipath transfer driver that implements RFC 4960.
The driver provides either a @dfn{Network Provider Interface} (NPI) or @dfn{Transport Provider
Interface} (TPI) at its upper service interface.

Configuration and management of the driver is peformed by the active M3UA SNMP agent.

@end table

@page
@node Media Stack
@subsection Media Stack

An overview of the media stack is illustrated in @figref{11}.

@figuresized{pgw11,11,Media Stack,5.75in}

@noindent
The media stack consists of the following primary subsystems:

@enumerate
@item A @dfn{Media Gateway Driver} that is responsible for the overall media gateway functions
(@pxref{Media Gateway Driver}).
@item A @dfn{TDM Stack} consisting of a sequence of components that provide for the TDM portions of
the media gateway functions (@pxref{TDM Stack}).
@item A @dfn{Ephemeral Stack} consisting of a sequence of components that provide for the Ephemeral
portions of the media gateway functions (@pxref{Ephemeral Stack}).
@end enumerate

@noindent
These primary subsystems are described in the sections that follow.  All subsystems, with the
exception of the @cite{Optranex 248 SONET/SDH Driver} are licensed under the @ref{GNU Affero General
Public License} and the @ref{GNU General Public License}.  The @cite{Optranex 248 SONET/SDH Driver}
is distributed under a proprietary license and is protected by pending patents.

@menu
* Media Gateway Driver::
* TDM Stack::
* Ephemeral Stack::
@end menu

@node Media Gateway Driver
@subsubsection Media Gateway Driver

As illustrated in @figref{11},
the @dfn{Media Gateway Driver}, @file{/dev/mg}, is responsible for performing all MG functions and
marshalling media samples between the @dfn{TDM Stack} and the @dfn{Ephemeral Stack}.  Control of the
media gateway is performed using the @dfn{Media Gateway Interface} (MGI).@footnote{The @dfn{Media
Gateway Interface} is documented in the @cite{OpenSS7} MGI Specification.}  The MGI performs a full
set of MG functions using a @acronym{STREAMS} based service primitive interface.  The MG functions
provided are equivalent to those provided by @cite{ITU-T Recommendation H.248}.  In particular, the
MGI is capable of the following:
@itemize ---
@item forming media connections between TDM and ephemeral media streams
@item playing tones and announcements
@item generating DTMF digits
@item applying loopbacks for continuity testing
@item continuity tone
@item milliwatt
@item silent termination
@item balanced termination
@item ringback patterns
@item busy patterns (T60)
@item reorder patterns (T120)
@item receiver off hook patterns (ROH)
@item bong tone
@end itemize
@noindent
The @dfn{Media Gateway Driver} provides for control of the MG functions using the MGI.  The driver
also provides management streams for use by a user-space active SNMP agent that is capable of
measuring, monitoring, auditing and maintaining the media gateway functions using @cite{OpenSS7}
enterprise MIBs.

@node TDM Stack
@subsubsection TDM Stack

As illustrated in @figref{11},
the @dfn{TDM Stack} consists of a sequence of device and pseudo-device multiplexing drivers that
provide all of the TDM connectivity for the media gateway.
@table @dfn
@item Software Switching Matrix Multiplexing Driver
The @dfn{Software Switching Matrix Multiplexing Driver}, @file{/dev/matrix}, is responsible for
performing channel switching between the TDM interface components and the @dfn{Media Gateway
Driver}.  The major purpose of this module is software TDM switching.  Not all channels associated
with the TDM interfaces are necessarily under the control of the media stack: some channels may be
switched to other modules and drivers by the matrix driver.  For example, if some channels are used
for traditional SS7 connectivity, they would be mapped to a different stream on the upper service
interface that would connect into the bottom of the @cite{OpenSS7} traditional SS7 stack.
@item SONET/SDH Multiplex Driver
The @dfn{SONET/SDH Multiplex Driver}, @file{/dev/smux}, is responsible for extracting TDM spans from
one or more SONET/SDH synchronous payload envelopes.  This is performed by extracting spans from
VT1.5 or VT2 virtual tributaries within the SPE, or by extracting an demultiplexing DS3 or E2
payloads into their constituent T1 or E1 spans (i.e. 3:1 multiplexing).  It is also responsible for
monitoring segment, path and span carrier conditions.  The upper service interface is a
@dfn{Multiplex Interface} (MXI) referenced to G.704.  The lower service interface is also a
@dfn{Multiplex Interface} (MXI); however, the lower service interface is referenced to SONET/SDH
(i.e. synchronous payload envelopes instead of T1 or E1 frames).

This driver also provides for management streams that are used to measure, monitor, audit and
maintain the SONET/SDH segment and path, as well the constituent DS3, E2, T1 and E1 facilities.  A
user-space active SNMP agent is responsible for configuration and management using this stream.
@item SONET/SDH Driver
The @dfn{SONET/SDH Driver}, @file{/dev/on248}, is the device driver for the @cite{Optranex 248}
SONET/SDH interface card.  This driver is primarily responsible for marshalling SONET/SDH
synchronous payload envelopes to and from the optics.  Note that not all SPE are necessarily mapped
into the @file{/dev/smux} driver: some SPE (possibly concatenated STS or VC) may be mapped to other
upper service interfaces that are used for PPP over SONET or GFP for passing IP or Ethernet to or
from the synchronous network.

This driver also provides for management streams that are used to measure, monitor, audit and
maintain the SONET/SDH segment and path, as well as the performance of hardware devices (such as
measurements and management of the optical interface modules, lasers and automatic protection
switching).
@end table

@node Ephemeral Stack
@subsubsection Ephemeral Stack

As illustrated in @figref{11},
the @dfn{Ephemeral Stack} consists of a sequence of pseudo-device drivers and multiplexing drivers
that provide all of the ephemeral (RTP) connectivity for the media gateway.

@table @dfn
@item RTP Driver
The @dfn{RTP Driver} is responsible for marshalling media samples to and from the @file{/dev/mg}
driver using the @dfn{Channel Interface} (CHI) provided on the upper service interface.  These
samples are inserted into or extracted from RTP packets in accordance with the codecs specified to
it by the @file{/dev/mg} driver.  This driver also performs all necessary jitter buffering and
monitors for loss of RTP connectivity.

The driver also provides for management streams that are used to measure, monitor, audit and
maintain the RTP connections.
@item UDP Driver
The @dfn{UDP Driver} is responsible for passing RTP packets to and from the network.  This component
uses the @cite{OpenSS7} high performance UDP driver that interfaces directly with the @cite{Linux}
IP subsystem.
@end table

@node Application Subsystem
@subsection Application Subsystem

The relationship between the application and the signaling and media stacks is illustrated in
@figref{14}.

@figuresized{pgw14,14,Application Subsystem,5.75in}

@noindent
The @dfn{Application Subsystem} consists primarily of a @cite{Linux} application process that
utilizes the @cite{sofia-SIP} framework for performing SIP signaling; the CCI interface provided by
the @cite{OpenSS7} @dfn{Signaling Stack} for performing ISUP signaling; and the MGI interface
provided by the @cite{OpenSS7} @dfn{Media Stack} for media gateway control.

The interworking between SIP and ISUP that is performed by the application subsystem consisting of
the CCI interface to the ISUP stack, MGI interface to the media gateway functions, and interface for
SIP signaling is detailed in @ref{SIP to ISUP Interworking}.

Separate application programs and processes will be provided for circuit maintenance and test calls
for ISUP.  These applications will open streams on the ISUP driver that are dedicated to use for
test and maintenance.

The test call program will permit test calls from the PSTN to terminate on the @cite{Optranex 248}.
The test call program receives all CCI interface connection indications (corresponding to @msg{IAM}
messages) that initiate test calls.  The called party number will be examined to determine the test
line function that is being invoked and utilize the MGI interface to peform the necessary actions to
implement the test call.

The circuit maintenance program will peform continutity test functions that are a normal part of
regular calls, as well as continuity test functions that are invoked by remote maintenance.  The CCI
interface is used for delivery of maintenance primitives and the MGI interface is used by the
program to effect continuity test functions.

@node Management Subsystem
@subsection Management Subsystem

The relationship between management and the signaling and media stacks is illustrated in
@figref{15}.

@figuresized{pgw15,15,Management Subsystem,5.0in}

@noindent
The @dfn{Management Subsystem} consists of a number of active SNMP agents implemented using the
@cite{net-snmp} framework.  The agents utilize management streams from the @cite{OpenSS7}
@dfn{Signaling Stack} and @dfn{Media Stack} to perform their functions.  The SNMP agents use the
self-documenting @cite{OpenSS7} enterprise MIBs.

In addition, the @acronym{STREAMS} framework provides management streams and an active SNMP agent
that provides for the management of the @acronym{STREAMS} framework itself using the @cite{OpenSS7}
enterprise @acronym{STREAMS} MIB.

For more information on the management architecture, @pxref{Management Architecture}.

@page
@node SIP to ISUP Interworking
@section SIP to ISUP Interworking

This section specifies the interworking of SIP to ISUP signaling.  This interworking is internal to
the @cite{Optranex 248}.  The overall SIP to ISUP interworking is illustrated in @figref{14}.

The @cite{OpenSS7} ISUP stack and @cite{Call Control Interface (CCI)} are used for interworking ISUP
calls with SIP.  The @cite{Optranex 248} uses the @cite{sofia-SIP} stack, developed by @cite{Nokia},
for processing of SIP signaling.  The @var{nta} module is used for interworking concurrent SIP
calls with ISUP calls.  A purpose-developed interworking function exits at the control nexus between
the @cite{sofia-SIP} and @cite{OpenSS7 ISUP} stacks.

@menu
* Interworking Calls from SIP to PSTN::
* Interworking Calls from PSTN to SIP::
* Interworking of Established Calls::
* Interworking of Call Release::
* SDP Handling::
@end menu

@subsubheading OpenSS7 ISUP Stack

The @cite{OpenSS7 ISUP} stack is illustrated in @figref{11} and interactions between the
interworking function and the @cite{OpenSS7 ISUP} stack are illustrated in @figref{14}.
The @cite{OpenSS7 ISUP} stack is a @acronym{STREAMS} application and API developed by the @cite{OpenSS7
Project} and released under the @ref{GNU Affero General Public License}.

The @cite{OpenSS7} ISUP stack is a @acronym{STREAMS} application and API that consists primarily of a
call control API user that passes primitives to the ISUP stack using formatted @samp{C} language
structures which are written to a @acronym{STREAMS} file descriptor using @manref{putmsg(2s)}.
Primitives are read from the ISUP stack by reading primitives formatted as @samp{C} language
structures which are read from a @acronym{STREAMS} file descriptor using @manref{getmsg(2s)}.  The first
field of each primitive contains a primitive type which corresponds to a defined primitive for the
interface.  The remaining members of the @samp{C} language structure are specific to the primitive
indicated in the first field.  In this way, the interface and API consists of a fully asynchronous
message passing mechanism, where the sequence of primitives issued to and received from the
interface are constrained only by the interface definition.  The interface definition used by the
@cite{OpenSS7} ISDN, H.323, ISUP and BICC stack components is the
@uref{http://www.openss7.org/specs/cci.pdf,Call Control Interface}.

@subsubheading Nokia sofia-SIP Libraries

The @cite{sofia-SIP} libraries are illustrated in @figref{14}.
The @cite{sofia-SIP} libraries are a set of @samp{C} language libraries developed by @cite{Nokia}
and released under the @ref{GNU Lesser General Public License Version 2.1}.@footnote{Note that the
sofia-SIP libraries are released by @cite{OpenSS7} under the @ref{GNU General Public License} in
accordance with @cite{Section 3} of the @ref{GNU Lesser General Public License Version 2.1}.}

The @cite{Nokia sofia-SIP} stack provides a module (subsystem) which is called the @dfn{Nokia
Transaction Agent} or @dfn{nta} for short.  The @dfn{nta} is a transaction engine, event loop and
callback dispatch mechanism for building SIP applications.  The libraries provide SIP and SDP
message parsing and encoding, TCP and UDP socket event loops, the ability to hook additional file
descriptors into the event loop, basic timers and SIP transaction state machine components.

@subsubheading SIP-ISUP Interworking Function

The SIP to ISUP interworking function is illustrated in @figref{14}.
The SIP to ISUP interworking function is written within the scope of a @cite{sofia-SIP} @dfn{nta}
application.  The interworking function uses the event loop and dispatch mechanisms of the @dfn{su}
module of the @cite{sofia-SIP} libraries.  As with any other event loop based library, some
mechanism is provided to permit the callback of a function one typical @manref{select(2)} or
@manref{poll(2s)} events.@footnote{@cite{net-snmp} only provides @manpage{select(2)}.}
Because the @cite{OpenSS7} ISUP stack is based on a @acronym{STREAMS} interface whose file descriptors
support the entire range of functionality of @manref{poll(2s)}, including that of @acronym{STREAMS}, it
is very easy to simply install the ISUP file descriptor with a @type{pollfd} structure using the
@command{su_root_register()} function in @cite{sofia-SIP}.

The interworking function will open three streams (file descriptors resulting from a
@manref{open(2s)} call on device @file{/dev/streams/isup}) for processing call control.  One stream
will be bound (with the @prim{CC_BIND_REQ} primitive after opening) as a listening streams with the
@parm{cc_setup_ind} field of the @prim{CC_BIND_REQ} set to a positive non-zero integer.  A second
stream will be bound with the @parm{cc_setup_ind} field of the @prim{CC_BIND_REQ} set to zero.  A
third stream will be bound with the @parm{cc_setup_ind} field of the @prim{CC_BIND_REQ} set to
zero.  All three streams will be bound to an ISUP address with signaling point scope,
@pval{ISUP_SCOPE_SP} using the signaling point code of the @cite{Optranex 248} switch.  All
incoming call indications will then be received on the first stream.  All outgoing call requests
will be sent on the second stream.  All incoming call indication received on the first stream will
be accepted on the third stream.  The resulting three file descriptors will each be installed into
the @cite{sofia-SIP} event loop using the @command{su_root_register()} and
@command{su_root_eventmask()} functions.  Three separate callback functions will be associated with
each stream.

The SIP-ISUP interworking function should have two major modes of operation: on conforming to
@cite{RFC 3398} and another conforming to @cite{ITU-T Recommendation Q.1912.5}.  These operation
modes differ primarily in the cause values and response codes returned under various circumstances.
For the Dallas and Seattle trials, @cite{RFC 3398} is preferred initially.

@node Interworking Calls from SIP to PSTN
@subsection Interworking Calls from SIP to PSTN

All calls from SIP to PSTN are initiated upon the receipt of an @msg{INVITE} message at the
@cite{sofia-SIP} stack.  The interworking function establishes an @dfn{nta} call leg to establish a
transaction.  CCI primitives sent to and received from the ISUP stack will be issued and received on the
second ISUP stream described above.  CCI primitives issued to the ISUP stack will be issued from the
@dfn{nta} message callbacks.  CCI primitives will be received on the installed callback for the
second ISUP stream.

@menu
* Mapping SIP INVITE to ISUP IAM::
* Successful Setup of Calls from SIP to PSTN::
* Unsuccessful Setup of Calls from SIP to PSTN::
@end menu

@node Mapping SIP INVITE to ISUP IAM
@subsubsection Mapping SIP INVITE to ISUP IAM

Upon receiving a @msg{INVITE} message at the @cite{sofia-SIP} stack beginning a transaction, the
interworking function establishes a @var{nta} call leg and transaction, and prepares a
@prim{CC_SETUP_REQ} primitive.  The interworking function assigns a @pval{cc_user_ref} to identify
the call with the ISUP stack.  The @pval{cc_call_type} will either be @pval{CC_CALL_TYPE_SPEECH} or
@pval{CC_CALL_TYPE_3_1kHZ_AUDIO}.  The @pval{cc_call_flags} will contain a logical OR of the
following flags:

@table @pval
@item ISUP_NCI_ONE_SATELLITE_CCT
@item ISUP_NCI_TWO_SATELLITE_CCT
The @pval{ISUP_NCI_ON_SATELLITE_CCT} flag is set in accordance with Q.1912.5 indicating that there
is one satellite in the circuit.
@item ISUP_NCI_CONT_CHECK_REQUIRED
This flag is set or not set depending upon the continuity check requirements of the interconnect.
Typically, continuity checks (@pval{ISUP_NCI_CONT_CHECK_REQUIRED}) are performed on one in @samp{N}
calls, where @samp{N} is typically @samp{10}.

Because the Dallas trial will not initially perform continuity checks on outgoing circuits
(continuity checks will be performed, instead, as part of maintenance turn-up of each circuit), this
flag will not initially be set.  Later, a mechanism will be required for determining on which
outgoing calls to set this flag.  The determination may be based on an outgoing trunk group basis.
@item ISUP_NCI_CONT_CHECK_PREVIOUS
As the previous circuit is not an ISUP circuit (the call is from the SIP network), this flag will
@emph{not} be set.
@item ISUP_NCI_OG_ECHO_CONTROL_DEVICE
Initially this flag will not be set.  When echo suppression is included in the implementation, this
flag will be set to indicate that an outgoing echo control device is included in the circuit.
@item ISUP_FCI_INTERNATIONAL_CALL
For the trial, all calls will be national and this flage will @emph{not} be set.
@item ISUP_FCI_PASS_ALONG_E2E_METHOD_AVAILABLE
@itemx ISUP_FCI_SCCP_E2E_METHOD_AVAILABLE
Neither of these flags will be set.
@item ISUP_FCI_INTERWORKING_ENCOUNTERED
This flag is set to indicate that interworking has been encountered on the call (the call is not SS7
end-to-end).  In US domestic networks this normally means that an MF or analog trunk or non-SS7
trunk is in the call path.
@item ISUP_FCI_E2E_INFORMATION_AVAILABLE
This flag will @emph{not} be set.
@item ISUP_FCI_ISDN_USER_PART_ALL_THE_WAY
This flag will @emph{not} be set.
@item ISUP_FCI_ORIGINATING_ACCESS_ISDN
This flag will @emph{not} be set.
@item ISUP_FCI_SCCP_CLNS_METHOD_AVAILABLE
@itemx ISUP_FCI_SCCP_CONS_METHOD_AVAILABLE
@itemx ISUP_FCI_SCCP_ALL_METHODS_AVAILABLE
None of these flags will be set.
@item ISUP_FCI_NUMBER_TRANSLATED
When the @prim{Request-URI} contains a @parm{npdi} parameter indicating that the called number has
been dippled, this flag will be set.
@item ISUP_FCI_QUERY_ON_RELEASE
This flag is @emph{not} set.
@item ISUP_CPC_SUBSCRIBER_ORDINARY
The default calling party's category.  When the @parm{cpc} parameter is present in the
@prim{P-Asserted-Identity} of the @msg{INVITE}, the value of the @parm{cpc} parameter@footnote{See
@cite{3GPP TS 29.163 V9.0.0 (2009-12) Annex H.1} and
@cite{draft-patel-dispatch-cpc-oli-parameter-02}.} will be used to generate the flags with the
mapping as follows:
@multitable @columnfractions .2 .05 .4 .05
@item @pval{unknown} @tab 0 @tab @pval{ISUP_CPC_UNKNOWN}
@item @pval{operator} @tab 1 @tab @pval{ISUP_CPC_OPERATOR_FRENCH} @tab @samp{fr}
@item @pval{operator} @tab 2 @tab @pval{ISUP_CPC_OPERATOR_ENGLISH} @tab @samp{en}
@item @pval{operator} @tab 3 @tab @pval{ISUP_CPC_OPERATOR_GERMAN} @tab @samp{de}
@item @pval{operator} @tab 4 @tab @pval{ISUP_CPC_OPERATOR_RUSSIAN} @tab @samp{ru}
@item @pval{operator} @tab 5 @tab @pval{ISUP_CPC_OPERATOR_SPANISH} @tab @samp{es}
@item @tab 6 @tab @pval{ISUP_CPC_OPERATOR_LANGUAGE_6}
@item @tab 7 @tab @pval{ISUP_CPC_OPERATOR_LANGUAGE_7}
@item @tab 8 @tab @pval{ISUP_CPC_OPERATOR_LANGUAGE_8}
@item @tab 9 @tab @pval{ISUP_CPC_OPERATOR_CODE_9}
@item @pval{ordinary} @tab 10 @tab @pval{ISUP_CPC_SUBSCRIBER_ORDINARY}
@item @tab 11 @tab @pval{ISUP_CPC_SUBSCRIBER_PRIORITY}
@item @tab 12 @tab @pval{ISUP_CPC_VOICE_BAND_DATA}
@item @pval{test} @tab 13 @tab @pval{ISUP_CPC_TEST_CALL}
@item @tab 14 @tab @pval{ISUP_CPC_SPARE}
@item @pval{payphone} @tab 15 @tab @pval{ISUP_CPC_PAYPHONE}
@item @pval{mobile-hplmn}
@item @pval{mobile_vplmn}
@end multitable
@end table
Note that the @prim{Language} header will be used to identify the language of the operator.

@subsubheading Called Party Number

The @parm{subscriber-number} portion of the @emph{tel} URL or @parm{user-info} portion of the
@emph{sip} URL, or the value of the @parm{rn} parameter when present, will be converted to a called
party number and included in the @pval{cc_cdpn_length} and @pval{cc_cdpn_offset} fields of the
@prim{CC_SETUP_REQ}.  The octets of the called party number must conform to the format described in
ANSI T1.113.3/3.6.  That is: one bit indicating whether the number of address signals is odd (1) or
even (0); 7 bits indicating that the number is a national (significant) number (0000011); 3 bits
providing the numbering plan indicator is E.164 (001); an even or odd number of nibble-wide address
signals; and, when the number of address signals is odd, a filler (0000).

@subsubheading Trunk Group

The @pval{cc_addr_length} and @pval{cc_addr_offset} will contain an @type{isup_addr} structure.  The
@parm{scope} field will be set to @pval{ISUP_SCOPE_TG} to indicate that a trunk group is selected;
the @parm{id} field will be set to the trunk group number; and the @parm{cic} field will be set to
zero (0) to indicate that a circuit is to be automatically selected wtihin the specified trunk
group.

@subsubheading Optional Parameters

The @pval{cc_opt_length} and @pval{cc_opt_offset} fields in the @prim{CC_SETUP_REQ} will contain
optional parameters encoded according to ISUP formats and codes.  This field contains a list of
optional paramters consisting of a one-octet parameter tag, a one-octet parameter length, and then a
sequence of octets indicated by the parameter length containing the value of the parameter.  The
list must be terminated with an end-of-optional-parameters parameter.

Optional parameters of a CCI primitive must be formatted precisely as they occur in the optional
parameters list of an ISUP message.  This optional parameter list consists of a sequence of
parameters terminated by an end-of-optional-parameters parameter.  Each parameter in the list
consists of a single octet specifying the parameter type, followed by another single octet
specifying the number of the octets contained in the parameter value, followed by the octet(s) of
the parameter value.  The end-of-optional-parameters parameter consists of one or two zero octets.
When optional parameters are not specified, the optional parameters can be of zero length and no
end-of-optional-parameters parameter need appear.

The following optional parameters are populated in the @prim{CC_SETUP_REQ} primitive based on the
information available in the @prim{Request-URI} and various headers of the received @msg{INVITE}.

@subsubheading Ported Number

If the @parm{rn} parameter exists in @prim{Request-URI} @pval{user-info} @strong{tel} URI portion,
the @parm{telephone-subscriber} part of the @strong{tel} URI will be used to populate a @var{Generic
Address Parameter} in the optional parameters.  The @var{Generic Address Parameter} has a tag value
of 192; one octet indicating "ported number" (11000000); one bit odd (1) or even (0) indicator;
seven bits indicating national (significant) number (0000011); 3 bits indicating E.164 numbering
(001); 2 bits indicating presentation restriction indicator (00); an even or odd number of
nibble-wide address signals; and, when the number of address signals is odd, a filler (0000).

@subsubheading Carrier Identification

If the @parm{cic} parameter exists in the @prim{Request-URI} @strong{tel} URI in accordance with
@cite{RFC 4694}, the value of this parameter will be use to populate a @var{Carrier Identification}
parameter in the optional parameters.  The @var{Carrier Identification} parameter has a tag value of
197; 3 bits indicating national network identification (010); 4 bits indicating either a 3-digit
(0001) or 4-digit (0010) carrier identification; and 3 or 4 nibble-wide address signals; and, when 3
address signals is provided, a filler (0000).

@subsubheading Carrier Selection

If the @parm{dai} parameter exists int he @prim{Request-URI} @strong{tel} URI in accordance with
@cite{draft-yu-tel-dai-08}, the value of this parameter will be used to populate a @var{Carrier
Selection} parameter in the optional parameters.  The @var{Carrier Selection} paramter has a tag
value of 238; and 8 bits indicating the carrier selection.  The mapping from values of the
@parm{dai} parameter int he @prim{Request-URI} to @var{Carrer Selection} parameter values is as
follows:

@multitable @columnfractions .2 .15 .65
@item @pval{no-ind} @tab 00000000 @tab no indication (default)
@item @pval{presub} @tab 00000001 @tab selected carrier identification presubscribed and not input by calling party
@item @pval{presub-da} @tab 00000010 @tab seelcted carrier identification presubscribed and input by calling party
@item @pval{presub-da-unkwn} @tab 00000011 @tab selected carrier identification presubscribed, input by calling party undetermined
@item @pval{da} @tab 00000100 @tab selected carrier identification not presubscribed and input by calling party
@item @pval{presub-unkwn-da} @tab 00000101 @tab selected carrier identification presubscription unknown, input by calling party
@end multitable

Other values of the @parm{dai} parameter described in @cite{draft-yu-tel-dai-08} are not permitted.

@subsubheading Dialed Number

If there is a recognized @parm{telephone-subscriber} portion in the @prim{To} header and it does not
correspond to the @var{Called Party Number} or @var{Ported Number}, a "dialed number" @var{Generic
Address Parameter} will be added to the optional parameters.  The @var{Generic Address Parameter}
has a tag value of 192; one octet indicating "dialed number" (00000000); one bit odd (1) or even (0)
indicator; seven bits indicating national (significant) number (0000011); 3 bits indicating E.164
numbering (001); 2 bits indicating presentation restriction indicator - presentation allowed (00);
an even or odd number of nibble-wide address signals; and, when the number of address signals is
odd, a filler (0000).

@subsubheading Original Called Name

If there is a @parm{display-name} portion in the @prim{To} header and the ISUP CNAM method is marked
on the trunk group, an "original called name" @var{Generic Name} parameter that is
presentation-allowed will be added to the optional-parameters.  The @var{Generic Name} parameter has
a tag value of 199; two bits indicating presentation restriction set to presentation-allowed (00);
one bit indicating availability as available (0); three bits indicating "original called name"
(010); and up to 15 IA5 encoded characters.

Note that this parameter is not normally used in US networks, but is in Canadian and other networks.

@subsubheading Calling Party's Category

If a @parm{cpc} parameter exists in the @prim{P-Asserted-Identity} header, the value of the calling
party parameter in the @pval{cc_call_flags} will be set as indicated previously.

@subsubheading Originating Line Information

If a @parm{oli} parameter exists in the @prim{P-Charge-Info} or @prim{P-Asserted-Identity} header, an
@var{Originating Line Information} parameter will be added to the optional parameters.  The
@var{Originating Line Information} parameter has a tag value of 234, and contains 8 bits having the
value of the @parm{oli} parameter.  Only values in the range from 0x00 to 0x63 are valid (see
@cite{ANSI T1.113.3/Annex C}).

@subsubheading Jurisdiction Information

If a @parm{rn} parameter exists in the @prim{P-Charge-Info} or @prim{P-Asserted-Identity} header, a
@var{Jurisdiction Information Parameter} will be added to the optional parameters of the
@msg{CC_SETUP_REQ}.  The @var{Jurisdiction Information Parameter} has a tag value of 196 and
contains 6 nibble-wide address signals.

@subsubheading Charge Number

If a valid @parm{telephone-subscriber} number is present in the @prim{P-Charge-Info} header, and it
is different from the @var{Calling Party Number} when the @parm{noa} parameter is 1, 2, 3 or absent,
or, it is different from the @var{Called Party Number} hwen the @parm{noa} parameter is 5, 6, or 7,
it will be used in the @var{Charge Number} parameter in the optional-parameters of the
@msg{CC_SETUP_REQ}.  When an @parm{npi} or @parm{noa} parameter is also present in the
@prim{P-Charge-Info} header, the numbering plan indicator and nature of address in the @var{Charge
Number} will be populated accordingly.  This behaviour is consistent with that described in
@cite{draft-york-sipping-p-charge-info-07}.  The @var{Charge Number} parameter has a tag value of
235 and contains an odd (1) or even (0) indicator bit; seven bits indicating the nature of address;
1 spare bit; 3 bits indicating the numbering plan as E.164 (001); 4 spare bits;  an even or odd
number of nibble-wide address signals; and, when the number of address signals is odd, a filler
(0000).  Only the following nature of address values will be accepted:
@multitable @columnfractions .05 .8
@item 1 @tab ANI of the calling party, subscriber number
@item 2 @tab ANI not available or not provided
@item 3 @tab ANI of the calling party, national number
@item 5 @tab ANI of the called party, subscriber number
@item 6 @tab ANI of the called party, no number present
@item 7 @tab ANI of the called party, national number
@end multitable

@subsubheading Calling Party Number

If a valid @parm{telephone-subscriber} number is present in the @prim{P-Asserted-Identity} header,
it will be used in the @var{Calling Party Number} parameter in the optional-parameters of the
@msg{CC_SETUP_REQ}.  If a @prim{Privacy} header exists and is set to @samp{id} (or wider scope), the
@var{Calling Party Number} will be marked presentation-restricted; otherwise, it will be marked
presentation-allowed.  The @var{Calling Party Number} parameter has a tag value of xxxx and contains
a one bit odd (1) or even (0) indicator; seven bits of nature of address indicator coded national
(significant) number (0000011); 3 bit numbering plan indicating E.164 (001); two bit address
presentation restriction indicator indicating presentation-allowed (00) or presentation-restricted
(01); a two bit screening indicator indicating network-provided (11); an even or odd number of
nibble-wide address signals; and, when the number of address signals is odd, a filler (0000).

@subsubheading Calling Name

If a @parm{display-name} exists in the @prim{P-Asserted-Identity} header and the trunk is configured
for ISUP CNAM method, the @parm{display-name} will be placed in a calling name @var{Generic Name}
parameter in the optional-parameters of the @prim{CC_SETUP_CREQ}.  If a @prim{Privacy} header exists
and is set to @samp{user} (or wider scope), the @var{Generic Name} will be marked
presentation-restricted; otherwise, it will be marked presentation-allowed.  The @var{Generic Name}
parameter has a tag value of 199; two bits indicating presentation restriction set to
presentation-allowed (00) or presentation-restricted (01); one bit indicating availability as
available (0); three bits indicating "calling name" (001); and up to 15 IA5 encoded characters.

If there is a @parm{display-name} portion in the @prim{From} header, and the outgoing trunk is
marked for ISUP CNAM, a "calling name" @var{Generic Name} parmaeter will be placed in the
optional-parameters of the @prim{CC_SETUP_REQ} and marked presentation-allowed (if one is not
already present).  The @var{Generic Name} parameter has a tag value of 199; two bits indicating
presentation restriction set to presentation-allowed (00); one bit indicating availability as
available (0); three bits indicating "calling name" (001); and up to 15 IA5 encoded characters.

Note that this parameter is not normally used in US networks, but is in Canadian and other networks.

@subsubheading Additional User Provided Number

If there is a recognized @parm{telephone-subscriber} portion in the @prim{From} header, and it is
different from that of the @prim{P-Asserted-Identity} header, an "additional user provided number -
not verified" @var{Generic Address Parameter} will be added to the optional-parameters of the
@prim{CC_SETUP_REQ} with presentation-allowed.  The @var{Generic Address Parameter} has a tag value
of 192; one octet indicating "additional user provided number - not verified" (00000011); one bit
odd (1) or even (0) indicator; seven bits indicating national (significant) number (0000011); 3 bits
indicating E.164 numbering (001); 2 bits indicating presentation restriction indicator -
presentation allowed (00); an even or odd number of nibble-wide address signals; and, when the
number of address signals is odd, a filler (0000).

@subsubheading End of Optional Parameters

When optional parameters are present in the @prim{CC_SETUP_REQ}, the end of optional parameters
parameter (with tag value zero (0)) will be appended to the optional-parameters.

@subsubheading Response

After issuing the @prim{CC_SETUP_REQ} primitive on the ISUP stream, the interworking function must
await a @prim{CC_OK_ACK} or @prim{CC_ERROR_ACK} primitive before issuing any other primitives on the
stream.  When a @prim{CC_OK_ACK} primitive is received, the callback function can return.  When a
@prim{CC_ERROR_ACK} primitive is received, the interworking function should take the following
actions based on the @parm{cc_error_type} field in the primitive:

@table @pval
@item CCSYSERR
A system error occured.  The @parm{cc_unix_error} field will contain either @errno{EFAULT} or
@errno{EMSGSIZE}, indicating that the primitive was poorly formatted (too short or an offset or
length field of the primited referred to a memory extent outside the range of the primitive).
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCOUTSTATE
The CCI stream upon which the primitive was issued was not in a correct state to accept the
primitimve (e.g. the stream is not bound).
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCNOADDR
No appropriate address was provided in the @parm{cc_addr_offset} and @parm{cc_addr_length}
fields.
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCBADADDR
The address provided in the @parm{cc_addr_offset} and @parm{cc_addr_length} fields was
incorrectly formatted or contained illegal information.
Barring a bug, this error will normally be returned when the trunk group number specified in the
address is incorrect.
The interworking function should log the error and respond with a @msg{502 Bad Gateway}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCBADDIGS
The digits provided in the @parm{cc_cdpn_offset} and @parm{cc_cdpn_length} field was poorly
formatted or contained illegal values.
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCBADOPT
The optional parameters provided in the @parm{cc_opt_offset} and @parm{cc_opt_length} fields was
poorly formatted or contained illegal values.
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@item CCBADCLR
The user reference contained in the @parm{cc_user_ref} field is already engaged in a call.
The interworking function should log the error and respond with a @msg{500 Server Internal Error}
response to the @msg{INVITE} and ultimately remove the session and transaction information.
@end table

@node Successful Setup of Calls from SIP to PSTN
@subsubsection Successful Setup of Calls from SIP to PSTN

Successful setup of calls from SIP to PSTN will always begin with the receipt (by the callback
function associated with the second ISUP stream) of a @prim{CC_SETUP_CON} primitive.

@subsubheading Processing of CC_SETUP_CON

When the interworking function receives a @prim{CC_SETUP_CON} primitive, it will use the
@parm{cc_user_ref} field of the primitive to locate the call context (session).  The interworking
function will assign the ISUP provider chosen @parm{cc_call_ref} field from the primitive and make
the call context (session) accessible for lookup using this call reference.  The ISUP callback
function can then return.

@subsubheading Processing of CC_PROCEEDING_IND

When the interworking function receives a @prim{CC_PROCEEDING_IND} primitive, it will use the
@parm{cc_call_ref} field of the primitive to locate the call context (session).  The
@prim{CC_PROCEEDING_IND} primitive received by the interworking function will be mapped into a
@msg{183 Session Progress} response message for the transaction corresponding to the received
@msg{INVITE}.  The @prim{CC_PROCEEDING_IND} message results from the receipt of the first backward
message, an @msg{ACM} from ISUP, without an indication in the @msg{ACM} that the subscriber is free.

The @parm{cc_flags} field of the @prim{CC_PROCEEDING_IND} primitives contains one or more of the
following flags:

@table @pval
@item ISUP_BCI_NO_CHARGE
@itemx ISUP_BCI_CHARGE
These flags are ignored.
@item ISUP_BCI_ORDINARY_SUBSCRIBER
@itemx ISUP_BCI_PAYPHONE
These flags are ignored.
@item ISUP_BCI_PASS_ALONG_E2E_METHOD_AVAILABLE
@itemx ISUP_BCI_SCCP_E2E_METHOD_AVAILABLE
These flags are ignored.
@item ISUP_BCI_INTERWORKING_ENCOUNTERED
This flag indicates that interworking was encounted between the @cite{Optranex 248} switch and the
destination switch.  That is, some leg of the call between the @cite{Optranex 248} and the
destination switch does not use SS7 signaling.  The SIP-ISUP interworking function must cut the
call through in both directions to the calling party.
@item ISUP_BCI_E2E_INFORMATION_AVAILABLE
This flag is ignored and should not normally be set.
@item ISUP_BCI_ISDN_USER_PART_ALL_THE_WAY
@item ISUP_BCI_HOLDING_REQUESTED
This flag is ignored and should not normally be set in US networks.
@item ISUP_BCI_TERMINATING_ACCESS_ISDN
This flag is ignored.
@item ISUP_BCI_IC_ECHO_CONTROL_DEVICE
@item ISUP_BCI_SCCP_CLNS_METHOD_AVAILABLE
@itemx ISUP_BCI_SCCP_CONS_METHOD_AVAILABLE
@itemx ISUP_BCI_SCCP_ALL_METHODS_AVAILABLE
These flags are ignored.
@item ISUP_OBCI_INBAND_INFORMATION_AVAILABLE
@item ISUP_OBCI_CALL_DIVERSION_MAY_OCCUR
@item ISUP_OBCI_ADDITIONAL_INFO_IN_SEG
@item ISUP_OBCI_MLPP_USER
@end table

The ISUP callback function can then return.

@subsubheading Processing of CC_ALERTING_IND

When the interworking function receives a @prim{CC_ALERTING_IND} primitive, it will use the
@parm{cc_call_ref} field of the primitive to locate the call context (session).  The
@prim{CC_ALERTING_IND} primitive received by the interworking function will be mapped into a
@msg{180 Ringing} reponse message.  The @prim{CC_ALERTING_IND} message results from the receipt of
the first backward message, an @msg{ACM} from ISUP, with an indication in the @msg{ACM} that the
subscriber is free.

@subsubheading Processing of CC_PROGRESS_IND

When the interworking function receives a @prim{CC_PROGRESS_IND} primtive, it will use the
@parm{cc_call_ref} field of the primitive to locate the call context (session).
The @prim{CC_PROGRESS_IND} primitive received by the interworking function will be mapped into an
appropriate @msg{1xx} response message according to the @parm{cc_event} field of the primitive as
follows:
@table @pval
@item ISUP_EVNT_ALERTING
Indicates that the called party is being alerted.  This event is indicated only if a
@prim{CC_PROCEEDING_IND} primitive has already been received.  This event is mapped into a @msg{180
Ringing} response to the @msg{INVITE}
in accordance with @cite{RFC 3398/7.2.9}.
@item ISUP_EVNT_PROGRESS
Indicates that the call is progressing with the specified optional parameters.  This event is mapped
into a @msg{183 Session Progress} response to the @msg{INVITE}
in accordance with @cite{RFC 3398/7.2.9}.
@item ISUP_EVNT_IBI
This event is indicated only by the @prim{CC_IBI_IND} primitive and will not appear here.  If this
event appears it must be treated as a @prim{CC_IBI_IND} primitive (see below).
@item ISUP_EVNT_CALL_FORWARDED_ON_BUSY
This event indicates that the call has been forwarded on busy and the optional parameters (if any)
contain the attributes of the forwarding (e.g., redirecting number, etc.).
This event is mapped into a @msg{181 Call is being forwarded} response to the @msg{INVITE}
in accordance with @cite{RFC 3398/7.2.9}.
@item ISUP_EVNT_CALL_FORWARDED_ON_NO_ANSWER
This event indicates that the call has been forwarded on no answer and the optional parameters (if
any) contain the attributes of the forwarding (e.g., redirecting number, etc.).
This event is mapped into a @msg{181 Call is being forwarded} response to the @msg{INVITE}
in accordance with @cite{RFC 3398/7.2.9}.
@item ISUP_EVNT_CALL_FORWARDED_UNCONDITIONAL
This event indicates that the call has been forwarded undconditionally and the optional parameters (if
any) contain the attributes of the forwarding (e.g., redirecting number, etc.).
This event is mapped into a @msg{181 Call is being forwarded} response to the @msg{INVITE}
in accordance with @cite{RFC 3398/7.2.9}.
@end table
When the @parm{cc_flags} field contains the flag @pval{ISUP_EVNT_PRESENTATION_RESTRICTED}, for all
events other than @pval{ISUP_EVNT_ALERTING}, the event will not be mapped to SIP.

@subsubheading Processing of CC_IBI_IND

When the interworking function receives a @prim{CC_IBI_IND} primtive, it will use the
@parm{cc_call_ref} field of the primitive to locate the call context (session).
The @prim{CC_IBI_IND} primitive received by the interworking function will be mapped into a
@msg{183 Session Progress} response message and will connect early media in the direction from the
PSTN to the SIP UAC.  If the SIP UAC supports the @msg{UPDATE} method, early media is established
toward the SIP UAC using that method.

@subsubheading Processing of CC_CONNECT_IND

When the interworking function receives a @prim{CC_CONNECT_IND} primitive, it will use the
@parm{cc_call_ref} field of the primitive to locate the call context (session).  The
@prim{CC_CONNECT_IND} primitive received by the interworking function will be mapped into a @msg{200
OK} response message and will connect media in both directions.  If the SIP UAC supports the
@msg{UPDATE} method and early media was established toward the UAC using that method, cutting
through media in both directions may required an additional @msg{UPDATE} message.

@node Unsuccessful Setup of Calls from SIP to PSTN
@subsubsection Unsuccessful Setup of Calls from SIP to PSTN

@subsubheading Call Abandonment

After issuing a @prim{CC_SETUP_REQ} primitive for the call, and before receiving a
@prim{CC_CONNECT_IND} for the call, the interworking function may receive a @msg{CANCEL} message for
the session.  The @msg{CANCEL} message indicates that the caller has abandonned the call.  The
@msg{CANCEL} received at the @cite{sofia-SIP} callback is associated with client information that
identifies the call context (session).  After looking up the session, the interworking function
issues a @prim{CC_RELEASE_REQ} for the call.  The @parm{cc_user_ref} field is populated with the
user reference for the call when a @prim{CC_SETUP_CON} has not yet been received for the call;
otherwise, the @parm{cc_call_ref} field contains the call reference for the call returned in the
corresponding @prim{CC_SETUP_CON}.  The @parm{cc_cause} value should be set to
@pval{CC_CAUS_NORMAL_CALL_CLEARING}.

@subsubheading Automatic Repeat Attempt

After issuing a @prim{CC_SETUP_REQ} primitive for the call, and before receiving a
@prim{CC_SETUP_CON} for the call, the interworking function may receive a
@prim{CC_CALL_REATTEMPT_IND} primitive.  The @prim{CC_CALL_REATTEMPT_IND} primitive indicates that
a call repeat attempt should made by the interworking function and the reason for the reattempt.

The @prim{CC_CALL_REATTEMPT_IND} primitive contains the @parm{cc_user_ref} value that is the same
as the interworking function provided on the corresponding @prim{CC_SETUP_REQ} primitive that
initiated the call.  The interworking function looks up the call context (session) associated with
the corresponding @msg{INVITE} and @prim{CC_SETUP_REQ} using this @parm{cc_user_ref} value.

After receiving the @prim{CC_CALL_REATTEMPT_IND} primitive and lookup up the call context (session)
using the @parm{cc_user_ref} field in the primitive, the interworking function examines a field in
the call context to determine whether an automatic reattempt has already been performed.  If no
reattempt has been performed, the interworking function marks a reattempt@footnote{Additional
actions on reattempt can include logging the reattempt and the reason for reattempt, or issuing
an SNMP trap notification.} and issues another (can be identical) @prim{CC_SETUP_REQ} primitive to
the ISUP stack.@footnote{Cases in which the @msg{CC_SETUP_REQ} primitive for the reattempt might not
be the same can be where the @msg{CC_CALL_REATTEMPT_IND} is for a circuit in a two-way overflow
trunk group: in this case, the reattempt might be for the primary one-way non-overflow trunk group.}

If a reattempt has already been performed, the interworking function examines the @parm{cc_reason}
field of the primitive and provides a response on the @cite{sofia-SIP} transaction referenced from
the call context as follows:@footnote{In addition, the reattempt failure and reason can be logged or
an SNMP trap notification issued.}
@table @pval
@item ISUP_REATTEMPT_DUAL_SEIZURE
The @cite{Optranex 248} is not the controlling exchange for a two-way trunk group and a dual siezure was
detected on the two-way trunk group.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response
message
@c @footnote{A @msg{500 Server Internal Error} response is also appropriate in this context.}
to the @msg{INVITE}, resulting in the ultimate release of the transaction and the corresponding call
context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

The @cite{Optranex 248} will typically be set up (and will so for trial) with outgoing routes to the
PSTN that consist of a one-way outgoing trunk group overflowing to a two-way trunk group.  The
@parm{tgrp} parameter in the @strong{tel} URI of the @prim{Request-URI} field of the @msg{INVITE}
specifies a route (a set of overflow trunk groups) rather than a trunk group.  When initiating a
@msg{CC_SETUP_REQ} primitive, the interworking function should first specify the trunk group
associated with the primary (one-way outgoing) trunk.  This trunk group number will be an even
number.  If a @prim{CC_CALL_REATTEMPT_IND} primitive results with a @parm{cc_reason} of
@pval{CC_REATTEMPT_CIRCUIT_BUSY}, the interworking function may reattempt on the overflow (two-way)
trunk.  This trunk (if it exists) will have a trunk group number that is one greater than the trunk
group number of the one-way outgoing group and will therefore be an odd number.  Should a
@prim{CC_CALL_REATTEMPT_IND} result with a @parm{cc_reason} value of
@pval{ISUP_REATTEMPT_DUAL_SIEZURE}, the interworking function might reattempt on the one-way
outgoing trunk group.  Dual reattempts on the same trunk group should result in release of the call.

@item ISUP_REATTEMPT_RESET
The @cite{Optranex 248} attempted a call on a circuit which was subsequently reset (either locally
or remotely) before the receipt of any backward message for the call.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{500 Server
Internal Error}.}
to the @msg{INVITE},
resulting in the ultimate release of the transaction and the corresponding call context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

@item ISUP_REATTEMPT_BLOCKING
The @cite{Optranex 248} attempted a call on a circuit which was subsequently blocked (either locally
ore remotely) before any backward message was received.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{500 Server
Internal Error}.}
to the @msg{INVITE}, resulting in the ultimate release of the transaction and the corresponding call
context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

@item ISUP_REATTEMPT_T24_TIMEOUT
The @cite{Optranex 248} attempted a call for which continuity testing was required; however, tone
was not detected within time T24.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{500 Server
Internal Error}.}
to the @msg{INVITE},
resulting in the ultimate release of the transaction and the corresponding call context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

@item ISUP_REATTEMPT_UNEXPECTED
The @cite{Optranex 248} attempted a call for which an unexpected message was received before any
backward message.  After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{500 Server
Internal Error}.}
to the @msg{INVITE}, resulting in the ultimate release of the transaction and the corresponding call
context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

@item ISUP_REATTEMPT_COT_FAILURE
The @cite{Optranext 248} attempted a call which required continuity testing and the result of the
continuity test indicated failure.  After the first reattempt, the interworking function should
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{500 Server
Internal Error}.}
to the @msg{INVITE}, resulting in the ultimate release of the transaction and the corresponding call
context (session).
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} may be added to the
response.

@item ISUP_REATTEMPT_CIRCUIT_BUSY
This reason is only issued by the CCS provider when the scope was @pval{ISUP_SCOPE_CIC} or a
specific circuit was specified on the @prim{CC_SETUP_REQ}.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{480 Temporarily
Unavailable}.}
to the @msg{INVITE},
resulting in the ultimate release of the transaction and the corresponding call context (session).
A @prim{Reason} header with value @samp{Q.850;cause=34;text="no circuit/channel available"} may be
added to the response.
@end table
It is the responsibility of the interworking function to reissue the @msg{CC_SETUP_REQ}.  Upon the
second reattempt for the same call on the same trunk-group, the interworking function should abandon
the call and return an error response @msg{503 Service Unavailable} to the @msg{INVITE}.
A @prim{Reason} header with value @samp{Q.850;cause=41;text="temporary failure"} or
@samp{Q.850;cause=34;text="no circuit/channel available"} may be added to the response (depending on
the value of the @parm{cc_reason} field).

@subsubheading Premature Call Failure

If, after issuing a @prim{CC_SETUP_REQ} primitive for the call, and before receiving a
@prim{CC_SETUP_CON} for the call, the interworking function receives a @prim{CC_CALL_FAILURE_IND}
primitive, the interworking function will examine the @parm{cc_reason} field of the primitive and
responds as follows:
@table @pval
@item ISUP_CALL_FAILURE_CIRCUIT_BUSY
@itemx CC_CAUS_NO_CCT_AVAILABLE
This failure cause indicates that the selected trunk group is all-circuits-busy.  This applies to
outgoing calls only.
This reason is only issued by the CCS provider when the scope was @pval{ISUP_SCOPE_TG} and no
specific circuit was specified on the @prim{CC_SETUP_REQ}.
After the first reattempt, the interworking function should return a
@msg{503 Service Unavailable} response message@footnote{Note that @cite{RFC 3398} proscribes
@msg{503 Service Unavailable} in this case, whereas @cite{Q.1912.5} proscribes @msg{480 Temporarily
Unavailable}.}
to the @msg{INVITE},
resulting in the ultimate release of the transaction and the corresponding call context (session).
A @prim{Reason} header with value @samp{Q.850;cause=34;text="no circuit/channel available"} may be
added to the response.

@item ISUP_CALL_FAILURE_T7_TIMEOUT
@itemx CC_CAUS_ADDRESS_INCOMPLETE
This failure cause indicates that there was no response to the call setup request.  This applies to
outgoing calls only.
The interworking function should return a @msg{484 Address Incomplete} response message to the
@msg{INVITE}.  The @prim{Reason} header may include @samp{Q.850;cause=28;text="invalid number format
(address incomplete)"}.
@end table

@subsubheading Call Rejection

Whereas automatic repeat and premature call failure result from the local detection of call failure,
call rejection results from the release of the call by a transit switch or the controlling switch.
Call rejection occurs after issuing a @prim{CC_SETUP_REQ} primitive but before receiving a
@prim{CC_SETUP_CON} primitive.

When the interworking function receives a @prim{CC_RELEASE_IND} primitive, it uses the
@parm{cc_user_ref} field in the primitive to look up the call context (session).  The interworking
function examines the @parm{cc_cause} field value in the @prim{CC_RELEASE_IND} primitive, issues a
@prim{CC_RELEASE_RES} primitive (if a @prim{CC_RELEASE_REQ} primitive has not already been issued
for the call), awaits a @prim{CC_OK_ACK} primitive and responds on the SIP side as follows:

@tabfig{pgwt25,T-25,Q.850 Cause Value to SIP Response Mapping - Normal Class}

@tabfig{pgwt26,T-26,Q.850 Cause Value to SIP Response Mapping - Resource Unavailable Class}

Note that in @tabref{T-26}, for @pval{CC_CAUS_NO_CCT_AVAILABLE}, @cite{ITU-T Q.1912.5} specifies
that if call completion to busy subscriber is indicated in the backward call indicators, that the
response should be @msg{486 Busy Here} instead of @msg{480 Temporarily Unavailable}.

@tabfig{pgwt27,T-27,Q.850 Cause Value to SIP Response Mapping - Service or Option Not Available Class}

@tabfig{pgwt28,T-28,ANSI Cause Value to SIP Response Mapping - Normal Class}

@tabfig{pgwt29,T-29,ANSI Cause Value to SIP Response Mapping - Resource Unavailable Class}

@tabfig{pgwt30,T-30,ANSI Cause Value to SIP Response Mapping - Service or Option Not Available Class}

@subsubheading Call Failure

If after issuing a @prim{CC_SETUP_REQ} primitive and receiving a @prim{CC_SETUP_CON} primitive for
the call, the interworking function receives a @prim{CC_CALL_FAILURE_IND} primitive, the
interworking function will examine the @parm{cc_reason} or @parm{cc_cause} field of the
primitive and respond as follows:
@table @pval
@item ISUP_CALL_FAILURE_RESET
@itemx CC_CAUS_NORMAL_UNSPECIFIED
This failure cause indicates that a circuit reset was received for the call during call
setup or establishment.  This applies to outgoing calls only.
The interworking function should return a @msg{480 Temporarily Unavailable} response message to the
@msg{INVITE}.  The @prim{Reason} header may include @samp{Q.850;cause=31;text="normal unspecified"}.

@item ISUP_CALL_FAILURE_T3_TIMEOUT
@item ISUP_CALL_FAILURE_OVERLOAD
@itemx CC_CAUS_SWITCHING_EQUIP_CONGESTION
This failure cause indicates that the non-controlling exchange received an overload message or
automatic congestion control signal that is applied to this call.  This applies to outgoing calls
only.
The interworking function should return a @msg{500 Server Internal Error} of @msg{503 Service
Unavailable} response message to the @msg{INVITE}.  The @prim{Reason} header may include
@samp{Q.850;cause=42;text="switching equipment congestion"}.

@item ISUP_CALL_FAILURE_T9_TIMEOUT
@itemx CC_CAUS_NO_ANSWER
This failure cause indicates that the call failed while waiting for the distant end to answer.  This
applies to outgoing calls only.
@end table

@node Interworking Calls from PSTN to SIP
@subsection Interworking Calls from PSTN to SIP

All calls from the PSTN to SIP are initiated upon the receipt of an @msg{IAM} message the ISUP
stack.  The interworking function establishes a transaction and a call context.  CCI primitives sent
to and received from the ISUP stack will be initially received on the first ISUP stream, accepted on
for the third ISUP stream, and issued and received subsequently on the third ISUP.  CCI primitives
issued to the ISUP stack will be issued from within the @dfn{nta} message callbacks.  CCI primitives
will be received on the installed callbacks for the first and third ISUP streams.

@menu
* Mapping of ISUP IAM to SIP INVITE::
* Successful Calls from PSTN to SIP::
* Unsuccessful Calls from PSTN to SIP::
@end menu

@node Mapping of ISUP IAM to SIP INVITE
@subsubsection Mapping of ISUP IAM to SIP INVITE

@subsubheading Processing of CC_SETUP_IND

Upon receiving an @msg{IAM} message (@prim{CC_SETUP_IND} primitive) at the ISUP stack beginning a
call, the interworking function establishes an @dfn{nta} transaction and prepares an @msg{INVITE}
message.  The interworking function establishes a call context (session) and assigns the
@parm{cc_call_ref} supplied in the @prim{CC_SETUP_IND} primitive corresponding to the @msg{IAM}
message to identify the call with the ISUP stack.

The interworking function examines the @parm{cc_call_type} field of the @prim{CC_SETUP_IND}
primitive.  The accepted call types are as follows:

@table @pval
@item CC_CALL_TYPE_SPEECH
This call type represents a speech call.
@item CC_CALL_TYPE_3_1kHZ_AUDIO
This call type represents a 3.1 kHz audio call.
@item CC_CALL_TYPE_UDI_TA
This call type represents an unrestricted digital information with tones and announcements call.
@end table

For all other call types, the interworking function rejects the call with a @prim{CC_REJECT_REQ}
primitive with the cause value (@parm{cc_cause}) of @pval{CC_CAUS_BC_NOT_IMPLEMENTED}.

@ignore
For the accepted call types the through connection in the backward direction
shall be completed at the exchange no later than at receipt of an @var{Address Complete Message} as
indicated by the @prim{CC_SETUP_CON} on the ISUP side, or a @msg{1xx} message (e.g. @msg{180} or
@msg{183} response) on the SIP side.
The through connection in both directions shall be completed no later than the receipt of an
interworking or answer indication.
@end ignore

The interworking function then examines the @parm{cc_call_flags} field of the @prim{CC_SETUP_IND}
primitive.  The flags are interpreted as follows:

@table @pval
@item ISUP_NCI_ONE_SATELLITE_CCT
@itemx ISUP_NCI_TWO_SATELLITE_CCT
These flags are ignored.
@item ISUP_NCI_CONT_CHECK_REQUIRED
@itemx ISUP_NCI_CONT_CHECK_PREVIOUS
These flags can be ignored by call control and are, instead, processed by a separate maintenance
application.
@item ISUP_NCI_OG_ECHO_CONTROL_DEVICE
This flag affects the application of echo control on the media circuit.  When this flag is set, echo
control on the media circuit is not necessary.  This flag is seldom set in US domestic networks.
@item ISUP_FCI_INTERNATIONAL_CALL
This flag is ignored for incoming calls and should not typically be set on egress calls.
@item ISUP_FCI_PASS_ALONG_E2E_METHOD_AVAILABLE
@itemx ISUP_FCI_SCCP_E2E_METHOD_AVAILABLE
These flags can be ignored.
@item ISUP_FCI_INTERWORKING_ENCOUNTERED
This flag indicates that interworking was encountered in the course of routing the call to this
office.  In US domestic networks this normally means that an MF or analog trunk is in the call path
and that rather than releasing calls with cause, the playing of in-band tones and announcements will
be required in some circumstances.  The fact that interworking has been encountered should be saved
in the call context (session) data associated with the call as it will affect behaviour later in the
call.
@item ISUP_FCI_E2E_INFORMATION_AVAILABLE
This flag is ignored.
@item ISUP_FCI_ISDN_USER_PART_ALL_THE_WAY
This flag is ignored.
@item ISUP_FCI_ISDN_USER_PART_NOT_REQUIRED
This flag is ignored.
@item ISUP_FCI_ISDN_USER_PART_REQUIRED
If this flag is set, the call is rejected using a @prim{CC_REJECT_REQ} primitive.  The
@parm{cc_cause} field should be set to @pval{CC_CAUS_FACILITY_REJECTED}.
@item ISUP_FCI_ORIGINATING_ACCESS_ISDN
This flag is ignored.
@item ISUP_FCI_SCCP_CLNS_METHOD_AVAILABLE
@itemx ISUP_FCI_SCCP_CONS_METHOD_AVAILABLE
These flags are ignored.
@item ISUP_FCI_NUMBER_TRANSLATED
When this flag is present, the @parm{npdi} parameter will be added to the
@parm{telephone-subscriber} portion of the @strong{tel} URI contained in the @prim{Request-URI} of
the resulting @msg{INVITE} message.
@end table

@subsubheading Calling Party's Category

The calling party's cateogry is contained in the @parm{cc_flags} field.  The field is first masked
(logical AND) with the @pval{ISUP_CPC_MASK} value and then compared to the following values:

@table @pval
@item ISUP_CPC_UNKNOWN
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{unknown}, or the @parm{cpc} parameter is ommitted from the @strong{tel} URI.
@item ISUP_CPC_OPERATOR_FRENCH
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{operator} and the @prim{Language} header is set to @pval{fr}.
@item ISUP_CPC_OPERATOR_ENGLISH
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{operator} and the @prim{Language} header is set to @pval{en}.
@item ISUP_CPC_OPERATOR_GERMAN
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{operator} and the @prim{Language} header is set to @pval{de}.
@item ISUP_CPC_OPERATOR_RUSSIAN
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{operator} and the @prim{Language} header is set to @pval{ru}.
@item ISUP_CPC_OPERATOR_SPANISH
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{operator} and the @prim{Language} header is set to @pval{es}.
@item ISUP_CPC_OPERATOR_LANGUAGE_6
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{6}.
@item ISUP_CPC_OPERATOR_LANGUAGE_7
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{7}.
@item ISUP_CPC_OPERATOR_LANGUAGE_8
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{8}.
@item ISUP_CPC_OPERATOR_CODE_9
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{9}.
@item ISUP_CPC_SUBSCRIBER_ORDINARY
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{ordinary}.
@item ISUP_CPC_SUBSCRIBER_PRIORITY
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{11}.
@item ISUP_CPC_VOICE_BAND_DATA
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{12}.
@item ISUP_CPC_TEST_CALL
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{test}.
@item ISUP_CPC_SPARE
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{14}.
@item ISUP_CPC_PAYPHONE
The @parm{cpc} parameter in the @strong{tel} URI portion of the @prim{P-Asserted-Identity} header
is set to @pval{payphone}.
@end table

@subsubheading Called Party Number

The @parm{cc_cdpn_offset} and @parm{cc_cdpn_length} fields of the @cite{CC_SETUP_IND} indicate the
called party number.  This number is extracted from the field and used in the
@parm{telephone-subscriber} portion of the @strong{tel} URI in both the @prim{To} header and
@prim{Request-URI} of the @msg{INVITE} message.

The called party number field is encoded in the format described in @cite{ANSI T1.113.3/3.6}; that
is: one bit indicating whether the number of address signals is odd (1) or even (0); 7 bits
indicating that the nature of address; 3 bits providing the numbering plan indicator; an even or odd
number of nibble-wide address signals; and, when the number of address signals is odd, a filler
(0000).  The numbering plan indicator should typically be E.164 (001).  The nature of address should
typically be national (significant) number (0000011) or international number.  When the number is
national, a @samp{+1} should be prefixed to the number for the trial.  When the number is
international, a @samp{+} is prefixed to the number for the trial before placing the number into the
@parm{telephone-subscriber} portion of the @strong{tel} URI.

@subsubheading Trunk Group

The @parm{cc_addr_length} and @parm{cc_addr_offset} will contain an @type{isup_addr} structure.  The
scope field will be set to @pval{ISUP_SCOPE_TG} to indicate that a trunk group was selected; the
@parm{id} field will be set to the trunk group number; and the @parm{cic} field will be set to the
circuit identification code of the incoming circuit.  The @parm{tgrp} parameter in the @strong{tel}
URI portion of the @prim{P-Asserted-Identity} header is set to the numeric value of the trunk group
number.  The circuit identification code is used in conjunction with the signaling point code to
which the stream was bound to identify the circuit for media connections.

@subsubheading Optional Parameters

The @parm{cc_opt_length} and @parm{cc_opt_offset} fields of the @prim{CC_SETUP_IND} will contain
optional parameters encoded according to ISUP formats and codes.  This field contains a list of
optional parameters consisting of a one-octet parameter tag, a one-octet parameter length, and then
a sequence of octets indicated by the parameter length containing the value of the parameter.  The
list is terminated with an end-of-optional-parameters parameter.  If the field does not follow this
format, the setup should be rejected with a @prim{CC_REJECT_REQ} primitive with a @parm{cc_cause}
value of @pval{CC_CAUS_INVALID_MESSAGE}.

Optional parameters of the CCI primitive are formatted precisely as they occurred in the optional
parameters list of the corresponding ISUP message.  This optional parameter list consists of a
sequence of parameters terminated by an end-of-optional-parameters parameter.  Each parameter in the
list contsists of a single octet specifying the parameter type, followed by another single octet
specifying the number of octets contained in the parameter value, followed by the octet(s) of the
parameter value.  The end-of-optional-parameters parameter consists oof one or two octets.  When
optional parameters are not specified, the optional parameters can be of zero length and no
end-of-optional-parameters parameter need appear.

The following optional parameters may be populated in the @prim{CC_SETUP_IND} primitive that need to
be mapped into the information placed into the @prim{Request-URI} and various headers of the
@msg{INVITE} being prepared.

@subsubheading Ported Number

If a @var{Generic Address Parameter} exists in the optional parameters with indication "ported
number", then this number will be used as the @parm{telephone-subscriber} portion of the
@strong{tel} URI in the @prim{To} header and @prim{Request-URI}.  When the parameter is
presentation-restricted, it will only be added to the @prim{Request-URI}.  The called party number
which was overwritten will be added, instead, to an @parm{rn} parameter of the @strong{tel} URI in
the @prim{Request-URI} only.

@c @subsubheading Carrier Identification

@c @subsubheading Carrier Selection

@subsubheading Dialed Number

If a @var{Generic Address Parameter} is present in the optional parameters with indication "dialed
number" and is makred presentation allowed, the number will be used as the
@parm{telephone-subscriber} portion of the @strong{tel} URI contained in the @prim{To} header.

@subsubheading Original Called Name

If a @var{Generic Name} parameter exists in the optional parameters list with indicating "original
called name", and the name is set to presentation-allowed, the name will be used as the
@parm{display-name} portion of the @prim{To} header.

@c @subsubheading Calling Party's Category

@subsubheading Originating Line Information

If an @var{Originating Line Information} parameter is present in the optional parameters, the value
of the parameter will be added to an @parm{oli} parameter of the @parm{telephone-subscriber} portion
of the @strong{tel} URI contained in the @prim{P-Asserted-Identity} header as well as the
@prim{P-Charge-Info} header (if present for other reasons).

@subsubheading Jurisdiction Information

If a @var{Jurisdiction Information} parameter is present in the optional parameters, the digits from
the parameter will be added to an @parm{rn} parameter of the @parm{telephone-subscriber} portion of
the @strong{tel} URI contained in the @prim{P-Asserted-Identity} header as well as the
@prim{P-Charge-Info} header (if present for other reasons).

@subsubheading Charge Number

If a @var{Charge Number} parmaeter is present in the optional parameters a @prim{P-Charge-Info}
header will be added to the @msg{INVITE} message in accordance with
@cite{draft-york-sipping-p-charge-info-07}.  The @parm{noa} value and @parm{telephone-subscriber}
number portions of the header will be taken directly from the parameter.

@subsubheading Calling Party Number

If a @var{Calling Party Number} parameter is present in the optional parameters list and it is not
"network provided" (11), the parameter will be ignored.  When network provided, the calling party
number will be used in the @parm{telephone-subscriber} portion of the @strong{tel} URI contained in
both the @prim{From} and @prim{P-Asserted-Idenity} headers of the resulting @msg{INVITE}.  When
marked presentation-restricted, the number will only be placed in the @prim{P-Asserted-Identity}
header and the @prim{Privacy} header will be elevated to @pval{id} privacy.

@subsubheading Calling Name

If a @var{Generic Name} parameter exists with the indication "calling name" (001) and it is marked
presentation-allowed, the name will be placed in the @parm{display-name} portion of the URI in both
the @prim{From} and @prim{P-Asserted-Identity} headers.  When the name is presentation-restricted,
it will only be placed in the @prim{P-Asserted-Identity} header and the @prim{Private} header will
be elevated to @pval{user} privacy.

@subsubheading Additional User Provided Number

If a @var{Generic Address Parameter} exists with the indication "additional user provided number -
not verified" (00000011) in the first octet of the parameter value, the remaining octets in the
parameter provide the party number with one bit odd (1) or even (0) indicator; seven bits indicating
national (significant) number (0000011) or international number; 3 bits indicating E.164 numbering
(001); 2 bits indicating presentation restriction - presentation allowed (00); an even or odd number
of nibble-wide address signal; and, when the number of address signals is odd, a filler (0000).
When this parameter is present and is presentation allowed, it is used as the
@parm{telephone-subscriber} portion of the @strong{tel} URI used in the @prim{From} header of the
@msg{INVITE} message, instead of that contained in the calling party number.

@subsubheading End of Optional Parameters

When optional parameters are present in the @prim{CC_SETUP_IND}, the end of optional parameters
parameter (with tag value zero (0)) will be appended to the optional parameters.

@subsubheading Response

The interworking function will issue a @prim{CC_SETUP_RES} indicating the ISUP stream upon which the
remaining primitives are to be exchanged (the third stream described above) on the listening stream
(the first stream described) and will await receive of either a @prim{CC_OK_ACK} or
@prim{CC_ERROR_ACK} primitive (priority message) on the listening stream before continuing.  When a
@prim{CC_ERROR_ACK} is received, the call context should be dropped and the call abandonned.  When a
@prim{CC_OK_ACK} is received, the interworking function can issue the prepared @msg{INVITE} message
and either return from the callback or process more received messages on the listening stream.

Note that ISUP should treat these trunks terminating on SIP as interworking trunks.  When the
@prim{CC_SETUP_IND} is issued and the @prim{CC_SETUP_RES} processed successfully, the T11 timer
should be started and an @msg{ACM} message generated automatically if the timer expires.

@node Successful Calls from PSTN to SIP
@subsubsection Successful Calls from PSTN to SIP

Note that @msg{PRACK}, @msg{UPDATE} and @msg{100 Trying} messages, and the like, should be processed
by the @cite{sofia-SIP} stack without involving the ISUP stack.

@subsubheading Processing 180 Ringing Response

@prim{CC_ALERTING_REQ}

@subsubheading Processing 183 Session Progress Response

@prim{CC_PROGRESS_REQ}

@subsubheading Processing 181 Call Is Being Forwarded Response

@prim{CC_PROGRESS_REQ}

@subsubheading Processing 182 Queued Response

@prim{CC_PROGRESS_REQ}

@subsubheading Processing 200 OK Response

@prim{CC_CONNECT_REQ}

@node Unsuccessful Calls from PSTN to SIP
@subsubsection Unsuccessful Calls from PSTN to SIP

@subsubheading Processing 3xx Responses

@subsubheading Processing 4xx, 5xx and 6xx Responses

@subsubheading Call Abandonment

@subsubheading Call Failure

If, after recieving a @prim{CC_SETUP_IND} primitive and before sending a @prim{CC_SETUP_RES}
primitive for the call, the interworking function receives a @prim{CC_CALL_FAILURE_IND} primitive,
the interworking function will examine the @parm{cc_reason} or @parm{cc_cause} field of the
primitive and respond as follows:
@table @pval
@item ISUP_CALL_FAILURE_COT_FAILURE
@itemx CC_CAUS_TEMPORARY_FAILURE
This failure cause indicates that the continuity check on the circuit failed.  This applies to
incoming calls only.
@item ISUP_CALL_FAILURE_RECV_RLC
@itemx CC_CAUS_NORMAL_UNSPECIFIED
This failure cause indicates that the circuit was not completely released by the distant end.  This
applies to incoming calls only.
@item ISUP_CALL_FAILURE_BLOCKING
@itemx CC_CAUS_TEMPORARY_FAILURE
This failure cause indicates that the circuit was blocked by the receipt of a circuit blocking or
circuit group blockin message during call setup.
This applies to incoming calls only.
@item ISUP_CALL_FAILURE_T8_TIMEOUT
@itemx CC_CAUS_TEMPORARY_FAILURE
This failure cause indicates that the call failed while waiting for a continuity check report from
the distant end.  This applies to incoming calls only.
@item ISUP_CALL_FAILURE_T35_TIMEOUT
@itemx CC_CAUS_ADDRESS_INCOMPLETE
This failure cause indicates that additional information (digits) were not received form the caller
within a sufficient period of time.  This applies to incoming calls only and only when @emph{en
block} signaling is not used.
@end table

@node Interworking of Established Calls
@subsection Interworking of Established Calls

For established calls, an @emph{nta} transaction is established for the @cite{sofia-SIP} stack, and
a provider call reference is established for the ISUP stack.  The transaction is identified by its
client identifier for the @cite{sofia-SIP} stack and the ISUP call is identified by its provider
call reference.  These two identifiers refer to the same call context object (structure) in the
interworking function.  To process events (callbacks) from the @cite{sofia-SIP} stack, the client
identifier is used to retrieve the call context.  To process primivites received from the ISUP
stack, the provider call reference is used to retrieve the call context.

@menu
* Successful Established Calls::
* Failed Established Calls::
@end menu


@node Successful Established Calls
@subsubsection Successful Established Calls

Established calls can be suspended and resumed from either a network or user perspective.  Suspend
and resume indications from ISUP as indicated by the @prim{CC_SUSPEND_IND} and @prim{CC_RESUME_IND}
primitives are valid in the @psta{CC_CONNECTED} or @psta{CC_SUSPENDED} states.

@subsubheading Processing of CC_SUSPEND_IND

Upon receipt of a @prim{CC_SUSPEND_IND}, the @parm{cc_call_ref} field of the primitive will be
used to retrieve the call context (session).
The @prim{CC_SUSPEND_IND} primitive will be responded to with a @prim{CC_SUSPEND_RES} primitive and
will @emph{not} initially invoke the @msg{UPDATE} method for the trial.  The interworking function
will mark the call context (session) as being in the (network or user) suspended state,
@psta{CCS_SUSPENDED}.
At a later date, the
@prim{CC_SUSPEND_IND} primitive might invoke the @msg{UPDATE} or re-@msg{INVITE} method to suppress
transfer of media during the suspend.@footnote{The interworking of suspend to media suppression
using the re-@msg{INVITE} method is detailed in @cite{RFC 3398 Section 9}.}

@subsubheading Processing of CC_RESUME_IND

Upon receipt of a @prim{CC_RESUME_IND}, the @parm{cc_call_ref} field of the primitive will be used
to retrieve the call context (session).
The @prim{CC_RESUME_IND} primitive will be responded to with a @prim{CC_RESUME_RES} primitive and
will @emph{not} initially invoke the @msg{UPDATE} method for the trial.  The interworking function
will mark the call context (session) as being in the (network or user) suspended or established
state, @psta{CCS_SUSPENDED} or @psta{CCS_CONNECTED}.
At a later date, the
@prim{CC_RESUME_IND} primitive might invoke the @msg{UPDATE} or re-@msg{INVITE} method to restore
transfer of media after resume from the suspend.

@node Failed Established Calls
@subsubsection Failed Established Calls

Established calls can fail due to the expiration of a timer within ISUP (in accordance with normal
ISUP procedures) or the expiration of a timer within SIP (in accordance with session timers).

@subsubheading Processing of CC_CALL_FAILURE_IND

@table @pval
@item ISUP_CALL_FAILURE_T2_TIMEOUT
@itemx CC_CAUS_NORMAL_CALL_CLEARING
This failure cause indicates that the controlling exchange received a user suspend message but did
not receive a user resume message within time T2.  This applies to all established calls.
@item ISUP_CALL_FAILURE_T6_TIMEOUT
@itemx CC_CAUS_NORMAL_CALL_CLEARING
This failure cause indicates that the non-controlling exchange received a network suspend message
but did not receive a network resume message within time T6.  This applies to all established calls.
@item ISUP_CALL_FAILURE_T38_TIMEOUT
@itemx CC_CAUS_RECOVERY_ON_TIMER_EXPIRY
This failure cause indicates that the call was (network) suspended beyond the allowable period.
This applies to all established calls.
@end table

@node Interworking of Call Release
@subsection Interworking of Call Release
@menu
* Calls Released by the SIP Network::
* Calls Released by the ISUP Network::
@end menu

@node Calls Released by the SIP Network
@subsubsection Calls Released by the SIP Network

@subsubheading Processing of CANCEL

@subsubheading Processing of BYE

@node Calls Released by the ISUP Network
@subsubsection Calls Released by the ISUP Network

@subsubheading Release by the Called Party

@subsubheading Release by the Calling Party

@subsubheading Processing of CC_RELEASE_IND

When the interworking function receives a @prim{CC_RELEASE_IND} primitive for an established call,
it uses the @parm{cc_call_ref} field in the primitive to look up the call context (session).  The
interworking function examines the @parm{cc_cause} field value in the @prim{CC_RELEASE_IND}
primitive, issues a @prim{CC_RELEASE_RES} primitive (if a @prim{CC_RELEASE_REQ} primitive has not
already been issued for the call), awaits a @prim{CC_OK_ACK} primitive and responds on the SIP side
as illustrated in @tabref{T-25}, @tabref{T-26}, @tabref{T-27}, @tabref{T-28}, @tabref{T-29} and
@tabref{T-30}.  However, if the cause value (@parm{cc_cause}) is
@pval{CC_CAUS_NORMAL_CALL_CLEARING}, a @msg{BYE} message is sent instead of a @msg{4xx}, @msg{5xx}
or @msg{6xx} response.

@node SDP Handling
@subsection SDP Handling

The @cite{OpenSS7 Media} stack is illustrated in @figref{12} and interactions between the
interworking function and the @cite{OpenSS7 Media} stack are illustrated in @figref{14}.

The @cite{OpenSS7} Media stack and @cite{Media Gateway Interface (MGI)} are used for interworking
TDM media connections with RTP.  The @cite{Optranex 248} uses the @cite{OpenSS7} media stack for
processing media streams.  The @file{/dev/mg} driver is used for interworking TDM media streams into
RTP media streams.  A purpose-developed interworking function exists at the control nexus between
the @cite{sofia-SIP} and @cite{OpenSS7 Media} stacks.

@node Carrier Proxy
@section Carrier Proxy

The protocol architecture described in @ref{Protocol Architecture} requires the implementation of a
carrier proxy that communicates between customer proxies, the @i{C-SCP}, and the @cite{Optranex 248}
gateway switch.


@node Hardware Architecture
@chapter Hardware Architecture
@cindex Hardware architecture

The hardware of the @cite{Optranex 248} switch is based on two @cite{Kontron} hardenned (NEBS 3
compliant) PC server chassis, each equipped with the @cite{Optranex 248} SONET/SDH card.

@section Power and Cooling

The hardenned (NEBS 3 compliant) PC servers are available with either 110/220VAC or -48VDC single or
dual redundant power supplies.  Redundant DC power supplies are required for the Central Office
environment.  The -48VDC power supplies are rated at 450 Watts per server.  In a two-server
configuration, a maximum of 900 Watts of power (approximately 20 Amps at -48VDC) is required.
Cooling for a maximum of 900 Watts of power dissipation is required.

@subsection Grounding

The DC chassis provides two #10-32 threaded studs for chassis grounding.  A single 90-degree
standard barrel, two-hole, compression terminal lug with 5/8-inch pitch suitable for #14-10 AWG
conductor (such as the Thomas & Betts' terminal lug P/N 256-31426-141) must be used for proper
safety grounding.  A crimping tool may be needed to secure the terminal lug to the grounding cable.

@section Mounting

Mounting rails are available for a standard 19" dual or quad rail rack.  Mounting rails for the
Dallas InfoMart will require specification of whether the colo is in dual or quad rail 19" racks.

@section Ethernet Network Interfaces

Initial requirements are for 200 Mbps full-duplex capacity between the @cite{Optranex 248} switch
servers and the customer proxy and SIP/RTP network.  For load testing, however, 4 Gbps full-duplex
capacity between the @cite{Optranex 248} switch servers and the customer proxy or other SIP/RTP
network will be required.

Each server in the two-server configuration has four GigE NIC ports.  These ports are accessible
from the rear of the chassis.  There are no GigE NIC ports accessible from the front of the chassis.
@emph{The GigE NIC ports are intended to be installed with shielded cabling that is grounded at both
ends of the cable.}

The GigE NIC ports are intra-building ports suitable for connection to intra-building or unexposed
wiring or cabling only.  These intra-building ports @emph{must not} be connected to, nor come into
metalic contact with, interfaces that connect to the outside plant or its wiring.  These interfaces
are designed for use as intra-building interfaces only (Type 2 or 4 ports as described in
GR-1089-CORE, Issue 4) and require isolation from the exposed outside plant cabling.  Note that the
addition of primary protectors is @emph{not} sufficient protection for these interfaces to connect
to, or come into metalic contact with, outside plant wiring.

@section SONET/SDH Network Interfaces

Initial requirements are for OC-12 1:1 APS connections from the PSTN (SONET ADM equipment).  This
OC-12 pipe will support a maximum of 12 DS-3s or 8064 channels; however, trunks are only allocated
for an aggregate DS-3 capacity of 3 x DS-3s or 2016 channels.

The platform is capable of 2 x OC-48 1:1 APS connections (maximum of 96 DS-3s or 64,512 channels)
or 4 x OC-48 unprotected connections (maximum of 192 DS-3s or 129,024 channels).

@subsection Small Formfactor Pluggable Modules

For trial, two SFP pluggable modules will be provided capable of OC-12 Single-Mode Fiber Short Reach
(1310 nanometer) connectivity using two LC connectorized fibers per module.  One SFP module will be
plugged into the @cite{Optranex 248} card installed in each of the two hardenned (NEBS-3 compliant)
PC servers.  The SFP modules will be configured for 1:1 APS operation.  These modules will be
Finisar FTLF1322P1BTR (LC duplex, OC-12/3, SR, SF, 1310 nm) or equivalent.

@subsubsection Finisar Modules

@uref{http://www.finisar.com/,Finisar} has been providing SFP modules to the telecommunications
industry for some time and is one of the market leaders in these devices.  Finisar SFP modules are
available from a number of popular suppliers including @uref{http://www.digikey.com/,Digi-key},
@uref{http://www.avnet.com/,Avnet} and @uref{http://www.nuhorizons.com/,Nu Horizons}.

Suitable Finisar SFP modules are listed below in @tabref{T-9}.@footnote{Note that prices shown are
approximate.}

@tabfig{pgwt09,T-9,Finisar SFP Modules}

@noindent
Most of these Finisar SFP modules are available from @uref{http://www.digikey.com/,Digi-key},
@uref{http://www.avnet.com/,Avnet} and @uref{http://www.nuhorizons.com,Nu Horizons}.

For intra-office applications scaling to a maximum OC-3 rate, the FTLF1217P2BTL is the best value
($52.73); OC-12/3 rate, FTLF1322P1BTR ($80.00); OC-48/12/3 rate, FTLF1321P1BTL ($164.34).

Two FTLF1217P2BTL (2 x $80.00) and two FTLF1321P1BTL (2 x $164.34) SFP modules installed an
@cite{Optranex 248} card can provide every possible configuration of the card: from 4 x OC-3 through
2 x OC-48, under software control.

@subsubsection Avago Technologies Modules

Suitable Avago Technologies SFP modules are listed below in @tabref{T-8}.

@tabfig{pgwt08,T-8,Avago SFP Modules}

@noindent
Avago provides a number of related modules; however, these variations either do not provide DMI
(without reducing cost), or provide a temperature wider than the operating temperature range of the
@cite{Optranex 248} at additional and unnecessary cost.

These Avago SFP modules are not available from @uref{http://www.digikey.com/,Digi-key} but are
available from @uref{http://www.avent.com/,Avent}.  As an option, the AFCT-5765PZ for systems
scaling to OC-3; AFCT-5755PZ ($73.85), OC-12/3 ($87.69); AFCT-5745PZ ($223.08), OC-48/12/3; may be
used instead of the Finisar equivalents.

@subsubsection JDSU SFP Modules

Suitable @url{http://www.jdsu.com/,JDSU} SFP modules are listed below in @tabref{T-13}.

@tabfig{pgwt13,T-13,JDSU SFP Modules}

@noindent
These JSD Uniphase SFP modules are no available from @uref{http://www.digikey.com/,Digi-key} nor
@uref{http://www.avnet.com/,Avnet} but are available from @uref{http://www.nuhorizons.com/,Nu
Horizons}.

Additional modules are listed under @ref{Alternate SFP Modules}.

@node Platform Architecture
@chapter Platform Architecture
@cindex Platform architecture

@section Inter-Server Chassis Cabling

Inter-server chassis cabling is provided for hardware APS connection and loopback between the two
servers making up the @cite{Optranex 248} switch, as illustrated in @figref{8}.

@figuresized{pgw08,8,Inter-Server Chassis Cabling,5.0in}

@noindent
Inter-server chassis cabling for the two hardenned PC servers of the @cite{Optranex 248} switch will
consist of two components:

@enumerate
@item One set of 4 SMA male connectorized coaxial cables (illustrated in blue in @figref{8}).
@item One SFP module connectorized loopback cable (illustrated in gold in @figref{8}).
@item Two additional optional SFP module connectorized loopback cables (illustrated in gold in @figref{8}).
@end enumerate

@subsection SMA Cables

The purpose of SMA connectorized coaxial cabling is to provide hardware APS connectivity between the
two hardenned PC servers that make up the @cite{Optranex 248} switch.  One set of four SMA male
connectorized coaxial cables will be provided for hardware based APS interconnection between the two
@cite{Optranex 248} cards installed in each of the hardenned PC chassis.  The SMA cables will carry
receive and transmit paths for each of 2 x 2.5 Gbps AC-coupled LVDS hardware APS connections.

The 2 x 2.5 Gbps AC-coupled LVDS connections provide connection for hardware-based APS failover
between the chassis.  In this configuration, the each @cite{Optranex 248} server is capable of
connecting to either SFP OC-12 module installed in separate chassis.

@subsection SFP Loop-back Cables

The purpose of the SFP loop-back cables is to provide for performance and capacity testing of the
platforms.  SFP loop-back cables capable of OC-48 speeds (2.488 Gbps) will be
provided.@footnote{Cable
@uref{http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail&name=WM1666-ND, Molex SD-74742-001
(Digi-key PN WM1666-ND)} or equivalent.}  These
loopback cables plug into one SFP pluggable module interface on each of the two chassis and will be
capable of looping back 48 DS-3s worth of traffic (32,256 channels).  The loop-back cables are
solely for performance and capacity testing of the platforms and will be not be used under normal
operation.

Two additional optional SFP copper loopback cables capable of OC-12 or better operation may also be
provided to meet specific test objectives during trial.

@section Spares

Spares will not be provided for the initial trial.  Spare modules consist of
the following:

@itemize @bullet
@item spare Intel Xeon 5400 series processor;
@item spare memory modules;
@item spare pluggable 450 Watt -48 VDC power supplies;
@item spare pluggable fan modules (CPU fans, IO fans);
@item spare filter packs;
@item spare pluggable SAS harddrives;
@item spare @cite{Optranex 248} SONET/SDH interface PCI Express cards; and,
@item spare pluggable OC-12 SFP modules.
@end itemize

@noindent
Note that with the exception of SONET optical modules, SAS harddrives
and power supplies, replacement of parts including processors, memory modules,
fan modules, filter packs, and PCI cards requires powering down at least one of
the redundant servers.
SONET optical modules, SAS harddrives and power supplies are
hot-pluggable.

@node Management Architecture
@chapter Management Architecture
@cindex Management architecture
@menu
* Local Alarms::
* Remote Management::
* SNMP Management::
@end menu

@node Local Alarms
@section Local Alarms

Each of the servers in the @cite{Optranex 248} switch provides a local dry-contact alarms interface.

@node Remote Management
@section Remote Management

Each server in the @cite{Optranex 248} platform requires a Remote Management Module and associated
NIC.@footnote{Intel Remote Management Module 2 (Intel RMM2) and RMM NIC.}  These remote management
modules are responsible for the remote management of the compute platforms.  They provide HTTP,
SNMP, and IPMI management capabilities.

@node SNMP Management
@section SNMP Management

The SNMP management framework for the @cite{Optranex 248} gateway switching application is
illustrated in @figref{15}.

@subsection OpenSS7 Management Information Bases

@subsubsection STREAMS MIB

The @cite{OpenSS7} management information base used for the management of the @acronym{STREAMS}
framework is provided by the @file{OPENSS7-STREAMS-MIB} and @file{OPENSS7-STREAMS-EXT-MIB}.  An
agent implementing the complete MIBs is available for trial.

@subsubsection SCTP MIB

@file{RFC3873-MIB} (SCTP-MIB)

@subsubsection M3UA MIB

The @cite{M3UA} and @cite{MTP} management information bases are responsible for the management,
measurement, monitoring, auditing, alarming and configuration of the @cite{OpenSS7} SIGTRAN stack.
Only the @dfn{Application Server} portions of the @cite{M3UA MIB} are used for this application.
Only those portions of the @cite{MTP MIB} applicable to SIGTRAN M3UA are used for this application.

The @cite{OpenSS7} management information base used for the management of the @acronym{SIGTRAN}
stack is provided by the @file{OPENSS7-M3UA-ASP-MIB}.  Note that, for the Dallas trial, this MIB
will only be implemented to the point necessary to performing configuration and basic alarms
necessary for trial purposes.  A completed implementation of the MIB will be provided for
in-service.

@subsubsection ISUP MIB

The @cite{OpenSS7} enterprise management information bases used for the management of the ISUP
component are contained in the @file{OPENSS7-ISUP-MIB} and @file{OPENSS7-ISUP-OM-MIB}.  The former
is responsible for the configuration, management and alarms associated with the ISUP stack.  The
later is responsible for operational measurements associated with the ISUP stack.

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@subsubsection RTP MIB

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@subsubsection SONET/SDH MIB

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@subsubsection MX MIB

The @cite{OpenSS7} enterprise management information bases used for the management of the multiplex
components are contained in the @file{OPENSS7-MX-MIB}, @file{RFC2495-MIB} (DS1-MIB),
@file{RFC3895-MIB} (DS1-MIB), @file{RFC4805-MIB} (DS1-MIB), @file{RFC4805-EXT-MIB} (DS1-EXT-MIB),
@file{RFC2496-MIB} (DS3-MIB) and @file{RFC3896-MIB} (DS3-MIB).

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@subsubsection SWITCH MIB

The @cite{OpenSS7} enterprise management information bases used for the management of the switching
of channel and multiplex components are contained in the @file{OPENSS7-MX-MIB},
@file{OPENSS7-PHY-MIB}, @file{RFC2494-MIB} (DS0-MIB) and @file{RFC2494-EXT-MIB} (DS0BUNDLE-MIB).

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@subsubsection MG MIB

The @cite{OpenSS7} enterprise management information bases used ofr the management of the media
gateway are contained in the @file{OPENSS7-MG-MIB} and @file{OPENSS7-MG-OM-MIB}.

Note that, for the Dallas trial, these MIBs will only be implemented to the point necessary to
performing configuration and basic alarms necessary for trial purposes.  A completed implementation
of the MIBs will be provided for in-service.

@node System Architecture
@chapter System Architecture
@cindex System architecture

@node Logistics
@chapter Logistics
@cindex Logistics
@menu
* Site Preparation::
* Equipment List::
* Installation::
* Spares::
* Schedule::
@end menu

@node Site Preparation
@section Site Preparation

@subsection Rack

Racks must be one of the following:

@itemize
@item 19-inch 2-Post rack with EIA Universal and EIA Wide hole spacing, and equipment mounting posts
from 3 to 5 inches deep.
@item 19-inch 4-Post rack with EIA Universal and EIA Wide hole spacing, and front equipment mounting
rail to rear equipment mounting rail separation not exceeding 24 inchecs.
@item 23-inch 2-Post rack with EIA Universal, EIA Wide and ETSI hole spacing, and equipment mounting
posts from 3 to 5 inches deep.
@item 23-inch 4-Post rack with EIA Universal, EIA Wide and ETSI hole spacing, and fron equipment
mounting rail to rear equipment mount rail separation not exceeding 24 inches.
@end itemize

@noindent
Physical dimensions and minimum clearances are listed in @tabref{T-7}.

@tabfig{pgwt07,T-7,Physical Dimensions}

@noindent
Note that additional clearance (to 6 inches) may be required front and rear to ensure that front
inlet temperature does not exceed rated maximums and to ensure that rear exhaust does not interfere
with other devices mounted in the same rack.  Also, clearances are the minimum required to provide
adequate ventilation given nominal environmental conditions.  Additional clearance is required to
provide access to the equipment for service of hard drives and power supplies.

@subsubsection Rack Mounts

A separate rack mount kit is required depending upon the rack.  One rack mount
kit is required for a 19" 2- or 4-post rack, another for a 23" 2- or 4-post
rack.  Rack mount kits will be provided with the @cite{Optranex} servers.

@subsubsection Cable Management

Rack mount kits for the @cite{Optranex} servers do not include cable
management devices.  Sufficient slack in cabling, both DC power and interface
cables, must be provided to allow each server chassis to be pulled out 24
inches.  Otherwise, any cabling or power feeds must be disconnected before
sliding out the equipment on its equipment rails.

@subsection Power

The hardenned (NEBS 3 compliant) PC servers are available with either
110/220VAC or -48VDC single or dual redundant power supplies.  Renundant DC
power supplies are required for the Central Office environment and are provided
for trial and in-service.

@subsubsection DC Power

The -48VDC power supplies are rated at 450W per server.  Breakers or fuses
should be rated at no more than 10 amps (per server).  For more details on
DC power requirements, see @ref{DC Power}.  Breaker or fuse panels for trial
will be provided by @cite{Heramax}.

@subsubheading Grounding

Each DC server chassis provides to #10-32 threaded studs for chassis grounding.
A single 90-degree standard barrel, two-hole, compression terminal lug with
5/8-inch pitch suitable for #14-10 AWG conductor (such as Thomas & Betts'
terminal lug P/N 256-31426-141) must be used for proper safety grounding.  A
crimping tool may be needed to secure the terminal lug to the grounding cable.
For more details on grounding, see @ref{Grounding the Server}.

@subsubsection AC Power

The @cite{Optranex} servers for the trial are DC powered.  AC power will not be
required for either the trial or in-service.


@subsection Cooling

@subsubsection Temperature
The temperature, in which each server operates when installed in an equipment
rack must not go below 5 degrees Celcius (41 degress Farenheit) or rise above
35 degress Celcius (95 degress Farenheit).  Extreme fluctuations in temperature
can cause a variety of problems.

@subsubsection Ventilation
The equipment rack must provide sufficient airflow to the front of each server
to maintain proper cooling.  The rack must also include ventilation sufficient
to exhaust a maximum of 1023 BTUs (British Thermal Units) per hour for each
server, or 2046 BTU per hour total.  The rack selected and the ventilation
provided must be suitable to the environment in which the servers will be used.

Physical dimensions and minimum clearances for adequate ventilation are listed
in @tabref{T-7}.

@subsection Connections

@subsubsection Ethernet Connections

Each of the two server chassis has 4 x 1000baseT RJ-45 Ethernet NIC primary
interfaces, and 1 x 100baseT RJ-45 Ethernet NIC for the remote management
module.  This is a total of 8 x 1000baseT RJ-45 Ethernet NIC primary interfaces
and 2 x 100baseT RJ-45 Ethernet NIC remote management modules, or, a total of
10 RJ-45 connections for trial.  Provision should be made for growth to an
additional two server chassis at in-service.

Proper alien noise immunity on all Ethernet NIC cables requires Category 6 or
6a STP (Shielded Twisted Pair).  These cables will be provided for trial and
in-service by @cite{Heramax} at installation.

For additional information on Ethernet connections, see @ref{Ethernet
Connections}.

@subsubsection SONET Connections

Fiber patch cords for connection between GC optical passive cross-connects and
the @cite{Optranex} server chasses will be provided by GC or @cite{Heramax}.
Patch cords will be compiant to OC-12/3, short-reach, single-mode, 1310nm,
9/125 fiber.  The @cite{Optranex} end of the fiber patch cords must have LC
duplex connectors.

Additional loop-back copper module terminated cables will be used for
performance testing.  These copper loop-back cables will be provided by
@cite{Optranex} for trial and are not required for in-service.

For additional information of SONET/SDH connections, see @ref{SONET/SDH
Connections}.

@subsubsection Management Connections

Additional management connections, beyond the Ethernet RMM connections which
were included above under Ethernet Connections, such as the serial interface
and local alarms panel dry contact interface will not be used for trial.

@subsubsection Hardware APS Connections

Hardware APS connections use SMA coaxial cables that connect between the server
chasses.  These cables will be provided by @cite{Optranex} and need to be
installed between the interface card SMA connectors.  These connections might
not be used for trial but will be used for in-service.

@node Equipment List
@section Equipment List

@subsection Servers

The @cite{Optranex 248} consists of two server chassis.  Each is a Kontron
TIGW1U (product code TMRA0201W or TMRD0201W or equivalent) server.

@subsubsection Processors

Each server is equipped with two Quad-Core Intel Xeon 5400 or 5500 series
processors, preinstalled.

@subsubsection Memory

Each server is equipped with DDR3 memory modules, preinstalled.

@subsubsection Hard Drives

The @cite{Optranex 248} servers are each equipped with 3 hot-swappable SAS
(Serial Attached SCSI) hard-drives, preinstalled.

@subsubsection PCIe Riser

Each @cite{Optranex 248} server is equipped with a PCIe Riser Card inserted
into a PCI Super Slot.  The PCIe Riser card provides for x1, x4 or x8 lane
operation.  The @cite{Optranex 248} SONET/SDH cards are x4 lane PCIe cards.
The @cite{Optranex 192} SONET/SDH cards are x8 lane PCIe Cards.

@subsubsection Power Supplies

Each @cite{Optranex 248} server can be equipment with one or two (redundant,
hot-swappable) AC or DC power supplies.  Each server chassis will be provided
with two (redundant hot-swappable) DC power supplies, preinstalled.

@subsection Interface Cards

Each @cite{Optranex 248} server is equipped with either a @cite{Optranex 248}
x4 lane PCIe or @cite{Optranex 192} x8 lane PCIe SONET/SDH card.  For the
Dallas trial, each server will be equipped with one @cite{Optranex 248} x4 lane
PCIe card.  Interface cards will be installed separately and after server
installation.

@subsection SFP Modules

Each @cite{Optranex 248} SONET/SDH card accepts up to four SFP modules.  SFP
modules must be compliant with @cite{SFF Committee INF-8074i Revision 1.0}
specifications.  SFP modules will be provided by @cite{Optranex} and will be
installed with the interface cards.

@subsection Cables

Cable requirements are as follows:

@itemize
@item 10 Category 6 or 6a STP RJ-45 patch cords, 5 between the rear of each
@cite{Optranex} server chassis and the Juniper router.
@item 2 9/125 fiber patch cords with LC duplex connectors, one between the
GC optical patch panel and the rear of each @cite{Optranex} server chassis.
@item 4 x SMA coaxial patch cords between the rear of the @cite{Optranex}
server chassis.
@item 3 x SFP copper patch cables between the rear of the @cite{Optranex}
server chassis.
@end itemize

@subsection Rack Mount Kits

Two 19" rack mount kits will be provided by @cite{Optranex}: one for each
server chassis.

@subsection Cable Management Kits

The @cite{Optranex} servers must be disconnected from power and interface units
before the case is opened for service.  Cable managements kits are not required
when connections are removed before the server is slid out on its equipment
rails.

@node Installation
@section Installation

The cabinet layout for the Dallas trial is illustrated in @figref{13}.

@figuresized{pgw13,13,Cabinet Layout,3.5in}

@menu
* Rack::
* Power::
* Cooling::
@end menu

@noindent
@node Rack
@subsection Rack

Two or more people are require to install the server chassis in the rack.  Room air temperature must
be below 95 degrees Farenheit (35 degrees Celsius) during installation and operation.  Air vents
(front an back) must have at least 6 inches (15 centimeters) clearance for proper ventilation.
Device installation should begin from the bottom of the rack upward.  The heaviest devices should be
installed toward the bottom of the rack.  Not more than one device should be extended our of the
rack at a time.  Remove rack doors and side pannels to provide unrestricted access during
installation.  Ensure that devices are attached to properly grounded power feeds and that multiple
devices do no overload the power outlets during installation.  Do not place any object weighing more
than 110 pounds (50 kilograms) on top of rack-mounted devices.

Rack installation requires flat-blade and phillips screwdrivers and rack mount kit appropriate for
the rack in which the server chassis are to be installed.  There are two rack mount kits: one for
19" 2- and 4-post racks; another for 23" 2- and 4-post racks.

@node Power
@subsection Power

Servers can be installed using one or two (redundant) AC or DC power supplies.  For evaluation and
laboratory installations, only one AC or DC power supply is required.  Requirements for DC and AC
power feeds are discussed in @ref{DC Power} and @ref{AC Power}.

@menu
* DC Power::
* AC Power::
@end menu

@node DC Power
@subsubsection DC Power

Connection with a DC (Direct Current) source should only be performed by trained service personnel.
The server with DC input is to be installed in a Restricted Access Location in accordance with
articles 110-26 and 110-27 of the National Electric Code, ANSI/NFPA 70.  The DC source must be
electrically isolated by double or reinforced insulation from any hazardous AC source.  The DC
source must be capable of providing up to 300 watts of continuous power per feed pair.

@subsubheading Mains DC Power Disconnect
You are responsible for installing a properly rated DC power disconnect for the server system.  This
mains disconnect must be readily accessible, and it must be labeled as controlling power to the
servers.  The UL Listed circuit breaker of a centralized DC power system may be used as a disconnect
device when easily accessilble and should be rated no more than 10 amps.

@subsubheading Grounding the Server
The servers are inteneded for installation with an isolated DC return (DC-I) and is to be installed
in a Commong Bonding Network (CBN) per NEBS GR-1089.  To avoid the potential for an electrical shock
hazard, the servers must be reliably connected to an earth grounding conductor.  The earth grounding
conductor must be a minimum 14AWG connected to the earth ground studs on the rear of each server.
The safety ground connector should be connected to each chassis stud with a Listed closed two-hole
crimp terminal having a 5/8-inch pitch.  The nuts on the chassis earth ground studs should be
installed with a 10 in-lb torque.  The safety ground conductor provides proper grounding only for
each server chassis connected.  Additional, proper grounding must be provided for the rack and other
devices installed in it.

Each DC chassis provides two #10-32 threaded studs for chassis enclosure grounding.  A single
90-degree standard barrel, two-hole, compression terminal lug with 5/8-inch pitch suitable for
#14-10 AWG conductor (such as the Thomas & Betts' terminal lug Part Number 256-31426-141) must be
used for proper safety grounding.

@subsubheading Overcurrent Protection
Overcurrent protection UL Listed circuit breakers must be provided as part of each host equipment
rack and must be incorporated in the field wiring between the DC source and the server.  The branch
circuit protection shall be rate minimum 75Vdc, 10 A maximum per feed pair.  If the DC power system
for the equipment rack is installed with more than 10 amperes of protection, supplemental protection
for each server must be provided.  The overall current rating of a maximum configured server chassis
is 8 amperes.

@node AC Power
@subsubsection AC Power

@subsubheading Mains AC Power Disconnect
The AC power cords are considered the mains disconnect for each server and must be readily
accessible when installed.  If the individual server power cords will be be readily accessible for
disconnection, an AC power disconnect for the entire rack must be provided.  This main disconnect
must be readily accessible, and it must be labeled as controlling power to the entire rack, not just
to the servers.

@subsubheading Grounding the Rack Installation
To avoid the potential for an electrical shock hazard, a third wire safety ground conductor must be
included with the rack installation.  If the server power cords are plugged into an AC outlet that
is part of the rack, proper grounding must be provided for the rack itself.  If the server power
cord is plugged into a wall AC outlet, the safety ground conductor in the power cord provides proper
grounding only for the server.  Additional, proper grounding must be provided for the rack and other
devices installed in it.  This system is intended for connection to a Common Bonding Network (CBN)
as defined by NEBS GR-1089.

@subsubheading Overcurrent Protection
The server is designed to an AC line voltage source with up to 20 amperes of overcurrent protection
per cord feed.  If the power system for the equipment rack is installed on a branch circuit with
more than 20 amperes of protection, supplemental protection must be provided for each server.  The
overall current rating of a configured server is less than 6 amperes.

Do not attempt to modify or use an AC power cordset that is not the exact type required.  The power
cordset must meet the following criteria:

@itemize
@item Rating:-- In the US and Canada, cords must be UL (Underwriters Laboratories, Inc.) Listed/CSA
(Canadian Standards Organization) Certified type SJT, 18-3 AWG (American Wire Gauge).  Outside of
the US and Canada, cords must be flexible harmonized (<HAR>) or VDE (Verband Deutscher
Electrotechniker, German Institute of Electircal Engineers) certified cord with 3 x 0.75 mm
conductors rated 250 VAC.
@item Connector, wall outlet end:-- Cords must be terminated in grounding-type male plug designed
for use in your region.  The conenct must have certification marks showing certification by an
agency acceptable in your region and for U.S. must be Listed and rated 125% of overall current
rating of each server.
@item Connector, server end:-- The connectors that plug into the AC receptacle on the server must be
an approved IEC (International Electrotechnical Commission) 320, sheet C13, type female connector.
@item Cord length and flexibility:-- Cores must be less than 4.5 meters (14.8 feet) long.
@end itemize

@node Cooling
@subsection Cooling

@subsubheading Temperature
The temperature, in which each server operates when installed in an equipment rack must not go below
5 degrees Celcius (41 degress Farenheit) or rise above 35 degress Celcius (95 degress Farenheit).
Extreme fluctuations in temperature can cause a variety of problems.

@subsubheading Ventilation
The equipment rack must provide sufficient airflow to the front of each server
to maintain proper cooling.  The rack must also include ventilation sufficient
to exhaust a maximum of 1023 BTUs (British Thermal Units) per hour for the
server.  The rack selected and the ventilation provided must be suitable to the
environment in which the servers will be used.

@node Spares
@section Spares

Spares will not be provided for the initial trial.  Spares will be provisioned
for the full in-service date.  Spares consist of the following:

@itemize @bullet
@item spare Intel Xeon 5400 series processor;
@item spare memory modules;
@item spare pluggable 450 Watt -48 VDC power supplies;
@item spare pluggable fan modules (CPU fans, IO fans);
@item spare filter packs;
@item spare pluggable SAS harddrives;
@item spare @cite{Optranex 248} SONET/SDH interface PCI Express cards; and,
@item spare pluggable OC-12 SFP modules.
@end itemize

@noindent
Note that with the exception of SONET optical modules, SAS harddrives
and power supplies, replacement of parts including processors, memory modules,
fan modules, filter packs, and PCI cards requires powering down at least one of
the redundant servers.
SONET optical modules, SAS harddrives and power supplies are
hot-pluggable.

@node Schedule
@section Schedule

@subsection Equipment Delivery and Installation

@cite{Optranex} server chassis and equipment rails will be delivered to site
and installed first.  According to current schedules, servers will be shipped
to arrive between March 1 and March 30, 2010.

@cite{Optranex} interface cards, SONET pluggable modules, SMA patch cables, and
SFP loop-back cables, will be shipped separately.  SONET/SDH Interface cards
and components will be shipped, according to current schedules, to arrive
between  March 30, 2010 and April 12, 2010.

@subsection Field Trial

Test plan execution and trunk turn up will commence, according to current
schedules, the week of April 12, 2010.  During the period from April 12, 2010
to May 12, 2010, the @cite{Optranex} platform may be turned up and down and may
experience unplanned service outages.  All planned outages will be performed
within an preplanned evening maintenance window after trunks have been turned
up the week of April 12, 2010.  The @cite{Optranex} platform can only be
provisioned by @cite{Optranex} staff during the field trial.

@subsection Provisioning Trial

Provisioning of the services provided by the @cite{Optranex 248} will be
available, according to current schedules, the week of May 10, 2010.  The
provisioning plan will be executed that week to prove the integration with
back-end provisining systems.  After the provisioning trial is complete, the
@cite{Optranex 248} platform will be provisionable by @cite{Heranax} personnel.

@subsection Inservice

In service will commence June 1, 2010.  A separate inservice plan will be
prepared to address redundancy, spares, etc.

@node Provisioning Plan
@chapter Provisioning Plan
@cindex Provisioning plan

@section SONET Segment Assignments

@section SONET Path Assignments

@section SIGTRAN Signaling Gateway Additions

This section provides an overview of the addition of signalling gateways for SIGTRAN connectivity
from the Optranex switch to the SS7 signaling network.

@section PSTN Signaling Point Additions

This section provides an overview of the addition of remote signaling points for SS7 Signaling over
SIGTRAN M3UA.

@noindent
To assign a signaling point, the following information is required:

@enumerate
@item Signaling point code.
@item Protocol variant.
@item Protocol options.
Protocol options include the following:
@itemize
@item @pval{SS7_POPT_UPT} --- whether to send UPT messages.
@item @pval{SS7_POPT_LPA} --- whether to send LPA messages.
@item @pval{SS7_POPT_UCIC} --- whether to send UCIC messages.
@end itemize
@item Exchange type.  This can be one of the following:
@itemize
@item @pval{ISUP_XCHG_TYPE_A} --- the exchange is a end-office exchange.
@item @pval{ISUP_XCHG_TYPE_B} --- the exchange is a tandem exchange.
@end itemize
@end enumerate

@section PSTN Signaling Relation Additions

This section provides an overview of the addition of signalling relations for SS7 ISUP Signaling
over SIGTRAN M3UA.

@noindent
Assignments that need to be made prior to signaling relation additions are as follows:

@enumerate
@item Signaling point assignment.
@end enumerate

@noindent
Assignments made to add signaling relations are as follows:

@enumerate
@item Signaling relation assignment.
@end enumerate

@noindent
To assign as signaling relation, the following information is required:

@enumerate
@item The signaling point code of the near-end signaling point.  This signaling point is identified
by its signaling point identifier (which is an identifier local to the Optranex switch).
@item The signaling point code of the far-end signaling point.  This signaling point is identified
by its signaling point code.
@item Protocol variant used in the communication between signaling points.
@item Protocol options used between signaling points.
@item Timer values as follows (when they deviate from default values):
@itemize
@item T4 --- waiting for UPA or other messages.
@item T18 --- waiting for circuit-group-blocking-acknowledge retry.
@item T19 --- waiting for circuit-group-blocking-acknowledgement maintenance.
@item T20 --- waiting for circuit-group-unblocking-acknowledge retry.
@item T21 --- waiting for circuit-group-unblocking-acknowledge maintenance.
@item T22 --- waiting group-reset-acknowledge retry.
@item T23 --- waiting group-reset-acknowledge maintenance.
@item T28 --- waiting circuit-query-response.
@item T29 --- congestion attack timer.
@item T30 --- congestion decay timer.
@item Tcgb --- waiting for blocking-acknowledge (ANSI).
@item Tgrs --- waiting for reset-acknowledge (ANSI).
@item Thga --- waiting for blocking-acknowledge hardware (ANSI).
@item Tscga ---- waiting for blocking-acknowledge software (ANSI).
@item Tscga_d ---- waiting for blocking-acknowledge software (ANSI).
@end itemize
@end enumerate

@section SIP Proxy Additions

This section provides an overview of the addition of Customer proxies to the OpenSIPs and C-SCP
platforms.  The Optranex is not involved in this assigment.

@section PSTN Trunk Group Addtions

This section provides an overview of the addition of PSTN trunks to establish trunk group
connectivity between the Optranex and remote switches.

@noindent
Assignments that need to be made prior to PSTN trunk group additions are as follows:

@enumerate
@item SONET segment assignment.
@item SIGTRAN  SG assignment.
@item PSTN Signaling Point assignment.
@end enumerate

@noindent
Assignments made to add PSTN trunk groups are as follows:

@enumerate
@item ISUP trunk group assignment.
@end enumerate

@noindent
The attributes (data) necessary to make an ISUP trunk group assignment is as follows:

@enumerate
@item Near-end signaling point code.  The near-end signalling point code is a point code selected
from the point codes assigned to the @cite{Optranex} switch.
@item Far-end signaling point code.  The far-end signalling point code is a point code selected from
the point codes assigned to the remote switch to which the trunk group connects.
@item Direction.  This can be one of the following:
@itemize
@item @pval{ISUP_TG_TYPE_OG} --- one-way outgoing trunk group.
@item @pval{ISUP_TG_TYPE_IC} --- one-way incoming trunk group.
@item @pval{ISUP_TG_TYPE_2W} --- both-way trunk group.
@end itemize
@item Circuit selection procedure.  This can be one of the following:
@itemize
@item @pval{ISUP_SELECTION_TYPE_MRU} --- most recently used.
@item @pval{ISUP_SELECTION_TYPE_LRU} --- least recently used.
@item @pval{ISUP_SELECTION_TYPE_ASEQ} --- ascending sequential.
@item @pval{ISUP_SELECTION_TYPE_DSEQ} --- descending sequential.
@end itemize
@item Trunk group options.  This can be zero or more of the following:
@itemize
@item @pval{ISUP_TGF_GLARE_PRIORITY} --- when set, indicates that the local exchange has priority in
glare conditions; when unset, indicates that the remote exchange has priority in glare conditions.
@item @pval{ISUP_TGF_INCOMING_INTERNATIONAL_EXCHANGE} --- set to indicate that the remote exchange
is an incoming international exchange on this trunk group.
@item @pval{ISUP_TGF_SUSPEND_NATIONALLY_PERFORMED} --- set to indicate that suspend and resume
procedures are performed according to national specifications.
@item @pval{ISUP_TGF_CONTROLLING_EXCHANGE} --- set to indicate that the local exchange is a
controlling exchange on this trunk group.
@end itemize
@end enumerate

@section PSTN Route Additions

This section provides an overview of the addition of overflow routes.  Overflow routes consist of a
series of one-way-outgoing or both-way trunk groups.  The series identifies the overflow pattern for
outgoing circuit seizures.  The first trunk group in the series is attempted first.  If as circuits
are busy in the first group in the series, the second group is attempted.

@noindent
Assignments that need to be made prior to PSTN route additions are as follows:

@enumerate
@item PSTN trunk group assignment.
@end enumerate

@noindent
Assignments made to add PSTN routes are as follows:

@enumerate
@item PSTN route assignment.
@end enumerate

@section PSTN Circuit Group Additions

This section provides an overview of the addition, change or removal of circuit groups.  Circuit
groups are used in the management and maintenance procedures for ISUP signaling.  ANSI uses implied
or pre-assigned circuit groups.  A circuit group is identified using one of the circuit
identification codes assigned within the circuit group.  Circuit groups must be assigned before
circuits within the group can be assigned.

@noindent
Assignments that need to be made prior to circuit group assignments are as follows:

@enumerate
@item PSTN Signaling Point assignments (both local and remote).
@end enumerate

@noindent
Assignments made to add circuit groups are as follows:

@enumerate
@item PSTN circuit group assignment.
@end enumerate

@section PSTN Circuit Additions

This section provides an overview of the addition, change or removal of trunks (circuits) within
PSTN trunk groups.

@noindent
Assignments that need to be made prior to PSTN trunk additions are as follows:

@enumerate
@item PSTN trunk group assignment.
@item PSTN circuit group assignment.
@item SONET path assignment.
@end enumerate

@noindent
Assignments made to add PSTN trunk groups are as follows:

@enumerate
@item Near-end signaling point code.
@item Far-end signaling point code.
@item Primary circuit identification code.
@item Pre-assigned or implied grouping.
@end enumerate

@enumerate
@item ISUP circuit assignment.
@end enumerate

@section PSTN Virtual Trunk Group Additions

This section provides an overview of the addition, change or removal of PSTN virtual trunk groups
(for outgoing calls only).

@section SIP Virtual Trunk Group Additions

This section provides and overview of the addition of SIP virtual trunk groups (for incoming calls
only) to the OpenSIPs and C-SCP platforms.

@subsection OpenSIPS

@subsection Optranex

@subsection C-SCP

@node Test Plan
@chapter Test Plan
@cindex Test plan

@section OpenSIPS

@section Optranex

@section C-SCP

@section Outgoing Calls

@section Incoming Calls

@node Alternate Hardware
@appendix Alternate Hardware
@cindex Alternate Hardware

@menu
* Alternate SFP Modules::
@end menu

@node Alternate SFP Modules
@section Alternate SFP Modules

This appendix contains lists of SFP modules that are compatible with the @cite{Optranex 248} card
according to their advertised specifications.  Note that these modules have not been tested;
however, if they are compliant with the SFP MSA as advertised, they should work properly with the
@cite{Optranex 248}.

@subsection Eoptolink Modules

Suitable @url{http://www.sfp-xfp.com/,Eoptolink} SFP modules are listed below in @tabref{T-10}.

@tabfig{pgwt10,T-10,Eoptolink SFP Modules}

@noindent
Eoptolink also has a number of OC-3 to OC-48 capable single fiber bidirectional WDM SFP modules,
however, these are not in common usage for central office equipment.

@subsection Xgiga SFP Modules

Suitable @url{http://www.xgiga.cn/,Xgiga} SFP modules are listed below in @tabref{T-11}.

@tabfig{pgwt11,T-11,Xgiga SFP Modules}

@subsection Star Opto SFP Modules

Suitable @url{http://www.staropto.com/,Star Opto} SFP modules are listed below in @tabref{T-12}.

@tabfig{pgwt12,T-12,Star Opto SFP Modules}

@subsection Opnext SFP Modules

Suitable @url{http://www.opnext.ocm/,Optnext} SFP modules are listed below in @tabref{T-14}.

@tabfig{pgwt14,T-14,Optnext SFP Modules}

@subsection NEC SFP Modules

Suitable @url{http://www.nec.ocm/,NEC} SFP modules are listed below in @tabref{T-15}.

@tabfig{pgwt15,T-15,NEC SFP Modules}

@subsection LuminentOIC SFP Modules

Suitable @url{http://www.luminentoic.com/,LuminentOIC} SFP modules are listed below in
@tabref{T-16}.

@tabfig{pgwt16,T-16,LuminentOIC SFP Modules}

@subsection GEVISTA SFP Modules

Suitable @url{http://www.gevista.com/,GEVISTA} SFP modules are listed below in @tabref{T-17}.

@tabfig{pgwt17,T-17,GEVISTA SFP Modules}

@noindent
These modules are available from @uref{http://www.nstnetwork.com/,Newstar}.

@node Protocol Values
@appendix Protocol Values
@cindex Protocol values
@menu
* Cause Values::
@end menu

@node Cause Values
@section Cause Values

This section described cause values applicable to US networks and how they interact with SIP
@msg{4xx}, @msg{5xx} and @msg{6xx} responses.  In these responses, the cause value is contained in
the @prim{Reason} header in accordance with @cite{RFC 3326}.@footnote{One extension to @cite{RFC
3326} is provided in that the @pval{ANSI} token will be recognized in addition to the @pval{Q.850}
token.}

@menu
* Cause Value to SIP Response Mapping::
* Default SIP Response to Cause Value Mapping::
@end menu

@node Cause Value to SIP Response Mapping
@subsection Cause Value to SIP Response Mapping

When the @cite{Optranex 248} gateway switch generates a SIP @msg{4xx}, @msg{5xx} or @msg{6xx}
response to an @msg{INVITE} message from the SIP network, no @prim{Reason} header will be included
in the SIP response.  This is to avoid the situation where an attack on the platform is assisted by
the detailed cause value in a response message.

When the @cite{Optranex 248} gateway switch receives a SIP @msg{4xx}, @msg{5xx}, or @msg{6xx}
response to an @msg{INVITE} message sent to the SIP network, the @prim{Reason} header and the
contained cause values will only be honored if the response was sent via the @i{C-SCP}.  That is,
a @i{C-SCP} host name or IP address is contained in a @prim{Via} header in the response immediately
after the @cite{Carrier Proxy} @prim{Via} header.  This is to avoid attacks on the platform by UAs
that arbitrarily set a @cite{Reason} header in a response.

@itemize
@item ITU-T Q.850 Cause 1 @i{Unallocated (unassigned) number}.
This cause indicates thtat the called party cannot be reached because, although the called pary
number is in a valid format, it is not currently allocated (assigned).

This cause value can be contained in (and will trigger) a @msg{404 Not Found} response.
This is the default value that will be assigned if a @msg{404 Not Found} message is received without
an @pval{ANSI} or @pval{Q.850} @prim{Reason} header.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 2 @i{No route to specified transit network}.
This cause indicates that the equipment sending this cause has received a request to route the call
through a particular transit network which it does not recognize.  The equipment sendnig this cause
does not recognize the transit network either because the transit network does not exist or because
that particular transit network, while it does exist, does not serve the equipment which is sending
this cause.  This cause is supported on a network-dependent basis.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 3 @i{No route to destination}.
This cause indicates that the called party cannot be reached because the network through which the
call has been routed does not serve the destination desired.  This cause is supported on a
network-dependent basis.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 4 @i{Send special information tone}.
This cause indicates that the calling party cannot be reached for reasons that are of a long term
nature and that the special information tone should be returned to the calling party.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 5 @i{Misdialled trunk prefix}.
@strong{This cause value is not used for US networks.}

This cause value can be contained in (and will trigger) a @msg{404 Not Found} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 8 @i{Preemption}.
This cause indicates that the call is being preempted.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 9 @i{Preemption - circuit reserved for reuse}.
This cuase indicates that the call is being preempted and the circuit is reserved for reuse by the
preempting exchange.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 16 @i{Normal call clearing}.
This cause is used to indicate that the call is being cleared because one of the users involved in
the call has requested that the call be cleared.  Under normal sitations, the source of this cause
is not the network.

This cause value is indicated by (or triggers) a @msg{BYE} or @msg{CANCEL} request.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 17 @i{User busy}.
This cause is used to indicate that the called party is unable to accept another call because the
user busy condition has been encountered.  This cuase value may be generated by the called user or
by the network.  In the case of user determined user busy, it is noted that the user equipment is
compatible with the call.

This cause value is used whenever a @msg{486 Busy Here} response is received.
This cause value can be contained in (and will trigger) a @msg{486 Busy Here} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 18 @i{No user responding}.
This cause is used when a called party does not response to a call establishment message with either
an alerting or connect indication within the prescribed period of time allocated.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 19 @i{No answer from user (user alerted)}.
This value is used when the called party has been alterted but does not response with a connect
indication within the prescribed period of time.  Note - this cause is not necessarily generated by
Q.931 procedures but may be generated by internal network timers.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 20 @i{Subscriber absent}.
This cause value is used when a mobile station has logged off, radio contact is not obtained with a
mobile station or if a personal telecommunication user is temporarily not addressable by any
user-network interface.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 21 @i{Call rejected}.
This cause indicates that the equipment sending this cause does not wish to accept this call,
although it could have been accepted the call because the equipment sending this cause is neither
busy nor incompatible.  This cause may also be generated by the network, indicating that the call
was cleared due to a supplementary service constraint.  The diagnostic field may contain additional
information about the supplementary service and reason for rejection.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 22 @i{Number changed}.
This cause is returned to a calling party when the called party number indicated by the calling
party is no longer assigned.  The new called party number may optionally be included in the
diagnostic field.  If a network does not support this cause value, cause number 1, unallocated
(unassigned) number shall be used.

This cause value is used whenever a @msg{410 Gone} response is received.
This cause value is used whenever a @msg{301 Moved Permanently} response is received.  The
@strong{tel} URI contained in the @prim{Contact} header contains the new number.
This cause value can be contained in (and will trigger) a @msg{410 Gone} or @msg{301 Moved
Permanently} response (depending upon whether the number is present).
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 23 @i{Redirect to new destination}.
This cause is used by a general ISUP protocol mechanism that can be invoked by an exchange that
decides that the call should be set up to a different called number.  Such an exchange can invoke a
redirect mechanism, bu use of this cause value, to request a preceding exchange involved in the call
to route the call to the new number.

This cause value is used whenever a @msg{302 Moved Temporarily} response is received.  The
@strong{tel} URI contained in the @prim{Contact} header contains the new number.
This cause value can be contained in (and will trigger) a @msg{302 Moved Temporarily} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 27 @i{Destination out of order}.
This cause indicates that the destination indicated by the user can not be reached because the
interface to the destination is not functioning correctly.  The term "not functioning correctly"
indicates that a signaling message was unable to be delivered to the remote party.  For example, a
physical layer or data link layer failure at the remote party, or user equipment off-line.

This cause value is used whenever a @msg{502 Bad Gateway} response is received.
This cause value can be contained in (and will trigger) a @msg{502 Bad Gateway} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 28 @i{Invalid number format (address incomplete)}.
This cause indicates that the called party cannot be reached because the called party number is not
in a valid format or is not complete.  Note - this condition may be determined immediately after the
reception of an ST signal, or on time-out after the last received digit.

This cause value is used whenever a @msg{484 Address Incomplete} response is received.
This cause value can be contained in (and will trigger) a @msg{484 Address Incomplete} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 29 @i{Facility rejected}.
This cause is returned when a supplementary service requiested by the user cannot be provided by the
network.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 31 @i{Normal, unspecified}.
This cause is used to report a normal event only when no other cause in the normal class applies.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 34 @i{No circuit/channel available}.
This cause indicates that there is no appropriate circuit/channel presently available to handle the
call.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 38 @i{Network out of order}.
This cause indicates that the network is not functioning correctly and that the condition is likely
to last a relatively long period of time; for example, immediately re-attempting the call is not
likely to be successful.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 41 @i{Temporary failure}.
Thie cause indicates that the network is not functioning correctly and that the condition is not
likely to last a long period of time; for example, the user may wish to try another call attempt
almost immediately.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 42 @i{Switching equipment congestion}.
This cause indicates that the switching equipment generating this cause is experiencing a period of
high traffic.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 43 @i{Access information discarded}.
THis cause indicates that the network could not deliver access information to the remote user as
requested; that is, user-to-user information, low layer compatibilty, high layer compatibility, or
sub-address, as indicated in the diagnostic.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 44 @i{Requested circuit/channel not available}.
This cause is returned when the circuit or channel indicated by the requesting entity cannot be
provided by the other side of the interface.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 46 @i{Precedence call blocked}.
This cause indicates that there are no preemptable circuits or that the called user is busy with a
call of equal or higher preemptable level.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 47 @i{Resource unavailable, unspecified}.
This cause is used to report a resource unavailable event only when no other cause in the resource
unavailable class applies.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is expected to generate this cause value under appropriate conditions.

@item ITU-T Q.850 Cause 50 @i{Requested facility not subscribed}.
This cause indicates that the user has requested a supplementary service which is implemented by the
equipment which generated the cause, but the user is not authorized to use.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 53 @i{Outgoing calls barred within CUG}.
@strong{This cause value is not used in US networks.}

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 55 @i{Incoming calls barred within CUG}.
@strong{This cause value is not used in US networks.}

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 57 @i{Bearer capability not authorized}.
This cause indicates that the user has requested a bearer capability which is implemented by the
equipment which generated this cause but the user is not authorized to use.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 58 @i{Bearer capability not presently available}.
This cause indicates that the user has requested a bearer capability which is implemented by the
equipment which generated this cause but which is not available at this time.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 62 @i{Inconsistency in designated outgoing access information and subscriber class}.
This cause indicates that there is an inconsistency in the designated outgoing access information
and subscriber class.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 63 @i{Service or option not available, unspecified}.
This cause is used to report a service or option not available event only when no other cause in the
service or option not available class applies.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 65 @i{Bearer capability not implemented}.
This cause indicates that the equipment sending this cause does not support the bearer capability
requested.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 69 @i{Requested facility not implemented}.
This cause indicates that the equipment sending this cause does not support the requested
supplementary service.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 70 @i{Only restricted digital information bearer capability is available}.
This cause indicates taht the calling party has requested an unrestricted bearer service but that
the equipment sending this cause only supports the restricted version of the requested bearer
capability.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 79 @i{Service or option not implemented, unspecified}.
This cause is used to report a service or option not implemented event only when no other cause in
the service or option not implemented class applies.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable} or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 87 @i{User not member of CUG}.
@strong{This cause value is not used in US networks.}

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 88 @i{Incompatible destination}.
This cause indicates that the equipment sending this cause has received a request to establish a
call which has low layer compatibility, high layer compatibility, or other attributes (e.g. data
rate) which cannot be accommodated.

This cause value can be contained in a @msg{500 Server Internal Error}, @msg{606 Not Acceptable}, or
@msg{488 Not Acceptable} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 90 @i{Non-existent CUG}.
@strong{This cause value is not used in US networks.}

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 91 @i{Invalid transit network selection}.
This cause value indicates that a transit network identification was received which is of an
incorrect format as defined in Annex C of T1.607.

This cause value can be contained in (and will trigger) a @msg{404 Not Found} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 95 @i{Invalid message, unspecified}.
This cause is used to report an invalid message event only when no other cause in the invalid
message class applies.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 97 @i{Message type non-existent or not implemented}.
This cause indicates that the equipment sending this cause has received a message with amessage type
it does not recognize either because this is a message not defined or defined but not implemented by
the equipment sending this cause.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 99 @i{Information element/Paramter non-existent or not implemented}.
This cause indicates that the equipment sending this cause has received a message which includes
information elements or parameters not recognized because the information element identifiers or
parameter names are not defined or are defined but not implemented by the equipment sending the
cause.  This cause indicates that the information elements or parameters were discarded.  However,
the information element is not required to be present in the message for the equipment sending the
cause to process the message.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 102 @i{Recovery on timer expiry}.
This cause indicates that a procedure has been initiated by the expiry of a timer in association
with error handling procedures.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 103 @i{Parameter non-existent or not implemented - passed on}.
This cause indicates that the equipment sending this cause has received a message that includes
parameter not recognized because the parameters are defined but not implemented by the equipment
sending the cause.  The cause indicates that the parameters were ignored.  In addition, if the
equipment sending this cause is an intermediate point, then this cause indicates that the parameters
were passed on unchanged.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 110 @i{Message with unrecognized parameter discarded}.
This cause indicates that the equipment sending this cause has discarded a received message that
includes a parameter that is not recognized.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 111 @i{Protocol error, unspecified}.
This cause is used to report a protocol error event only when no other cause in the protocol error
class applies.

This cause value can be contained in (and will trigger) a @msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ITU-T Q.850 Cause 127 @i{Interworking, unspecified}.
This cause indicates that there has been interworking with a network that does not provide causes
for actions it takes.  Thus, the precise cause for a message which is being sent cannot be
ascertained.
This cause value will be send to the ISUP network whenever a @msg{4xx} or @msg{5xx} response is
received with no @prim{Reason} header containing an @pval{ANSI} or @pval{Q.850} header value, and
the @msg{4xx} or @msg{5xx} message does not directly map to an @pval{ANSI} or @pval{Q.850} cause
value.

This cause value can be contained in (and will trigger) a @msg{480 Temporarily Unavailable} response.
The @i{C-SCP} is not expected to generate this cause value.
@end itemize

@itemize
@item ANSI T1.113/2000 Cause 23 @i{Unallocated destination number}.
This cause indicates failure of a business group call because the destination number is unallocated
in the business group numbering plan.

This cause value can be contained in (and will trigger) a @msg{404 Not Found} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ANSI T1.113/2000 Cause 24 @i{Unknown business group}.
This cause indicates failure of a business group call because the business group identifier is
unknown.

This cause value can be contained in (and will trigger) a @msg{404 Not Found} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ANSI T1.113/2000 Cause 25 @i{Exchange routing error}.
This cause indicates that the called party cannot be reached because of an error in exchange number
translation tables used to route the call (results when the hop counter parameter value is
decremented to 0).

This cause value will be used whenever a @msg{483 Too Many Hops} response or a @msg{482 Loop
Detected} response is received.
This cause value can be contained in a @msg{483 Too Many Hops}, @msg{482 Loop Detected}, or @msg{480
Temporarily Unavailable} response, and will trigger a @msg{480 Temporarily Unavailable} response.

@item ANSI T1.113/2000 Cause 26 @i{Misrouted call to a ported number}.
This cause indicates that the called party cannot be reached because the "ported number" in the
generic address parameter identifies a called party that is not served by the exchange.

This cause value can be contained in a @msg{500 Server Internal Error} response or a @msg{404 Not
Found} response, and will trigger a @msg{500 Server Internal Error} response.
The @i{C-SCP} must generate this cause value under appropriate conditions.

@item ANSI T1.113/2000 Cause 27 @i{Number portability Query on Release (QoR) number not found}.
@strong{This cause value is not used in US networks.}

This cause value can be contained in a @msg{500 Server Internal Error} response, and will trigger a
@msg{500 Server Internal Error} response.
The @i{C-SCP} must generate this cause value under appropriate conditions.

@item ANSI T1.113/2000 Cause 45 @i{Preemption}.
@strong{This cause value is not used in US networks.}
This cause indicates that the equipment sending this cause has preempted the circuit for a new call
and the existing call should be cleared.

This cause value can be contained in a @msg{500 Server Internal Error} response, and will trigger a
@msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ANSI T1.113/2000 Cause 46 @i{Precedence call blocked}.
@strong{This cause value is not used in US networks.}
In case of a call with a precedence level higher than the lowest level (ROUTINE), this cause
indicates that all circuits are busy on calls of equal or higher priority.

This cause value can be contained in a @msg{500 Server Internal Error} response, and will trigger a
@msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ANSI T1.113/2000 Cause 51 @i{Call type incompatible with service request}.
This cause indicates that an action was rejected because it was not comaptible with the bearer
capability of the call.

This cause value can be contained in a @msg{500 Server Internal Error} response, and will trigger a
@msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.

@item ANSI T1.113/2000 Cause 54 @i{Call blocked due to group restrictions}.
This cause indicates failure of a business group call because it did not pass line privileges and/or
subgroup screening.

This cause value can be contained in a @msg{500 Server Internal Error} response, and will trigger a
@msg{500 Server Internal Error} response.
The @i{C-SCP} is not expected to generate this cause value.
@end itemize

@node Default SIP Response to Cause Value Mapping
@subsection Default SIP Response to Cause Value Mapping

When the @cite{Optranex 248} gateway switch receives a SIP @msg{4xx}, @msg{5xx}, or @msg{6xx}
response to an @msg{INVITE} message sent to the SIP network, and the @prim{Via} headers do not
indicate that the response was generated by the @i{C-SCP} platform, the SIP response will be mapped
to a default cause value associated with the response type.

@itemize
@ignore
@item @msg{300 Multiple Choices}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@end ignore
@item @msg{301 Moved Permanently}
The cause value ITU-T Q.850 Cause 22 @i{Number changed} will be assigned.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@item @msg{302 Moved Temporarily}
The cause value ITU-T Q.850 Cause 23 @i{Redirect to new destination} will be assigned.
Should the @prim{Contact} header not be decipherable as a valid @strong{tel} URI, the cause value
ITU-T Q.850 Cause 1 @i{Unallocated (unassigned) number} will be assigned instead.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@ignore
@item @msg{303 Proxy Redirect}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@item @msg{305 Use Proxy}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@item @msg{380 Alternative Service}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@end ignore
@item @msg{3xx}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned when an
unrecognized @msg{3xx} message or a @msg{3xx} message for which no default is assigned is received.
It is not expected that the @cite{Optranex 248} switch will receive @msg{3xx} class messages.
@msg{3xx} class messages should be intercepted by the @cite{Carrier Proxy}.

@ignore
@item @msg{400 Bad Request}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{401 Unauthorized}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{402 Payment Required}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{403 Forbidden}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{404 Not Found}
The cause value ITU-T Q.850 Cause 1 @i{Unallocated (unassigned) number} will be assigned.

@ignore
@item @msg{405 Method Not Allowed}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{406 Not Acceptable}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{407 Proxy Authentication Required}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{408 Request Timeout}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{410 Gone}
The cause value ITU-T Q.850 Cause 22 @i{Number Changed} will be assigned.

@ignore
@item @msg{413 Request Entity Too Large}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{414 Request-URI Too Long}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{415 Unsupported Media Type}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{416 Unsupported URI Scheme}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{420 Bad Extension}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{421 Extension Required}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{423 Interval Too Brief}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{480 Temporarily Unavailable}
The cause value ITU-T Q.850 Cause 20 @i{Subscriber absent} or ITU-T Q.850 Cause 21 @i{Call rejected}
will be assigned.

@ignore
@item @msg{481 Call/Transaction Does Not Exist}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{482 Loop Detected}
The cause value ITU-T Q.850 Cause 25 @i{Exchange routing error} will be assigned.

@item @msg{483 Too Many Hops}
The cause value ITU-T Q.850 Cause 25 @i{Exchange routing error} will be assigned.

@item @msg{484 Address Incomplete}
The cause value ITU-T Q.850 Cause 28 @i{Invalid number format (address incomplete)} will be assigned.

@ignore
@item @msg{485 Ambiguous}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{486 Busy Here}
The cause value ITU-T Q.850 Cause 17 @i{User busy} will be assigned.

@ignore
@item @msg{487 Request Terminated}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{488 Not Acceptable Here}
The cause value ITU-T Q.850 Cause 63 @i{Service or option not available, unspecified} will be assigned.

@ignore
@item @msg{491 Request Pending}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{493 Undecipherable}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{4xx}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned when an
unrecognized @msg{4xx} message or a @msg{4xx} message for which no default is assigned is received.

@item @msg{500 Server Internal Error}
The cause value ITU-T Q.850 Cause 38 @i{Network out of order}  will be assigned.

@ignore
@item @msg{501 Not Implemented}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{502 Bad Gateway}
The cause value ITU-T Q.850 Cause 27 @i{Destination out of order} will be assigned.

@item @msg{503 Service Unavailable}
The cause value ITU-T Q.850 Cause 41 @i{Temporary failure}  will be assigned.

@ignore
@item @msg{504 Server Time-out}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{505 Version Not Supported}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@item @msg{513 Message Too Large}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{5xx}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned when an
unrecognized @msg{5xx} message or a @msg{5xx} message for which no default is assigned is received.

@ignore
@item @msg{600 Busy Everywhere}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned.

@end ignore
@item @msg{603 Decline}
The cause value ITU-T Q.850 Cause 21 @i{Call rejected} will be assigned.

@item @msg{604 Does Not Exist Anywhere}
The cause value ITU-T Q.850 Cause 1 @i{Unassigned (unallocated) number} will be assigned.

@item @msg{606 Not Acceptable}
The cause value ITU-T Q.850 Cause 63 @i{Service or option not available, unspecified} will be assigned.

@item @msg{6xx}
The cause value ITU-T Q.850 Cause 127 @i{Interworking, unspecified} will be assigned when an
unrecognized @msg{6xx} message or a @msg{6xx} message for which no default is assigned is received.
@end itemize

@node Programmatic Interfaces
@appendix Programmatic Interfaces
@cindex Programmatic interfaces

@node Platform Sizing
@appendix Platform Sizing
@cindex Platform sizing

@node Bibliography
@unnumbered Bibliography

@section Requests For Comment

@enumerate
@item @uref{http://tools.ietf.org/html/rfc3261, RFC 3261}, SIP: Session Initiation Protocol
@item @uref{http://tools.ietf.org/html/rfc3311, RFC 3311}, The SIP UPDATE Method
@item @uref{http://tools.ietf.org/html/rfc3372, RFC 3372}, Session Initiation Protocol (SIP) for Telephones (SIP-T): Context and Architectures
@item @uref{http://tools.ietf.org/html/rfc3398, RFC 3398}, Integrated Services Digital Network (ISDN) User Part (ISUP) to Session Initiation Protocol (SIP) Mapping
@item @uref{http://tools.ietf.org/html/rfc3487, RFC 3487}, Requirements for Resource Priority Mechanisms for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3666, RFC 3666}, Session Initiation Protocol (SIP) Public Switched Telephone Network (PSTN) Call Flows
@item @uref{http://tools.ietf.org/html/rfc3910, RFC 3910}, The SPIRITS (Services in PSTN requesting Internet Services) Protocol
@item @uref{http://tools.ietf.org/html/rfc3966, RFC 3966}, The tel URI for Telephone Numbers
@item @uref{http://tools.ietf.org/html/rfc4190, RFC 4190}, Framework for Supporting Emergency Telecommunications Services (ETS) in IP Telephony
@item @uref{http://tools.ietf.org/html/rfc4780, RFC 4780}, SIP MIB Modules
@item @uref{http://tools.ietf.org/html/rfc4904, RFC 4904}, Representing Trunk Groups in tel/sip Uniform Resource Identifiers (URIs)
@item @uref{http://tools.ietf.org/html/rfc4958, RFC 4958}, A Framework for Supporting Emergency Telecommunications Services (ETS) within a Single Administrative Domain
@item @uref{http://tools.ietf.org/html/rfc5118, RFC 5118}, Session Initiation Protocol (SIP) Torture Test Messages for Internet Protocol Version 6 (IPv6)
@item @uref{http://tools.ietf.org/html/rfc5411, RFC 5411}, The Hitchhiker's Guide to the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3263, RFC 3263}, Locating SIP Servers
@item @uref{http://tools.ietf.org/html/rfc3264, RFC 3264}, An Offer/Answer Model with the Session Description Protocol
@item @uref{http://tools.ietf.org/html/rfc3265, RFC 3265}, SIP-Specific Event Notification
@item @uref{http://tools.ietf.org/html/rfc3325, RFC 3325}, Private Extensions to SIP for Asserted Identity within Trusted Networks
@item @uref{http://tools.ietf.org/html/rfc3327, RFC 3327}, SIP Extension Header Field for Registering Non-Adjacent Contacts
@item @uref{http://tools.ietf.org/html/rfc3581, RFC 3581}, An Extension to SIP for Symmetric Response Routing
@item @uref{http://tools.ietf.org/html/rfc3840, RFC 3840}, Indicating User Agent Capabilities in SIP
@item @uref{http://tools.ietf.org/html/rfc4320, RFC 4320}, Actions Addressing Issues Identified with the Non-INVITE Transaction in SIP
@item @uref{http://tools.ietf.org/html/rfc4474, RFC 4474}, Enhancements for Authenticated Identity Management in SIP
@item @uref{http://tools.ietf.org/html/rfc4916, RFC 4916}, Connected Identity in the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3311, RFC 3311}, The SIP UPDATE Method
@item @uref{http://tools.ietf.org/html/rfc3665, RFC 3665}, Session Initiation Protocol (SIP) Basic Call Flow Examples
@item @uref{http://tools.ietf.org/html/rfc2848, RFC 2848}, The PINT Service Protocol
@item @uref{http://tools.ietf.org/html/rfc3910, RFC 3910}, The SPIRITS Protocol
@item @uref{http://tools.ietf.org/html/rfc3372, RFC 3372}, SIP for Telephones (SIP-T)
@item @uref{http://tools.ietf.org/html/rfc3398, RFC 3398}, ISUP to SIP Mapping
@item @uref{http://tools.ietf.org/html/rfc4497, RFC 4497}, Interworking between the Session Initiation Protocol (SIP) and QSIG
@item @uref{http://tools.ietf.org/html/rfc3578, RFC 3578}, Mapping of ISUP Overlap Signaling to SIP
@item @uref{http://tools.ietf.org/html/rfc3960, RFC 3960}, Early Media and Ringtone Generation in SIP
@item @uref{http://tools.ietf.org/html/rfc5009, RFC 5009}, Private Header (P-Header) Extension to the Session Initiation Protocol (SIP) for Authorization of Early Media
@item @uref{http://tools.ietf.org/html/rfc3959, RFC 3959}, Early Session Disposition Type for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3204, RFC 3204}, MIME Media Types for ISUP and QSIG Objects
@item @uref{http://tools.ietf.org/html/rfc3666, RFC 3666}, Session Initiation Protocol (SIP) Public Switched Telephone Network (PSTN) Call Flows
@item @uref{http://tools.ietf.org/html/rfc3262, RFC 3262}, Reliability of Provisional Responses in SIP
@item @uref{http://tools.ietf.org/html/rfc3323, RFC 3323}, A Privacy Mechanism for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc2976, RFC 2976}, The INFO Method
@item @uref{http://tools.ietf.org/html/rfc3326, RFC 3326}, The Reason Header Field for SIP
@item @uref{http://tools.ietf.org/html/rfc3388, RFC 3388}, Grouping of Media Lines in the Session Description Protocol
@item @uref{http://tools.ietf.org/html/rfc3420, RFC 3420}, Internet Media Type message/sipfrag
@item @uref{http://tools.ietf.org/html/rfc3608, RFC 3608}, SIP Extension Header Field for Service Route Discovery During Registration
@item @uref{http://tools.ietf.org/html/rfc3841, RFC 3841}, Call Preferences for SIP
@item @uref{http://tools.ietf.org/html/rfc4028, RFC 4028}, Session Timers in SIP
@item @uref{http://tools.ietf.org/html/rfc4168, RFC 4168}, SCTP as a Transport for SIP
@item @uref{http://tools.ietf.org/html/rfc4244, RFC 4244}, An Extension to SIP for Request History Information
@item @uref{http://tools.ietf.org/html/rfc3515, RFC 3515}, The REFER Method
@item @uref{http://tools.ietf.org/html/rfc3725, RFC 3725}, Best Current Practices for Third Party Call Control
@item @uref{http://tools.ietf.org/html/rfc3911, RFC 3911}, The SIP Join Header Field
@item @uref{http://tools.ietf.org/html/rfc3891, RFC 3891}, The SIP Replaces Header
@item @uref{http://tools.ietf.org/html/rfc3892, RFC 3892}, The SIP Referred-By Mechanism
@item @uref{http://tools.ietf.org/html/rfc4117, RFC 4117}, Transcoding Services Invocation in SIP Using Third Party Call Control
@item @uref{http://tools.ietf.org/html/rfc4730, RFC 4730}, A SIP Event Package for Key Press Stimulus (KPML)
@item @uref{http://tools.ietf.org/html/rfc4733, RFC 4733}, RTP Payload for DTMF Digits, Telephone Tones, and Telephony Signals
@item @uref{http://tools.ietf.org/html/rfc3087, RFC 3087}, Control of Service Context using Request URI
@item @uref{http://tools.ietf.org/html/rfc4662, RFC 4662}, A SIP Event Notification Extension for Resource Lists
@item @uref{http://tools.ietf.org/html/rfc5363, RFC 5363}, Framework and Security Considerations for Session Initiation Protocol (SIP) Uniform Resource Identifier (URI)-List Services
@item @uref{http://tools.ietf.org/html/rfc5367, RFC 5367}, Subscriptions To Request-Contained Resource Lists in SIP
@item @uref{http://tools.ietf.org/html/rfc5365, RFC 5365}, Multiple-Recipient MESSAGE Requests in SIP
@item @uref{http://tools.ietf.org/html/rfc5366, RFC 5366}, Conference Establishment Using Request-Contained Lists in SIP
@item @uref{http://tools.ietf.org/html/rfc4240, RFC 4240}, Basic Network Media Services with SIP
@item @uref{http://tools.ietf.org/html/rfc4458, RFC 4458}, Session Initiation Protocol (SIP) URIs for Applications such as Voicemail and Interactive Voice Response (IVR)
@item @uref{http://tools.ietf.org/html/rfc3312, RFC 3312}, Integration of resource management and Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3313, RFC 3313}, Private Session Initiation Protocol (SIP) Extensions for Media Authorization
@item @uref{http://tools.ietf.org/html/rfc3323, RFC 3323}, A Privacy Mechanism for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3325, RFC 3325}, Private Extensions to the Session Initiation Protocol (SIP) for Network Asserted Identity within Trusted Networks
@item @uref{http://tools.ietf.org/html/rfc3326, RFC 3326}, The Reason Header Field for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3329, RFC 3329}, Security Mechanism Agreement for the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3455, RFC 3455}, Private Header (P-Header) Extensions to the Session Initiation Protocol (SIP) for the 3rd Generation Partnership Program (3GPP)
@item @uref{http://tools.ietf.org/html/rfc4032, RFC 4032}, Update to the Session Initiation Protocol (SIP) Preconditions Framework
@item @uref{http://tools.ietf.org/html/rfc3603, RFC 3603}, Private Session Initiation Protocol (SIP) Proxy-to-Proxy Extensions for Supporting the PacketCable Distributed Call Signaling Architecture
@item @uref{http://tools.ietf.org/html/rfc4457, RFC 4457}, The Session Initiation Protocol (SIP) P-User-Database Private-Header (P-header)
@item @uref{http://tools.ietf.org/html/rfc5002, RFC 5002}, The Session Initiation Protocol (SIP) P-Profile-Key Private Header (P-Header)
@item @uref{http://tools.ietf.org/html/rfc4967, RFC 4967}, Dial String Parameter for the Session Initiation Protocol Uniform Resource Identifier
@item @uref{http://tools.ietf.org/html/rfc5009, RFC 5009}, Private Header (P-Header) Extension to the Session Initiation Protocol (SIP) for Authorization of Early Media
@item @uref{http://tools.ietf.org/html/rfc4964, RFC 4964}, The P-Answer-State Header Extension to the Session Initiation Protocol for the Open Mobile Alliance Push to Talk over Cellular
@item @uref{http://tools.ietf.org/html/rfc4504, RFC 4504}, SIP Telephone Device Requirements
@item @uref{http://tools.ietf.org/html/rfc4694, RFC 4694}, Number Portablity Parameters for the "tel" URI
@item @uref{http://tools.ietf.org/html/rfc3824, RFC 3824}, Using E.164 Numbers with the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/rfc3324, RFC 3324}, Short Term Requirements for Network Asserted Identity
@item @uref{http://tools.ietf.org/html/rfc2915, RFC 2915}, The Naming Authority Pointer (NAPTR) DNS Resource Record
@item @uref{http://tools.ietf.org/html/rfc2782, RFC 2782}, A DNS RR for specifying the location of services (DNS SRV)
@end enumerate

@section Internet-Drafts

@enumerate
@item @uref{http://tools.ietf.org/html/draft-patel-dispatch-cpc-oli-parameter-02, draft-patel-dispatch-cpc-oli-parameter-02}, Uniform Resource Identifier (URI) Parameters for indicating the Calling Party's Category and Originating Line Identity.
@item @uref{http://tools.ietf.org/html/draft-yu-tel-dai-08, draft-yu-tel-dai-08}, DAI Parameter for the "tel" URI
@item @uref{http://tools.ietf.org/html/draft-johnston-sipping-cc-uui-08, draft-johnston-sipping-cc-uui-08}, Transporting User to User Information for Call Centers using SIP
@item @uref{http://tools.ietf.org/html/draft-ietf-bliss-call-completion-05, draft-ietf-bliss-call-completion-05}, Call Completion for Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/draft-alexeitsev-bliss-alert-info-urns-02, draft-alexeitsev-bliss-alert-info-urns-02}, Alert-Info header URNs for Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/draft-jesske-dispatch-reason-in-reponses-01, draft-jesske-dispatch-reason-in-reponses-01}, Use of the Reason header field in Session Initiation Protocol (SIP) responses
@item @uref{http://tools.ietf.org/html/rfc5626, rfc5626}, Managing Client Initiated Connections in the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/draft-york-sipping-p-charge-info-07, draft-york-sipping-p-charge-info-07}, P-Charge-Info - A Private Header (P-Header) Extension to the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/draft-ietf-sipping-update-pai-09, draft-ietf-sipping-update-pai-09}, Updates to Asserted Identity in the the Session Initiation Protocol (SIP)
@item @uref{http://tools.ietf.org/html/draft-ietf-speermint-srv-naptr-use-06, draft-ietf-speermint-srv-naptr-use-06}, Use of DNS SRV and NAPTR Records for SPEERMINT
@end enumerate

@section GSMA

@enumerate
@item IR.67 - DNS/ENUM Guidelnies for Service Providers & GRX/IPX Providers, Version 4.0, December 10, 2009, GSM Association.
@item IR.83 - SIP-I Interworking Description, Version 1.0, February 17, 2009, GSM Association.
@end enumerate

@section SFF Comittee

@enumerate
@item INF-8074i, SFP (Small Formfactor Pluggable) Transciever MultiSource Agreement (MSA), Revision 1.0, May 12, 2001.
@item SFF-8075, PCI Card Version of SFP Cage, Revision 1.0, July 3, 2001.
@item SFF-8079, SFP Rate and Application Selection, Revision 1.7, February 2, 2005.
@item SFF-8089, SFP (Small Formfactor Pluggable) Rate and Application Codes, February 3, 2005.
@item SFF-8412, HSOI (High Speed Optical Interconnect) Measurement and Performance Requirements for Passive Optical Connections, Revision 12.2, June 18, 2003.
@item SFF-8431, Enhanced Small Form Factor Pluggable Module SFP+, Revision 4.1, July 6, 2009.
@item SFF-8432, Improved Pluggable Formfactor, Revision 5.0, July 16, 2007.
@item SFF-8433, Improved Pluggable Formfactor (IPF) for SFP+ Ganged Cages, Revision 0.7, June 5, 2009.
@item SFF-8439, SFP-S (System module), Revision 0.3, November 22, 2007.
@item SFF-8443, Stacked Cages for IPF Modules, Revision 0.1, March 31, 2008.
@item SFF-8461, SFP+ Active Cable Specifications and Alternate Test Methods, Revision 0.1, August 21, 2009.
@item SFF-8472, Diagnostic Monitoring Interface for Optical Transceivers, Revision 10.4, January 30, 2009.
@end enumerate

@node Licenses
@unnumbered Licenses

All code presented in this manual is licensed under the @ref{GNU Affero General Public License}.
The text of this manual is licensed under the @ref{GNU Free Documentation License}, with no
@dfn{Invariant Sections}, no @dfn{Front-Cover Texts} and no @dfn{Back-Cover Texts}.  Please note,
however, that it is just plain wrong to modify statements of, or attribute statements to, the
Author, @cite{OpenSS7 Corporation}, @cite{Monavacon Limited} or @cite{Optranex Technologies
Ltd}.

@menu
* GNU Affero General Public License::
* GNU General Public License::
* GNU Lesser General Public License Version 2.1::
* GNU Free Documentation License::
@end menu

@include texi/agpl3.texi
@page
@include texi/gpl3.texi
@page
@include texi/lesser.texi
@page
@include texi/fdl13.texi

@ifnotplaintext
@c skip indexes for plain text (regex search works better)
@node Index
@unnumbered Index
@c concatenate indices easy use with html and info
@printindex cp
@end ifnotplaintext

@page
@shortcontents
@page
@contents
@bye
