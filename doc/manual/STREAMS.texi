\input texinfo
@c -*- texinfo -*- vim: ft=texinfo tw=100 nocin nosi noai
@c =========================================================================
@c
@c @(#) doc/manual/STREAMS.texi
@c
@c =========================================================================
@c
@c Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
@c Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
@c Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
@c
@c All Rights Reserved.
@c
@c Permission is granted to copy, distribute and/or modify this document
@c under the terms of the GNU Free Documentation License, Version 1.3 or
@c any later version published by the Free Software Foundation; with no
@c Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
@c copy of the license is included in the section entitled "GNU Free
@c Documentation License".
@c
@c Permission to use, copy and distribute this documentation without
@c modification, for any purpose and without fee or royalty is hereby
@c granted, provided that both the above copyright notice and this
@c permission notice appears in all copies and that the name of OpenSS7
@c Corporation not be used in advertising or publicity pertaining to
@c distribution of this documentation or its contents without specific,
@c written prior permission.  OpenSS7 Corporation makes no representation
@c about the suitability of this documentation for any purpose.  It is
@c provided "as is" without express or implied warranty.
@c 
@c Permission is granted to process this file through Tex and print the
@c results, provided the printed document carries copying permission notice
@c identical to this one except for the removal of this paragraph (this
@c paragraph not being relevant to the printed manual).
@c 
@c OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
@c DOCUMENTATION INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY,
@c FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE
@c CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE
@c IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY
@c PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN NO EVENT SHALL
@c OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR
@c CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
@c USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
@c OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
@c THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS
@c THEREOF.
@c 
@c Since the Linux kernel and libraries are constantly changing, this
@c manual page may be incorrect or out-of-date.  The author(s) assume no
@c responsibility for errors or omissions, or for damages resulting from
@c the use of the information contained herein.  The author(s) may not have
@c taken the same level of care in the production of this manual, which is
@c licensed free of charge, as they might when working professionally.
@c 
@c Formatted or processed versions of this manual, if unaccompanied by the
@c source, must acknowledge the copyright and authors of this work.
@c
@c -------------------------------------------------------------------------
@c
@c U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
@c on behalf of the U.S. Government ("Government"), the following
@c provisions apply to you.  If the Software is supplied by the Department
@c of Defense ("DoD"), it is classified as "Commercial Computer Software"
@c under paragraph 252.227-7014 of the DoD Supplement to the Federal
@c Acquisition Regulations ("DFARS") (or any successor regulations) and the
@c Government is acquiring only the license rights granted herein (the
@c license rights customarily provided to non-Government users).  If the
@c Software is supplied to any unit or agency of the Government other than
@c DoD, it is classified as "Restricted Computer Software" and the
@c Government's rights in the Software are defined in paragraph 52.227-19
@c of the Federal Acquisition Regulations ("FAR") (or any successor
@c regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
@c NASA Supplement to the FAR (or any successor regulations).
@c
@c =========================================================================
@c 
@c Commercial licensing and support of this software is available from
@c OpenSS7 Corporation at a fee.  See http://www.openss7.com/
@c 
@c =========================================================================
@c

@setfilename STREAMS.info
@include ../../scripts/texi/args.texi
@set MANUAL_TITLE @value{PACKAGE_TITLE}
@set MANUAL_TYPE Installation and Reference Manual
@settitle @value{MANUAL_TITLE}

@dircategory STREAMS
@direntry
* STREAMS: (STREAMS).			Linux Fast-STREAMS.
@end direntry

@include ../../scripts/texi/args.texi
@set MANUAL_TITLE @value{PACKAGE_TITLE}
@set MANUAL_TYPE Installation and Reference Manual

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file provides the @value{MANUAL_TYPE} for @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of the
@cite{@value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version @value{PACKAGE_VERSION}
Release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}.

Copyright @copyright{} 2008-2015  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2001  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

All Rights Reserved.

Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation} not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  @cite{OpenSS7 Corporation} makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed
document carries copying permission notice identical to this one except for the removal of this
paragraph (this paragraph not being relevant to the printed manual).

@end ignore
OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT
THE CONTENTS OF THE DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.  IN
NO EVENT SHALL OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF
THIS DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.
@end ifinfo

@include ../../scripts/texi/args.texi
@set MANUAL_TITLE @value{PACKAGE_TITLE}
@set MANUAL_TYPE Installation and Reference Manual

@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 1
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@subtitle Updated @value{PACKAGE_PDATE}
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2008-2015  Monavacon Limited
@subtitle All Rights Reserved.
@sp 4
@quotation
@chapheading Abstract:
This document is a @value{MANUAL_TYPE} containing technical details concerning the implementation of
the @value{MANUAL_TITLE} for OpenSS7.  It contains recommendations on software architecture as well
as platform and system applicability of the @value{MANUAL_TITLE}.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll

@chapheading Published by:

@sp 1

@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Copyright @copyright{} 2008-2015  @uref{http://www.monavacon.com/, Monavacon Limited} @*
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock} @*

@noindent
All Rights Reserved.

@sp 1

@noindent
Unauthorized distribution or duplication is prohibited.

@sp 1

@noindent
Permission is granted to copy, distribute and/or modify this document under the terms of the GNU
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
the license is included in the section entitled @ref{GNU Free Documentation License}.

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of @cite{OpenSS7 Corporation} not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  @cite{OpenSS7 Corporation} makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@chapheading Notice:

@noindent
@strong{OpenSS7 Corporation disclaims all warranties with regard to this documentation including all
implied warranties of merchantability, fitness for a particular purpose, non-infringement, or title;
that the contents of the document are suitable for any purpose, or that the implementation of such
contents will not infringe on any third party patents, copyrights, trademarks or other rights.  In
no event shall OpenSS7 Corporation be liable for any direct, indirect, special or consequential
damages or any damages whatsoever resulting from loss of use, data or profits, whether in an action
of contract, negligence or other tortious action, arising out of or in connection with any use of
this document or the performance or implementation of the contents thereof.}

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex

@include texi/macros.texi
@include texi/versions.texi

@defcodeindex op
@defcodeindex mk
@defcodeindex mp

@iftex
@shortcontents
@contents
@end iftex

@ifnottex
@node Top
@top @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@heading About This Manual
This is Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}, last updated @value{PACKAGE_DATE}, of
@cite{The @value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version
@value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} of the
@value{PACKAGE_TITLE} package.
@end ifnottex

@menu
* Preface::			Preface to this manual

* Quick Start Guide::		Quick Installation Instructions

* Introduction::		Introduction to the package
* Objectives::			Objectives of the package
* Reference::			Contents of the package
* Development::			Developing with the package
* Porting::			Porting to the package
* Conformance::			Conformance of the package
* Releases::			Releases of the package
* Installation::		Installation of the package
* Troubleshooting::		Troubleshooting of the package

* Licenses::			Copies of OpenSource Licenses

* Indices::			Index of Indices
@end menu

@c --------------------------------------------------------------------------

@node Preface
@unnumbered Preface

@menu
* Notice::			Notices for this package
* Abstract::			Abstract for this manual
* Revision History::		Revisions of this manual
* Disclaimer::			IPR Disclaimers for this package
* Acknowledgements::		Sponsors of and Contributors to the package
* Authors::			Authors of the package
* Maintainer::			Maintainers of the package
* Web Resources::		Web Resources for the package
@end menu

@node Notice
@section Notice
@cindex manual notice
@cindex licensing

This package is released and distributed under the @cite{AGPL} (@pxrefman{GNU Affero General Public
License}).  Please note, however, that there are different licensing terms for the manual pages and
some of the documentation (derived from OpenGroup@footnote{Formerly X/Open and UNIX International.}
publications and other sources).  Consult the permission notices contained in the documentation for
more information.

This manual is released under the @cite{FDL} (@pxrefman{GNU Free Documentation License}) with no
invariant sections, no front-cover texts and no back-cover texts.

@node Abstract
@section Abstract
@cindex manual abstract

This manual provides a @cite{@value{MANUAL_TYPE}} for @cite{@value{PACKAGE_TITLE}}.

@subsection Objective
@cindex manual objective

The objective of this manual is to provide a guide for the @acronym{STREAMS} programmer when
developing @acronym{STREAMS} modules, drivers and application programs for @cite{@value{PACKAGE_TITLE}}.

This guide provides information to developers on the use of the @acronym{STREAMS} mechanism at user and
kernel levels.

@acronym{STREAMS} was incorporated in UNIX System V Release 3 to augment the character input/output
(I/O) mechanism and to support development of communication services.

@acronym{STREAMS} provides developers with integral functions, a set of utility routines, and facilities
that expedite software design and implementation.

@subsection Intent
@cindex manual intent

The intent of this manual is to act as an introductory guide to the @acronym{STREAMS} programmer.  It
is intended to be read alone and is not intended to replace or supplement the
@cite{@value{PACKAGE_TITLE}} manual pages.  For a reference for writing code, the manual pages
(see @manref{STREAMS(9)}) provide a better reference to the programmer.
Although this describes the features of the @cite{@value{PACKAGE_TITLE}} package,
@uref{http://www.openss7.com/,OpenSS7 Corporation} is under no obligation to provide any software,
system or feature listed herein.

@subsection Audience
@cindex manual audience

This manual is intended for a highly technical audience.  The reader should already be familiar
with @cite{Linux} kernel programming, the @cite{Linux} file system, character devices, driver input
and output, interrupts, software interrupt handling, scheduling, process contexts, multiprocessor
locks, etc.

The guide is intended for network and systems programmers, who use the @acronym{STREAMS} mechanism at
user and kernel levels for @cite{Linux} and @cite{UNIX} system communication services.

Readers of the guide are expected to possess prior knowledge of the @cite{Linux} and @cite{UNIX}
system, programming, networking, and data communication.

@node Revision History
@section Revision History
@cindex manual revisions

Take care that you are working with a current version of this manual: you will not be notified of
updates.  To ensure that you are working with a current version, contact the
@uref{mailto:bidulock@@openss7.org,Author}, or check @uref{http://www.openss7.org/,The OpenSS7
Project} website for a current version.

A current version of this manual is normally distributed with the @cite{@value{PACKAGE_TITLE}}
package, @file{@value{PACKAGE}-@value{VERSION}}.@footnote{@url{http://www.openss7.org/repos/tarballs/@value{PACKAGE}-@value{VERSION}.tar.bz2}}


@subsection Version Control

@noindent
Although the author has attempted to ensure that the information in this document is complete and
correct, neither the Author nor OpenSS7 Corporation will take any responsibility in it.
@cite{OpenSS7 Corporation} is making this documentation available as a reference point for the
industry.  While @cite{OpenSS7 Corporation} believes that these interfaces are well defined in this
release of the document, minor changes may be made prior to products conforming to the interfaces
being made available.  @cite{OpenSS7 Corporation} reserves the right to revise this software and
documentation for any reason, including but not limited to, conformity with standards promulgated by
various agencies, utilization of advances in the state of the technical arts, or the reflection of
changes in the design of any techniques, or procedures embodied, described, or referred to herein.
@cite{OpenSS7 Corporation} is under no obligation to provide any feature listed herein.

@smallexample
@verbatim
$Log: STREAMS.texi,v $
Revision 1.1.2.3  2011-02-07 02:21:33  brian
- updated manuals

Revision 1.1.2.2  2010-11-28 13:41:16  brian
- documentation updates

Revision 1.1.2.1  2009-06-21 10:40:08  brian
- added files to new distro

@end verbatim
@end smallexample

@subsection ISO 9000 Compliance

Only the @TeX{}, texinfo, or roff source for this manual is controlled.  An opaque (printed,
postscript or portable document format) version of this manual is an @strong{UNCONTROLLED VERSION}.

@node Disclaimer
@section Disclaimer
@cindex manual disclaimer

@noindent
@strong{@cite{OpenSS7 Corporation} disclaims all warranties with regard to this documentation
including all implied warranties of merchantability, fitness for a particular purpose,
non-infringement, or title; that the contents of the manual are suitable for any purpose, or that
the implementation of such contents will not infringe on any third party patents, copyrights,
trademarks or other rights.  In no event shall @cite{OpenSS7 Corporation} be liable for any direct,
indirect, special or consequential damages or any damages whatsoever resulting from loss of use,
data or profits, whether in an action or contract, negligence or other tortious action, arising out
of or in connection with any use of this documentation or the performance or implementation of the
contents thereof.}

@subsection U.S. Government Restricted Rights

If you are licensing this Software on behalf of the U.S. Government ("Government"), the following
provisions apply to you.  If the Software is supplied by the Department of Defense ("DoD"), it is
classified as "Commercial Computer Software" under paragraph 252.227-7014 of the DoD Supplement to
the Federal Acquisition Regulations ("DFARS") (or any successor regulations) and the Government is
acquiring only the license rights granted herein (the license rights customarily provided to
non-Government users).  If the Software is supplied to any unit or agency of the Government other
than DoD, it is classified as "Restricted Computer Software" and the Government's rights in the
Software are defined in paragraph 52.227-19 of the Federal Acquisition Regulations ("FAR") (or any
successor regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to
the FAR (or any successor regulations).

@c ----------------------------------------------------------------------------

@node Acknowledgements
@section Acknowledgements
@cindex credits

@url{http://www.openss7.org/,, The OpenSS7 Project} was funded in part by:

@multitable @columnfractions .05 .95
@item @tab @bullet{} @uref{http://www.monavacon.com/, Monavacon Limited}
@item @tab @bullet{} @uref{http://www.openss7.com/, OpenSS7 Corporation}
@end multitable

Thanks to the subscribers to and sponsors of @url{http://www.openss7.org/,, The OpenSS7 Project}.
Without their support, open software like this would not be possible.

@include texi/funding.texi

@node Authors
@section Authors
@cindex authors

The authors of the @cite{@value{PACKAGE_TITLE}} package include:

@multitable @columnfractions .05 .95
@item @tab @minus{} @email{bidulock@@openss7.org, Brian Bidulock}
@end multitable

See @refman{Author Index}, for a complete listing and cross-index of authors to
sections of this manual.

@node Maintainer
@section Maintainer
@cindex maintainer

The maintainer of the @cite{@value{PACKAGE_TITLE}} package is:

@multitable @columnfractions .05 .95
@item @tab @minus{} @email{bidulock@@openss7.org, Brian Bidulock}
@end multitable

Please send bug reports to @email{@value{PACKAGE_BUGREPORT}} using the @file{send-pr} script
included in the package, only after reading the @file{BUGS} file in the release, or @xrefman{Problem
Reports}.

@node Web Resources
@section Web Resources
@cindex web resources

@include texi/mail.texi

@c ----------------------------------------------------------------------------

@node Quick Start Guide
@unnumbered Quick Start Guide
@cindex quick start guide

@include texi/quick.texi

@c ----------------------------------------------------------------------------

@node Introduction
@chapter Introduction
@cindex introduction

This manual documents the design, implementation, installation, operation and future development
schedule of the @cite{@value{PACKAGE_TITLE}} package.

@c ----------------------------------------------------------------------------

@menu
* Overview::			Overview
* Organization::		Organization
* Conventions::			Conventions
@end menu

@ignore
@node Notice
@section Notice
@cindex notice
@cindex licensing

This package is released and distributed under the @cite{AGPL} (@pxrefman{GNU Affero General Public
License}).  Please note, however, that there are different licensing terms for the manual pages and
some of the documentation (derived from OpenGroup@footnote{Formerly X/Open and UNIX International.}
publications and other sources).  Consult the permission notices contained in the documentation for
more information.

This manual is released under the @cite{FDL} (@pxrefman{GNU Free Documentation License}) with no
sections invariant.
@end ignore

@node Overview
@section Overview
@cindex overview

This manual documents the design, implementation, installation, operation and future development of
the @cite{@value{PACKAGE_TITLE}} package.

@node Organization
@section Organization of this Manual
@cindex organization

This manual is organized (loosely) into several sections as follows:

@multitable @columnfractions .50 .50
@item @cite{Introduction}.
@tab This introduction
@item @cite{Objectives}.
@tab Objectives of the package
@item @cite{Reference}.
@tab Contents of the package
@item @cite{Development}.
@tab Developing with the package
@item @cite{Porting}.
@tab Porting to the package
@item @cite{Conformance}.
@tab Conformance of the package
@item @cite{Releases}.
@tab Releases of the package
@item @cite{Installation}.
@tab Installation of the package
@item @cite{Troubleshooting}.
@tab Troubleshooting of the package
@end multitable

@node Conventions
@section Conventions and Definitions
@cindex conventions
@cindex definitions

This manual uses @cite{texinfo} typographic conventions.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Objectives
@chapter Objectives
@cindex objectives

@menu
* Background::
* What is STREAMS?::
* Why STREAMS?::
* Why STREAMS for Linux?::
* History of STREAMS for Linux::
* Why Fast?::
@end menu

@node Background
@section Background

@acronym{STREAMS} derives from Dennis Ritchie's original paper,@footnote{"A Stream Input-Output
System", @i{AT&T Bell Laboratories Technical Journal} @b{63}, No. 8 Part 2 (October, 1984), pp.
1897-1910.} was incorporated into the @cite{UNIX@registeredsymbol{} System V Release 3} operating
system, replaced the terminal input-output subsystem, pipes and FIFOs in
@cite{UNIX@registeredsymbol{} System V Release 4}, and was improved in the @acronym{USL} release of
the @cite{UNIX@registeredsymbol{} System V Release 4.2} operating system.

Today, @acronym{STREAMS} is a part of every major branded @cite{UNIX@registeredsymbol{}} variant,
such as
@cite{AIX@registeredsymbol{}},
@cite{HP-UX@registeredsymbol{}},
@cite{IRIX@registeredsymbol{}},
@cite{MacOT@registeredsymbol{}},
@cite{OSF/1@registeredsymbol{}},
@cite{Solaris@registeredsymbol{}},
@cite{SUPER-UX@registeredsymbol{}},
@cite{UnixWare@registeredsymbol{}},
@cite{UXP/V@registeredsymbol{}},
and including many @cite{UNIX}-like operating systems and popular embedded @acronym{RTOS}, but with
the notable exception of @cite{Berkeley System Distribution} releases, variants and offshoots, and
@cite{Linux}.

@node What is STREAMS?
@section What is STREAMS?

STREAMS is a flexible framework for communication between a user level process and a kernel resident
driver.  It encompasses a set of kernel system calls providing a user-kernel interface that is
backward compatible with the traditional character device driver interface, as well as a set of
STREAMS driver and module entry points forming a driver-kernel interface.  STREAMS also provides a
rich set of kernel utility functions for the development and implementation of kernel-resident
drivers and modules.  STREAMS prompted the specification of the DDI/DKI which is an architecture
independent driver-kernel interface that provides a standardized set of kernel functions (beyond
just STREAMS) for the development of device and software drivers.

STREAMS provides a reconfigurable full-duplex communications path between user level process and
kernel resident driver, termed a @dfn{Stream}.  Modules can be inserted in the path between the user
and driver under user level control.  Streams can be linked across multiplexers under user control
to form complex (yet reconfigurable) topologies of user level processes and drivers.

Communication of control and data information along a Stream is accomplished by message passing.
There is no direct function call interface between components of a Stream.  A Stream exists within
the STREAMS framework inside the kernel and extend from the user-kernel interface to the kernel
driver interface.  Each component of a Stream consists of a pair of queues used to pass messages in
the upstream direction to the kernel-user interface; or downstream, the kernel-driver interface.

At the kernel-user end of the Stream is a component called the @dfn{Stream head}.  As with all
components of a Stream, the Stream head consists of a queue pair and a specialized set of
procedures.  The Stream head procedures are responsible for converting between the system call
interface presented to users and the message passing mechanism within the Stream.

At the kernel-driver end of the Stream is the @dfn{Stream end}.  The Stream end also contains a
queue pair and a set of procedures.  The Stream end (or simply driver) procedures are responsible
for converting between the message passing mechanism within the Stream and the actions and events of
a hardware (or pseudo-) device.

Intermediate components within the Stream are called @dfn{Modules}.  Modules consist of a queue pair
for passing messages upstream and downstream, as well as a set of procedures for processing
messages.  Modules can be pushed onto the module stack between the Stream head and Stream end using
a set of standardized input-output control commands.

In support of topologies more complex than these simple linear segments, STREAMS also provides a
specialized Stream end (driver) called a @dfn{Multiplexing driver}.  A Multiplexing driver has the
ability to open multiple Streams to its upper interface (multiplexer) as well as linking multiple
Streams beneath its lower interface (multiplexer).  Again, a standardized set of input-output
controls provide the user with the ability to configure a Multiplexing driver.

@node Why STREAMS?
@section Why STREAMS?

With the ability to open multiple Streams to a driver, push and pop modules to and from the module
stack on a Stream, and to link any Stream under a multiplexing driver--all under user control using
standardized input-output controls--allows STREAMS to configure complex topologies to form protocol
stacks.

Almost all specialized standard telecommunications software developed since 1990 was developed to
run on STREAMS.  This is for several reasons:

@itemize
@item
Since 1990, STREAMS and the associated DDI/DKI has been, and remains, the only way to incorporate
OEM protocol stacks into mainstream @cite{UNIX@registeredsymbol{}} system kernels.

@item
The original @cite{UNIX System Laboratories} (later @cite{X/Open} then later the @cite{OpenGroup})
support for @acronym{ITU-T} developed @acronym{OSI} protocols, makes STREAMS amenable to an open
model for development for @acronym{ITU-T} protocols.  (@acronym{ITU-T}, formerly @acronym{CCITT}, is
the @cite{International Telecommunications Union -- Telephone Sector} responsible for international
telephone standards, and original developers of the @acronym{OSI} model.)
@end itemize

As a result, there is a significant body of commercial software implementing telecommunications
protocol stacks that was developed, tested, validated, conformance tested, field verified, to run on
STREAMS: and is still running on STREAMS.

The cost of reimplementation, retesting, revalidation, redoing conformance testing, and field
re-verification, would likely be prohibitive: after all, the point of @cite{Linux} is reducing cost,
is it not?

@node Why STREAMS for Linux?
@section Why STREAMS for Linux?

The @cite{Linux} kernel was not developed with STREAMS in mind.  For @acronym{TPI/IP} networking,
@cite{Linux} originally followed in the footsteps of the @acronym{BSD NET2} release.  Currently, the
implementation of @acronym{TCP/IP} in the @cite{Linux} kernel has long departed from the classical
@acronym{BSD} organization and exhibits characteristics unique to the @cite{GNU/Linux} operating
system.  For character device and terminal input-output, @cite{Linux} follows closely the
@acronym{SVR 3} pre-STREAMS approach to pipes, FIFOs and terminal subsystem.  The terminal subsystem
implementation, too, has become unique to @cite{GNU/Linux}.

Therefore, from the perspective of @acronym{TCP/IP} networking and @acronym{Terminal I/O}, there
would be little reason to provide STREAMS for @cite{Linux}.  That is, if it were not for the body of
software supporting @acronym{OSI} and telecommunications protocols based solely on STREAMS, for
which @cite{Linux} has little or no support.

So, the answer to the question, "Why STREAMS for Linux?" is: so that a @cite{GNU/Linux} platform
can enjoy the same wealth of telecommunications and @acronym{OSI} protocol stacks otherwise only
available to big-iron @cite{UNIX@registeredsymbol{}}.  Without STREAMS, @cite{Linux} is probably
just another @acronym{BSD}, and probably not a very good one.

@node History of STREAMS for Linux
@section History of STREAMS for Linux

In 2000,
@uref{http://www.openss7.org/,, The OpenSS7 Project} abandoned using the @cite{Linux} networking
model for implementation of the @cite{Signalling System No. 7} protocol (primarily due to the lack of
support for the full @acronym{BSD} networking model under @cite{Linux}) and switched to using
STREAMS as the basis for all future development.
Over the span of the next 5 years, (and not surprisingly given the body
of software), almost all @cite{Signalling System No. 7} products released on @cite{Linux} used
STREAMS.

In 2005,
@uref{http://wwww.openss7.org/,, The OpenSS7 Project} release (after two years of development) the
@file{streams-0.7a.4} package: a reimplementation of @cite{SVR 4.2 STREAMS} with compatibility
modules for all major @cite{UNIX@registeredsymbol{}} releases, called @cite{@value{PACKAGE_TITLE}}.
@cite{@value{PACKAGE_TITLE}} was intended as a @cite{POSIX/SUSv3 XSR} conforming, high performance,
production grade, implementation, suitable for mainline @cite{Linux} adoption, and a
better foundation on which to base @acronym{SIGTRAN}, @acronym{VoIP}, @acronym{ISDN} and
@acronym{SS7} protocol stacks developed under the @uref{http://www.openss7.org/,, The OpenSS7
Project}, as well as a better foundation for porting commercial @cite{UNIX@registeredsymbol{}}
@acronym{OEM} implementations to @cite{Linux}.  It is the @file{@value{PACKAGE}-@value{VERSION}}
package that contains the documentation you are reading now.

@node Why Fast?
@section Why Fast?

In late 2003,
@uref{http://www.openss7.org/,, The OpenSS7 Project} decided to begin implementation of a
production grade implementation of STREAMS, because of a number of shortcomings of other
@cite{Linux} STREAMS implementations:

@enumerate a
@item proprietary;
@item unsuitable for mainline kernel adoption due to coding style or organization;
@item poorly adapted to distribution production kernels;
@item is unsuitable for packaging or repeatability;
@item portability objective unsuitable for mainline kernel adoption;
@item ports from the same baseline obfuscate the code;
@item poor performance due to portability or coding style;
@item code bloat or over sized memory footprint;
@item redundant debug statements obscuring defects or obfuscating code;
@item overuse of semaphores;
@item contain serious races or not suitable for threaded applications;
@item non-conformance to mainstream @cite{UNIX@registeredsymbol{}} implementations;
@item non-conformance to @cite{POSIX} or any release of the @cite{Single UNIX Specification};
@item limited set of standard drivers or modules;
@item limited set of diagnostic or administrative utilities;
@item limited test programs;
@item poorly documented.
@end enumerate

The replacement, named @cite{@value{PACKAGE_TITLE}}, was to correct all of these difficulties, and,
by the initial @samp{streams-0.7a.4} release, was:

@enumerate a
@item open source;
@item completely Lindented and follows kernel coding practises;
@item automatically adapts to production kernels with autoconf;
@item packages itself into @acronym{LSB} compliant @acronym{RPM}s and @acronym{DEB}s;
@item designed and implemented specifically for @cite{GNU/Linux};
@item no ports considered;
@item over twice the performance;
@item less than one-eighth of the memory footprint;
@item proper programming by assertion;
@item proper use of lightweight spin locks;
@item race free locking strategies and synchronization;
@item compatible with all mainstream @cite{UNIX@registeredsymbol{}} implementations;
@item conforms to @cite{POSIX/SUSv3 XSR};
@item complete set of standard drivers and modules;
@item complete set of diagnostic and administrative utilities;
@item integrated set of conformance test suites;
@item fully documented.
@end enumerate

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Reference
@chapter Reference
@cindex reference

@menu
* Files::			Files included in the package
* Drivers::			Drivers included in the package
* Modules::			Modules included in the package
* Libraries::			Libraries included in the package
* Utilities::			Utilities included in the package
@end menu

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Files
@section Files
@cindex headers

The following kernel modules are installed by @cite{@value{PACKAGE_TITLE}} in the
@file{/lib/modules/@value{_kversion}/@value{PACKAGE}/}directory, with either a @samp{.o} or @samp{.ko} extension.
@footnote{The kernel version, @value{_kversion} is just an example.  When installed with a
@samp{.ko} extension, dashes (@samp{-}) are also changed to underscores (@samp{_}).}

@c @include tree.texi

@table @asis

@item @file{specfs}
@pgindex specfs

This kernel module contains the @acronym{STREAMS} Special Shadow Filesystem.
See @manref{specfs(5)} for more information.

@item @file{streams}
@pgindex streams

This kernel module contains the @acronym{STREAMS} scheduler, utility functions, and @acronym{STREAMS} Device
Driver Interface/Driver Kernel Interface (DDI/DKI).
See @manref{STREAMS(9)} for more information.

@item @file{streams-fifo}
@pgindex streams-fifo

This kernel module contains the @file{fifo} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver, but is also used by the conformance and validation test suite.
See @manref{fifo(4s)} for more information.

@item @file{streams-sad}
@pgindex streams-sad

This kernel module contains the @file{sad} @acronym{STREAMS} driver.
This is the standard @acronym{STREAMS} Administrative Driver.
See @manref{sad(4)} for more information.

@item @file{streams-nsdev}
@pgindex streams-nsdev

This kernel module contains the @file{nsdev} @acronym{STREAMS} driver.
This is a @cite{@value{PACKAGE_TITLE}} specific driver.
See @manref{nsdev(4)} for more information.

@item @file{streams-echo}
@pgindex streams-echo

This kernel module contains the @file{echo} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver, but is also used by the conformance and validation test suite.
See @manref{echo(4)} for more information.

@item @file{streams-mux}
@pgindex streams-mux

This kernel module contains the @file{mux} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver< but is also used by the conformance and validation test suite.
See @manref{mux(4)} for more information.

@item @file{streams-nuls}
@pgindex streams-nuls

This kernel module contains the @file{nuls} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} module.
See @manref{nuls(4)} for more information.

@item @file{streams-pipe}
@pgindex streams-pipe

This kernel module contains the @file{pipe} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver.
See @manref{pipe(4)} for more information.

@item @file{streams-log}
@pgindex streams-log

This kernel module contains the @file{log} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver.
See @manref{log(4)} for more information.

@item @file{streams-loop}
@pgindex streams-loop

This kernel module contains the @file{loop} @acronym{STREAMS} driver.
This is a standard @acronym{STREAMS} driver, but is also used by the conformance and validation test suite.
See @manref{loop(4)} for more information.

@item @file{streams-sfx}
@pgindex streams-sfx

This kernel module contains the @dfn{sfx} @acronym{STREAMS} driver.
This is a common character device driver for implementing @acronym{STREAMS} FIFOs.
See @manref{sfx(4)} for more information.

@item @file{streams-spx}
@pgindex streams-spx

This kernel module contains the @dfn{spx} @acronym{STREAMS} driver.
This is a common character device driver for implementing @acronym{STREAMS} pipes.
See @manref{spx(4)} for more information.

@item @file{streams-srvmod}
@pgindex streams-srvmod

This kernel module contains the @file{srvmod} @acronym{STREAMS} module.  The @file{srvmod} @acronym{STREAMS}
module is a simple buffer module (a module that always defers to its service procedure and then
passes any message along).  This module is used for performance testing of the @acronym{STREAMS}
package.
See @manref{srvmod(4)} for more information.

@item @file{streams-nullmod}
@pgindex streams-nullmod

This kernel module contains the @file{nullmod} @acronym{STREAMS} module.  The @file{nullmod}
@acronym{STREAMS} module is a simple null module (a module that always passes messages to the next
module in along the Stream).  This module is used for performance testing of the @acronym{STREAMS}
package and is also used by the conformance and validation test suite.
See @manref{nullmod(4)} for more information.

@item @file{streams-pipemod}
@pgindex streams-pipemod

This kernel module contains the @file{pipemod} @acronym{STREAMS} module.
This is a standard @acronym{STREAMS} module used with pipes.
See @manref{pipemod(4)} for more information.

@item @file{streams-connld}
@pgindex streams-connld

This kernel module contains the @file{connld} @acronym{STREAMS} module.
This is a standard @acronym{STREAMS} module.
See @manref{connld(4)} for more information.

@item @file{streams-sc}
@pgindex streams-sc

This kernel module contains the @dfn{sc} @acronym{STREAMS} module.
This is a common @acronym{STREAMS} Configuration module.
See @manref{sc(4)} for more information.

@item @file{streams-testmod}
@pgindex streams-testmod

This kernel module contains the @file{testmod} @acronym{STREAMS} module.
This is a @cite{@value{PACKAGE_TITLE}} specific test module that is used for conformance and validation
testing of @acronym{STREAMS}.
See @manref{testmod(4)} for more information.

@end table

Additional kernel modules are provided by add-on packages.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Drivers
@section Drivers
@cindex drivers

The configuration of @acronym{STREAMS} drivers and modules is performed when compiling the
@cite{@value{PACKAGE_TITLE}} subsystem.  The @acronym{STREAMS} subsystem, core drivers and modules are
part of every @cite{@value{PACKAGE_TITLE}} system.

The following lists the core drivers and modules, @acronym{STREAMS} kernel tunable parameters, and
@acronym{STREAMS} configuration information:@footnote{Note that documentation for @acronym{STREAMS} drivers
is in the form of manual pages in Section 4 of the manual pages with the same name as the driver.}

@table @asis

@item @manpage{clone(4)} (@file{streams})
@pgindex streams
@pgindex clone

Clone device driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @manpage{clone(4)} driver is a integral part of @acronym{STREAMS} and is used to create clone
instances of a @acronym{STREAMS} driver.

See @manref{clone(4)} for more information.

@item @manpage{echo(4)} (@file{streams-echo})
@pgindex streams-echo
@pgindex echo

Echo (loopback) device driver.
This is a commonly implemented @acronym{STREAMS} driver.  It is implemented by @cite{HP-UX@registeredsymbol{}} and
@cite{OSF/1@registeredsymbol{}}.  The @manpage{echo(4)} driver provides a simple FIFO-like device without full
@cite{POSIX} FIFO semantics.  Its primary purpose is for the @acronym{STREAMS} Verification function,
@manref{strvf(8)}, and the @manref{test-streams(8)} validation test suite.

See @manref{echo(4)} for more information.

@item @manpage{fifo(4s)} (@file{streams-fifo})
@pgindex streams-fifo
@pgindex fifo

FIFO (Named Pipe) device driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @manpage{fifo(4s)} driver provides @cite{POSIX}-compliant @acronym{STREAMS}-based @dfn{FIFO} device.
Not all implementations of @acronym{STREAMS} provide @acronym{STREAMS}-based @dfn{FIFO}s: some
implementations use the older @cite{SVR 3}-style @dfn{FIFO}s that are not @acronym{STREAMS}-based.
@cite{@value{PACKAGE_TITLE}} provides @acronym{STREAMS}-based @dfn{FIFO}s with the @manpage{fifo(4s)}
driver.

See @manref{fifo(4s)} for more information.

@item @manpage{log(4)} (@file{streams-log})
@pgindex streams-log
@pgindex log

@acronym{STREAMS} log driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @manpage{log(4)} driver provides a @acronym{STREAMS} capable logger in addition to the @cite{BSD}
logger present in @cite{Linux}.  The @manpage{log(4)} driver provides additional support for
@acronym{STREAMS} modules and drivers using the @manref{strlog(9)} kernel level utility.
@cite{@value{PACKAGE_TITLE}} also provides the @manpage{strace(8)}, @manpage{strerr(8)} and
@manpage{strclean(8)} administrative utility  functions and startup scripts for controlling the
@manpage{log(4)} driver.

See @manref{log(4)} for more information.

@item @manpage{loop(4)} (@file{streams-loop})
@pgindex streams-loop
@pgindex loop

Loop device driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @command{loop} driver is detailed in the @cite{UNIX System V Release 4 Programmer's Manual -- STREAMS}.
The @manpage{loop(4)} driver provides capabilities used primarily for validation test programs (see
@manref{test-streams(8)}) as well as serving as an example driver.

See @manref{loop(4)} for more information.

@item @manpage{mux(4)} (@file{streams-mux})
@pgindex streams-mux
@pgindex mux

Multiplexing driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @command{mux} driver is detailed in the @cite{UNIX System V Release 4 Programmer's Manual -- STREAMS}.
The @manpage{mux(4)} driver provides capabilities used primarily for validation test programs (see
@manref{test-streams(8)} as well as serving as an example multiplexing driver.  This
@manpage{mux(4)} driver also provides the @command{minimux} capabilities.

See @manref{mux(4)} for more information.

@item @manpage{nsdev(4)} (@file{streams-nsdev})
@pgindex streams-nsdev
@pgindex nsdev

Named @acronym{STREAMS} device driver.
This is a @cite{@value{PACKAGE_TITLE}} specific driver.
The @manpage{nsdev(4)} driver is a @manpage{clone(4)}-like driver that permits the specification of
major and minor device numbers using the device node name.  It provides one of three mechanisms
under @cite{@value{PACKAGE_TITLE}} that remove @acronym{STREAMS} driver dependency on statically
allocated device numbers.

See @manref{nsdev(4)} for more information.

@item @manpage{nuls(4)} (@file{streams-nuls})
@pgindex streams-nuls
@pgindex nuls

Null @dfn{Stream} driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @manpage{nuls(4)} driver is usually called @samp{null}.  @cite{Linux} has its own
@cite{SVR3}-style @file{/dev/null} driver, so it was renamed to @samp{nuls}.

See @manref{nuls(4)} for more information.

@item @manpage{pipe(4)} (@file{streams-pipe})
@pgindex streams-pipe
@pgindex pipe

@acronym{STREAMS}-based pipe driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
However, @manpage{pipe(4)} is not normally implemented as a @acronym{STREAMS} driver, but is implemented
as a system call.  @cite{@value{PACKAGE_TITLE}} provides @manpage{pipe(2s)} system call emulation
which invokes this driver internal to the kernel.

See @manref{pipe(4)} for more information.

@item @manpage{sad(4)} (@file{streams-sad})
@pgindex streams-sad
@pgindex sad

@acronym{STREAMS} Administrative Driver.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} driver.
The @manpage{sad(4)} driver is used by the @manref{autopush(8)} utility to examine and specify the
autopush lists for @acronym{STREAMS} drivers.  Also, it is used to examine and verify the present of
@acronym{STREAMS} modules or drivers in the system.

See @manref{sad(4)} for more information.

@item @manpage{sfx(4)} (@file{streams-sfx})
@pgindex streams-sfx
@pgindex sfx

@acronym{STREAMS} FIFO device driver.
This is commonly implemented @acronym{STREAMS} driver that is used to implement @acronym{STREAMS} FIFOs
(Named Pipes) using a regular character device.
The @manpage{sfx(4)} driver provides a character based device approach to creating FIFOs.

See @manref{sfx(4)} for more information.

@item @manpage{spx(4)} (@file{streams-spx})
@pgindex streams-spx
@pgindex spx

@acronym{STREAMS} pipe device driver.
This is commonly implemented @acronym{STREAMS} driver that is used to implement @acronym{STREAMS} pipes
using a regular character device.
The @manpage{spx(4)} driver provides a character based device approach to creating FIFOs and pipes.
Only @cite{UnixWare@registeredsymbol{}} and @cite{AIX(4)} document this device.

See @manref{spx(4)} for more information.

@end table

Additional drivers are provided by add-on packages.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@page
@node Modules
@section Modules
@cindex modules

The configuration of @acronym{STREAMS} drivers and modules is performed when compiling the
@cite{@value{PACKAGE_TITLE}} subsystem.  The @acronym{STREAMS} subsystem, core drivers and modules are
part of every @cite{@value{PACKAGE_TITLE}} system.

The following lists the core drivers and modules, @acronym{STREAMS} kernel tunable parameters, and
@acronym{STREAMS} configuration information:@footnote{Note that documentation for @acronym{STREAMS} modules
is in the form of a manual page in Section 4 of the manual pages with the same name as the module.}

@table @asis

@item @manpage{pipemod(4)} (@file{streams-pipemod})
@pgindex streams-pipemod

Pipe module.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} module.
The @manpage{pipemod(4)} module can be pushed over a pipe end or FIFO before other modules are
pushed (on either end) to reverse the sense of the @manpage{M_FLUSH(9)} message that traverse the
pipe.

See @manref{pipemod(4)} for more information.

@item @manpage{connld(4)} (@file{streams-connld})
@pgindex streams-connld

Connection Line Discipline module.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} module.
The @manpage{connld(4)} module can be pushed over a pipe end that has been attached to a file system
file using @manref{fattach(3)} and will then create a new pipe instance on each @manpage{open(2s)}
of the attached file and pass the new remove file pointer to the remove end using
@manpage{M_PASSFP(9)} to be received with @manpage{I_RECVFD(7)}.  This allows servers to be created
that use @manpage{pipe(4)}s for communication.

See @manref{connld(4)} for more information.

@item @manpage{sc(4)} (@file{streams-sc})
@pgindex streams-sc

@acronym{STREAMS} Configuration module.
This is a commonly implemented @acronym{STREAMS} module.
It is implemented by @cite{HP-UX} and @cite{AIX}, and perhaps other @cite{Mentat}-derived
@acronym{STREAMS} implementations.
The @manpage{sc(4)} modules provides the ability to access @acronym{STREAMS} driver information by name
rather than major device number.  It also provides access to the @mantype{module_info(9)} and
@mantype{module_stat(9)} structure information for the named @acronym{STREAMS} module or driver, not
accessible using the @manpage{sad(4)} driver.  The @manpage{sc(4)} module is used by the
@manref{scls(8)} utility.

See @manref{sc(4)} for more information.

@item @manpage{srvmod(4)} (@file{streams-srvmod})
@pgindex streams-srvmod

Buffer module.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} module described in the @cite{UNIX System V Release 4
Programmer's Manual -- STREAMS}.
The @manpage{srvmod(4)} module also has @cite{@value{PACKAGE_TITLE}} specific extensions.
The @manpage{srvmod(4)} module is used by the @manref{perftest(8)} performance test program to test
the effect of additional levels of service procedure pushed over a @dfn{Stream}.
The module also serves as an example of a @acronym{STREAMS} module using service procedures.

See @manref{srvmod(4)} for more information.

@item @manpage{nullmod(4)} (@file{streams-nullmod})
@pgindex streams-nullmod

Null module.
This is a standard @cite{SVR 4.2 @acronym{STREAMS}} module described in the @cite{UNIX System V Release 4
Programmer's Manual -- STREAMS}.
The @manpage{nullmod(4)} module also has @cite{@value{PACKAGE_TITLE}} specific extensions.
The @manpage{nullmod(4)} module is used by the @manref{perftest(8)} performance test program to test
the effect of additional levels of put procedure pushed over a @dfn{Stream}.
The module also serves as an example of a @acronym{STREAMS} module not using service procedures.

See @manref{nullmod(4)} for more information.

@item @manpage{testmod(4)} (@file{streams-testmod})
@pgindex streams-testmod

Test module.
This is a @cite{@value{PACKAGE_TITLE}} specific @acronym{STREAMS} module.
The primary purpose of the @manpage{testmod(4)} modules is to provide the @manref{test-streams(8)}
validation test program with the capability to pass specific @manpage{M_ERROR(9)} and
@manpage{M_HANGUP(9)} messages to the @dfn{Stream head} for @cite{POSIX} validation testing.
It also serves as an example of how a @acronym{STREAMS} module can properly process @manpage{M_IOCTL(9)}
and related messages.

See @manref{testmod(4)} for more information.

@end table

Additional modules are provided by add-on packages.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@page
@node Libraries
@section Libraries
@cindex libraries

During the installation process of @cite{@value{PACKAGE_TITLE}} a subroutine library is built and
installed on your system.  For 64-bit systems that support 32-bit compatibility, two versions of
each library are built and installed: one 64-bit native library and one 32-bit compatibility
library.  64-bit native libraries are installed to the @file{/usr/lib64} subdirectory.  32-bit
native and 32-bit compatibility libraries are installed to the @file{/usr/lib} subdirectory.

@table @file

@item libstreams.so.0.0.1
@itemx libstreams.so.0
@itemx libstreams.so
Provides a shared object library for use by @acronym{STREAMS} applications programs.

@item libstreams.a
Provides a static library for use by @acronym{STREAMS} applications programs.

@item libstreams.la
Provides the @command{libtool} definitions for the library.

@end table

@subsection libstreams Library Routines

The following routines are present in the @file{libstreams} libraries.  The routines in these
libraries are standard @acronym{STREAMS} interface system calls documented in the @cite{System V Release
4.2 Programmer's Manual -- STREAMS}.  Refer to the associated manual pages for detailed information
on these routines.

@table @asis

@item @manref{fattach(2)}
Name a @acronym{STREAMS} special file.

@item @manref{fdetach(2s)}
Unname a @acronym{STREAMS} special file.

@item @manref{getmsg(2s)}
Get next message off of a Stream.

@item @manref{getpmsg(2s)}
Get next message off of a Stream.

@item @manref{isastream(2s)}
Test for a @acronym{STREAMS} special file.

@item @manref{pipe(2s)}
Create a @acronym{STREAMS} pipe.

@item @manref{putmsg(2s)}
Put a message to a @acronym{STREAMS} character device.

@item @manref{putpmsg(2s)}
Put a band message to a @acronym{STREAMS} character device.

@item @manref{pstrlog(3)}
Print a @acronym{STREAMS} log buffer.

@item @manref{strlog(3)}
Print a @acronym{STREAMS} log buffer.

@item @manref{vstrlog(3)}
Print a @acronym{STREAMS} log buffer.

@end table

@subsection Using the Library

To use one of the @cite{@value{PACKAGE_TITLE}} libraries you can include the file
@file{sys/stropts.h} in you application program source code.  On you compiler command line, add the
option @samp{-I/usr/include/@value{PACKAGE}} to include the version of @file{sys/stropts.h} that is
distributed with @cite{@value{PACKAGE_TITLE}}.

When linking our program, or performing a final @command{gcc} to build your executable, include one
of the following options on your command line:

@table @samp

@item /usr/lib/libstreams.a
@itemx -lstreams -static
Link against the static version of the library.

@item -lstreams
Link against the shared object version of the library.

@item /usr/lib/libstreams.la
Use with @command{libtool} to link additional convenience libraries against the shared or static
versions of the library.

@end table

Failure to link the executable runtime path for @file{libstreams} will result in linker-loader
warnings that the functions @manpage{getpmsg(2s)} or @manpage{putpmsg(2s)} are not implemented and
will always fail.@footnote{These warnings are generated when linking only against the @file{libc}
library that includes only failing stubs for @manpage{getpmsg(2s)} and @manpage{putpmsg(2s)}}.

See also @refman{Development} for more information.


@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@page
@node Utilities
@section Utilities
@cindex utilities

@menu
* Init Scripts::
* User Utilities::
* Administrative Utilities::
* Performance Test Programs::
* Conformance Test Programs::
@end menu

@node Init Scripts
@subsection Init Scripts
@cindex init scripts

Following are System V Init Scripts that are installed by the package:

@table @asis

@item @manpage{specfs(8)} (@file{/etc/init.d/specfs})
@pgindex specfs
@pgindex /etc/init.d/specfs
@itemx @manpage{specfs.sh(8)} (@file{/etc/init.d/specfs.sh})
@pgindex specfs.sh
@pgindex /etc/init.d/specfs.sh

System V Init Script for the @acronym{STREAMS} Special Shadow Filesystem.
The @manpage{specfs(8)} init script provides the ability to initialize, configure and mount the
@acronym{STREAMS} Special Shadow Filesystem, @manpage{specfs(5)}.
The @manpage{specfs(8)} script provides the RedHat-style init script, whereas the
@manpage{specfs.sh(8)} script provides the Debian-style init script.

See @manref{specfs(8)} for more information.

@item @manpage{@value{PACKAGE}(8)} (@file{/etc/init.d/@value{PACKAGE}})
@pgindex @value{PACKAGE}
@pgindex /etc/init.d/@value{PACKAGE}
@itemx @manpage{@value{PACKAGE}.sh(8)} (@file{/etc/init.d/@value{PACKAGE}.sh})
@pgindex @value{PACKAGE}.sh
@pgindex /etc/init.d/@value{PACKAGE}.sh

System V Init Script for the @acronym{STREAMS} Subsystem.
The @manpage{streams(8)} init script provides the ability to initialize, configure and mount the
@acronym{STREAMS} subsystem, @manpage{STREAMS(9)}.
The @manpage{streams(8)} script provides the RedHat-style init script, whereas the
@manpage{streams.sh(8)} script provides the Debian-style init script.

See @manref{streams(8)} for more information.

@end table

@node User Utilities
@subsection User Utilities
@cindex user utilities

Following are user utilities for manipulating @dfn{Streams}:

@table @asis

@item @manpage{strchg(1)} (@file{/usr/bin/strchg})
@pgindex strchg
@pgindex /usr/bin/strchg

Change @dfn{Stream} configuration.
@manpage{strchg(1)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} user utility.

@manpage{strchg(1)} is a C-language user program that can be used to alter the configuration of the
@dfn{Stream} associated with the caller's standard input.  The @manpage{strchg(1)} command pushes
modules on the @dfn{Stream}, pops modules off of the @dfn{Stream}, or both.  Only the superuser or
owner of the @acronym{STREAMS} device can alter the configuration of that @dfn{Stream}.  If another user
attempts to alter the configuration, the @manpage{strconf(1)} command will fail.

@manpage{strchg(1)} is useful from the shell and, when standard input is redirected from an open
file descriptor to the command, can be used to push and pop modules from arbitrary @dfn{Streams},
not just those associated with @acronym{STREAMS}-based terminal devices.

See @manref{strchg(1)} for more information.

@item @manpage{strconf(1)} (@file{/usr/bin/strconf})
@pgindex strconf
@pgindex /usr/bin/strconf

Query @dfn{Stream} configuration.
@manpage{strconf(1)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} user utility.

@manpage{strconf(1)} is a C-language user program that can be used to query the configuration of a
@dfn{Stream}.  When use without any options, it prints a list of the modules in the @dfn{Stream}
associated with the standard input, as well as the topmost driver.  The list is printed with one
name per line, where the first name printed is the topmost module on the @dfn{Stream} and the last
item printed is the name of the topmost driver associated with the @dfn{Stream}.

@manpage{strconf(1)} is useful from the shell and, when standard input is redirected from an open
file descriptor to the command, can be used to query arbitrary @dfn{Streams}, not just the
associated with @acronym{STREAMS}-based terminal devices.

See @manref{strconf(1)} for more information.

@item @manpage{strreset(1)} (@file{/usr/bin/strreset})
@pgindex strreset
@pgindex /usr/bin/strreset

Reset a @dfn{Stream}.
@manpage{strreset(1)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} user utility.

@manpage{strreset(1)}is a C-language user program that resets an open @dfn{Stream} by generating an
@manpage{M_FLUSH(9)} message to the @dfn{Stream head}.  It is used mainly to reset blocked
@dfn{Streams}.  Wehn it is impossible to reopen the @dfn{Stream}, issue an @manref{I_FLUSH} or
equivalent command.  This situation may happen with a process sleeping in a module's close routine,
when signals can not be sent to the process (a zombie process exiting, for example).

See @manref{strreset(1)} for more information.

@end table

@node Administrative Utilities
@subsection Administrative Utilities
@cindex administrative utilities

Following are administrative utilities for manipulating and examining the @acronym{STREAMS} subsystem:

@table @asis

@item @manpage{autopush(8)} (@file{/usr/sbin/autopush})
@pgindex autopush
@pgindex /usr/sbin/autopush

Control the @dfn{autopush} module list for a @acronym{STREAMS} device.
@manpage{autopush(8)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} administrative utility.

@manpage{autopush(8)} is a C-language program that can be used to manipulate and examine which
@acronym{STREAMS} modules are automatically pushed over a device when it is opened.  It is also possible
to restrict the ability to push further modules on the @dfn{Stream} without proper privilege.
The @manpage{autopush(8)} utility provides a user program interface to the @acronym{STREAMS}
Administrative Driver (@manpage{sad(4)}).

See @manref{autopush(8)} for more information.

@item @manpage{fattach(8)} (@file{/usr/sbin/fattach})
@pgindex fattach
@pgindex /usr/sbin/fattach

Name a @acronym{STREAMS} file.
@manpage{fattach(8)} is an @cite{OpenSS7} utility.  Although @cite{OSF/1} documentation mentions an
@command{fattach} manual page in section 8, one does not exist.

@manpage{fattach(8)} opens a @manpage{pipe(4)} and attaches one end of the pipe to a file using
@manpage{fattach(3)}, and optionally pushes the @manpage{connld(4)} module on the side of the pipe
being attached to the file.  The other end of the pipe remains available for use by the shell
program invoking this command.

@manpage{fattach(8)} provides a easy way for shell programs to use @acronym{STREAMS}-based pipes and to
use the facilities of the @manpage{connld(4)} module.

See @manref{fattach(8)} for more information.

@item @manpage{fdetach(8)} (@file{/usr/sbin/fdetach})
@pgindex fdetach
@pgindex /usr/sbin/fdetach

Unlink a named @acronym{STREAMS} file.

@manpage{fdetach(8)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} administrative utility.

@manpage{fdetach(8)} is a C-language program that detaches or disassociates a file descriptor for an
open @acronym{STREAMS} device or pipe from its filename in the file system.

See @manref{fdetach(8)} for more information.

@item @manpage{insf(8)} (@file{/usr/sbin/insf})
@pgindex insf
@pgindex /usr/sbin/insf

Install special files.
@manpage{insf(8)} is the @cite{HP-UX} way to install special (device) files.  This program is not
even partially implemented in @cite{@value{PACKAGE_TITLE}}.  Use @manref{streams_mknod(8)} and
friends instead.

See @manref{insf(8)} for more information.

@item @manpage{scls(8)} (@file{/usr/sbin/scls})
@pgindex scls
@pgindex /usr/sbin/scls

List @acronym{STREAMS} configuration.
@manpage{scls(8)} is a rather useful @cite{AIX} administrative utility that is also implemented by
@cite{@value{PACKAGE_TITLE}}.

@manpage{scls(8)} is a C-language program that can be used to list module and driver names as well
as information and statistics associated with those modules or drivers.
The @manpage{scls(8)} utility provides a user program interface to the @acronym{STREAMS} Configuration
module (@manpage{sc(4)}).

See @manref{scls(8)} for more information.

@item @manpage{strace(8)} (@file{/usr/sbin/strace})
@pgindex strace
@pgindex /usr/sbin/strace

Write @acronym{STREAMS} event trace messages to the standard output.
@manpage{strace(8)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} administrative utility.

The @manpage{strace(8)} C-language program receives trace event messages from the @acronym{STREAMS} log
driver (@manpage{log(4)}) and writes these messages to the standard output.  When run as a daemon,
@manpage{strace(8)} appends these messages to a log file.

Messages that appear in the trace log are intended to report debugging information that assists with
troubleshooting a running @acronym{STREAMS} module or driver.

See @manref{strace(8)} for more information.

@item @manpage{strclean(8)} (@file{/usr/sbin/strclean})
@pgindex strclean
@pgindex /usr/sbin/strclean

Clean up after the @acronym{STREAMS} error logger.
@manpage{strclean(8)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} administrative utility.

The @manpage{strclean(8)} utility is a bash script that can be used to delete aged log files
generated by the @acronym{STREAMS} error logger, @manpage{strerr(8)}.

See @manref{strclean(8)} for more information.

@item @manpage{streams_mknod(8)} (@file{/usr/sbin/streams_mknod})
@pgindex streams_mknod
@pgindex /usr/sbin/streams_mknod

Make special device nodes for @acronym{STREAMS}.
@manpage{streams_mknod(8)} is a @cite{@value{PACKAGE_TITLE}} specific administrative utility.

The @manpage{streams_mknod(8)} C-language program can be used to make (or remove) the special
device nodes under the @file{/dev} directory required by @command{@value{PACKAGE}-@value{VERSION}}
package modules and drivers.  @manpage{streams_mknod(8)} in invoked by the System V startup script,
@file{/etc/init.d/@value{PACKAGE}}.

See @manref{streams_mknod(8)} for more information.

@item @manpage{strerr(8)} (@file{/usr/sbin/strerr})
@pgindex strerr
@pgindex /usr/sbin/strerr

Receive error log messages from the @acronym{STREAMS} @manpage{log(4)} driver.
@manpage{strerr(8)} is a standard @cite{SVR 4.2 @acronym{STREAMS}} administrative utility.

The @manpage{strerr(8)} utility is a C-language program, run as a daemon, that receives error log
messages from the @acronym{STREAMS} log driver (@manpage{log(4)}) and writes these message to a log
file.  By default, @manpage{strerr(8)} logs all @dfn{STREAM} error messages from all drivers and
modules.

Messages that appear in the error log are intended to report exceptional conditions that require the
attention of the person who administers your system.

See @manref{strerr(8)} for more information.

@item @manpage{strinfo(8)} (@file{/usr/sbin/strinfo})
@pgindex strinfo
@pgindex /usr/sbin/strinfo

List @dfn{Stream} information.
@manpage{strinfo(8)} is a rather useful @cite{AIX} administrative utility that is also implemented by
@cite{@value{PACKAGE_TITLE}}.

The @manpage{strinfo(8)} C-language program can be used to list @dfn{Stream} instance information as
well as information and statistics on a module or driver basis.
The @manpage{scls(8)} utility provides a user program interface to the @acronym{STREAMS} Configuration
module (@manpage{sc(4)}).

This program is not even partially implemented in @cite{@value{PACKAGE_TITLE}} yet.  User
@manref{proc(5)} file system and the @file{/proc/streams} directory instead.  Also, see
@manref{scls(8)} for driver and module specific information.

See @manref{strinfo(8)} for more information.

@item @manpage{strload(8)} (@file{/usr/sbin/strload})
@pgindex strload
@pgindex /usr/sbin/strload

Loads the @acronym{STREAMS} subsystem.
@manpage{strload(8)} is a useful @cite{AIX} administrative utility that is also implemented by
@cite{@value{PACKAGE_TITLE}}.

The @manpage{strload(8)} bash script can be used to load @acronym{STREAMS} modules and drivers
individually or from a configuration file.

See @manref{strload(8)} for more information.

@item @manpage{strsetup(8)} (@file{/usr/sbin/strsetup})
@pgindex strsetup
@pgindex /usr/sbin/strsetup

Bash script.

See @manref{strsetup(8)} for more information.

@item @manpage{strvf(8)} (@file{/usr/sbin/strvf})
@pgindex strvf
@pgindex /usr/sbin/strvf

C-language program.

See @manref{strvf(8)} for more information.

@end table

@node Performance Test Programs
@subsection Performance Test Programs
@cindex performance test programs

Following are performance test programs:

@table @asis

@item @manpage{perftest(8)} (@file{/usr/sbin/perftest})
@pgindex perftest
@pgindex /usr/sbin/perftest

C-language program.

See @manref{perftest(8)} for more information.

@item @manpage{perftestn(8)} (@file{/usr/sbin/perftestn})
@pgindex perftestn
@pgindex /usr/sbin/perftestn

C-language program.

See @manref{perftestn(8)} for more information.

@end table

@node Conformance Test Programs
@subsection Conformance Test Programs
@cindex conformance test programs

Following and conformance and validation testing programs:

@table @asis

@item @manpage{test-clone(8)} (@file{/usr/libexec/@value{PACKAGE}/test-clone})
@pgindex test-clone
@pgindex /usr/libexec/@value{PACKAGE}/test-clone

The @manpage{test-clone(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{clone(4)} @acronym{STREAMS} driver.

See @manref{test-clone(8)} for more information.

@item @manpage{test-connld(8)} (@file{/usr/libexec/@value{PACKAGE}/test-connld})
@pgindex test-connld
@pgindex /usr/libexec/@value{PACKAGE}/test-connld

The @manpage{test-connld(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{connld(4)} @acronym{STREAMS} driver.

See @manref{test-connld(8)} for more information.

@item @manpage{test-echo(8)} (@file{/usr/libexec/@value{PACKAGE}/test-echo})
@pgindex test-echo
@pgindex /usr/libexec/@value{PACKAGE}/test-echo

The @manpage{test-echo(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{echo(4)} @acronym{STREAMS} driver.

See @manref{test-echo(8)} for more information.

@item @manpage{test-fifo(8)} (@file{/usr/libexec/@value{PACKAGE}/test-fifo})
@pgindex test-fifo
@pgindex /usr/libexec/@value{PACKAGE}/test-fifo

The @manpage{test-fifo(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{fifo(4s)} @acronym{STREAMS} driver.

See @manref{test-fifo(8)} for more information.

@item @manpage{test-log(8)} (@file{/usr/libexec/@value{PACKAGE}/test-log})
@pgindex test-log
@pgindex /usr/libexec/@value{PACKAGE}/test-log

The @manpage{test-log(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{log(4)} @acronym{STREAMS} driver.

See @manref{test-log(8)} for more information.

@item @manpage{test-loop(8)} (@file{/usr/libexec/@value{PACKAGE}/test-loop})
@pgindex test-loop
@pgindex /usr/libexec/@value{PACKAGE}/test-loop

The @manpage{test-loop(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{loop(4)} @acronym{STREAMS} driver.

See @manref{test-loop(8)} for more information.

@item @manpage{test-mux(8)} (@file{/usr/libexec/@value{PACKAGE}/test-mux})
@pgindex test-mux
@pgindex /usr/libexec/@value{PACKAGE}/test-mux

The @manpage{test-mux(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{mux(4)} @acronym{STREAMS} driver.

See @manref{test-mux(8)} for more information.

@item @manpage{test-nsdev(8)} (@file{/usr/libexec/@value{PACKAGE}/test-nsdev})
@pgindex test-nsdev
@pgindex /usr/libexec/@value{PACKAGE}/test-nsdev

The @manpage{test-nsdev(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{nsdev(4)} @acronym{STREAMS} driver.

See @manref{test-nsdev(8)} for more information.

@item @manpage{test-nuls(8)} (@file{/usr/libexec/@value{PACKAGE}/test-nuls})
@pgindex test-nuls
@pgindex /usr/libexec/@value{PACKAGE}/test-nuls

The @manpage{test-nuls(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{nuls(4)} @acronym{STREAMS} driver.

See @manref{test-nuls(8)} for more information.

@item @manpage{test-pipe(8)} (@file{/usr/libexec/@value{PACKAGE}/test-pipe})
@pgindex test-pipe
@pgindex /usr/libexec/@value{PACKAGE}/test-pipe

The @manpage{test-pipe(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{pipe(4)} @acronym{STREAMS} driver.

See @manref{test-pipe(8)} for more information.

@item @manpage{test-pipemod(8)} (@file{/usr/libexec/@value{PACKAGE}/test-pipemod})
@pgindex test-pipemod
@pgindex /usr/libexec/@value{PACKAGE}/test-pipemod

The @manpage{test-pipemod(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{pipemod(4)} @acronym{STREAMS} driver.

See @manref{test-pipemod(8)} for more information.

@item @manpage{test-sad(8)} (@file{/usr/libexec/@value{PACKAGE}/test-sad})
@pgindex test-sad
@pgindex /usr/libexec/@value{PACKAGE}/test-sad

The @manpage{test-sad(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{sad(4)} @acronym{STREAMS} driver.

See @manref{test-sad(8)} for more information.

@item @manpage{test-sc(8)} (@file{/usr/libexec/@value{PACKAGE}/test-sc})
@pgindex test-sc
@pgindex /usr/libexec/@value{PACKAGE}/test-sc

The @manpage{test-sc(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{sc(4)} @acronym{STREAMS} driver.

See @manref{test-sc(8)} for more information.

@item @manpage{test-streams(8)} (@file{/usr/libexec/@value{PACKAGE}/test-streams})
@pgindex test-streams
@pgindex /usr/libexec/@value{PACKAGE}/test-streams

The @manpage{test-streams(8)} C-language program is a conformance and validation test program, in the
OpenSS7 Project style, for the
@manpage{STREAMS(9)} subsystem and primarily the @manpage{sth(4)} @dfn{Stream head}.

See @manref{test-streams(8)} for more information.

@end table

For the proper way to execute these validation test programs in a conformance and validation test
suite, see @refman{Running Test Suites}.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Development
@chapter Development
@cindex developing

For development using the @cite{@value{PACKAGE_NAME}} package, @xref{Top, About This Manual, About
This Manual, SPG, STREAMS Programmer's Guide}.

@menu
* Development Header Files::
* Static and Shared Libraries::
* Kernel Module Development::
* Manual Pages::
@end menu

@node Development Header Files
@section Header Files

Header files are installed, typically, in the @file{/usr/include/@value{PACKAGE}} subdirectory.  To
use the header files from the package, @samp{-I/usr/include/@value{PACKAGE}} must be included in the
@command{gcc} command line as a compile option.  This is true regardless of whether user space or
kernel space programs are being compiled.

In general, @samp{-I} include directives on the @command{gcc} command line should be ordered in the
reverse order of the dependencies between packages.  So, for example, if the include files from all
add-on packages are required, the order of these directives would be: @samp{-I/usr/include/strss7
-I/usr/include/strsctp -I/usr/include/strinet -I/usr/include/strxnet -I/usr/include/strxns
-I/usr/include/strcompat -I/usr/include/streams}.

Following are the user visible header files provided by the
@command{@value{PACKAGE}-@value{VERSION}} package in directory @file{/usr/include/streams}:

@table @asis

@item @file{strlog.h}
@pgindex strlog.h
@pgindex /usr/include/streams/strlog.h

This is the primary header file for the @manref{strlog(4)} driver.
It is normally only included by user space programs when interacting with the @manpage{log(4)} driver.
See @manref{log(4)} for more information.

@item @file{stropts.h}
@pgindex stropts.h
@pgindex /usr/include/streams/stropts.h

This is the primary user header file for the @dfn{Stream head}.
It is normally only included by user space programs when interacting with the @dfn{Stream head}.
See @manref{sth(4)} for more information.

@item @file{log.h}
@pgindex log.h
@pgindex /usr/include/streams/log.h

This is the primary header file for the @manref{log(4)} driver.
It is normally only included by user space programs when interacting with the @manpage{log(4)} driver.
See @manref{log(4)} for more information.

@item @file{loop.h}
@pgindex loop.h
@pgindex /usr/include/streams/loop.h

This is the primary header file for the @manref{loop(4)} driver.
It is normally only included by user space programs when interacting with the @manpage{loop(4)} driver.
See @manref{loop(4)} for more information.

@item @file{sad.h}
@pgindex sad.h
@pgindex /usr/include/streams/sad.h

This is the primary header file for the @manref{sad(4)} driver.
It is normally only included by user space programs when interacting with the @manpage{sad(4)} driver.
See @manref{sad(4)} for more information.

@item @file{sys/cmn_err.h}
@pgindex sys/cmn_err.h
@pgindex /usr/include/streams/sys/cmn_err.h

This is the system specific kernel header file for the @manref{cmn_err(9)} utility.

@item @file{sys/ddi.h}
@pgindex sys/ddi.h
@pgindex /usr/include/streams/sys/ddi.h

This is the system specific kernel header file for various @acronym{STREAMS} @manref{DDI(9)} utilities.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.
See @manref{DDI(9)} for more information.

@item @file{sys/debug.h}
@pgindex sys/debug.h
@pgindex /usr/include/streams/sys/debug.h

This is the system specific kernel header file for kernel debugging macros.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.

@item @file{sys/dki.h}
@pgindex sys/dki.h
@pgindex /usr/include/streams/sys/dki.h

This is the system specific kernel header file for various @acronym{STREAMS} @manref{DKI(9)} utilities.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.
See @manref{DKI(9)} for more information.

@item @file{sys/kmem.h}
@pgindex sys/kmem.h
@pgindex /usr/include/streams/sys/kmem.h

This is the system specific kernel header file for @manref{kmem_alloc(9)} and related utilities.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.
See @manref{kmem_alloc(9)} for more information.

@item @file{sys/strconf.h}
@pgindex sys/strconf.h
@pgindex /usr/include/streams/sys/strconf.h

This is the system specific kernel header file for @acronym{STREAMS} driver and module configuration.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.

@item @file{sys/strdebug.h}
@pgindex sys/strdebug.h
@pgindex /usr/include/streams/sys/strdebug.h

This is the system specific kernel header file for @acronym{STREAMS} driver and module debugging macros.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.

@item @file{sys/stream.h}
@pgindex sys/stream.h
@pgindex /usr/include/streams/sys/stream.h

This is the system specific kernel header file for @acronym{STREAMS} drivers and modules.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.
See @manref{STREAMS(9)} for more information.

@item @file{sys/strlog.h}
@pgindex sys/strlog.h
@pgindex /usr/include/streams/sys/strlog.h

This is the system specific header file for the @manref{strlog(4)} and @manref{strlog(9)} facilities.
It is normally only included by kernel space programs when interacting with the @manpage{log(4)} driver.
See @manref{log(4)} for more information.

@item @file{sys/stropts.h}
@pgindex sys/stropts.h
@pgindex /usr/include/streams/sys/stropts.h

This is the system specific user header file for the @dfn{Stream head}.
It is normally only included by user space programs when interacting with the @dfn{Stream head}.
See @manref{sth(4)} for more information.

@item @file{sys/stropts32.h}
@pgindex sys/stropts32.h
@pgindex /usr/include/streams/sys/stropts32.h

This is the system specific user 32/64-bit header file for the @dfn{Stream head}.
It is normally only included by user space programs when interacting with the @dfn{Stream head}.
See @manref{sth(4)} for more information.

@item @file{sys/strsubr.h}
@pgindex sys/strsubr.h
@pgindex /usr/include/streams/sys/strsubr.h

This is the system specific kernel header file for @acronym{STREAMS} private definitions.
It is normal only included by kernel space @acronym{STREAMS} modules and drivers.
See @manref{STREAMS(9)} for more information.

@item @file{sys/log.h}
@pgindex sys/log.h
@pgindex /usr/include/streams/sys/log.h

This is the system specific header file for the @manref{log(4)} driver.
It is normally only included by kernel space programs when interacting with the @manpage{log(4)} driver.
See @manref{log(4)} for more information.

@item @file{sys/loop.h}
@pgindex sys/loop.h
@pgindex /usr/include/streams/sys/loop.h

This is the system specific header file for the @manref{loop(4)} driver.
It is normally only included by kernel space programs when interacting with the @manpage{loop(4)} driver.
See @manref{loop(4)} for more information.

@item @file{sys/sad.h}
@pgindex sys/sad.h
@pgindex /usr/include/streams/sys/sad.h

This is the system specific header file for the @manref{sad(4)} driver.
It is normally only included by kernel space programs when interacting with the @manpage{sad(4)} driver.
See @manref{sad(4)} for more information.

@item @file{sys/sc.h}
@pgindex sys/sc.h
@pgindex /usr/include/streams/sys/sc.h

This is the system specific header file for the @manref{sc(4)} module.
It is normally only included by user or kernel space programs when interacting with the @manpage{sc(4)} driver.
See @manref{sc(4)} for more information.

@item @file{sys/testmod.h}
@pgindex sys/testmod.h
@pgindex /usr/include/streams/sys/testmod.h

This is the system specific header file for the @manref{testmod(4)} module.
It is normally only included by user or kernel space programs when interacting with the @manpage{testmod(4)} driver.
See @manref{testmod(4)} for more information.

@end table

@subsection User Space Programs

Typical include files for interacting with @acronym{STREAMS} from user space include the
@file{stropts.h} header file.  Additional header files for interacting with specific drivers or
modules may also be required.

@subsection Kernel Space Drivers and Modules

Typical include files for writing @acronym{STREAMS} modules and drivers for kernel space include the
@file{sys/cmn_err.h}, @file{sys/kmem.h}, @file{sys/dki.h}, @file{sys/stream.h}, @file{sys/ddi.h},
and @file{sys/strconf.h} header files.  Additional header files for interacting with specific
drivers or modules may also be required.

@node Static and Shared Libraries
@section Libraries

Shared or static versions of the @file{libstreams} library must be linked when using the
@command{@value{PACKAGE}-@value{VERSION}} package.  This library must either be specified on the
@command{gcc} command line as a shared library (e.g. @samp{-lstreams}) or as a static library (e.g.
@samp{/usr/lib/libstreams.a}).

If the shared library is linked, include the following options on the @command{gcc} command line:

@table @asis

@item @samp{-lstreams}
Link to the @file{/usr/lib/libstreams.so} shared library.

@end table

If the static library is linked, include the following options on the @command{gcc} command line:

@table @asis

@item @samp{/usr/lib/libstreams.a}
Link to the @file{/usr/lib/libstreams.a} static library.

@end table

@node Kernel Module Development
@section Kernel Modules

Developing @acronym{STREAMS} kernel modules is similar to user space programs with regard to header
files.  @file{/usr/include/@value{PACKAGE}} should be placed as an include directory to search in
the @command{gcc} command line.  The rules for compiling @cite{Linux} kernel modules should be
followed.  In particular, several important intricacies should be considered:

@itemize @bullet

@item
The @command{gcc} compiler used to compile the kernel modules must be the same version of compiler
that was used to compile the kernel.

@item
The @command{gcc} command line must have the same compile flags that were used to compile the
kernel.

@item
The @command{gcc} command line must define several important kernel defines including
@samp{-DLINUX}, @samp{-D__KERNEL__}, as well as the base name of the module.

@item
The @command{gcc} command line must include several important include files directly on the command
line such as @samp{--include /@-lib/@-modules/@-@value{_kversion}/@-build/@-include/@-linux/@-autoconf.h} and
maybe even @samp{--include
/@-lib/@-modules/@-@value{_kversion}/@-build/@-include/@-linux/@-modversions.h}.@footnote{The kernel version
@samp{@value{_kversion}} is just an example.  For the running kernel, use the output of @samp{uname
-r}.}

@end itemize

@node Manual Pages
@section Manual Pages

The @command{@value{PACKAGE}-@value{VERSION}} package installs a number of manual pages in the
@file{/usr/share/man} directory as follows:

The following manual pages are installed in Section 1 of the manual (in the subdirectory @file{/usr/share/man/man1}):

@multitable @columnfractions .40 .60
@item @manref{strchg(1)} -- @tab change Stream configuration.
@item @manref{strconf(1)} -- @tab query Stream configuration.
@item @manref{strreset(1)} -- @tab reset a Stream.
@end multitable

The following manual pages are installed in Section 2 of the manual (in the subdirectory @file{/usr/share/man/man2}):

@multitable @columnfractions .40 .60
@item @manref{fattach(2)} -- @tab name a @acronym{STREAMS} special file.
@item @manref{fdetach(2s)} -- @tab unname a @acronym{STREAMS} special file.
@item @manref{getmsg(2s)} -- @tab get next message off a Stream.
@item @manref{getpmsg(2s)} -- @tab get next message off a Stream.
@item @manref{isastream(2s)} -- @tab test for a @acronym{STREAMS} special file.
@item @manref{pipe(2s)} -- @tab create a @acronym{STREAMS} pipe.
@item @manref{poll(2s)} -- @tab wait for an event on a @acronym{STREAMS} file descriptor.
@item @manref{putmsg(2s)} -- @tab put a message to a @acronym{STREAMS} character device.
@item @manref{putpmsg(2s)} -- @tab put a band message to a @acronym{STREAMS} character device.
@item @manref{read(2s)} -- @tab read from a file descriptor.
@item @manref{readv(2s)} -- @tab read or write a vector.
@item @manref{write(2s)} -- @tab write to a file descriptor.
@item @manref{writev(2s)} -- @tab read or write a vector.
@end multitable

The following manual pages are installed in Section 3 of the manual (in the subdirectory @file{/usr/share/man/man3}):

@multitable @columnfractions .40 .60
@item @manref{streams(3)} -- @tab @acronym{STREAMS} system call library.
@item @manref{libstreams(3)} -- @tab @acronym{STREAMS} system call library.
@item @manref{fattach(3)} -- @tab name a @acronym{STREAMS} special file.
@item @manref{fdetach(3)} -- @tab unname a @acronym{STREAMS} special file.
@item @manref{isastream(3)} -- @tab test for a @acronym{STREAMS} special file.
@item @manref{pipe(3)} -- @tab create a @acronym{STREAMS} pipe.
@item @manref{pstrlog(3)} -- @tab print a @acronym{STREAMS} log buffer.
@item @manref{s_pipe(3)} -- @tab create a @acronym{STREAMS} pipe.
@item @manref{strlog(3)} -- @tab print a @acronym{STREAMS} log buffer.
@item @manref{vstrlog(3)} -- @tab print a @acronym{STREAMS} log buffer.
@end multitable

The following manual pages are installed in Section 4 of the manual (in the subdirectory @file{/usr/share/man/man4}):

@multitable @columnfractions .40 .60
@item @manref{srvmod(4)} -- @tab @acronym{STREAMS} buffering null module.
@item @manref{clone(4)} -- @tab the @acronym{STREAMS} clone driver.
@item @manref{connld(4)} -- @tab @acronym{STREAMS} connection line discipline module.
@item @manref{conslog(4)} -- @tab @acronym{STREAMS} log device.
@item @manref{echo(4)} -- @tab echo @acronym{STREAMS} device.
@item @manref{fifo(4s)} -- @tab @acronym{STREAMS}-based FIFO device.
@item @manref{log(4)} -- @tab @acronym{STREAMS} log device.
@item @manref{loop(4)} -- @tab @acronym{STREAMS} loop-around pseudo-device driver.
@item @manref{loop_clone(4)} -- @tab @acronym{STREAMS} loop-around pseudo-device driver.
@item @manref{mux(4)} -- @tab @acronym{STREAMS} multiplexing pseudo-device driver.
@item @manref{nsdev(4)} -- @tab named @acronym{STREAMS} device.
@item @manref{nullmod(4)} -- @tab @acronym{STREAMS} null module.
@item @manref{nuls(4)} -- @tab null @acronym{STREAMS} device.
@item @manref{pipe(4)} -- @tab @acronym{STREAMS} bi-directional pipe device.
@item @manref{pipemod(4)} -- @tab @acronym{STREAMS}-based pipe module.
@item @manref{s_fifo(4)} -- @tab @acronym{STREAMS}-based FIFO device.
@item @manref{sad(4)} -- @tab @acronym{STREAMS} Administrative Driver.
@item @manref{sc(4)} -- @tab @acronym{STREAMS} Configuration module.
@item @manref{sfx(4)} -- @tab @acronym{STREAMS}-based FIFO device.
@item @manref{sloop(4)} -- @tab @acronym{STREAMS} loop-around pseudo-device driver.
@item @manref{spx(4)} -- @tab @acronym{STREAMS} bi-directional pipe device.
@item @manref{sth(4)} -- @tab @acronym{STREAMS} Stream head module.
@item @manref{strlog(4)} -- @tab @acronym{STREAMS} log device.
@item @manref{testmod(4)} -- @tab @acronym{STREAMS} test module.
@end multitable

The following manual pages are installed in Section 5 of the manual (in the subdirectory @file{/usr/share/man/man5}):

@multitable @columnfractions .40 .60
@item @manref{autopush(5)} -- @tab control the autopush module list for a @acronym{STREAMS} device.
@item @manref{specfs(5)} -- @tab @acronym{STREAMS} special device shadow file system.
@item @manref{strapush(5)} -- @tab @acronym{STREAMS} autopush structure.
@item @manref{strioctl(5)} -- @tab @acronym{STREAMS} I/O control data structure.
@item @manref{strsetup.conf(5)} -- @tab configuration file for @acronym{STREAMS} drivers.
@end multitable

The following manual pages are installed in Section 7 of the manual (in the subdirectory @file{/usr/share/man/man7}):

@multitable @columnfractions .40 .60
@item @manref{streamio(7)} -- @tab @acronym{STREAMS} ioctl commands.
@item @manref{I_ANCHOR(7)} -- @tab @acronym{STREAMS} anchor input-output control.
@item @manref{I_ATMARK(7)} -- @tab check if a @acronym{STREAMS} message is marked.
@item @manref{I_CANPUT(7)} -- @tab check if a @acronym{STREAMS} band is writable.
@item @manref{I_CKBAND(7)} -- @tab check if a @acronym{STREAMS} band is readable.
@item @manref{I_EGETSIG(7)} -- @tab get enhanced @acronym{STREAMS} SIGPOLL events.
@item @manref{I_ESETSIG(7)} -- @tab set enhanced @acronym{STREAMS} SIGPOLL events.
@item @manref{I_FATTACH(7)} -- @tab emulate @manpage{fattach(2)} system call.
@item @manref{I_FDETACH(7)} -- @tab emulate @manpage{fdetach(2s)} system call.
@item @manref{I_FDINSERT(7)} -- @tab insert a Stream identifier into a @acronym{STREAMS} message and send it downstream.
@item @manref{I_FIND(7)} -- @tab find a @acronym{STREAMS} module on a Stream.
@item @manref{I_FLUSH(7)} -- @tab flush messages from a @acronym{STREAMS} special file.
@item @manref{I_FLUSHBAND(7)} -- @tab flush messages for a band from a @acronym{STREAMS} special file.
@item @manref{I_GERROPT(7)} -- @tab get error options for a @acronym{STREAMS} file.
@item @manref{I_GETBAND(7)} -- @tab get band number of a message on a Stream.
@item @manref{I_GETCLTIME(7)} -- @tab get close time for a @acronym{STREAMS} file.
@item @manref{I_GETPMSG(7)} -- @tab @acronym{STREAMS} @manpage{getpmsg(2s)} system call emulation.
@item @manref{I_GETSIG(7)} -- @tab get SIGPOLL events.
@item @manref{I_GRDOPT(7)} -- @tab get @acronym{STREAMS} read options.
@item @manref{I_GWROPT(7)} -- @tab get @acronym{STREAMS} write options.
@item @manref{I_ISASTREAM(7)} -- @tab emulate @manpage{isastream(2s)} system call.
@item @manref{I_LINK(7)} -- @tab link a Stream beneath a @acronym{STREAMS} multiplexing driver.
@item @manref{I_LIST(7)} -- @tab list @acronym{STREAMS} module names on a Stream.
@item @manref{I_LOOK(7)} -- @tab look at topmost @acronym{STREAMS} module on a Stream.
@item @manref{I_NREAD(7)} -- @tab number of unread bytes on a Stream.
@item @manref{I_PEEK(7)} -- @tab peek at @acronym{STREAMS} message on read queue.
@item @manref{I_PIPE(7)} -- @tab obtain a @acronym{STREAMS} based pipe.
@item @manref{I_PLINK(7)} -- @tab persistently link a Stream beneath a @acronym{STREAMS} multiplexing driver.
@item @manref{I_POP(7)} -- @tab pop a @acronym{STREAMS} module from a Stream.
@item @manref{I_PUNLINK(7)} -- @tab unlink a @acronym{STREAMS} persistent link.
@item @manref{I_PUSH(7)} -- @tab push a @acronym{STREAMS} module on a Stream.
@item @manref{I_PUTPMSG(7)} -- @tab @acronym{STREAMS} @manpage{putpmsg(2s)} system call emulation.
@item @manref{I_RECVFD(7)} -- @tab receive a file descriptor on a Stream.
@item @manref{I_SENDFD(7)} -- @tab send a file descriptor on a Stream.
@item @manref{I_SERROPT(7)} -- @tab set error options for a @acronym{STREAMS} file.
@item @manref{I_SETCLTIME(7)} -- @tab set close time for a @acronym{STREAMS} file.
@item @manref{I_SETSIG(7)} -- @tab set SIGPOLL events.
@item @manref{I_SRDOPT(7)} -- @tab set @acronym{STREAMS} read options.
@item @manref{I_STR(7)} -- @tab @acronym{STREAMS} intput-output control.
@item @manref{I_SWROPT(7)} -- @tab set @acronym{STREAMS} write options.
@item @manref{I_UNLINK(7)} -- @tab unlink a Stream from a @acronym{STREAMS} multiplexing driver.
@end multitable

The following manual pages are installed in Section 8 of the manual (in the subdirectory @file{/usr/share/man/man8}):

@multitable @columnfractions .40 .60
@item @manref{autopush(8)} -- @tab control the autopush module list for a @acronym{STREAMS} device.
@item @manref{fattach(8)} -- @tab name a @acronym{STREAMS} file.
@item @manref{fdetach(8)} -- @tab unname a @acronym{STREAMS} file.
@item @manref{insf(8)} -- @tab install special device files.
@item @manref{perftest(8)} -- @tab @acronym{STREAMS} benchmark performance tests on a pipe.
@item @manref{perftestn(8)} -- @tab @acronym{STREAMS} benchmark performance tests on a pipe.
@item @manref{scls(8)} -- @tab produce a list of @acronym{STREAMS} module and driver names.
@item @manref{specfs(8)} -- @tab System V Init Script for the @acronym{STREAMS} Shadow Special Filesystem.
@item @manref{specfs.sh(8)} -- @tab System V Init Script for the @acronym{STREAMS} Shadow Special Filesystem.
@item @manref{strace(8)} -- @tab write @acronym{STREAMS} event trace messages to the standard output.
@item @manref{strclean(8)} -- @tab clean up the @acronym{STREAMS} error logger.
@item @manref{streams(8)} -- @tab System V Init Script for the @acronym{STREAMS} subsystem.
@item @manref{streams_mknod(8)} -- @tab create or remove @acronym{STREAMS} device nodes.
@item @manref{streams.sh(8)} -- @tab System V Init Script for the @acronym{STREAMS} subsystem.
@item @manref{strerr(8)} -- @tab receive error log messages from the @acronym{STREAMS} @manpage{log(4)} driver.
@item @manref{strinfo(8)} -- @tab display information about @acronym{STREAMS} devices.
@item @manref{strload(8)} -- @tab load the @acronym{STREAMS} subsystem.
@item @manref{strsetup(8)} -- @tab @acronym{STREAMS} setup command.
@item @manref{strvf(8)} -- @tab @acronym{STREAMS} verification tool.
@item @manref{test-clone(8)} -- @tab a test suite executable for the @manpage{clone(4)} @acronym{STREAMS} driver.
@item @manref{test-connld(8)} -- @tab a test suite executable for the @manpage{connld(4)} @acronym{STREAMS} module.
@item @manref{test-echo(8)} -- @tab a test suite executable for the @manpage{echo(4)} @acronym{STREAMS} driver.
@item @manref{test-fifo(8)} -- @tab a test suite executable for the @manpage{fifo(4s)} @acronym{STREAMS} driver.
@item @manref{test-log(8)} -- @tab a test suite executable for the @manpage{log(4)} @acronym{STREAMS} driver.
@item @manref{test-loop(8)} -- @tab a test suite executable for the @manpage{loop(4)} @acronym{STREAMS} driver.
@item @manref{test-mux(8)} -- @tab a test suite executable for the @manpage{mux(4)} @acronym{STREAMS} driver.
@item @manref{test-nsdev(8)} -- @tab a test suite executable for the @manpage{nsdev(4)} @acronym{STREAMS} driver.
@item @manref{test-nuls(8)} -- @tab a test suite executable for the @manpage{nuls(4)} @acronym{STREAMS} driver.
@item @manref{test-pipe(8)} -- @tab a test suite executable for the @manpage{pipe(4)} @acronym{STREAMS} driver.
@item @manref{test-pipemod(8)} -- @tab a test suite executable for the @manpage{pipemod(4)} @acronym{STREAMS} module.
@item @manref{test-sad(8)} -- @tab a test suite executable for the @manpage{sad(4)} @acronym{STREAMS} driver.
@item @manref{test-sc(8)} -- @tab a test suite executable for the @manpage{sc(4)} @acronym{STREAMS} module.
@item @manref{test-streams(8)} -- @tab a test suite executable for @acronym{STREAMS}.
@end multitable

The following manual pages are installed in Section 9 of the manual (in the subdirectory @file{/usr/share/man/man9}):

@multitable @columnfractions .40 .60
@item @manref{Intro(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{STREAMS(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{SPG(9)} -- @tab @cite{Linux Fast-STREAMS} Programmers Guide.
@item @manref{DDI(9)} -- @tab Device Driver interface/Driver Kernel Interface.
@item @manref{LfS(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{mp-streams(9)} -- @tab multi-processor @acronym{STREAMS} executive.
@item @manref{M_BACKDONE(9)} -- @tab @acronym{STREAMS} backwash done direct I/O message.
@item @manref{M_BACKWASH(9)} -- @tab @acronym{STREAMS} backwash direct I/O message.
@item @manref{M_BREAK(9)} -- @tab @acronym{STREAMS} break message.
@item @manref{M_COPYIN(9)} -- @tab @acronym{STREAMS} copyin message.
@item @manref{M_COPYOUT(9)} -- @tab @acronym{STREAMS} copyout message.
@item @manref{M_CTL(9)} -- @tab @acronym{STREAMS} control message.
@item @manref{M_DATA(9)} -- @tab @acronym{STREAMS} data message.
@item @manref{M_DELAY(9)} -- @tab @acronym{STREAMS} delay message.
@item @manref{M_DONTPLAY(9)} -- @tab @acronym{STREAMS} don't play direct I/O message.
@item @manref{M_ERROR(9)} -- @tab @acronym{STREAMS} error message.
@item @manref{M_EVENT(9)} -- @tab @acronym{STREAMS} event message.
@item @manref{M_FLUSH(9)} -- @tab @acronym{STREAMS} flush message.
@item @manref{M_HANGUP(9)} -- @tab @acronym{STREAMS} hangup message.
@item @manref{M_HPDATA(9)} -- @tab @acronym{STREAMS} high priority data message.
@item @manref{M_IOCACK(9)} -- @tab @acronym{STREAMS} IO control acknowledgement message.
@item @manref{M_IOCDATA(9)} -- @tab @acronym{STREAMS} IO control data message.
@item @manref{M_IOCNAK(9)} -- @tab @acronym{STREAMS} IO control negative acknowledgement message.
@item @manref{M_IOCTL(9)} -- @tab @acronym{STREAMS} IO control message.
@item @manref{M_LETSPLAY(9)} -- @tab @acronym{STREAMS} let's plan direct I/O message.
@item @manref{M_NOTIFY(9)} -- @tab @acronym{STREAMS} notify message.
@item @manref{M_PASSFP(9)} -- @tab @acronym{STREAMS} pass file pointer message.
@item @manref{M_PCCTL(9)} -- @tab @acronym{STREAMS} priority control message.
@item @manref{M_PCEVENT(9)} -- @tab @acronym{STREAMS} priority event message.
@item @manref{M_PCPROTO(9)} -- @tab @acronym{STREAMS} priority protocol message.
@item @manref{M_PCRSE(9)} -- @tab @acronym{STREAMS} priority reserved message.
@item @manref{M_PCSETOPTS(9)} -- @tab @acronym{STREAMS} priority set options message.
@item @manref{M_PCSIG(9)} -- @tab @acronym{STREAMS} priority signal message.
@item @manref{M_PROTO(9)} -- @tab @acronym{STREAMS} protocol message.
@item @manref{M_READ(9)} -- @tab @acronym{STREAMS} read message.
@item @manref{M_RSE(9)} -- @tab @acronym{STREAMS} reserved message.
@item @manref{M_SETOPTS(9)} -- @tab @acronym{STREAMS} set options message.
@item @manref{M_SIG(9)} -- @tab @acronym{STREAMS} signal message.
@item @manref{M_START(9)} -- @tab @acronym{STREAMS} start message.
@item @manref{M_STARTI(9)} -- @tab @acronym{STREAMS} start input message.
@item @manref{M_STOP(9)} -- @tab @acronym{STREAMS} stop message.
@item @manref{M_STOPI(9)} -- @tab @acronym{STREAMS} stop input message.
@item @manref{M_TRAIL(9)} -- @tab @acronym{STREAMS} trail message.
@item @manref{M_UNHANGUP(9)} -- @tab @acronym{STREAMS} unhangup message.
@item @manref{OTHERQ(9)} -- @tab return other queue of a @acronym{STREAMS} queue pair.
@item @manref{QNORM(9)} -- @tab @acronym{STREAMS} data block structure.
@item @manref{QPCTL(9)} -- @tab @acronym{STREAMS} data block structure.
@item @manref{RD(9)} -- @tab return the read queue of a @acronym{STREAMS} queue pair.
@item @manref{SAMESTR(9)} -- @tab test for a @acronym{STREAMS} pipe or FIFO.
@item @manref{WR(9)} -- @tab return the write queue of a @acronym{STREAMS} queue pair.
@item @manref{adjmsg(9)} -- @tab trim bytes from the front or back of a @acronym{STREAMS} message.
@item @manref{allocb(9)} -- @tab allocate a @acronym{STREAMS} message and data block.
@item @manref{alloclk(9)} -- @tab allocate or free a @acronym{STREAMS} link block.
@item @manref{allocq(9)} -- @tab allocate a @acronym{STREAMS} queue pair.
@item @manref{allocstr(9)} -- @tab allocate a @acronym{STREAMS} Stream head.
@item @manref{appq(9)} -- @tab append one @acronym{STREAMS} message after another.
@item @manref{apush_get(9)} -- @tab get the autopush list associated with a @acronym{STREAMS} driver.
@item @manref{apush_set(9)} -- @tab set the autopush list associated with a @acronym{STREAMS} driver.
@item @manref{apush_vml(9)} -- @tab verify a @acronym{STREAMS} module list.
@item @manref{autopush(9)} -- @tab perform autopush operations on a newly opened Stream.
@item @manref{autopush_add(9)} -- @tab add an autopush list entry for a given @acronym{STREAMS} device number.
@item @manref{autopush_del(9)} -- @tab delete an autopush list entry for a given @acronym{STREAMS} device number.
@item @manref{autopush_find(9)} -- @tab find an autopush list entry for a given @acronym{STREAMS} device number.
@item @manref{autopush_search(9)} -- @tab find an autopush list entry for a given @acronym{STREAMS} device name and number.
@item @manref{autopush_vml(9)} -- @tab verify a @acronym{STREAMS} module list.
@item @manref{backq(9)} -- @tab find the upstream or downstream queue.
@item @manref{bcanget(9)} -- @tab test for message arrival on a band on a Stream.
@item @manref{bcangetany(9)} -- @tab check whether messages are in any (non-zero) band.
@item @manref{bcanput(9)} -- @tab test flow control on a @acronym{STREAMS} message queue.
@item @manref{bcanputany(9)} -- @tab check if a message can be put to any (non-zero) band on a queue.
@item @manref{bcanputnext(9)} -- @tab test flow control on the next @acronym{STREAMS} message queue.
@item @manref{bcanputnextany(9)} -- @tab check if a message can be put to any (non-zero) band on the next queue.
@item @manref{bcid_t(9)} -- @tab install a buffer callback.
@item @manref{bcmp(9)} -- @tab compare byte strings.
@item @manref{bcopy(9)} -- @tab copy byte strings.
@item @manref{bufcall(9)} -- @tab install a buffer callback.
@item @manref{bufcall_id_t(9)} -- @tab install a buffer callback.
@item @manref{bzero(9)} -- @tab zero a byte string.
@item @manref{canenable(9)} -- @tab test whether a @acronym{STREAMS} message queue can be scheduled.
@item @manref{canget(9)} -- @tab test for message arrival on a Stream.
@item @manref{canput(9)} -- @tab test flow control on a @acronym{STREAMS} message queue.
@item @manref{canputnext(9)} -- @tab test flow control on the next @acronym{STREAMS} message queue.
@item @manref{cdev_count(9)} -- @tab character device switch table helper functions.
@item @manref{cdev_find(9)} -- @tab character device switch table helper functions.
@item @manref{cdev_match(9)} -- @tab character device switch table helper functions.
@item @manref{cdev_minor(9)} -- @tab character device switch table helper functions.
@item @manref{cdev_str(9)} -- @tab character device switch table helper functions.
@item @manref{cdevsw(9)} -- @tab the @cite{SVR 4} character device switch table structure.
@item @manref{cdevsw_list(9)} -- @tab the @cite{SVR 4} character device switch table structure.
@item @manref{cdevsw_lock(9)} -- @tab the @cite{SVR 4} character device switch table structure.
@item @manref{cdrv_get(9)} -- @tab the @cite{SVR 4} character device switch table structure.
@item @manref{cdrv_put(9)} -- @tab the @cite{SVR 4} character device switch table structure.
@item @manref{cmaj_add(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmaj_del(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmaj_get(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_add(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_count(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_del(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_find(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_get(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_ini(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmin_rel(9)} -- @tab major/minor character device node helper functions.
@item @manref{cmn_err(9)} -- @tab print a kernel command error.
@item @manref{copyb(9)} -- @tab copy a @acronym{STREAMS} message block.
@item @manref{copyin(9)} -- @tab copy user data in from user space to kernel space.
@item @manref{copymsg(9)} -- @tab copy a @acronym{STREAMS} message.
@item @manref{copyout(9)} -- @tab copy user data in from kernel space to user space.
@item @manref{copyreq(9)} -- @tab @acronym{STREAMS} copy request block structure.
@item @manref{copyresp(9)} -- @tab @acronym{STREAMS} copy response block structure.
@item @manref{cred_t(9)} -- @tab credentials structure.
@item @manref{ctlmsg(9)} -- @tab test a @acronym{STREAMS} message type for control.
@item @manref{datab(9)} -- @tab @acronym{STREAMS} data block structure.
@item @manref{datamsg(9)} -- @tab test a @acronym{STREAMS} message type for data.
@item @manref{dblk_t(9)} -- @tab @acronym{STREAMS} data block structure.
@item @manref{delay(9)} -- @tab postpone the calling process for a number of clock ticks.
@item @manref{dev_t(9)} -- @tab @acronym{STREAMS} device type.
@item @manref{devnode(9)} -- @tab @acronym{STREAMS} character device node structure.
@item @manref{do_fattach(9)} -- @tab implement the @manpage{fattach(2)} system call.
@item @manref{do_fdetach(9)} -- @tab implement the @manpage{fdetach(2s)} system call.
@item @manref{do_spipe(9)} -- @tab implement the @manpage{pipe(2s)} system call.
@item @manref{drv_getparm(9)} -- @tab driver retrieve kernel parameter.
@item @manref{drv_hztomsec(9)} -- @tab convert kernel tick time between microseconds or milliseconds.
@item @manref{drv_hztousec(9)} -- @tab convert kernel tick time between microseconds or milliseconds.
@item @manref{drv_msectohz(9)} -- @tab convert kernel tick time between microseconds or milliseconds.
@item @manref{drv_priv(9)} -- @tab check if current process is privileged.
@item @manref{drv_usectohz(9)} -- @tab convert kernel tick time between microseconds or milliseconds.
@item @manref{drv_usecwait(9)} -- @tab delay for a number of microseconds.
@item @manref{dupb(9)} -- @tab duplicate a @acronym{STREAMS} message block.
@item @manref{dupmsg(9)} -- @tab duplicate a @acronym{STREAMS} message.
@item @manref{enableok(9)} -- @tab allow a @acronym{STREAMS} message queue to be scheduled.
@item @manref{enableq(9)} -- @tab schedule a @acronym{STREAMS} message queue service procedure.
@item @manref{esballoc(9)} -- @tab allocate a @acronym{STREAMS} message and data block with caller supplied data buffer.
@item @manref{esbbcall(9)} -- @tab install a buffer callback for an extended @acronym{STREAMS} message block.
@item @manref{flushband(9)} -- @tab flushes a band of @acronym{STREAMS} messages from a queue.
@item @manref{flushq(9)} -- @tab flush messages from a @dfn{STERAMS} message queue.
@item @manref{fmod_add(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_count(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_del(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_find(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_get(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_put(9)} -- @tab file module switch table helper functions.
@item @manref{fmod_str(9)} -- @tab file module switch table helper functions.
@item @manref{fmodsw(9)} -- @tab the @cite{SVR 4} @acronym{STREAMS} module switch table.
@item @manref{fmodsw_list(9)} -- @tab the @cite{SVR 4} @acronym{STREAMS} module switch table.
@item @manref{fmodsw_lock(9)} -- @tab the @cite{SVR 4} @acronym{STREAMS} module switch table.
@item @manref{freeb(9)} -- @tab frees a @acronym{STREAMS} message block.
@item @manref{freelk(9)} -- @tab allocate or free a @acronym{STREAMS} link block.
@item @manref{freemsg(9)} -- @tab frees a @acronym{STREAMS} message.
@item @manref{freeq(9)} -- @tab deallocate a @acronym{STREAMS} queue pair.
@item @manref{freestr(9)} -- @tab deallocate a @acronym{STREAMS} Stream head.
@item @manref{freezestr(9)} -- @tab freeze the state of a Stream.
@item @manref{frtn_t(9)} -- @tab allocate a @acronym{STREAMS} message and data block with caller supplied data buffer.
@item @manref{getadmin(9)} -- @tab get the administrative function pointer for a @acronym{STREAMS} module.
@item @manref{getmajor(9)} -- @tab get the internal major device number for a device.
@item @manref{getmid(9)} -- @tab get the @acronym{STREAMS} module id for a name.
@item @manref{getminor(9)} -- @tab get the extended minor device number for a device.
@item @manref{getq(9)} -- @tab get a message from a @acronym{STREAMS} message queue.
@item @manref{insq(9)} -- @tab insert a message into a @acronym{STREAMS} message queue.
@item @manref{iocblk(9)} -- @tab @acronym{STREAMS} input-output control block structure.
@item @manref{isdatablk(9)} -- @tab test a @acronym{STREAMS} data block for data type.
@item @manref{isdatamsg(9)} -- @tab test a @acronym{STREAMS} data block for data type.
@item @manref{kmem_alloc(9)} -- @tab allocate kernel memory.
@item @manref{kmem_alloc_node(9)} -- @tab allocate kernel memory.
@item @manref{kmem_free(9)} -- @tab deallocate kernel memory.
@item @manref{kmem_zalloc(9)} -- @tab allocate and zero kernel memory.
@item @manref{kmem_zalloc_node(9)} -- @tab allocate and zero kernel memory.
@item @manref{linkb(9)} -- @tab link a message block to a @acronym{STREAMS} message.
@item @manref{linkblk(9)} -- @tab @acronym{STREAMS} link block structure.
@item @manref{linkmsg(9)} -- @tab link a message block to a @acronym{STREAMS} message.
@item @manref{major_t(9)} -- @tab get the internal major device number for a device.
@item @manref{makedevice(9)} -- @tab create a device from major and minor device numbers.
@item @manref{max(9)} -- @tab determine the maximum of two integers.
@item @manref{mblk_t(9)} -- @tab @acronym{STREAMS} message block structure.
@item @manref{min(9)} -- @tab determine the minimum of two integers.
@item @manref{minor_t(9)} -- @tab get the extended minor device number for a device.
@item @manref{modID_t(9)} -- @tab get the @acronym{STREAMS} module id for a name.
@item @manref{module_info(9)} -- @tab @acronym{STREAMS} module information structure.
@item @manref{module_stat(9)} -- @tab @acronym{STREAMS} module statistics structure.
@item @manref{module_stat_t(9)} -- @tab @acronym{STREAMS} module statistics structure.
@item @manref{msgb(9)} -- @tab @acronym{STREAMS} message block structure.
@item @manref{msgdsize(9)} -- @tab calculate the size of the data in a @acronym{STREAMS} message.
@item @manref{msgpullup(9)} -- @tab pull up bytes in a @acronym{STREAMS} message.
@item @manref{msgsize(9)} -- @tab calculate the size of the message blocks in a @acronym{STREAMS} message.
@item @manref{noenable(9)} -- @tab disable a @acronym{STREAMS} message queue from being scheduled.
@item @manref{pcmsg(9)} -- @tab test a data block message type for priority control.
@item @manref{pullupmsg(9)} -- @tab pull up the bytes in a @acronym{STREAMS} message.
@item @manref{put(9s)} -- @tab invoke the put procedure for a @acronym{STREAMS} driver of module with a @acronym{STREAMS} message.
@item @manref{putbq(9)} -- @tab put a message back on a @acronym{STREAMS} message queue.
@item @manref{putctl(9)} -- @tab put a control message on a @acronym{STREAMS} message queue.
@item @manref{putctl1(9)} -- @tab put a one-byte control message on a @acronym{STREAMS} message queue.
@item @manref{putctl2(9)} -- @tab put a two-byte control message on a @acronym{STREAMS} message queue.
@item @manref{putnext(9)} -- @tab put a message on the downstream @acronym{STREAMS} message queue.
@item @manref{putnextctl(9)} -- @tab put a control message on the next @acronym{STREAMS} message queue.
@item @manref{putnextctl1(9)} -- @tab put a one-byte control message on the next @acronym{STREAMS} message queue.
@item @manref{putnextctl2(9)} -- @tab put a two-byte control message on the next @acronym{STREAMS} message queue.
@item @manref{putq(9)} -- @tab put a message on a @acronym{STREAMS} message queue.
@item @manref{qattach(9)} -- @tab attach a module onto a @acronym{STREAMS} file.
@item @manref{qbackenable(9)} -- @tab perform back enabling on a @acronym{STREAMS} queue.
@item @manref{qband(9)} -- @tab queue band structure.
@item @manref{qband_t(9)} -- @tab queue band structure.
@item @manref{qclose(9)} -- @tab close a @acronym{STREAMS} driver or module.
@item @manref{qcountstrm(9)} -- @tab add all counts on all @acronym{STREAMS} message queues in a Stream.
@item @manref{qdelete(9)} -- @tab delete a queue pair from a Stream.
@item @manref{qdetach(9)} -- @tab detach a module from a @acronym{STREAMS} file.
@item @manref{qenable(9)} -- @tab schedule a @acronym{STREAMS} message queue service procedure.
@item @manref{qfields(9)} -- @tab set attributes of a @acronym{STREAMS} message queue.
@item @manref{qfields_t(9)} -- @tab set attributes of a @acronym{STREAMS} message queue.
@item @manref{qi_putp(9)} -- @tab @acronym{STREAMS} driver or module put procedure.
@item @manref{qi_putp_t(9)} -- @tab @acronym{STREAMS} driver or module put procedure.
@item @manref{qi_qadmin(9)} -- @tab @acronym{STREAMS} driver or module admin routine.
@item @manref{qi_qadmin_t(9)} -- @tab @acronym{STREAMS} driver or module admin routine.
@item @manref{qi_qclose(9)} -- @tab @acronym{STREAMS} driver or module close routine.
@item @manref{qi_qclose_t(9)} -- @tab @acronym{STREAMS} driver or module close routine.
@item @manref{qi_qopen(9)} -- @tab @acronym{STREAMS} driver or module open routine.
@item @manref{qi_qopen_t(9)} -- @tab @acronym{STREAMS} driver or module open routine.
@item @manref{qi_srvp(9)} -- @tab @acronym{STREAMS} driver or module service procedure.
@item @manref{qi_srvp_t(9)} -- @tab @acronym{STREAMS} driver or module service procedure.
@item @manref{qinit(9)} -- @tab @acronym{STREAMS} queue initialization structure.
@item @manref{qinsert(9)} -- @tab insert a queue pair beneath another queue pair in a Stream.
@item @manref{qopen(9)} -- @tab call a @acronym{STREAMS} driver or module open routine.
@item @manref{qprocsoff(9)} -- @tab disable @acronym{STREAMS} message queue processing for multi-processing.
@item @manref{qprocson(9)} -- @tab enable a @acronym{STREAMS} message queue for multi-processing.
@item @manref{qready(9)} -- @tab test if queue procedures are scheduled.
@item @manref{qreply(9)} -- @tab replies to a message from a @acronym{STREAMS} message queue.
@item @manref{qscan(9)} -- @tab place a queue on the scan list.
@item @manref{qsize(9)} -- @tab return the number of messages on a queue.
@item @manref{queue(9)} -- @tab @acronym{STREAMS} message queue structure.
@item @manref{queue_t(9)} -- @tab @acronym{STREAMS} message queue structure.
@item @manref{register_clone(9)} -- @tab register a @manpage{clone(4)} minor.
@item @manref{register_cmajor(9)} -- @tab register external device major number.
@item @manref{register_ioctl32(9)} -- @tab register a 32-bit IO control command.
@item @manref{register_strdev(9)} -- @tab register a @acronym{STREAMS} device.
@item @manref{register_strdrv(9)} -- @tab register a @acronym{STREAMS} driver.
@item @manref{register_strlog(9)} -- @tab register a @acronym{STREAMS} logger.
@item @manref{register_strmod(9)} -- @tab register a @acronym{STREAMS} module.
@item @manref{register_strnod(9)} -- @tab register a @acronym{STREAMS} minor device node.
@item @manref{rmvb(9)} -- @tab remove a message block from a @acronym{STREAMS} message.
@item @manref{rmvq(9)} -- @tab remove a message from a @acronym{STREAMS} message queue.
@item @manref{runqueues(9)} -- @tab run queue service procedures and other asynchronous @acronym{STREAMS} events.
@item @manref{sd_get(9)} -- @tab acquire and release a reference to the Stream head.
@item @manref{sd_put(9)} -- @tab acquire and release a reference to the Stream head.
@item @manref{sdev_add(9)} -- @tab character device switch table helper functions.
@item @manref{sdev_del(9)} -- @tab character device switch table helper functions.
@item @manref{sdev_get(9)} -- @tab character device switch table helper functions.
@item @manref{sdev_ini(9)} -- @tab character device switch table helper functions.
@item @manref{sdev_put(9)} -- @tab character device switch table helper functions.
@item @manref{sdev_rel(9)} -- @tab character device switch table helper functions.
@item @manref{sealloc(9)} -- @tab @acronym{STREAMS} event allocators.
@item @manref{sefree(9)} -- @tab @acronym{STREAMS} event allocators.
@item @manref{setq(9)} -- @tab set sizes and procedures associated with a @acronym{STREAMS} message queue.
@item @manref{setqsched(9)} -- @tab invoke the @acronym{STREAMS} scheduler.
@item @manref{setsq(9)} -- @tab set synchronization queues, sizes and procedures associated with a @acronym{STREAMS} message queue.
@item @manref{skballoc(9)} -- @tab allocate a @acronym{STREAMS} message and data block with a caller supplied socket buffer.
@item @manref{spec_open(9)} -- @tab @acronym{STREAMS} special device shadow file system.
@item @manref{spec_reparent(9)} -- @tab @acronym{STREAMS} special device shadow file system.
@item @manref{specfs_mount(9)} -- @tab @acronym{STREAMS} special device shadow file system.
@item @manref{specfs_umount(9)} -- @tab @acronym{STREAMS} special device shadow file system.
@item @manref{str_close(9)} -- @tab Stream head module procedures.
@item @manref{str_open(9)} -- @tab Stream head module procedures.
@item @manref{streamtab(9)} -- @tab @acronym{STREAMS} module definition structure.
@item @manref{streamtab_t(9)} -- @tab @acronym{STREAMS} module definition structure.
@item @manref{strgetpmsg(9)} -- @tab perform a @manpage{getpmsg(2s)} operation on a Stream head.
@item @manref{strioctl(9)} -- @tab perform a @manpage{ioctl(2s)} operation on a Stream head.
@item @manref{strlog(9)} -- @tab pass a message to the @acronym{STREAMS} logger.
@item @manref{strm_f_ops(9)} -- @tab file operations for Stream heads.
@item @manref{stroptions(9)} -- @tab @acronym{STREAMS} Stream head options structure.
@item @manref{strpoll(9)} -- @tab perform a @manpage{poll(2s)} operation on a Stream head.
@item @manref{strputpmsg(9)} -- @tab perform a @manpage{putpmsg(2s)} operation on a Stream head.
@item @manref{strqget(9)} -- @tab get attributes of a @acronym{STREAMS} message queue.
@item @manref{strqset(9)} -- @tab set attributes of a @acronym{STREAMS} message queue.
@item @manref{strread(9)} -- @tab perform a @manpage{read(2s)} operation on a Stream head.
@item @manref{strrput(9)} -- @tab Stream head module procedures.
@item @manref{strsendpage(9)} -- @tab perform a @manpage{sendfile(2s)} operation on a Stream head.
@item @manref{strthread(9)} -- @tab the @cite{SVR 4} @acronym{STREAMS} scheduler thread structure and array.
@item @manref{strthreads(9)} -- @tab the @cite{SVR 4} @acronym{STREAMS} scheduler thread structure and array.
@item @manref{strwput(9)} -- @tab Stream head module procedures.
@item @manref{strwrite(9)} -- @tab perform a @manpage{write(2s)} operation on a Stream head.
@item @manref{strwsrv(9)} -- @tab Stream head module procedures.
@item @manref{sysctl_str_nstrpush(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{sysctl_str_strctlsz(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{sysctl_str_strmsgsz(9)} -- @tab introduction to @acronym{STREAMS} kernel functions.
@item @manref{testb(9)} -- @tab test if a @acronym{STREAMS} message can be allocated.
@item @manref{timeout(9)} -- @tab start a timer.
@item @manref{timeout_id_t(9)} -- @tab start a timer.
@item @manref{timo_fcn_t(9)} -- @tab start a timer.
@item @manref{toid_t(9)} -- @tab start a timer.
@item @manref{unbufcall(9)} -- @tab remove a @acronym{STREAMS} buffer callback.
@item @manref{unfreezestr(9)} -- @tab thaw the state of a Stream queue.
@item @manref{unlinkb(9)} -- @tab unlink a message block from a @acronym{STREAMS} message.
@item @manref{unlinkmsg(9)} -- @tab unlink a message block from a @acronym{STREAMS} message.
@item @manref{unregister_clone(9)} -- @tab unregister a @manpage{clone(4)} minor.
@item @manref{unregister_cmajor(9)} -- @tab unregister external device major number.
@item @manref{unregister_ioctl32(9)} -- @tab unregister a 32-bit IO control command.
@item @manref{unregister_strdev(9)} -- @tab unregister a @acronym{STREAMS} device.
@item @manref{unregister_strdrv(9)} -- @tab unregister a @acronym{STREAMS} driver.
@item @manref{unregister_strmod(9)} -- @tab unregister a @acronym{STREAMS} module.
@item @manref{unregister_strnod(9)} -- @tab unregister a @acronym{STREAMS} minor device node.
@item @manref{untimeout(9)} -- @tab stop a timer.
@item @manref{unweldq(9)} -- @tab unweld two queues.
@item @manref{vcmn_err(9)} -- @tab print a kernel command error.
@item @manref{vstrlog(9)} -- @tab pass a message to the @acronym{STREAMS} logger.
@item @manref{vstrlog_t(9)} -- @tab register a new @acronym{STREAMS} log device.
@item @manref{weld_arg_t(9)} -- @tab weld two (or four) queues together.
@item @manref{weld_fcn_t(9)} -- @tab weld two (or four) queues together.
@item @manref{weldq(9)} -- @tab weld two (or four) queues together.
@item @manref{xmsgsize(9)} -- @tab calculate the size of message blocks in a @acronym{STREAMS} message.
@end multitable

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Porting
@chapter Porting
@cindex porting

@menu
* Porting from SVR 4.2 MP::
* Porting from Solaris::
* Porting from UnixWare::
* Porting from Mentat::
@end menu

@cite{@value{PACKAGE_TITLE}} provides a rich set of @acronym{STREAMS} functions, DDI/DKI functions and
utilities based on @cite{SVR 4.2 MP} for the development of @acronym{STREAMS} modules and drivers.
Although these functions and capabilities provide all of the utilities necessary for the development
of @acronym{STREAMS} modules and drivers, it represents the common set of functions provided by other
@acronym{STREAMS} implementations.

Some other @acronym{STREAMS} implementations provide interfaces, utilities and helper functions specific
to those implementations.  Where @acronym{STREAMS} implementations differ the most is in the manner in
which they configure and register @acronym{STREAMS} drivers and modules for interface to the operating
system, including registration functions, device numbering, creation of minor device nodes,
administration and other mechanisms not specified by the @cite{System V Release 4 Programmer's Guide
-- STREAMS}.

To assist with porting of @acronym{STREAMS} drivers and modules from other @acronym{STREAMS} implementations
and @cite{UNIX} based operating systems to @cite{@value{PACKAGE_TITLE}},
@cite{@value{PACKAGE_TITLE}} provides a separate @cite{@acronym{STREAMS} Compatibility} add-on package,
called @file{strcompat-@value{VERSION_STRCOMPAT}},@footnote{Previously the @cite{@acronym{STREAMS}
Compatibility} modules were part of the @cite{@value{PACKAGE_TITLE}} base package.  They were
separated to an add-on package for a number of reasons that are described in the @cite{OpenSS7
STREAMS Compatibility -- Installation and Reference Manual.}} that provide source level compatibility
with a wide range of mainstream @acronym{STREAMS} implementations and significant groups of
compatibility and helper functions (such as those from @cite{Solaris} and @cite{Mentat}).  These
compatibility packages also provide separate demand loadable kernel modules that provide the
additional compatibility functionality with @cite{@value{PACKAGE_TITLE}}.

In general, when porting to @cite{@value{PACKAGE_TITLE}} from another @acronym{STREAMS} implementation,
the following items will need the most attention:

@table @emph

@item Header Files
The @acronym{STREAMS} and operating system specific header files that must be included by kernel modules
to implement @acronym{STREAMS} drivers or modules are specific to each @acronym{STREAMS} implementation.
Although there are some basic header files to include (@file{sys/stream.h}, @file{sys/strconf.h},
@file{sys/ddi.h}, @cite{sys/cmn_err.h}, @cite{sys/dki.h}, @cite{sys/kmem.h}), the order in which
these headers are included and the additional operating system specific headers are implementation
specific.  See the example drivers and modules for the header files that are necessary for
@cite{@value{PACKAGE_TITLE}} @acronym{STREAMS} modules and drivers.

@item Kernel Module Mechanism
The mechanism for creating, configuring and loading kernel modules is specific to the operating
system implementation.  @cite{@value{PACKAGE_TITLE}} uses the normal @cite{Linux} mechanisms for
kernel modules also for @acronym{STREAMS} drivers and modules.

@item Configuration and Registration
The @acronym{STREAMS} driver or module will need to be converted to use the @cite{@value{PACKAGE_TITLE}}
configuration and registration mechanisms.  See @manref{register_strdev(9)},
@manref{unregister_strdev(9)}, @manref{register_strmod(9)} and @manref{unregister_strmod(9)} for
more specific information on the @cite{@value{PACKAGE_TITLE}} configuration and registration
mechanisms.

@item Non-@acronym{STREAMS} DDI/DKI Facilities
Any of the non-@acronym{STREAMS} DDI/DKI facilities or operating system specific facilities that are
used by the @acronym{STREAMS} driver or module may need to be replaced with the @cite{Linux} equivalent.
Examples of such facilities include basic locks, read-write locks, semaphores and mutexes, atomic
integers, interrupt suppression, bus access and memory mapping functions.

@item Binary Modules
When @acronym{STREAMS} drivers or modules are released as binary objects and source code is not
available, it is still possible to convert the binary module for use with
@cite{@value{PACKAGE_TITLE}}.  The facility to convert binary modules for use with
@cite{@value{PACKAGE_TITLE}} is not, however, part of the base package and is not part of the
@cite{STREAMS Compatibility} package.  A separate add-on package, the @cite{Binary Compatibility
Modules} package, @file{strbcm-@value{VERSION_STRBCM}} was developed explicitly for this
purpose.@footnote{Because binary compatibility is a thorny issue, both from the standpoint of
technical merit and licensing issues, the @file{strbcm} package is only currently available to
subscribers and sponsors of the @cite{OpenSS7 Project}.}

@end table

@node Porting from SVR 4.2 MP
@section Porting from SVR 4.2 MP
@cindex porting from SVR 4.2 MP

When porting from @cite{SVR 4.2 MP} or a @acronym{STREAMS} implementation based closely on @cite{SVR 4.2
MP}, such as @cite{SUPER-UX}, @cite{UXP/V}, @cite{IRIX} or many of the real-time operating system
implementations (e.g. @cite{VxWorks}), it is possible to port directly to
@cite{@value{PACKAGE_TITLE}} without using the @cite{STREAMS Compatibility} package.  Event when
porting from @cite{AIX}, @cite{HP-UX} and @cite{OSF/1} it is possible to avoid using the
compatibility package.

Most pseudo-device drivers and modules should not require any special facilities beyond basic locks
and porting may be straightforward.  Where extensive implementation specific DDI/DKI or operating
system functions are required, it is better to use the @cite{STREAMS Compatibility} package and
modules closest to the specific implementation being ported from.

@node Porting from Solaris
@section Porting from Solaris
@cindex porting from Solaris

When porting from @cite{Solaris} there are both @acronym{STREAMS} facilities and extensive DDI/DKI
facilities that differ greatly from basic @cite{SVR 4.2 MP} @acronym{STREAMS} and DDI/DKI functions.
For porting all but the most trivial of @acronym{STREAMS} drivers and modules written specifically for
@cite{Solaris}, it is better to use the @cite{STREAMS Compatibility} package and the @cite{Solaris}
compatibility module provided by that package.@footnote{The compatibility package also provides a
version of the @file{strsun.h} header file and the helper functions provided there.}

@node Porting from UnixWare
@section Porting from UnixWare
@cindex porting from UnixWare

When porting from @cite{UnixWare} there are extensive operating system facilities that differ
greatly from basic @cite{Linux} facilities.  For the most part these are basic locks, read-write
locks, condition variables, sleep locks, atomic integers, bus access and mapping functions.
Although @cite{Linux} provides equivalents in most of these categories, the @cite{STREAMS
Compatibility} package contains a compatibility module for @cite{UnixWare} that provides source
compatibility with most of these functions.  It is recommended that all but the most trivial of
@cite{UnixWare} drivers and modules use the @cite{STREAMS Compatibility} package when porting.

@node Porting from Mentat
@section Porting from Mentat
@cindex porting from Mentat

When porting a @acronym{STREAMS} driver or module from a @cite{Mentat} implementation (such as
@cite{AIX}, @cite{HP-UX}, @cite{OSF/1}, @cite{Mac OT}) that makes heavy use of the @cite{Mentat}
@samp{mi_} or @samp{mps_} helper functions, it is best to use the OpenSS7 implementations of those
functions available in the @cite{STREAMS Compatibility} package directly.  The @cite{STREAMS
Compatibility} package provides a @cite{Mentat Portable STREAMS} compatibility module that provides
implementations of the @cite{Mentat} functions found in @cite{AIX}, @cite{OSF/1} and @cite{Mac
OT}.@footnote{Note that @cite{Solaris} also provides versions of the @cite{Mentat} functions which
appear in the @cite{Solaris} compatiblity module.}

@ignore
@table @cite
@item --- SVR 4.2 ES/MP
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{SVR 4.2 ES/MP}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from SVR 4.2 MP, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- AIX 5L Version 5.1
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{AIX 5L Version 5.1}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from AIX 5L Version 5.1, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- HP-UX 11.0i v2
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{HP-UX 11.0i v2}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from HP-UX 11.0i v2, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- OSF/1 1.2/Digital UNIX/True 64
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{OSF/1 1.2/Digital UNIX/True 64}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from OSF/1 1.2/Digital UNIX, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- UnixWare 7.1.3 (OpenUnix 8)
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{UnixWare 7.1.3 (OpenUnix 8)}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from UnixWare 7.1.3 (OpenUnix 8), , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- Solaris 9/SunOS 5.9
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{Solaris 9/SunOS 5.9}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from Solaris 9/SunOS 5.9, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- SUPER-UX
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{SUPER-UX}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from SUPER-UX, , , porting, Linux Fast-STREAMS Porting Guide}.

@item --- UXP/V
@cite{@value{PACKAGE_TITLE}} provides compatibility functions for source level compatibility with
@cite{UXP/V}
and to ease porting of modules and drivers to @cite{@value{PACKAGE_TITLE}}.
Portability considerations are maintained in a separate manual:
@pxref{Porting from UXP/V, , , porting, Linux Fast-STREAMS Porting Guide}.

@end table

For additional details,
@pxref{Top, , About This Manual, proting, Linux Fast-STREAMS Porting Guide}.
@end ignore

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Conformance
@chapter Conformance
@cindex conformance

@menu
* Standards Compliance::
* STREAMS Compatibility::
@end menu

@node Standards Compliance
@section Standards Compliance
@cindex standard compliance

@cite{@value{PACKAGE_TITLE}} was designed and implemented to be compliant with as many standards
impinging on @acronym{STREAMS} as possible.  There are three areas of standards compliance as follows:

@subsection User Interface Compliance

The @acronym{STREAMS} user interface standards are primarily specified by the @cite{IEEE} and
@cite{OpenGroup} standards and take the form of the @cite{POSIX 2003} and @cite{Single UNIX
Specification} standards simultaneously released by the @cite{OpenGroup} in conjunction with
@cite{IEEE}.  The latest @cite{POSIX/IEEE/OpenGroup} standard provide an @cite{XSI} extension that
includes the @acronym{STREAMS} user interface.  For the most part, the @cite{OpenGroup} XSI interface is
completely compatible with the user interface described in the @cite{System V Release 4
Programmer's Manual -- STREAMS}, and where it does not, Stream head options are provided to select
between the default @cite{OpenGroup} XSI behaviour and the traditional @cite{SVR 4} behaviour.

Most of the XSI specifications of the @cite{OpenGroup} describe the behaviour of the Stream head and
the behaviour of specific @acronym{STREAMS} drivers or modules (such as pipes, FIFOs and terminals).
Also described is the @manpage{poll(2s)} behaviour, generation of signals, and @manpage{read(2s)} and
@manpage{write(2s)} behaviour as it applies to @acronym{STREAMS} character special devices.

User interface compliance of the @cite{@value{PACKAGE_TITLE}} is tested with custom validation test
suites that ship with the package.  See @refman{Conformance Test Programs} for more information on
conformance and validation test suites.

@subsection Service Interface Compliance

The @cite{OpenGroup} (now and in previous incarnations) have issued standardized service interface
specifications as part of the Common Application Environment (CAE) specifications.  These service
interface specifications usually concern networking interfaces such as the @cite{Data Link Provider
Interface (DLPI)}, the @cite{Network Provider Interface (NPI)}, the @cite{Transport Provider
Interface (TPI)}, the @cite{X/Open Transport Interface (XTI)} and the @cite{Sockets} API.  Although
these standards impinge upon various networking add-on packages for @cite{@value{PACKAGE_TITLE}},
they do not impinge upon the base @acronym{STREAMS} package documented here.  See the @cite{Installation
and Reference Manual} for the appropriate add-on package.

@subsection Kernel Interface Compliance

The @acronym{STREAMS} kernel interfaces, DDI/DKI and other facilities available to the @acronym{STREAMS}
driver or module writer has not been subjected to formal standardization.  For the most part, the
descriptions that are present in the @cite{System V Programmer's Manual -- STREAMS} provide the most
definitive ipso facto standard for @acronym{STREAMS} implementation.  In addition to this, some
@acronym{STREAMS} implementations have provided some enhancements or restrictions over the @cite{SVR 4}
descriptions.  Perhaps the most extensive embellishments have been provided for the @cite{Solaris}
implementation of @acronym{STREAMS}.

@cite{@value{PACKAGE_TITLE}} has been implemented to provide maximum compatibility over a wide range
of @acronym{STREAMS} implementations based on @cite{SVR 4} and provides additional capabilities similar
to those specific embellishments found in implementations such as @cite{Solaris} through an add-on
@cite{STREAMS Compatibility} package.

The most delicate areas of compatibility across @acronym{STREAMS} implementations regard, not the use of
@acronym{STREAMS} or DDI/DKI functions from within the @acronym{STREAMS} environment, but the invocation of
@acronym{STREAMS} functions from outside the @acronym{STREAMS} environment.  In particular, use of private
locks and synchronization in the face of interrupts and external asynchronous callbacks is where
implementations deviate the greatest.  @cite{@value{PACKAGE_TITLE}} attempts to address these
differences by providing a greater level of assurance and wider range of calling contexts for each
of the @acronym{STREAMS} facilities.

Kernel interface compliance of the @cite{@value{PACKAGE_TITLE}} to @cite{SVR 4} specifications is
tested with custom validation test suites, test modules and test drivers that ship with the package.
See @refman{Conformance Test Programs} for more information on conformance and validation test
suites.

@node STREAMS Compatibility
@section STREAMS Compatibility
@cindex compatibility

@cite{@value{PACKAGE_TITLE}} provides a high degree of compatibility with other @acronym{STREAMS}
implementation as listed below.  Through the separate add-on @cite{STREAMS Compatibility} package,
source level compatibility is also provided.

@table @cite

@item --- SVR 3.2
@cite{@value{PACKAGE_TITLE}} provides a degree of operational compatibility with
@cite{SVR 3.2}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{SVR 3.2}.

@item --- SVR 4.2 ES/MP
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{SVR 4.2 ES/MP}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{SVR 4.2 ES/MP}.

@item --- Mentat Portable STREAMS
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{Mentat Portable STREAMS}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{Mentat Portable STREAMS}.

@item --- AIX 5L Version 5.1
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{AIX 5L Version 5.1}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{AIX 5L Version 5.1}.

@item --- HP-UX 11.0i v2
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{HP-UX 11.0i v2}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{HP-UX 11.0i v2}.

@item --- OSF/1 1.2/Digital UNIX/True 64
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{OSF/1 1.2/Digital UNIX}
to ease portability and common comprehension.

@item --- UnixWare 7.1.3 (OpenUnix 8)
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{UnixWare 7.1.3 (OpenUnix 8)}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{UnixWare 7.1.3 (OpenUnix 8)}.

@item --- Solaris 9/SunOS 5.9
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{Solaris 9/SunOS 5.9}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{Solaris 9/SunOS 5.9}.

@item --- IRIX 6.5.17
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{IRIX 6.5.17}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{IRIX 6.5.17}.

@item --- Mac OS 9 Open Transport
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{Mac OS 9 Open Transport}
to ease portability and common comprehension.  Specific kernel utilities are provided by the
@cite{STREAMS Compatibility} package to provide full source level compatibility with
@cite{Mac OS 9 Open Transport}.

@item --- SUPER-UX
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{SUPER-UX}
to ease portability and common comprehension.

@item --- UXP/V
@cite{@value{PACKAGE_TITLE}} provides a high degree of operational compatibility with
@cite{UXP/V}
to ease portability and common comprehension.

@end table

For additional details,
@pxref{Top, , About This Manual, SPG, STREAMS Programmer's Guide}.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Releases
@chapter Releases
@cindex releases

@include releases.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Installation
@chapter Installation
@cindex installation

@include install.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Troubleshooting
@chapter Troubleshooting
@cindex troubleshooting

@include texi/testsuite.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Licenses
@unnumbered Licenses
@cindex licenses

@menu
* GNU Affero General Public License::	The AGPL license
* GNU Free Documentation License::	The FDL license
@end menu

@include texi/agpl3.texi
@page
@include texi/fdl13.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Indices
@unnumbered Indices
@cindex indices

@c ----------------------------------------------------------------------------

@menu
* Concept Index::		Index of Concepts
* Type Index::			Index of Data Types
* Function Index::		Index of Functions and Macros
* Variable Index::		Index of Variables and Constants
* File Index::			Index of Files and Programs
* Option Index::		Index of Configuration Options
* Makefile Target Index::	Index of Makefile Targets
* Manual Page Index::		Index of Manual Pages Referenced
@end menu

@c ----------------------------------------------------------------------------

@node Concept Index
@unnumberedsec Index of Concepts
@printindex cp

@page
@node Type Index
@unnumberedsec Index of Data Types
@printindex tp

@page
@node Function Index
@unnumberedsec Index of Functions and Macros
@printindex fn

@page
@node Variable Index
@unnumberedsec Index of Variables and Constants
@printindex vr

@page
@node File Index
@unnumberedsec Index of Files and Programs
@printindex pg

@page
@node Option Index
@unnumberedsec Index of Configuration Options
@printindex op

@page
@node Makefile Target Index
@unnumberedsec Index of Makefile Targets
@printindex mk

@page
@node Manual Page Index
@unnumberedsec Index of Manual Pages Referenced
@printindex mp

@c ----------------------------------------------------------------------------

@bye

@c ============================================================================
