.\" -*- nroff -*-
.\" =========================================================================
.\"
.\" @(#) $Id: draft-bidulock-sigtran-isua-02.me,v 1.1.2.1 2009-06-21 10:29:27 brian Exp $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" Copyright (C) 2003  OpenSS7 Corporation <http://www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not have
.\" taken the same level of care in the production of this manual, which is
.\" licensed free of charge, as they might when working professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by the
.\" source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
.\" behalf of the U.S. Government ("Government"), the following provisions
.\" apply to you.  If the Software is supplied by the Department of Defense
.\" ("DoD"), it is classified as "Commercial Computer Software" under
.\" paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
.\" Regulations ("DFARS") (or any successor regulations) and the Government
.\" is acquiring only the license rights granted herein (the license rights
.\" customarily provided to non-Government users).  If the Software is
.\" supplied to any unit or agency of the Government other than DoD, it is
.\" classified as "Restricted Computer Software" and the Government's rights
.\" in the Software are defined in paragraph 52.227-19 of the Federal
.\" Acquisition Regulations ("FAR") (or any successor regulations) or, in the
.\" cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the
.\" FAR (or any successor regulations).
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Name:  $($Revision: 1.1.2.1 $) modified $Date: 2009-06-21 10:29:27 $ by $Author: brian $
.\"
.\" =========================================================================
.ds version Version\ 0.2
.ds date February\ 21,\ 2004
.ds expiry August\ 2004
.nr levels 0
.so draft.me
.#S
.bp
.sz \n(tp
.he 'Internet Draft'SS7 ISUP-User Adaptation Layer'\\\\*[date]'
.TS
expand tab(;);
l c r.
Network Working Group;;Brian Bidulock
INTERNET-DRAFT;;OpenSS7 Corporation
.bl 1
;;\*[date]
Expires in \*[expiry];;
.bl 1
.TE
.(l C
.sz \n(tp
\fB\
SS7 ISUP-User Adaptation Layer
(ISUA)
<draft-bidulock-sigtran-isua-02.\*(|x>
.)l
.rr |x
.ne 4
.uh "Status of this Memo"
.pp
This document is an Internet-Draft and is in full conformance with all
provisions of Section 10 or RFC 2026.  Internet-Drafts are working
documents of the Internet Engineering Task Force (IETF), its areas, and
its working groups.  Note that other groups may also distribute working
documents as Internet-Drafts.
.pp
Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference material
or to cite them other than as 'work in progress'.
.pp
The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt
.pp
The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html
.pp
To learn the current status of any Internet-Draft, please check the
\'1id-abstracts.txt\' listing contained in the Internet-Drafts Shadow
Directories on ftp.is.co.za (Africa), nic.nordu.net (Europe),
munnari.oz.au (Pacific Rim), ftp.ietf.org (US East Coast), or
ftp.isi.edu (US West Coast).
.uh "Copyright"
.pp
Copyright \(co The Internet Society (2004).  All Rights Reserved.
.uh "Abstract"
.pp
This document defines a protocol for the transport of any SS7 ISUP-User
signalling (e.g, Call Control) over IP using the Stream Control
Transport Protocol.
.[
rfc2960
%Z 1
.]
The protocol should be modular and symmetric, to allow it to work in
diverse architectures, such as a Signalling Gateway and IP Signalling
End-point architecture.  Protocol elements are added to allow seamless
operation between peers in the SS7 and IP domains.
.uh "Contents"
.pp
A complete table of contents, list of illustrations, list of tables and
document change history appear at the end of this document.
.sh 1 "Introduction"
.pp
This draft defines a protocol for the transport of SS7 ISUP
.[
q761
%Z 2
.]
.[
t1.113
%Z 2
.]
Users (i.e, Call Control) signalling messages over IP using the
Stream Control Transmission Protocol (SCTP).
.[
rfc2960
.]
This protocol would be used between a Signalling Gateway (SG) and
Signalling End-point located in an IP network.  Additionally, the
protocol can be used to transport SS7 ISUP users between two signalling
end-points located within an IP network.
.sh 2 "Scope"
.pp
There is on-going integration of SCN networks and IP networks.  Network
service providers are designing all IP architectures that include
support for SS7 signalling protocols.  IP provides an effective way to
transport user data and for operators to expand their networks and build new
services.  In these networks, there is a need for interworking between the SS7
and IP domains.
.[
rfc2719
%Z 2
.]
.pp
This document details the delivery of Call Control messages over
IP between two signalling end-points.  Consideration is given for the
transport from an SS7 Signalling Gateway (SG) to an IP signalling node (such
as an IP-resident Database) as described in the Framework Architecture for
Signalling Transport
.[
rfc2719
.]
This protocol can also support transport of Call Control messages between two
end-points wholly contained within and IP network.
.lp
The delivery mechanism addresses the following criteria:
.bu
Support for transfer of ISUP messages (Call Control)
.bu
Support for the seamless operation of Call Control protocol peers.
.bu
Support for the management of SCTP transport associations between an SG
and one ore more IP-based signalling nodes.
.bu
Support for distributed IP-based signalling nodes.
.bu
Support for the asynchronous reporting of status changes to management.
.sh 2 "Abbreviations and Terminology"
.sh 3 "Abbreviations"
.lp
.ix +\n(iiu
.TS
tab(:);
li1c1lssss.
ANSI:\(em:American National Standards Institute.
API:\(em:Application Programming Interface.
AS:\(em:Application Server.
ASP:\(em:Application Server Process.
BLA:\(em:Blocking Acknowledgement.
BLO:\(em:Blocking Request.
CA:\(em:Certificate Authority.
CC:\(em:Call Control.
CCR:\(em:Continuity Check Request.
CGBA:\(em:Circuit Group Blocking Acknowledgement.
CGB:\(em:Circuit Group Blocking Request.
CGUA:\(em:Circuit Group Unblocking Acknowledgement.
CGU:\(em:Circuit Group Unblocking Request.
CMF:\(em:Circuit Mapping Function.
COT:\(em:Continuity Test.
CP:\(em:Call Processing.
CQM:\(em:Circuit Group Query Request.
CQR:\(em:Circuit Group Query Response.
CTP:\(em:Common Transport Protocol.
ETSI:\(em:European Telecommunication Standards Institute.
GRS:\(em:Group Reset.
HLR:\(em:Home Location Register.
IANA:\(em:Internet Assigned Numbers Authority.
IETF:\(em:Internet Engineering Task Force.
IP:\(em:Internet Protocol.
IPSP:\(em:IP Signalling Point.
ISDN:\(em:Integrated Services Digital Network.
ISO:\(em:International Standards Organization.
ISUA:\(em:SS7 ISUP-User Adaptation Layer.
ISUP:\(em:ISDN User Part.
ITU:\(em:International Telecommunications Union.
L1:\(em:Layer 1.
LM:\(em:Layer Management.
LPA:\(em:Loop Back Acknowledgement.
MGC:\(em:Media Gateway Controller.
MTP2:\(em:MTP Level 2.
MTP3:\(em:MTP Level 3.
MTP:\(em:Message Transfer Part.
NA:\(em:Network Appearance.
NIF:\(em:Network Interworking Function.
PSTN:\(em:Public Switched Telephone Network.
RC:\(em:Routing Context.
RFC:\(em:Request For Comments.
RK:\(em:Routing Key.
RKM:\(em:Routing Key Management.
RSC:\(em:Reset Circuit.
SCN:\(em:Switch Circuit Network.
SCP:\(em:Service Control Point.
SCTP:\(em:Stream Control Transmission Protocol.
SG:\(em:Signalling Gateway.
SGP:\(em:Signalling Gateway Process.
SS7:\(em:Signalling System No. 7.
SSP:\(em:Service Switching Point.
STP:\(em:Signalling Transfer Point.
TLI:\(em:Transport Layer Interface.
TLS:\(em:Transport Layer Security.
TLV:\(em:Tag-Length-Value.
UBA:\(em:Unblocking Acknowledgement.
UBL:\(em:Unblocking Request.
VPN:\(em:Virtual Private Network.
XTI:\(em:X/Open Transport Interface.
.TE
.sh 3 "Terminology"
.lp
\fI\)Application Server (AS)\fR \-
.ix +\n(iiu
a logical entity serving a specific Routing Key.  An example of an Application
Server is a virtual database element handling all HLR or SCP transactions for
a particular SS7 Signalling Point.  The \fI\)AS\fR contains a set of one or
more unique \fI\)Application Server Processes\fR, of which one or more is
normally actively processing traffic.  There is a one-to-one relationship
between an Application Server and a Routing Key.
.lp
\fI\)Application Server Process (ASP)\fR \-
.ix +\n(iiu
a process instance of an Application Server.  An \fI\)Application Server
Process\fR serves as an active, backup, load-share or broadcast process of an
Application Server (e.g, part of a distributed signalling node or database
element).  Examples of ASPs are MGCs, IP SCPs, or IP HLRs.  An ASP contains an
SCTP end-point and may be configured to process traffic within more that one
\fI\)Application Server\fR.
.lp
\fI\)Association\fR \-
.ix +\n(iiu
refers to an SCTP association.
.[
rfc2960
.]
The association provides the transport for the delivery of ISUP protocol data
units and ISUA layer peer messages.
.lp
\fI\)Call Control\fR \-
.ix +\n(iiu
The layer above the ISDN User Part in the SS7 protocol stack that exchanges
primitives with the ISUP provider.  Call Control has two major functional
blocks: Call Processing and Circuit Supervision.  Unlike other layers of the
SS7 stack, ISUP does not have individual "Users" or ISUP-SAPs.  A single Call
Control entity is responsible for controlling both ISUP and other switch
signalling stacks at the Application Layer of the ISO 7-layer model.
for 
.lp
\fI\)Call Processing]\fR \-
.ix +\n(iiu
Call Processing is a major functional block of both ISUP and Call Control
which is responsible for signalling and controlling the state of calls (as
opposed to circuits).
.lp
\fI\)Circuit Supervision]\fR \-
.ix +\n(iiu
Circuit Supervision is a major functional block of both ISUP and Call Control
which is responsible for signalling and controlling the state of circuits (as
opposed to calls).
.lp
\fI\)Fail-over\fR \-
.ix +\n(iiu
the capability to reroute signalling traffic as required to an alternate
Application Server Process, or group of ASPs, within an Application Server in
the event of failure or unavailability of a currently used Application Server
Process.  \fI\)Fail-over\fR may apply upon the return to service of a
previously unavailable Application Server Process.
.lp
\fI\)Host\fR \-
.ix +\n(iiu
the computing platform that the process (SGP, ASP or IPSP) is running on.
.lp
\fI\)IP Server Process (IPSP)\fR \-
.ix +\n(iiu
a process instance of an IP-based application.  An IPSP is essentially the
same as an ASP, except that it uses ISUA in a point-to-point fashion.
.lp
\fI\)ISDN User Part (ISUP)\fR \-
.ix +\n(iiu
The Integrated Services Digital Network (ISDN) User Part
.[
q761
.]
.[
t1.113
.]
of the SS7 protocol.
.lp
\fI\)Layer Management (LM)\fR \-
.ix +\n(iiu
a nodal function that handles the inputs and outputs between the ISUA layer
and a local management entity.
.lp
\fI\)Message Transfer Part (MTP)\fR \-
.ix +\n(iiu
The Message Transfer Part
.[
q701
%Z 2
.]
.[
t1.111
%Z 2
.]
of the SS7 protocol.
.lp
\fI\)Nodal Interworking Function (NIF)\fR \-
.ix +\n(iiu
an implementation dependent interworking function present at a Signalling
Gateway that interworks primitives and procedures between the ISUP and ISUA
layers in the SG.
.lp
\fI\)Network Appearance (NA)\fR \-
.ix +\n(iiu
a value that identifies the SS7 network context of a Routing Key.
The \fI\)Network Appearance\fR value is of significance only within an
administrative domain; it is coordinated between the SG and ASP.
.lp
\fI\)Network Byte Order\fR \-
.ix +\n(iiu
the ordering of bytes most-significant-byte first, also referred to as
Big Endian.
.lp
\fI\)Routing Context (RC)\fR \-
.ix +\n(iiu
a value that uniquely identifies a Routing Key and an Application Server.
\fI\)Routing Context\fR values are either configured using a configuration
management interface, or by using the Routing Key Management (RKM) messages
and procedures defined for ISUA.
.lp
\fI\)Routing Key (RK)\fR \-
.ix +\n(iiu
describes a set of SS7 parameters and parameter values that uniquely
define the range of signalling traffic to be handled by a particular
Application Server.
.lp
\fI\)Signalling Gateway (SG)\fR \-
.ix +\n(iiu
a signalling agent that exchanges SCN native signalling at the edge of the IP
network.
.[
rfc2719
.]
An SG appears to the SS7 network as an SS7 Signalling Point.  An SG contains a
set of one or more Signalling Gateway Processes, of which one or more is
normally actively processing traffic.  When an SG contains more than one SGP,
the SG is a logical entity and the contained SGPs are assumed to be
coordinated into a single management view both toward the SS7 network and
toward the supported Application Servers.
.lp
\fI\)Signalling Gateway Process (SGP)\fR \-
.ix +\n(iiu
a process instance of a Signalling Gateway.  It serves as an active,
backup, load-sharing or broadcast process of a Signalling Gateway.
.lp
\fI\)Stream\fR \-
.ix +\n(iiu
an SCTP stream; a unidirectional logical channel established from one
SCTP endpoint to another associated SCTP endpoint, within which all user
messages are delivered in sequence, except for those submitted to the
unordered delivery service.
.lp
\fI\)Circuit Mapping Function (CMF)\fR \-
.ix +\n(iiu
an implementation dependent function that is responsible for resolving
the address and application context presented in the incoming ISUA message to
the correct SCTP association and Routing Context for the desired application.
The CMF \fB\)MAY\fR use routing context or routing key information as
selection criteria for the appropriate SCTP association.
.lp
\fI\)Transport Address\fR \-
.ix +\n(iiu
an address that serves as a source or destination for the unreliable
packet transport service used by SCTP.  In IP networks, a transport
address is defined by the combination of IP address and an SCTP port
number \*#.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  Only one SCTP port may be defined for
each endpoint, but each SCTP endpoint may have multiple IP addresses.
.[
rfc2960
.]
.)d
.sh 2 "ISUA Overview"
.sh 3 "Signalling Transport Architecture"
.pp
The framework architecture that has been defined for SCN signalling
transport over IP
.[
rfc2719
.]
uses multiple components, including an IP transport protocol, a
signalling common transport protocol and an adaptation module to support
the services expected by a particular SCN signalling protocol from its
underlying protocol layer.
.pp
In general terms, the ISUA architecture can be modeled as a peer-to-peer
architecture.  The first section considers the SS7-to-IP interworking
architectures for ISUP call control.  For this case, it is
assumed that the ASP initiates the establishment of the SCTP association with
the SG.
.sh 3 "Protocol Architecture for Call Control"
.pp
In this architecture (illustrated in \fI\*(&f\n(&n\fR), the ISUP and ISUA
layers interface in the SG.  A Nodal Interworking Function (NIF) provides for
interworking between the ISUP and ISUA layers and provides for the transfer of
the call processing as well as circuit supervision messages.
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig1.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
 .........         ...............        .........
 :       :         :             :        :       :
 :  SEP  :   SS7   :             :   IP   :       :
 :   or  :.........:     SG      :........:  ASP  :
 :  STP  :         :             :        :       :
 :.......:         :.............:        :.......:
  _______           _____________          _______
 |       |         |             |        |       |
 |  CC   |         |     NIF     |        |  CC   |
 |-------|         |------ ------|        |-------|
 | ISUP  |         | ISUP | ISUA |        | ISUA  |
 |-------|         |------|------|        |-------|
 | MTP3  |         | MTP3 |      |        |       |
 |-------|         |------| SCTP |        | SCTP  |
 | MTP2  |         | MTP2 |      |        |       |
 |-------|         |------|------|        |-------|
 |  L1   |         |  L1  |  IP  |        |  IP   |
 |_______|         |______|______|        |_______|
     |                |       |               |
     |________________|       |_______________|
                                                                         
        CC  - Call Control
        STP - SS7 Signaling Transfer Point
        NIF - Nodal Interworking Function
.fi
.sz +2
.)c
.\}
.#f "Protocol Architecture"
.)b
.sh 3 "All IP Architecture"
.pp
This architecture, illustrated in \fI\*(&f\n(&n\fR, can be used to carry a
protocol which uses the transport services of ISUP, but is contained within an
IP network.  This allows extra flexibility in developing networks, especially
when interaction between legacy signalling is not needed.  The architecture
removes the need for a signalling gateway function.
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig2.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
        ........        ........
        :      :   IP   :      :
        :  AS  :........:  AS  :
        :      :        :      :
        :......:        :......:
         ______          ______
        |      |        |      |
        |  AP  |        |  AP  |
        |------|        |------|
        | ISUA |        | ISUA |
        |------|        |------|
        | SCTP |        | SCTP |
        |------|        |------|
        |  IP  |        |  IP  |
        |______|        |______|
           |                |
           |________________|
                                                                        
AP - Application Protocol (e.g. - Call Control)
.sz +2
.)c
.\}
.#f "All IP Architecture"
.)b
.sh 3 "ASP Fail-over Model and Terminology"
.pp
The ISUA protocol supports ASP fail-over functions to support a high
availability of transaction processing capability.
.pp
An Application Server can be considered as a list of all ASPs configured or
registered to handled Call Control messages within a certain range of routing
information, or within a certain set of transaction dialogues, known as a
\`Routing Key.\'  One or more ASPs in the list may normally be active to
handle traffic, while others may be inactive but available in the event of
failure or unavailability of the active ASPs.
.pp
For operational considerations, see Appendix A.
.sh 3 "Services Provided by the ISUA Layer"
.sh 4 "Support for the transport of Call Control Messages"
.pp
The ISUA supports the transfer of Call Control messages.  The ISUA layer at
the SG and the ASP support the seamless transport of user messages
between the SG and the ASP.
.sh 5 "ISUP Call Control Support"
.pp
Depending on the specific implementation of Call Control supported, the ISUA
shall support Call Control transparently.  Call Control consists of two major
functional blocks:
.pp
Call Processing is responsible for signalling and control of calls (as opposed
to circuits).  Call processing functions move a call through its life-cycle by
providing the following functions:
.bu
call setup,
.bu
call suspend/resume,
.bu
call release,
.bu
call exception handling.
.pp
Circuit Supervision is responsible for signalling and control of circuits (as
opposed to calls).  Circuit supervision functions affect the management state
of circuits and provides the following functions:
.bu
circuit testing,
.bu
circuit reset,
.bu
circuit blocking and unblocking due to hardware failure and recovery events,
.bu
circuit blocking and unblocking maintenance action,
.bu
circuit state query.
.sh 4 "Native Management Functions"
.pp
The ISUA layer provides the capability to indicate errors associated with
the ISUA protocol messages and to provide notification to local
circuit management and the remote peer as necessary.
.sh 4 "Interworking with Circuit Supervision Functions"
.pp
The ISUA layer provides interworking with Circuit Supervision functions at the
SG for seamless inter-operation between the SCN network and the IP network.
ISUA provides the following circuit supervision functions:
.bu
Provides an indication or accpets a request to perform a continuity check on a
circuit.
.bu
Provides an indication or accepts a request to reset a circuit or circuit
group.
.bu
Provides an indication or accepts a request to block a circuit or circuit
group.
.bu
Provides an indication or accepts a request to unblock a circuit or circuit
group.
.bu
Provides an indication or accepts a request to query a circuit or circuit
group.
.(z
.#t "Mapping of Circuit Supervision Primitives"
.TS
center box tab(:);
cbs|cbs|cb
cbs|cbs|cb
lb|lb|cb|cb|cb
l|l|n|n|c.
Name:Message:ISUA
_:_:Cc't Supv.
 Generic \*#:Specific:ITU-T Q.764:ANSI T1.113:Message
=
CONT RECHECK:Request:CCR:CCR:CCNT
:Indication:
:_:_:_:_
:Response:\-:LPA:CCNA
:Confirm:
_
CONT REPORT:Request:COT:COT:CREP
:Indication:
_
RESET:Request:RSC, GRS:RSC, GRS:CRSC
:_:_:_:_
:Confirm:RLC, GRA:RLC, GRA:CRSA
_
BLOCKING:Request:BLO, CGB:BLO, CGB:CBLO
:Indication:
:_:_:_:_
:Response:BLA, CGBA:BLA, CGBA:CBLA
:Confirm:
_
UNBLOCKING:Request:UBL, CGU:UBL, CGU:CUBL
:Indication:
:_:_:_:_
:Response:UBA, CGUA:UBA, CGUA:CUBA
:Confirm:
_
CCT GRP QUERY:Request:CQM:CQM:CQRY
:Indication:
:_:_:_:_
:Response:CQR:CQR:CQRA
:Confirm:
.TE
.)z
.pp
The interworking with ISUP circuit supervision messages consists of
\fI\)CCNT\fR, \fI\)CCNA\fR, \fI\)CREP\fR, \fI\)CRSC\fR, \fI\)CBLO\fR,
\fI\)CBLA\fR, \fI\)CUBL\fR, \fI\)CUBA\fR, \fI\)CQRY\fR and \fI\)CQRA\fR
messages on receipt of circuit supervision events to the appropriate ASPs.
The primitives in \fI\*(&t\n(&b\fR are sent between the ISUP and ISUA circuit
supervision functions in the SG to trigger events in the IP and SS7 domain.
.pp
The ISUA layer provides transparent passing of circuit reset, blocking and
query primitives (RESET, BLOCKING, UNBLOCKING, CCT GROUP QUERY) as provided
for in ITU-T Q.724
.[
q724
%Z 2
.]
Q.764,
.[
q764
%Z 2
.]
and ANSI T1.113.
.[
t1.113
.]
.sh 4 "Support for the Management of SCTP Associations"
.pp
The ISUA layer at the SGP maintains the availability state of all configured
remote ASPs, to manage the SCTP Associations and the traffic between ISUA
peers.  As well, the active/inactive and congestion state of remote ASPs is
maintained.
.pp
The ISUA layer \fB\)MAY\fR be instructed by local management to establish an
SCTP association to a peer ISUA node.  This can be achieved using the
M-SCTP_ESTABLISH primitives to request, indicate and confirm the establishment
of an SCTP association with a peer ISUA node.  To avoid redundant SCTP
associations between two ISUA peers, one side (client) \fB\)SHOULD\fR be
designated to establish the SCTP association, or ISUA configuration
information maintained to detect redundant associations (e.g, via knowledge of
the expected local and remote SCTP endpoint addresses).
.pp
Local management \fB\)MAY\fR request from the ISUA layer the status of the
underlying SCTP associations using the M-SCTP_STATUS request and confirm
primitives.  Also, the ISUA \fB\)MAY\fR autonomously inform local management
of the reason for the release of an SCTP association, determined either
locally within the ISUA layer or by a primitive from the SCTP.
.pp
Also, the ISUA layer \fB\)MAY\fR inform the local management of the change in
status of an ASP or AS.  This \fB\)MAY\fR be achieved using the M-ASP_STATUS
request or M-AS_STATUS request primitives.
.sh 2 "Functional Areas"
.sh 3 "Circuit Identifiers, Routing Contexts and Routing Keys"
.sh 4 "Overview"
.pp
The mapping of ISUP messages into calls between the SGP and the Application
Servers is determined by Circuit Identifiers, Routing Keys and their
associated Routing Contexts.
.pp
A Routing Key is essentially a set of ISUP parameters used to direct ISUP
messages; whereas, the Routing Context parameter is a 4-byte value (unsigned
integer) that is associated to that Routing Key in a one-to-one relationship.
The Routing Context therefore can be viewed as an index into a sending node's
Circuit Mapping Function tables containing the Routing Key entries.
.pp
Possible ISUP address/routing information that comprise a Routing Key entry
includes, for example, a local and remote Point Code, and a Circuit
Identification Code or Call Control specific information such as Circuit Group
or Trunk Group Identifiers.  The particular information used to define a ISUA
Routing Key is application and network dependent, and none of the above
examples are requirements for ISUA.
.pp
An Application Server Process (ASP) may be configured to process signalling
traffic related to more than one Application Server (AS), over a single SCTP
Association.  ASP Active (ASPAC) and ASP Inactive (ASPIA) management
messages (see Section 3) use the Routing Context to discriminate signalling
traffic to be started or stopped.  At an ASP, the Routing Context parameter
uniquely identifies the range of signalling traffic associated with each
Application Server that the ASP is configured to receive.
.sh 4 "Routing Key Limitations"
.pp
Routing Keys \fB\)SHOULD\fR be unique in the sense that each received ISUP
message \fB\)SHOULD\fR have a full or partial match to a single routing
result.  It is not necessary for the parameter range values within a
particular Routing Key to be continuous.  For example, an AS could be
configured to support call processing for multiple ranges of circuits that are
not represented by contiguous Circuit Identification Codes.
.sh 4 "Managing Routing Context and Routing Keys"
.pp
There are two ways to provision a Routing Key at an SGP.  A Routing Key may be
configured statically using an implementation dependent management interface,
or dynamically managed using the the ISUA Routing Key registration procedures.
.pp
When using a management interface to configure Routing Keys, the Circuit
Mapping Function within the SGP is not limited to the set of parameters
defined in this document.  Other implementation dependent distribution
algorithms may be used.
.sh 4 "Circuit Mapping Function"
.pp
To perform its addressing and relaying capabilities, the ISUA makes use of an
Circuit Mapping Function (CMF).  This function is considered part of ISUA,
but the way it is realized is left implementation or deployment dependent
(local tables, database, etc.)
.pp
The CMF is invoked when a message is received at the incoming interface.  The
CMF is responsible for resolving the Circuit Identification Code (CIC) and any
necessary ISUP message parameters presented in the incoming ISUP message to
SCTP associations and destinations within the IP network.  The CMF will select
the key information available.  The Routing Keys reference an Application
Server, which will normally have one or more ASPs processing transactions for
the AS.  The availability and status of the ASPs is handled by ISUA ASP
management messages.
.pp
Possible SS7 routing information that comprise a Routing Key entry includes,
for example, ISUP Circuit Identification Code (CIC), Range and Status
parameters.
.pp
It is expected that the routing keys will be provisioned via a MIB, dynamic
registration or an external process, such as a database.
.sh 5 "Circuit Mapping at the SG"
.pp
To direct messages received from the SS7 network to the appropriate IP
destination, the SGP must perform a circuit mapping function using information
from the received ISUP message.
.pp
To support this circuit mapping, the SGP might, for example, maintain the
equivalent of a network address translation table, mapping incoming ISUP
message information to an Application Server for a particular application and
set of transactions.  This could be accomplished by comparing the circuit
identification code and range and status portions of the incoming ISUP message
to currently defined Routing Keys in the SGP.  These Routing Keys could in
turn map directly to an Application Server that is enabled by one or more
ASPs.  These ASPs proxy dynamic status information regarding their
availability, call handling capabilities and congestion to the SGP using
various management messages defined in the ISUA protocol.
.pp
The list of ASPs in the AS is assumed to be dynamic, taking into account the
availability, call handling capability and congestion status of the individual
ASPs in the list, as well as configuration changes and possible fail-over
mechanisms.
.pp
Normally, one or more ASPs are active in the AS (i.e, currently processing
calls) but in certain failure and transition cases it is possible that there
may not be an active ASP available.  The SGP will buffer the message destined
for this AS for a time T(r) or until an ASP becomes available.  When no ASP
becomes available before expiry of T(r), the SGP will flush the buffered
messages and initiate the appropriate ISUP call clearing procedures.
.pp
If there is no match for an incoming message, a default treatment \fB\)MAY\fR
be specified.  Possible solutions are to provide a default Application Server
to direct all unallocated call processing and circuit supervision messages to a
(set of) default ASP(s), or to drop the messages and provide a notification to
management.  The treatment of unallocated circuits is implementation
dependent.
.sh 5 "Circuit Mapping at the ASP"
.pp
To direct messages to the SS7 network, the ASP \fB\)MAY\fR perform a circuit
mapping to choose the proper SGP for the given message.  This is accomplished
by observing the Circuit Identification Code, Range and Status, and other
elements of the outgoing message, SS7 network status, SGP availability, and
Routing Context configuration tables.
.pp
A Signalling Gateway may be composed of one or more SGPs.  There is, however,
no ISUA messaging to manage the status of an SGP.  Whenever an SCTP
association to an SGP exists, it is assumed to be available.  Also, every SGP
of one SG communicating with one ASP regarding one AS provides identical call
control to this ASP.
.pp
In general, an ASP routes responses to the SGP that it received messages from;
within the routing context which it is currently active and receiving
transactions.  The routing context itself is used by the ASP to select the
SGP.
.sh 4 "Signalling Gateway SS7 Layers"
.pp
The SG is responsible for terminating up to the Call Control of the SS7 protocol,
and offering an IP-based extension to its users.
.pp
From an SS7 perspective, it is expected that the Signalling Gateway transmits
and receives ISUP messages to and from the SS7 Network over standard SS7
network interfaces, using the services of the MTP
.[
q704
%Z 2
.]
to provide transport of the messages.
.pp
Note that it is also possible for the MTP services to be provided using the
services of the MTP-User Adaptation Layer (M3UA).
.[
m3ua-rfc
%Z 2
.]
.pp
The ISUP-SAP through which ISUA at the SG obtains its services could reside at
a Signalling Transfer Point (STP) or Signalling End Point (SEP).
.[
q701
.]
.sh 4 "SS7 and ISUA Interworking at the SG"
.pp
The SGP provides a functional interworking of transport functions between the
SS7 network and the IP network by also supporting the ISUA adaptation layer.
It allows the ISUP application to exchange call control messages with an
IP-based Application Server Process where the peer Call Control protocol layer
exists.
.pp
To perform ISUP circuit supervision, it is required that the Call Control
protocols at ASPs receive indications of circuit state, as well as call state
as they would be expected by an SS7 ISUP application.  To accomplish this, the
RESET, BLOCKING, UNBLOCKING and CCT GROUP QUERY primitives received at the
ISUP upper layer interface at the SG need to be propagated to the remote Call
Control lower layer interface at the ASP.
.pp
ISUP call processing and circuit supervision messages (such as BLO, BLA, CGB,
CGBA) received from the SS7 network \fB\)MUST NOT\fR be encapsulated.  The SG
\fB\)MUST\fR terminate these messages and generate ISUA message as
appropriate.
.sh 4 "Application Server"
.pp
A cluster of Application Servers is responsible for providing the overall
support for one ore more SS7 upper layers.  From an ISUP standpoint, Call
Control provides complete support for the upper layer service for given
Circuits or Trunk Groups.  As an example, Call Control could provide complete
support for Central Office Call Control for a given point code.
.\".pp
.\"Where an ASP is connected to more than one SG, the ISUA layer must maintain
.\"the status of configured SS7 destinations and route messages according to the
.\"availability/congestion status of potentially replicated subsystem.
.sh 4 "SCTP Stream Mapping"
.pp
The ISUA supports SCTP streams.  The SG and AS need to maintain a list of SCTP
and Call Control for mapping purposes.  Call Control requiring sequenced message
transfer need to be sent over a stream using sequenced delivery.
.pp
ISUA \fB\)SHOULD NOT\fR use stream 0 for ISUA circuit supervision messages.
It is \fB\)OPTIONAL\fR that sequence delivery be used to preserve the order of
circuit supervision message delivery.
.pp
All ISUA Circuit Supervision (CS) messages \fB\)MAY\fR select unordered
delivery, depending on the requirements of Call Control.  Normally one stream
is used to send ISUA Circuit Supervision (CS) messages between peers,
regardless of Application Server.
.pp
All Call Processing (CP) messages \fB\)MUST\fR be sent using ordered delivery.
All Call Processing (CP) messages relating to the same call \fB\)MUST\fR be sent
on the same stream as other Call Processing (CP) messages relating to the same
call.  The stream selected is based upon the Call Reference given by the
Call Control over the primitive interface and other traffic information available
to the SGP or ASP.
.sh 3 "Redundancy Models"
.sh 4 "Application Server Redundancy"
.pp
All CSET and Circuit Supervision (CS) messages (e.g, SETUP, RESET,
BLOCKING) which match a provisioned Routing Key at an SGP are mapped to an
Application Server.
.pp
The Application Server is the set of all ASPs associated with a specific
Routing Key.  Each ASP in this set may be active, inactive or unavailable.
Active ASPs handle traffic; inactive ASPs might be used when active ASPs
become unavailable.
.pp
The fail-over model supports an "n+k" redundancy model, where "n" ASPs is the
minimum number of redundant ASPs required to handle traffic and "k" ASPs are
available to take over for a failed or available ASP.  A "1+1" active/backup
redundancy is a subset of this model.  A simplex "1+0" model is also supported
as a subset, with no ASP redundancy.
.sh 3 "Flow Control"
.pp
Local Management at an ASP may wish to stop traffic across an SCTP association
to temporarily remove the association from service or to perform testing and
maintenance activity.  The function could optionally be used to control the
start of traffic onto a newly available SCTP association.
.sh 3 " Congestion Management"
.pp
The ISUA layer is informed of local and IP network congestion by means of an
implementation-dependent function (e.g, an implementation-dependent indication
from the SCTP of IP network congestion).
.pp
At an ASP or IPSP, the ISUA layer indicates congestion to local Call Control by
means of an appropriate ISUP primitive, as per current ISUP procedures, to
invoke appropriate upper layer responses.  When an SG determines that the
transport of SS7 messages is encountering congestion, the SG might trigger SS7
Congestion messages to originating SS7 nodes, per the congestion procedures of
the relevant ISUP
.[
q764
.]
.[
t1.113
.]
or MTP
.[
q704
.]
.[
t1.111
.]
standard.  (The triggering of SS7 Management messages from an SG is an
implementation-dependent function.)
.sh 2 "Definition of ISUA Boundaries"
.pp
ISUA has three protocol boundaries: an upper boundary between ISUA and 
Call Control; a lower boundary between ISUA and SCTP; and a layer management
boundary between ISUA and the Layer Management Function.
\fI\*(&f\n(&n\fR illustrates the ISUA protocol boundaries.
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig3.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
          ...........
          :   CC    :
          :.........:  Layer
Upper Boundary :       Management
           ____:____   Boundary   ............
          |   ISUA  |.............:    LM    :
          |_________|             :..........:
Lower Boundary :
          .....:.....
          :   SCTP  :
          :.........:
.sz +2
.)c
.\}
.#f "ISUA Protocol Boundaries"
.)b
.sh 3 "Definition of Upper Boundary"
.pp
The primitives and messages listed in \fI\*(&t\n(&a\fR are provided
between the ISUA and Call Control in support of Call Control.
.[
q761
.]
.[
t1.113
.]
.#t "Mapping of Call Control Primitives"
.TS H
center box tab(:);
lb|lb|cb|cb|cb
lb|lb|cb|cb|cb.
Generic:Specific:ITU-T Q.764:ANSI T1.113:ISUA
Name:Name:Message:Message:Msg
=
.TH
.T&
lissss
l|l|c|c|c.
Call Setup Messages
_
SETUP:Request:IAM:IAM:CSET
:Indication:
:_:_:_:_
:Response:ANM, CON:ANM:CCON
:Confirm:
_
MORE INFO:Request:\-:\-:CMOR
:Indication:
_
TIMEOUT:Indication:\-:\-:CTOT
_
INFO:Request:SAM:SAM:CINF
:Indication:
_
PROC:Request:ACM, CPG:ACM, CPG:CPRO
:Indication:
_
ALERT:Request:ACM, CPG:ACM, CPG:CALR
:Indication:
_
PROG:Request:ACM, CPG:ACM, CPG:CPRG
:Indication:
_
.T&
lissss
l|l|c|c|c.
Call Established Messages
_
SUSPEND:Request:SUS:SUS:CSUS
:Indication:
_
RESUME:Request:RES:RES:CRES
:Indication:
_
.T&
lissss
l|l|c|c|c.
Call Termination Messages
_
REATTEMPT:Indication:\-:\-:CREA
_
CALL FAILURE:Indication:RST, REL, RLC:RST, REL, RLC:CERR
_
IBI:Request:ACM, CPG:ACM, CPG:CIBI
:Indication:
_
RELEASE:Request:REL:REL:CREL
:Indication:
:_:_:_:_
:Response:REL, RLC:REL, RLC:CRLC
:Confirm:
.TE
.sh 3 "Definition of Boundary between ISUA and Layer Management"
.lp
.TS
tab(;);
ls
l1lw(5.7i).
M-SCTP_ESTABLISH request
Direction:;LM->ISUA
Purpose:;T{
.#v
LM request ASP to establish an SCTP association with its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_ESTABLISH confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP confirms to LM that it has established an SCTP association with its
peer.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_ESTABLISH indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA informs LM that a remote ASP has established an SCTP association.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_RELEASE request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to release an SCTP association with its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_RELEASE confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP confirms to LM that it has released SCTP association with its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_RELEASE indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA informs LM that a remote ASP has released an SCTP Association or the
SCTP association
has failed.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP RESTART indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA informs LM that an SCTP restart indication has been received.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_STATUS request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ISUA to report the status of an SCTP association.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_STATUS confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA responds with the status of an SCTP association.
T}
;
.T&
ls
l1lw(5.7i).
M-SCTP_STATUS indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports the status of an SCTP association.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_STATUS request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ISUA to report the status of a local or remote ASP.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_STATUS confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports status of local or remote ASP.
T}
;
.T&
ls
l1lw(5.7i).
M-AS_STATUS request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ISUA to report the status of an AS.
T}
;
.T&
ls
l1lw(5.7i).
M-AS_STATUS confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports the status of an AS.
T}
;
.T&
ls
l1lw(5.7i).
M-NOTIFY indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports that it has received a \fI\)Notify (NTFY)\fR message from its
peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ERROR indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports that it has received an \fI\)Error (ERR)\fR message from its peer
or that a local operation has been unsuccessful.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_UP request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to start its operation and send an \fI\)ASP Up (ASPUP)\fR
message to its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_UP confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP reports that is has received an \fI\)ASP UP Ack (ASPUP ACK)\fR message
from its peer.  T}
;
.T&
ls
l1lw(5.7i).
M-ASP_UP indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports it has successfully processed an incoming \fI\)ASP Up (ASPUP)\fR
message from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_DOWN request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to stop its operation and send an \fI\)ASP Down (ASPDN)\fR
message to its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_DOWN confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP reports that is has received an \fI\)ASP Down Ack (ASPDN ACK)\fR message
from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_DOWN indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports it has successfully processed an incoming \fI\)ASP Down
(ASPDN)\fR message from its peer, or the SCTP association has been lost or
reset.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_ACTIVE request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to send an \fI\)ASP Active (ASPAC)\fR message to its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_ACTIVE confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP reports that is has received an \fI\)ASP Active Ack (ASPAC ACK)\fR message
from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_ACTIVE indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports it has successfully processed an incoming \fI\)ASP Active
(ASPAC)\fR message
from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_INACTIVE request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to send an \fI\)ASP Inactive (ASPIA)\fR message to its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_INACTIVE confirm
Direction:;LM -> ISUA
Purpose:;T{
.#v
ASP reports that is has received an \fI\)ASP Inactive Ack (ASPIA ACK)\fR
message from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-ASP_INACTIVE indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports it has successfully processed an incoming \fI\)ASP Inactive
(ASPIA)\fR
message from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-AS_ACTIVE indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA reports that an AS has moved to the AS-ACTIVE state.
T}
;
.T&
ls
l1lw(5.7i).
M-AS_INACTIVE indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
UA reports that an AS has moved to the AS-INACTIVE state.
T}
;
.T&
ls
l1lw(5.7i).
M-AS_DOWN indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
UA reports that an AS has moved to the AS-DOWN state.
T}
.TE
.pp
If the ISUA layer supports dynamic registration of Routing Key, the layer
\fB\)MAY\fR support the following additional primitives:
.TS
tab(;);
ls
l1lw(5.7i).
M-RK_REG request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to register RK(s) with its peer by sending \fI\)Registration
Request (REG REQ)\fR message
T}
;
.T&
ls
l1lw(5.7i).
M-RK_REG confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP reports that it has received \fI\)Registration Response (REG RSP)\fR
message with registration status as successful from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-RK_REG indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA informs LM that it has successfully processed an incoming
\fI\)Registration Request (REG REQ)\fR
message.
T}
;
.T&
ls
l1lw(5.7i).
M-RK_DEREG request
Direction:;LM -> ISUA
Purpose:;T{
.#v
LM requests ASP to deregister RK(s) with its peer by sending
\fI\)Deregistration Request (DEREG REQ)\fR
message.
T}
;
.T&
ls
l1lw(5.7i).
M-RK_DEREG confirm
Direction:;ISUA -> LM
Purpose:;T{
.#v
ASP reports that it has received \fI\)Deregistration Request (DEREG REQ)\fR
message with deregistration status as successful from its peer.
T}
;
.T&
ls
l1lw(5.7i).
M-RK_DEREG indication
Direction:;ISUA -> LM
Purpose:;T{
.#v
ISUA informs LM that it has successfully processed an incoming
\fI\)Deregistration Request (DEREG REQ)\fR message from its peer.
T}
.TE
.sh 3 "Definition of the Lower Boundary"
.lp
The upper layer primitives provided by the SCTP are provided in the SCTP
specification "Stream Control Transmission Protocol (SCTP)".
.[
rfc2960
.]
.#e
.sh 1 "Conventions"
.pp
The keywords \fB\)MUST\fR, \fB\)MUST NOT\fR, \fB\)REQUIRED\fR,
\fB\)SHALL\fR, \fB\)SHALL NOT\fR, \fB\)SHOULD\fR, \fB\)SHOULD NOT\fR,
\fB\)RECOMMENDED\fR, \fB\)NOT RECOMMENDED\fR, \fB\)MAY\fR, and
\fB\)OPTIONAL\fR, when they appear in this document, are to be
interpreted as described in.
.[
rfc2119
%Z 1
.]
.lp
In this document, the following conventions are used to describe how a
parameter is used in the message:
.ix +2
.TS
tab(:);
lilw(5.0i).
Mandatory:T{
.#v
The parameter \fB\)MUST\fR be present in the message.  A message listing a
parameter as \fI\)Mandatory\fR without containing such a parameter is is
incorrectly formatted.
T}
:
Conditional:T{
.#v
The parameter \fB\)SHOULD\fR be present in the message under the conditions
specified.  A message listing a parameter as \fI\)Conditional\fR without
containing such a parameter under the conditions specified is incorrectly
formatted.
T}
:
Optional:T{
.#v
The parameter \fB\)MAY\fR be present in the message as specified.  A message
listing a parameter as \fI\)Optional\fR without containing such a parameter is
correctly formatted.
T}
.TE
.#e
.sh 1 "Protocol Elements"
.pp
The general message format includes a Common Message Header together
with a list of zero or more parameters as defined by the Message Type.
.pp
For forward compatibility, all Message Types \fB\)MAY\fR have attached
parameters even if none are specified in this version.
.sh 2 "Common Message Header"
.pp
The protocol messages for the ISUP-User Adaptation Protocol (ISUA)
require a message structure that contains a version, message type,
message length and message contents:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Version    |   Reserved    | Message Class | Message Type  |
+---------------+---------------+---------------+---------------+
|                        Message Length                         |
+---------------------------------------------------------------+
|                         Message Data                          |
.sz +2
.)c
.)b
.lp
Notes:
.bu
This message header is common among all signalling protocol adaptation
layers.
.bu
The 'data' portion of ISUA messages \fB\)SHALL\fR contain zero or more ISUA
parameters, and \fB\)SHALL NOT\fR contain an encapsulated ISUP message.
.bu
All fields in the ISUA message \fB\)MUST\fR be transmitted in the network
byte order, unless otherwise stated.
.bu
The \fI\)Reserved\fR field \fB\)SHALL\fR be coded zero by the sender of the
message and \fB\)SHALL\fR be ignored by the receiver of the message.
.\".lp
.\"Optional parameters can only occur at most once in an ISUA message.
.sh 3 "ISUA Protocol Version"
.ip "\fB\)Version: 8-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Version\fR field of the Common Message Header contains the
version of the ISUA adaptation layer.  The supported versions are:
.ix +4
.TS
tab(;);
c1l.
1;\- ISUA Version 1.0
.TE
.sh 3 "Message Classes"
.ip "Message Class: 8-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Message Class\fR field of the Common Message Header contains
the class of the message.  The supported classes are as follows:
.TS
tab(;);
n1c1n2l.
0;;;Management (MGMT) Message
7;;;Reserved for Other Signalling Adaptation Layers
2;;;Reserved for Other Signalling Adaptation Layers
3;;;ASP State Maintenance (ASPSM) Messages
4;;;ASP Traffic Maintenance (ASPTM) Messages
5;;;Reserved for Other Signalling Adaptation Layers
6;;;Reserved for Other Signalling Adaptation Layers
7;;;Reserved for Other Signalling Adaptation Layers
8;;;Reserved for Other Signalling Adaptation Layers
9;;;Routing key Management (RKM) Messages
10;;;ISUA Call Processing (CP) Messages
11;;;ISUA Circuit Supervision (CS) Messages
12;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
.TE
.sh 3 "Message Types"
.ip "Message Type: 8-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Message Type\fR field of the Common Message Header contains the
type of message within a message class.  The supported types of messages
within the supported classes are as follows:
.TS
tab(;);
lsss
n1c1n2l.
Management (MGMT) Messages
0;;;Error (ERR)
1;;;Notify (NTFY)
2;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
;
.T&
lsss
n1c1n2l.
Application Server Process State Maintenance (ASPSM) Messages
0;;;Reserved
1;;;ASP Up (UP)
2;;;ASP Down (DOWN)
3;;;Heartbeat (BEAT)
4;;;ASP Up Ack (UP ACK)
5;;;ASP Down Ack (DOWN ACK)
6;;;Heartbeat Ack (BEAT ACK)
7;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
;
.T&
lsss
n1c1n2l.
Application Server Process Traffic Maintenance (ASPTM) Messages
0;;;Reserved
1;;;ASP Active (ASPAC)
2;;;ASP Inactive (ASPIA)
3;;;ASP Active Ack (ASPAC ACK)
4;;;ASP Inactive Ack (ASPIA ACK)
5;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
;
.T&
lsss
n1c1n2l.
Routing Key Management (RKM) Messages
0;;;Reserved
1;;;Registration Request (REG REQ)
2;;;Registration Response (REG RSP)
3;;;Deregistration Request (DEREG REQ)
4;;;Deregistration Response (DEREG RSP)
5;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
;
.T&
lsss
n1c1n2l.
ISUA Call Processing (CP) Messages
0;;;Reserved
1;;;Setup (CSET)
2;;;More Information (CMOR)
3;;;Timeout (CTOT)
4;;;Information (CINF)
5;;;Proceeding (CPRO)
6;;;Alerting (CALR)
7;;;Progress (CPRG)
8;;;Connect (CCON)
9;;;Suspend (CSUS)
10;;;Resume (CRES)
11;;;Reattempt (CREA)
12;;;Failure (CERR)
13;;;In Band Information (CIBI)
14;;;Release (CREL)
15;;;Release Complete (CRLC)
16;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
;
.T&
lsss
n1c1n2l.
ISUA Circuit Supervision (CS) Messages
0;;;Reserved
1;;;Continuity Check (CCNT)
2;;;Loop Back (CLBK)
3;;;Report (CREP)
4;;;Reset (CRSC)
5;;;Reset Acknowledgement (CRSA)
6;;;Block (CBLO)
7;;;Block Acknowledgement (CBLA)
8;;;Unblock (CUBL)
9;;;Unblock Acknowledgement (CUBA)
10;;;Query (CQRY)
11;;;Query Acknowledgement (CQRA)
12;-;127;Reserved by the IETF
128;-;255;Reserved for IETF-Defined Message Class Extensions
.TE
.sh 3 "Message Length"
.ip "\fB\)Message Length: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Message Length\fR field of the Common Message Header defines
the length of the message in octets, including the header.
.sh 3 "Tag-Length-Value Format"
.pp
ISUA messages consist of a Common Message Header followed by zero or more
parameters, as defined by the message type.  The Tag-Length-Value (TLV)
parameters contained in a message are defined in a Tag-Length-Value
format as shown below \*#.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  The use of TLV in principle allows the
parameters to be placed in a random order in the message.  However, some
guidelines should be considered for easy processing in the following
order:
.ba +\\n(iiu
.bu
parameters needed to correctly process other message parameters,
preferably should precede these parameters (such as Routing Context).
.bu
Mandatory parameters preferably \fB\)SHOULD\fR precede any optional
parameters.
.bu
The data parameter will normally be the final one in the message.
.bu
The receiver \fB\)SHOULD\fR accept parameters in any order, except where
explicitly mandated.
.ba -\\n(iiu
.)d
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Parameter Tag        |       Parameter Length        |
+-------------------------------+-------------------------------+
\\                                                               \\
/                       Parameter Value                         /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.ip "\fB\)Parameter Tag: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The Parameter Tag field is a 16-bit identifier of the type of parameter.  It
takes a value of 0 to 65534.
.ip "\fB\)Parameter Length: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The Parameter Length field contains the size of the parameter in bytes,
including the Parameter Tag, Parameter Length, and Parameter Value fields.
The Parameter Length does not include any padding bytes.  However, composite
parameters will contain all padding bytes, since all parameters contained
within this composite parameter will considered multiples of 4 bytes.
.ip "\fB\)Parameter Value: variable-length\fR" 2
.ip "" 2
The Parameter Value field contains the actual information to be transferred in
the parameter.  The total length of a parameter (including Tag, Parameter
Length and Value fields) \fB\)MUST\fR be a multiple of 4 bytes.  If the length
of the parameter is not a multiple of 4 bytes, the sender \fB\)MUST\fR pad the
Parameter at the end (i.e., after the Parameter Value field) with all zero
bytes.  The length of the padding \fB\)MUST NOT\fR be included in the
parameter length field.  A sender \fB\)SHOULD NOT\fR pad with more than 3
bytes.  The receiver \fB\)MUST\fR ignore the padding bytes.
.sh 2 "ISUA Message Header"
.pp
In addition to the Common Message Header, a specific message header is
included for ISUA messages.  The ISUA message header will immediately follow
the Common Message Header in ISUA Call Processing (CP) and Circuit Supervision (CS)
messages.
.lp
The \fI\)ISUA Message Header\fR is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Routing Context                        |
+-------------------------------+-------------------------------+
|         Tag = 0x0013          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Correlation Id                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The ISUA Message header can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Conditional:*1
Correlation Id:Conditional:*2
.TE
.ip "Note 1:" 8
When an ASP is registered or configured for multiple AS with an SG, the
\fI\)Routing Context\fR \fB\)MUST\fR be present in the ISUA Message Header.
The \fI\)Routing Context\fR \fB\)SHOULD\fR always be placed in the ISUA
Message Header.  When the \fI\)Routing Context\fR is present in the ISUA
Message Header it \fB\)SHOULD\fR be placed first in the header because the
context of the \fI\)Correlation Id\fR depends on the \fI\)Routing Context\fR.
.ip "Note 2:" 8
Under some circumstances, the \fI\)Correlation Id\fR parameter \fB\)MUST\fR be
included in the ISUA Message Header.  See sections "3.9.9 \- Correlation Id"
and "4.3.4.3 \- ASP Active Procedures".
.sh 2 "ISUA Call Processing (CP) Messages"
.pp
The following section describes the ISUA Call Processing (CP) messages and
parameter contents.  The general message format includes a Common Message
Header, the ISUA Message Header and the CP Message Header, together with a
list of zero or more parameters as defined by the Message Type.  For forward
compatibility, all Message Types \fB\)MAY\fR have optional attached parameters
in addition to the message headers.
.lp
These messages are ISUA Call Processing (CP) messages:
.lp
.ix +4
.TS
tab(:);
cisss
lbcbcbcb
lcnn.
ISUA Call Processing (CP) Messages
_
Message Name::Message Type:Section
_
CP Header:::3.3.1
Setup:CSET:1:3.3.2
More Information:CMOR:2:3.3.3
Timeout:CTOT:3:3.3.4
Information:CINF:4:3.3.5
Proceeding:CPRO:5:3.3.6
Alerting:CALR:6:3.3.7
Progress:CPRG:7:3.3.8
Connect:CCON:8:3.3.9
Suspend:CSUS:9:3.3.10
Resume:CRES:10:3.3.11
Reattempt:CREA:11:3.3.12
Failure:CERR:12:3.3.13
In Band Information:CIBI:13:3.3.14
Release:CREL:14:3.3.15
Release Complete:CRLC:15:3.3.16
_
.TE
.sh 3 "CP Message Header"
.pp
In addition to the Common Message Header and ISUA Message Header, a specific
message header is included for ISUA Call Processing (CP) messages.  The CP
Message Header will immediately follow the ISUA Message header in these
messages.
.lp
The \fI\)CP Message Header\fR is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0520          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Circuit Id                          |
+-------------------------------+-------------------------------+
|         Tag = 0x0501          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Call Reference                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)CP Message Header\fR contains the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Id:Conditional:*1
Call Reference:Conditional:*2
.TE
.ip "Note 1:" 8
The \fI\)Circuit Id\fR \fB\)MUST\fR be placed in the ISUA CP Message Header
for all CP messages sent from the SGP to the ASP, and is \fI\)OPTIONAL\fR in
the ISUA CP Message Header for all CP messages sent from the ASP to the SGP
for which a \fI\)Circuit Id\fR was assigend to the call by the SGP before the
message was sent.  If \fI\)Circuit Id\fR was not assigned by the SGP before
the ASP sends a CP message, the ASP \fI\)MAY\fR include the \fI\)Circuit Id\fR
parameter for simplicity, but it \fI\)MUST\fR then be coded zero (0).  CP
messages for which a \fI\)Circuit Id\fR has not been assigned by the SGP
include only the \fI\)Setup (CSET)\fR request message sent from the ASP to the
SGP.
.ip "Note 2:" 8
The \fI\)Call Reference\fR \fB\)MUST\fR be placed in the ISUA CP Message
Header for all CP messages sent from ASP to the SGP, and is \fI\)OPTIONAL\fR
in the ISUA CP Message Header for all CP messages sent from the SGP to the ASP
for which a \fI\)Call Reference\fR was assigned to the call by the ASP before
the message was sent.  If \fI\)Call Reference\fR was not assigned by the ASP
before the SGP sends a CP message, the SGP \fI\)MAY\fR include the \fI\)Call
Reference\fR parameter for simplicity, but it \fI\)MUST\fR then be coded zero
(0).  CP messages for which a \fI\)Call Reference\fR has not been assigned by
the ASP include only the \fI\)Setup (CSET)\fR indication message sent from the
SGP to the ASP.
.sh 3 "Setup (CSET)"
.pp
The \fI\)Setup (CSET)\fR Request message is sent from an ASP to an SG or IPSP
to initiate an outgoing ISUP call setup.  The \fI\)CSET\fR Indication message
is sent from an SGP to an ASP to indicate an incoming ISUP call setup.
.pp
The \fI\)CSET\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Setup' (Request, Indication) primitive and the ITU-T and ANSI
ISUP `IAM' message.
.[
q763
%Z 2
.]
.[
t1.113
.]
.lp
The \fI\)CSET\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0502          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Call Type                           |
+-------------------------------+-------------------------------+
|         Tag = 0x0503          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Call Flags                          |
+-------------------------------+-------------------------------+
|         Tag = 0x0504          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Called Party Number                     /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CSET\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Call Type:Mandatory:
Call Flags:Mandatory:
Called Party Number:Mandatory:
Optional Parameters:Optional:*1
.TE
.ip "Note 1:" 8
Although the \fI\)Optional Parameters\fR are optional in the \fI\)CSET\fR
message, the specific ISUP variant and network policy in which the
implementation is operating could require that the implementation always place
specific parameters in the \fI\)Optional Parameters\fR parameter.  An example
of this would be the \fI\)Charge Number\fR of GR-394 networks.
.sh 3 "More Information (CMOR)"
.pp
The \fI\)More Information (CMOR)\fR message is sent from an SGP to an ASP to
request additional address information for an outgoing ISUP call setup.
.pp
The \fI\)CMOR\fR message does not correspond to a Call Control primitive or
ISUP message.
.pp
The \fI\)COMR\fR message has no message-type-specific parameters beyond the
CP
Message Header.
.sh 3 "Timeout (CTOT)"
.pp
The \fI\)Timeout (CTOT)\fR message is sent from an SGP to an ASP to indicate
that the SG has timed out while waiting for additional address information.
.pp
The \fI\)CTOT\fR message does not correspond to a Call Control primitive or
ISUP message.
.pp
The \fI\)CTOT\fR message has no message-type-specific parameters beyond the
CP
Message Header.
.sh 3 "Information (CINF)"
.pp
The \fI\)Information (CINF)\fR message is sent from an ASP to an SGP to
provide additional address information for an outgoing ISUP call setup.  The
\fI\)CINF\fR message is sent from an SGP to an ASP to provide additional
address information for an incoming ISUP call setup.
.pp
The \fI\)CINF\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Info' primitive and the ITU-T and ANSI ISUP `SAM' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CINF\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0505          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                        Subsequent Number                      /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CINF\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Subsequent Number:Mandatory:
Optional Parameters:Optional:
.TE
.ip "Note 1:" 8
.sh 3 "Proceeding (CPRO)"
.pp
The \fI\)Proceeding (CPRO)\fR message is sent from an ASP to an SG to indicate
that an outgoing call setup is proceeding.  The \fI\)CPRO\fR message is sent
from an SGP to an ASP to indicate that an incoming call setup is proceeding.
.pp
The \fI\)CPRO\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Proceeding' primitive and the ITU-T and ANSI ISUP `ACM' and `CPG' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CPRO\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0508          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Proceeding Flags                       |
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CPRO\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Proceeding Flags:Mandatory:
Optional Parameters:Optional:
::*1
.TE
.ip "Note 1:" 8
.sh 3 "Alerting (CALR)"
.pp
The \fI\)Alerting (CALR)\fR message is sent from an ASP to an SG to indicate
that the terminating access on a incoming call setup is being alerted.  The
\fI\)CALR\fR message is sent from an SGP to an ASP to indicate that the
terminating access on an outgoing call setup is being alerted.
.pp
The \fI\)CALR\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Alerting' primitive and the ITU-T and ANSI `IAM' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CALR\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CALR\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Optional Parameters:Optional:
::*1
.TE
.ip "Note 1:" 8
.sh 3 "Progress (CPRG)"
.pp
The \fI\)Progress (CPRG)\fR message is sent from an ASP to an SG to indicate
that an incoming call setup is in progress.  The \fI\)CPRG\fR message is sent
from an SGP to an ASP to indicate that an outgoing call setup is in progress.
.pp
The \fI\)CPRG\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Progress' primitive and the ITU-T and ANSI ISUP `ACM' and `CPG' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CPRG\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0509          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Progress Event                         |
+-------------------------------+-------------------------------+
|         Tag = 0x050A          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Progress Flags                         |
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CPRG\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Progress Event:Mandatory:
Progress Flags:Mandatory:
Optional Parameters:Optional:
::*1
.TE
.ip "Note 1:" 8
.sh 3 "Connect (CCON)"
.pp
The \fI\)Connect (CCON)\fR message is sent from an ASP to an SG to indicate
that an incoming ISUP call has been connected.  The \fI\)CCON\fR message is
sent from an SGP to an ASP to indicate that an outgoing ISUP call has ben
connected.
.pp
The \fI\)CCON\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Setup' (Response and Confirmation) primitive and the ITU-T `ANM'
and `CON' and ANSI `ANM' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CCON\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CCON\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Optional Parameters:Optional:
::*1
.TE
.ip "Note 1:" 8
.sh 3 "Suspend (CSUS)"
.pp
The \fI\)Suspend (CSUS)\fR message is sent from the ASP to an SG or from the
SGP to the ASP to indicate that an established call has been suspended.
.pp
The \fI\)CSUS\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Suspend' primitive and the ITU-T and ANSI `SUS' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CSUS\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                     Suspend/Resume Flags                      |
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CSUS\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Suspend/Resume Flags:Mandatory:
Optional Parameters:Optional:
.TE
.ip "Note 1:" 8
.sh 3 "Resume (CRES)"
.pp
The \fI\)Resume (CRES)\fR message is sent from the ASP to an SG or from the
SGP to the ASP to indicate that a previously suspended established call has
been resumed.
.pp
The \fI\)CRES\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Resume' primitive and the ITU-T and ANSI `RES' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CRES\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                     Suspend/Resume Flags                      |
+-------------------------------+-------------------------------+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CRES\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Suspend/Resume Flags:Mandatory:
Optional Parameters:Optional:
.TE
.ip "Note 1:" 8
.sh 3 "Reattempt (CREA)"
.pp
The \fI\)Reattempt (CREA)\fR Indication message is sent from an SGP to an ASP to
indicate that a call attempt on a circuit should be reattempted on an
alternate circuit.
.pp
If the ASP selected the outgoing circuit in the corresponding \fI\)CSET\fR,
then the ASP is responsible for selecting another circuit and issuing a new
\fI\)CSET\fR message.  If the ASP did not select the outgoing circuit in the
corresponding \fI\)CSET\fR message, then the SGP is responsible for performing
an automatic reattempt on a new circuit or subsequently indicating call
failure with a \fB\)CERR\fR message.
.pp
The \fI\)CREA\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Reattempt' primitive and does not correspond to an ISUP message.
.lp
The \fI\)CREA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0506          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Reattempt Reason                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CREA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Reattempt Reason:Mandatory:
.TE
.sh 3 "Failure (CERR)"
.pp
The \fI\)Failure (CERR)\fR message is sent from an ASP to an SG to indicate
the failure of an incoming call setup.  The \fI\)CERR\fR message is sent from
an SGP to an ASP to indicate the failure of an outgoing call setup.
.pp
The \fI\)CERR\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Failure `Call Failure' primitive and the ITU-T and ANSI `RST,' `REL' and
`RLC' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CERR\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050C          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Failure Reason                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CERR\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Failure Reason:Mandatory:
::*1
.TE
.ip "Note 1:" 8
.sh 3 "In Band Information (CIBI)"
.pp
The \fI\)In Band Information (CIBI)\fR message is sent from an ASP to an SG to
indicate that in band information is now available for an incoming call.  The
\fI\)CIBI\fR message is sent from an SGP to an ASP to indicate that in band
information is now available for an outgoing call.
.pp
The \fI\)CIBI\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Setup `In Band Information' primitive and the ITU-T and ANSI `ACM' and
`CPG' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CIBI\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CIBI\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Optional Parameters:Optional:
::*1
.TE
.sh 3 "Release (CREL)"
.pp
The \fI\)Release (CREL)\fR message is sent from an ASP to an SG or from the
SGP to an ASP to release a call during the setup or established phase.
.pp
The \fI\)CREL\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Release' (Request, Indication) primitive and the ITU-T and ANSI
`REL' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CREL\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050D          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                             Cause                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CREL\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Cause:Mandatory:
.TE
.sh 3 "Release Complete (CRLC)"
.pp
The \fI\)Release Complete (CRLC)\fR message is sent from an ASP to an
SG or from an SGP to an ASP to confrim the release of a call.
.pp
The \fI\)CRLC\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Release' (Response, Confirmation) primitive and the ITU-T and
ANSI `REL' and `RLC' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CRLC\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050D          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                             Cause                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CRLC\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Cause:Mandatory:
.TE
.sh 2 "ISUA Circuit Supervision (CS) Messaegs"
.pp
ISUA Circuit Supervision (CS) Messages are used to convey circuit management
information to Call Control.  Theses messages correspond to specific RESET,
BLOCKING, UNBLOCKING and CCT GROUP QUERY primitives.  The general message
format includes a Common Message Header, the ISUA Message Header, and the CS
Message Header, together with a list of zero or more parameters as defined by
the Message Type.  For forward compatibility, all Message Types \fB\)MAY\fR
have optional attached parameters in addition to the message headers.
.lp
These messages are ISUA Circuit Supervision (CS) Messages:
.lp
.ix +4
.TS
tab(:);
cisss
lbcbcbcb
lcnn.
ISUA Circuit Supervision (CS) Messages
_
Message Name::Message Type:Section
_
CS Header:::3.4.1
Continuity Check:CCNT:6:3.4.2
Loop Back:CLBK:7:3.4.3
Report:CREP:8:3.4.4
Reset:CRSC:1:3.4.5
Reset Acknowledgement:CRSA:2:3.4.6
Block:CBLO:3:3.4.7
Block Acknowledgement:CBLA:4:3.4.8
Unblock:CUBL:5:3.4.9
Unblock Acknowledgement:CUBA:6:3.4.10
Query:CQRY:7:3.4.11
Query Acknowledgement:CQRA:8:3.4.12
_
.TE
.sh 3 "CS Message Header" 
.pp
In addition the the Common Message Header and ISUA Message Header, a specific
message header is included for ISUA Circuit Supervision (CS) messages.  The CS
Message Header will immediately follow the ISUA Message Header in these
messages.
.lp
The \fI\)CS Message Header\fR is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0520          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Circuit Id                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CS Message Header\fR contains the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Id:Mandatory:
.TE
.sh 3 "Continuity Check (CCNT)"
.pp
The \fI\)Continuity Check (CCNT)\fR message is sent from an ASP to an SGP to
request an continuity check on a specified circuit.  The \fI\)CCNT\fR message
is sent from an SGP to an ASP to indicate an a continuity check request on the
specified circuit.
.pp
The \fI\)CCNT\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Continuity Recheck' (Request) primitive and the ITU-T and ANSI
ISUP `CCR' message.
.[
q763
.]
.[
t1.113
.]
.pp
The \fI\)CCNT\fR message has no message-type-specific parameters beyond the
CS Message Header.
.sh 3 "Loop Back (CLBK)"
.pp
The \fI\)Loop Back (CLBK)\fR message is sent from an ASP to an SGP to indicate
that a loop back has been established on the local end of the specified
circuit.  The \fI\)CLBK\fR message is sent from an ASP to an SGP to indicate
that a loop back has been establish on the remote end of the specified circuit.
.pp
The \fI\)CLBK\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
Call Control `Continuity Recheck' (Confirmation) primitive and the ITU-T and
ANSI ISUP `LPA' message.
.[
q763
.]
.[
t1.113
.]
.pp
The \fI\)CLBK\fR message has no message-type-specific parameters beyond the
CS Message Header.
.sh 3 "Report (CREP)"
.pp
The \fI\)Report (CREP)\fR Request message is sent from an ASP to SG or from an
SGP to an ASP to indicate the success or failure of a continuity test
operation on the specified circuit.
.pp
The \fI\)CREP\fR message corresponds to the ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Continuity Report' primitive and the ITU-T and ANSI ISUP `COT' message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CREP\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0507          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Check Result                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CREP\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Check Result:Mandatory:
.TE
.sh 3 "Reset (CRSC)"
.pp
The \fI\)Reset (CRSC)\fR message is sent from an ASP to an SG to request the
reset of the specified circuit(s).  The \fI\)CRSC\fR message is sent from the
SGP to an ASP to indicate the reset reset of the specified circuit(s).
.pp
The \fI\)CRSC\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Reset' (Request) primitive and the ITU-T and ANSI ISUP `RSC' and `GRS'
message.
.[
q763
.]
.[
t1.113
.]
.lp
The \fI\)CRSC\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CRSC\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the \fI\)CRSC\fR
message corresponds to the `GRS' message.  When the \fI\)Circuit Range\fR is
not present in the message, the \fI\)CRSC\fR message corresponds to the `RSC' message.
.sh 3 "Reset Acknowledgement (CRSA)"
.pp
The \fI\)Reset Acknowledgement (CRSA)\fR message is sent from an SGP to an ASP
to confirm the reset of the specified circuit(s).
.pp
The \fI\)CRSA\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`Reset' (Confirmation) primitive and the ITU-T and ANSI ISUP `RLC' and 'GRA'
message.
.lp
The \fI\)CRSA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CRSA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the
\fI\)CRSA\fR message corresponds to the `GRA' message and the \fI\)Circuit
Range\fR parameter \fB\)SHOULD\fR match the corresponding parameter in the
\fI\)CRSC\fR request message.  When the \fI\)Circuit Range\fR is not present
in the message, the \fI\)CRSA\fR message corresponds to the `RLC' message.
.sh 3 "Block (CBLO)"
.pp
The \fI\)CBLO\fR Request message is sent from an ASP to an SG or IPSP to
perform a blocking request.  The \fI\)CBLO\fR Indication message is sent from
the SGP to an ASP to indicate the blocking indication.
.pp
The \fI\)CBLO\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`BLOCKING' primitive and the ITU-T and ANSI
`BLO' and `CGB' message.
.lp
The \fI\)CBLO\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CBLO\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the \fI\)CBLO\fR
message corresponds to the `CGB' message.  When the \fI\)Circuit Range\fR is
not present in the message, the \fI\)CBLO\fR message corresponds to the `BLO' message.
.sh 3 "Block Acknowledgement (CBLA)"
.pp
The \fI\)Block Acknowledgement (CBLA)\fR Request message is sent from an ASP
to an SG or IPSP to perform a blocking response.  The \fI\)CBLA\fR Indication
message is sent from the SGP to an ASP to indicate the blocking confirmation.
.pp
The \fI\)CBLA\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`BLOCKING' primitive and the ITU-T and ANSI
`BLA' and `CGBA' message.
.lp
The \fI\)CBLA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CBLA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the
\fI\)CBLA\fR message corresponds to the `CGBA' message and the \fI\)Circuit
Range\fR parameter \fB\)SHOULD\fR match the corresponding parameter in the
\fI\)CBLO\fR request message.  When the \fI\)Circuit Range\fR is not present
in the message, the \fI\)CBLA\fR message corresponds to the `BLA' message.
.sh 3 "Unblock (CUBL)"
.pp
The \fI\)Unblock (CUBL)\fR Request message is sent from an ASP to an SG or
IPSP to perform a unblocking request.  The \fI\)CUBL\fR Indication message is
sent from the SGP to an ASP to indicate the unblocking indication.
.pp
The \fI\)CUBL\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`UNBLOCKING' primitive and the ITU-T and ANSI
`UBL' and `CGU' message.
.lp
The \fI\)CUBL\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CUBL\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the \fI\)CUBL\fR
message corresponds to the `CGU' message.  When the \fI\)Circuit Range\fR is
not present in the message, the \fI\)CUBL\fR message corresponds to the `UBL' message.
.sh 3 "Unblock Acknowledgement (CUBA)"
.pp
The \fI\)Unblock Acknowledgement (CUBA)\fR Request message is sent from an ASP
to an SG or IPSP to perform a unblocking response.  The \fI\)CUBA\fR
Indication message is sent from the SGP to an ASP to indicate the unblocking
confirmation.
.pp
The \fI\)CUBA\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`UNBLOCKING' primitive and the ITU-T and ANSI
`UBA' and `CGUA' message.
.lp
The \fI\)CUBA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CUBA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Conditional:*1
.TE
.ip "Note 1:" 8
When the \fI\)Circuit Range\fR parameter is included in the message, the
\fI\)CUBA\fR message corresponds to the `CGUA' message and the \fI\)Circuit
Range\fR parameter \fB\)SHOULD\fR match the corresponding parameter in the
\fI\)CUBL\fR request message.  When the \fI\)Circuit Range\fR is not present
in the message, the \fI\)CUBA\fR message corresponds to the `UBA' message.
.sh 3 "Query (CQRY)"
.pp
The \fI\)Query (CQRY)\fR Request message is sent from an ASP to an SG or IPSP
to perform a query request.  The \fI\)CQRY\fR Indication message is sent from
the SGP to an ASP to indicate the query indication.
.pp
The \fI\)CQRY\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`CCT GROUP QUERY' primitive and the ITU-T and ANSI
`CQM' message.
.lp
The \fI\)CQRY\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Range                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CQRY\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Range:Mandatory:1
.TE
.sh 3 "Query Acknowledgement (CQRA)"
.pp
The \fI\)Query Acknowledgement (CQRA)\fR Request message is sent from an ASP
to an SG or IPSP to perform a query response.  The \fI\)CQRA\fR Indication
message is sent from the SGP to an ASP to indicate the query confirmation.
.pp
The \fI\)CQRA\fR message corresponds to the
ITU-T
.[
q764
.]
and ANSI
.[
t1.113
.]
`CCT GROUP QUERY' primitive and the ITU-T and ANSI
`CQMA' message.
.lp
The \fI\)CQRA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x05XX          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Circuit Status                       /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)CQRA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Circuit Status:Mandatory:*1
.TE
.ip "Note 1:" 8
The \fI\)Circuit Status\fR parameter \fB\)SHOULD\fR contain a circuit status
for each of the circuit identifiers present in the corresponding \fI\)CQRY\fR
message.
.sh 2 "Application Server Process State Maintenance (ASPSM) Messages"
.sh 3 "ASP Up (UP)"
.pp
The \fI\)ASP Up (UP)\fR message is used to indicate to a remote ISUA peer
that the Adaptation layer is up and running.
.lp
The \fI\)ASP UP\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0011          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        ASP Identifier                         |
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASP UP\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
ASP Identifier:Conditional:*1
Info String:Optional
.TE
.ip "Note 1:" 8
ASP Identifier \fB\)MUST\fR be used where the IPSP/SGP cannot identify
the ASP by pre-configured address/port number information (e.g, where an
ASP is resident on a Host using dynamic address/port number assignment).
.sh 3 "ASP Up Ack (UP ACK)"
.pp
The \fI\)ASP Up Ack (UP ACK)\fR message is used to acknowledge an
\fI\)ASP UP\fR message received from a remote ISUA peer.
.lp
The \fI\)ASP UP ACK\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASP UP ACK\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Info String:Optional
.TE
.sh 3 "ASP Down (DOWN)"
.pp
The \fI\)ASP Down (DOWN)\fR message is used to indicate to a remote ISUA
peer that the adaptation layer is not running.
.lp
The \fI\)ASP DOWN\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASP DOWN\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Info String:Optional
.TE
.sh 3 "ASP Down Ack (DOWN ACK)"
.pp
The \fI\)ASP Down Ack (DOWN ACK)\fR message is used to acknowledge an
\fI\)ASP DOWN\fR message received from a remote ISUA peer.
.lp
The \fI\)ASP DOWN ACK\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASP DOWN ACK\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Info String:Optional
.TE
.ip "Note:"
The \fI\)ASP DOWN ACK\fR message will always be sent to acknowledge an
\fI\)ASP DOWN\fR message.
.sh 3 "Heartbeat (BEAT)"
.pp
The \fI\)Heartbeat (BEAT)\fR message is optionally used to ensure that
the ISUA peers are still available to each other.
.lp
The \fI\)BEAT\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0009          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Heartbeat Data                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)BEAT\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Heartbeat Data:Optional
.TE
.sh 3 "Heartbeat Ack (BEAT ACK)"
.pp
The \fI\)Heartbeat ACK (BEAT ACK)\fR message is sent in response to a
\fI\)BEAT\fR message.  A peer \fB\)MUST\fR send a \fI\)BEAT ACK\fR in
response to a \fI\)BEAT\fR message.  It includes all the parameters of
the received \fI\)BEAT\fR message, without any change.
.lp
The \fI\)BEAT ACK\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0009          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Heartbeat Data                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)BEAT ACK\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Heartbeat Data:Optional
.TE
.sh 2 "Application Server Process Traffic Maintenance (ASPTM) Messages"
.sh 3 "ASP Active (ASPAC)"
.pp
The \fI\)ASP Active (ASPAC)\fR message is sent by an ASP to indicate to
a remote ISUA peer that it is Active and ready to process signalling
traffic for a particular Application Server.
.lp
The \fI\)ASPAC\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Routing Context                         /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x000B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                       Traffic Mode Type                       |
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASPAC\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Conditional:*1
Traffic Mode Type:Optional:*2
Info String:Optional
.TE
.ip "Note 1:" 8
When an ASP is registered or configured for multiple AS with an SG, the
Routing Context associated with the AS whose activation is being requested
\fB\)MUST\fR be placed in the \fI\)ASPAC\fR message.
.ip "Note 2:" 8
The Traffic Mode Type parameter is not necessary in the \fI\)ASPAC\fR message
when both peers are aware of the traffic mode of the AS by configuration or
registration.
.sh 3 "ASP Active Ack (ASPAC ACK)"
.pp
The \fI\)ASP Active Ack (ASPAC)\fR Ack message is used to acknowledge an
\fI\)ASPAC\fR message received from a remote ISUA peer.
.lp
The \fI\)ASPAC ACK\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Routing Context                         /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x000B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                       Traffic Mode Type                       |
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASPAC ACK\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Conditional:*1
Traffic Mode Type:Optional:
Info String:Optional:
.TE
.ip "Note 1:" 8
When an ASP is registered or configured for multiple AS with an SG, the
Routing Context associated with the AS whose activation is being
acknowledged \fB\)MUST\fR be placed in the \fI\)ASPAC ACK\fR message.
.sh 3 "ASP Inactive (ASPIA)"
.pp
The \fI\)ASP Inactive (ASPIA)\fR message is sent by an ASP to indicate
to a remote ISUA peer that it is no longer processing signalling traffic
within a particular Application Server.
.lp
The \fI\)ASPIA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Routing Context                         /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          INFO String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The ASPIA message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Conditional:*1
INFO String:Optional
.TE
.ip "Note 1:" 8
When an ASP is registered or configured for multiple AS with an SG, the
Routing Context associated with the AS whose deactivation is being
requested \fB\)MUST\fR be placed in the \fI\)ASPIA\fR message.
.sh 3 "ASP Inactive Ack (ASPIA ACK)"
.pp
The \fI\)ASP Inactive Ack (ASPIA ACK)\fR message is used to acknowledge
an \fI\)ASPIA\fR message received from a remote ISUA peer.
.lp
The \fI\)ASPIA\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Routing Context                         /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          INFO String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASPIA\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Conditional:*1
INFO String:Optional
.TE
.ip "Note 1:" 8
When an ASP is registered or configured for multiple AS with an SG, the
Routing Context associated with the AS whose deactivation is being
acknowledged \fB\)MUST\fR be placed in the \fI\)ASPIA ACK\fR message.
.sh 2 "Management (MGMT) Messages"
.sh 3 "Error (ERR)"
.pp
The \fI\)Error (ERR)\fR message is used by a ISUA peer to indicate an
error situation.  \fI\)ERR\fR messages \fB\)MUST NOT\fR be generated in
response to other \fI\)ERR\fR messages.
.lp
The \fI\)ERR\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x000C          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                          Error Code                           |
+-------------------------------+-------------------------------+
|         Tag = 0x0521          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                       Network Appearance                      |
+-------------------------------+-------------------------------+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Routing Context                       /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0520          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Circuit Id                          |
+-------------------------------+-------------------------------+
|         Tag = 0x0501          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Call Reference                        |
+-------------------------------+-------------------------------+
|         Tag = 0x0007          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Diagnostic Info                       /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ERR\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Error Code:Mandatory:
Routing Context:Conditional:*1
Call Reference:Conditional:*2
Circuit Id:Conditional:*3
Network Appearance:Conditional:*4
Diagnostic Info:Conditional:*5
.TE
.ip "Note 1:" 8
When the Error Code is "Invalid Routing Context," the Routing Context
parameter \fB\)MUST\fR contain the invalid routing context value(s).
.ip "Note 2:" 8
When the Error Code is "Call Reference Unknown," the Call Reference parameter
\fB\)MUST\fR contain the call reference for which status is unknown or
unauthorized.
.ip "Note 3:" 8
When the Error Code is "Circuit Status Unknown," the \fI\)Circuit Id\fR parameter
\fB\)MUST\fR contain the circuit for which status is unknown or unauthorized.
.ip "Note 4:" 8
When the Error Code is "Invalid Network Appearance," the Network Appearance
parameter \fB\)MUST\fR contains the invalid network appearance value.
.ip "Note 5:" 8
The Diagnostic Info parameter \fB\)SHOULD\fR contain at least the first 40
bytes of the message that caused the ERR message to be sent.
.sh 3 "Notify (NTFY)"
.pp
The Notify message is used to provide an autonomous indication of ISUA
events at an SG or IPSP to an ASP.
.lp
The \fI\)NTFY\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x000D          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Status                              |
+-------------------------------+-------------------------------+
|         Tag = 0x0011          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        ASP Identifier                         |
+-------------------------------+-------------------------------
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Routing Context                         /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)NTFY\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Status:Mandatory
ASP Identifier:Conditional:*1
Routing Context:Conditional:*2
Info String:Optional
.TE
.ip "Note 1:" 8
ASP Identifier \fB\)MUST\fR be used where the IPSP/SGP cannot identify
the ASP by pre-configured address/port number information (e.g, where an
ASP is resident on a Host using dynamic address/port number assignment)
and the Status parameter is set to "Alternate ASP Active" or "ASP
Failure".
.ip "Note 2:" 8
When an ASP is registered or configured for multiple AS with an SG, to
identify the Application Server, the Routing Context associated with the
AS whose state is being notified \fB\)MUST\fR be placed in the
\fI\)NTFY\fR message when the Status parameter is set to
"AS_State_Change".
.sh 2 "Routing Key Management (RKM) Messages"
.pp
\fI\)Routing Key Management (RKM)\fR messages are used to manage the
Routing Keys that are used by an SG to direct traffic toward an
Application Server.
.sh 3 "Registration Request (REG REQ)"
.pp
The \fI\)Registration Request (REG REQ)\fR message is sent by an ASP to
indicate to a remote ISUA peer that it wishes to register one or more
given Routing Keys with the remote peer.  Typically, an ASP would send
this message to an SGP, and expects to receive a REG RSP message in
return with an associated Routing Context value.
.lp
The \fI\)REG REQ\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0522          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Routing Key 1                        /
\\                                                               \\
+-------------------------------+-------------------------------+
\\                                                               \\
/                              ...                              /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0522          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Routing Key n                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)REG REQ\fR message can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Key:Mandatory:*1
.TE
.ip "Note 1:" 8
One or more Routing Key parameters \fB\)MAY\fR be included in a single
\fI\)REG REQ\fR message.  Whereas it is \fB\)OPTIONAL\fR for an
implementation to be able to generate a \fI\)REG REQ\fR message with
more than one Routing Key parameter, it is \fB\)REQUIRED\fR that the
implementation be able to receive multiple Routing Key parameters in a
single \fI\)REG REQ\fR message.
.sh 3 "Registration Response (REG RSP)"
.pp
The \fI\)Registration Response (REG RSP)\fR message is sent by an SG to
an ASP to indicate the result of a previous \fI\)REG REQ\fR from an ASP.
When successful, the \fI\)REG RSP\fR message contains the Routing
Context assigned to the one or more Routing Keys that were presented in
the \fI\)REG REQ\fI message.
.lp
The \fI\)REG RSP\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0014          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                     Registration Result 1                     /
\\                                                               \\
+-------------------------------+-------------------------------+
\\                                                               \\
/                              ...                              /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0014          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                     Registration Result n                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)REG RSP\fR message can contain the following parameters:
.pp
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Registration Result:Mandatory:*1
.TE
.ip "Note 1:" 8
\fI\)REG RSP\fR message.  Whereas it is \fB\)OPTIONAL\fR for an
implementation to be able to generate a \fI\)REG RSP\fR message with
more than one Routing Key parameter, it is \fB\)REQUIRED\fR that the
implementation be able to receive multiple Routing Key parameters in a
single \fI\)REG RSP\fR message.
.sh 3 "Deregistration Request (DEREG REQ)"
.pp
The \fI\)Deregistration Request (DEREG REQ)\fR message is sent by an ASP
to indicate to a remote ISUA peer that it wishes to deregister a given
Routing Key as identified by the given Routing Context.  Typically, an
ASP would send this message to an SGP, and expects to receive a
\fI\)DEREG RSP\fR message in return with the associated Routing Context
value.
.lp
The \fI\)DEREG REQ\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                        Routing Context                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)DEREG REQ\fR message contains the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Routing Context:Mandatory:*1
.TE
.ip "Note 1:" 8
One or more Routing Context values \fB\)MAY\fR be included in the
Routing Context parameter.  Whereas it is \fB\)OPTIONAL\fR for an
implementation to be able to generate a \fI\)DEREG REQ\fR message with
multiple Routing Context values in the Routing Context parameter, it is
\fB\)REQUIRED\fR that an implementation be able to receive multiple
Routing Context values in the Routing Context parameter of the
\fI\)DEREG REQ\fR message.
.sh 3 "Deregistration Response (DEREG RSP)"
.pp
The \fI\)Deregistration Response (DEREG RSP)\fR message is used as a
response to the \fI\)DEREG REQ\fR message from a remote ISUA peer.
.lp
The \fI\)DEREG REQ\fR message is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0015          |            Length = 12        |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                   Deregistration Result 1                     /
\\                                                               \\
+-------------------------------+-------------------------------+
\\                                                               \\
/                              ...                              /
\\                                                               \\
+-------------------------------+-------------------------------+
|         Tag = 0x0015          |            Length = 12        |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                   Deregistration Result n                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)DEREG REQ\fR message contains the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Deregistration Result:Mandatory:*1
.TE
.ip "Note 1:" 8
One or more Deregistration Result parameters \fB\)MAY\fR be included in
one \fI\)DEREG RSP\fR message.  Whereas it is \fB\)OPTIONAL\fR for an
implementation to be able to generate a \fI\)DEREG RSP\fR message with
multiple Deregistration Result parameters, it is \fB\)REQUIRED\fR that
an implementation be able to receive multiple Deregistration Result
parameters in a single \fI\)DEREG RSP\fR message.
.sh 2 "Common Parameters"
.lp
These TLV parameters are common across the different adaptation layers:
.lp
.ix +4
.TS
tab(:);
lb2cbcb
li2cn.
Parameter Name:Parameter ID:Section
=
Reserved:0x0000:\-
Not used in ISUA:0x0001:\-
Not used in ISUA:0x0002:\-
Not used in ISUA:0x0003:\-
Info String:0x0004:3.9.1
Not used in ISUA:0x0005:\-
Routing Context:0x0006:3.9.2
Diagnostic Info:0x0007:3.9.3
Not used in ISUA:0x0008:\-
Heartbeat Data:0x0009:3.9.4
Not used in ISUA:0x000A:\-
Traffic Mode Type:0x000B:3.9.5
Error Code:0x000C:3.9.6
Status:0x000D:3.9.7
Not used in ISUA:0x000E:\-
Not used in ISUA:0x000F:\-
Not used in ISUA:0x0010:\-
ASP Identifier:0x0011:3.9.8
Not used in ISUA:0x0012:\-
Correlation Id:0x0013:3.9.9
Registration Result:0x0014:3.9.10
Deregistration Result:0x0015:3.9.11
Registration Status:0x0016:3.9.12
Deregistration Status:0x0017:3.9.13
Local Routing Key Identifier:0x0018:3.9.14
.TE
.sh 3 "Info String"
.pp
The \fI\)Info String\fR parameter is optionally included in all MGMT,
ASPSM and ASPTM messages to provide additional debugging or diagnostic
information.
.lp
The \fI\)Info String\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0004          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                          Info String                          /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Info String\fR parameter contains the following fields:
.ip "\fB\)Info String field: variable (ASCII string)\fR" 2
.ip "" 2
The \fI\)Info String\fR field can carry any meaningful UTF-8
.[
rfc2279
%Z 1
.]
character string along with the message.  Length of the \fI\)Info String\fR
field is from 0 to 255 characters.  No procedures are presently identified for
its use but implementations may use the \fI\)Info String\fR for debugging
purposes.
.sh 3 "Routing Context"
.pp
The \fI\)Routing Context\fR parameter is included in all ISUA CP and CS
messages as well as in MGMT, ASPTM, ASPSM that reference one or
more Application Servers.  The \fI\)Routing Context\fR parameter is used
to uniquely identify an Application Server and Routing Key within an
association between an SGP and ASP.
.lp
The \fI\)Routing Context\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0006          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                      Routing Context(s)                       /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Routing Context\fR parameter can contain the following fields:
.ip "\fB\)Routing Context field: list of 32-bit (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Routing Context\fR field contains (a list of) 32-bit unsigned
integers indexing the Application Server traffic that the sending ASP is
configured or registered to receive.  There is one-to-one relationship between
a Routing Context value, an SG Routing Key and an Application Server \*#.
.\"As an AS can only appear in one Network Appearance, the Network Appearance
.\"parameter is not required in the ASP Active message.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  An Application Server Process may be
configured to process traffic for more than one logical Application
Server.  From the perspective of an ASP, a Routing Context defines a
range of signalling traffic that the ASP is currently configured to
receive from the SG.
.ip
Additionally, the Routing Context parameter identifies the SS7 network
context for the message, for the purposes of logically separating the
signalling traffic between the SGP and the Application Server Process
over a common SCTP Association, when needed.  An example is where an SGP
is logically partitioned to appear as an element in several different
national SS7 networks.  It implicitly defines the SS7 Point Code format
used, the SS7 Network Indicator value and ISUP protocol
type/variant/version used within a separate SS7 network.  It also
defines the network context for the PC and SSN values.  Where an SGP
operates in the context of a single SS7 network, or individual SCTP
associations are dedicated to each SS7 network context, this
functionality is not needed.
.)d
If the Routing Context parameter is present, it \fB\)SHOULD\fR be the first
parameter in the message as it defines the format and/or interpretation of the
parameters containing a PC or SSN value.
.sh 3 "Diagnostic Information"
.pp
The \fI\)Diagnostic Info\fR parameter is used in the MGMT \fI)Error (ERR)\fR
message to provide additional information concerning the message that
generated an \fI\)ERR\fR message reply.  The \fI\)Diagnostic Info\fR parameter
\fB\)SHOULD\fR contain at least the first 40 bytes of the message that
generated the error.
.lp
The \fI\)Diagnostic Info\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0007          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Diagnostic Info                       /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Diagnostic Info\fR parameter contains the following fields:
.ip "\fB\)Diagnostic Info field: variable length (bytes)\fR" 2
.ip "" 2
The \fI\)Diagnostic Info\fR field can contain any information germane to
the error condition, to assist in the identification of the error
condition.  The Diagnostic Info \fB\)SHOULD\fR be the first 40 bytes of
the offending message.
.sh 3 "Heartbeat Data"
.pp
The \fB\)Heartbeat Data\fR parameter is used in the \fI\)BEAT\fR and \fI\)BEAT
ACK\fR messages and contains whatever information the sender of the BEAT
message chooses to include.  Some uses for the Heartbeat Data parameter are
described in Section 4.
.lp
The \fB\)Heartbeat Data\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0009          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                         Heartbeat Data                        /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fB\)Heartbeat Data\fR parameter contains the following fields:
.ip "\fB\)Heartbeat Data field: variable length (opaque)\fR" 2
.ip "" 2
The sending node defines the Heartbeat Data field contents.  It may include a
Heartbeat Sequence Number or Time-stamp, or other implementation specific
details.  The receiver of a \fI\)Heartbeat (BEAT)\fR message does not process
this field as it is only of significance to the sender.  The receiver
\fB\)MUST\fR echo the content of the Heartbeat Data in a \fI\)BEAT ACK\fR
message.  The data field can be used to store information in the
\fI\)Heartbeat (BEAT)\fR message useful to the sending node (e.g. the data
field can contain a time stamp, a sequence number, etc.).
.sh 3 "Traffic Mode Type"
.pp
The \fI\)Traffic Mode Type\fR parameter indicates the fail-over and
traffic distribution algorithm and procedures that will be used for an
Application Server Process serving an Application Server.  Each
Application Server has associated with it only one Traffic Mode
Type.
.lp
The \fI\)Traffic Mode Type\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x000B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                       Traffic Mode Type                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Traffic Mode Type\fR parameter contains the following fields:
.ip "\fB\)Traffic Mode Type field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Traffic Mode Type field identifies the traffic mode of operation of
an ASP within an AS.  The valid values for the Traffic Mode Type field
are as follows:
.ix +4
.TS
tab(;);
nl.
1;Override
2;Load-share
3;Broadcast
.TE
.ix -4
.ip "" 2
Within a Routing Context, Override, Load-share Types and Broadcast
cannot be mixed.  The Override value indicates that the ASP is operating
in Override mode, and that when the ASP becomes active for the
Application Server, it will take over all traffic for the AS (i.e,
primary/back-up operation), overriding any currently active ASP in the
AS.  In Load-share mode, when the ASP becomes active for the AS, the ASP
will share in the traffic distribution with any other active ASPs.  In
Broadcast mode, when the ASP becomes active for the AS, the ASP will
receive the same traffic as any other active ASPs.
.sh 3 "Error Code"
.pp
The \fI\)Error Code\fR parameter is used in the \fI\)Error (ERR)\fR message to
indicate the reason that the \fI\)ERR\fR message was generated and, along with
the other parameters in the \fI\)ERR\fR message, help to locate the problem
that generated the error condition.
.lp
The \fI\)Error Code\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x000C          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                          Error Code                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Error Code\fR parameter contains the following fields:
.ip "\fB\)Error Code field: 32-bit (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Error Code\fR field indicates the reason for the Error Message.
The Error Code field value can be one of the following values:
.ix +4
.TS
tab(:);
nl.
1:Invalid Version
3:Unsupported Message Class
4:Unsupported Message Type
5:Unsupported Traffic Handling Mode
6:Unexpected Message
7:Protocol Error
9:Invalid Stream Identifier
13:Refused - Management Blocking
14:ASP Identifier Required
15:Invalid ASP Identifier
17:Invalid Parameter Value
18:Parameter Field Error
19:Unexpected Parameter
21:Invalid Network Appearance
22:Missing Parameter
23:Routing Key Change Refused
25:Invalid Routing Context
26:No Configured AS for ASP
.T&
nili.
34:Circuit Status Unknown
35:Call Reference Status Unknown
.TE
.pp
The "Invalid Version" error is sent if a message was received with an invalid
or unsupported version.  The \fI\)ERR\fR message contains the supported
version in the Common header.  The \fI\)ERR\fR message could optionally
provide the supported version in the Diagnostic parameter.
.pp
The "Unsupported Message Class" error is sent if a message with an unexpected
or unsupported Message Class is received.
.pp
The "Unsupported Message Type" error is sent if a message with an unexpected
or unsupported Message Type is received.
.pp
The "Unsupported Traffic Handling Mode" error is sent by a SGP if an ASP sends
an \fI\)ASP Active (ASPAC)\fR message with an unsupported Traffic Mode Type or
a Traffic Mode Type that is inconsistent with the presently configured mode
for the Application Server.  An example would be a case in which the SGP did
not support load-sharing.
.pp
The "Unexpected Message" error \fB\)MAY\fR be sent if a defined and recognized
message is received that is not expected in the current state (in some cases
the ASP may optionally silently discard the message and not send an
\fI\)ERR\fR message).  For example, silent discard is used by an ASP if it
received a ISUA CP message from an SGP while it was in the ASP-INACTIVE state.
If the Unexpected message contained Routing Context(s), the Routing Context(s)
\fB\)SHOULD\fR be included in the \fI\)ERR\fR message.
.pp
The "Protocol Error" error is sent for any protocol anomaly (i.e., reception
of a parameter that is syntactically correct but unexpected in the current
situation.
.pp
The "Invalid Stream Identifier" error is sent if a message is received on an
unexpected SCTP stream (e.g, a Management message was received on a stream
other than "0", or a ISUA CP message was received on stream "0").
.pp
The "Refused - Management Blocking" error is sent when an \fI\)ASP Up
(ASPUP)\fR or \fI\)ASP Active (ASPAC)\fR message is received and the request
is refused for management reasons (e.g, management lockout").  If this error
is in response to an \fI\)ASP Active (ASPAC)\fR message, the Routing
Context(s) in the \fI\)ASP Active (ASPAC)\fR message \fB\)SHOULD\fR be
included in the \fI\)ERR\fR message.
.pp
The "ASP Identifier Required" is sent by a SGP in response to an \fI\)ASP Up
(ASPUP)\fR message which does not contain an ASP Identifier parameter when the
SGP requires one.  The ASP \fB\)SHOULD\fR resend the \fI\)ASP Up (ASPUP)\fR
message with an ASP Identifier.
.pp
The "Invalid ASP Identifier" is send by a SGP in response to an \fI\)ASP Up
(ASPUP)\fR message with an invalid (i.e., non-unique) ASP Identifier.
.pp
The "Invalid Parameter Value" error is sent if a message is received with an
invalid parameter value (e.g, a \fI\)DUPU\fR message was received with a Mask
value other than "0").
.pp
The "Parameter Field Error" would be sent if a message is received with a
parameter having a wrong length field.
.pp
The "Unexpected Parameter" error would be sent if a message contains an
invalid parameter.
.pp
The "Invalid Network Appearance" error is sent by a SGP if an ASP sends a
message with an invalid (not configured) Network Appearance value.  For this
error, the invalid (not configured) Network Appearance \fB\)MUST\fR be
included in the Network Appearance parameter in the \fI\)ERR\fR message.
.pp
The "Missing Parameter" error is sent if a mandatory parameter was not
included in a message.
.pp
The "Routing Key Change Refused" error is sent when an SG refuses a change in
the \fI\)Routing Key\fR parameters.
.pp
The "Invalid Routing Context" error is sent if a message is received from a
peer with an invalid (not configured) Routing Context value, or if a message
is received from a peer without a Routing Context parameter and it is not
known by configuration data which Application Servers are referenced.  For
this error, the invalid Routing Context(s) \fB\)MUST\fR be included in the
\fI\)ERR\fR message.
.pp
The "No Configured AS for ASP" error is sent if a message is received from a
peer without a Routing Context parameter and it is not known by configuration
data which Application Servers are referenced.
.pp
The "Circuit Status Unknown" Error \fB\)MAY\fR be sent it a \fI\)CQRY\fR is
receive at an SG inquiring of the status of a circuit or circuits and the SG
does not wish to provide the status (e.g. the sender is not authorized to know
the status).  For this error, the invalid or unauthorized \fI\)Circuit Id\fR
\fB\)MUST\fR be included along with any \fI\)Network Appearance\fR or
\fI\)Routing Context\fR associated with the \fI\)Circuit Id\fR from the
\fI\)CQRY\fR message.
.pp
The "Call Reference Status Unknown" Error \fB\)MAY\fR be sent it a
\fI\)CQRY\fR is receive at an SG inquiring of the status of a circuit or
circuits and the SG does not wish to provide the status (e.g. the sender is
not authorized to know the status).  For this error, the invalid or
unauthorized \fI\)Call Reference\FR \fB\)MUST\fR be included along with any
\fI\)Network Appearance\fR or \fI\)Routing Context\fR associated with the
\fI\)Call Reference\fR from the \fI\)CQRY\fR message.
.sh 3 "Status"
.pp
The Status parameter identifies the type of the status that is being
notified in a \fI\)Notify (NTFY)\fR message and the Status ID.
.lp
The \fI\)Status\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x000D          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|         Status Type           |            Status ID          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Status\fR parameter contains the following fields:
.ip "\fB\)Status Type field: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The valid values for Status Type field are as follows:
.ix +4
.TS
tab(;);
nl.
1;Application Server state change (AS_State_Change)
2;Other
.TE
.ix -4
.ip "\fB\)Status ID field: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The Status ID parameter contains more detailed information for the
notification, based on the value of the Status Type.
.ba +1n
.np
If the Status Type is "AS_State_Change", then the Status ID values are
as follows:
.ix +4
.TS
tab(;);
nl.
1;reserved
2;Application Server Inactive (AS-Inactive)
3;Application Server Active (AS-Active)
4;Application Server Pending (AS-Pending)
.TE
.ix -4
.ip "" 2
These notifications are sent from an SGP to an ASP upon a change in
status of a particular Application Server.  The value reflects the new
state of the Application Server.
.np
If the Status Type is "Other", then the following Status Information
values are defined:
.ix +4
.TS
tab(;);
nl.
1;Insufficient ASP resources active in AS
2;Alternate ASP Active
3;ASP failure
.TE
.ix -4
.ip "" 2
These notifications are not based on the SGP reporting the state change
of an ASP or AS.  In the Insufficient ASP Resources case, the SGP is
indicating to an "Inactive" ASP(s) in the AS that another ASP is
required to handle the load of the AS (Load-sharing mode or Broadcast
mode).  For the Alternate ASP Active case, an ASP is informed when an
alternate ASP transitions to the ASP-Active state in Override mode.
.ba -1n
.sh 3 "ASP Identifier"
.lp
The \fI\)ASP Identifier\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0011          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        ASP Identifier                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)ASP Identifier\fR parameter contains the following fields:
.ip "\fB\)ASP Identifier field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The ASP Identifier field contains a unique value that is locally significant
among the ASPs that support an AS.  The SGP should save the ASP Identifier to
be used, if necessary, with the \fI\)Notify (NTFY)\fR message (see Section
3.7.2).
.sh 3 "Correlation Id"
.pp
The \fI\)Correlation Id\fR parameter is used to tag messages sent to an
ASP in a Broadcast group as well as during fail-over.
.lp
The \fI\)Correlation Id\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0013          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Correlation Id                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Correlation Id\fR parameter can contain the following fields:
.ip "\fB\)Correlation Id field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Correlation Id\fR field contains a Correlation Id.  The
Correlation Id is a 32-bit identifier that is attached to the ISUA
Message Header to indicate to a newly entering ASP in a Broadcast AS
where in the traffic flow of ISUA messages the ASP is joining.  It is
attached to the ISUA Message Header of the first CP message sent to
an ASP by an SG after sending an ASP Active Ack or otherwise starting
traffic to an ASP.  The Correlation Id is only significant within a
Routing Context \*#.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  Correlation Id parameter can be used for
features like Synchronization of ASPs and SGPs in a Broadcast Mode AS or
SG; avoid message duplication and mis-sequencing in case of fail-over of
association from one ASP or SGP to another ASP or SGP, etc.
.ip
For application of the \fI\)Correlation Id\fR parameter see \fI\)CORID\fR.
.[
corid-03
%Z 2
.]
.)d
.sh 3 "Registration Result"
.pp
The \fI\)Registration Result\fR parameter is used to indicate the result of a
successful or unsuccessful registration operation for a specific \fI\)Routing
Key\fR.
.lp
The \fI\)Registration Result\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0014          |             Length            |
+-------------------------------+-------------------------------+
|                  Local Routing Key Identifier                 |
+---------------------------------------------------------------+
|                       Registration Status                     |
+---------------------------------------------------------------+
|                         Routing Context                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Registration Result\fR parameter can contain the following fields:
.ip "\fB\)Local Routing Key Identifier: TLV\fI" 2
.ip "" 2
The \fI\)Local Routing Key Identifier\fR field is mandatory in the
\fI\)Registration Result\fR parameter.  The \fI\)Local Routing Key
Identifier\fR field contains the same TLV formatted parameter value as found
in the corresponding \fI\)Routing Key\fR parameter in the \fI\)Registration
Request (REG REQ)\fR message.
.ip "\fB\)Registration Status: TLV\fI" 2
.ip "" 2
The \fI\)Registration Status\fR field is mandatory in the \fI\)Registration
Result\fR parameter.  The \fI\)Registration Status\fR field indicates the
success or reason for failure of the corresponding registration request.  For
details on the format of the \fI\)Registration Status\fR parameter, see
Section 3.9.12.
.ip "\fB\)Routing Context: TLV\fI" 2
.ip "" 2
The \fI\)Routing Context\fR field is mandatory in the \fI\)Registration
Result\fR parameter.  The \fI\)Routing Context\fR field contains the TLV
formatted \fI\)Routing Context\fR parameter for the associated \fI\)Routing
Key\fR if the registration was successful.  If the registration was not
successful, it is set to zero (0).
.sh 3 "Deregistration Result"
.pp
The \fI\)Deregistration Result\fR parameter is used to indicate the result of
a successful or unsuccessful deregistration operation for a specific
\fI\)Routing Key\fR.
.lp
The \fI\)Deregistration Result\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0015          |             Length            |
+-------------------------------+-------------------------------+
|                         Routing Context                       |
+---------------------------------------------------------------+
|                      Deregistration Status                    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Deregistration Result\fR parameter can contain the following fields:
.ip "\fB\)Routing Context: TLV\fI" 2
.ip "" 2
The \fI\)Routing Context\fR field is mandatory in the \fI\)Deregistration
Result\fR parameter.  The \fI\)Routing Context\fR field contains the same TLV
formatted \fI\)Routing Context\fR parameter as found in the corresponding
\fI\)Deregistration Request (DEREG REQ)\fR message.
.ip "\fB\)Deregistration Status: TLV\fI" 2
.ip "" 2
The \fI\)Deregistration Status\fR field is mandatory in the
\fI\)Deregistration Result\fR parameter.  The \fI\)Deregistration Status\fR
field indicates the success or reason for failure of the corresponding
deregistration request.  For details on the format of the \fI\)Deregistration
Status\fR parameter, see Section 3.9.13.
.sh 3 "Registration Status"
.pp
The \fI\)Registration Status\fR parameter is used to indicate the success or
failure of a registration operation.
.lp
The \fI\)Registration Status\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0016          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                       Registration Status                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Registration Status\fR parameter can contain the following fields:
.ip "\fB\)Registration Status: 32-bits (unsigned integer)\fI" 2
.ip "" 2
The \fI\)Registration Status\fR field indicates the success or the reason for
failure of a registration request.
.ip "" 2
Its values can be:
.ix +4
.TS
tab(:);
nl.
0:Successfully Registered
1:Error - Unknown
2:Error - Invalid Circuit Identifier
3:Error - Invalid Network Appearance
4:Error - Invalid Routing Key
5:Error - Permission Denied
6:Error - Cannot Support Unique Routing
7:Error - Routing Key not Currently Provisioned
8:Error - Insufficient Resources
9:Error - Unsupported RK parameter Field
10:Error - Unsupported/Invalid Traffic Mode Type
11:Error - Routing Context Registration Refused
.TE
.ix -4
.sh 3 "Deregistration Status"
.pp
The \fI\)Deregistration Status\fR parameter is used to indicate the success or
failure of a deregistration operation.
.lp
The \fI\)Deregistration Status\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0017          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                      Deregistration Status                    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Deregistration Status\fR parameter can contain the following fields:
.ip "\fB\)Deregistration Status: 32-bits (unsigned integer)\fI" 2
.ip "" 2
The \fI\)Deregistration Status\fR field indicates the success or the reason
for failure of a deregistration request.
.ip "" 2
Its values can be:
.ix +4
.TS
tab(:);
nl.
0:Successfully Deregistered
1:Error - Unknown
2:Error - Invalid Routing Context
3:Error - Permission Denied
4:Error - Not Registered
5:Error - ASP Currently Active for Routing Context
.TE
.ix -4
.sh 3 "Local Routing Key Identifier"
.pp
The \fI\)Local Routing Key Identifier\fR parameter is used for correlating the
\fI\)Routing Key\fR parameter in a specific \fI\)Registration Request (REG
REQ)\fR message with the \fI\)Registration Result\fR parameter in the
corresponding \fI\)Registration Response (REG RSP)\fR message.
.lp
The \fI\)Local Routing Key Identifier\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0018          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                  Local Routing Key Identifier                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Local Routing Key Identifier\fR parameter can contain the following
fields:
.ip "\fB\)Local Routing Key Identifier: 32-bits (unsigned integer)\fI" 2
.ip "" 2
The \fI\)Local Routing Key Identifier\fR value is assigned by the ASP and is
used to correlate the response in a \fI\)Registration Response (REG RSP)\fR
message with the original registration request from the \fI\)Registration
Request (REG REQ)\fR message.  The \fI\)Local Routing Key Identifier\fR value
must remain unique until the \fI\)REG RSP\fR message is received.
.sh 2 "ISUA-Specific parameters"
.nr bs 0
.lp
These TLV parameters are specific to the ISUA protocol:
.lp
.ix +4
.(b
.TS
tab(:);
ciss
lb2cb2cb
lcc.
Parameters used in CP Messages
_
Parameter Name:Parameter ID:Section
_
Call Reference:0x0501:3.10.1.1
Call Type:0x0502:3.10.1.2
Call Flags:0x0503:3.10.1.3
Called Party Number:0x0504:3.10.1.4
Subsequent Number:0x0505:3.10.1.5
Reattempt Reason:0x0506:3.10.1.6
Check Result:0x0507:3.10.1.7
Proceeding Flags:0x0508:3.10.1.8
Progress Event:0x0509:3.10.1.9
Progress Flags:0x050A:3.10.1.10
Suspend/Resume Flags:0x050B:3.10.1.11
Failure Reason:0x050C:3.10.1.12
Cause:0x050D:3.10.1.13
Optional Parameters:0x050E:3.10.1.14
_
.TE
.)b
.lp
.ix +4
.(b
.TS
tab(:);
ciss
lb2cb2cb
lcc.
Parameters used in CS Messages
_
Parameter Name:Parameter ID:Section
_
Circuit Status:0x0510:3.10.2.1
_
.TE
.)b
.lp
.ix +4
.(b
.TS
tab(:);
ciss
lb2cb2cb
lcc.
Other Parameters
_
Parameter Name:Parameter ID:Section
_
Circuit Id:0x0520:3.10.3.1
Network Appearance:0x0521:3.10.3.2
Routing Key:0x0522:3.10.3.3
Circuit Range:0x0523:3.10.3.4
Local Point Code:0x0524:3.10.3.5
Remote Point Code:0x0525:3.10.3.5
_
.TE
.)b
.nr bs 1v
.sh 3 "Parameters used in CP Messages"
.sh 4 "Call Reference"
.pp
The \fI\)Call Reference\fR parameter is used in the ISUA Message Header to
identify the call within the Application Server indicated by the \fI\)Routing
Context\fR (also in the ISUA Message Header).
.lp
The \fI\)Call Reference\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0501          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Call Reference                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Call Reference\fR parameter contains the following fields:
.ip "\fB\)Call Reference field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Call Reference\fR field contains an identifier that is used both at
the SG and the ASP to identify a call within an Application Server.  The Call
Reference value must be unique within the scope of a given Application Server
and Routing Context.
.ip "" 2
For a given AS and Routing Context, either the SG or the ASP is responsible
for assigning Call Reference, but not both.
.sh 4 "Call Type"
.lp
The \fI\)Call Type\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0502          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Call Type                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Call Type\fR parameter contains the following fields:
.ip "\fB\)Call Type field: 32-bits (unsigned integer)\fR" 2
.ba +2
.lp
The \fI\)Call Type\fR field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:Speech
1:64 kbit/s unrestricted digital information
2:3.1 kHZ audio
3:64 kbit/s preferred
4:2 x 64 kbit/s unrestricted digital information
5:284 kbit/s unrestricted digital information
6:1536 kbit/s unrestricted digital information
7:1920 kbit/s unrestricted digital information
.TE
.ba -2
.sh 4 "Call Flags"
.lp
The \fI\)Call Flags\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0503          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Call Flags                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Call Flags\fR parameter contains the following fields:
.ip "\fB\)Call Flags field: 32-bits (bit field)\fR" 2
.ba +2
.lp
The \fI\)Call Flags\fR field consists of the following fields:
.ip "\fB\)Satellite Indicator: 2-bits (bits 30-31)\fR" 2
.ip "" 2
The Satellite Indicator field corresponds to the Nature of Address Indicators
of ITU-T ISUP
.[
q763
.]
and indicate the number of satellites present in the ISUP connection.
The Satellite Indicator field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:no satellite in circuit
1:one satellite in circuit
2:two satellites in circuit
.T&
nli.
3:(reserved)
.TE
.ip "\fB\)Continuity Check Indicator: 2-bits (bits 28-29)\fR" 2
.ip "" 2
The Continuity Check Indicator field corresponds to the Nature of Address
Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether a continuity check is required on the circuit, whether a
check has previously been performed, or which a check is not required on the
circuit.
The Continuity Check Indicator field can take on the following
values:
.ix +4
.TS
tab(:);
nl.
0:no continuity check required
1:continuity check performed on previous circuit
2:continuity check required
.T&
nli.
3:(reserved)
.TE
.ip "\fB\)Outgoing Half Echo Control Device: 1-bit (bit 27)\fR" 2
.ip "" 2
The Outgoing Half Echo Control Device field corresponds to the Nature of
Address Indicator of ITU-T ISUP
.[
q763
.]
and indicates whether an outgoing half echo control device is included on the
circuit.
The Outgoing Half Echo Control Device field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:no outgoing half echo control device included
1:outgoing half echo control device included
.TE
.ip "\fB\)International/National: 1-bit (bit 26)\fR" 2
.ip "" 2
The International/National field corresponds to the Forward Call Indicators of
ITU-T ISUP
.[
q763
.]
and indicates whether the call is an International or National call.
The International/National field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:National call
1:International call
.TE
.ip "\fB\)End to End Method: 2-bits (bit 24-25)\fR" 2
.ip "" 2
The End to End Method field corresponds to the Forward Call Indicators of
ITU-T ISUP
.[
q763
.]
and indicates which end to end methods are available.
The End to End Method field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:link by link method only
1:pass along method available
2:SCCP end to end method available
3:both methods available
.TE
.ip "\fB\)Interworking Encountered: 1-bit (bit 23)\fR" 2
.ip "" 2
The Interworking Encountered field corresponds to the Forward Call Indicators
of ITU-T ISUP
.[
q763
.]
and indicates whether interworking was encountered on the call.
The Interworking Encountered field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:no interworking encountered 
1:interworking encountered
.TE
.ip "\fB\)End to End Information Available: 1-bit (bit 22)\fR" 2
.ip "" 2
The End to End Information Available field corresponds to the Forward Call
Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether end to end information is now available.
The End to End Information Available field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:no end to end information available
1:end to end information available
.TE
.ip "\fB\)ISUP All the Way: 1-bit (bit 21)\fR" 2
.ip "" 2
The ISUP All the Way field corresponds to the Forward Call Indicators of the
ITU-T ISUP
.[
q763
.]
and indicates whether ISDN User Part is used all the way.
The ISUP All the Way field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:ISDN User Part not used all the way
1:ISDN User Part used all the way
.TE
.ip "\fB\)Originating Access ISDN: 1-bit (bit 20)\fR" 2
.ip "" 2
The Originating Access ISDN field corresponds to the Forward Call Indicators
of the ITU-T ISUP
.[
q763
.]
and indicates whether the originating access is ISDN.
The Originating Access ISDN field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:originating access is not ISDN
1:originating access is ISDN
.TE
.ip "\fB\)SCCP Methods Available: 2-bits (bit 18-19)\fR" 2
.ip "" 2
The SCCP Methods Available field corresponds to the Forward Call Indicators of
the ITU-T ISUP
.[
q763
.]
and indicates the SCCP method available.
The SCCP Methods Available field can take on the following values:
.ix +4
.TS
tab(:);
nl.
0:no SCCP method available
1:connectionless SCCP method available
2:connection oriented SCCP method available
3:both methods available
.TE
.ba -2
.sh 4 "Called Party Number"
.lp
The \fI\)Called Party Number\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0504          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Called Party Number                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Called Party Number\fR parameter contains the following fields:
.ip "\fB\)Called Party Number field: 32-bits (unsigned integer)\fR" 2
.sh 4 "Subsequent Number"
.lp
The \fI\)Subsequent Number\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0505          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                        Subsequent Number                      /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Subsequent Number\fR parameter contains the following fields:
.ip "\fB\)Subsequent Number field: 32-bits (unsigned integer)\fR" 2
.sh 4 "Reattempt Reason"
.lp
The \fI\)Reattempt Reason\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0506          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Reattempt Reason                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Reattempt Reason\fR parameter contains the following fields:
.ip "\fB\)Reattempt Reason field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Reattempt Reason field indicates the reason that a call reattempt
is indicated.  The Reattempt Reason field can take on one of the following
values:
.ix +4
.TS
tab(:);
nl.
1:dual sizeure
2:reset
3:blocking
4:T24 timeout
5:unexpected message
6:continuity check failure
:all other values reserved
.TE
.ba +2
.lp
The Reattempt Reason values are interpreted as follows:
.lp
The \fI\)"dual sizeure"\fR reason indicates that
.ix +2
the selected circuit was siezed by a controlling exchange during
the initial setup of the call (i.e. before any backward message was received).
.lp
The \fI\)"reset"\fR reason indicates that
.ix +2
the selected circuit was reset during the initial setup of the call (i.e.
before any backward message was received).
.lp
The \fI\)"blocking"\fR reason indicates that
.ix +2
the selected circuit was blocked during the initial setup of the call (i.e.
before any backward message was received).
.lp
The \fI\)"T24 timeout"\fR reason indicates that
.ix +2
continuity check failure occurred due to timeout on the selected circuit.
.lp
The \fI\)"unexpected message"\fR reason indicates that
.ix +2
an unexpected message was received for the call during the initial setup of
the call (i.e. before any backward message was received).
.lp
The \fI\)"continuity check failure"\fR reason indicates that
.ix +2
continuity check failed on the selected circuit.
.ba -2
.sh 4 "Check Result"
.lp
The \fI\)Check Result\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0507          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                          Check Result                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Check Result\fR parameter contains the following fields:
.ip "\fB\)Check Result field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Check Result field indicates the success of failure of the continuity
check.  The Check Result field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:continuity check failed
1:continuity check successful
.TE
.sh 4 "Proceeding Flags"
.lp
The \fI\)Proceeding Flags\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0509          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Proceeding Flags                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
The \fI\)Proceeding Flags\fR parameter contains the following fields:
.ip "\fB\)Proceeding Flags field: 32-bits (bit field)\fR" 2
.ip "" 2
The Proceeding Flags field contains the following bit fields:
.ba +2
.ip "\fB\)Charge: 2-bits (bit 30-31)\fR" 2
.ip "" 2
The Charge field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether the call is to be charged.
The Charge field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
1:charge
2:no charge
.T&
nli.
:all other values reserved
.TE
.ip "\fB\)Free: 2-bits (bit 28-29)\fR" 2
.ip "" 2
The Free field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether the call is subscriber free or connection free.
The Free field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:no indication
1:subscriber free
2:connection free
.T&
nli.
:all other values reserved
.TE
.ip "\fB\)Payphone: 2-bits (bit 26-27)\fR" 2
.ip "" 2
The Payphone field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether the call has terminated to an ordinary subscriber or a pay phone.
The Pay Phone field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
1:ordinary subscriber
2:pay phone
.T&
nli.
:all other values reserved
.TE
.ip "\fB\)End to End Method Available: 2-bits (bit 24-25)\fR" 2
.ip "" 2
The End to End Method Available field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates which end to end methods are available.
The End to End Method Available field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:link by link method available
1:pass along method available
2:SCCP method available
3:all methods available
.TE
.ip "\fB\)Interworking Encountered: 1-bit (bit 23)\fR" 2
.ip "" 2
The Interworking Encountered field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether interworking was encountered on the call.
The Interworking Encountered field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:no interworking encountered
1:interworking encountered
.TE
.ip "\fB\)End to End Information Available: 1-bit (bit 22)\fR" 2
.ip "" 2
The End to End Information Available field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether end to end information is available.
The End to End Information Available field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:no end to end information available
1:end to end information available
.TE
.ip "\fB\)ISUP All the Way: 1-bit (bit 21)\fR" 2
.ip "" 2
The ISUP All the Way field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether ISDN User Part was used all the way.
The ISUP All the Way field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:ISDN user part not used all the way
1:ISDN user part used all the way
.TE
.ip "\fB\)Holding Requested: 1-bit (bit 20)\fR" 2
.ip "" 2
The Holding Requested field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether holding was requested.
The Holding Requested field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:holding not requested
1:holding requested
.TE
.ip "\fB\)Terminating Access ISDN: 1-bit (bit 19)\fR" 2
.ip "" 2
The Terminating Access ISDN field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether the terminating access is ISDN.
The Terminating Access ISDN field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:terminating access not ISDN
1:terminating access ISDN
.TE
.ip "\fB\)Incoming Half Echo Control Device: 1-bit (bit 18)\fR" 2
.ip "" 2
The Incoming Half Echo Control Device field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates whether an incoming half echo control device has been included
on the call.
The Incoming Half Echo Control Device field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:no incoming half echo control device
1:incoming half echo control device
.TE
.ip "\fB\)SCCP Methods Available: 2-bits (bit 16-17)\fR" 2
.ip "" 2
The SCCP Methods Available field corresponds to the Backward Call Indicators of ITU-T ISUP
.[
q763
.]
and indicates the SCCP methods available.
The SCCP Methods Available field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
0:no SCCP method available
1:connectionless SCCP method available
2:connection oriented SCCP method available
3:both SCCP methods available
.TE
.ba -2
.sh 4 "Progress Event"
.lp
The \fI\)Progress Event\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0509          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Progress Event                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Progress Event\fR parameter contains the following fields:
.ip "\fB\)Progress Event field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Progress Event field indicates the progress event associated with the
call.  The Progress Event field can take on one of the following values:
.ix +4
.TS
tab(:);
nl.
1:alerting
2:progress
3:in band information
4:call forwarded on busy
5:call forwarded on no answer
6:call forwarded unconditional
.T&
nli.
:all other values reserved
.TE
.ba +2
.lp
The Progress Event values are interpreted as follows:
.lp
The \fI\)"alerting"\fR event indicates that
.ix +2
the called party is being alerted.  This event is indicated only if a
\fI\)CPRO\fR message has already been received.
.lp
The \fI\)"progress"\fR event indicates that
.ix +2
the call is progressing with the specified optional parameters.
.lp
The \fI\)"in band information"\fR event
.ix +2
is indicated only via the \fI\)CIBI\fR message and \fB\)MUST NOT\fR be
indicated in the \fI\)CPRG\fR message.
.lp
The \fI\)"call forwarded on busy"\fR event indicates that
.ix +2
the call has been forwarded on busy and the optional parameters (if any) in
the message contain the attributes of the forwarding (e.g. redirecting
number).
.lp
The \fI\)"call forwarded on no answer"\fR event indicates that
.ix +2
the call has been forwarded on no answer and the optional parameters (if any)
in the message contain the attributes of the forwarding (e.g. redirecting
number).
.lp
The \fI\)"call forwarded unconditional"\fR event indicates that
.ix +2
the call has been forwarded unconditionally and the optional parameters (if
any) in the message contain the attributes of the forwarding (e.g. redirecting
number).
.ba -2
.sh 4 "Progress Flags"
.lp
The \fI\)Progress Flags\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050A          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Progress Flags                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Progress Flags\fR parameter contains the following fields:
.ip "\fB\)Progress Flags field: 32-bits (bit field)\fR" 2
.ip "" 2
The Progress Flags field contains the following bit fields:
.ba +2
.ip "\fB\)Presentation Restricted: 1-bit (bit 31)\fR" 2
.ip "" 2
The Presentation Restricted field indicates whether the event (and any
associated optional parameters, such as redirecting number) is presentation
restricted.  The Presentation Restricted field can take on the following
values:
.ix +4
.TS
tab(:);
nl.
0:event presentation allowed
1:event presentation restricted
.TE
.ba -2
.sh 4 "Suspend/Resume Flags"
.lp
The \fI\)Suspend/Resume Flags\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050B          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                      Suspend/Resume Flags                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Suspend/Resume Flags\fR parameter contains the following fields:
.ip "\fB\)Suspend/Resume Flags field: 32-bits (bit field)\fR" 2
.ip "" 2
The Suspend/Resume flags field contains the following bit fields:
.ba +2
.ip "\fB\)Network Initiated: 1-bit (bit 31)\fR" 2
.ip "" 2
The Network Initiated field indicates whether the suspend or resume operation
was user or network initiated.  The Network Initiated field can take on the
following values:
.ix +4
.TS
tab(:);
nl.
0:user initiated
1:network initiated
.TE
.ba -2
.sh 4 "Failure Reason"
.lp
The \fI\)Failure Reason\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050C          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                         Failure Reason                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Failure Reason\fR parameter contains the following fields:
.ip "\fB\)Failure Reason field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Failure Reason indicates the reason for call setup failure and can take on
the following values:
.ix +4
.TS
tab(:);
nl.
1:continuity check failure
2:received release complete
3:blocking
4:T6 timeout
5:T7 timeout
6:T8 timeout
7:T9 timeout
8:T35 timeout
9:T38 timeout
.T&
nli.
:all other values reserved
.TE
.ba +2
.lp
The values of the Failure Reason field are interpreted as follows:
.lp
The "continuity check failure" reason indicates that
.ix +2
continuity check on the circuit failed.
The applies to incoming calls only.
.lp
The "received release complete" reason indicates that
.ix +2
the selected circuit was not completely released by the distant end.
The applies to incoming calls only.
.lp
The "blocking" reason indicates that
.ix +2
the circuit was blocked during call setup.
The applies to incoming calls only.
.lp
The "T6 timeout" reason indicates that
.ix +2
the call was suspended beyond the allowable period.
The applies to all established calls.
.lp
The "T7 timeout" reason indicates that
.ix +2
there was no response to the call setup request.
The applies to outgoing calls only.
.lp
The "T8 timeout" reason indicates that
.ix +2
the call failed waiting for a continuity check report from the distant end.
The applies to incoming calls only.
.lp
The "T9 timeout" reason indicates that
.ix +2
the call failed while waiting for the distant end to answer.
The applies to outgoing calls only.
.lp
The "T35 timeout" reason indicates that
.ix +2
additional information (digits) were not received from the caller within a
sufficient period.
The applies to incoming calls only.
.lp
The "T38 timeout" reason indicates that
.ix +2
the call was suspended beyond the allowable period.
The applies to all established calls.
.ba -2
.sh 4 "Cause"
.lp
The \fI\)Cause\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050D          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                             Cause                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Cause\fR parameter contains the following fields:
.ip "\fB\)Cause field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Cause field indicates the reason for call release and can take on the
following values:
.TS H
tab(:);
nlblb
nll.
:ITU-T:ANSI
_
.TH
1:unalloc. no.
2:no route to transit ntwk
3:no route to dest
4:send special info tone
5:misdialled trunk prefix
8:preemption
9:preemption cc't reserved
16:normal call clearing
17:user busy
18:no user responding
19:no answer
20:subscriber absent
21:call rejected
22:no. changed
23:redirect:unalloc. dest no.
24:\R\-:unknown business group
25:\R\-:exchange routing error
26:\R\-:misrouted call to ported no.
27:out of order:LNP QoR no. not found
28:address incomplete
29:facility rejected
31:normal unspecified
34:no cc't available
38:ntwk out of order
41:temporary failure
42:switching equip cong
43:access info discarded
44:cc't unavailable
45:\R\-:resource preemption
46:precedence call blocked
47:resource unavailable
50:not subscribed
51:\R\-:call type incompatible
53:og call barred in CUG
54:\R\-:group restrictions
55:ic call barred in CUG
57:bearer cap not authorized
58:bearer cap not available
62:inconsistency
63:service opt not available
65:bearer cap not impl.
69:facility not impl.
70:restricted bearer cap only
79:service opt not impl.
87:user not member of CUG
88:incompatible dest
90:non-existent CUG
91:invalid transit ntwk selection
95:invalid message
97:message type not impl.
99:parameter not impl.
102:recovery on timer expiry
103:parameter passed on
110:message discarded
111:protocol error
127:interworking
.T&
nlis.
:all other values reserved
_
.TE
.sh 4 "Optional Parameters"
.lp
The \fI\)Optional Parameters\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x050E          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                                                               \\
/                       Optional Parameters                     /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Optional Parameters\fR parameter contains the following fields:
.ip "\fB\)Optional Parameters field: (ISUP Optional Parameters)\fR" 2
.ip "" 2
The Optional Parameters field is formatted according to the format of the
ISUP Optional Parameters Part
.[
q763
.]
.[
t1.113
.]
of the ISUP message, starting with the first byte of the first optional
parameter in the ISUP Optional Parameters Part of the message and continuing
through and including the ISUP End of Optional Parameters parameter.
.[
q763
.]
.[
t1.113
.]
.ip "" 2
The ISUP Optional Parameters from the ISUP message \fB\)MUST\fR be placed
transparently in this fashion into the ISUA \fI\)Optional Parameters\fR
parameter.
.sh 3 "Parameters used in CS Messages"
.pp
The sections (below) provide the format of the parameters used in ISUA Circuit
Supervision (CS) messages.
.sh 4 "Circuit Status"
.pp
The \fI\)Circuit Status\fR parameter indicates the state of a circuit.  The
state of a circuit is maintained and obtained by the SG and communicated to
the ASP.
.lp
The \fI\)Circuit Status\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0510          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|         Circuit Id #1         |        Circuit State #1       |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                               .                               \\
/                               .                               /
\\                               .                               \\
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|         Circuit Id #n         |        Circuit State #n       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Circuit Status\fR parameter contains (a list of) the following
fields:
.ip "\fB\)Circuit Id field: 16 bits (unsigned integer)\fR" 2
.ip "" 2
The Circuit Id field  contains the circuit identifier for one circuit.  This
is the least significant bit aligned Circuit Identification Code (CIC)
.[
q763
.]
.[
t1.113
.]
associated with the circuit.  Unused bits are coded zero (0).
.ba +2
.lp
For example, a 12-bit Circuit Identification Code (CIC) is formatted into the
Circuit Id field as follows:
.(b
.nf
.sz -2
\fC\
 0                   1           
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0|          CIC          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        |MSB-----------------LSB|
.)b
.ba -2
.ip "\fB\)Circuit State field: 32-bits (integer)\fR" 2
.ip "" 2
The Circuit State field contains the
least significant bit aligned
Circuit State Indicator (CSI)
.[
q763
.]
.[
t1.113
.]
indicating the status of the circuit.  Unused bits are coded zero (0).
.ba +2
.lp
For example, the ITU-T Circuit State Indicator (CSI) is formatted into the
Circuit State field as follows:
.(b
.nf
.sz -2
\fC\
 1       2                   3
 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0 0 0 0 0 0 0|    CSI    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                    |MSB-----LSB|
.)b
.lp
The ITU-T Circuit State Indicator (CSI)
.[
q763
.]
can take on the following values:
.ix +4
.TS H
box tab(:);
cb|cbs|cbs
cb|cb|cb|cb|cb.
:State:Blocking State
CSI:_:_:_:_
:Maint:Call Proc:Hardware:Maint
_
.TH
.T&
c|c|c|c|c.
XX 00 00:transient:\-:\-:\-
_:_:
XX 00 11:unequipped:
_
00 01 00:equipped:ic busy:active:active
00 01 01::::local
00 01 10::::remote
00 01 11::::both
::_::_
00 10 00::og busy::active
00 10 01::::local
00 10 10::::remote
00 10 11::::both
::_::_
00 11 00::idle::active
00 11 01::::local
00 11 10::::remote
00 11 11::::both
:::_:_
01 11 00:::local:active
01 11 01::::local
01 11 10::::remote
01 11 11::::both
:::_:_
10 11 00:::remote:active
10 11 01::::local
10 11 10::::remote
10 11 11::::both
:::_:_
11 11 00:::both:active
11 11 01::::local
11 11 10::::remote
11 11 11::::both
.TE
.ba -2
.sh 3 "Other Parameters"
.sh 4 "Circuit Id"
.pp
The \fI\)Circuit Id\fR parameter is used in the ISUA CP and CS Message Header
to identify one or more circuits within the Application Server indicated by
the \fI\)Routing Context\fR parameter (in the ISUA Message Header).
.lp
The \fI\)Circuit Id\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0520          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                           Circuit Id                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.fi
.)c
.)b
.lp
The \fI\)Circuit Id\fR parameter can contain the following fields:
.ip "\fB\)Circuit Id field: 32-bit (unsigned integer)\fR" 2
.ip "" 2
The Circuit Id field contains the circuit identifier for the circuit within an
Application Server that the sending ASP ro SGP is configured or registered to
control and manage.  This is the least significant bit aligned Circuit
Identification Code (CIC)
.[
q763
.]
.[
t1.113
.]
associated with the circuit.  Unused bits are coded zero (0).
.ba +2
.lp
For example, a 12-bit Circuit Identification Code (CIC) is formatted into the
Circuit Id field as follows:
.(b
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0|          CIC          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                        |MSB-----------------LSB|
.)b
.ba -2
a list of one or more 32-bit unsigned integers
indexing the circuits within an Application Server that the sending ASP is
configured or registered to control and manage.
.pp
If the \fI\)Circuit Id\fR parameter is present, it \fB\)SHOULD\fR be the first
parameter in the message following the \fI\)Routing Context\fR as it defines
the format and/or interpretation of the parameters which follow.
.sh 4 "Network Appearance"
.pp
The \fI\)Network Appearance\fR parameter is used as a parameter in the
\fI\)Registration Request (REG REQ)\fR message to indicate the network context
in which the remainder of the Routing Key parameters are to be interpreted.
The \fI\)Network Appearance\fR parameter is also used in the \fI\)Error
(ERR)\fR message in response to a \fI\)REG REQ\fR message when a received
Network Appearance parameter contains an invalid value.
.lp
The \fI\)Network Appearance\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0521          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                        Network Appearance                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Network Appearance\fR parameter can contain the following
fields:
.ip "\fB\)Network Appearance field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The Network Appearance field identifies the SS7 network context for the
Routing Key.  The Network Appearance value is of local significance
only, coordinated between the SG and ASP.  Therefore, in the case where
the ASP is connected to more than one SG, the same SS7 Network context
may be identified by a different Network Appearance value depending upon
to which SG the ASP is registering.
.ip "" 2
In the Routing Key, the Network Appearance identifies the SS7 Point Code
format used, and the ISUP and Call Control protocol (type, variant and version)
used within the specific SS7 network.
.sh 4 "Routing Key"
.pp
The \fI\)Routing Key\fR parameter is used in the \fI\)REG REQ\fR message to
list and identify the Routing Keys that are being registered.
.lp
The \fI\)Routing Key\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0522          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                  Local Routing Key Identifier                 |
+- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
\\                                                               \\
/                        Key parameter(s)                       /
\\                                                               \\
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Routing Key\fR parameter can contain the following fields:
.ip "\fB\)Local Routing Key Identifier: TLV\fR" 2
.ip "" 2
The \fI\)Local Routing Key Identifier\fR parameter is used to uniquely
identify the registration request.  The identifier value is assigned by the
ASP and is used to correlate the response in a \fI\)REG RSP\fR message with
the original registration request.  The identifier value must remain unique
until the \fI\)REG RSP\fR (or \fI\)ERR\fR) message is received.
.ip "\fB\)Key field: variable (TLV parameters)\fR" 2
.ip "" 2
The key field can contain the following parameters:
.ix +4
.TS
tab(:);
lbw(2.5i)ss
lilc.
Parameters
_
Traffic Mode Type:Optional:
Network Appearance:Conditional:*1
Local Point Code:Mandatory:
Remote Point Code:Mandatory:
Circuit Id:Conditional:*2
Circuit Range:Conditional:*2
.TE
.ba +2
.ip "Note 1:" 8
The Network Appearance parameter \fB\)MUST\fR be included in the Routing Key
when the ASP is able to register in multiple SS7 Network contexts.
.ip "Note 2:" 8
One of the \fI\)Circuit Id\fR or \fI\)Circuit Range\fR parameters \fB\)MUST\fR
be present in the \fI\)Key\fR parameters.
.ba -2
.sh 4 "Circuit Range"
.lp
The \fI\)Circuit Range\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0523          |            Length             |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|      Circuit Id Beg #1        |       Circuit Id End #1       |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
\\                               .                               \\
/                               .                               /
\\                               .                               \\
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|      Circuit Id Beg #n        |       Circuit Id End #n       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Circuit Range\fR parameter can contain (a list of) the following fields:
.ip "\fB\)Circuit Id Beg field: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The Circuit Id Beg field contains the circuit identifier for the circuit at
the beginning of the range (inclusive).  This is the least significant bit aligned Circuit
Identification Code (CIC)
.[
q763
.]
.[
t1.113
.]
associated with the first circuit in the range.  Unused bits are coded zero (0).
The first and last circuit in the range \fB\)MAY\fR be the same circuit.
.ba +2
.lp
For example, a 12-bit Circuit Identification Code (CIC) is formatted into the
Circuit Id Beg field as follows:
.(b
.nf
.sz -2
\fC\
 0                   1           
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0|          CIC          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        |MSB-----------------LSB|
.)b
.ba -2
.ip "\fB\)Circuit Id End field: 16-bits (unsigned integer)\fR" 2
.ip "" 2
The Circuit Id End field contains the circuit identifier for the circuit at
the end of the range (inclusive).  This is the least significant bit aligned Circuit
Identification Code (CIC)
.[
q763
.]
.[
t1.113
.]
associated with the last circuit in the range.  Unused bits are coded zero (0).
The first and last circuit in the range \fB\)MAY\fR be the same circuit.
.ba +2
.lp
For example, a 12-bit Circuit Identification Code (CIC) is formatted into the
Circuit Id End field as follows:
.(b
.nf
.sz -2
\fC\
 1       2                   3
 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0|          CIC          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        |MSB-----------------LSB|
.)b
.ba -2
.sh 4 "Local Point Code"
.pp
The \fI\)Local Point Code\fR parameter appears in the \fI\)Routing Key\fR
parameter in the \fI\)REG REQ\fR message.  It is used in conjunction with an
implied or specified \fI\)Network Appearance\fR parameter which also appears
in the \fI\)Routing Key\fR to identify the local ISUP switch for which an ASP
is registering.
.lp
The \fI\)Local Point Code\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0524          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                          Point Code                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Local Point Code\fR parameters contains the following fields:
.ip "\fB\)Point Code field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Point Code\fR field contains an SS7 signalling point code.  Point
codes that are less than 32-bits are padded on the left to the 32-bit
boundary.  The following examples show ANSI and ITU-T point codes:
.ba +2
.ip "\fI\)ANSI 24-bit Point Code:\fR" 0
.(b L
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0 0 0 0 0|    Network    |    Cluster    |     Member    |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                |MSB-----------------------------------------LSB|
.)b
.ip "\fI\)ITU-T, ETSI 14-bit Point Code:\fR" 0
.(b L
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0|Zone |     Region    | SP  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                    |MSB---------------------LSB|
.)b
.ba -2
.sh 4 "Remote Point Code"
.pp
The \fI\)Remote Point Code\fR parameter appears in the \fI\)Routing Key\fR
parameter in the \fI\)REG REQ\fR message.  It is used in conjunction with an
implied or specified \fI\)Network Appearance\fR parameter which also appears
in the \fI\)Routing Key\fR to identify the ISUP switch at the remote end of
the ISUP circuits for which an ASP is registering.
.lp
The \fI\)Remote Point Code\fR parameter is formatted as follows:
.(b
.(c
.nf
.sz -2
\fC\
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         Tag = 0x0525          |            Length = 8         |
+- - - - - - - - - - - - - - - -+- - - - - - - - - - - - - - - -+
|                          Point Code                           |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.sz +2
.)c
.)b
.lp
The \fI\)Remote Point Code\fR parameters contains the following fields:
.ip "\fB\)Point Code field: 32-bits (unsigned integer)\fR" 2
.ip "" 2
The \fI\)Point Code\fR field contains an SS7 signalling point code.  Point
codes that are less than 32-bits are padded on the left to the 32-bit
boundary.
For examples of point codes, see the \fI\)Local Point Code\fR parameter
description.
.#e
.sh 1 "Procedures"
.pp
The ISUA layer needs to respond to various local primitives it receives from
other layers as well as the messages that it receives from the peer ISUA
layer.  This section describes the ISUA procedures in response to these
events.
.sh 2 "Procedures to Support Call Control"
.sh 3 "Receipt of Primitives from Call Control"
.pp
Upon receiving a ISUP request or response primitive from the upper layer at an
ASP or IPSP, the ISUA layer sends a corresponding ISUA Call Processing (CP)
message (see Section 3) to its ISUA peer.  The ISUA peer receiving the CP
message delivers the corresponding ISUP primitive to Call Control at the IPSP
or Nodal Interworking Function at the SG as illustrated in \fI\)\*(&f\n(&n\fR.
The mapping of ISUP primitives to ISUA CP Messages is listed in \fI\)Table
2\fR (see Section 1.6.1).
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig4.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
  _______________         _______       _______         _______
 |               |       |       |     |       |       |       |
 |    Nodal      |       |       |     |       |       |       |
 | Interworking  |       I   CC  |     I   CC  |       |   CC  |
 |   Function    |       |       |     |       |       |       |
 |  ___________  |       |_______|     |_______|       |_______|
 | |    ___    | |         |   ^         |   ^           |   ^
 | |   |   |   | |         |   |         |   |           |   |
 |_v___|___v___|_|         |   |         |   |           |   |
   |   ^   |   ^           |   |         |   |           |   |
   |   |   |   | Call Cntl |   |         |   | Call Cntl |   |
 - + - + - + - + - - - - - + - + - - - - + - + - - - - - + - + - -
   |   |   |   |  Boundary |   |         |   |  Boundary |   |
  _v___|_ _v___|_         _v___|_       _v___|_         _v___|_
 |       |       |       |       |     |       |       |       |
 |       |       |       |       |     |       |       |       |
 |  ISUP |  ISUA |       |  ISUA |     |  ISUA |       |  ISUA |
 |       |       |       |       |     |       |       |       |
 |_______|_______|       |_______|     |_______|       |_______|
 |       | |   ^           |   ^         |   ^           |   ^
 |       | |   |           |   |         |   |           |   |
 |       | |   |    _      |   |         |   |    _      |   |
 |  SS7  | |   |___/_\\_____|   |         |   |____/_\\____|   |
 |       | |______|___|________|         |_______|___|_______|
 |///////|         \\_/                            \\_/
 |       |         /                              /
 |       |        /                              /
             SCTP Association               SCTP Association
                                                                        
 \\______  ______/        \\___  ___/    \\___  ___/     \\___  ___/
        \\/                   \\/            \\/             \\/
        SG                    ASP         IPSP           IPSP
.)c
.\}
.#f "ISUA Layer Model"
.)b
.sh 3 "Receipt of Primitives from ISUP"
.pp
Upon receiving a ISUP indication or confirmation primitive from ISUP at an SG,
the Nodal Interworking Function passes the primitive to ISUA.  The ISUA layer
sends a corresponding ISUA Call Processing (CP) message (see Section 3) to its
ISUA peer at the ASP.
.pp
The ISUA peer receiving the CP message delivers the corresponding ISUP
primitive to Call Control at the ASP as illustrated in \fI\)\*(&f\n(&n\fR.
The mapping of ISUP primitives to ISUA CP Messages is listed in \fI\)Table
2\fR (see Section 1.6.1).
.pp
The ISUA Circuit Mapping Function (see Section 1.5.1.4)
.pp
For SETUP indications, the ISUA Circuit Mapping Function (CMF) determines the
Application Server (AS) based on comparing the circuit information in the
primitive with a provisioned Routing Key.
.pp
From the list of ASPs within an AS table, an ASP in the ASP-ACTIVE state is
selected and a \fI\)CSET\fR message is constructed and issued on the
corresponding SCTP association.  The ISUA at the SG is also responsible for
assigning and managing a Circuit Identifier which is sent to the ASP in the
\fI\)CSET\fR message to identify the newly created call to the ASP.
Information associated with the dialogue is stored in the SG in an
implementation dependent manner; however, the SG must be capable of
associating further ISUA messages with the correct Dialogue at the SG.  The SG
will have to access this stored information to continue processing the
dialogue.
.pp
The ISUA Circuit Mapping Function (CMF) determines the Application Server (AS)
based on comparing the information in the primitive with a provisioned Routing
Key.
.pp
.sh 4 "Receipt of Management Primitives from ISUP"
.pp
When ISUP Circuit Management indications are received (RESET, BLOCKING,
UNBLOCKING, CCT GROUP QUERY), ISUP Management determines whether there are
concerned local Call Control.  When these local Call Control are in fact
Application Servers, serviced by ASPs, ISUA circuit supervision is
transparently informed with the RESET, BLOCKING, UNBLOCKING and CCT GROUP
QUERY indication primitive upon which it formats and transfers the applicable
CS message (\fI\)CRES\fR, \fI\)CBLO\fR, \fI\)CUBL\fR or \fI\)CQRY\fR) to the
list of concerned ASPs.
.pp
The ISUA message distribution function determines the Application Server (AS)
based on comparing the information in the ISUP primitive with a provisioned
Routing Key.
.pp
From the list of ASPs within the AS table, an ASP in the ASP-ACTIVE state is
selected and Call Processing (CP) messages are constructed and issued on the
corresponding SCTP association.  If more than one ASP is in the ASP-ACTIVE
state (i.e., traffic is to be load-shared across more than one ASP), one of
the ASPs in the ASP-ACTIVE state is selected from the list.  (If the ASPs are
in Broadcast Mode, all active ASPs will be selected and the message sent to
each of the active ASPs.)  The selection algorithm is implementation dependent
but could, for example, be round robin or based on the SLS.  The appropriate
selection algorithm must be chosen carefully as it is dependent on application
assumptions and understanding of the degree of state coordination between the
ASP-ACTIVE ASPs in the AS.
.pp
In addition, the message needs to be sent on the appropriate SCTP stream,
again taking care to meet the message sequencing needs of the signalling
application.  Call Processing (CP) messages \fB\)SHOULD\fR be sent on an SCTP
stream other than stream `0'.
.pp
When there is no Routing Key match, or only a partial match, for an incoming
SS7 message, a default treatment \fB\)MAY\fR be specified.  Possible solutions
are to provide a default Application Server at the SGP that directs all
unallocated traffic to a (set of) default ASP(s), or to drop the message and
provide a notification to Layer Management in an M-ERROR indication primitive.
The treatment of unallocated traffic is implementation dependent.
.sh 3 "Receipt of Primitive from the Layer Management"
.pp
On receiving primitives from the local Layer Management, the ISUA layer will
take the requested action and provide an appropriate response primitive to
Layer Management.
.pp
An M-SCTP_ESTABLISH request primitive from Layer Management at an ASP or IPSP
will initiate the establishment of an SCTP association.  The ISUA layer will
attempt to establish an SCTP association with the remote ISUA peer by sending
an SCTP-ASSOCIATE primitive to the local SCTP layer.
.pp
When an SCTP association has been successfully established, the SCTP will send
an SCTP-COMMUNICATION_UP notification primitive to the local ISUA layer.  At
the SGP or IPSP that initiated the request, the ISUA layer will send an
M-SCTP_ESTABLISH confirm primitive to Layer Management when the association
setup is complete.  At the peer ISUA layer, an M-SCTP_ESTABLISH indication
primitive is sent to Layer Management upon successful completion of an
incoming SCTP association setup.
.pp
An M-SCTP_RELEASE request primitive from Layer Management initiates the
shutdown of an SCTP association.  The ISUA layer accomplishes a graceful
shutdown of the SCTP association by sending an SCTP-SHUTDOWN primitive to the
SCTP layer.
.pp
When the graceful shutdown of the SCTP association has been accomplished, the
SCTP layer returns an SCTP-SHUTDOWN_COMPLETE notification primitive to the
local ISUA layer.  At the ISUA Layer that initiated the request, the ISUA
layer will send an M-SCTP_RELEASE confirm primitive to Layer Management when
the association shutdown is complete.  At the peer ISUA Layer, an
M-SCTP_RELEASE indication primitive is sent to Layer Management upon abort or
successful shutdown of an SCTP association.
.pp
An M-SCTP_STATUS request primitive supports a Layer Management query of the
local status of a particular SCTP association.  The ISUA layer simply maps the
M-SCTP_STATUS request primitive to an SCTP-STATUS primitive to the SCTP layer.
When the SCTP responds, the ISUA layer maps the association status information
to an M-SCTP_STATUS confirm primitive.  No peer protocol is invoked.
.pp
Similar LM-to-ISUA-to-SCTP and SCTP-to-ISUA-to-LM primitive mappings can be
described for the various other SCTP Upper Layer primitives in RFC 2960 [2960]
such as INITIALIZE, SET PRIMARY, CHANGE HEARTBEAT, REQUEST HEARTBEAT, GET SRTT
REPORT, SET FAILURE THRESHOLD, SET PROTOCOL PARAMETERS, DESTROY SCTP INSTANCE,
SEND FAILURE, AND NETWORK STATUS CHANGE.  Alternatively, these SCTP Upper
Layer primitives (and Status as well) can be considered for modeling purposes
as a Layer Management interaction directly with the SCTP Layer.
.pp
M-NOTIFY indication and M-ERROR indication primitives indicate to Layer
Management the notification or error information contained in a received ISUA
\fI\)Notify (NTFY)\fR or \fI\)Error (ERR)\fR message respectively.  These
indications can also be generated based on local ISUA events.
.pp
An M-ASP_STATUS request primitive supports a Layer Management query of the
status of a particular local or remote ASP.  The ISUA layer responds with the
status in an M-ASP_STATUS confirm primitive.  No ISUA peer protocol is
invoked.  An M-AS_STATUS request supports a Layer Management query of the
status of a particular AS.  The ISUA responds with an M-AS_STATUS confirm
primitive.  No ISUA peer protocol is invoked.
.pp
M-ASP_UP request, M-ASP_DOWN request, M-ASP_ACTIVE request and M- ASP_INACTIVE
request primitives allow Layer Management at an ASP to initiate state changes.
Upon successful completion, a corresponding confirm primitive is provided by
the ISUA layer to Layer Management.  If an invocation is unsuccessful, an
Error indication primitive is provided in the primitive.  These requests
result in outgoing \fI\)ASP Up (ASPUP)\fR, \fI\)ASP Down (ASPDN)\fR, \fI\)ASP
Active (ASPAC)\fR and \fI\)ASP Inactive (ASPIA)\fR messages to the remote ISUA
peer at an SGP or IPSP.
.sh 2 "Procedures to Support the Management of SCTP Associations"
.sh 3 "Receipt of ISUA Peer Management Messages"
.pp
Upon successful state changes resulting from reception of \fI\)ASP Up
(ASPUP)\fR, \fI\)ASP Down (ASPDN)\fR, \fI\)ASP Active (ASPAC)\fR and \fI\)ASP
Inactive (ASPIA)\fR messages from a peer ISUA, the ISUA layer \fB\)MAY\fR
invoke corresponding M-ASP_UP, M-ASP_DOWN, M-ASP_ACTIVE and M-ASP_INACTIVE,
M-AS_ACTIVE, M-AS_INACTIVE, and M-AS_DOWN indication primitives to the local
Layer Management.
.pp
M-NOTIFY indication and M-ERROR indication primitives indicate to Layer
Management the notification or error information contained in a received ISUA
\fI\)Notify (NTFY)\fR or \fI\)Error (ERR)\fR message.  These indications can
also be generated based on local ISUA events.
.pp
All MGMT, ASPSM, ASPTM and RKM messages, except \fI\)BEAT\fR, \fI\)BEAT ACK\fR
and \fI\)NTFY\fR, \fB\)SHOULD\fR be sent with sequenced delivery to ensure
ordering.  All MGMT, ASPSM and RKM messages, with the exception of
\fI\)BEAT\fR, \fI\)BEAT ACK\fR and \fI\)NTFY\fR messages \fB\)MUST\fR be sent
on SCTP stream '0'.  ASPTM messages \fB\)MAY\fR be sent on one of the streams
used to carry data traffic related to the Routing Context(s), to minimize
possible message loss.  \fI\)BEAT\fR, \fI\)BEAT ACK\fR, and \fI\)NTFY\fR
messages \fB\)MAY\fR be sent using out-of-order delivery, and \fB\)MAY\fR be
sent on any stream.
.sh 2 "AS and ASP State Maintenance"
.pp
The ISUA layer on the SGP maintains the state of each remote ASP, in each
Application Server that the ASP is configured to receive traffic, as input to
the ISUA message distribution function.  Similarly, where IPSPs use ISUA in a
point-to-point fashion, the ISUA layer in an IPSP maintains the state of
remote IPSPs.
.pp
Two IPSP models are defined with regards to the number of messages that are
needed to an IPSP state change.  They are defined as follows:
.np
IPSP Single Exchange (SP) model.  Only a single exchange of ASPTM or ASPSM
messages is needed to change the IPSP state.  This means that a request from
one end and an acknowledgment from the other will be enough.
.\"This configuration requires static RK configuration.
.np
IPSP Double Exchange (DE) model.  Both IPSPs have to send request messages and
both IPSPs have to acknowledge the request messages from the other end.  This
results in a double exchange of ASPTM and ASPSM messages, one from each end.
.\"This configuration supports dynamic routing key configuration by using RKM
.\"messages in the same way as ASP-SGP scenario.
.pp
To ensure interoperability, a ISUA implementation supporting IPSP communication
\fB\)MUST\fR support the IPSP SE model and \fB\)MAY\fR implement the IPSP DE
model.
.pp
In section 4.3.1, only the SGP-ASP and IPSP SE scenarios are described.  For
the IPSP DE model, both IPSPs \fB\)MUST\fR follow the SGP side of the SGP-ASP
procedures.
.pp
In section 4.3.2, only the SGP-ASP scenario is described.  All of the
procedures referring to an AS served by ASPs are also applicable to AS server
by IPSPs.
.pp
In section 4.3.3, only the Management procedures for the SGP-ASP scenario are
described.  The corresponding Management procedures for IPSPs are directly
inferred.
.pp
The remaining sections contain specific \fI\)IPSP Considerations\fR
subsections.
.sh 3 "ASP/IPSP States"
.pp
The state of each remote ASP/IPSP, in each AS that it is configured to operate, is
maintained in the ISUA layer (i.e. in the SGP or peer IPSP, respectively).  The
state of a particular ASP/IPSP in a particular AS changes due to events.  The
events include:
.bu
reception of messages from the peer ISUA layer at the ASP/IPSP;
.bu
reception of some messages from the peer ISUA layer at other ASPs/IPSPs in the
AS (e.g, ASP Active message indicating "Override");
.bu
reception of indications from the SCTP layer; or,
.bu
Local Management intervention.
.(z
.ie '\*(.T'ps' \{\
.so isua-02.fig5.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
                                   +--------------+
                                   |              |
            +----------------------|  ASP-ACTIVE  |
            |      Other   +-------|              |
            |ASP/IPSP in AS|       +--------------+
            |   Overrides  |           ^     |
            |              |    ASPAC/ |     | ASPIA/
            |              |[ASPAC-Ack]|     |[ASPIA Ack]
            |              |           |     v
            |              |       +--------------+
            |              |       |              |
            |              +------>| ASP-INACTIVE |
            |                      +--------------+
            |                          ^     |
     ASPDN/ |                          |     | ASPDN/
[ASPDN-Ack/]|                   ASPUP/ |     |[ASPDN-Ack/]
  SCTP CDI/ |              [ASPUP Ack] |     | SCTP CDI/
  SCTP RI   |                          |     v SCTP RI
            |                      +--------------+
            |                      |              |
            +--------------------->|   ASP-DOWN   |
                                   |              |
                                   +--------------+
.sz +2
.)c
.\}
.(q
The transitions in brackets are just valid for the IPSP SE model communication
while while the rest are valid for both ASPs and IPSPs.
.)q
.#f "ASP State Transition Diagram (Per AS)"
.)z
.pp
The ASP/IPSP state transition diagram is shown in \fI\*(&f\n(&p\fR.  The possible
states of an ASP/IPSP are:
.ip "ASP-DOWN:" 14
The remote ISUA peer at the ASP/IPSP is unavailable or the related SCTP association
is down.  Initially all ASPs/IPSPs will be in this state.  An ASP/IPSP in this state
\fB\)SHOULD NOT\fR be sent any ISUA messages, with the exception of
\fI\)Heartbeat (BEAT)\fR, \fI\)ASP Down Ack (ASPDN ACK)\fR and \fI\)Error
(ERR)\fR messages.
.ip "ASP-INACTIVE:" 14
The remote ISUA peer at the ASP/IPSP is available (and the related SCTP association
is up) but application traffic is stopped.  In this state, the ASP/IPSP \fB\)SHOULD
NOT\fR be sent any CP or CS messages for the AS for which the ASP/IPSP is
inactive.
.ip "ASP-ACTIVE:" 14
The remote ISUA peer at the ASP is available and application traffic is active
(for a particular Routing Context or set of Routing Contexts).
.ip "SCTP CDI:" 14
The SCTP CDI denotes the local SCTP layer's Communication Down Indication to
the Upper Layer Protocol (ISUA) on an SGP.  The local SCTP layer will send
this indication when it detects the loss of connectivity to the ASPs peer SCTP
layer.  SCTP CDI is understood as either a SHUTDOWN_COMPLETE notification or
COMMUNICATION_LOST notification from the SCTP layer.
.ip "SCTP RI:" 14
The local SCTP layer's Restart indication to the upper layer protocol (ISUA)
on an SG.  The local SCTP will send this indication when it detects a restart
from the ASPs peer SCTP layer.
.sh 3 "AS States"
.pp
The state of the AS is maintained in the ISUA layer on the SGP.  The state of
an AS changes due to events.  These events include:
.bu
ASP state transitions
.bu
Recovery timer triggers
.pp
The possible states of an AS are:
.ip "AS-DOWN:" 14
The Application Server is unavailable.  This state implies that all related
ASPs are in the ASP-DOWN state for this AS.  Initially the AS will be in this
state.  An Application Server is in the AS-DOWN state when it is removed from
a configuration.
.ip "AS-INACTIVE:" 14
The Application Server is available but no application traffic is active
(i.e., one or more related ASPs are in the ASP-INACTIVE state, but none in the
ASP-ACTIVE state).  The recovery timer T(r) is not running or has expired.
.ip "AS-ACTIVE:" 14
The Application Server is available and application traffic is active.  This
state implies that at least one ASP is in the ASP-ACTIVE state.
.ip "AS-PENDING:" 14
An active ASP has transitioned to ASP-INACTIVE or ASP-DOWN and it was the last
remaining active ASP in the AS.  A recovery timer T(r) \fB\)SHOULD\fR be
started and all incoming signalling messages \fB\)SHOULD\fR be queued by the
SGP.  If an ASP becomes ASP-ACTIVE before T(r) expires, the AS is moved to the
AS-ACTIVE state and all the queued messages will be sent to the ASP.
.pp
If T(r) expires before an ASP becomes ASP-ACTIVE, and the SGP has no other
alternative, the SGP may stop queuing messages and discard all previously
queued messages.  The AS will move to the AS-INACTIVE state if at least one
ASP is in ASP-INACTIVE state, otherwise it will move to AS-DOWN state.
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig6.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
     +----------+   one ASP trans to ACTIVE   +-------------+
     |    AS-   |---------------------------->|     AS-     |
     | INACTIVE |                             |   ACTIVE    |
     |          |<---                         |             |
     +----------+    \\                        +-------------+
        ^   |         \\ Tr Expiry,                ^    |
        |   |          \\ at least one             |    |
        |   |           \\ ASP in ASP-INACTIVE     |    |
        |   |            \\                        |    |
        |   |             \\                       |    |
        |   |              \\                      |    |
one ASP |   | all ASP       \\            one ASP  |    | Last ACTIVE
trans   |   | trans to       \\           trans to |    | ASP trans to
to      |   | ASP-DOWN        -------\\   ASP-     |    | ASP-INACTIVE
ASP-    |   |                         \\  ACTIVE   |    | or ASP-DOWN
INACTIVE|   |                          \\          |    | (start Tr)
        |   |                           \\         |    |
        |   |                            \\        |    |
        |   v                             \\       |    v
     +----------+                          \\  +-------------+
     |          |                           --|             |
     | AS-DOWN  |                             | AS-PENDING  |
     |          |                             |  (queuing) |
     |          |<----------------------------|             |
     +----------+    Tr Expiry and no ASP     +-------------+
                     in ASP-INACTIVE state
                                                                        
       Tr = Recovery Timer
.sz +2
.)c
.\}
.#f "AS State Transition Diagram"
.)b
.pp
\fI\*(&f\n(&p\fR shows an example AS state machine for the case where the AS
data is pre-configured.  For other cases where the ASP configuration data is
created dynamically, there would be differences in the state machine,
especially at creation of the AS.
.pp
For example, where the AS configuration data is not created until Registration
of the first ASP, the AS-INACTIVE state is entered directly upon the first
successful REG REQ from an ASP.  Another example is where the AS configuration
data is not created until the first ASP successfully enters the ASP-ACTIVE
state.  In this case the AS-ACTIVE state is entered directly.
.sh 4 "IPSP Considerations"
.pp
The AS state diagram for the AS-SG case is applicable for IPSP communication.
.sh 3 "ISUA Management Procedures for Primitives"
.pp
Before the establishment of an SCTP association the ASP state at both the SGP
and ASP is assumed to be in the state ASP-DOWN.
.pp
Once the SCTP association is established (see Section 4.2.1) and assuming that
local Call Control is ready, the local ISUA ASP Maintenance (ASPM) function
will initiate the relevant procedures, using the ASP Up, ASP Down, ASP Active
and ASP Inactive messages to convey the ASP state to the SGP (see Section
4.3.4).
.pp
If the ISUA layer subsequently receives an SCTP-COMMUNICATION_DOWN or
SCTP-RESTART indication primitive from the underlying SCTP layer, it will
inform the Layer Management by invoking the M-SCTP_STATUS indication
primitive.  The state of the ASP will be moved to ASP-DOWN.
.pp
At an ASP, Call Control will be informed of the status of any affected ISUP
circuit through the use of RESET, BLOCKING and UNBLOCKING indication
primitives.
.pp
In the case of SCTP-COMMUNICATION_DOWN, the SCTP client \fB\)MAY\fR try to
re-establish the SCTP association.  This \fB\)MAY\fR be done by the ISUA layer
automatically, or Layer Management \fB\)MAY\fR re-establish using the M-
SCTP_ESTABLISH request primitive.
.pp
In the case of an SCTP-RESTART indication at an ASP, the ASP is now considered
by its ISUA peer to be in the ASP-DOWN state.  The ASP, if it is to recover,
must begin any recovery with the ASP-Up procedure.
.sh 3 "ASPM Procedures for Peer-to-Peer Messages"
.sh 4 "ASP Up Procedures"
.pp
After an ASP has successfully established an SCTP association to an SGP, the
SGP waits for the ASP to send an \fI\)ASP Up (ASPUP)\fR message, indicating
that the ASP ISUA peer is available.  The ASP is always the initiator of the
\fI\)ASP Up (ASPUP)\fR message.  This action \fB\)MAY\fR be initiated at the
ASP by an M-ASP_UP request primitive from Layer Management or \fB\)MAY\fR be
initiated automatically by an ISUA management function.
.pp
When an \fI\)ASP Up (ASPUP)\fR message is received at an SGP and internally
the remote ASP is in the ASP-DOWN state and not considered locked-out for
local management reasons, the SGP marks the remote ASP in the state
ASP-INACTIVE and informs Layer Management with an M-ASP_Up indication
primitive.  If the SGP is aware, via current configuration data, which
Application Servers the ASP is configured to operate in, the SGP updates the
ASP state to ASP-INACTIVE in each AS that it is a member.
.pp
Alternatively, the SGP may move the ASP into a pool of Inactive ASPs available
for future configuration within Application Server(s), determined in a
subsequent Registration Request or ASP Active procedure.  If the \fI\)ASP Up
(ASPUP)\fR message contains an ASP Identifier, the SGP should save the ASP
Identifier for that ASP.  The SGP \fB\)MUST\fR send an \fI\)ASP Up Ack (ASPUP
ACK)\fR message in response to a received \fI\)ASP Up (ASPUP)\fR message even
if the ASP is already marked as ASP-INACTIVE at the SGP.
.pp
If for any local reason (e.g, management lock-out) the SGP cannot respond with
an \fI\)ASP Up Ack (ASPUP ACK)\fR message, the SGP responds to an \fI\)ASP Up
(ASPUP)\fR message with an \fI\)Error (ERR)\fR message with Reason "Refused -
Management Blocking".
.pp
At the ASP, the \fI\)ASP Up Ack (ASPUP ACK)\fR message received is not
acknowledged.  Layer Management is informed with an M-ASP_UP confirm
primitive.
.pp
When the ASP sends an \fI\)ASP Up (ASPUP)\fR message it starts timer T(ack).
If the ASP does not receive a response to an \fI\)ASP Up (ASPUP)\fR message
within T(ack), the ASP \fB\)MAY\fR restart T(ack) and resend \fI\)ASP Up
(ASPUP)\fR messages until it receives an \fI\)ASP Up Ack (ASPUP ACK)\fR
message.  T(ack) is provisionable, with a default of 2 seconds.
Alternatively, retransmission of \fI\)ASP Up (ASPUP)\fR messages \fB\)MAY\fR
be put under control of Layer Management.  In this method, expiry of T(ack)
results in an M-ASP_UP confirm primitive carrying a negative indication.
.pp
The ASP must wait for the \fI\)ASP Up Ack (ASPUP ACK)\fR message before
sending any other ISUA messages (e.g, ASP Active or REG REQ).  If the SGP
receives any other ISUA messages before \fI\)ASPUP\fR message is received
(other than ASPDN - see Section 4.3.4.2), the SGP \fB\)SHOULD\fR discard them.
.pp
If an \fI\)ASP Up (ASPUP)\fR message is received and internally the remote ASP
is in the ASP-ACTIVE state, an \fI\)ASP Up Ack (ASPUP ACK)\fR message is
returned, as well as an \fI\)Error (ERR)\fR message ("Unexpected Message), and
the remote ASP state is changed to ASP-INACTIVE in all relevant Application
Servers.
.pp
If an \fI\)ASP Up (ASPUP)\fR message is received and internally the remote ASP
is already in the ASP-INACTIVE state, an \fI\)ASP Up Ack (ASPUP ACK)\fR
message is returned and no further action is taken.
.sh 5 "ISUA Version Control"
.pp
If an \fI\)ASP Up (ASPUP)\fR message with an unsupported version is received,
the receiving end responds with an \fI\)Error (ERR)\fR message, indicating the
version the receiving node supports and notifies Layer Management.
.pp
This is useful when protocol version upgrades are being performed in a
network.  A node upgraded to a newer version should support the older versions
used on other nodes it is communicating with.  Because ASPs initiate the ASP
Up procedure it is assumed that the \fI\)Error (ERR)\fR message would normally
come from the SGP.
.sh 5 "IPSP Considerations"
.pp
An IPSP may be considered in the ASP-INACTIVE state after and ASPUP or ASPUP
Ack has been received from it.  An IPSP can be considered in the ASP-DOWN
state after an ASPDN or ASPDN Ack has been received from it.  The IPSP may
inform Layer Management of the change in state of the remote IPSP using
M-ASP_UP or M-ASP_DN indication or confirmation primitives.
.pp
Alternatively, when using the IPSP DE model, an interchange of \fI\)ASPUP\fR
messages from each end \fB\)MUST\fR be performed.  Four messages are needed
for completion.
.pp
If for any local reason (e.g, management lock-out) and IPSP cannot respond to
an \fI\)ASP Up (ASPUP)\fR message with an \fI\)ASP Up Ack (ASPUP ACK)\fR
message, it responds to an \fI\)ASP Up (ASPUP)\fR message with an \fI\)Error
(ERR)\fR message with Reason "Refused - Management Blocking" and leaves the
remote IPSP in the ASP-DOWN state.
.sh 4 "ASP Down Procedures"
.pp
The ASP will send an \fI\)ASP Down (ASPDN)\fR message to an SGP when the ASP
wishes to be removed from service in all Application Servers that it is a
member and no longer receive any CP, CS or ASPTM messages.  This action
\fB\)MAY\fR be initiated at the ASP by an M-ASP_DOWN request primitive from
Layer Management or \fB\)MAY\fR be initiated automatically by an ISUA
management function.
.pp
Whether the ASP is permanently removed from any AS is a function of
configuration management.  Whenever the ASP previously used the Registration
procedures (see Section 4.4.1) to register within Application Servers but has
not deregistered from all of them prior to sending the \fI\)ASP Down
(ASPDN)\fR message, the SGP \fB\)MUST\fR consider the ASP as Deregistered in
all Application Servers that it is still a member.
.pp
The SGP marks the ASP as ASP-DOWN, informs Layer Management with an M-ASP_Down
indication primitive, and returns an \fI\)ASP Down Ack (ASPDN ACK)\fR message
to the ASP.
.pp
The SGP \fB\)MUST\fR send an \fI\)ASP Down Ack (ASPDN ACK)\fR message in
response to a received \fI\)ASP Down (ASPDN)\fR message from the ASP even if
the ASP is already marked as ASP-DOWN at the SGP.
.pp
At the ASP, the \fI\)ASP Down Ack (ASPDN ACK)\fR message received is not
acknowledged.  Layer Management is informed with an M-ASP_DOWN confirm
primitive.  If the ASP receives an ASP Down Ack without having sent an
\fI\)ASP Down (ASPDN)\fR message, the ASP should now consider itself as in the
ASP-DOWN state.  If the ASP was previously in the ASP-ACTIVE or ASP_INACTIVE
state, the ASP should then initiate procedures to return itself to its
previous state.
.pp
When the ASP sends an \fI\)ASP Down (ASPDN)\fR message it starts timer T(ack).
If the ASP does not receive a response to an \fI\)ASP Down (ASPDN)\fR message
within T(ack), the ASP \fB\)MAY\fR restart T(ack) and resend \fI\)ASP Down
(ASPDN)\fR messages until it receives an \fI\)ASP Down Ack (ASPDN ACK)\fR
message.  T(ack) is provisionable, with a default of 2 seconds.
Alternatively, retransmission of \fI\)ASP Down (ASPDN)\fR messages \fB\)MAY\fR
be put under control of Layer Management.  In this method, expiry of T(ack)
results in an M-ASP_DOWN confirm primitive carrying a negative indication.
.sh 4 "ASP Active Procedures"
.pp
Anytime after the ASP has received an \fI\)ASP Up Ack (ASPUP ACK)\fR message
from the SGP or IPSP, the ASP \fB\)MAY\fR send an \fI\)ASP Active (ASPAC)\fR
message to the SGP indicating that the ASP is ready to start processing
traffic.  This action \fB\)MAY\fR be initiated at the ASP by an M-ASP_ACTIVE
request primitive from Layer Management or \fB\)MAY\fR be initiated
automatically by an ISUA management function.  Whenever an ASP wishes to
process the traffic for more than one Application Server across a common SCTP
association, the \fI\)ASP Active (ASPAC)\fR message(s) \fB\)SHOULD\fR contain
a list of one or more Routing Contexts to indicate for which Application
Servers the \fI\)ASP Active (ASPAC)\fR message applies.  It is not necessary
for the ASP to include all Routing Contexts of interest in a single \fI\)ASP
Active (ASPAC)\fR message, thus requesting to become active in all Routing
Contexts at the same time.  Multiple \fI\)ASP Active (ASPAC)\fR messages
\fB\)MAY\fR be used to activate within the Application Servers independently,
or in sets.  Whenever an \fI\)ASP Active (ASPAC)\fR message does not contain a
Routing Context parameter, the receiver must know, via configuration data,
which Application Server(s) the ASP is a member.
.pp
For the Application Servers that the ASP can successfully activate, the SGP or
IPSP responds with one or more \fI\)ASP Active Ack (ASPAC ACK)\fR messages,
including the associated Routing Context(s) and reflecting any Traffic Mode
Type values present in the related \fI\)ASP Active (ASPAC)\fR message.  The
Routing Context parameter \fB\)MUST\fR be included in the \fI\)ASP Active Ack
(ASPAC ACK)\fR message(s) if the received \fI\)ASP Active (ASPAC)\fR message
contained any Routing Contexts.  Depending on any Traffic Mode Type request in
the \fI\)ASP Active (ASPAC)\fR message or local configuration data if there is
no request, the SGP moves the ASP to the correct ASP traffic state within the
associated Application Server(s).  Layer Management is informed with an
M-ASP_Active indication.  If the SGP or IPSP receives any CP messages
before an \fI\)ASP Active (ASPAC)\fR message is received, the SGP or IPSP
\fB\)MAY\fR discard them.  By sending an \fI\)ASP Active Ack (ASPAC ACK)\fR
message, the SGP or IPSP is now ready to receive and send traffic for the
related Routing Context(s).  The ASP \fB\)SHOULD NOT\fR send CP messages
for the related Routing Context(s) before receiving an \fI\)ASP Active Ack
(ASPAC ACK)\fR message, or it will risk message loss.
.pp
Multiple \fI\)ASP Active Ack (ASPAC ACK)\fR messages \fB\)MAY\fR be used in
response to an \fI\)ASP Active (ASPAC)\fR message containing multiple Routing
Contexts, allowing the SGP or IPSP to independently acknowledge the \fI\)ASP
Active (ASPAC)\fR message for different (sets of) Routing Contexts.  The SGP
or IPSP \fB\)MUST\fR send an \fI\)Error (ERR)\fR message ("Invalid Routing
Context") for each Routing Context value that cannot be successfully
activated.
.pp
Whenever an "out-of-the-blue" \fI\)ASP Active (ASPAC\fR message is received
(i.e., the ASP has not registered with the SG or the SG has no static
configuration data for the ASP), the message \fB\)MAY\fR be silently
discarded.
.pp
The SGP \fB\)MUST\fR send an \fI\)ASP Active Ack (ASPAC ACK)\fR message in
response to a received \fI\)ASP Active (ASPAC)\fR message from the ASP, if the
ASP is already marked in the ASP-ACTIVE state at the SGP.
.pp
At the ASP, the \fI\)ASP Active Ack (ASPAC ACK)\fR message received is not
acknowledged.  Layer Management is informed with an M-ASP_ACTIVE confirm
primitive.  It is possible for the ASP to receive CP message(s) before
the \fI\)ASP Active Ack (ASPAC ACK)\fR message as the ASP Active Ack and CP
messages from an SG or IPSP may be sent on different SCTP streams.  Message
loss is possible, as the ASP does not consider itself in the ASP-ACTIVE state
until reception of the \fI\)ASP Active Ack (ASPAC ACK)\fR message.
.pp
When the ASP sends an \fI\)ASP Active (ASPAC)\fR message it starts timer
T(ack).  If the ASP does not receive a response to an \fI\)ASP Active
(ASPAC)\fR message within T(ack), the ASP \fB\)MAY\fR restart T(ack) and
resend \fI\)ASP Active (ASPAC)\fR messages until it receives an \fI\)ASP
Active Ack (ASPAC ACK)\fR message.  T(ack) is provisionable, with a default of
2 seconds.  Alternatively, retransmission of \fI\)ASP Active (ASPAC)\fR
messages \fB\)MAY\fR be put under control of Layer Management.  In this
method, expiry of T(ack) results in an M-ASP_ACTIVE confirm primitive carrying
a negative indication.
.pp
There are three modes of Application Server traffic handling in the SGP ISUA
layer: Override, Load-share and Broadcast.  When included, the Traffic Mode
Type parameter in the \fI\)ASP Active (ASPAC)\fR message indicates the
traffic-handling mode to be used in a particular Application Server.  If the
SGP determines that the mode indicated in an \fI\)ASP Active (ASPAC)\fR
message is unsupported or incompatible with the mode currently configured for
the AS, the SGP responds with an \fI\)Error (ERR)\fR message
("Unsupported/Invalid Traffic Handling Mode").  If the traffic- handling mode
of the Application Server is not already known via configuration data, then
the traffic-handling mode indicated in the first \fI\)ASP Active (ASPAC)\fR
message causing the transition of the Application Server state to AS-ACTIVE
\fB\)MAY\fR be used to set the mode.
.pp
In the case of an Override mode AS, reception of an \fI\)ASP Active (ASPAC)\fR
message at an SGP causes the (re)direction of all traffic for the AS to the
ASP that sent the \fI\)ASP Active (ASPAC)\fR message.  Any previously active
ASP in the AS is now considered to be in state ASP-INACTIVE and \fB\)SHOULD\fR
no longer receive traffic from the SGP within the AS.  The SGP or IPSP then
\fB\)MUST\fR send a \fI\)Notify (NTFY)\fR message ("Alternate ASP Active") to
the previously active ASP in the AS, and \fB\)SHOULD\fR stop traffic to or
from that ASP.  The ASP receiving this Notify \fB\)MUST\fR consider itself now
in the ASP-INACTIVE state, if it is not already aware of this via inter- ASP
communication with the Overriding ASP.
.pp
In the case of a Load-share mode AS, reception of an \fI\)ASP Active
(ASPAC)\fR message at an SGP or IPSP causes the direction of traffic to the
ASP sending the \fI\)ASP Active (ASPAC)\fR message, in addition to all the
other ASPs that are currently active in the AS.  The algorithm at the SGP for
load-sharing traffic within an AS to all the active ASPs is implementation
dependent.  The algorithm could, for example, be round robin or based on
information in the CCmessage.
.pp
An SGP or IPSP, upon reception of an \fI\)ASP Active (ASPAC)\fR message for
the first ASP in a Load-share AS, \fB\)MAY\fR choose not to direct traffic to
a newly active ASP until it determines that there are sufficient resources to
handle the expected load (e.g, until there are "n" ASPs in state ASP-ACTIVE in
the AS).
.pp
All ASPs within a load-sharing mode AS must be able to process any CP
message received for the AS, to accommodate any potential fail-over or
re-balancing of the offered load.
.pp
In the case of a Broadcast mode AS, reception of an \fI\)ASP Active (ASPAC)\fR
message at an SGP or IPSP causes the direction of traffic to the ASP sending
the \fI\)ASP Active (ASPAC)\fR message, in addition to all the other ASPs that
are currently active in the AS.  The algorithm at the SGP for broadcasting
traffic within an AS to all the active ASPs is a simple broadcast algorithm,
where every message is sent to each of the active ASPs.  An SGP or IPSP, upon
reception of an \fI\)ASP Active (ASPAC)\fR message for the first ASP in a
Broadcast AS, \fB\)MAY\fR choose not to direct traffic to a newly active ASP
until it determines that there are sufficient resources to handle the expected
load (e.g, until there are "n" ASPs in state ASP-ACTIVE in the AS).
.pp
Whenever an ASP in a Broadcast mode AS becomes ASP-ACTIVE, the SGP
\fB\)MUST\fR tag the first CP message broadcast in each SCTP stream with
a unique Correlation Id parameter.  The purpose of this Correlation Id is to
permit the newly active ASP to synchronize it's processing of traffic in each
ordered stream with the other ASPs in the broadcast group.
.sh 5 "IPSP Considerations"
.pp
Either of the IPSPs can initiate communication.  When an IPSP receives an ASP
Active, it should mark the peer as ASP-ACTIVE and return an \fI\)ASP Active
Ack (ASPAC ACK)\fR message.  An ASP receiving an \fI\)ASP Active Ack (ASPAC
ACK)\fR message may mark the peer as ASP-Active, if it is not already in the
ASP- ACTIVE state.
.pp
Alternatively, when using the IPSP DE model, an interchange of \fI\)ASPAC\fR
messages from each end \fB\)MUST\fR be performed.  Four messages are needed
for completion.
.sh 4 "ASP Inactive Procedures"
.pp
When an ASP wishes to withdraw from receiving traffic within an AS,
or the ASP wants to initiate the process of deactivation, the ASP sends an
\fI\)ASP Inactive (ASPIA)\fR message to the SGP or IPSP.
.PP
An \fI\)ASP Inactive (ASPIA)\fR message \fB\)MUST\fR alwasy be responded by
the peer (although other messages may be sent in the middle):
.bu
If the corresponding RK is registered (statically or dynamically), the peer
should respond with an \fI\)ASP Inactive Ack (ASPIA Ack)\fR message.
.bu
If the RK is not registered, or the RC information is not valid, the peer must
respond with an \fI\)Error (ERR)\fR message with error code "Invalid Routing
Context".
.bu
If the RC is missing and its specification is needed according to the used
configuration, the peer must respond with an \fI\)Error (ERR)\fR message with
error code "No Configured AS for ASP".
.pp
The action of sending an \fI\)ASP Inactive (ASPIA)\fR message \fB\)MAY\fR be
initiated at the ASP by an M-ASP_INACTIVE request primitive from Layer
Management or \fB\)MAY\fR be initiated automatically by an ISUA management
function.
.pp
Whenever an ASP is processing the traffic for more than one Application Server
across a common SCTP association, the \fI\)ASP Inactive (ASPIA)\fR message
contains one or more Routing Contexts to indicate for which Application
Servers the \fI\)ASP Inactive (ASPIA)\fR message applies.  Whenever an
\fI\)ASP Inactive (ASPIA)\fR message does not contain a Routing Context
parameter, the receiver must know, via configuration data, which Application
Servers the ASP is a member and move the ASP to the ASP-INACTIVE state in each
all Application Servers.
.pp
In the case of an Override mode AS, where another ASP has already taken over
the traffic within the AS with an \fI\)ASP Active (ASPAC)\fR message, the ASP
that sends the \fI\)ASP Inactive (ASPIA)\fR message is already considered by
the SGP to be in state ASP-INACTIVE.  An \fI\)ASP Inactive Ack (ASPIA ACK)\fR
message is sent to the ASP, after ensuring that all traffic is stopped to the
ASP.
.pp
In the case of a Load-share mode AS, the SGP moves the ASP to the ASP-INACTIVE
state and the AS traffic is re-allocated across the remaining ASPs in the
state ASP-ACTIVE, as per the load-sharing algorithm currently used within the
AS.  A \fI\)Notify (NTFY)\fR message ("Insufficient ASP resources active in
AS") \fB\)MAY\fR be sent to all inactive ASPs, if required.  An \fI\)ASP
Inactive Ack (ASPIA ACK)\fR message is sent to the ASP after all traffic is
halted and Layer Management is informed with an M-ASP_INACTIVE indication
primitive.
.pp
In the case of a Broadcast mode AS, the SGP moves the ASP to the ASP- INACTIVE
state and the AS traffic is broadcast only to the remaining ASPs in the state
ASP-ACTIVE.  A \fI\)Notify (NTFY)\fR message ("Insufficient ASP resources
active in AS") \fB\)MAY\fR be sent to all inactive ASPs, if required.  An
\fI\)ASP Inactive Ack (ASPIA ACK)\fR message is sent to the ASP after all
traffic is halted and Layer Management is informed with an M-ASP_INACTIVE
indication primitive.
.pp
Multiple \fI\)ASP Inactive Ack (ASPIA ACK)\fR messages \fB\)MAY\fR be used in
response to an \fI\)ASP Inactive (ASPIA)\fR message containing multiple
Routing Contexts, allowing the SGP or IPSP to independently acknowledge for
different (sets of) Routing Contexts.  The SGP or IPSP sends an \fI\)Error
(ERR)\fR ("Invalid Routing Context") message for each invalid or not
configured Routing Context value in a received \fI\)ASP Inactive (ASPIA)\fR
message.
.pp
The SGP \fB\)MUST\fR send an \fI\)ASP Inactive Ack (ASPIA ACK)\fR message in
response to a received \fI\)ASP Inactive (ASPIA)\fR message from the ASP and
the ASP is already marked as ASP-INACTIVE at the SGP.
.pp
At the ASP, the \fI\)ASP Inactive Ack (ASPIA ACK)\fR message received is not
acknowledged.  Layer Management is informed with an M-ASP_INACTIVE confirm
primitive.  If the ASP receives an ASP Inactive Ack without having sent an
\fI\)ASP Inactive (ASPIA)\fR message, the ASP should now consider itself as in
the ASP-INACTIVE state.  If the ASP was previously in the ASP-ACTIVE state,
the ASP should then initiate procedures to return itself to its previous
state.  When the ASP sends an \fI\)ASP Inactive (ASPIA)\fR message it starts
timer T(ack).  If the ASP does not receive a response to an \fI\)ASP Inactive
(ASPIA)\fR message within T(ack), the ASP \fB\)MAY\fR restart T(ack) and
resend \fI\)ASP Inactive (ASPIA)\fR messages until it receives an \fI\)ASP
Inactive Ack (ASPIA ACK)\fR message.  T(ack) is provisionable, with a default
of 2 seconds.  Alternatively, retransmission of \fI\)ASP Inactive (ASPIA)\fR
messages \fB\)MAY\fR be put under control of Layer Management.  In this
method, expiry of T(ack) results in a M-ASP_Inactive confirm primitive
carrying a negative indication.
.pp
If no other ASPs in the Application Server are in the state ASP- ACTIVE, the
SGP \fB\)MUST\fR send a \fI\)Notify (NTFY)\fR message ("AS-Pending") to all of
the ASPs in the AS which are in the state ASP-INACTIVE.  The SGP
\fB\)SHOULD\fR start buffering the incoming messages for T(r) seconds, after
which messages \fB\)MAY\fR be discarded.  T(r) is configurable by the network
operator.  If the SGP receives an \fI\)ASP Active (ASPAC)\fR message from an
ASP in the AS before expiry of T(r), the buffered traffic is directed to that
ASP and the timer is canceled.  If T(r) expires, the AS is moved to the
AS-INACTIVE state.
.sh 5 "IPSP Considerations"
.pp
An IPSP may be considered in the ASP-INACTIVE state by a remote IPSP after an
ASP Inactive or \fI\)ASP Inactive Ack (ASPIA ACK)\fR message has been received
from it.
.pp
Alternatively, when using the IPSP DE model, an interchange of \fI\)ASPIA\fR
messages from each end \fB\)MUST\fR be performed.  Four messages are needed
for completion.
.sh 4 "Notify Procedures"
.pp
A \fI\)Notify (NTFY)\fR message reflecting a change in the AS state
\fB\)MUST\fR be sent to all ASPs in the AS, except those in the ASP-DOWN
state, with appropriate Status Information and any ASP Identifier of the
failed ASP.  At the ASP, Layer Management is informed with an M- NOTIFY
indication primitive.  The \fI\)Notify (NTFY)\fR message must be sent whether
the AS state change was a result of an ASP failure or reception of an ASP
State management (ASPSM) or ASP Traffic Management (ASPTM) message.  In the
second case, the \fI\)Notify (NTFY)\fR message \fB\)MUST\fR be sent after any
ASP State or Traffic Management related acknowledgments messages (e.g, ASP Up
Ack, ASP Down Ack, ASP Active Ack, or ASP Inactive Ack).
.pp
Whenever a \fI\)Notify (NTFY)\fR ("AS-PENDING") message is sent by an SGP that
now has no ASPs active to service the traffic, or where a \fI\)Notify NTFY\fR
("Insufficient ASP resources active in AS") message \fB\)MUST\fR be sent in
the Load-share or Broadcast mode, the \fI\)Notify (NTFY)\fR message does not
explicitly compel the ASP(s) receiving the message to become active.  The ASPs
remain in control of what (and when) traffic action is taken.
.pp
Whenever a \fI\)Notify (NTYF)\fR message does not contain a Routing Context
parameter, the receiver must know, via configuration data, of which
Application Servers the ASP is a member and take the appropriate action in
each AS.
.sh 5 "IPSP Considerations (NTFY)"
.pp
Notify works in the same manner as in the SG-AS case.  One of the IPSPs can
send this message to any remote IPSP that is not in the ASP-DOWN state.
.sh 4 "Heartbeat Procedures"
.pp
The optional Heartbeat procedures \fB\)MAY\fR be used when operating over
transport layers that do not have their own heartbeat mechanism for detecting
loss of the transport association (i.e., other than SCTP).
.pp
Either ISUA peer may optionally send \fI\)Heartbeat (BEAT)\fR messages
periodically, subject to a provisionable timer T(beat).  Upon receiving a
\fI\)Heartbeat (BEAT)\fR message, the ISUA peer \fB\)MUST\fR respond with a
\fI\)Heartbeat Ack (BEAT ACK)\fR message.
.pp
If no \fI\)Heartbeat Ack (BEAT ACK)\fR message (or any other ISUA message) is
received from the ISUA peer within 2*T(beat), the remote ISUA peer is
considered unavailable.  Transmission of \fI\)Heartbeat (BEAT)\fR messages is
stopped and the signalling process \fB\)SHOULD\fR attempt to re-establish
communication if it is configured as the client for the disconnected ISUA
peer.
.pp
The \fI\)Heartbeat (BEAT)\fR message may optionally contain an opaque
Heartbeat Data parameter that \fB\)MUST\fR be echoed back unchanged in the
related \fI\)Heartbeat Ack (BEAT ACK)\fR message.  The sender, upon examining
the contents of the returned \fI\)Heartbeat Ack (BEAT ACK)\fR message,
\fB\)MAY\fR choose to consider the remote ISUA peer as unavailable.  The
contents and format of the Heartbeat Data parameter is
implementation-dependent and only of local interest to the original sender.
The contents may be used, for example, to support a Heartbeat sequence
algorithm (to detect missing Heartbeats), or a time-stamp mechanism (to
evaluate delays).
.pp
Note: Heartbeat related events are not shown in Figure 4 "ASP state transition
diagram".
.sh 2 "Routing Key Management Procedures"
.sh 3 "Registration"
.pp
An ASP \fB\)MAY\fR dynamically register with an SGP as an ASP within an
Application Server using the \fI\)REG REQ\fR message.  A Routing Key parameter
in the \fI\)REG REQ\fR message specifies the parameters associated with the
Routing Key.
.pp
The SGP examines the contents of the received Routing Key parameter and
compares it with the currently provisioned Routing Keys.  If the received
Routing Key matches an existing SGP Routing Key entry, and the ASP is not
currently included in the list of ASPs for the related Application Server, the
SGP \fB\)MAY\fR authorize the ASP to be added to the AS.  Or, if the Routing
Key does not currently exist and the received Routing Key data is valid and
unique, an SGP supporting dynamic configuration \fB\)MAY\fR authorize the
creation of a new Routing Key and related Application Server and add the ASP
to the new AS.  In either case, the SGP returns a \fI\)Registration Response
(REG RSP)\fR message to the ASP, containing the same Local-RK-Identifier as
provided in the initial request, and a Registration Result "Successfully
Registered".  A unique Routing Context value assigned to the SGP Routing Key
is included.  The method of Routing Context value assignment at the SGP is
implementation dependent but must be guaranteed to be unique for each
Application Server or Routing Key supported by the SGP.   If the SGP
determines that the received Routing Key data is invalid, or contains invalid
parameter values, the SGP returns a \fI\)Registration Response (REG RSP)\fR
message to the ASP, containing a Registration Result "Error - Invalid Routing
Key", "Error - Invalid DPC", "Error - Invalid Network Appearance" as
appropriate.
.pp
If the SGP does not support the registration procedure, the SGP returns an
\fI\)Error (ERR)\fR message to the ASP, with an error code of "Unsupported
Message Type".
.pp
If the SGP determines that a unique Routing Key cannot be created, the SGP
returns a \fI\)Registration Response (REG RSP)\fR message to the ASP, with a
Registration Status of "Error - "Cannot Support Unique Routing." An incoming
signalling message received at an SGP should not match against more than one
Routing Key.
.pp
If the SGP does not authorize the registration request, the SGP returns a
\fI\)REG RSP\fR message to the ASP containing the Registration Result "Error -
Permission Denied".
.pp
If an SGP determines that a received Routing Key does not currently exist and
the SGP does not support dynamic configuration, the SGP returns a
\fI\)Registration Response (REG RSP)\fR message to the ASP, containing a
Registration Result "Error - Routing Key not Currently Provisioned".
.pp
If an SGP determines that a received Routing Key does not currently exist and
the SGP supports dynamic configuration but does not have the capacity to add
new Routing Key and Application Server entries, the SGP returns a
\fI\)Registration Response (REG RSP)\fR message to the ASP, containing a
Registration Result "Error - Insufficient Resources".
.pp
If an SGP determines that one or more of the Routing Key parameters are not
supported for the purpose of creating new Routing Key entries, the SGP returns
a \fI\)Registration Response (REG RSP)\fR message to the ASP, containing a
Registration Result "Error - Unsupported RK parameter field".  This result
\fB\)MAY\fR be used if, for example, the SGP does not support RK Address
parameter.
.pp
A Registration Response "Error - Unsupported Traffic Handling Mode" is
returned if the Routing Key in the REG REQ contains a Traffic Handling Mode
that is inconsistent with the presently configured mode for the matching
Application Server.
.pp
An ASP \fB\)MAY\fR register multiple Routing Keys at once by including a
number of Routing Key parameters in a single \fI\)REG REQ\fR message.  The SGP
\fB\)MAY\fR respond to each registration request in a single \fI\)REG RSP\fR
message, indicating the success or failure result for each Routing Key in a
separate Registration Result parameter.  Alternatively the SGP \fB\)MAY\fR
respond with multiple \fI\)REG RSP\fR messages, each with one or more
Registration Result parameters.  The ASP uses the Local-RK-Identifier
parameter to correlate the requests with the responses.
.pp
An ASP \fB\)MAY\fR modify an existing Routing Key by including a Routing
Context parameter in the REG REQ.  If the SGP determines that the Routing
Context applies to an existing Routing Key, the SG \fB\)MAY\fR adjust the
existing Routing Key to match the new information provided in the Routing Key
parameter.  A Registration Response "Routing Context Registration Refused" is
returned if the SGP does not accept the modification of the Routing Key.
.pp
Upon successful registration of an ASP in an AS, the SGP can now send related
SS7 Signalling Network Management messaging, if this did not previously start
upon the ASP transition to state ASP-INACTIVE
.sh 3 "Deregistration"
.pp
An ASP \fB\)MAY\fR dynamically deregister with an SGP as an ASP within an
Application Server using the \fI\)DEREG REQ\fR message.  A Routing Context
parameter in the \fI\)DEREG REQ\fR  message specifies which Routing Keys to
deregister.  An ASP \fB\)SHOULD\fR move to the ASP-INACTIVE state for an
Application Server before attempting to deregister the Routing Key (i.e.,
deregister after receiving an ASP Inactive Ack).  Also, an ASP \fB\)SHOULD\fR
deregister from all Application Servers that it is a member before attempting
to move to the ASP-Down state.
.pp
The SGP examines the contents of the received Routing Context parameter and
validates that the ASP is currently registered in the Application Server(s)
related to the included Routing Context(s).  If validated, the ASP is
deregistered as an ASP in the related Application Server.
.pp
The deregistration procedure does not necessarily imply the deletion of
Routing Key and Application Server configuration data at the SGP.  Other ASPs
may continue to be associated with the Application Server, in which case the
Routing Key data \fB\)MUST NOT\fR be deleted.  If a Deregistration results in
no more ASPs in an Application Server, an SGP \fB\)MAY\fR delete the Routing
Key data.
.pp
The SGP acknowledges the deregistration request by returning a \fI\)DEREG
RSP\fR message to the requesting ASP.  The result of the deregistration is
found in the Deregistration Result parameter, indicating success or failure
with cause.
.pp
An ASP \fB\)MAY\fR deregister multiple Routing Contexts at once by including a
number of Routing Contexts in a single \fI\)DEREG REQ\fR message.  The SGP
\fB\)MAY\fR respond to each deregistration request in a single \fI\)DEREG
RSP\fR message, indicating the success or failure result for each Routing
Context in a separate Deregistration Result parameter.
.sh 3 "IPSP Considerations (REG/DEREG)"
.pp
The Registration and Deregistration procedures work in the IPSP cases in the
same way as in AS-SG cases.  An IPSP may register an RK in the remote IPSP.
An IPSP is responsible for deregistering the RKs that it has registered.
.sh 2 "Procedures to Support Circuit and Call State"
.sh 3 "At an SGP"
.pp
Upon receiving a RESET, BLOCKING, UNBLOCKING, CCT GROUP QUERY indication
primitive from the nodal inter-working function at an SGP, the SGP ISUA layer
will send a corresponding ISUA Circuit Supervision (CS) \fI\)CRES\fR,
\fI\)CBLO\fR, \fI\)CUBL\fR or \fI\)CQRY\fR message (see Section 3) to the ISUA
peers at concerned ASPs.  The ISUA layer must fill in various fields of the CS
messages consistently with the information received in the primitives.
.pp
CS messages \fB\)SHOULD NOT\fR be sent on stream "0" and \fB\)MAY\fR use
ordered delivery.
.sh 3 "At an ASP"
.sh 4 "Single SG Configurations"
.pp
At an ASP, upon receiving an ISUA Circuit Supervision (CS) message from the
remote ISUA Peer, the ISUA layer invokes the appropriate primitive indications
to the resident Call Control.  Local management is informed.
.pp
Whenever a local event has caused the change in state of ISUP circuits, the
ISUA layer at the ASP \fB\)SHOULD\fR pass up appropriate indications in the
primitives to the ISUA User, as though equivalent CS messages were received.
For example, the loss of an SCTP association to an SGP may cause the software
blocking of a set of ISUP circuits.  BLOCKING indication primitives to the
ISUA User are appropriate.
.sh 4 "Multiple SG Configurations"
.pp
At an ASP, upon receiving an ISUA Circuit Supervision (CS) message from the
remote ISUA Peer, the ISUA layer updates the status of the affected circuit(s)
via the originating SG and determines, whether or not the overall status of
the affected circuits(s) has changed.  If so, the ISUA layer invokes the
appropriate primitive indications to the resident Call Control \*#.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  To accomplish the handling of CS messages
from multiple SGs in a multiple SG configuration, the ISUA layer at an ASP
maintains the status of circuits via each SG.
.)d
Local management is informed.
.sh 3 "ASP Auditing"
.pp
An ASP may optionally initiate an audit procedure to inquire of an SG the
status of a circuit or circuit(s).  A \fI\)Circuit Query (CQRY)\fR message is
sent from the ASP to the SGP requesting the current status of one or more
circuits.
.lp
The \fI\)CQRY\fR message \fB\)MAY\fR be sent with unordered delivery.  The ASP
\fB\)MAY\fR send the \fI\)CQRY\fR in the following cases:
.ip "- Periodic:" 14
A Timer originally set upon reception of a \fI\)CBLO\fR message has expired
without a subsequent \fI\)CUBL\fR or \fI\)CQRY\fR message updating the circuit
status of the affected circuits.  The Timer is reset upon issuing a
\fI\)CQRY\fR.  In this case the \fI\)CQRY\fR is sent to the SGP that
originally sent the CS message.
.ip "- Isolation:" 14
The ASP is newly ASP-ACTIVE or has been isolated from an SG for an extended
period.  The ASP \fB\)MAY\fR request status of one or more ISUP circuits for
which it expects to communicate.
.pp
The SGP \fB\)SHOULD\fR either respond to a \fI\)CQRY\fR messages with CS
messages indicating the status of the circuit, or \fB\)SHOULD\fR respond with
an \fI\)ERR\fR ("Circuit Status Unknown") or \fI\)ERR\fR ("Call Reference
Status Unknown") message for each \fI\)Circuit Id\fR or \fI\)Call Reference\fR
requested in the \fI\)CQRY\fR message.
.pp
The status of each ISUP circuit requested is indicated in a \fI\)CQRY\fR
response message.  If the SGP cannot return information on the status of the
ISUP circuit or call reference, the SGP responds with an ERR ("Circuit Status
Unknown") or ERR ("Call Reference Status Unknown") with a list of all the
\fI\)Circuit Ids\fR and \fI\)Call References\fR for which the SGP cannot
provide information.
.pp
In some cases, the SGP \fB\)MAY\fR chose not to respond to a \fI\)CQRY\fR
message or a component of a \fI\)CQRY\fR message on the basis of policy \*#.
.(d
.ip \*#
\fB\)IMPLEMENTATION NOTE:\-\fR\  For example, an SGP \fB\)MAY\fR chose to not
respond to a request for the circuit status of a specific circuit in the
\fI\)CQRY\fR message because the ASP that issued the \fI\)CQRY\fR message is
not authorized to obtain information concerning the status of the circuit
as requested.
.)d
.pp
Any \fI\)CQRY\fR message in response to a \fI\)CQRY\fR message \fB\)MAY\fR
contain a list of \fI\)Call References\fR.
.sh 3 "ISUP \- ISUA Interworking at the SG"
.pp
On the SG, the ISUP routing or interworking function determines that the
message must be sent to an AS via the ISUA stack, based on information in the
incoming message.  The ISUA outgoing mapping function identifies the
appropriate Application Server (AS) and selects an active ASP from the list of
ASPs servicing this AS.  The appropriate ASP can be determined based on the
routing information in the incoming message, local load sharing information,
etc.  The appropriate ISUA message is then constructed and sent to the
appropriate endpoint, via the correct SCTP association and stream.
.sh 4 "Primitives received from the local Call Control"
.pp
These support the ISUA transport of Call Control boundary primitives.  The same
services as supported by ISUP are to be provided by ISUA.  Call Control at
the SG should be able to use the same primitive interface to ISUP/ISUA without
any changes.  The ISUP-ISUA interworking function takes care of selecting the
appropriate stack.
.pp
The ISUA needs to setup and maintain the appropriate SCTP association to the
selected endpoint.  ISUA also manages the usage of SCTP streams.  The address
information passed by the ISUA-user at an ASP must contain:
.np
a valid circuit identifier to specify an ISUP circuit in the SS7 network via
the appropriate SCTP association to a SG
.np
a valid IP address or host name to reach another ASP in the IP network via the
appropriate SCTP association.
.#e
.sh 1 "Examples of ISUA Procedures"
.sh 2 "Establishment of Association and Traffic between SGPs and ASPs"
.sh 4 "Single ASP in an Application Server (""1+0"" sparing)"
.pp
This scenario shows the example ISUA message flows for the establishment of
traffic between an SG and an ASP, where only one ASP is configured within an
AS (no backup).  It is assumed that the SCTP association is already set-up.
.(b
.(c
.nf
.sz -2
\fC\
SG                              ASP
 |                                |
 |<-------------ASP Up------------|
 |-----------ASP-Up Ack---------->|
 |                                |
 |<------- ASP Active-------------|
 |-----ASP Active Ack------------>|
 |                                |
.sz +2
.)c
.)b
.sh 4 "Two ASPs in Application Server (""1+1"" sparing)"
.pp
This scenario shows the example ISUA message flows for the establishment of
traffic between an SG and two ASPs in the same Application Server, where ASP1
is configured to be "active" and ASP2 a "standby" in the event of
communication failure or the withdrawal from service of ASP1.  ASP2 may act as
a hot, warm, or cold standby depending on the extent to which ASP1 and ASP2
share call or transaction state or can communicate call state under failure or
withdrawal events.  The example message flow is the same whether the \fI\)ASP
Active (ASPAC)\fR messages are Override or Load-share mode although typically
this example would use an Override mode.
.(b
.(c
.nf
.sz -2
\fC\
SG                       ASP1                       ASP2
 |                         |                          |
 |<--------ASP Up----------|                          |
 |-------ASP-Up Ack------->|                          |
 |                         |                          |
 |<-----------------------------ASP Up----------------|
 |-----------------------------ASP-Up Ack------------>|
 |                         |                          |
 |                         |                          |
 |<-------ASP Active-------|                          |
 |------ASP-Active Ack---->|                          |
 |                         |                          |
.sz +2
.)c
.)b
.sh 4 "Two ASPs in an Application Server (""1+1"" sparing, load-sharing case)"
.pp
This scenario shows the example ISUA message flows for the establishment of
traffic between an SG and two ASPs in the same Application Server, where the
two ASPs are brought to "active" and load-share the traffic load.  In this
case, one ASP is sufficient to handle the total traffic load.
.(b
.(c
.nf
.sz -2
\fC\
SG                       ASP1                       ASP2
 |                         |                          |
 |<---------ASP Up---------|                          |
 |--------ASP-Up Ack------>|                          |
 |                         |                          |
 |<------------------------------ASP Up---------------|
 |-----------------------------ASP Up Ack------------>|
 |                         |                          |
 |                         |                          |
 |<--ASP Active -----------|                          |
 |-----ASP-Active Ack----->|                          |
 |                         |                          |
 |<----------------------------ASP Active ------------|
 |-------------------------------ASP-Active Ack------>|
 |                         |                          |
.sz +2
.)c
.)b
.sh 4 "Three ASPs in an Application Server (""n+k"" sparing, load-sharing case)"
.pp
This scenario shows the example ISUA message flows for the establishment of
traffic between an SG and three ASPs in the same Application Server, where two
of the ASPs are brought to "active" and share the load.  In this case, a
minimum of two ASPs are required to handle the total traffic load (2+1
sparing).
.(b
.(c
.nf
.sz -2
\fC\
SG                  ASP1                 ASP2                ASP3
 |                    |                   |                   |
 |<------ASP Up-------|                   |                   |
 |-----ASP-Up Ack---->|                   |                   |
 |                    |                   |                   |
 |<--------------------------ASP Up-------|                   |
 |-------------------------ASP-Up Ack---->|                   |
 |                    |                   |                   |
 |<---------------------------------------------ASP Up--------|
 |---------------------------------------------ASP-Up Ack---->|
 |                    |                   |                   |
 |                    |                   |                   |
 |<--ASP Act ---------|                   |                   |
 |----ASP-Act Ack---->|                   |                   |
 |                    |                   |                   |
 |<--------------------ASP Act  ----------|                   |
 |-----------------------ASP-Act Ack----->|                   |
 |                    |                   |                   |
.sz +2
.)c
.)b
.sh 3 "ASP Traffic Fail-over Examples"
.sh 4 "(1+1 Sparing, withdrawal of ASP, Back-up Override)"
.pp
ASP1 withdraws from service:
.(b
.(c
.nf
.sz -2
\fC\
SG                       ASP1                       ASP2
 |                         |                          |
 |<-----ASP Inactive-------|                          |
 |----ASP Inactive Ack---->|                          |
 |-----------------------NTFY(ASP-Inact.)(Optional)-->|
 |                         |                          |
 |<------------------------------ ASP Active----------|
 |------------------------------ASP-Active Ack------->|
 |                                                    |
.sz +2
.)c
.)b
.ip "Note:" 6
If the SG detects loss of the ISUA peer (ISUA heartbeat loss or detection of
SCTP failure), the initial SG-ASP1 \fI\)ASP Inactive (ASPIA)\fR message
exchange would not occur.
.sh 4 "(1+1 Sparing, Back-up Override)"
.pp
ASP2 wishes to override ASP1 and take over the traffic:
.(b
.(c
.nf
.sz -2
\fC\
SG                       ASP1                       ASP2
 |                         |                          |
 |<------------------------------ ASP Active----------|
 |-------------------------------ASP-Active Ack------>|
 |----NTFY(Alt ASP-Act)--->|
 |                         |                          |
.sz +2
.)c
.)b
.sh 4 "(n+k Sparing, Load-sharing case, withdrawal of ASP)"
.pp
ASP1 withdraws from service:
.(b
.(c
.nf
.sz -2
\fC\
SG                  ASP1                 ASP2                 ASP3
 |                    |                   |                   |
 |<----ASP Inact.-----|                   |                   |
 |---ASP-Inact Ack--->|                   |                   |
 |                    |                   |                   |
 |---------------------------------NTFY(Ins. ASPs)(Optional)->|
 |                    |                   |                   |
 |<-----------------------------------------ASP Act ----------|
 |-------------------------------------------ASP Act (Ack)--->|
 |                    |                   |                   |
.sz +2
.)c
.)b
.pp
The \fI\)Notify (NTFY)\fR message to ASP3 is optional, as well as the
ASP-Active from ASP3.  The optional Notify can only occur if the SG maintains
knowledge of the minimum ASP resources required - for example if the SG knows
that "n+k" = "2+1" for a load-share AS and "n" currently equals "1".
.ip "Note:" 6
If the SG detects loss of the ASP1 ISUA peer (ISUA heartbeat loss or detection
of SCTP failure), the first SG-ASP1 \fI\)ASP Inactive (ASPIA)\fR message
exchange would not occur.
.sh 3 "ISUP/CC Service Translation Examples"
.lp
When the ISUA layer on the ASP has a CP message to send to the SG, it will do
the following:
.np
Determine the correct SGP
.np
Find the SCTP association to the chosen SGP
.np
Determine the correct stream in the SCTP association based on the DID
.np
Build the CP message, fill ISUA Message Header, fill Common Header
.np
Send the CP message to the remote ISUA peer in the SG, over the SCTP
association
.lp
When the ISUA layer on the SG has a CP message to send to the ASP, it will do
the following:
.np
Determine the AS
.np
Determine the Active ASP (SCTP association) within the AS
.np
Determine the correct stream in the SCTP association based on the DID
.np
Build the CP message, fill in ISUA Message Header, fill in Common Header
.np
Send the CP message to the remote ISUA peer in the ASP, over the SCTP
association
.lp
An example of the message flows for establishing a dialogue service is shown
below.  An active association between ASP and SG is established (Section 5.1)
prior to the following message flows.
.(b
.(c
.nf
.sz -2
\fC
           SG                             ASP
                                                                        
                      <----------- Invoke Request
                      <----------- Query(Begin) Request
                                                                        
Conversation(Continue)
    Indication        ---------->
Result Indication     ---------->
                                                                        
                      <----------- Invoke Request
                      <----------- Conversation(Continue) Request
                          .
                          .
                          .
End(response)Indication ----------->
                                                                        
    Result Indication ----------->
.fi
.sz +2
.)c
.)b
.pp
An example of the message flows for a failed attempt to establish a dialogue
on the signalling channel is shown below.  In this case, the gateway has a
problem with its physical connection , so it cannot establish a dialogue on
the signalling channel.
.(b
.(c
.nf
.sz -2
\fC\
      SG                             ASP
                                                                        
                   <----------- Invoke Request
                   <----------- Query(Begin) Request
                                                                        
Abort Indication   ---------->
.fi
.sz +2
.)c
.)b
.sh 2 "IP-IP Architecture"
.pp
The sequences below outline logical steps for a variety of scenarios within an
IP-IP architecture.  Please note that these scenarios cover a Primary/Backup
configuration.  Where there is a load-sharing configuration then the AS can
declare availability when 1 ASP issues ASPAC but can only declare
unavailability when all ASPs have issued ASPIA.
.sh 3 "Establishment of ISUA connectivity"
.pp
The following shows an example establishment of ISUA connectivity.  In this
example, each IP SP consists of a Management Instance (MI) and two ASPs.  The
Management Instance handles the address mapping mechanisms and monitors the
states of the remote peer.  For simplicity, the Management Instances and ASPs
are considered as a separate entity.  This is not a requirement, as they can
be collocated with an ASP.
.pp
The following must be established before ISUA traffic can flow.  A
connection-less flow is shown for simplicity.
.pp
Each node is configured (via MIB, for example) with the connections that need
to be setup
.(b
.(c
.nf
.sz -2
\fC\
IP SEP A                                                  IP SEP B
ASP-a1     ASP-a2     MI a             MI b       ASP-b2    ASP-b1
(Primary) (Backup)                               (Backup) (Primary)
                                                                        
            Establish SCTP Connectivity
                                                                        
                      |-- Est. SCTP Ass.--|
                                                                        
|------ Establish SCTP Association -------|
|------------- Establish SCTP Association -------------|
|------------------ Establish SCTP Association ------------------|
                                                                        
           |--- Establish SCTP Assoc. ----|
           |------- Establish SCTP Association --------|
           |------------ Establish SCTP Association -------------|
                                                                        
                      |-- Establish SCTP Association -|
                      |------- Establish SCTP Association ------|
                                                                        
            Establish ISUA Connectivity
                                                                        
+---------------ASP Up------------------->
<---------------ASP Up Ack---------------+
                                                                        
           +------------ASP Up----------->
           <------------ASP Up Ack-------+
                                                                        
                     <--------------ASP Up-------------+
                     +--------------ASP Up Ack--------->
                                                                        
                     <----------------ASP Up---------------------+
                     +----------------ASP Up Ack----------------->
                                                                        
+---------------ASP Act------------------>
<---------------ASP Act Ack--------------+
                                                                        
                     <----------------ASP Act--------------------+
                     +----------------ASP Act Ack---------------->
                                                                        
Traffic can now flow directly between ASPs.
                                                                        
+-------------------------------ISUP_User Message------------------>
.fi
.sz +2
.)c
.)b
.sh 3 "Fail-over scenarios"
.pp
The following sequences address fail-over of ASP
.sh 4 "Successful ASP Fail-over scenario"
.pp
The following is an example of a successful fail-over scenario, where there is
a fail-over from ASP-a1 to ASP-a2, i.e, Primary to Backup.  Since data
transfer passes directly between peer ASPs, ASP-b1 is notified of the
fail-over of ASP-a1 and must buffer outgoing data messages until ASP-a2
becomes available.
.(b
.(c
.nf
.sz -2
\fC\
IP SEP A                                                  IP SEP B
ASP-a1     ASP-a2     MI a             MI b       ASP-b2    ASP-b1
(Primary) (Backup)                               (Backup) (Primary)
+--------------ASP Inact----------------->
<--------------ASP Inact Ack-------------+
                                                                        
           <----NTFY (ASP-a1 Inactive)---+
                                                                        
           +----------ASP Act------------>
           <----------ASP Act Ack--------+
.fi
.sz +2
.)c
.)b
.sh 4 "Unsuccessful ASP Fail-over scenario"
.pp
The sequence is the same as 5.2.2.1 except that, since the backup fails to
come in then, the \fI\)Notify (NTFY)\fR messages declaring the availability of
the backup are not sent.
.#e
.sh 1 "Security Considerations"
.pp
The secuirty considerations discussed in the \fI\(lqSecurity Considerations
for SIGTRAN Protocols\(rq\fR document
.[
sigsec03
%Z 1
.]
apply to this document.
.#e
.sh 1 "IANA Considerations"
.sh 2 "SCTP Payload Protocol ID"
.lp
IANA has assigned a ISUA value for the Payload Protocol Identifier in the SCTP
DATA chunk.  The following SCTP Payload Protocol Identifier is registered:
.ba +12n
.pp
ISUA "5"
.ba -12n
.pp
The SCTP Payload Protocol Identifier value "5" \*# \fB\)SHOULD\fR be included
in each SCTP DATA chunk, to indicate that the SCTP is carrying the ISUA
protocol.  The value "0" (unspecified) is also allowed but any other values
\fB\)MUST NOT\fR be used.  This Payload Protocol Identifier is not directly
used by SCTP but \fB\)MAY\fR be used by certain network entities to identify
the type of information being carried in a DATA chunk.
.(d
.#v
.ip \*#
\fB\)EDITOR'S NOTE:\-\fR  The value shown as "5" is to be assigned
by IANA an may change in future versions of this document.
.)d
.pp
The User Adaptation peer \fB\)MAY\fR use the Payload Protocol Identifier, as a
way of determining additional information about the data being presented to it
by SCTP.  A request will be made to IANA to assign CTP Payload Protocol IDs.
.sh 2 "Port Number"
.pp
IANA has registered SCTP Port Number 14001 for ISUA.  It is recommended that
SGPs use this SCTP port number for listening for new connections.  SGPs
\fB\)MAY\fR also use statically configured SCTP port numbers instead.
.sh 2 "Protocol Extensions "
.pp
This protocol may also be extended through IANA in three ways:
.bu
Through definition of additional message classes.
.bu
Through definition of additional message types.
.bu
Through definition of additional message parameters.
.pp
The definition and use of new message classes, types and parameters is an
integral part of SIGTRAN adaptation layers.  Thus, these extensions are
assigned by IANA through an IETF Consensus action as defined in.
.[
rfc2434
%Z 1
.]
.pp
The proposed extension \fB\)MUST\fR in no way adversely affect the general
working of the protocol.
.pp
A new registry will be created by IANA to allow
.sh 3 "IETF Defined Message Classes"
.pp
The documentation for a new message class \fB\)MUST\fR include the following
information:
.np
A long and short name for the message class;
.np
A detailed description of the purpose of the message class.
.sh 3 "IETF Defined Message Types"
.pp
Documentation of the message type \fB\)MUST\fR contain the following
information:
.np
A long and short name for the new message type;
.np
A detailed description of the structure of the message.
.np
A detailed definition and description of intended use of each field within the
message.
.np
A detailed procedural description of the use of the new message type within
the operation of the protocol.
.np
A detailed description of error conditions when receiving this message type.
.pp
When an implementation receives a message type which it does not support, it
\fB\)MUST\fR respond with an Error (ERR) message, with an Error Code =
Unsupported Message Type.
.sh 3 "IETF-defined TLV Parameter Extension"
.pp
Documentation of the message parameter \fB\)MUST\fR contain the following
information:
.np
Name of the parameter type.
.np
Detailed description of the structure of the parameter field.  This structure
\fB\)MUST\fR conform to the general type-length-value format described earlier
in the document.
.np
Detailed definition of each component of the parameter value.
.np
Detailed description of the intended use of this parameter type, and an
indication of whether and under what circumstances multiple instances of this
parameter type may be found within the same message type.
.#e
.sh 1 "Timer Values"
.pp
Following are the \fB\)RECOMMENDED\fR timer values for ISUA timers:
.ix +4
.TS
tab(:);
lblbcb
lln.
Timer:Description:Value
_
Ta:\-:2 seconds
Tr:\-:2 seconds
T(ack):Inactivity Send Timer:7 minutes
T(ias):Inactivity Receive Timer:15 minutes
T(beat):Heartbeat Timer:30 seconds
.TE
.ix -4
.uh "Appendices"
.nr $1 0
.af $1 A
.#e
.sh 1 "Operational Considerations"
.sh 2 "Signalling Network Architecture"
.pp
A Signalling Gateway is used to support the transport of Call Control signalling
traffic received from the SS7 network to multiple distributed ASPs (e.g., MGCs
and IP Databases).  Clearly, the ISUA protocol is not designed to meet the
performance and reliability requirements for such transport by itself.
However, the conjunction of distributed architecture and redundant networks
provides support for reliable transport of signalling traffic over IP.  The
ISUA protocol is flexible enough to allow its operation and management in a
variety of physical configurations, enabling Network Operators to meet their
performance and reliability requirements.
.pp
To meet the stringent SS7 signalling reliability and performance requirements
for carrier grade networks, Network Operators might require that no single
point of failure is present in the end-to-end network architecture between an
SS7 node and an IP-based application.  This can typically be achieved through
the use of redundant SGPs or SGs, redundant hosts, and the provision of
redundant QOS-bounded IP network paths for SCTP Associations between SCTP End
Points. Obviously, the reliability of the SG, the MGC and other IP-based
functional elements also needs to be taken into account.  The distribution of
ASPs and SGPs within the available Hosts MAY also be considered.  As an
example, for a particular Application Server, the related ASPs could be
distributed over at least two Hosts.
.pp
One example of a physical network architecture relevant to SS7 carrier-grade
operation in the IP network domain is shown in \fI\*(&f\n(&n\fR.
.(b
.ie '\*(.T'ps' \{\
.so isua-02.fig7.pic
.\}
.el \{\
.(c
.nf
.sz -2
\fC\
        SGs                                     MGCs
       ..............                          ..............
Host#1 :   ______   :                          :   ______   : Host#3
       :  |      |__:__________________________:__|      |  :   =
       :  |SGP1.1|__:_____      _______________:__| ASP1 |  :  MGC1
       :  |______|  :     \\    /               :  |______|  :
       :  |      |__:______\\__/________________:__|      |  :
       :  |SGP2.1|__:_______\\/______      _____:__| ASP2 |  :
       :  |______|  :       /\\      |    |     :  |______:  :
       :   __:___   :  o   /  \\     |    |  o  :   ___:__   :
       :  |      |  :  o  /    \\    |    |  o  :  |      |  :
       :  | SGPn |  :  o  |    |    |    |  o  :  | ASPn |  :
       :  |______|  :     |    |    |    |     :  |______|  :
       :............:     |    |    |    |     :............:
       ..............     |    |    \\    /     ..............
Host#2 :   ______   :     |    |     \\  /      :   ______   : Host#4
       :  |      |__:_____|    |______\\/_______:__|      |  :   =
       :  |SGP1.2|__:_________________/\\_______:__| ASP1 |  :  MGC2
       :  |______|  :                /  \\      :  |______|  :
       :  |      |__:_______________/    \\_____:__|      |  :
       :  |SGP2.2|__:__________________________:__| ASP2 |  :
       :  |______|  :                          :  |______|  :
       :   __:___   :  o    SCTP            o  :   ___:__   :
       :  |      |  :  o    Associations    o  :  |      |  :
       :  | SGPn |  :  o                    o  :  | ASPn |  :
       :  |______|  :                          :  |______|  :
       :............:                          :............:
                                                                        
 SGP1.1 and SGP1.2 are part of SG1
 SGP2.1 and SGP2.2 are part of SG2
.fi
.sz +2
.)c
.\}
.#f "Physical Model"
.)b
.pp
In this model, each host MAY have many application processes.  In the case of
the MGC, an ASP may provide service to one or more Application Servers, and is
identified as an SCTP end point. One or more Signalling Gateway Processes make
up a single Signalling Gateway.
.pp
This example model can also be applied to IPSP-IPSP signalling.  In this case,
each IPSP MAY have its services distributed across 2 hosts or more, and may
have multiple server processes on each host.
.pp
In the example above, each signalling process (SGP, ASP or IPSP) is the end
point to more than one SCTP association, leading to more than one other
signalling processes.  To support this, a signalling process must be able to
support distribution of ISUA messages to many simultaneous active
associations.  This message distribution function is based on the status of
provisioned Routing Keys, the status of the signalling routes to signalling
points in the SS7 network , and the redundancy model (override, load-sharing,
broadcast) of the remote signalling processes.
.pp
For carrier grade networks, the failure or isolation of a particular
signalling process should not cause transactions to be lost.  This implies
that signalling processes need, in some cases, to share the transaction state
or be able to pass the transaction state information between each other.
However, this sharing or communication of transaction state information is
outside the scope of this document.
.pp
This model serves as an example.  ISUA imposes no restrictions as to the exact
layout of the network elements, the message distribution algorithms and the
distribution of the signalling processes.  Instead, it provides a framework
and a set of messages that allow for a flexible and scalable signalling
network architecture, aiming to provide reliability and performance.
.sh 2 "Redundancy Models"
.sh 3 "Application Server Redundancy"
.pp
At the SGP, an Application Server list contains active and inactive ASPs to
support ASP broadcast, load-sharing and override procedures.  The list of ASPs
within a logical Application Server is kept updated in the SGP to reflect the
active Application Server Processes.
.lp
For example, in the network shown in \fI\*(&f\n(&p\fR, all messages to SSN x
could be sent to ASP1 in Host3 or ASP1 in Host4.  The AS list at SGP1 in Host
1 might look like the following:
.ix +4
.TS
tab(:);
lsss
ll1c1l.
Routing Key {SSN=x) - "Application Server #1"
:ASP1/Host3:-:State = Active
:ASP1/Host4:-:State = Inactive
.TE
.pp
In this "1+1" redundancy case, ASP1 in Host3 would be sent any incoming
message with SSN=x.  ASP1 in Host4 would normally be brought to the "active"
state upon failure of, or loss of connectivity to, ASP1/Host1.
.pp
The AS List at SGP1 in Host1 might also be set up in load-share mode:
.ix +4
.TS
tab(:);
lsss
ll1c1l.
Routing Key {SSN=x) - "Application Server #1"
:ASP1/Host3:-:State = Active
:ASP1/Host4:-:State = Active
.TE
.pp
In this case, both the ASPs would be sent a portion of the traffic.  For
example the two ASPs could together form a database, where incoming queries
may be sent to any active ASP.
.pp
Care might need to be exercised by a Network Operator in the selection of the
routing information to be used as the Routing Key for a particular AS.
.pp
For example, where Application Servers are defined using ranges of Circuit
Identification Codes (CICs), the Operator is implicitly splitting up control
of the related circuit groups.  Some CIC value range assignments may interfere
with ISUP circuit supervision procedures.
.pp
In the process of fail-over, it is recommended that in the case of ASPs that
transactions do not fail.  For example, the two ASPs may share transaction
state via shared memory, or may use an ASP to ASP protocol to pass transaction
state information.  Any ASP-to-ASP protocol to support this function is
outside the scope of this document.
.sh 3 "Signalling Gateway Redundancy"
.pp
Signalling Gateways may also be distributed over multiple hosts.  Much like
the AS model, SGs may comprise one or more SG Processes (SGPs), distributed
over one or more hosts, using an override, load-share or broadcast model.
Should an SGP lose all or partial SS7 connectivity and other SGPs exist, the
SGP may terminate the SCTP associations to the concerned ASPs or send an
unsolicited ASPIA ACK for the concerned Application Servers.
.pp
It is possible for an ASP to route signalling messages destined to the SS7
network using more than one SGP.  In this model, a Signalling Gateway is
deployed as a cluster of hosts acting as a single SG.  An override redundancy
model is possible, where the unavailability of the SCTP association to a
primary SGP could be used to reroute affected traffic to an alternate
SGP.  A load-sharing model is possible, where the signalling messages are
load-shared between multiple SGPs.  A broadcast model is also possible, where
signalling messages are sent to each active SGP in the SG. The distribution of
the Call Control messages over the SGPs should be done in such a way to minimize
message mis-sequencing, as required by the SS7 User Parts.
.pp
It may also be possible for an ASP to use more than one SG to access a
specific SS7 end point, in a model that resembles an SS7 STP mated pair.
Typically, SS7 STPs are deployed in mated pairs, with traffic load-shared
between them.  Other models are also possible, subject to the limitations of
the local SS7 network provisioning guidelines.
.pp
From the perspective of the ISUA layer at an ASP, a particular SG is capable
of transferring traffic to a provisioned SS7 destination, subsystem or
application X if an SCTP association with at least one SGP of the SG is
established, the SGP has returned an acknowledgment to the ASP to indicate
that the ASP is actively handling traffic for that destination, subsystem or
application X, and the SGP has not indicated that the destination, subsystem
or application X is inaccessible.  When an ASP is configured to use multiple
SGPs for transferring traffic to the SS7 network, the ASP must maintain
knowledge of the current capability of the SGPs to handle traffic to
destinations, subsystems and applications of interest.  This information is
crucial to the overall reliability of the service, for override, load-sharing
and broadcast models, in the event of failures, recovery and maintenance
activities.  The ASP ISUA may also use this information for congestion
avoidance purposes.  The distribution of the Call Control messages over the SGPs
should be done in such a way to minimize message mis-sequencing, as required
by the some ISUP applications.
.\"
.\"
.(b M
.sh 1 "Change History" 0
.pp
This section provides historical information on the changes made to this
draft.  This section will be removed from the document when the document is
finalized.
.sh 2 "Changes from Version 0.1 to Version 0.2" 0 2
.bu
updated references, version numbers and dates.
.sh 2 "Changes from Version 0.0 to Version 0.1" 0 1
.bu
moved this section to the end of the document.
.bu
added an abbreviations section.
.bu
updated version numbers and dates.
.bu
updated references.
.bu
split references into two sections.
.bu
updated security section.
.bu
updated some IPSP statements.
.sh 2 "Version 0.0" 0 0
.pp
This is the initial version of this document.
.sh 3 "Change Log" 0 0 0
.lp
.(l I
.nf
\fC\s-3
$Log: draft-bidulock-sigtran-isua-02.me,v $
Revision 1.1.2.1  2009-06-21 10:29:27  brian
- added files to new distro

Revision 0.9.2.2  2005/05/14 08:33:11  brian
- copyright header correction

Revision 0.9.2.1  2004/03/16 05:10:17  brian
- Added drafts and figures.

Revision 0.8.2.2  2003/07/28 13:13:11  brian
Reformatting.

Revision 0.8.2.1  2003/07/27 22:09:48  brian
A few formatting changes.

Revision 0.8  2003/07/27 02:41:51  brian
Added new draft revision.

.)l
.)b
.\"
.\"
.#E
.(b L
.[
$LIST$
.]
.)b
.\"
.\"
.(b L
.uh "Acknowledgments"
.pp
The authors would like to thank
Jianxing Hou, Min Lin
for their original input to this document, and to
the authors of M2UA, M3UA and SUA
for the large sections of text which apply also to ISUA and was included here.
.uh "Author's Addresses"
.lp
.TS
expand tab(;);
lr.
Brian Bidulock;Phone: +1-780-490-1141
OpenSS7 Corporation;Email: bidulock@openss7.org
1469 Jeffreys Crescent;URL: http//www.openss7.org/
Edmonton, AB  T6L 6T1;
Canada;
.TE
.bl 3
.lp
This draft expires \*[expiry].
.)b
.#T 2004
