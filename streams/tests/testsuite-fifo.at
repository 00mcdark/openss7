dnl vim: ft=config sw=4 noet nocin com+=b\:dnl fo+=or tw=78
dnl =========================================================================
dnl 
dnl @(#) $RCSfile: testsuite-fifo.at,v $ $Name:  $($Revision: 0.9.2.21 $) $Date: 2007/03/12 02:23:48 $
dnl
dnl -------------------------------------------------------------------------
dnl
dnl Copyright (c) 2001-2007  OpenSS7 Corporation <http://www.openss7.com/>
dnl Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
dnl
dnl All Rights Reserved.
dnl 
dnl This program is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License as published by the Free
dnl Software Foundation; version 2 of the License.
dnl 
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
dnl or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
dnl for more details.
dnl 
dnl You should have received a copy of the GNU General Public License along
dnl with this program; if not, write to the Free Software Foundation, Inc.,
dnl 675 Mass Ave, Cambridge, MA 02139, USA.
dnl 
dnl -------------------------------------------------------------------------
dnl
dnl U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
dnl behalf of the U.S. Government ("Government"), the following provisions
dnl apply to you.  If the Software is supplied by the Department of Defense
dnl ("DoD"), it is classified as "Commercial Computer Software" under
dnl paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
dnl Regulations ("DFARS") (or any successor regulations) and the Government is
dnl acquiring only the license rights granted herein (the license rights
dnl customarily provided to non-Government users).  If the Software is
dnl supplied to any unit or agency of the Government other than DoD, it is
dnl classified as "Restricted Computer Software" and the Government's rights
dnl in the Software are defined in paragraph 52.227-19 of the Federal
dnl Acquisition Regulations ("FAR") (or any successor regulations) or, in the
dnl cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
dnl (or any successor regulations).
dnl
dnl -------------------------------------------------------------------------
dnl
dnl Commercial licensing and support of this software is available from
dnl OpenSS7 Corporation at a fee.  See http://www.openss7.com/
dnl
dnl -------------------------------------------------------------------------
dnl
dnl Last Modified $Date: 2007/03/12 02:23:48 $ by $Author: brian $
dnl
dnl -------------------------------------------------------------------------
dnl
dnl $Log: testsuite-fifo.at,v $
dnl Revision 0.9.2.21  2007/03/12 02:23:48  brian
dnl - updating tests
dnl
dnl Revision 0.9.2.20  2006/11/26 15:27:46  brian
dnl - testing and corrections to strlog capabilities
dnl
dnl Revision 0.9.2.19  2006/10/30 06:50:26  brian
dnl - added ability to sync between test cases
dnl
dnl Revision 0.9.2.18  2006/09/18 00:48:49  brian
dnl - updated testsuite headers
dnl
dnl Revision 0.9.2.17  2006/08/16 07:39:34  brian
dnl - add brief sleep to buffer leak check
dnl
dnl Revision 0.9.2.16  2006/03/05 03:51:41  brian
dnl - updated common test suites
dnl
dnl Revision 0.9.2.15  2006/02/22 11:33:20  brian
dnl - recognize --quite flag to test suites
dnl
dnl Revision 0.9.2.14  2005/12/22 07:28:47  brian
dnl - streams testcases must default to LfS case
dnl
dnl Revision 0.9.2.13  2005/12/20 15:12:18  brian
dnl - result of SMP kernel testing for LiS
dnl
dnl Revision 0.9.2.12  2005/12/19 12:45:37  brian
dnl - locking down for release
dnl
dnl Revision 0.9.2.11  2005/11/07 03:11:13  brian
dnl - marked expected LiS failures
dnl
dnl Revision 0.9.2.10  2005/11/01 11:21:20  brian
dnl - updates for testing and documentation
dnl
dnl Revision 0.9.2.9  2005/10/12 09:55:54  brian
dnl - STREAMS-based pipes are also working and tested
dnl
dnl Revision 0.9.2.8  2005/10/10 10:37:25  brian
dnl - FIFOs working nicely and tested.
dnl
dnl Revision 0.9.2.7  2005/09/29 23:08:21  brian
dnl - starting testing of FIFOs
dnl
dnl Revision 0.9.2.6  2005/09/27 10:04:24  brian
dnl - more test cases, runqueues bug
dnl
dnl Revision 0.9.2.5  2005/09/26 10:56:55  brian
dnl - factoring
dnl
dnl Revision 0.9.2.4  2005/06/24 16:58:49  brian
dnl - testsuite as always verbose internally
dnl
dnl Revision 0.9.2.3  2005/06/04 13:40:29  brian
dnl - exit early to get proper return code
dnl
dnl Revision 0.9.2.2  2005/05/30 14:25:55  brian
dnl - packaged standalong test suites
dnl
dnl Revision 0.9.2.1  2005/05/21 07:39:52  brian
dnl - new testsuite organization
dnl
dnl Revision 0.9.2.3  2005/05/20 04:45:39  brian
dnl - updated test suites
dnl
dnl Revision 0.9.2.2  2005/05/15 23:57:20  brian
dnl - update tests
dnl
dnl Revision 0.9.2.1  2005/05/14 23:59:23  brian
dnl - getting autotest up and running
dnl
dnl ==========================================================================

m4_divert_push([DEFAULTS])
test_fifo() {
    test_prog test-fifo "$@"
}
test_fifo_root() {
    test_prog_root test-fifo "$@"
}
m4_divert_pop([DEFAULTS])

AT_TESTED([test-fifo])
AT_BANNER([FIFO Test])

AT_SETUP([posix fifo test 0.1])
AT_KEYWORDS([fifo sanity])
AT_CHECK([test_fifo 0.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.1])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.2])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.3])
AT_KEYWORDS([fifo open EINVAL])
AT_CHECK([test_fifo 1.3], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.4])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.4], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.5])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.5], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.6.1])
AT_KEYWORDS([fifo open EINTR])
AT_CHECK([test_fifo 1.6.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.6.2])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.6.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.7.1])
AT_KEYWORDS([fifo open EINTR])
AT_CHECK([test_fifo 1.7.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 1.7.2])
AT_KEYWORDS([fifo open])
AT_CHECK([test_fifo 1.7.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.1.1])
AT_KEYWORDS([fifo ioctl I_LOOK])
AT_CHECK([test_fifo 2.1.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.1])
AT_KEYWORDS([fifo ioctl I_RECVFD ENXIO HUP])
AT_CHECK([test_fifo 2.2.1 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.2])
AT_KEYWORDS([fifo ioctl I_RECVFD EPROTO RDERR])
AT_CHECK([test_fifo 2.2.2 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.3])
AT_KEYWORDS([fifo ioctl I_RECVFD EAGAIN WRERR])
AT_CHECK([test_fifo 2.2.3 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.4])
AT_KEYWORDS([fifo ioctl I_RECVFD EPROTO RDERR WRERR])
AT_CHECK([test_fifo 2.2.4 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.5])
AT_KEYWORDS([fifo ioctl I_RECVFD])
AT_CHECK([test_fifo 2.2.5], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.6])
AT_KEYWORDS([fifo ioctl I_RECVFD EINTR])
AT_CHECK([test_fifo 2.2.6], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.2.7])
AT_KEYWORDS([fifo ioctl I_RECVFD])
AT_CHECK([test_fifo 2.2.7], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.3.1])
AT_KEYWORDS([fifo ioctl I_SENDFD ENXIO HUP])
AT_CHECK([test_fifo 2.3.1 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.3.2])
AT_KEYWORDS([fifo ioctl I_SENDFD EPROTO RDERR])
AT_CHECK([test_fifo 2.3.2 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.3.3])
AT_KEYWORDS([fifo ioctl I_SENDFD EPROTO WRERR])
AT_CHECK([test_fifo 2.3.3 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.3.4])
AT_KEYWORDS([fifo ioctl I_SENDFD EPROTO RDERR WRERR])
AT_CHECK([test_fifo 2.3.4 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.1])
AT_KEYWORDS([fifo ioctl I_PUSH ENXIO HUP])
AT_CHECK([test_fifo 2.4.1 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.2])
AT_KEYWORDS([fifo ioctl I_POP ENXIO HUP])
AT_CHECK([test_fifo 2.4.2 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.3])
AT_KEYWORDS([fifo ioctl I_FLUSH ENXIO HUP])
AT_CHECK([test_fifo 2.4.3 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.4])
AT_KEYWORDS([fifo ioctl I_STR ENXIO HUP])
AT_CHECK([test_fifo 2.4.4 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.5])
AT_KEYWORDS([fifo ioctl I_FDINSERT ENXIO HUP])
AT_CHECK([test_fifo 2.4.5 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.6])
AT_KEYWORDS([fifo ioctl I_SWROPT ENXIO HUP])
AT_CHECK([test_fifo 2.4.6 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.7])
AT_KEYWORDS([fifo ioctl I_FLUSHBAND ENXIO HUP])
AT_CHECK([test_fifo 2.4.7 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 2.4.8])
AT_KEYWORDS([fifo ioctl I_CANPUT ENXIO HUP])
AT_CHECK([test_fifo 2.4.8 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.1])
AT_KEYWORDS([fifo write PIPE_BUF])
AT_CHECK([test_fifo 3.1.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.2])
AT_KEYWORDS([fifo write ~O_NONBLOCK])
AT_CHECK([test_fifo 3.1.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.3])
AT_KEYWORDS([fifo write ~O_NONBLOCK SIGNAL])
AT_CHECK([test_fifo 3.1.3], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.4])
AT_KEYWORDS([fifo write O_NONBLOCK])
AT_CHECK([test_fifo 3.1.4], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.5])
AT_KEYWORDS([fifo write O_NONBLOCK <=PIPEBUF])
AT_CHECK([test_fifo 3.1.5], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.6])
AT_KEYWORDS([fifo write O_NONBLOCK >PIPEBUF])
AT_CHECK([test_fifo 3.1.6], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.7])
AT_KEYWORDS([fifo write zero-length])
AT_CHECK([test_fifo 3.1.7], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.8])
AT_KEYWORDS([fifo write ENXIO HUP])
AT_CHECK([test_fifo 3.1.8 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.9])
AT_KEYWORDS([fifo write EPROTO SIGPIPE WRERR])
AT_CHECK([test_fifo 3.1.9 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.10])
AT_KEYWORDS([fifo write EPROTO RDERR WRERR])
AT_CHECK([test_fifo 3.1.10 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.1.11])
AT_KEYWORDS([fifo write EPIPE SIGPIPE])
AT_CHECK([test_fifo 3.1.11], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.1])
AT_KEYWORDS([fifo putmsg PIPE_BUF])
AT_CHECK([test_fifo 3.2.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.2])
AT_KEYWORDS([fifo putmsg ~O_NONBLOCK])
AT_CHECK([test_fifo 3.2.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.3])
AT_KEYWORDS([fifo putmsg ~O_NONBLOCK SIGNAL])
AT_CHECK([test_fifo 3.2.3], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.4])
AT_KEYWORDS([fifo putmsg O_NONBLOCK])
AT_CHECK([test_fifo 3.2.4], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.5])
AT_KEYWORDS([fifo putmsg O_NONBLOCK <=PIPEBUF])
AT_CHECK([test_fifo 3.2.5], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.6])
AT_KEYWORDS([fifo putmsg O_NONBLOCK >PIPEBUF])
AT_CHECK([test_fifo 3.2.6], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.7])
AT_KEYWORDS([fifo putmsg zero-length])
AT_CHECK([test_fifo 3.2.7], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.8])
AT_KEYWORDS([fifo putmsg ENXIO HUP])
AT_CHECK([test_fifo 3.2.8 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.9])
AT_KEYWORDS([fifo putmsg EPROTO SIGPIPE WRERR])
AT_CHECK([test_fifo 3.2.9 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.10])
AT_KEYWORDS([fifo putmsg EPROTO RDERR WRERR])
AT_CHECK([test_fifo 3.2.10 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.2.11])
AT_KEYWORDS([fifo putmsg EPIPE SIGPIPE])
AT_CHECK([test_fifo 3.2.11], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.1])
AT_KEYWORDS([fifo putpmsg PIPE_BUF])
AT_CHECK([test_fifo 3.3.1], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.2])
AT_KEYWORDS([fifo putpmsg ~O_NONBLOCK])
AT_CHECK([test_fifo 3.3.2], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.3])
AT_KEYWORDS([fifo putpmsg ~O_NONBLOCK SIGNAL])
AT_CHECK([test_fifo 3.3.3], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.4])
AT_KEYWORDS([fifo putpmsg O_NONBLOCK])
AT_CHECK([test_fifo 3.3.4], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.5])
AT_KEYWORDS([fifo putpmsg O_NONBLOCK <=PIPEBUF])
AT_CHECK([test_fifo 3.3.5], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.6])
AT_KEYWORDS([fifo putpmsg O_NONBLOCK >PIPEBUF])
AT_CHECK([test_fifo 3.3.6], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.7])
AT_KEYWORDS([fifo putpmsg zero-length])
AT_CHECK([test_fifo 3.3.7], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.8])
AT_KEYWORDS([fifo putpmsg ENXIO HUP])
AT_CHECK([test_fifo 3.3.8 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.9])
AT_KEYWORDS([fifo putpmsg EPROTO SIGPIPE WRERR])
AT_CHECK([test_fifo 3.3.9 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.10])
AT_KEYWORDS([fifo putpmsg EPROTO RDERR WRERR])
AT_CHECK([test_fifo 3.3.10 SMP], [], [ignore], [], [], [])
AT_CLEANUP

AT_SETUP([posix fifo test 3.3.11])
AT_KEYWORDS([fifo putpmsg EPIPE SIGPIPE])
AT_CHECK([test_fifo 3.3.11], [], [ignore], [], [], [])
AT_CLEANUP

dnl vim: ft=config sw=4 noet nocin com+=b\:dnl fo+=or tw=78
