# vim: ft=spec sw=4 et
# =============================================================================
# 
# @(#) $RCSfile: streams.spec.in,v $ $Name:  $($Revision: 0.9.2.44 $) $Date: 2004/12/17 04:02:43 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2004  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2004/12/17 04:02:43 $ by $Author: brian $
#
# =============================================================================

# default is to build kernel modules and tools
# conditional builds of binary rpms relies on the sneaky spec trick that
# rpmbuild will not build a binary rpm when it has no %files section
%define BUILD_modules 1
%define BUILD_tools   1

#
# there are three ways to pass kernel version to the build process:
#    define _kversion in /usr/lib/rpm/macros, /etc/rpm/macros or ~/.rpmmacros
#    define _kversion on the rpmbuild command line
#    define PACKAGE_KVERSION environment variable
#    just let it default to `uname -r`
#
%{!?_kversion:%{expand: %%define _kversion %(env | grep PACKAGE_KVERSION | sed -e 's|.*=||')}}
%{!?_kversion:%{expand: %%define _kversion %(uname -r)}}

%define kernel_version %{_kversion}
%define kernel_source %(echo %{_kversion} | sed -e 's|BOOT||')
%define kernel_number %(echo %{_kversion} | sed -e 's|-.*$||')
%define kernel_release %(echo %{_kversion} | sed -e 's|-|.|g')
%define core_name core-%{_kversion}
%define epoch @PACKAGE_EPOCH@
%define majbase @STRCONF_MAJBASE@
%define makedev @STRCONF_MAKEDEV@
%define base @PACKAGE_TARNAME@
%define infofiles %{name} STREAMS SPG porting
%define title @PACKAGE_TITLE@
%define stitle @PACKAGE_SHORTTITLE@
%define libname streams

# because we only need to build the tools binaries once for each architecture,
# but need to build the modules binaries once for each architecture and kernel
# version, we accept the --with[out] options "modules" and "tools"
%{?_without_modules: %{expand: %%define BUILD_modules 0}}
%{?_without_tools:   %{expand: %%define BUILD_tools   0}}
%{?_with_modules:    %{expand: %%define BUILD_modules 1}}
%{?_with_tools:      %{expand: %%define BUILD_tools   1}}

%if %{BUILD_tools}
%define BUILD_libs    1
%define BUILD_devs    1
%else
%define BUILD_libs    0
%define BUILD_devs    0
%endif

%define _conflict LiS

# we have some more options that control configure for the build
%{?disturl:%{!?url:%{expand: %%define url %{disturl}}}}
%define fullrelease @PACKAGE_RELEASE@%{extrarelease}

Summary:        %{title} (SVR 4.2 MP STREAMS)
%if %{?_without_public: 0}%{!?_without_public: 1}
Name:           @PACKAGE_NAME@
%else
Name:           @PACKAGE_NAME@-bin
%endif
Epoch:          @PACKAGE_EPOCH@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@
License:        GPL
Group:          System Environment/Kernel
%if %{?url: 1}%{!?url: 0}
URL:            %{url}
%endif
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
ExclusiveArch:  %{ix86} k6 x86_64 s390 s390x ppc ppciseries ppcpseries ppc64 arm armv4l sh mips mipsel
ExclusiveOs:    Linux
Source:         %{name}-%{version}-%{release}.tar.bz2
Obsoletes:      %{base}
Obsoletes:      %{name}
Obsoletes:      %{_conflict} STREAMS
%if %{?buildroot: 0}%{!?buildroot: 1}
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{fullrelease}-root
%endif
Requires:       kernel >= 2.4.7
Requires:       kernel < 2.5
Provides:       %{name} STREAMS
Conflicts:      %{_conflict}
%if %{BUILD_modules}
BuildRequires:  kernel-source >= 2.4
%endif
%ifarch s390 s390x
BuildRequires:  gcc >= 2.95.3
%else
%ifarch %{all_ppc}
BuildRequires:  gcc >= 2.96-75
%else
BuildRequires:  gcc >= 2.96-98
%endif
%endif
BuildRequires:  gcc >= 2.96
BuildConflicts: %{_conflict}
Autoreq:        true

# ---------------------------------------------------------------------------
%description
The %{name} package includes kernel modules, libraries, utilities and
development environment for the development and execution of System V Release
4.2 MP STREAMS modules and drivers developed for Linux.  In addition (source)
compatibility modules are provided for AIX, HP-UX, LiS, OSF, Solaris, SVR 4
and UnixWare 7.  This distribution is only currently applicable to 2.4 kernels
and was targetted at ix86 and ppc architectures, but should build and install
for other architectures as well.

%prep
# ---------------------------------------------------------------------------
# let rpm do its job (but tell it where to find things)

%setup -q -n %{name}-%{version}-%{release}

%build
# ---------------------------------------------------------------------------

preferred_cflags="%{optflags}"

%ifarch %{ix86}
preferred_cflags="$preferred_cflags -D__USE_STRING_INLINES -fstrict-aliasing"
%endif

%ifarch sparc
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparcv9
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparc64
preferred_cflags="$preferred_cflags -mvis -fcall-used-g7"
%endif

%ifnarch ia64 s390 s390x ppc ppciseries ppc64
preferred_cflags="$preferred_cflags -freorder-blocks"
%endif

./configure \
    CC="${CC}" \
    CFLAGS="${CFLAGS:-$preferred_cflags}" \
    LDFLAGS="${LDFLAGS}" \
    CPPFLAGS="${CPPFLAGS}" \
    CPP="${CPP}" \
    CXX="${CXX:-$CC}" \
    CXXFLAGS="${CXXFLAGS:-$preferred_cflags}" \
    CXXCPP="${CXXCPP:-$CPP}" \
    --build=%{_build} \
    --host=%{_target_platform} \
    --prefix=%{_prefix} \
    --exec-prefix=%{_exec_prefix} \
    --bindir=%{_bindir} \
    --sbindir=%{_sbindir} \
    --sysconfdir=%{_sysconfdir} \
    --datadir=%{_datadir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --libexecdir=%{_libexecdir} \
    --localstatedir=%{_localstatedir} \
    --sharedstatedir=%{_sharedstatedir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --disable-maintainer-mode \
    --disable-dependency-tracking \
    --with-gnu-ld \
    --with-k-release=%{kernel_version} \
    --with-k-modules=/%{_lib}/modules/%{kernel_version} \
    --with-rpm-epoch=%{epoch} \
    --with-rpm-release=%{release} \
    --with-base-major=%{majbase} \
    %{?_with_cooked_manpages:    %{_with_cooked_manpages}} \
    %{?_without_cooked_manpages: %{_without_cooked_manpages}} \
    %{?_with_public:              --enable-public} \
    %{?_without_public:           --disable-public} \
    %{?_with_k_debug:             --enable-k-debug} \
    %{?_without_k_debug:          --disable-k-debug} \
    %{?_with_k_test:              --enable-k-test} \
    %{?_without_k_test:           --disable-k-test} \
    %{?_with_k_safe:              --enable-k-safe} \
    %{?_without_k_safe:           --disable-k-safe} \
    %{?_with_k_inline:            --enable-k-inline} \
    %{?_without_k_inline:         --disable-k-inline} \
    %{?_with_tools:               --enable-tools} \
    %{?_without_tools:            --disable-tools} \
    %{?_with_modules:             --enable-modules} \
    %{?_without_modules:          --disable-modules} \
    %{?_with_compat_svr4:         --enable-compat-svr4} \
    %{?_without_compat_svr4:      --disable-compat-svr4} \
    %{?_with_compat_sol8:         --enable-compat-sol8} \
    %{?_without_compat_sol8:      --disable-compat-sol8} \
    %{?_with_compat_uw7:          --enable-compat-uw7} \
    %{?_without_compat_uw7:       --disable-compat-uw7} \
    %{?_with_compat_osf:          --enable-compat-osf} \
    %{?_without_compat_osf:       --disable-compat-osf} \
    %{?_with_compat_aix:          --enable-compat-aix} \
    %{?_without_compat_aix:       --disable-compat-aix} \
    %{?_with_compat_hpux:         --enable-compat-hpux} \
    %{?_without_compat_hpux:      --disable-compat-hpux} \
    %{?_with_compat_lis:          --enable-compat-lis} \
    %{?_without_compat_lis:       --disable-compat-lis}

make

%install
# ---------------------------------------------------------------------------

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

mkdir -p $RPM_BUILD_ROOT

# add a directory for our devices
mkdir -p $RPM_BUILD_ROOT/dev/%{base}

%if %{?_enable_debug_packages: %{_enable_debug_packages}}%{!?_enable_debug_packages: 0}
# we are going to create debug packages, so we need to install unstripped binaries.
make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install
%else
# use libtoolized install-strip to strip binaries, modules, shared and static libraries.
make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install-strip
%endif

# get the installed info directory out of the build root
[ -e "$RPM_BUILD_ROOT/%{_infodir}/dir" ] && rm -f "$RPM_BUILD_ROOT/%{_infodir}/dir"

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
# punch rpm release to Custom
echo '.Custom.1'  > .rpmextra
# create configured source directory for source package
mkdir -p $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# tar and move the sources for source release
make clean; tar cvf - . | tar xf - -C $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{fullrelease}
ln -sf %{name}-%{version}-%{fullrelease} $RPM_BUILD_ROOT%{_usrsrc}/%{name}
%endif

%clean
# ---------------------------------------------------------------------------

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT


# ===========================================================================
%package %{core_name}

Summary:        %{title} core kernel modules.
Group:          System Environment/Kernel
Prefix:         /%{_lib}/modules/%{kernel_version}
Prefix:         %{_includedir}/streams
Requires:       kernel = %{kernel_version}
Conflicts:      %{_conflict}
Prereq:         /sbin/depmod
Prereq:         /sbin/lsmod
Prereq:         /sbin/insmod
Prereq:         /sbin/modprobe
Prereq:         /usr/sbin/lsof
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Provides:       %{name}-core = %{epoch}:%{version}-%{fullrelease}
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{core_name}
The %{name}-%{core_name} package contains the kernel modules that provide the
Linux kernel SVR 4.2 MP STREAMS facility.  This also includes assorted basic
STREAMS drivers and modules such as pipes, fifos, echo, etc.  This package is
heavily tied to the kernel for which it was compiled.  This package applies to
kernel version %{kernel_version}.

%pre %{core_name}
# ---------------------------------------------------------------------------
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   if we are upgrading and the upgrade is for the running kernel, or we are
#   installing new on the running kernel, we have to worry about previous
#   loaded modules for the old version or a non-rpm version
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    fdetach -a 2>/dev/null
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    /usr/sbin/lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge %{majbase} ]; then
                eval "kill -HUP $tokens[1]"
            fi
        fi
    done
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    echo 'Cannot install or upgrade with streams modules running.' >&2
    exit 1
fi

%post %{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 1 ] ; then
#   This is the end of a fresh install.
#   Check that our line is in the modules.%{base} file
    conf_old=/etc/modules.conf
    if ( grep -q 'include.*modules.%{base}' $conf_old ) ; then :; else
        streams_dir=/%{_lib}/modules/%{kernel_version}/misc
        streams_prf=/%{_lib}/modules/preferred/misc
        conf_new=%{_tmppath}/modules.conf.new.$$
        cp -f $conf_old $conf_new
#       if not, check for an old non-rpm LiS
        if ( grep -q 'BEGIN LiS' $conf_old ) ; then
            conf_tmp=%{_tmppath}/modules.conf.tmp.$$
            list=`find /%{_lib}/modules/%{kernel_version}/%{base} -name "*.o"`
            for p in $list ; do
                m="`echo $p | sed -e 's|^.*/||;s|\.o||'`"
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $conf_new > $conf_tmp
                mv -f $conf_tmp $conf_new
#               Remove conflicting modules.
                rm -f $streams_dir/$m.o
                rm -f $streams_prf/$m.o
            done
        fi
        echo 'prune modules.%{base}' >> $conf_new
        echo 'if -f /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'include /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'endif' >> $conf_new
        chmod --reference=$conf_old $conf_new
        cp -fb --suffix=.rpmsave $conf_new $conf_old
        rm -f $conf_new
    fi
fi
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot by /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi

%preun %{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 0 -a ":%{kernel_version}" = ":`uname -r`" ] ; then
#   We are about to uninstall for good on a running kernel then we have to
#   worry about which modules are running
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    fdetach -a
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    /usr/sbin/lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge %{majbase} ]; then
                eval "kill -KILL $tokens[1]"
            fi
        fi
    done
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    echo "Cannot uninstall with streams modules running." >&2
    exit 1
fi

%postun %{core_name}
# ---------------------------------------------------------------------------

if [ $1 = 0 ]; then
#   this is the last stage of a removal we are going away: we need to see if
#   we need to remove our line from modules.conf and remove our devices
    remove_line=yes
    for file in /lib/modules/*/modules.%{base} ; do
        if [ -f $file ] ; then
            remove_line=no
            break
        fi
    done
    if [ ":$remove_line" = :yes ] ; then
        sed -e '/prune modules.%{base}/,/endif/d' /etc/modules.conf > %{_tmppath}/modules.conf.tmp.$$
        chmod --reference=/etc/modules.conf %{_tmppath}/modules.conf.tmp.$$
        cp -fb --suffix=.rpmorig %{_tmppath}/modules.conf.tmp.$$ /etc/modules.conf
        rm -f %{_tmppath}/modules.conf.tmp.$$
    fi
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot but /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   one more kick at killing any loaded modules on uninstall, last stage of
#   the upgrade on a running kernel for upgrade.
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    fdetach -a
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    /sbin/insmod -ar streams
    /usr/sbin/lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge %{majbase} ]; then
                if [ $1 = 0 ] ; then
#                   extreme prejudice for removal
                    eval "kill -KILL $tokens[1]"
                else
#                   try to get them to reload for 
                    eval "kill -HUP $tokens[1]"
                fi
            fi
        fi
    done
    /sbin/modprobe -r `/sbin/lsmod | grep '^streams' | cut -f1 '-d '`
    ( /sbin/lsmod | grep -q '^streams' ) || exit 0
    echo "Error: modules may be still loaded" >&2
    /sbin/lsmod | grep '^streams' >&2
    echo "you may have to reboot" >&2
    exit 1
fi

%if %{BUILD_modules}
%files %{core_name}
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir /%{_lib}/modules/%{kernel_version}/%{base}
%attr(644,root,root) /%{_lib}/modules/%{kernel_version}/modules.%{base}
/%{_lib}/modules/%{kernel_version}/%{base}/*
%{_includedir}/streams/%{kernel_version}/*
%endif

# ===========================================================================
%package dev

Summary:        %{title} devices.
Group:          System Environment/Base
Conflicts:      %{_conflict}
Requires:       dev >= 3.3
Obsoletes:      %{name}-devs
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description dev
The %{name}-dev package contains the device definitions necessary to run
applications programs and utilities developed for %{title}.

%if %{BUILD_devs}
# ---------------------------------------------------------------------------
%files dev -f %{makedev}
%defattr(-,root,root)
%endif

# ===========================================================================
%package lib

Summary:        %{title} run-time libraries.
Group:          System Environment/Libraries
Prefix:         %{_libdir}
Prefix:         %{_datadir}/locale
Obsoletes:      %{name}-libs
Conflicts:      %{_conflict}
Prereq:         /sbin/ldconfig
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description lib
The %{name}-lib package contains the run-time shared libraries necessary to
run applications programs developed for %{title}.

%pre lib
# ---------------------------------------------------------------------------
if [ $1 = 0 ] ; then
#   this is supposed to be a fresh install
#   see if there are any libraries hanging around from a non-rpm install
    old_libs="`( /sbin/ldconfig -p | grep '\<lib.*%{libname}\> | cut '-d ' -f4 ) 2>/dev/null`"
    if [ -n "$old_libs" ] ; then
#       old libraries hanging around, delete them
        echo "warning: Deleting old non-rpm libraries $old_libs" >&2
        rm -f $old_libs
    fi
else
    :
#   upgrade, let RPM do its job
fi

%post lib
# ---------------------------------------------------------------------------
# do a load config
if [ $1 = 0 ] ; then
#   end of fresh install, do /sbin/ldconfig
    /sbin/ldconfig >/dev/null
else
    :
#   upgrade, wait for old postun
fi

%preun lib
# ---------------------------------------------------------------------------
# noting really

%postun lib
# ---------------------------------------------------------------------------
# whether complete removal or upgrade, do a load config
/sbin/ldconfig

%if %{BUILD_libs}
%files lib
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.so*
%{_libdir}/*.la
#%{_datadir}/locale/*
%endif

# ===========================================================================
%package doc

Summary:        %{title} manpages and docs.
Group:          Documentation
Prefix:         %{_docdir}
Prefix:         %{_infodir}
Conflicts:      texinfo < 3.11
Conflicts:      %{_conflict}-doc
Conflicts:      %{_conflict}-docs
Obsoletes:      %{name}-docs
Prereq:         /sbin/install-info
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description doc
The %{name}-doc package contains html documentation for the development of
%{title} applications, modules and drivers.

%pre doc
# ---------------------------------------------------------------------------
# nothing really

%post doc
# ---------------------------------------------------------------------------
if [ -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%preun doc
# ---------------------------------------------------------------------------
if [ "$1" = 0 -a -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%postun doc
# ---------------------------------------------------------------------------
# nothing really

%if %{BUILD_tools}
%files doc
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if 0
%doc ABOUT-NLS
%endif
%doc AUTHORS ChangeLog COPYING INSTALL NEWS README THANKS
%doc doc/manual
%{_infodir}/*
%endif

# ===========================================================================
%package devel

Summary:        %{title} headers, libs and docs.
Group:          Development/System
Prefix:         %{_libdir}
Prefix:         %{_includedir}
Prefix:         %{_mandir}
#Requires:       %{name}-lib = %{epoch}:%{version}-%{fullrelease}
#Requires:       %{name}-doc = %{epoch}:%{version}-%{fullrelease}
Conflicts:      %{_conflict}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description devel
The %{name}-devel package contains library archives for static compilation,
and headers files to develop %{title} modules and drivers.  This
also includes the header files and static libraries required to compile
%{title} applications programs.  In addition it contains all of the
manual pages necessary for developing %{title} application programs.

%pre devel
# ---------------------------------------------------------------------------
# let rpm do its job

%post devel
# ---------------------------------------------------------------------------
# let rpm do its job

%preun devel
# ---------------------------------------------------------------------------
# let rpm do its job

%postun devel
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{BUILD_tools}
%files devel
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%if %{BUILD_libs}
%{_libdir}/*.a
#%endif
%{_includedir}/streams/*.h
%{_includedir}/streams/sys/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.macros
%ghost %{_mandir}/man2/*
#%if %{BUILD_libs}
%{_mandir}/man3/*
#%endif
%{_mandir}/man4/*
%{_mandir}/man5/*
%{_mandir}/man7/*
%{_mandir}/man9/*
%endif

# ===========================================================================
%package source

Summary:        %{title} source package.
Group:          Development/System
Prefix:         %{_usrsrc}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description source
The %{name}-source package contains the source code necessary for building the
%{name} release.  It includes the autoconf configuration utilities necessary
to create and distribute this rpm.

%pre source
# ---------------------------------------------------------------------------
# let rpm do its job

%post source
# ---------------------------------------------------------------------------
# let rpm do its job

%preun source
# ---------------------------------------------------------------------------
# let rpm do its job

%postun source
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
%files source
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir %{_usrsrc}/%{name}-%{version}-%{fullrelease}
%{_usrsrc}/%{name}
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/*
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/.rpm*
%endif

# ===========================================================================
%package util

Summary:        %{title} admin utilities.
Group:          System Environment/Base
Prefix:         %{_bindir}
Prefix:         %{_sbindir}
Prefix:         %{_mandir}
Prefix:         %{_libexecdir}
Requires:       %{name}-lib = %{epoch}:%{version}-%{fullrelease}
Conflicts:      %{_conflict}
Obsoletes:      %{name}-utils
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description util
The %{name}-util package provides adminstrative and configuration test
utilities and commands associated with the %{title} package.

%pre util
# ---------------------------------------------------------------------------
if [ $1 = 0 ]; then
# this is a fresh install, look for old non-rpm tools
    if [ -n "`which fattach 2>/dev/null`" ]; then
        for prog in ldltest strtst thrtst timetst fattach fdetach ldlconfig oc pafd psfd rwf streams strmakenodes
        do
            location="`which $prog 2>/dev/null`"
            while [ -n "$location" -a -x "$location" ] ; do
                eval "rm -f $location"
                location="`which $prog 2>/dev/null`"
            done
        done
    fi
# old non-rpm distro puts some man pages in the wrong place, clean them out
    if [ -f /usr/man/man3/fattach.3 ] ; then
        rm -f /usr/man/man3/fattach.3 2>/dev/null
        rm -f /usr/man/man3/detach.3 2>/dev/null
        rm -f /usr/man/man3/isastream.3 2>/dev/null
        rmdir -p /usr/man/man3 2>/dev/null
        rm -f /usr/man/man8/fattach.8 2>/dev/null
        rm -f /usr/man/man8/fdetach.8 2>/dev/null
        rmdir -p /usr/man/man8 2>/dev/null
        rm -f /usr/man/man9/connld.9 2>/dev/null
        rm -f /usr/man/man9/fifo.9 2>/dev/null
        rm -f /usr/man/man9/pipemod.9 2>/dev/null
        rmdir -p /usr/man/man9 2>/dev/null
        rmdir -p /usr/man 2>/dev/null
    fi
else
# upgrade, let rpm do its job
    :
fi

%post util
# ---------------------------------------------------------------------------
# let rpm do its job

%preun util
# ---------------------------------------------------------------------------
# let rpm do its job

%postun util
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{BUILD_tools}
%files util
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_bindir}/*
%{_sbindir}/*
%{_libexecdir}/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.macros
%{_mandir}/man1/*
%{_mandir}/man8/*
%endif

# ===========================================================================
%changelog
# ---------------------------------------------------------------------------
# $Log: streams.spec.in,v $
# Revision 0.9.2.44  2004/12/17 04:02:43  brian
# - Improving spec files.
#
# Revision 0.9.2.12  2004/12/17 04:02:43  brian
# - Improving spec files.
#
# Revision 0.9.2.11  2004/12/15 15:25:34  brian
# - avoid undefined debug macro
#
# Revision 0.9.2.10  2004/12/15 14:59:07  brian
# - Update RPM build to build multiple distribution binary RPMs from a single SRPM.
#

* Mon Dec 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.9  2004/12/13 10:52:09  brian
- Removed vendor specific headers. (Define these in your .rpmmacros file.)
- Added both .xpm and .gif icons into binary packages.
- Fixed extrainfo empty macro body warning once and for all.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.8  2004/11/24 14:30:45  brian
- Changes for multiple rpm distro builds.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.7  2004/11/24 11:27:50  brian
- Changes to accomodate %_vendor macro for multiple distribution rpm builds.

* Mon Nov  8 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.6  2004/11/08 10:36:48  brian
- Removed nested ifs.

* Sat Nov  6 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/11/06 10:21:03  brian
- Updates to handle full versioned symbols.

* Wed Oct 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/10/13 01:49:05  brian
- Updates spec changelogs.

* Tue Aug 31 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/08/31 04:49:04  brian
- Avoid empty macro body error on extrainfo.

* Sun Aug 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/08/22 07:28:53  brian
- Converted to shared common files.

* Sun Aug 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/08/22 06:17:38  brian
- Checkin on new working branch.

* Tue Aug 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.32  2004/08/17 11:45:25  brian
- Upgraded spec files.

* Sat Aug  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.31  2004/08/07 11:00:54  brian
- More rational provides structure.

* Sun Jul 11 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.30  2004/07/11 08:47:49  brian
- Correct symbolic links again.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.29  2004/06/28 19:40:26  brian
- Do not package up debug files on recent rpmbuild.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.28  2004/06/28 11:33:11  brian
- Support binary release.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.27  2004/06/28 09:01:17  brian
- Updated spec files.

* Sun Jun 27 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.26  2004/06/27 03:06:30  brian
- Removed XTI/TLI and Linux Networking.

* Mon Jun 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.25  2004/06/21 18:08:36  brian
- RPM 4.2.1 and up set default epoch to 0.

* Sun Jun 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.24  2004/06/20 20:22:19  brian
- FC1 rpm 4.2.1 can't handle internal Requires.

* Tue May 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.23  2004/05/25 06:52:50  brian
- Removed double listing on source directory.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.22  2004/05/24 20:49:16  brian
- Don't copy sources if source package not built.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.21  2004/05/24 12:48:45  brian
- Updated build process.

* Sun May 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.20  2004/05/23 08:40:54  brian
- Corrected info install.

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.19  2004/05/20 18:20:31  brian
- Hooks for separate kernel and user build.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.18  2004/05/16 19:18:47  brian
- Updated info install.

* Fri May 14 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.17  2004/05/14 12:14:27  brian
- corrected logic for including test files

* Fri May 14 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.16  2004/05/14 07:59:48  brian
- Updated xns, tli, inet, xnet and documentation.

* Wed May  5 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.15  2004/05/08 19:21:12  brian
- Commenting out unused structure members.

* Sun Apr 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.14  2004/04/25 07:42:33  brian
- Updated change log.

* Sun Apr 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.13  2004/04/25 07:41:29  brian
- Updated for new build process and autoconf 2.59.
- Copy device lists instead of regenerating them.
- Only install .refs and .macros files when manpages are not cooked.
- Install texinfo and distributed prebuilt pdf manuals into doc directory.
- Updated changelog.

* Sat Apr 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.12  2004/04/24 21:27:04  brian
- Updates for new autoconf and new build process.

* Fri Apr 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.11  2004/04/23 10:04:42  brian
- Touched up spec file for latest build.

* Fri Apr 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.10  2004/04/23 04:02:06  brian
- Updated build system.

* Thu Apr 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.9  2004/04/22 12:08:30  brian
- Added kernel symbol versions.

* Sat Apr 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.8  2004/04/17 08:17:50  brian
- Working up alpha relesae package.

* Tue Mar 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.7  2004/03/16 08:01:17  brian
- Working up documentation.

* Thu Mar  4 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.6  2004/03/04 23:15:46  brian
- working up release directory
- updated base files
- added manual pages
- added texi manual files
- added (rough) sc module
- added inet and libxnet test programs
- added utility programs and user commands

* Mon Mar  1 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.5  2004/03/01 11:32:21  brian
- working up release directory
- collapsed compatibility modules into single file

* Mon Mar  1 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.4  2004/03/01 09:59:42  brian
- working up release directory
- added libraries (libstreams, libxnet)
- internationalization

* Mon Mar  1 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.3  2004/03/01 07:45:13  brian
- First successful build.

* Mon Mar  1 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.2  2004/03/01 06:26:59  brian
- Working up release directory.

* Tue Feb 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.1.1.1  2004/02/24 10:52:44  brian
- Linux Fast STREAMS release.

* Tue Feb 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/02/24 10:52:44  brian
- Working up LfS release.

* Tue Feb 24 2004 Brian Bidulock <bidulock@openss7.org>
- Began this RPM build for Linux Fast STREAMS.
- Borrowed heavily from the OpenSS7 LiS build.

# vim: ft=spec sw=4 et
