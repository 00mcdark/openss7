% -*- texinfo -*- vim: ft=texinfo noautoindent nocindent nosmartindent
% =========================================================================
%
% @(#) $Id: porting.texi,v 0.9.2.20 2006/12/29 12:18:34 brian Exp $
%
% =========================================================================
%
% Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
% Copyright (C) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
%
% All Rights Reserved.
%
% Permission is granted to make and distribute verbatim copies of this
% manual provided the copyright notice and this permission notice are
% preserved on all copies.
%
% Permission is granted to copy and distribute modified versions of this
% manual under the conditions for verbatim copying, provided that the
% entire resulting derived work is distributed under the terms of a
% permission notice identical to this one
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2006/12/29 12:18:34 $ by $Author: brian $
%
% =========================================================================

\input texinfo
@setfilename porting.info
@include texi/args.texi
@set MANUAL_TITLE Linux Fast-STREAMS
@set MANUAL_TYPE Porting Guide
@settitle @value{MANUAL_TITLE}

@dircategory STREAMS
@direntry
* Porting: (porting).		STREAMS Porting Guide
@end direntry

@defindex op

@include texi/args.texi
@set MANUAL_TITLE Linux Fast-STREAMS
@set MANUAL_TYPE Porting Guide

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file provides the @value{MANUAL_TYPE} for @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, of the
@cite{@value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version @value{PACKAGE_VERSION}
Release @value{PACKAGE_RELEASE}.

Copyright @copyright{} 2001-2005  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

@ignore
Permission is granted to process this file through Tex and print the results,
provided the printed document carries copying permission notice identical to
this one except for the removal of this paragraph (this paragraph not being
relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided the entire resulting
derived work is distributed under the terms of a permission notice identical
to this one.

Permission is granted to copy and distribute translations of this manual into
another language, under the above conditions for modified versions.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE Linux Fast-STREAMS
@set MANUAL_TYPE Porting Guide

@ignore
@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@end ignore
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Package @value{PACKAGE}-@value{VERSION}
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2005  OpenSS7 Corporation <@uref{http://www.openss7.com/}> @*
Copyright @copyright{} 1997-2000  Brian F. G. Bidulock <@email{bidulock@@openss7.org}> @*
All Rights Reserved. @*

@noindent
Published by OpenSS7 Corporation @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
This is texinfo edition @value{PACKAGE_RELEASE} of the @value{MANUAL_TITLE}
documentation, and is consistent with @value{PACKAGE_NAME} @value{PACKAGE_VERSION}.
This manual was developed under the @uref{http://www.openss7.org/, OpenSS7
Project} and was funded in part by
@uref{http://www.openss7.com/, OpenSS7 Corporation}.

@noindent
Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

@noindent
Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided that the entire resulting
derived work is distributed under the terms of a permission notice identical
to this one.

@noindent
Permission is granted to copy and distribute translations of this manual into
another language, under the same conditions as for modified versions.

@vskip 0pt
@end titlepage
@page

@c Define an index of authors.
@defindex au

@defcodeindex mp
@include texi/macros.texi
@include texi/versions.texi

@ifnottex
@node Top
@top @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@unnumbered About This Manual
This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, of @cite{The
@value{MANUAL_TITLE} @value{MANUAL_TYPE}}, for Version @value{PACKAGE_VERSION}
release @value{PACKAGE_RELEASE} of the @value{PACKAGE_TITLE} package.
@end ifnottex

@menu
* Acknowledgements::
* Overview::
* Porting::
* Development::
* Copying::                     Copying information for this Software
* Documentation License::       Copying information for this Manual
* Indices::

 --- The Detailed Node Listing ---

Acknowledgements

* Sponsors::                    Sponsors of Linux Fast-STREAMS
* Contributors::                Contributors to Linux Fast-STREAMS

Overview

* Introduction::                An Introduction to Linux Fast-STREAMS
* Concepts::                    STREAMS Concepts

Porting

* Porting from SVR 4.2 MP::
* Porting from AIX 5L Version 5.1::
* Porting from HP-UX 11.0i v2::
* Porting from OSF/1 1.2/Digital UNIX::
* Porting from UnixWare 7.1.3 (OpenUnix 8)::
* Porting from Solaris 9/SunOS 5.9::
* Porting from SUPER-UX::
* Porting from UXP/V::
* Porting from Linux STREAMS (LiS) 2.18.4::

Development

* Portable STREAMS Drivers and Modules::
@end menu

@c --------------------------------------------------------------------------

@node Acknowledgements
@unnumbered Acknowledgements
@cindex credits

@include texi/funding.texi

@ignore
@menu
* Sponsors::                    Sponsors of Linux Fast-STREAMS
* Contributors::                Contributors to Linux Fast-STREAMS
@end menu

@node Sponsors
@unnumberedsec Sponsors of Linux Fast-STREAMS
@cindex sponsors

Funding for completion of Linux Fast-STREAMS was provided by:

OpenSS7 Corporation

Additional funding for The OpenSS7 Project was provided by:

@node Contributors
@unnumberedsec Contributors to Linux Fast-STREAMS
@cindex contributors

The primary contributor to Linux Fast-STREAMS is Brian F. G. Bidulock.

@node Overview
@chapter Overview of Linux Fast-STREAMS
@cindex overview
@menu
* Introduction::                An Introduction to Linux Fast-STREAMS
* Concepts::                    STREAMS Concepts
@end menu

This manual documents how to develop and port STREAMS drivers and modules for
Linux Fast-STREAMS.
@end ignore

@node Introduction
@section Introduction
@cpindex introduction

@node Concepts
@section Concepts
@cpindex concepts

@node Porting
@chapter Porting
@cindex porting

Although each of the manual pages of supported functions and structures
provides compatiblity and porting information, this document attempts to
gather together pertinent information concerning porting from various UNIX
operating system supporting STREAMS.

The porting information is organized by the operating system from which
porting is being attempted.  Note that, aside from configuration details, any
system not listed here that is based on SVR 4.2 MP or on a another of the
implementations, should start with that implementation's portability
information.

Porting information is organized into sections as follows:

@menu
* Porting from SVR 4.2 MP::
* Porting from AIX 5L Version 5.1::
* Porting from HP-UX 11.0i v2::
* Porting from OSF/1 1.2/Digital UNIX::
* Porting from UnixWare 7.1.3 (OpenUnix 8)::
* Porting from Solaris 9/SunOS 5.9::
* Porting from SUPER-UX::
* Porting from UXP/V::
* Porting from Linux STREAMS (LiS) 2.18.4::
* Development::
@end menu

@section Base Functions
@cindex Base Functions

@cite{@value{PACKAGE_TITLE}} provides a complete set of base functions and utilities for
@dfn{STREAMS} as defined in the @cite{SVR 4 Programmer's Guide -- STREAMS}.  These are the base set
of functions with which the @dfn{STREAMS} module and driver writer is familiar.

@subsection Message Functions
@cindex message functions

Following are the basic @dfn{STREAMS} message functions.  Most portability issues concerning
@dfn{STREAMS} message functions have to do with allocation, alignment of the data buffer, priority
of allocation, disposition of unused message blocks, handling of @var{NULL} pointer arguments,
buffer callback and message free routine handling.

@ftable @asis

@item @manref{@b{adjmsg}(9)}
Trim bytes from the front or back of a @cite{STREAMS} message.  Trimmed message blocks are not freed
but simply have their @var{b_wptr} set to their @var{b_rptr}.

@item @manref{@b{allocb}(9)}
Allocate a @cite{STREAMS} message and data block.  This function also accepts the @var{BPRI_WAITOK}
flag which allocates all parts of the message 3-tuple using @var{KM_SLEEP} allocation.  Allocation
of less than @var{FASTBUF} bytes will allocate a data buffer of size @var{FASTBUF}.  @var{FASTBUF}
sized data buffers are internal to the data block, and message block, data block and data buffer
3-types are allocated as a unit for speed.  Data buffers are allocated on a memory boundary that is
the same as the next power of two sized buffer.

@item @manref{@b{bufcall}(9)}
Install a buffer callback.  @cite{@value{PACKAGE_TITLE}} provides the additional assurance that the
callback routine will not be called until the caller returns from the calling function block.

@item @manref{@b{copyb}(9)}
Copy a @cite{STREAMS} message block.  A @var{NULL} pointer passed as an argument will panic the
kernel.

@item @manref{@b{copymsg}(9)}
Copy a @cite{STREAMS} message.  Performs a block-wise copy using @manpage{@b{copyb}(9)}.

@item @manref{@b{datamsg}(9)}
Tests a @cite{STREAMS} message type for data.

@item @manref{@b{dupb}(9)}
Duplicate a @cite{STREAMS} message block.  @cite{@value{PACKAGE_TITLE}} uses a global lock to
protect the @var{db_refs} member of the data block.

@item @manref{@b{dupmsg}(9)}
Duplicate a @cite{STREAMS} message.  Performs a block-wise duplication using @manpage{@b{dupb}(9)}.

@item @manref{@b{esballoc}(9)}
Allocate a @cite{STREAMS} message and data block with a caller supplied data buffer.  This is the
most portable method of allocating a data buffer that requires some particular alignment.  The
callback free routine is inherently unsafe when the function is provided by a module and modules are
permitted to unload.

@item @manref{@b{freeb}(9)}
Frees a @cite{STREAMS} message block.

@item @manref{@b{freemsg}(9)}
Frees a @cite{STREAMS} message.  Performs a block-wise free using @manpage{@b{freeb}(9)}.

@item @manref{@b{linkb}(9)}
Link a message block to a @cite{STREAMS} message.  Panics if either argument is @var{NULL}.

@item @manref{@b{msgdsize}(9)}
Calculate the size of the data in a @cite{STREAMS} message.  Accepts a @var{NULL} pointer, in which
case the function returns zero (@samp{0}).

@item @manref{@b{msgpullup}(9)}
Pull up bytes in a @cite{STREAMS} message.  Might allocate a new message to satisfy the request.

@item @manref{@b{pcmsg}(9)}
Test a data block message type for priority control.

@item @manref{@b{pullupmsg}(9)}
Pull up the bytes in a @cite{STREAMS} message.  Does not allocate a new initial message block, but
may allocate a new initial data block and data buffer.  The pointers @samp{mp->b_wptr} and
@samp{mp->b_rptr} are potentially invalidated by the call.

@item @manref{@b{rmvb}(9)}
Remove a message block from a @cite{STREAMS} message.  The message block must exist in the message.
Passing @var{NULL} pointers will panic the kernel.

@item @manref{@b{testb}(9)}
Test if a @cite{STREAMS} message can be allocated.  Because the test is not atomic, when this
function returns true, a subsequent call to @manpage{@b{allocb}(9)} could still fail.

@item @manref{@b{unbufcall}(9)}
Remove a @cite{STREAMS} buffer callback.  @cite{@value{PACKAGE_TITLE}} provides the @cite{SVR 4}
assurance that before the call returns the callback function will either have been cancelled or
execution of the callback will be complete.

@item @manref{@b{unlinkb}(9)}
Unlink a message block from a @cite{STREAMS} message.

@end ftable

@subsection UP Queue Functions
@cindex UP queue functions

Single processor queue functions are those functions that existed in @cite{SVR 4} before
multi-processor support was added in @cite{SVR 4.1 MP} and @cite{SVR 4.2}.  Most portability issues
associated with these functions concern queue @var{q_next} pointer derefencing and freezing of
Streams when directly manipulating queues.  @cite{@value{PACKAGE_TITLE}} provides the added
assurance that @var{q_next} pointers can always be reliably dereferenced from within a queue put,
service, open, close or syncrhonized callback procedure.

@ftable @manref

@item @b{backq}(9)
Find the upstream or downstream queue.  @cite{@value{PACKAGE_TITLE}} protects this pointer
dereference when called from within a put, service, open, close or callback procedure.

@item @b{bcanput}(9)
Test flow control on a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} follows @cite{SVR 4} semantics for queue enabling, queue flags and
backenabling.

@item @b{canenable}(9)
Test whether a @cite{STREAMS} message queue can be scheduled.
This only effects normal priority messages as per @cite{SVR 4} semantics.

@item @b{enableok}(9)
Allow a @cite{STREAMS} message queue to be scheduled.
This only effects normal priority messages as per @cite{SVR 4} semantics.

@item @b{flushband}(9)
Flushes band @cite{STREAMS} messages from a message queue. @cite{@value{PACKAGE_TITLE}} provides a
mechanism that efficiently flushes large numbers of messages from a queue: messages are unlinked
from the queue and freed later by the @dfn{STREAMS} scheduler.

@item @b{flushq}(9)
Flushes messages from a @cite{STREAMS} message queue. @cite{@value{PACKAGE_TITLE}} provides a
mechanism that efficiently flushes large numbers of messages from a queue: messages are unlinked
from the queue and freed later by the @dfn{STREAMS} scheduler.

@item @b{getq}(9)
Gets a message from a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} follows @cite{SVR 4} semantics for queue enabling, queue flags and
backenabling.

@item @b{insq}(9)
Inserts a message into a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} recommends, but does not require, that the Stream be first frozen by
the caller with a call to @manpage{@b{freezestr}(9)}.

@item @b{noenable}(9)
Disable a @cite{STREAMS} message queue from being scheduled.
This only effects normal priority messages as per @cite{SVR 4} semantics.

@item @b{OTHERQ}(9)
Return the other queue of a @cite{STREAMS} queue pair.

@item @b{putbq}(9)
Put a message back on a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} follows @cite{SVR 4} semantics for queue enabling, queue flags and
backenabling.

@item @b{putctl}(9)
Put a control message on a @cite{STREAMS} message queue.

@item @b{putctl1}(9)
Put a 1 byte control message on a @cite{STREAMS} message queue.

@item @b{putq}(9)
Put a message on a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} follows @cite{SVR 4} semantics for queue enabling, queue flags and
backenabling.

@item @b{qenable}(9)
Schedules a @cite{STREAMS} message queue service routine.

@item @b{qreply}(9)
Replies to a message from a @cite{STREAMS} message queue.

@item @b{qsize}(9)
Return the number of messages on a queue.

@item @b{RD}(9)
Return the read queue of a @cite{STREAMS} queue pair.  Although @cite{@value{PACKAGE_TITLE}}
accepts a read queue pointer as an argument, doing so could panic some implementations.
The macro @manpage{@b{_RD}(9)} is also provided that has this stricter behavior.

@item @b{rmvq}(9)
Remove a message from a @cite{STREAMS} message queue.
@cite{@value{PACKAGE_TITLE}} recommends, but does not require, that the Stream be first frozen by
the caller with a call to @manpage{@b{freezestr}(9)}.

@item @b{SAMESTR}(9)
Test for @cite{STREAMS} pipe or fifo.

@item @b{WR}(9)
Return the write queue of a @cite{STREAMS} queue pair.  Although @cite{@value{PACKAGE_TITLE}}
accepts a write queue pointer as an argument, doing so could panic some implementations.
The macro @manpage{@b{_WR}(9)} is also provided that has this stricter behavior.

@end ftable

@subsection MP Queue Functions
@cindex MP queue functions

@ftable @asis

@item @b{bcanputnext}(9)
Test flow control on a message queue.

@item @b{canputnext}(9)
Test flow control on a message queue.

@item @b{freezestr}(9)
Freeze the state of a stream queue.

@item @b{put}(9)
Invoke the put procedure for a @cite{STREAMS} module or driver with a @cite{STREAMS} message.

@item @b{putnext}(9)
Put a message on the downstream @cite{STREAMS} message queue.

@item @b{putnextctl1}(9)
Put a 1 byte control message on the downstream @cite{STREAMS} message queue.

@item @b{putnextctl}(9)
Put a control message on the downstream @cite{STREAMS} message queue.

@item @b{qprocsoff}(9)
Disables @cite{STREAMS} message queue processing for multi-processing.

@item @b{qprocson}(9)
Enables @cite{STREAMS} message queue processing for multi-processing.

@item @b{strqget}(9)
Gets information about a @cite{STREAMS} message queue.

@item @b{strqset}(9)
Sets attributes of a @cite{STREAMS} message queue.

@item @b{unfreezestr}(9)
Thaw the state of a stream queue.

@end ftable

@subsection DDI/DKI Functions
@cindex DDI/DKI functions

@ftable @asis
@item @b{kmem_alloc}(9)
allocate kernel memory
@item @b{kmem_free}(9)
deallocates kernel memory
@item @b{kmem_zalloc}(9)
allocate and zero kernel memory
@item @b{cmn_err}(9)
print a kernel command error
@item @b{bcopy}(9)
copy byte strings
@item @b{bzero}(9)
zero a byte string
@item @b{copyin}(9)
copy user data in from user space to kernel space
@item @b{copyout}(9)
copy user data in from kernel space to user space
@item @b{delay}(9)
postpone the calling process for a number of clock ticks
@item @b{drv_getparm}(9)
driver retrieve kernel parameter
@item @b{drv_hztomsec}(9)
convert kernel tick time between microseconds or milliseconds
@item @b{drv_htztousec}(9)
convert kernel tick time between microseconds or milliseconds
@item @b{drv_msectohz}(9)
convert kernel tick time between microseconds or milliseconds
@item @b{drv_priv}(9)
check if the current process is priviledged
@item @b{drv_usectohz}(9)
convert kernel tick time between microseconds or milliseconds
@item @b{drv_usecwait}(9)
delay for a number of microseconds
@item @b{min}(9)
determine the minimum of two integers
@item @b{max}(9)
determine the maximum of two integers
@item @b{getmajor}(9)
get the internal major device number for a device
@item @b{getminor}(9)
get the extended minor device number for a device
@item @b{makedevice}(9)
create a device from a major and minor device numbers
@item @b{strlog}(9)
pass a message to the @cite{STREAMS} logger
@item @b{timeout}(9)
start a timer
@item @b{untimeout}(9)
stop a timer
@end ftable

@ftable @asis
@item @b{mknod}(9)
make block or character special files
@item @b{mount}(9)
mount and unmount filesystems
@item @b{umount}(9)
mount and unmount filesystems
@item @b{unlink}(9)
remove a file
@end ftable

@subsection Some Common Extension Functions
@cindex some common extension functions

@ftable @asis
@item @b{linkmsg}(9)
link a message block to a @cite{STREAMS} message
@item @b{putctl2}(9)
put a two byte control message on a @cite{STREAMS} message queue
@item @b{putnextctl2}(9)
put a two byte control message on the downstream @cite{STREAMS} message queue
@item @b{weldq}(9)
weld two (or four) queues together
@item @b{unweldq}(9)
unweld two (or four) queues
@end ftable

@subsection Some Internal Functions
@cindex some internal functions

@ftable @asis
@item @b{allocq}(9)
allocate a @cite{STREAMS} queue pair
@item @b{bcanget}(9)
test for message arrival on a band on a stream
@item @b{canget}(9)
test for message arrival on a stream
@item @b{freeq}(9)
deallocate a @cite{STREAMS} queue pair
@item @b{qattach}(9)
attach a module onto a @cite{STREAMS} file
@item @b{qclose}(9)
close a @cite{STREAMS} module or driver
@item @b{qdetach}(9)
detach a module from a @cite{STREAMS} file
@item @b{qopen}(9)
call a @cite{STREAMS} module or driver open routine
@item @b{setq}(9)
set sizes and procedures associated with a @cite{STREAMS} message queue
@end ftable

@subsection Some Oddball Functions
@cindex some oddball functions

@ftable @asis
@item @b{appq}(9)
append one @cite{STREAMS} message after another
@item @b{esbbcall}(9)
install a buffer callback for an extended @cite{STREAMS} message block
@item @b{isdatablk}(9)
test a @cite{STREAMS} data block for data type
@item @b{isdatamsg}(9)
test a @cite{STREAMS} data block for data type
@item @b{kmem_zalloc_node}(9)
@item @b{msgsize}(9)
calculate the size of the message blocks in a @cite{STREAMS} message
@item @b{qcountstrm}(9)
add all counts on all @cite{STREAMS} message queues in a stream
@item @b{xmsgsize}(9)
calculate the size of message blocks in a @cite{STREAMS} message
@end ftable


@page
@node Porting from SVR 4.2 MP
@section Porting from SVR 4.2 MP
@cindex Porting from SVR 4.2 MP

This section captures portability information for SVR 4.2 MP based systems.
If the operating system from which you are porting more closely fits one of
the other portability sections, please see that section.

@menu
* Differences from SVR 4.2 MP::
* Commonalities with SVR 4.2 MP::
* Compatibility functions for SVR 4.2 MP::
* Configuration ala SVR 4.2 MP::
@end menu

@node Differences from SVR 4.2 MP
@subsection Differences from SVR 4.2 MP
@cindex differences from svr 4.2 mp

@b{Linux Fast-STREAMS} has very few differences from @cite{SVR 4.2 MP}.  Not all
@cite{SVR 4.2 MP} functions are implemented in the base @b{Linux Fast-STREAMS}
kernel modules.  Some functions are included in the @cite{SVR 4.2 MP}
compatibility module, @file{streams-svr4compat.o}.

@menu
* Priority Levels::
* Basic Locks::
@end menu

@node Priority Levels
@subsubsection Priority Levels
@cindex priority levels

@b{Linux} has a different concept of priority levels than @cite{SVR 4.2 MP}.
@b{Linux} has basically 4 priority levels as follows:

@enumerate
@item Preemptive

At this priority level, software and hardware interrupts are enabled and the
kernel is executing with premption enabled.  This means that the currently
executing kernel thread could preempt and sleep in favor of another thread of
kernel execution.

This priority level only exists on preemptive (mostly 2.6) kernels.

@item Non-Preemptive

At this priority level, software and hardware interrupts are enabled and the
kernel is executing with preemption disabled.  This means that the currently
executing kernel thread will only be interrupted by sofware or hardware
interrupts.

This priority level exists in all kernels.

@item Software Interrupts Disabled

At this priority level, software interrupts are disabled and the kernel is
executing with preemption disabled.  This means that the currently executing
kernel thread will only be interrupted by hardware interrupts.

This is the case when the executing thread is processing a software interrupt,
or when the currently executing thread has disabled software interrupts.

This priority level exists in all kernels.

@item Interrupt Service Routines Disabled

At this priority level, hardware interrupts are disabled and the kernel is
executing with preemption disabled.  This means that the currently executing
kernel thread will not be interrupted.

This is the case when the executing thread is processing a hardware interrupt,
or when the currently executing thread has disabled hardware interrupts.

This priority level exists in all kernels.

@end enumerate

@node Basic Locks
@subsubsection Basic Locks
@cindex basic locks

@node Commonalities with SVR 4.2 MP
@subsection Commonalities with SVR 4.2 MP
@cindex commonalities with svr 4.2 mp

@node Compatibility functions for SVR 4.2 MP
@subsection Compatibility functions for SVR 4.2 MP
@cindex compatibility functions for svr 4.2 mp

@ftable @asis
@item @b{ATOMIC_INT_ADD}(9)
add an integer value to an atomic integer
@item @b{ATOMIC_INT_ALLOC}(9)
allocate and initalize an atomic integer
@item @b{ATOMIC_INT_DEALLOC}(9)
deallocate an atomic integer
@item @b{ATOMIC_INT_DECR}(9)
decrement and test an atomic integer
@item @b{ATOMIC_INT_INCR}(9)
increment an atomic integer
@item @b{ATOMIC_INT_INIT}(9)
initialize an atomic integer
@item @b{ATOMIC_INT_READ}(9)
read an atomic integer
@item @b{ATOMIC_INT_SUB}(9)
subtract and integer value from an atomic integer
@item @b{ATOMIC_INT_WRITE}(9)
write an integer value to an atomic integer
@item @b{itimeout}(9)
perform a timeout at an interrupt level
@item @b{lbolt}(9)
time in ticks since reboot
@item @b{LOCK}(9)
lock a basic lock
@item @b{LOCK_ALLOC}(9)
allocate a basic lock
@item @b{LOCK_DEALLOC}(9)
deallocate a basic lock
@item @b{LOCK_OWNED}(9)
determine whether a basic lock is head by the caller
@item @b{MPSTR_QLOCK}(9)
release a queue from exclusive access
@item @b{MPSTR_QRELE}(9)
acquire a queue for exclusive access
@item @b{MPSTR_STPLOCK}(9)
acquire a stream head for exclusive access
@item @b{MPSTR_STPRELE}(9)
release a stream head from exclusive access
@item @b{major}(9)
get the internal major number of a device
@item @b{makedev}(9)
make a device number from internal major and minor device numbers
@item @b{minor}(9)
get the internal minor number of a device
@item @b{RW_ALLOC}(9)
allocate and initialize a read/write lock
@item @b{RW_DEALLOC}(9)
deallocate a read/write lock
@item @b{RW_RDLOCK}(9)
acquire a read/write lock in read mode
@item @b{RW_TRYRDLOCK}(9)
attempt to acquire a read/write lock in read mode
@item @b{RW_TRYWRLOCK}(9)
attempt to acquire a read/write lock in write mode
@item @b{RW_UNLOCK}(9)
release a read/write lock
@item @b{RW_WRLOCK}(9)
acquire a read/write lock in write mode
@item @b{sleep}(9)
put a process to sleep
@item @b{SLEEP_ALLOC}(9)
allocate a sleep lock
@item @b{SLEEP_DEALLOC}(9)
deallocate a sleep lock
@item @b{SLEEP_LOCK}(9)
acquire a sleep lock
@item @b{SLEEP_LOCKAVAIL}(9)
determine whether a sleep lock is available
@item @b{SLEEP_LOCKOWNED}(9)
determine whether a sleep lock is held by the caller
@item @b{SLEEP_LOCK_SIG}(9)
acquire a sleep lock
@item @b{SLEEP_TRYLOCK}(9)
attempt to acquire a sleep lock
@item @b{SLEEP_UNLOCK}(9)
release a sleep lock
@item @b{spl0}(9)
set priority level 0
@item @b{spl1}(9)
set priority level 1
@item @b{spl2}(9)
set priority level 2
@item @b{spl3}(9)
set priority level 3
@item @b{spl4}(9)
set priority level 4
@item @b{spl5}(9)
set priority level 5
@item @b{spl6}(9)
set priority level 6
@item @b{spl7}(9)
set priority level 7
@item @b{spl}(9)
set priority level
@item @b{splx}(9)
set priority level x
@item @b{SV_ALLOC}(9)
allocate a basic condition variable
@item @b{SV_BROADCAST}(9)
broadcast a basic condition variable
@item @b{SV_DEALLOC}(9)
deallocate a basic condition variable
@item @b{SV_SIGNAL}(9)
signal a basic condition variable
@item @b{SV_WAIT}(9)
wait on a basic condition variable
@item @b{SV_WAIT_SIG}(9)
interruptible wait on a basic condition variable
@item @b{TRYLOCK}(9)
try to lock a basic lock
@item @b{UNLOCK}(9)
unlock a basic lock
@item @b{vtop}(9)
convert virtual to physical address
@item @b{wakeup}(9)
wake a process
@end ftable

@node Configuration ala SVR 4.2 MP
@subsection Configuration ala SVR 4.2 MP
@cindex configuration ala svr 4.2 mp

@page
@node Porting from AIX 5L Version 5.1
@section Porting from AIX 5L Version 5.1
@cindex Porting from AIX 5L Version 5.1

@menu
* Differences from AIX 5L Version 5.1::
* Commonalities with AIX 5L Version 5.1::
* Compatibility Functions for AIX 5L Version 5.1::
* Configuration ala AIX 5L Version 5.1::
@end menu

@node Differences from AIX 5L Version 5.1
@subsection Differences from AIX 5L Version 5.1
@cindex differences from aix 5l version 5.1

@node Commonalities with AIX 5L Version 5.1
@subsection Commonalities with AIX 5L Version 5.1
@cindex commonalities with aix 5l version 5.1

@node Compatibility Functions for AIX 5L Version 5.1
@subsection Compatibility Functions for AIX 5L Version 5.1
@cindex compatibility functions for aix 5l version 5.1

@ftable @asis
@item @b{putctl2}(9)
put a 2 byte control message on a @cite{STREAMS}
@item @b{splstr}(9)
set or restore priority levels
@item @b{splx}(9)
set or restore priority levels
@item @b{unweldq}(9)
unweld two pairs of streams queues
@item @b{weldq}(9)
weld together two paris of streams queues
@end ftable

@ftable @asis
@item @b{mi_bufcall}(9)
reliable alternative to @b{buffcall}(9)
@item @b{mi_close_comm}(9)
@cite{STREAMS} common minor device close utility
@item @b{mi_next_ptr}(9)
@cite{STREAMS} minor device list traversal
@item @b{mi_open_comm}(9)
@cite{STREAMS} common minor device open utility
@item @b{mi_prev_ptr}(9)
@cite{STREAMS} minor device list traversal
@item @b{str_install}(9)
install a @cite{STREAMS} module or driver
@item @b{wantio}(9)
perform direct I/O from a @cite{STREAMS} driver
@item @b{wantmsg}(9)
provide a filter of wanted messages from a @cite{STREAMS} module
@end ftable

@node Configuration ala AIX 5L Version 5.1
@subsection Configuration ala AIX 5L Version 5.1
@cindex configuration ala aix 5l version 5.1

@page
@node Porting from HP-UX 11.0i v2
@section Porting from HP-UX 11.0i v2
@cindex Porting from HP-UX 11.0i v2

@menu
* Differences from HP-UX 11.0i v2::
* Commonalities with HP-UX 11.0i v2::
* Compatibility Functions for HP-UX 11.0i v2::
* Configuration ala HP-UX 11.0i v2::
@end menu

@node Differences from HP-UX 11.0i v2
@subsection Differences from HP-UX 11.0i v2
@cindex differences from hp-ux 11.0i v2

@node Commonalities with HP-UX 11.0i v2
@subsection Commonalities with HP-UX 11.0i v2
@cindex commonalities with hp-ux 11.0i v2

@node Compatibility Functions for HP-UX 11.0i v2
@subsection Compatibility Functions for HP-UX 11.0i v2
@cindex compatibility functions for hp-ux 11.0i v2

@ftable @asis
@item @b{putctl2}(9)
put a 2 byte control message on a @cite{STREAMS} message queue
@item @b{putnextctl2}(9)
put a 2 byte control message on the downstream @cite{STREAMS} message queue
@item @b{unweldq}(9)
unweld two pairs of streams queues
@item @b{weldq}(9)
weld together two paris of streams queues
@end ftable

@ftable @asis
@item @b{str_install}(9)
install a @cite{STREAMS} module or driver
@item @b{str_uninstall}(9)
uninstall a @cite{STREAMS} module or driver
@item @b{streams_get_sleep_lock}(9)
provide access to the global sleep lock
@item @b{streams_put}(9)
invoke the put procedure for a @cite{STREAMS} module or driver with a @cite{STREAMS} message
@end ftable

@node Configuration ala HP-UX 11.0i v2
@subsection Configuration ala HP-UX 11.0i v2
@cindex configuration ala hp-ux 11.0i v2

@page
@node Porting from OSF/1 1.2/Digital UNIX
@section Porting from OSF/1 1.2/Digital UNIX
@cindex Porting from OSF/1 1.2/Digital UNIX

@menu
* Differences from OSF/1 1.2/Digial UNIX::
* Commonalities with OSF/1 1.2/Digial UNIX::
* Compatibility Functions for OSF/1 1.2/Digial UNIX::
* Configuration ala OSF/1 1.2/Digial UNIX::
@end menu

@node Differences from OSF/1 1.2/Digial UNIX
@subsection Differences from OSF/1 1.2/Digial UNIX
@cindex differences from osf/1 1.2/digial unix

@node Commonalities with OSF/1 1.2/Digial UNIX
@subsection Commonalities with OSF/1 1.2/Digial UNIX
@cindex commonalities with osf/1 1.2/digial unix

@node Compatibility Functions for OSF/1 1.2/Digial UNIX
@subsection Compatibility Functions for OSF/1 1.2/Digial UNIX
@cindex compatibility functions for osf/1 1.2/digial unix

@ftable @asis
@item @b{unweldq}(9)
unweld two pairs of streams queues
@item @b{weldq}(9)
weld together two paris of streams queues
@end ftable

@ftable @asis
@item @b{lbolt}(9)
time in ticks since reboot
@item @b{puthere}(9)
invoke the put procedure for a @cite{STREAMS} module or driver with a @cite{STREAMS} message
@item @b{streams_close_comm}(9)
common minor device close utility
@item @b{streams_open_comm}(9)
common minor device open utility
@item @b{streams_open_ocomm}(9)
common minor device open utility
@item @b{strmod_add}(9)
add a @cite{STREAMS} module
@item @b{strmod_del}(9)
delete a @cite{STREAMS} module or driver from the kernel
@item @b{time}(9)
(undoc)
@end ftable

@node Configuration ala OSF/1 1.2/Digial UNIX
@subsection Configuration ala OSF/1 1.2/Digial UNIX
@cindex configuration ala osf/1 1.2/digial unix

@page
@node Porting from UnixWare 7.1.3 (OpenUnix 8)
@section Porting from UnixWare 7.1.3 (OpenUnix 8)
@cindex Porting from UnixWare 7.1.3 (OpenUnix 8)

@menu
* Differences from UnixWare 7.1.3 (OpenUnix 8)::
* Commonalities with UnixWare 7.1.3 (OpenUnix 8)::
* Compatibility Functions for UnixWare 7.1.3 (OpenUnix 8)::
* Configuration ala UnixWare 7.1.3 (OpenUnix 8)::
@end menu

@node Differences from UnixWare 7.1.3 (OpenUnix 8)
@subsection Differences from UnixWare 7.1.3 (OpenUnix 8)
@cindex differences from unixware 7.1.3 (openunix 8)

@node Commonalities with UnixWare 7.1.3 (OpenUnix 8)
@subsection Commonalities with UnixWare 7.1.3 (OpenUnix 8)
@cindex commonalities with unixware 7.1.3 (openunix 8)

@node Compatibility Functions for UnixWare 7.1.3 (OpenUnix 8)
@subsection Compatibility Functions for UnixWare 7.1.3 (OpenUnix 8)
@cindex compatibility functions for unixware 7.1.3 (openunix 8)

The following compatibility functions are in addition to all SVR 4.2
compatibility functions.

@ftable @asis
@end ftable

@ftable @asis
@item @b{allocb_physreq}(9)
allocate a @cite{STREAMS} message and data block
@item @b{emajor}(9)
get the external (real) majore device number from the device number
@item @b{eminor}(9)
get the external extended minor device number from the device number
@item @b{etoimajor}(9)
convert an external major device number to an internal major device number
@item @b{getemajor}(9)
get the external (real) majore device number
@item @b{geteminor}(9)
get the external minor device number
@item @b{itoemajor}(9)
convert an internal major device number to an external major device number
@item @b{msgphysreq}(9)
cause a message block to meet physical requirements
@item @b{msgpullup_physreq}(9)
pull up bytes in a @cite{STREAMS} message
@item @b{msgscgth}(9)
(undoc)
@item @b{strioccall}(9)
(undoc)
@end ftable

@node Configuration ala UnixWare 7.1.3 (OpenUnix 8)
@subsection Configuration ala UnixWare 7.1.3 (OpenUnix 8)
@cindex configuration ala unixware 7.1.3 (openunix 8)

@page
@node Porting from Solaris 9/SunOS 5.9
@section Porting from Solaris 9/SunOS 5.9
@cindex Porting from Solaris 9/SunOS 5.9

@menu
* Differences from Solaris 9/SunOS 5.9::
* Commonalities with Solaris 9/SunOS 5.9::
* Compatibility Functions for Solaris 9/SunOS 5.9::
* Configuration ala Solaris 9/SunOS 5.9::
@end menu

@node Differences from Solaris 9/SunOS 5.9
@subsection Differences from Solaris 9/SunOS 5.9
@cindex differences from solaris 9/sunos 5.9

@node Commonalities with Solaris 9/SunOS 5.9
@subsection Commonalities with Solaris 9/SunOS 5.9
@cindex commonalities with solaris 9/sunos 5.9

@node Compatibility Functions for Solaris 9/SunOS 5.9
@subsection Compatibility Functions for Solaris 9/SunOS 5.9
@cindex compatibility functions for solaris 9/sunos 5.9

@ftable @asis
@item @b{_fini}(9)
@item @b{_info}(9)
@item @b{_init}(9)
@item @b{attach}(9)
attach a device to the system or resume a suspended device
@item @b{ddi_create_minor_node}(9)
create a minor node for this device
@item @b{ddi_driver_major}(9)
find the major device number associated with a driver
@item @b{ddi_driver_name}(9)
return normalized driver name
@item @b{ddi_get_cred}(9)
get a reference to the credentials of the current user
@item @b{ddi_getiminor}(9)

@item @b{ddi_get_instance}(9)
get device instance number
@item @b{ddi_get_lbolt}(9)
get the current value of the system tick clock
@item @b{ddi_get_pid}(9)

@item @b{ddi_get_soft_state}(9)

@item @b{ddi_get_time}(9)
get the current time in seconds since the epoch
@item @b{ddi_remove_minor_node}(9)
remove a minor node for a device
@item @b{ddi_removing_power}(9)

@item @b{ddi_soft_state}(9)

@item @b{ddi_soft_state_fini}(9)

@item @b{ddi_soft_state_free}(9)

@item @b{ddi_soft_state_init}(9)

@item @b{ddi_soft_state_zalloc}(9)

@item @b{ddi_umem_alloc}(9)
allocate page aligned kernel memory
@item @b{ddi_umem_free}(9)

@item @b{detach}(9)
detach a device from the system or suspend a device
@item @b{getinfo}(9)

@item @b{identify}(9)
determine if a driver is associated with a device
@item @b{install_driver}(9)
install a device driver
@item @b{mod_info}(9)
provides information on a loadable kernel module to the @cite{STREAMS} executive
@item @b{mod_install}(9)
installs a loadable kernel module in the @cite{STREAMS} executive
@item @b{mod_remove}(9)
removes a loadable module from the @cite{STREAMS} executive
@item @b{power}(9)
power a device attached to the system
@item @b{probe}(9)

@item @b{qbufcall}(9)
install a buffer callback
@item @b{qtimeout}(9)
start a timer associated with a queue
@item @b{queclass}(9)

@item @b{qunbufcall}(9)

@item @b{quntimeout}(9)

@item @b{qwait}(9)
wait for a queue message
@item @b{qwait_sig}(9)
wait for a queue message or signal
@item @b{qwriter}(9)

@end ftable

@node Configuration ala Solaris 9/SunOS 5.9
@subsection Configuration ala Solaris 9/SunOS 5.9
@cindex configuration ala solaris 9/sunos 5.9

@page
@node Porting from SUPER-UX
@section Porting from SUPER-UX
@cindex Porting from SUPER-UX

@menu
* Differences from SUPER-UX::
* Commonalities with SUPER-UX::
* Compatibility Functions for SUPER-UX::
* Configuration ala SUPER-UX::
@end menu

@node Differences from SUPER-UX
@subsection Differences from SUPER-UX
@cindex differences from super-ux

@node Commonalities with SUPER-UX
@subsection Commonalities with SUPER-UX
@cindex commonalities with super-ux

@node Compatibility Functions for SUPER-UX
@subsection Compatibility Functions for SUPER-UX
@cindex compatibility functions for super-ux

@ftable @asis
@item @b{lbolt}(9)
time in ticks since reboot
@end ftable

@node Configuration ala SUPER-UX
@subsection Configuration ala SUPER-UX
@cindex configuration ala super-ux

@page
@node Porting from UXP/V
@section Porting from UXP/V
@cindex Porting from UXP/V

@menu
* Differences from UXP/V::
* Commonalities with UXP/V::
* Compatibility Functions for UXP/V::
* Configuration ala UXP/V::
@end menu

@node Differences from UXP/V
@subsection Differences from UXP/V
@cindex differences from uxp/v

@node Commonalities with UXP/V
@subsection Commonalities with UXP/V
@cindex commonalities with uxp/v

@node Compatibility Functions for UXP/V
@subsection Compatibility Functions for UXP/V
@cindex compatibility functions for uxp/v

@node Configuration ala UXP/V
@subsection Configuration ala UXP/V
@cindex configuration ala uxp/v

@page
@node Porting from Linux STREAMS (LiS) 2.18.4
@section Porting from Linux STREAMS (LiS) 2.18.4
@cindex Porting from Linux STREAMS (LiS) 2.18.4

@menu
* Differences from LiS 2.18.4::
* Commonalities with LiS 2.18.4::
* Compatibility Functions for LiS 2.18.4::
* Configuration ala LiS 2.18.4::
@end menu

@node Differences from LiS 2.18.4
@subsection Differences from LiS 2.18.4
@cindex differences from lis 2.18.4

The many manual pages included with the @command{streams} and @command{strcompat} packages describe
areas where @cite{LiS} and @cite{Linux Fast-STREAMS} differ for specific DDI/DKI utilities and user
interface functions, and also provide considerations for portability.

The major difference between @cite{LiS} and @cite{Linux Fast-STREAMS} is bugs: @cite{LiS} is full of
them.  @cite{LiS 2.18.4} fails about one-third of a thousand or so @cite{POSIX} conformance tests
(and those test cases mostly test the Stream head).  @cite{Linux Fast-STREAMS} is certainly not
bug-for-bug compatible with @cite{LiS}.

Some significant differences are summarized as follows:

@table @asis
@item 32-bit over 64-bit Compatibility
@cite{LiS} is largely incapable of 32-bit over 64-bit compatibility.  The primary impediment is the
inability of @cite{LiS} to properly register 32-bit input-output controls with a 64-bit kernel.
@cite{Linux Fast-STREAMS}, on the other hand, has tested 32-bit over 64-bit compatibility.  All
test suites are run in 32-bit over 64-bit mode as well as native mode.

@item Proper Handling of M_IOCDATA
@cite{LiS} improperly waits for an M_IOCNAK after a failed M_COPYIN or M_COPYOUT operation.  All
other STREAMS implementations (including @cite{Linux Fast-STREAMS}) expect the module or driver to
abort the input-output control operation when the return value in the M_IOCDATA is non-zero.

@item Proper Stream Head Handling
@cite{LiS} has many bugs in the Stream head.  Also, @cite{LiS} takes a very narrow view of Stream
head functionality.  A significant area where @cite{LiS} lacks functionality is in proper signal
handling for controlling and non-controlling terminals.  Also, the @cite{LiS} Stream head is largely
unsafe for use by threaded applications.  The @cite{Linux Fast-STREAMS} Stream head properly
supports FIFOs, pipes, terminals, and sockets, properly signals process groups, handles process
orphans, and normal UNIX job control (including signals).  @cite{LiS} does not handle polling
correctly with regard to message bands.  @cite{Linux Fast-STREAMS} properly handles polling with
regard to message bands, including extended POSIX signals with regard to poll.

@item bufcalls
@cite{LiS} does not properly implement buffer callbacks.  @cite{LiS} sets a one second timer and
invokes buffer callbacks upon timeout.  @cite{Linux Fast-STREAMS}, like @cite{SVR 4.2}, keeps track
of buffers as they are allocated and freed and invokes a callback shortly after a buffer is freed.
The result is that the buffer callback under @cite{Linux Fast-STREAMS} is always invoked from within
the @dfn{STREAMS} scheduler context.  For @cite{LiS}, the buffer callback is invoked under timeout
(bottom half, soft irq) context.

@item qprocson/qprocsoff
@cite{LiS} does not have a workable mechanism for turning queue procedures on or off.
@cite{Linux Fast-STREAMS} has a full MP-safe mechanism similar to @cite{SVR 4.2}.

@item freezestr/unfreezestr
@cite{LiS} does not have a workable mechanism for freezing a Stream.
@cite{Linux Fast-STREAMS} has a full MP-safe mechanism similar to @cite{SVR 4.2}.

@item q->q_next
@cite{LiS} has no mechanism for protecting derefencing of the q->q_next pointer from race
conditions.  Pushing or popping a module to or from a Stream in the process or passsing message
blocks can cause kernel crashes.  @cite{Linux Fast-STREAMS} has a full MP-safe mechanism for
protecting q_next pointer derefencing (Stream head read locks) while within a queue put or service
procedure, timeouts and buffer callbacks.  The full qprocson/qprocsoff mechanism under @cite{Linux
Fast-STREAMS} properly protects the queue open and close routines.

@item Enhancements
@cite{Linux Fast-STREAMS} provides a set of enhanced features not present in @cite{LiS} but present
in other @dfn{STREAMS} implementations.  One important feature that @cite{LiS} lacks, that
@cite{Linux Fast-STREAMS} provides, is a fully functional @manref{strlog(9)} capability.
@end table

@node Commonalities with LiS 2.18.4
@subsection Commonalities with LiS 2.18.4
@cindex commonalities with lis 2.18.4

For the most part, where @cite{LiS} properly follows @cite{SVR 4} behavior and @cite{SVR 4}
behavior is consistent with @cite{SVR 4.2} behavior, @cite{Linux Fast-STREAMS} behaves the same as
@cite{LiS}.

@node Compatibility Functions for LiS 2.18.4
@subsection Compatibility Functions for LiS 2.18.4
@cindex compatibility functions for lis 2.18.4

@ftable @asis
@item @b{lis_appq}(9)
append one @cite{STREAMS} message after another
@item @b{lis_date}(9)
@item @b{lis_esbbcall}(9)
install a buffer callback for an extended @cite{STREAMS} message block
@item @b{lis_find_strdev}(9)
@item @b{lis_mknod}(9)
make block or character special files
@item @b{lis_mount}(9)
mount a file system
@item @b{lis_OTHER}(9)
return the other queue of a @cite{STREAMS} queue pair
@item @b{lis_register_strdev}(9)
register a @cite{STREAMS} device
@item @b{lis_register_strmod}(9)
register a @cite{STREAMS} module
@item @b{lis_umount2}(9)
unmount a file system
@item @b{lis_umount}(9)
unmount a file system
@item @b{lis_unlink}(9)
remove a file
@item @b{lis_unregister_strdev}(9)
unregister a @cite{STREAMS} device
@item @b{lis_unregsiter_strmod}(9)
unregister a @cite{STREAMS} module
@item @b{lis_version}(9)

@item @b{lis_xmsgsize}(9)
calculate the size of message blocks in a @cite{STREAMS} message
@end ftable

@node Configuration ala LiS 2.18.4
@subsection Configuration ala LiS 2.18.4
@cindex configuration ala lis 2.18.4

@node Development
@chapter Development
@cindex development

@menu
* Portable STREAMS Drivers and Modules::
@end menu

@node Portable STREAMS Drivers and Modules
@section Portable @cite{STREAMS} Drivers and Modules
@cindex portable @cite{STREAMS} drivers and modules

In the process of creating the @b{Linux Fast-STREAMS} subsystem in such a way so
as to facilitate portability of @cite{STREAMS} drivers and modules from a wide
range of @cite{UNIX} operating system variants, a number of guidelines for the
development of portable @cite{STREAMS} drivers and moduels have been developed.
These guidelines, when adhered to, will allow the resulting driver or module to
be ported to another @cite{STREAMS} implementation with minimal effort.
These portability guidelines are collected here.

@menu
* Memory Allocation::
* Alignment of Message Buffers::
* Disabling and Enabling Queue Procedures::
* Freezing and Unfreezing Streams::
* Passing Messages from Interrupt Service Routines::
* Timeout Call Back and Link Identifiers::
* Synchronization with Timeouts and Callback Functions::
* Synchronization with Callout Functions::
* Synchronization of Drivers and Modules::
* Special STREAMS Message Types::
* Use of Message Allocation Priorities::
* Registration/Deregistration and Device Numbering::
@end menu

@node Memory Allocation
@subsection Memory Allocation

Portable @cite{STREAMS} modules and drivers will always allocate memory using
the SVR4 memory allocators/deallocators:
@iftex
@b{kmem_alloc}(9),
@end iftex
@ifnottex
@inforef{kmem_alloc(9), , *manpages*},
@end ifnottex
@iftex
@b{kmem_zalloc}(9)
@end iftex
@ifnottex
@inforef{kmem_zalloc(9), , *manpages*}
@end ifnottex
and
@iftex
@b{kmem_free}(9).
@end iftex
@ifnottex
@inforef{kmem_free(9), , *manpages*}.
@end ifnottex

Additional eligible allocators are:

@iftex
@b{rmallocmap}(9)
@end iftex
@ifnottex
@inforef{rmallocmap(9), , *manpages*}
@end ifnottex
@iftex
@b{rmfreemap}(9)
@end iftex
@ifnottex
@inforef{rmfreemap(9), , *manpages*}
@end ifnottex
@iftex
@b{rmalloc}(9)
@end iftex
@ifnottex
@inforef{rmalloc(9), , *manpages*}
@end ifnottex
@iftex
@b{rmalloc_wait}(9)
@end iftex
@ifnottex
@inforef{rmalloc_wait(9), , *manpages*}
@end ifnottex
@iftex
@b{rmfree}(9)
@end iftex
@ifnottex
@inforef{rmfree(9), , *manpages*}
@end ifnottex
@iftex
@b{rminit}(9)
@end iftex
@ifnottex
@inforef{rminit(9), , *manpages*}
@end ifnottex
@iftex
@b{rmsetwant}(9)
@end iftex
@ifnottex
@inforef{rmsetwant(9), , *manpages*}
@end ifnottex
@iftex
@b{rmwanted}(9)
@end iftex
@ifnottex
@inforef{rmwanted(9), , *manpages*}
@end ifnottex

Unfortunately, these resource map allocators are not available on
@cite{AIX} so, if portability to the @cite{AIX PSE} is important, then do not
use these allocators.

Additional eligible allocators are:

@iftex
@b{kmem_fast_alloc}(9)
@end iftex
@ifnottex
@inforef{kmem_fast_alloc(9), , *manpages*}
@end ifnottex
@iftex
@b{kmem_fast_free}(9)
@end iftex
@ifnottex
@inforef{kmem_fast_free(9), , *manpages*}
@end ifnottex

@node Alignment of Message Buffers
@subsection Alignment of Message Buffers

@node Disabling and Enabling Queue Procedures
@subsection Disabling and Enabling Queue Procedures

Portable @cite{STREAMS} modules and drivers will always call
@iftex
@b{qprocson}(9)
@end iftex
@ifnottex
@inforef{qprocson(9), , *manpages*},
@end ifnottex
before returning from its queue open procedure (see
@iftex
@b{qopen}(9)).
@end iftex
@ifnottex
@inforef{qopen(9), , *manpages*}.)
@end ifnottex

Portable @cite{STREAMS} modules and drivers will always call
@iftex
@b{qprocsoff}(9)
@end iftex
@ifnottex
@inforef{qprocsoff(9), , *manpages*},
@end ifnottex
upon entering its queue close procedure (see
@iftex
@b{qclose}(9)).
@end iftex
@ifnottex
@inforef{qclose(9), , *manpages*}.)
@end ifnottex

@node Freezing and Unfreezing Streams
@subsection Freezing and Unfreezing Streams

@node Passing Messages from Interrupt Service Routines
@subsection Passing Messages from Interrupt Service Routines

@node Timeout Call Back and Link Identifiers
@subsection Timeout Call Back and Link Identifiers

Although buffer callbacks identifiers (see
@iftex
@b{bufcall}(9)),
@end iftex
@ifnottex
@inforef{bufcall(9), , *manpages*}),
@end ifnottex
timeout identifiers (see
@iftex
@b{timeout}(9)),
@end iftex
@ifnottex
@inforef{timeout(9), , *manpages*}),
@end ifnottex
and multiplexing driver link identifiers (see
@var{I_LINK} and @var{I_PLINK} under
@vindex I_LINK
@vindex I_PLINK
@iftex
@b{streamio}(2)),
@end iftex
@ifnottex
@inforef{streamio(2), , *manpages*}),
@end ifnottex
are often illustrated as small integer numbers, with some @cite{STREAMS}
implementations, including @b{Linux Fast-STREAMS}, these identifiers are kernel
addresses (pointers) and are never small integer values like 1, 2, or 3.

Also, there is no guarantee that the identifier will be positive.  It is
guaranteed that the retuned identifier will not be zero (0).  Zero is used by
these function as a return value to indicate an error.

Portable @cite{STREAMS} drivers and modules will not depend upon the returned
identifier from 
@iftex
@b{bufcall}(9),
@end iftex
@ifnottex
@inforef{bufcall(9), , *manpages*},
@end ifnottex
@iftex
@b{timeout}(9)
@end iftex
@ifnottex
@inforef{timeout(9), , *manpages*}
@end ifnottex
or
@iftex
@b{streamio}(2)
@end iftex
@ifnottex
@inforef{streamio(2), , *manpages*}
@end ifnottex
as being any specific range of value.  Portable drivers and modules will save
any returned identifiers in data types that will not loose the precision of the
identifier.

@node Synchronization with Timeouts and Callback Functions
@subsection Synchronization with Timeouts and Callback Functions

@node Synchronization with Callout Functions
@subsection Synchronization with Callout Functions

@node Synchronization of Drivers and Modules
@subsection Synchronization of Drivers and Modules

@node Special STREAMS Message Types
@subsection Special @cite{STREAMS} Message Types

@node Use of Message Allocation Priorities
@subsection Use of Message Allocation Priorities

@node Registration/Deregistration and Device Numbering
@subsection Registration/Deregistration and Device Numbering

@subsubheading UNIX Device Numbering

@quotation
In versions of @cite{UNIX System V} previous to @cite{Release 4}, the major and
minor device numbers were each 8 bit, and they were packed into a 16 bit word
(usually a C Language @var{short} variable).  Under @cite{UNIX System V Release
4}, the device numbers are held in a @samp{dev_t}
@tpindex dev_t
variable, which is often
implemented as a 32 bit integer.  The minor device number is held as 14 bits,
and a further 8 bits are used for the major device number.  @samp{dev_t}
@tpindex dev_t
is ofter
referred to as the "expanded device type", since it allows many more minor
devices than before.

Many drivers were written for earlier releases, an may eventually be ported to
@cite{UNIX System V Release 4}.  In earlier releases, some manufacturers got
around the 256 minor device number limit by using multiple major device numbers
for a device.  Devices were created with different major device numbers (the
external major device number) but they all mapped to the same deivce driver
entry in the device switch tables (the internal device number).  Even under this
scheme, each major device could only support 256 minor devices, but the driver
could support many more.  This has been recognized in @cite{UNIX System V
Release 4}, and functions are provided to do this mapping; for example, the
function @command{etoimajor}() and so on, give a machine independent interface
to the device number mapping.
@footnote{@cite{The Magic Garden Explained}}
@end quotation

@subsubheading Linux Device Numbering

Verions of the @b{Linux} kernel in the 2.4 kernel series and prior to 2.6 also
provided an 8 bit major device number and an 8 bit minor device number grouped
into a 16-bit combined device number.  Linux 2.6 kernels (and some patched 2.4
kernels) now have larger device numbers.  These extended device numbers are 12
bits for major device number and 20 bits for minor device number, with 32 bits
for the combined device number.

@subsubheading LiS Device Numbering

@cite{LiS} prior to the 2.18.0 release was incapable of providing an internal
representation of the device number and the number of minor device numbers for a
device driver was restricted to 256.  @footnote{Actually, 255 as the kernel
reserved minor device number 255 for expansion.}  Many
@url{http://www.openss7.org/, OpenSS7} device drivers written for @cite{LiS}
would allocate additional major device numbers if required.  Good examples of
devices that require more than 255 minor device numbers are INET clone devices,
SCTP streams, SS7 singalling link streams, MG media channels, etc.  These
streams are often @var{I_PLINK}ed
@vindex I_PLINK
under a multiplexing driver and do not even
consume a system file descriptor.

@subsubheading Linux Fast-STREAMS Device Numbering

@b{Linux Fast-STREAMS} began with extended device numbering.  The @file{specfs}
shadow special character device filesystem used by @b{Linux Fast-STREAMS} uses
the @samp{inode} number to hold the @samp{dev_t}
@tpindex dev_t
device number instead of the
@samp{inode->i_rdev}, which on older kernels is only a 16-bit @var{short}.

In earlier versions of @b{Linux Fast-STREAMS}, the internal device numbering is
16-bits for major device number and 16-bits for minor device number.  This will
soon be changed to 12-bits for major device number and 20-bits for minor device
number to accomodate the newer @b{Linux} scheme.

On 2.6 @b{Linux} kernels that support the newer extended device numbers,
external device numbers and internal device numbers will be the same.
On 2.4 @b{Linux} kernels with the older 16-bit device numbers, external device
number and internal device numbers will differ.  In some situations, an internal
device number can exists with no corresponding external device number (accessed
only via a clone device or direct access to the mounted @file{specfs} shadow
special character device filesystem).

@ftable @asis
@item @b{etoimajor}(9)
change external to internal major device number
@item @b{getemajor}(9)
get external major device number
@item @b{geteminor}(9)
get external minor device number
@item @b{itoemajor}(9)
change internal to external major device number
@end ftable

@node Copying
@appendix Copying
@include texi/gpl.texi

@node Documentation License
@appendix Documentation License
@include texi/fdl.texi

@page
@node Indices
@unnumbered Indices
@menu
* Concept Index::		Index of Concepts
* Type Index::			Index of Data Types
* Function Index::		Index of Functions and Macros
* Variable Index::		Index of Variables and Constants
* File Index::			Index of Files and Programs
@end menu

@page
@node Concept Index
@unnumberedsec Concept Index
@printindex cp

@page
@node Type Index
@unnumberedsec Type Index
@printindex tp

@page
@node Function Index
@unnumberedsec Function and Macro Index
@printindex fn

@page
@node Variable Index
@unnumberedsec Variable and Constant Macro Index
@printindex vr

@page
@node File Index
@unnumberedsec Program and File Index
@printindex pg

@page
@shortcontents
@page
@contents
@bye

