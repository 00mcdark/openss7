'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: lis_unregister_strdev.9lis.man,v 0.9.2.1 2004/08/22 06:17:49 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2004  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any success
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2004/08/22 06:17:49 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH LIS_UNREGSITER_STRDEV 9 "$Date: 2004/08/22 06:17:49 $" "$Name:  $" "Linux Fast-STREAMS DDI/DKI"
.SH NAME
.B lis_unregister_strdev
\- unregister a \fISTREAMS\fR device
.SH SYNOPSIS
.PP
.B #include <linux/stream.h>
.HP 8
.BI "int lis_unregister_strdev(major_t " major );
.SH DESCRIPTION
.PP
.BR lis_unregister_strdev ()
deregisters a
.IR STREAMS (4)
driver previously registered with
.BR lis_register_strdev (9).
.PP
.BR lis_unregister_strdev ()
removes the
.IR STREAMS (4)
driver identified by its major device number,
.IR major ,
from the
.IR STREAMS (4)
device switch table and deregisters the character major
number,
.IR major ,
from the
.B Linux
kernel using
.BR unregister_chrdev (9).
Before removing the
.IR STREAMS (4)
driver,
.B LiS
.[
LiS
.]
will also clear any autopush list associated with the
.IR STREAMS (4)
driver.
.SH RETURN
.PP
Upon succes,
.BR lis_unregister_strdev ()
returns zero (0).
Upon failure,
.BR lis_unregister_strdev ()
returns a negative error number.
.SH ERRORS
.PP
When
.BR lis_unregister_strdev ()
fails, it returns the negative of one of the following errors:
.PP
.TP
.RB [ ENODEV ]
The character device major number
.IR major ,
is not registered to
.B LiS\c
.
.[
LiS
.]
.TP
.RB [ EBUSY ]
The
.IR STREAMS (4)
driver identified by
.I major
has open file descriptors.
.SH NOTICES
.PP
Although
.B LiS
.[
LiS
.]
will demand load a
.B Linux
kernel module supporting a
.IR STREAMS (4)
driver, it will not remove that module once
it is deregistered.
.B Linux
does, however, provide a mechanism for autocleaning kernel modules that have a
zero reference count and this facility could be used instead.
.SH EXAMPLES
.PP
Following is an example that demonstrates how 4 major device numbers could be
registered and deregistered against a
.IR STREAMS (4)
driver:
.sp
.in +4
.nf
\fC\s-2\
#define X_MAJOR 222
#define X_NMAJOR 4
#define X_NMINOR 255
#define X_DRV_NAME "example"

int x_initialized = 0;
ushort x_majors[X_NMAJOR] = { X_CMAJOR, };

void x_init(void)
{
    int err, mindex;
    for (mindex = 0; mindex < X_NMAJOR; mindex++) {
	if ((err = lis_register_strdev(x_majors[mindex], &x_info,
		                       X_NMINOR, X_DRV_NAME)) < 0) {
	    if (!mindex) {
		cmn_err(CE_PANIC,
			"%s: could not register 1'st major %d",
			X_DRV_NAME, x_majors[mindex]);
		x_initialized = err;
		return;
	    }
	    cmn_err(CE_WARN, "%s: could not register %d'th major",
		    X_DRV_NAME, mindex + 1);
	    x_majors[mindex] = 0;
	} else if (mindex)
	    x_majors[mindex] = err;
    }
    x_initialized = 1;
    return;
}

void x_terminate(void)
{
    int err, mindex;
    for (mindex = 0; mindex < X_NMAJOR; mindex++) {
	if (x_majors[mindex]) {
	    if ((err = lis_unregister_strdev(x_majors[mindex])))
		cmn_err(CE_PANIC, "%s: could not unregister major %d",
			X_DRV_NAME, x_majors[mindex]);
	    if (mindex)
		x_majors[mindex] = 0;
	}
    }
    return;
}
\s+2\fR
.fi
.SH "SEE ALSO"
.PP
.BR lis_register_strdev (9),
.BR lis_register_strmod (9),
.BR lis_unregister_strdev (9).
.SH VERSIONS
.PP
This manpage was written for
.B LiS\c
.
.[
LiS
.]
.PP
.BR lis_unregister_strdev ()
is an LiS-specific function that first appeared in early version of
.BR LiS .
.\"
.\"
.TI
