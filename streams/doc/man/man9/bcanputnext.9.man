'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: bcanputnext.9.man,v 0.9.2.24 2005/11/26 11:17:08 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/11/26 11:17:08 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH BCANPUTNEXT 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B bcanputnext
\- test flow control on a \fISTREAMS\fP message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "int bcanputnext(queue_t *" q ", int " band );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I q
the queue after which to begin testing for flow control.
.TP
.I band
the priority band within which to test for flow control.
.\"
.\"
.SH DESCRIPTION
.\".PP
.\".BR bcanputnext ()
.\"provides modules and drivers with a way to test flow control in a given priority band for the queue
.\"pointed to by
.\".IR q->q_next .
.\"It returns
.\".B 1
.\"if the message of priority 
.\".I pri
.\"can be placed on the queue.  It returns
.\".B 0
.\"if the priority band is flow controlled and sets the
.\".B QWANTW
.\"flag for band zero
.\".RB ( QB_WANTW
.\"for non-zero band).
.\".PP
.\".BR bcanputnext ()
.\"searches through the
.\".I Stream
.\"(starting at
.\".IR q->q_next )
.\"until it finds a queue containing a
.\".IR qi_srvp (9)
.\"procedure, or until it reaches the end of the
.\".IR Stream .
.\"If found, the queue containing the
.\".IR qi_srvp (9)
.\"routine is tested to see if a message in priority band
.\".I pri
.\"can be enqueued.  If the band is full,
.\".BR bcanputnext ()
.\"marks the queue to automatically back-enable the caller's
.\".IR qi_srvp (9)
.\"procedure when the amount of data in
.\"messages on the queue has reached its low water mark.
.\".PP
.\"If the band does not yet exist on the queue in question,
.\".B 1
.\"is returned.
.PP
.BR bcanputnext ()
checks whether the
Stream
is flow controlled starting at the specified queue,
.IR q ,
and for the specified
.IR band .
Starting at the
.I q
specified and for the
.I band
specified,
.BR bcanputnext ()
looks for the next forward queue which has a
.IR qi_srvp (9)
procedure or which has no
further forward queue.
.PP
If this forward queue has the
.B QB_FULL
flag clear indicating that it is not full for the specified
.IR band ,
.BR bcanputnext ()
will return true (1).
.PP
If this forward queue has the
.B QB_FULL
flag set indicating that it is full for the specified
.IR band ,
.BR bcanputnext ()
will return false (0).
.PP
When
.BR bcanputnext ()
return false (0), it also sets the
.B QB_WANTW
flag for the specified
.IR band ,
indicating that the
.I STREAMS
scheduler should back-enable
.IR qi_srvp (9)
procedures
backward up the queues when the flow controlled
.I band
is no longer full.
.\"
.\"
.SH USAGE
.PP
It is the responsibility of a
.I STREAMS
module or driver putting a banded non-priority
message to a subsequent queue to check for flow control on that queue using
.BR bcanputnext ()
for the band associated with the message before placing a message on that
queue with
.BR putnext (9).
A
.I STREAMS
module is only required to check for flow control if it has a
.IR qi_srvp (9)
procedure for the specified queue: otherwise, it was the responsibility of a previous
.I STREAMS
module,
Stream head
or
Stream end
to check flow control.
.\"
.\"
.SH RETURN
.PP
.BR bcanputnext ()
will return false (0) when the specified
.I STREAMS
message queue is flow
controlled for the specified band, and return true (1) when the specified
.I STREAMS
message queue is not flow controlled for the specified band.
.\"
.\"
.SH ERRORS
.PP
.BR bcanputnext ()
always succeeds.
.\"
.\"
.SH CONTEXT
.PP
.BR bcanputnext ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR bcanputnext ()
is an MP-safe version of
.BI bcanput( q->q_next ).
.PP
It is possible, due to race conditions in a multiprocessor (MP) system, that
.BR bcanputnext ()
can be called for a queue and return true (1) and yet the
Stream
becomes flow controlled before a
call to
.BR putnext (9).
The caller to
.BR putnext (9)
is then in violation of flow-control rules; however, the extent of this violation is bounded.
.\"
.\"
.SH NOTICES
.PP
.BR bcanputnext ()
provides the additional feature that
.I band
can be specified as
.BR ANYBAND .
When
.I band
is
.BR ANYBAND ,
.BR bcanputnext ()
checks whether any band (other than band zero), is not flow controlled.  If a
band exists that is not flow controlled,
.BR bcanputnext ()
with
.B ANYBAND
returns one (1).  If all existing bands are flow controlled,
.BR bacnputnext ()
returns zero (0).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR putnext (9),
.BR canput (9),
.BR canputnext (9),
.BR bcanput (9),
.BR freezestr (9),
.BR noenable "(9), and
.BR enableok (9).
.\"
.\"
.SH BUGS
.PP
.BR bcanputnext ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR bcanputnext ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR bcanputnext ()
is MP-safe.
Under LiS,
.BR bcanputnext ()
does not protect dereferencing of queue pointers during the search for a queue
or band limited queue.
.IP \(em
.BR bcanputnext ()
always succeeds.  Under LiS,
.BR bcanput ()
will return zero (0 - flow controlled) if an internal error occurs, without
setting the
.BR QWANTW " or " QB_WANTW
flag for the queue or band.  This means that, although flow controlled, no
backenable procedure will be run.  This can lead to indefinite postponement of
a queue
.IR qi_srvp (9)
procedure under LiS.
.BR bcanputnext ()
does not have this problem.
.IP \(em
The declaration for
.BR bcanputnext ()
provides that
.I band
is of type
.BR int .
Under LiS,
.I band
is
.BR "unsigned char" .
.IP \(em
.BR bcanputnext ()
protects dereferences of the
.I q->q_next
pointer with a
Stream head
lock.
Under LiS,
.BR bcanputnext ()
is simply a macro that calls
.BR bcanput (9)
without protection for the
.I q->q_next
pointer dereference.
.IP \(em
Symbol
.BR lis_bcanputnext ()
is provided for compatibility with LiS.  See
.BR liscompat (9).
.BR lis_bcanputnext ()
simply calls
.BR bcanputnext ()
directly.
.IP \(em
.BR bcanputnext ()
may be called on a
Stream
frozen with
.BR freezestr (9).
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR bcanputnext ()
to be called on a
Stream
frozen with
.BR freezestr (9).
.IP ""
Portable
.I STREAMS
drivers and modules should not call
.BR bcanputnext ()
on a
Stream
frozen with
.BR freezestr (9).
.IP \(em
.IR SUPER-UX \(rg
documentation
.[
suxspg
.]
states that if the
Stream end
has no
.IR qi_srvp (9)
procedure that
.BR bcanputnext ()
will return (1).
This is incorrect behaviour to that described in the
.IR "SVR 4 SPG" .
.[
svr4spg
.]
For example, the
Stream head
does not normally have a read
.IR qi_srvp (9)
procedure, but uses wakeups from the read side
.IR qi_putp (9)
procedure to schedule servicing of the queue.  It is still necessary for
.BR bcanputnext ()
to fail when the read queue passes its high water mark.
.IR SUPER-UX \(rg
will not fail in such a circumstance, making its behaviour inconsistent with other
.IR UNIX \(rg
impelemntations of
.IR STREAMS .
.IP ""
Portable
.I STREAMS
drivers and modules should not rely on the behaviour of
.BR bcanputnext ()
on drivers that have no write side
.IR qi_srvp (9)
procedure, but which enqueue messages on their write
queues (to be collected using
.BR getq (9)
outside the
.I STREAMS
framework).
Such drivers should provide a dummy
.IR qi_srvp (9)
procedure.
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.[
uslspg
.]
.\"
.\"
.SH HISTORY
.PP
.BR bcanputnext ()
first appeared in
.IR "SVR 4.0 MP" " and " "SVR 4.2 MP" .
.[
svr4dk
.]
.[
usldk
.]
.\"
.\"
.[
$LIST$
.]
.TI
