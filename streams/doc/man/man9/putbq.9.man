'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: putbq.9.man,v 0.9.2.18 2005/08/29 10:06:49 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/08/29 10:06:49 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH PUTBQ 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B putbq
\- put a message back on a \fISTREAMS\fP message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "int putbq(queue_t *" q ", mblk_t *" mp );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue onto which to put back the message.
.PD 0
.TP
.I mp
the message to put back on the queue.
.PD
.\"
.\"
.SH DESCRIPTION
.PP
.BR putbq ()
places the message pointed to by
.I mp
back onto the queue pointed to by
.IR q .
When the message is placed back on the queue, it is placed on the head of the
queue, rather than the tail of the queue as would result from a call to
.BR putq (9).
The message is placed in the proper order at the head of the priority, normal or specified band,
queue counts are adjusted and queue enabling is performed if the message is a high priority message
or if the queue has not been disabled with a call to
.BR noenable (9).
.PP
.BR putbq ()
is normally called from within queue service routines to place a message back
on the queue subsequent to a call to
.BR getq (9)
that removes a message which it turns out cannot be processed at the moment
due to flow restrictions from testing
.BR canput (9)
or
.BR bcanput (9).
When
.BR putbq ()
is executed following
.BR getq (9)
for the same queue, it is guaranteed to succeed.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR putbq ()
returns true (1) after placing the message
.I mp
back on the head of the queue.
Upon failure,
.BR putbq ()
returns false (0) and the message pointed to by
.I mp
is unaltered.
The return value from
.BR putbq ()
should always be examined.
.\"
.\"
.SH ERRORS
.PP
Upon failure,
.BR putbq ()
returns false (0) and the message pointed to by
.I mp
is unaltered.  It is the caller's responsibility to free
.I mp
if the caller so desires.
.\"
.\"
.SH CONTEXT
.PP
.BR putbq ()
can be called from any non-ISR context, including user context, module procedures,
callouts, callbacks, soft interrupts, but excluding interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR putbq ()
is MP-safe.
.PP
.BR putbq ()
called on a queue frozen by
.BR freezestr (9)
will result in single-party deadlock.
.\"
.\"
.SH NOTICES
.PP
.BR putbq ()
only fails if a queue band for
.BR mp->b_band
does not yet exist and one could not be allocated.  It can be ensured that
.BR putbq ()
will not fail for the same
.I q
for which the message was obtained with
.BR getq (9).
Otherwise, it can be ensured that the queue band exists by calling
.BR getqstr (9)
or
.BR setqstr (9)
for the band in question before calling
.BR putbq ().
.PP
Care should be taken not to return with
.BR putbq ()
a priority message taken off of a queue in a service procedure with
.BR getq (9).
This is because placing the priority message back on the queue will cause the
service procedure to re-execute at the earliest opportunity resulting in
possible indefinite looping.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR putq (9),
.BR noenable (9),
.BR getq (9),
.BR canput (9),
.BR bcanput (9),
.BR getqstr (9),
.BR setqstr (9),
.BR qprocsoff (9),
.BR freezestr (9).
.\"
.\"
.SH BUGS
.PP
.BR putbq ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR putbq ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4"
.[
svr4dk
.]
with the following portability considerations:
.IP \(em \w'\(em\(em'u
If
.BR putbq ()
is passed an invalid
.IR q " or " mp
argument, the result is undefined.
.IP ""
Under
.IR LiS ,
.BR putbq ()
fails if the passed in message pointer
.I mp
is
.BR NULL ;
or, the passed in queue pointer
.I q
is
.BR NULL ,
points to a structure other than a queue structure, or refers to a queue that is closing or for
which put and service routine processing has been turned off (e.g. with
.BR qprocsoff (9)).
.IP ""
Porable
.I STREAMS
modules and drivers will not pass
.B NULL
or invalid pointers to
.BR putbq ().
.IP \(em
.BR putbq ()
only fails if
.I mp->b_band
refers to a non-existent queue band and a queue band structure could not be allocated.
.IP ""
When
.BR putbq ()
returns failure,
.I mp
is unchanged.
This is consistent with
.IR "SVR 4.2 DDI/DKI" ,
.IR IRIX \(rg,
.IR Solaris \(rg
and
.IR UnixWare \(rg
documentation.
.[
irixdoc
.]
.[
soldoc
.]
.[
uw7doc
.]
.IP \(em
.BR putbq ()
is not bug for bug compatible with
.IR LiS .
.IP ""
Under older versions of
.IR LiS ,
regardless of whether
.BR putbq ()
returns success or failure, the message pointed to by
.I mp
is placed on the queue pointed to by
.I q
or freed, so that the caller to
.BR putbq ()
always loses ownership of the message pointed to by
.I mp
upon return from the call.
This was inconsistent with
.IR "SVR 4.2 DDI/DKI" ,
and was an
.I LiS
bug.
Current versions of
.I LiS
do not free the message.
.[
lis
.]
.IP ""
Portable
.I STREAMS
modules and drivers will use
.B Linux Fast-STREAMS
in place of
.IR LiS .
.IP \(em
.BR putbq ()
may be called on a stream frozen with
.BR freezestr (9).
.IP ""
.IR "SVR 4.2 MP DDI/DKI" ,
.IR Solaris \(rg,
.IR SUPER-UX \(rg
and
.IR UnixWare \(rg
do not permit
.BR putbq ()
to be called on a stream frozen with
.BR freezestr (9).
.[
usldk
.]
.[
solspg
.]
.[
suxspg
.]
.[
uw7spg
.]
.IP ""
Portable
.I STREAMS
modules and drivers will not call
.BR putbq ()
on a stream frozen with
.BR freezestr (9).
.IP \(em
.BR putbq ()
cannot be called from an interrupt service routine.
.IP ""
.B @PACKAGE_TITLE@
does not permit
.BR putbq ()
to be called from an interrupt service routine context to remove the need for suppressing
local interrupts throughout the
.I STREAMS
executive.  The only queue procedure that
.B @PACKAGE_TITLE@
permits to be called from an interrupt service routine context is
.BR put (9),
and that function defers until the next
.BR runqueues (9)
pass.
.IP ""
Portable
.I STREAMS
modules and drivers will not call
.BR putbq ()
from any context outside a
.I STREAMS
queue procedure or callback function.  At the STREAM end (STREAM head or driver), from a context
other than a
.I STREAMS
coroutine, only
.BR put (9)
will be used by a portable
.I STREAMS
driver or module.
.IP \(em
Symbol
.BR lis_putbq ()
is provided for compatibility with
.IR LiS .
See
.BR liscompat (9).
.BR lis_putbq ()
simply calls
.BR putbq ()
directly.
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR putbq ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR putbq ()
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
