'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: MI_COPY_CASE.9.man,v 0.9.2.3 2005/07/01 20:16:36 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/07/01 20:16:36 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH MI_COPY_CASE 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B MI_COPY_CASE
\- case label for \fBmi_copy_state\fR(9)
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _MAC_SOURCE
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/macddi.h>
.HP
.BI "#define MI_COPY_CASE(" dir ", " count )
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I dir
the direction of the current operation.  Valid values for
.I dir
are:
.RS
.TP \w'MI_COPY_OUT\ \ 'u
.B MI_COPY_IN
the case applies to a
.BR M_IOCDATA (9)
resulting from a copy-in operation.
.PD 0
.TP
.B MI_COPY_OUT
the case applies to a
.BR M_IOCDATA (9)
resulting from a copy-out operation.
.PD
.RE
.TP
.I count
the number of copy operations already completed.  (That is, the number of the
.BR M_IOCDATA (9)
message being processed.)
.\"
.\"
.SH DESCRIPTION
.PP
.BR MI_COPY_CASE ()
is one of a set of helper functions that support transparent input-output controls (see
.BR ioctl (2)
and
.BR streamio (9))
that includes
.BR mi_copyin (9),
.BR mi_copyout (9),
.BR mi_copyout_alloc (9),
.BR mi_copy_done (9),
.BR MI_COPY_CASE (9),
.BR mi_copy_set_rval (9)
and
.BR mi_copy_state (9).
.PP
.BR MI_COPY_CASE ()
provides a case label for a
.B switch
statement on the return value of the
.BR mi_copy_state (9)
helper function.
.\"
.\"
.SH USAGE
.PP
.\"
.\"
.SH RETURN
.PP
.BR MI_COPY_CASE ()
returns a constant for use as a case label in a
.B case
statement.
.\"
.\"
.SH ERRORS
.PP
.BR MI_COPY_CASE ()
always succeeds.
.\"
.\"
.SH EXAMPLE
.PP
See
.BR mi_copyin (9)
and
.BR mi_copyout (9)
for further examples of the usage of
.BR MI_COPY_CASE ().
.PP
.RS
.nf
\fC\s-1
mblk_t *mp1, *mp2;

switch (mp->b_datap->db_type) {
case M_DATA:
        ...
case M_IOCTL:
        /* Set copyin_size = 1st buffer size per ioc_cmd */
        mi_copyin(q, mp, NULL, copyin_size);
        return 0;
case M_IOCDATA:
        switch (mi_copy_state(q, mp, &mp1)) {
        case -1:
                return 0;
        case MI_COPY_CASE(MI_COPY_IN, 1):
                /* process copied-in data in mp1 */
                mp2 = mi_copyout_alloc(q, mp, uaddr, ubuflen);
                /* fill in mp2 with data to copy out to uaddr */
                mi_copyout(q, mp);
                return 0;
        case MI_COPY_CASE(MI_COPY_OUT, 1):
                mi_copyout(q, mp);
                return 0;
        case MI_COPY_CASE(MI_COPY_OUT, 2):
                mi_copy_done(q, mp, 0);
                return 0;
        }
}
\s+1\fP
.fi
.RE
.\"
.\"
.SH CONTEXT
.PP
.BR MI_COPY_CASE ()
can be called from any context.
.\"
.\"
.SH MP-STREAMS
.PP
.BR MI_COPY_CASE ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
.BR MI_COPY_CASE ()
is a
.IR MacOT \(rg-specific
function:
.B _MAC_SOURCE
must be defined before including DDI/DKI include files to expose this symbol.
.B Linux Fast-STREAMS
must also have been compiled with
.B CONFIG_STREAMS_COMPAT_MAC
or
.B CONFIG_STREAMS_COMPAT_MAC_MODULE
defined.
.\"
.\"
.SH IMPLEMENTATION
.PP
.\"
.\"
.SH "SEE ALSO"
.PP
.BR mi_copy_done (9),
.BR mi_copyin (9),
.BR mi_copyout (9),
.BR mi_copyout_alloc (9),
.BR mi_copy_set_rval (9),
.BR mi_copy_state (9),
.BR maccompat (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR MI_COPY_CASE ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR MI_COPY_CASE ()
is compatible with
.IR MacOT \(rg
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IP \(em
.IP \(em
.BR MI_COPY_CASE ()
is an
.IR MacOT \(rg-specific
function and should not be used by portable
.I STREAMS
drivers and modules.
The more common basic case statements
should be used in its stead.
.IP \(em
.BR MI_COPY_CASE ()
is provided for source level compatibility with
.IR MacOT \(rg
for the purpose of porting
.IR MacOT \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.B Linux Fast-STREAMS
.[
lfs
.]
differ from that of
.IR MacOT \(rg,
binaries are incompatible.
.IP \(em
.BR MI_COPY_CASE ()
only provides functionality comparable to
.IR MacOT \(rg
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR MI_COPY_CASE ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR maccompat (9)
and
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.IR MacOT \(rg
DDI documentation.
.[
macotr
.]
.[
macspg
.]
.\"
.\"
.SH HISTORY
.PP
.BR MI_COPY_CASE ()
first appeared in
.IR MacOT \(rg.
.BR MI_COPY_CASE ()
is probably a Mentat, Inc. function that goes all the way back to the Mentat OSF/1 implementation.
.\"
.\"
.[
$LIST$
.]
.TI
