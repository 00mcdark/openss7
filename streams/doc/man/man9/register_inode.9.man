'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: register_inode.9.man,v 0.9.2.3 2004/04/19 02:58:20 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2003  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any success
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2004/04/19 02:58:20 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH REGISTER_INODE 9 "$Date: 2004/04/19 02:58:20 $" "$Name:  $" "Under Construction"
.\"
.\"
.SH NAME
.B register_inode, register_inode_major, register_inode_minor, unregister_inode, unregister_inode_major, unregister_inode_minor
\- register a new or deregister an existing \fISTREAMS\fP stream head type against a device
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.br
.B #include <sys/strconfig.h>
.HP
.BI "int register_inode(dev_t " dev ", struct cdevsw *" cdev ", struct file_operations *" fops );
.HP
.BI "int register_inode_major(dev_t " dev ", struct cdevsw *" cdev ", struct file_operations *" fops );
.HP
.BI "int register_inode_minor(dev_t " dev ", struct cdevsw *" cdev ", struct file_operations *" fops );
.HP
.BI "int unregister_inode(dev_t " dev ", struct cdevsw *" cdev );
.HP
.BI "int unregister_inode_major(dev_t " dev ", struct cdevsw *" cdev );
.HP
.BI "int unregister_inode_minor(dev_t " dev ", struct cdevsw *" cdev );
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I dev
the device number to register the stream head against.
.TP
.I cdev
the
.BR cdevsw (9)
structure used to describe the stream head.
.TP
.I fops
the
.B file_operations
structure to be used by the
.I STREAMS
executive when opening the device with the stream head.
.\"
.\"
.SH DESCRIPTION
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major ()
and
.BR unregister_inode_minor ()
are used by the
.B Linux Fast-STREAMS
subsystem to load specialized stream head drivers against a major or
major-minor device number.
.PP
The
.B Linux Fast-STREAMS
uses these functions for loading,
.BR spx (4),
.BR pipe (4),
.BR sfx (4),
.BR fifo (4),
.BR clone (4)
and
.BR socksys (4)
device drivers requiring the use of a specialized stream head or specialized
interface functions to a generic stream head.
.PP
When
.BR register_inode ()
or
.BR unregister_inode ()
is called with a zero minor device number in
.IR dev ,
.BR register_inode_major ()
or
.BR unregister_inode_major ()
are called;
with a non-zero minor device number,
.BR register_inode_minor ()
or
.BR unregister_inode_minor ()
are called.
.PP
.BR register_inode_major ()
and
.BR unregister_inode_major ()
register or deregister a stream head from a given (or automatically assigned)
major device number.
.PP
.BR register_inode_minor ()
and
.BR unregister_inode_minor ()
register or deregister the stream head from a specific major-minor device
number combination.
.PP
Both registration and deregistration functions take a
.BR cdevsw (9)
structure in the
.I cdev
argument.  The same
.I cdev
argument must be passed to the deregistration function as was passed to the
registration function.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR register_inode (),
.BR register_inode_major ()
and
.BR register_inode_minor ()
return a positive value indicating the assigned major device number.
Upon failure,
.BR register_inode (),
.BR register_inode_major ()
and
.BR register_inode_minor ()
return a negative error number.
.PP
Upon success,
.BR unregister_inode (),
.BR unregister_inode_major ()
and
.BR unregister_inode_minor ()
return zero (0).
Upon failure,
.BR unregister_inode (),
.BR unregister_inode_major ()
and
.BR unregister_inode_minor ()
return a negative error number.
.\"
.\"
.SH ERRORS
.PP
When
.BR register_inode (),
.BR register_inode_major ()
or
.BR register_inode_minor ()
fails, an appropriate negative error number is returned as follows:
.TP
.RB [ EINVAL ]
.I cdev
was
.BR NULL ,
or
.I dev
contained an invalid major device number
.RB ( ">= MAX_CHRDEV" ),
or
.BR register_inode_major ()
was called with a non-zero minor device number in
.IR dev .
.TP
.RB [ EBUSY ]
A different
.I cdev
is already registered to the device number
.IR dev ,
or automatic major device number assignment was requested and there are no
more available major device numbers.
.PP
When
.BR unregister_inode (),
.BR unregister_inode_major ()
or
.BR unregister_inode_minor ()
fails, an appropriate negative error number is returned as follows:
.TP
.RB [ EINVAL ]
.I cdev
was
.BR NULL ,
or
.I dev
contained an invalid major device number
.RB ( ">= MAX_CHRDEV" ),
or
.BR unregister_inode_major ()
was called with a non-zero minor device number in
.TP
.RB [ ENXIO ]
The device number specified in the
.I dev
argument is not registered.
.TP
.RB [ EPERM ]
The device number specified in the
.I dev
argument is registered to a
.I cdev
different than that provided.
.\"
.\"
.SH CONTEXT
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
can be called from any context; however,
they are normally called from a
.BR module_init (9),
.BR module_exit (9),
.BR __init (9)
or
.BR __exit (9)
procedure.
.\"
.\"
.SH MP-STREAMS
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
are MP-safe.
.\"
.\"
.SH NOTICES
.PP
.\"
.\"
.SH "SEE ALSO"
.PP
.BR register_strdev (9),
.BR register_strdev_major (9),
.BR register_strdev_minor (9),
.BR unregister_strdev (9),
.BR unregister_strdev_major (9),
.BR unregister_strdev_minor (9),
.BR register_strmod (9),
.BR unregister_strmod (9),
.BR lis_register_strdev (9),
.BR lis_unregister_strdev (9),
.BR lis_register_strmod (9),
.BR lis_unregister_strmod (9).
.\"
.\"
.SH BUGS
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
have no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
are
.B Linux Fast-STREAMS
specific functions.
.PP
See
.BR STREAMS (9)
for additional compatibility considerations.
.\"
.\"
.SH CONFORMANCE
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
are
.B Linux Fast-STREAMS
specific functions.
.\"
.\"
.SH HISTORY
.PP
.BR register_inode (),
.BR register_inode_major (),
.BR register_inode_minor (),
.BR unregister_inode (),
.BR unregister_inode_major (),
and
.BR unregister_inode_minor ()
first appeared in
.BR "Linux Fast-STREAMS" .
.[
LfS
.]
.\"
.\"
.[
$LIST$
.]
.TI
