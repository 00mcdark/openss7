'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: flushband.9.man,v 0.9.2.18 2005/04/28 11:36:37 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2003  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any success
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/04/28 11:36:37 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH FLUSHBAND 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B flushband
\- flushes band \fISTREAMS\fR messages from a message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "void flushband(queue_t *" q ", unsigned char " band ", int " flag );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue to flush.
.PD 0
.TP
.I band
the band to flush within the queue.
.TP
.I flag
how to flush the band within the queue.
.PD
.\"
.\"
.SH DESCRIPTION
.PP
.BR flushband ()
is used to flush messages from a message queue band.  It is typically called
in a
.BR M_FLUSH (9)
handling routine to flush the requested messages from a queue band.
.PP
If
.I band
is zero (0),
.BR flushband ()
will flush only normal and high priority messages.
.PP
.I flag
can be one of the following:
.TP \w'\ FLUSHDATA\ 'u
.B FLUSHDATA
Flush only data messages; do not flush the control messages from the queue
band.
.PD 0
.TP
.B FLUSHALL
Flush all the messages from queue band: both data messages and control
messages.
.PD
.PP
If
.I flag
is other than
.BR FLUSHDATA " or " FLUSHALL
.BR flushband ()
will perform
.BR FLUSHALL .
.PP
If
.B QB_WANTW
is set for the band and the flush causes the band's count to fall below the low water mark, or if
the band's count is reduced to zero, the nearest feeding queue with a service procedure or that is a
stream head or stream end (including a multiplexing driver) will be enabled.  That is, back-enabling
will be performed.  The
.B QB_FULL
and
.B QB_WANTW
flags will also be cleared.
.\"
.\"
.SH RETURN
.BR flushband ()
flushes the specified band and then returns
.BR void .
.\"
.\"
.SH ERRORS
.PP
.BR flushband ()
always succeeds.
.\"
.\"
.SH CONTEXT
.PP
.BR flushband ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.PP
Because
.BR flushband ()
can take some time to process if there are many messages on the queue or
.I flags
is
.BR FLUSHDATA ,
.BR flushband ()
should not be called from interrupt service routines or functions with
interrupts disabled or global locks held.
.\"
.\"
.SH MP-STREAMS
.PP
.BR flushband ()
is MP-safe.
.BR flushband ()
takes a recursive write lock on the queue being flushed.  This means that calling
.BR flushband ()
on a stream that has been frozen with
.BR freezestr (9)
will not result in single-party deadlock.
.\"
.\"
.SH NOTICES
.PP
.BR flushband ()
is a widely supported
.I STREAMS
function.
Portable
.I STREAMS
modules and drivers may use
.BR flushband ();
however, portable
.I STREAMS
modules and drivers
will not call
.BR flushband ()
with a band of zero (0).
See
.RI \(lq COMPATIBILITY \(rq,
below.
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR flushband ()
performs fast flushes by linking all band messages into the per-thread free messages list.  These
messages will then later be broken into individual message blocks and freed to the per-thread free
list and finally to the
.B mdbblock
memory cache at the end of any queue run.  A new queue service run will be scheduled if one is not
already running.
.PP
.BR flushband ()
is well optimized to handle the initial stage of
.B FLUSHALL
flushes in constant time.
.\"
.\"
.SH EXAMPLES
.PP
.BR flushband ()
is normally used within the
.BR M_FLUSH (9)
handling procedures for a
.I STREAMS
module or driver as follows:
.sp
.in +4
.nf
\fC\s-2\
int x_w_flush(queue_t *q, mblk_t *mp)
{
   if (*mp->b_rptr & FLUSHW) {
      if (*mp->b_rptr & FLUSHBAND && mp->b_rptr[1] != 0)
         flushband(WR(q), mp->b_rptr[1], FLUSHALL);
      else
         flushq(WR(q), FLUSHALL);
      if (q->q_next) {
         putnext(q, mp);
         return (0);
      }
      *mp->b_rptr &= ~FLUSHW;
   }
   if (*mp->b_rptr & FLUSHR) {
      if (*mp->b_rptr & FLUSHBAND && mp->b_rptr[1] != 0)
         flushband(RD(q), mp->b_rptr[1], FLUSHALL);
      else
         flushq(RD(q), FLUSHALL);
      if (!q->q_next) {
         qreply(q, mp);
         return (0);
      }
      *mp->b_rptr &= ~FLUSHR;
   }
   freemsg(mp);
   return (0);
}
int x_r_flush(queue_t *q, mblk_t *mp)
{
   if (*mp->b_rptr & FLUSHR) {
      if (*mp->b_rptr & FLUSHBAND && mp->b_rptr[1] != 0)
         flushband(RD(q), mp->b_rptr[1], FLUSHALL);
      else
         flushq(RD(q), FLUSHALL);
      if (q->q_next) {
         putnext(q, mp);
         return (0);
      }
      *mp->b_rptr &= ~FLUSHR;
   }
   if (*mp->b_rptr & FLUSHW) {
      if (*mp->b_rptr & FLUSHBAND && mp->b_rptr[1] != 0)
         flushband(WR(q), mp->b_rptr[1], FLUSHALL);
      else
         flushq(WR(q), FLUSHALL);
      if (!q->q_next) {
         qreply(q, mp);
         return (0);
      }
      *mp->b_rptr &= ~FLUSHW;
   }
   freemsg(mp);
   return (0);
}
\s+2\fR
.fi
.PP
Note in the example that the band is checked for band zero (0) before calling
.BR flushband ().
If the band is zero (0), then
.BR flushq (9)
is call instead.  This is consistent with portability recommendations listed under
.RI \(lq COMPATIBILITY \(rq,
below.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR freezestr (9),
.BR flushq (9).
.\"
.\"
.SH BUGS
.BR flushband ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR flushband ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR flushband ()
moves messages from the queue to the per-CPU free chains list.  Freeing blocks
on the free chains list will be deferred to the next
.BR runqueues (9)
pass.  The next
.BR runqueues (9)
pass frees message blocks from the flush to the per-CPU free blocks list for
use by service procedures in the pass.
.BR runqueues (9)
runs at normal soft interrupt priority.
.I LiS
removes all messages from the queue and then rebuilds the queue one message at a time while freeing
those to be flushed.  This is a rather inefficient way to do things, and with
.I LiS
running at higher priority than soft interrupts, bottom halves and timeouts, all these are locked
out until the flush is complete.
.B Linux Fast-STREAMS
.BR flushband ()
should have far less of an impact on system latency and performance as that of
.IR LiS .
.IP \(em
.BR flushband ()
holds the queue write lock while removing selected messages or unlinking
entire bands.  Order is preserved across concurrent attempts to perform
.BR putq (9),
.BR insq (9),
.BR appq (9),
.BR rmvq (9)
or
.BR putbq (9)
functions.
.I LiS
empties the queue and unlocks the queue and then goes about adding messages back onto the queue that
need to remain using normal utility functions.  This means that order is not necessarily preserved
(even for messages that were on the queue) with concurrent calls to
.BR putq (9),
.BR insq (9),
.BR appq (9),
.BR rmvq (9)
or
.BR putbq (9)
functions.  Also, queue enabling and back-enabling will not necessary be performed correctly.  There
doesn't seem to be any excuse for the
.I LiS
approach, removing messages from the queue,
.BR rmvq (9),
is no more difficult than inserting them,
.BR insq (9).
.IP \(em
.BR flushband ()
flushes normal and high priority messages when
.I band
is zero (0).
.IR AIX \(rg
.[
aixspg
.]
and
.IR UXP/V \(rg
.[
uxpspg
.]
state that a
.I band
of zero (0) will only flush ordinary messages.
.IR IRIX \(rg,
.[
irixdoc
.]
.IR OSF/1 \(rg,
.[
osfspg
.]
.IR Solaris \(rg
.[
solspg
.]
and
.IR SUPER-UX \(rg
.[
suxspg
.]
state that a
.I band
of zero (0) flushes normal and high priority messages.
.IR UnixWare \(rg
.[
uw7spg
.]
states that a
.I band
of zero (0) flushes normal priority (band 0) messages.
.IR LiS ,
when
.I band
is zero (0), will only flush normal priority messages from band zero and will leave high priority
messages on the queue.
.IP ""
Portable
.I STREAMS
modules and drivers should never call
.BR flushband ()
with a band of zero (0).  Portable
.I STREAMS
modules and drivers should call
.BR flushq (9)
instead.
.IP \(em
.BR flushband ()
does not clear the
.B QWANTR
flag when flushing an empty queue.  This is an indication to the
.I STREAMS
scheduler that
.BR getq (9)
read an empty queue and back-enabling has already been performed for the queue.
.I LiS
clears the
.B QWANTR
flag when flushing an empty queue.  This means that the next call to
.BR getq (9)
for the empty queue will perform an extra back-enable.
.IP \(em
.BR flushband ()
may be called on a stream frozen with
.BR freezestr (9).
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR flushband ()
to be called on a stream frozen with
.BR freezestr (9).
.IP ""
Portable
.I STREAMS
drivers and modules should not call
.BR flushband ()
on a stream frozen with
.BR freezestr (9).
.IP \(em
Symbol
.BR lis_flushband ()
is provided for compatibility with
.IR LiS .
.BR lis_flushband ()
calls
.BR flushband ()
directly.
See
.BR liscompat (9).
.I LiS
appears to be rather buggy with regard to flushing queues and the compatible
.BR lis_flushband ()
may behave rather different from that of
.IR LiS .
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 MP DDI/DKI
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR flushband ()
first appeared in
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
