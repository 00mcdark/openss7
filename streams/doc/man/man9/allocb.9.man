'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: allocb.9.man,v 0.9.2.7 2004/04/19 02:58:16 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2003  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any success
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2004/04/19 02:58:16 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH ALLOCB 9 "$Date: 2004/04/19 02:58:16 $" "$Name:  $" "Linux Fast-STREAMS DDI/DKI"
.\"
.\"
.SH NAME
.B allocb
\- allocate a \fISTREAMS\fR message and data block
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "mblk_t *allocb(size_t " bsize ", uint " bpri );
.\"
.\"
.SH ARGUMENTS
.TP
.I bsize
the size of the message buffer to allocate.
.TP
.I bpri
the priority of the requested message buffer.
.\"
.\"
.SH DESCRIPTION
.PP
.BR allocb ()
allocates a message block and a data block of the requested
.IR bsize " and " bpri .
.PP
If the requested
.I bsize
is less than the
.I STREAMS
constant
.B FASTBUF
then a data block of size
.B FASTBUF
will be created.
If the requested
.I bsize
is larger than the
.I STREAMS
constant
.B FASTBUF
then a data block of size
.I bsize
will be created.
.PP
The
.I bpri
can be one of the following values:
.sp
.TS
expand tab(:);
lb0ls.
BPRI_LO\ \ :requests a low priority message buffer.
BPRI_MED\ \ :requests a medium priority message buffer.
BPRI_HI\ \ :requests a high priority message buffer.
BPRI_WAITOK\ \ :block for a low priority message buffer.
.TE
.PP
If
.BR allocb ()
is called with a
.I bpri
other than
.BR BPRI_LO ", " BPRI_MED ", " BPRI_HI " or " BPRI_WAITOK ,
the request will be treated as
.BR BPRI_LO .
.PP
The
.I bpri
argument is ignored by
.I "SVR 4"
.[
svr4spg
.]
and later implementations.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR allocb ()
will
return an
.BR mblk_t (9)
pointer to the allocated message block.
The allocated message block will have a data block type of
.BR M_DATA .
All bands and flags will be cleared.
.I b_rptr
and
.I b_wptr
will be set to the beginning of the data block buffer area.
.PP
Upon failure,
.BR allocb ()
will
return a
.B NULL
pointer.
.\"
.\"
.SH ERRORS
.PP
When an error occurs,
.BR allocb ()
will return a
.B NULL
message pointer.
.PP
.BR allocb ()
will only fail if there is insufficient memory to allocate the necessary
data structures for the message block, data block or data buffer, for the given
value of
.I bsize
and
.IR bpri .
.PP
Failure to allocate a message block is typically followed by a call to
.BR bufcall (9).
.\"
.\"
.SH USAGE
.PP
Priority
.B BPRI_WAITOK
is added for
.IR OSF/1 \(rg
.[
osfspg
.]
compatibility and should not be used by portable
.I STREAMS
drivers or modules.
.PP
Portable
.I STREAMS
drivers and modules should not rely on any setting of priority and should
assume that the implementation ignores the
.I bpri
argument.
.\"
.\"
.SH CONTEXT
.PP
.BR allocb ()
can be called from any context, including user context, module procedures,
call outs, callbacks, soft interrupts and interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR allocb ()
is MP-safe.  The caller has exclusive access to the returned message.
.\"
.\"
.SH NOTICES
.PP
Many post-SVR 3
.[
svr3
.]
.I STREAMS
implementations ignore the
.I bpri
argument to
.BR allocb ().
The message block
.I bpri
was an SVR 3
.[
svr3spg
.]
concept which was found not to be useful, primarily due to priority inversion.
For a history of the priority mechanism, and a discussion as to why the
mechanism was abandoned in SVR 4,
.[
svr4spg
.]
see
.I \*(lqThe Magic Garden\*(rq
section 7.2.2.
.[
magic
.]
.PP
.B Linux Fast-STREAMS
.[
LfS
.]
keeps two stores for combined message data blocks
.RB ( mdbblocks ):
a per-CPU free block list that is maintained during the
.BR runqueues (9)
pass to hold free message blocks (but freed to the memory cache at the end of
the pass), and an
.B mdbblock
memory cache.
.PP
In consideration of priority,
.BR allocb ()
uses the following allocation differences based on the value of
.IR bpri :
.TP \w'\ BPRI_WAITOK\ 'u
.B BPRI_LO
The mesasge block will be allocated from the
.I STREAMS
.B mdbblock
memory cache.
.BR kmem_cache_alloc (9)
will not be permitted to grow the
.B mdbblock
memory cache to meet the request.  When speed is not critical and a longer
wait for success is acceptable, use
.BR BPRI_LO .
.TP
.B BPRI_MED
The message block will be allocated from the
.I STREAMS
.B mdbblock
memory cache.
.BR kmem_cache_alloc (9)
will be permitted to grow the
.B mdbblock
memory cache as necessary to meet the request.  Where speed is not so
critical, but a shorter wait for success is needed, use
.BR BPRI_MED .
.TP
.B BPRI_HI
The message block will be allocated from the per-CPU
.I STREAMS
scheduler fast free chain, or if there is no message block in the fast free
chain, it will be allocated from the
.B mdbblock
memory cache.
.BR kmem_cache_alloc (9)
will be permitted to grow the
.B mdbblock
memory cache as necessary to meet the request.  Where speed is critical, and a
low latency for success is also needed, use
.BR BPRI_HI .
When
.BR allocb ()
is called immediately following
.BR freeb (9)
or
.BR freemsg (9),
use
.BR BPRI_HI
to obtain the same block that was freed.
.TP
.B BPRI_WAITOK
The buffer allocation will be treated as
.BR BPRI_LO ,
but the caller will block waiting to obtain a buffer.
.PP
In this way, the
.I bpri
argument determines the delay in satisfying the request rather than the
ultimate probability of success, permitting low latency tasks to specify
.BR BPRI_HI ,
high-latency and blocking tasks to specify
.BR BPRI_LO " or " BPRI_WAITOK ,
and somewhere in between to specify
.BR BPRI_MED .
.PP
In addition,
.BR allocb ()
will fail to allocate a combined message data block if the number of message
blocks allocated by
.I STREAMS
exceeds the system tunable parameter
.BR sys.streams.nstrmsgs .
.B sys.streams.nstrmsgs
defines the maximum number of combined message data blocks that will be 
allocated on a system-wide basis.  This is a run-time parameter.
.PP
Also,
.BR allocb ()
will fail to allocate a buffer if the number of bytes allocated by
.BR kmem_alloc "(9) or " kmem_zalloc (9)
exceeds the system tunable parameter
.BR sys.streams.strthresh .
.B sys.streams.strthresh
defines the maximum amount of memory that will be allocated for use by the
.I STREAMS
subsystem via
.BR kmem_alloc "(9) or " kmem_zalloc (0),
or indirectly using
.BR allocb (),
or allocating other streams data structures.
.PP
The current number and high water mark since boot of allocated combined
message data blocks are present in the Strinfo array and can be viewed from
.BR /proc/streams/Strinfo .
.\"
.\"
.SH "SEE ALSO"
.PP
.BR mblk_t (9),
.BR freeb (9),
.BR freemsg (9),
.BR bufcall (9).
.\"
.\"
.SH BUGS
.PP
.BR allocb ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR allocb ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
and systems based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.IR AIX \(rg
.[
aixspg
.]
and
.IR HP-UX \(rg
.[
hpuxspg
.]
deny priority requests based on two system tunable thresholds in the number
of bytes of memory allocated for
.IR STREAMS :
a low fraction above which requests of priority
.B BPRI_LO
will be refused, a medium fraction above which requests of priority
.B BPRI_MED
will be refused, and \*(lqthewall\*(rq at which all requests are refused.
.IP \(em
.IR OSF/1 \(rg,
.[
osfspg
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg,
.[
suxspg
.]
.IR UnixWare \(rg,
.[
uw7spg
.]
.IR UXP/V \(rg
.[
uxpspg
.]
and
.I LiS
.[
lis
.]
only fail allocation when the system is out of memory.
.IP \(em
.IR "OSF/1" \(rg
.[
osfspg
.]
introduced the
.B BPRI_WAITOK
priority level, which is provided also by
.BR allocb ()
for compatibility with
.IR "OSF/1" \(rg.
.[
osfspg
.]
.B BPRI_WAITOK
is normally only used by stream heads and in the
.BR qopen (9)
or
.BR qclose (9)
procedure (which run in user context).
.IP \(em
.IR UnixWare \(rg
.[
uw7spg
.]
documentation
says that some implementations  may fail based on priority,
.IR bpri ,
but doesn't way what
.IR UnixWare \(rg
.[
uw7spg
.]
does.
.IP \(em
.BR allocb ()
uses the priority mechanism described above under
.IR \*(lqNOTICES\*(rq .
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
permits implementations to decide how to use the priority argument.
.IR "OSF/1" \(rg,
.[
osfspg
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg,
.[
suxspg
.]
.IR UnixWare \(rg,
.[
uw7spg
.]
.IR UXP/V \(rg
.[
uxpspg
.]
and
.I LiS
.[
lis
.]
ignore the
.I bpri
argument as also described under
.IR \*(lqNOTICES\*(rq ,
above,
and only deny allocation when the system is out of memory.
.IR AIX \(rg,
.[
aixspg
.]
.IR HP-UX \(rg,
.[
hpuxspg
.]
uses thresholds and denies buffers on the basis of priority,
.IR bpri .
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for more compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.I "SVR 4.2 MP DDI/DKI"
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR allocb ()
first appeared in 
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
