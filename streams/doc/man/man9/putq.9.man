'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: putq.9.man,v 0.9.2.15 2005/05/14 08:34:28 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/05/14 08:34:28 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH PUTQ 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B putq
\- put a message on a \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "int putq(queue_t *" q ", mblk_t *" mp );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue on which the place the message.
.PD 0
.TP
.I mp
the message to place on the queue.
.PD
.\"
.\"
.SH DESCRIPTION
.PP
.BR putq ()
places the message pointed to by
.I mp
on the queue
.I q
without invoking the queue's put procedure.
.PP
After placing the message on queue
.IR q ,
.BR putq ()
adjusts the queue's flags and byte counts appropriately and schedules the
queue service procedure when necessary.
.PP
If a priority message is placed onto the queue, the queue will always be enabled, as with
.BR qenable (9);
that is, the queue's service procedure will be scheduled if it exists.
.PP
If a normal message is placed onto the queue and the
.B QWANTR
flag is set for the queue, then the queue will be enabled, as with
.BR enableq (9);
that is, the queue's service procedure will be scheduled if it exists and the
.B QNOENB
flag has not been set for the queue with
.BR noenable (9).
.PP
The message will always be placed in order in the queue.  If the message is a high priority message,
it will be placed on the queue immediately following other high priority messages and ahead of
normal messages.  If the message is a normal message, it is placed after other messages in the queue
band.
.PP
Placing the first message for a queue band onto the queue can result in the allocation of a
.BR qband (9)
structure to provide accounting for the queue band.  Failure to allocate a
.BR qband (9)
structure can cause
.BR putq (9)
to fail.  Failure can be avoided by ensuring that a
.BR qband (9)
structure exists for the band,
.IR mp->b_band ,
using
.BR strqget (9)
or
.BR strqset (9).
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR putq ()
returns true (1) and places the message pointed to by
.I mp
on the queue pointed to by
.IR q .
Upon failure,
.BR putq ()
returns false (0) and does not alter the passed in queue or message.
.\"
.\"
.SH ERRORS
.PP
When
.BR putq ()
fails, it returns false (0).
.BR putq ()
only fails when a
.BR qband (9)
structure could not be allocated for a banded message arriving at a first use
empty band.
.BR putq ()
always succeeds for high priority and normal band zero (0) messages.
.\"
.\"
.SH CONTEXT
.PP
.BR putq ()
can be called from any context, including user context, module procedures,
callouts, callbacks, soft interrupts and interrupt service routines.
.PP
.BR putq ()
called on a queue frozen by
.BR freezestr (9)
will result in single-party deadlock.
.\"
.\"
.SH MP-STREAMS
.PP
.BR putq ()
is MP-safe.
.\"
.\"
.SH NOTICES
.PP
It can be guaranteed that
.BR putq ()
will always succeed, even for banded messages, by calling
.BR strqget (9)
or
.BR strqset (9)
to set the high and low water marks and packet sizes for all bands used by the
driver or module.
.PP
When
.BR putq ()
fails and returns zero (0), it is the callers responsibility to address the
disposition of the passed in message,
.IR mp .
A typical response would be to free the message using
.BR freemsg (9).
Because the caller is responsible for the message upon failure, the return value from
.BR putq ()
should alway be examined.
Portable
.I STREAMS
modules and drivers will always examine the return value from
.BR putq ()
and take responsibility for the passed in message if
.BR putq ()
returns failure.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR qenable (9),
.BR enableq (9),
.BR noenable (9),
.BR qband (9),
.BR strqget (9),
.BR strqset (9),
.BR freezestr (9),
.BR insq (9),
.BR putbq (9),
.BR getq (9),
.BR rmvq (9).
.\"
.\"
.SH BUGS
.PP
.BR putq ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR putq ()
is compatible with 
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
.[
svr4dk
.]
with the following porting considerations:
.IP \(em \w'\(em\(em'u
.BR putq ()
is not bug for bug compatible with 
.IR LiS .
.IP ""
Versions of
.I LiS
previous to
.I OpenSS7 Release LiS-2.16.18-17
automatically freed the message on failure.
Versions of
.I LiS
subsequent to
.I OpenSS7 Release LiS-2.16.18-16
do not free the message on failure in accordance with
.I SVR 4.2
and other implementation documentation.
The
.I LiS
implementation of
.BR putq ()
stil has bugs related to
.BR qprocsoff (9)
handling in that it fails while
.BR qprocsoff (9)
is in effect or if the stream is closing.
.IP ""
Portable
.I STREAMS
modules and drivers will not use releases of
.I LiS
prior to
.IR "OpenSS7 Release LiS-2.16.18-17" .
.IP \(em
.BR putq ()
may be called on a stream frozen with
.BR freezestr (9).
.IR Solaris \(rg,
.IR SUPER-UX \(rg
and
.IR UnixWare \(rg
do not permit
.BR putq ()
to be called on a stream frozen with
.BR freezestr (9).
.[
solspg
.]
.[
suxspg
.]
.[
uw7spg
.]
.IP ""
Portable
.I STREAMS
drivers and modules should not call
.BR putq ()
on a stream frozen with
.BR freezestr (9).
.IP \(em
Symbol
.BR lis_putq ()
is provided for compatibility with
.IR LiS .
See
.BR liscompat (9).
.BR lis_putq ()
simply calls
.BR putq ()
directly.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
.IR "SVR 4.2 MP DDI/DKI" .
.[
usldk
.]
.\"
.\"
.SH HISTORY
.PP
.BR putq ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR putq ()
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
