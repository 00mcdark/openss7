'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: getq.9.man,v 0.9.2.4 2004/03/16 08:01:17 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2003  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any success
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2004/03/16 08:01:17 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH GETQ 9 "$Date: 2004/03/16 08:01:17 $" "$Name:  $" "Linux Fast-STREAMS DDI/DKI"
.\"
.\"
.SH NAME
.B getq
\- gets a message from a \fISTREAMS\fP message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "mblk_t *getq(queue_t *" q );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue from which to retrieve a message.
.\"
.\"
.SH DESCRIPTION
.PP
.BR getq ()
retrieves a message from the specified queue,
.IR q ,
and returns a pointer to that message to the caller.  If there are no message
on the specified queue,
.IR q ,
.BR getq ()
returns a
.B NULL
pointer.
.PP
When
.BR getq ()
retrieves a message from the queue, it checks whether the low water mark has
been acheived.  If the low water mark has been crossed and the backward queue needs
back-enabling,
.BR getq ()
performs the necessary back-enabling by scheduling queue service routines
backwards up the queue chain.
.PP
When
.BR getq ()
returns
.B NULL
(the queue,
.IR q ,
is empty),
.BR getq ()
sets the
.B QWANTR
flag for the queue and performs back-enabling.
The
.B QWANTR
flag indicates to the streams scheduler that back-enabling has already been
performed for the empty queue and subsequent calls to
.BR getq ()
for the same empty queue will not generate another back-enable.
.PP
.BR getq ()
is normally called from within a queue service routine.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR getq ()
returns a pointer to the message which has been removed from the queue,
.IR q .
.PP
Upon failure,
.BR getq ()
returns a
.B NULL
pointer.
.\"
.\"
.SH ERRORS
.PP
When the queue specified by
.I q
is empty,
.BR getq ()
returns a
.B NULL
pointer.
If the
.B QWANTR
flag is not already set for the queue,
.BR getq ()
will set the
.B QWANTR
flag and back-enable the stream.
.\"
.\"
.SH CONTEXT
.PP
.BR getq ()
can be called from any context.
.\"
.\"
.SH MP-STREAMS
.PP
.BR getq ()
is MP-safe.
.BR getq ()
takes a write lock on the queue, so calling
.BR getq ()
while the queue is frozen with
.BR freezestr (9)
will result in single-party deadlock.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR rmvq (9),
.BR putbq (9),
.BR putq (9).
.\"
.\"
.SH BUGS
.PP
.BR getq ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR getq ()
is source-level compatible with SVR 4.2 MP DDI/DKI,
.IR Solaris \(rg
and LiS
.[
LiS
.]
with the following exceptions:
.IP \(em \w'\ \(em\ 'u
.BR getq ()
passed a
.B NULL
or invalid queue pointer,
.IR q ,
will have undefined results.
Under LiS,
an
.B NULL
.I q
pointer will return
.B NULL
(but an invalid queue pointer can still have undefined results because LiS
mistakenly locks the queue before testing the validity of the queue pointer).
As most service procedures pass
.BR getq ()
the queue pointer passed to the service procedure, these corner cases should
rarely be encountered.
.IP \(em
.BR getq ()
will retrieve messages from a queue that has had
.BR qprocsoff (9)
called or which is closing
.RB ( qclose (9)
has been called).
Under LiS,
.BR getq ()
will return
.B NULL
in these cases.
LiS behavior is incorrect for these cases.
.BR qprocsoff (9)
only effects the running of queue procedures and should not affect
.BR getq ().
.BR qclose (9)
may need to exchange messages with lower level queue pairs and making
.BR getq ()
return
.B NULL
during close is an LiS bug.
.IP \(em
.IR UnixWare \(rg
.[
uw7spg
.]
and
.IR SUPER-UX \(rg
.[
suxspg
.]
do not permit
.BR getq ()
to be called on a stream frozen with
.BR freezestr (9).
.PP
Symbol
.BR lis_getq ()
is provided for binary compatibility with LiS.  See
.BR lisbcm (9).
.BR lis_getq ()
calls
.BR getq ()
directly.
.PP
Binary compatibility with SVR 4.2 MP and
.IR Solaris \(rg
is not guaranteed.
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 MP DDI/DKI,
.[
usldk
.]
.IR Solaris \(rg
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR getq ()
first appeared in SVR 3.
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
