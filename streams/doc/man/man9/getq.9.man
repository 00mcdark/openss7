'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: getq.9.man,v 0.9.2.22 2005/11/30 13:59:23 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (C) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/11/30 13:59:23 $ by $Author: brian $
.\"
.\" =========================================================================
.so streams.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database streams.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH GETQ 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B getq
\- gets a message from a \fISTREAMS\fP message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP
.BI "mblk_t *getq(queue_t *" q );
.\"
.\"
.SH ARGUMENTS
.TP
.I q
the queue from which to retrieve a message.
.\"
.\"
.SH INTERFACE
.PP
.IR STREAMS .
.\"
.\"
.SH DESCRIPTION
.PP
.BR getq ()
retrieves a message from the specified queue,
.IR q ,
and returns a pointer to that message to the caller.  If there are no message
on the specified queue,
.IR q ,
.BR getq ()
returns a
.B NULL
pointer.
.\"
.SS Flow Control
.PP
Whenever
.BR getq ()
retrieves a message from the queue, the following actions are performed:
.IP 1. \w'\ 3.\ 'u
The
.B QWANTR
bit is cleared for the queue.
.IP 2.
.BR getq ()
checks whether the queue count has dropped to zero, or beneath the low water mark.  When the queue
or queue band count drops to zero or beneath the low water mark, the
.BR QFULL " or " QB_FULL
bit is cleared for the queue or queue band.
.IP 3.
.BR getq ()
checks whether the low water mark has been achieved.  If the low water mark has been crossed and the
backward queue needs back-enabling (that is, the
.BR QWANTW " or " QB_WANTW
bit is set for the queue or queue band),
.BR getq ()
performs the necessary back-enabling by scheduling queue
.IR qi_srvp (9)
procedure backwards up the queue
chain.
.PP
When
.BR getq ()
returns
.B NULL
(the queue,
.IR q ,
is empty),
the following actions are performed:
.IP 1. \w'\ 3.\ 'u
.BR getq ()
sets the
.B QWANTR
flag for the queue.
The
.B QWANTR
flag indicates to the streams scheduler that back-enabling has already been performed for the empty
queue, and subsequent calls to
.BR getq ()
for the same empty queue will not generate another back-enable.
The
.B QWANTR
flag indicates to
.BR putq (9),
.BR putbq (9),
.BR insq (9)
that the queue should be enabled when a message is enqueued.
.PP
.BR getq ()
is normally called from within a queue
.IR qi_srvp (9)
procedure.
.\"
.\"
.SH RETURN
.PP
Upon success,
.BR getq ()
returns a pointer to the message which has been removed from the queue,
.IR q .
.PP
Upon failure,
.BR getq ()
returns a
.B NULL
pointer.
.\"
.\"
.SH ERRORS
.PP
When the queue specified by
.I q
is empty,
.BR getq ()
returns a
.B NULL
pointer.
If the
.B QWANTR
flag is not already set for the queue,
.BR getq ()
will set the
.B QWANTR
flag and back-enable the stream.
.\"
.\"
.SH CONTEXT
.PP
.BR getq ()
can be called from any non-ISR context, including user context, module procedures,
callouts, callbacks, soft interrupts, but excluding interrupt service routines.
.\"
.\"
.SH MP-STREAMS
.PP
.BR getq ()
is MP-safe.
.PP
.BR getq ()
called on a queue frozen by
.BR freezestr (9)
will result in single-party deadlock.
.\"
.\"
.SH "SEE ALSO"
.PP
.BR freezestr (9),
.BR rmvq (9),
.BR putbq (9),
.BR putq (9).
.\"
.\"
.SH BUGS
.PP
.BR getq ()
has no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR getq ()
is compatible with
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
and implementations based on
.IR "SVR 4" ,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR getq ()
passed a
.B NULL
or invalid queue pointer,
.IR q ,
will have undefined results.
.IP ""
Under
.IR LiS ,
an
.B NULL
.I q
pointer will return
.B NULL
(but an invalid queue pointer can still have undefined results because
.I LiS
mistakenly locks the queue before testing the validity of the queue pointer).
As most
.IR qi_srvp (9)
procedures pass
.BR getq ()
the queue pointer passed to the
.IR qi_srvp (9)
procedure, these corner cases should
rarely be encountered.
.IP \(em
.BR getq ()
will retrieve messages from a queue that has had
.BR qprocsoff (9)
called or which is closing
.RI ( qi_qclose (9)
has been called).
.IP ""
Under
.IR LiS ,
.BR getq ()
will return
.B NULL
in these cases.
.I LiS
behavior is incorrect for these cases.
.BR qprocsoff (9)
only effects the running of queue procedures and should not affect
.BR getq ().
.IR qi_qclose (9)
may need to exchange messages with lower level queue pairs and making
.BR getq ()
return
.B NULL
during close is an
.I LiS
bug.
.IP \(em
.BR getq ()
may be called on a stream frozen with
.BR freezestr (9),
but it is not recommended.
.IP ""
.IR "SVR 4.2 MP DDI/DKI" ,
.[
usldk
.]
.IR Solaris \(rg,
.[
solspg
.]
.IR SUPER-UX \(rg
.[
suxspg
.]
and
.IR UnixWare \(rg
.[
uw7spg
.]
do not permit
.BR getq ()
to be called on a stream frozen with
.BR freezestr (9).
.IP ""
Portable
.I STREAMS
drivers and modules should not call
.BR getq ()
on a stream frozen with
.BR freezestr (9),
the should call
.BR rmvq (9)
instead.
.IP \(em
.BR getq ()
cannot be called from an interrupt service routine.
.IP ""
.B @PACKAGE_TITLE@
does not permit
.BR getq ()
to be called from an interrupt service routine context to remove the need for suppressing
local interrupts throughout the
.I STREAMS
executive.  The only queue procedure that
.B @PACKAGE_TITLE@
permits to be called from an interrupt service routine context is
.IR qi_putp (9),
and that function defers until the next
.BR runqueues (9)
pass.
.IP ""
Portable
.I STREAMS
modules and drivers will not call
.BR getq ()
from any context outside a
.I STREAMS
queue procedure or callback function.  At the Stream end (Stream head or driver), from a context
other than a
.I STREAMS
coroutine, only
.BR put (9)
will be used by a portable
.I STREAMS
driver or module.
.IP \(em
Symbol
.BR lis_getq ()
is provided for compatibility with
.IR LiS .
See
.BR liscompat (9).
.BR lis_getq ()
calls
.BR getq ()
directly.
.IP \(em
Binary compatibility is not guaranteed.
.PP
See
.BR STREAMS (9)
for additional compatibility information.
.\"
.\"
.SH CONFORMANCE
.PP
SVR 4.2 MP DDI/DKI,
.[
usldk
.]
.IR Solaris \(rg
documentation.
.\"
.\"
.SH HISTORY
.PP
.BR getq ()
appears as part of
.IR "SVR 4.0 STREAMS" .
.[
svr4spg
.]
.PP
.BR getq ()
first appeared in
.IR "SVR 3" .
.[
svr3spg
.]
.\"
.\"
.[
$LIST$
.]
.TI
