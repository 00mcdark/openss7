/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c,v 1.4 2005/07/15 22:41:16 rstory Exp $
 *
 * $Id:$
 */
#ifndef STRSTATSTABLE_ENUMS_H
#define STRSTATSTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

        /*
         * NOTES on enums
         * ==============
         *
         * Value Mapping
         * -------------
         * If the values for your data type don't exactly match the
         * possible values defined by the mib, you should map them
         * below. For example, a boolean flag (1/0) is usually represented
         * as a TruthValue in a MIB, which maps to the values (1/2).
         *
         */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table strStatsTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * strStatsStructure (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef STRSTATSSTRUCTURE_ENUMS
#define STRSTATSSTRUCTURE_ENUMS

#define STRSTATSSTRUCTURE_DYN_STREAM  1
#define STRSTATSSTRUCTURE_DYN_QUEUE  2
#define STRSTATSSTRUCTURE_DYN_MSGBLOCK  3
#define STRSTATSSTRUCTURE_DYN_MDBBLOCK  4
#define STRSTATSSTRUCTURE_DYN_LINKBLK  5
#define STRSTATSSTRUCTURE_DYN_STREVENT  6
#define STRSTATSSTRUCTURE_DYN_QBAND  7
#define STRSTATSSTRUCTURE_DYN_STRAPUSH  8
#define STRSTATSSTRUCTURE_DYN_DEVINFO  9
#define STRSTATSSTRUCTURE_DYN_MODINFO  10
#define STRSTATSSTRUCTURE_DYN_SYNQ  11
#define STRSTATSSTRUCTURE_DYN_BUFFERS  12

#endif                                  /* STRSTATSSTRUCTURE_ENUMS */

#ifdef __cplusplus
}
#endif
#endif                                  /* STRSTATSTABLE_ENUMS_H */
