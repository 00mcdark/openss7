/*****************************************************************************

 @(#) $Id: strMIB.h,v 0.9.2.15 2009-01-04 13:16:13 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2009  Monavacom Limited <http://www.monavacom.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2009-01-04 13:16:13 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: strMIB.h,v $
 Revision 0.9.2.15  2009-01-04 13:16:13  brian
 - updated agents

 Revision 0.9.2.14  2009-01-03 10:51:14  brian
 - updated agent

 Revision 0.9.2.13  2009-01-02 15:04:20  brian
 - updated agents

 Revision 0.9.2.12  2008-12-31 16:04:53  brian
 - updated mibs

 Revision 0.9.2.11  2008-12-24 13:42:16  brian
 - updated mibs

 Revision 0.9.2.10  2008-10-07 19:04:22  brian
 - strStrhold is a TruthValue

 Revision 0.9.2.9  2008/07/28 05:14:09  brian
 - updates to mib builder and corrections to agent

 Revision 0.9.2.8  2008-04-28 12:54:07  brian
 - update file headers for release

 Revision 0.9.2.7  2008/01/14 18:04:58  brian
 - update tests and MIBS

 Revision 0.9.2.6  2008/01/03 11:14:00  brian
 - compile and index updates

 Revision 0.9.2.5  2007/12/29 23:27:41  brian
 - updated mib

 Revision 0.9.2.4  2007/12/29 23:01:52  brian
 - working up mib2c

 Revision 0.9.2.3  2007/12/15 20:20:09  brian
 - updates

 Revision 0.9.2.2  2007/10/15 01:04:51  brian
 - updated SNMP build

 Revision 0.9.2.1  2007/10/13 08:54:36  brian
 - added MIB agent files

 *****************************************************************************/

#ifndef __LOCAL_STRMIB_H__
#define __LOCAL_STRMIB_H__

#ident "@(#) $RCSfile: strMIB.h,v $ $Name:  $($Revision: 0.9.2.15 $) Copyright (c) 2008-2009 Monavacom Limited."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct strMIB_data {
	uint strMIB_request;
	long strCltime;
	ulong strMaxApush;
	ulong strMaxMblk;
	ulong strMaxStramod;
	ulong strMaxStrdev;
	ulong strMaxStrmod;
	long strMsgPriority;
	ulong strNband;
	ulong strNstrmsgs;
	ulong strNstrpush;
	ulong strHiwat;
	ulong strLowat;
	long strMaxpsz;
	long strMinpsz;
	long strReuseFmodsw;
	long strRtime;
	long strStrhold;
	ulong strStrctlsz;
	ulong strStrmsgsz;
	ulong strStrthresh;
	ulong strLowthresh;
	ulong strMedthresh;
	long strIoctime;
};
struct strModTable_data {
	uint strModTable_request;
	uint strModTable_refs;
	ulong strModIdnum;
	uint8_t *strModName;
	size_t strModNameLen;
	long strModType;
	ulong strModMajor;
	long strModRowStatus;
};
struct strModInfoTable_data {
	uint strModInfoTable_request;
	uint strModInfoTable_refs;
	ulong strModIdnum;
	ulong strModInfoIndex;
	uint8_t *strModInfoQueues;
	size_t strModInfoQueuesLen;
	long strModInfoMinpsz;
	long strModInfoMaxpsz;
	ulong strModInfoHiwat;
	ulong strModInfoLowat;
	ulong strModInfoTraceLevel;
};
struct strModStatTable_data {
	uint strModStatTable_request;
	uint strModStatTable_refs;
	ulong strModIdnum;
	ulong strModStatIndex;
	uint8_t *strModStatQueues;
	size_t strModStatQueuesLen;
	long strModStatPCnt;
	long strModStatScnt;
	long strModStatOcnt;
	long strModStatCcnt;
	long strModStatAcnt;
	uint8_t *strModStatPrivate;
	size_t strModStatPrivateLen;
	ulong strModStatFlags;
};
struct strApshTable_data {
	uint strApshTable_request;
	uint strApshTable_refs;
	uint8_t *strApshName;
	size_t strApshNameLen;
	ulong strApshMajor;
	ulong strApshMinor;
	ulong strApshLastMinor;
	uint8_t *strApshModules;
	size_t strApshModulesLen;
	long strApshRowStatus;
};
struct strStatsTable_data {
	uint strStatsTable_request;
	uint strStatsTable_refs;
	long strStatsStructure;
	long strStatsCurrentAllocs;
	long strStatsHighWaterMark;
};

/* storage declarations */
extern struct strMIB_data *strMIBStorage;
extern struct header_complex_index *strModTableStorage;
extern struct header_complex_index *strModInfoTableStorage;
extern struct header_complex_index *strModStatTableStorage;
extern struct header_complex_index *strApshTableStorage;
extern struct header_complex_index *strStatsTableStorage;

/* enum definitions from the covered mib sections */

#define STRMODTYPE_MODULE                        1
#define STRMODTYPE_DRIVER                        2

#define STRMODINFOQUEUES_RQ                      0
#define STRMODINFOQUEUES_WQ                      1
#define STRMODINFOQUEUES_MUXRQ                   2
#define STRMODINFOQUEUES_MUXWQ                   3

#define STRMODSTATQUEUES_RQ                      0
#define STRMODSTATQUEUES_WQ                      1
#define STRMODSTATQUEUES_MUXRQ                   2
#define STRMODSTATQUEUES_MUXWQ                   3

#define STRSTATSSTRUCTURE_DYNSTREAM              1
#define STRSTATSSTRUCTURE_DYNQUEUE               2
#define STRSTATSSTRUCTURE_DYNMSGBLOCK            3
#define STRSTATSSTRUCTURE_DYNMDBBLOCK            4
#define STRSTATSSTRUCTURE_DYNLINKBLK             5
#define STRSTATSSTRUCTURE_DYNSTREVENT            6
#define STRSTATSSTRUCTURE_DYNQBAND               7
#define STRSTATSSTRUCTURE_DYNSTRAPUSH            8
#define STRSTATSSTRUCTURE_DYNDEVINFO             9
#define STRSTATSSTRUCTURE_DYNMODINFO             10
#define STRSTATSSTRUCTURE_DYNSYNQ                11
#define STRSTATSSTRUCTURE_DYNBUFFERS             12

#define STRMSGPRIORITY_TRUE                      1
#define STRMSGPRIORITY_FALSE                     2

#define STRREUSEFMODSW_TRUE                      1
#define STRREUSEFMODSW_FALSE                     2

#define STRSTRHOLD_TRUE                          1
#define STRSTRHOLD_FALSE                         2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_strMIB(void);
void deinit_strMIB(void);
int term_strMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_strMIB;
void parse_strMIB(const char *, char *);
SNMPCallback store_strMIB;
void refresh_strMIB(void);
FindVarMethod var_strModTable;
struct strModTable_data *strModTable_create(void);
struct strModTable_data *strModTable_duplicate(struct strModTable_data *);
int strModTable_destroy(struct strModTable_data **);
int strModTable_add(struct strModTable_data *);
int strModTable_del(struct strModTable_data *);
void parse_strModTable(const char *, char *);
SNMPCallback store_strModTable;
void refresh_strModTable(void);
FindVarMethod var_strModInfoTable;
struct strModInfoTable_data *strModInfoTable_create(void);
struct strModInfoTable_data *strModInfoTable_duplicate(struct strModInfoTable_data *);
int strModInfoTable_destroy(struct strModInfoTable_data **);
int strModInfoTable_add(struct strModInfoTable_data *);
int strModInfoTable_del(struct strModInfoTable_data *);
void parse_strModInfoTable(const char *, char *);
SNMPCallback store_strModInfoTable;
void refresh_strModInfoTable(void);
FindVarMethod var_strModStatTable;
struct strModStatTable_data *strModStatTable_create(void);
struct strModStatTable_data *strModStatTable_duplicate(struct strModStatTable_data *);
int strModStatTable_destroy(struct strModStatTable_data **);
int strModStatTable_add(struct strModStatTable_data *);
int strModStatTable_del(struct strModStatTable_data *);
void parse_strModStatTable(const char *, char *);
SNMPCallback store_strModStatTable;
void refresh_strModStatTable(void);
FindVarMethod var_strApshTable;
struct strApshTable_data *strApshTable_create(void);
struct strApshTable_data *strApshTable_duplicate(struct strApshTable_data *);
int strApshTable_destroy(struct strApshTable_data **);
int strApshTable_add(struct strApshTable_data *);
int strApshTable_del(struct strApshTable_data *);
void parse_strApshTable(const char *, char *);
SNMPCallback store_strApshTable;
void refresh_strApshTable(void);
FindVarMethod var_strStatsTable;
struct strStatsTable_data *strStatsTable_create(void);
struct strStatsTable_data *strStatsTable_duplicate(struct strStatsTable_data *);
int strStatsTable_destroy(struct strStatsTable_data **);
int strStatsTable_add(struct strStatsTable_data *);
int strStatsTable_del(struct strStatsTable_data *);
void parse_strStatsTable(const char *, char *);
SNMPCallback store_strStatsTable;
void refresh_strStatsTable(void);

WriteMethod write_strModName;
WriteMethod write_strModRowStatus;
WriteMethod write_strModInfoMinpsz;
WriteMethod write_strModInfoMaxpsz;
WriteMethod write_strModInfoHiwat;
WriteMethod write_strModInfoLowat;
WriteMethod write_strModInfoTraceLevel;
WriteMethod write_strApshModules;
WriteMethod write_strApshRowStatus;
WriteMethod write_strCltime;
WriteMethod write_strMaxApush;
WriteMethod write_strMaxMblk;
WriteMethod write_strMaxStramod;
WriteMethod write_strMsgPriority;
WriteMethod write_strNstrmsgs;
WriteMethod write_strNstrpush;
WriteMethod write_strHiwat;
WriteMethod write_strLowat;
WriteMethod write_strMaxpsz;
WriteMethod write_strMinpsz;
WriteMethod write_strReuseFmodsw;
WriteMethod write_strRtime;
WriteMethod write_strStrhold;
WriteMethod write_strStrctlsz;
WriteMethod write_strStrmsgsz;
WriteMethod write_strStrthresh;
WriteMethod write_strLowthresh;
WriteMethod write_strMedthresh;
WriteMethod write_strIoctime;
#endif				/* __LOCAL_STRMIB_H__ */
