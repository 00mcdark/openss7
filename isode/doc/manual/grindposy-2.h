/* automatically generated by posy 3.1 #16 (gremlin), do not edit! */

#ifndef	_module_IMAGE_defined_
#define	_module_IMAGE_defined_

#include <isode/psap.h>
#include <isode/pepy/UNIV-types.h>

#define	type_IMAGE_Version	PElement
#define	bits_IMAGE_Version	"\020\01version-1"
#define	bit_IMAGE_Version_version__1	0

#define	type_IMAGE_Format	PElement
#define	bits_IMAGE_Format	"\020\01x-windows-bitmap"
#define	bit_IMAGE_Format_x__windows__bitmap	0

#define	type_IMAGE_Filename	type_UNIV_GraphicString

struct type_IMAGE_Initialize__INV {
    struct type_IMAGE_Version *proposed;
};

struct type_IMAGE_Initialize__RSP {
    struct type_IMAGE_Version *negotiated;
};

struct type_IMAGE_VersionsSupported {
    struct type_IMAGE_Version *supported;
};

struct type_IMAGE_ReadImage__INV {
    struct element_IMAGE_1 {
	struct choice_IMAGE_0 {
	    int     offset;
#define	choice_IMAGE_0_file__name	1
#define	choice_IMAGE_0_mail__address	2

	    union {
		struct type_IMAGE_Filename *file__name;

		struct type_IMAGE_Mail__Address *mail__address;
	    }       un;
	} *choice_IMAGE_0;

	struct element_IMAGE_1 *next;
    } *element_IMAGE_1;

    struct element_IMAGE_4 {
	struct type_IMAGE_Format *element_IMAGE_5;

	struct element_IMAGE_4 *next;
    } *element_IMAGE_4;
};

struct type_IMAGE_ReadImage__RSP {
    struct choice_IMAGE_1 {
	int     offset;
#define	choice_IMAGE_1_x__windows	1

	union {
	    struct type_IMAGE_X__Windows__Bitmap *x__windows;
	}       un;
    } *choice_IMAGE_1;
};

struct type_IMAGE_FormatsSupported {
    struct type_IMAGE_Format *supported;
};

struct type_IMAGE_Mail__Address {
    struct type_UNIV_GraphicString *local;

    struct type_UNIV_GraphicString *domain;

    PE      options;
#define	bits_IMAGE_options	"\020\01default-local\02default-host"
#define	bit_IMAGE_options_default__local	0
#define	bit_IMAGE_options_default__host	1
};

struct type_IMAGE_X__Windows__Bitmap {
    int     width;

    int     height;

    int     hot__spot__x;

    int     hot__spot__y;

    struct qbuf *data;
};
#endif
