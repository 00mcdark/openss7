#!/bin/bash
# @configure_input@
# =============================================================================
# 
# @(#) $RCSfile: openss7-lib.postinst.in,v $ $Name:  $($Revision: 1.1.2.2 $) $Date: 2011-05-15 12:01:18 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
# Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
# Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>, or write to
# the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2011-05-15 12:01:18 $ by $Author: brian $
#
# =============================================================================
subpkg=lib
@openss7_header@
datarootdir=@datarootdir@
# -----------------------------------------------------------------------------
# Auxiliary functions:
# -----------------------------------------------------------------------------
#
# postinst_libraries() - After a fresh installation, upgrade or reinstall, do a ldconfig.
#
postinst_libraries () {
    local d s
    d="@libdir@"; s="@syslibdir@"
    if   [ -x "`which libtool 2>/dev/null`" ]; then
	[ -d "$d" ] && { libtool --mode=finish "$d" || : }
	[ -d "$s" ] && { libtool --mode=finish "$s" || : }
    elif [ -x "`which ldconfig 2>/dev/null`" ]; then
	[ -d "$d" ] && { ldconfig -n "$d" || : }
	[ -d "$s" ] && { ldconfig -n "$s" || : }
    fi
}
#
# postinst_netconfig() - Rebuild the netconfig database, but only if it was built by us or does not
#   exist.  This is indempotent and can be called from configure or reconfigure.  It is important
#   that the new database be compatible with the old libxnsl library.  This should always be the
#   case anyway.  If it were not the case, we should have to kill processes holding open the libxnsl
#   library so that they will load the new library on respawn.
#
postinst_netconfig () {
    local netc_fil netc_alt netc_dir netc_tmp found files f
    netc_fil=@sysconfdir@/netconfig
    netc_alt=@sysconfdir@/netconfig.xnsl
    netc_dir=@sysconfdir@/nslconfig.d
    netc_tmp=${tmppath:-/var/tmp}/netconfig.tmp.$$
    found=no
    files="$netc_dir/*"
    if [ -r $netc_fil ]; then
	if ! grep '^# Generated from nslconfig.d' $netc_fil >/dev/null 2>&1; then
	    netc_fil=$netc_alt
	fi
    else
	if [ -r $netc_alt ]; then
	    netc_fil=$netc_alt
	fi
    fi
    (   echo '# Generated from nslconfig.d by @PACKAGE_LCNAME@'
	echo '# DO NOT EDIT THIS FILE: ALL EDITS WILL BE LOST!'
	echo '# EDIT THE FILES IN THE nslconfig.d DIRECTORY INSTEAD.'
    ) >$netc_tmp
    for f in $files; do
	if [ -f $f -a $f = "$netc_dir/strnsl" ]; then
	    case $f in
		(*.dpkg-old|*.dpkg-new|*.dpkg-tmp) ;;
		(*) (   echo '# Generated from nslconfig.d/'`basename $f`
			sed '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f
		    ) >>$netc_tmp
		    found=yes ;;
	    esac
	fi
    done
    for f in $files; do
	if [ -f $f -a $f != "$netc_dir/strnsl" ]; then
	    case $f in
		(*.dpkg-old|*.dpkg-new|*.dpkg-tmp) ;;
		(*) (   echo '# Generated from nslconfig.d/'`basename $f`
			sed '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f
		    ) >>$netc_tmp
		    found=yes ;;
	    esac
	fi
    done
    if [ $found = no ]; then
	rm -f -- $netc_fil
	rmdir $netc_dir 2>/dev/null || :
    else
	if ! diff $netc_tmp $netc_fil >/dev/null 2>&1; then
	    cp -f -b --suffix=.dpkg-old -- $netc_tmp $netc_fil
	fi
    fi
    rm -f -- $netc_tmp || :
    if [ $netc_fil != $netc_alt ]; then
	rm -f -- $netc_alt || :
    fi
}
#
# postinst_sock2path() - Rebuild the sock2path database.  This is indempotent and can be called from
#   configure or reconfigure.  It is important that the new database be compatible with the old
#   sock2path library.  This should always be the case anyway.  If it were not the case, we should
#   have to kill processes holding open the libsocket library so that they will load the new library
#   on respawn.
#
postinst_sock2path () {
    local s2pa_fil s2pa_dir s2pa_tmp found files f
    s2pa_fil=@sysconfdir@/sock2path
    s2pa_dir=@sysconfdir@/sock2path.d
    s2pa_tmp=${tmppath:-/var/tmp}/sock2path.tmp.$$
    found=no
    files="$s2pa_dir/*"
    (   echo '# Generated from sock2path.d by @PACKAGE_LCNAME@'
	echo '# DO NOT EDIT THIS FILE: ALL EDITS WILL BE LOST!'
	echo '# EDIT THE FILES IN THE sock2path.d DIRECTORY INSTEAD.'
    ) >$s2pa_tmp
    for f in $files; do
	if [ -r $f ]; then
	    case $f in
		(*.dpkg-old|*.dpkg-new|*.dpkg-tmp) ;;
		(*) (   echo '# Generated from sock2path.d/'`basename $f`
			sed '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f
		    ) >>$s2pa_tmp
		    found=yes ;;
	    esac
	fi
    done
    if [ $found = no ]; then
	rm -f -- $s2pa_fil
	rmdir $s2pa_dir 2>/dev/null || :
    else
	if ! diff $s2pa_tmp $s2pa_fil >/dev/null 2>&1; then
	    cp -f -b --suffix=.dpkg-old -- $s2pa_tmp $s2pa_fil
	fi
    fi
    rm -f -- $s2pa_tmp || :
}
#
# postinst_snmpconf() - Configure @sysconfdir@/snmp/snmpd.local.conf in the target directory.  First
#   we check if snmpd.local.conf exists.  If snmpd.local.conf exists we check if it has already been
#   configured by checking for our 'Generated' statement.  If it has, we regenerate the file from
#   the snmp.d directory components.  If it hasn't, we move it to @sysconfdir@/snmp/snmp.d/00local
#   if 00local does not already exist.  If 00local already exists, we abort with a warning.  When
#   snmpd.local.conf does not exist, we create an empty /etc/snmp/snmp.d/00local if one does not
#   already exist.  If 00local already exists, we abort with a warning.
#
#   When we have not aborted as part of previous operations, we rebuild /etc/snmp/snmp.local.conf
#   from the files available in the snmp.d directory (skipping any with the .dpkg-old, .dpkg-new or
#   .dpkg-tmp suffixes), placing our 'Generation' lines in the file, starting with 00local, and
#   continuing through with the remaining files in snmp.d in lexical order.  If 00local is the only
#   file causing snmp.local.conf to be regenerated, 00local is moved back to snmp.local.conf.  After
#   rebuilding the file, we tell the snmp daemon to reread its configuration files if it is running.
#
#   Unfortunately, SuSE does things a little different: the snmpd.conf file is in /etc instead of
#   /etc/snmp and the persistent data file is in /var/run/net-snmp instead of /var/net-snmp.  This
#   can be detected and repaired by symbolic linking /etc/snmp/snmpd.conf to /etc/snmpd.conf and
#   linking /etc/snmpd.local.conf to /etc/snmp/snmpd.local.conf.
#
postinst_snmpconf () {
    local snmp_fil snmp_dir snmp_lcl snmp_tmp wrote_one changed_local files f
    snmp_fil=@sysconfdir@/snmp/snmpd.local.conf
    snmp_dir=@sysconfdir@/snmp/snmp.d
    snmp_lcl=@sysconfdir@/snmp/snmp.d/00local
    snmp_tmp=${tmppath:-/var/tmp}/snmpd.local.conf.tmp.$$
    wrote_one=no
    changed_local=no
    files="$snmp_dir/*"
    if [ ! -e @sysconfdir@/snmp/snmpd.conf -a -e @sysconfdir@/snmpd.conf ]; then
	ln -L @sysconfdir@/snmpd.conf @sysconfdir@/snmp/snmpd.conf
	touch @sysconfdir@/snmpd.local.conf
    fi
    if [ ! -e @sysconfdir@/snmp/snmpd.local.conf -a -e @sysconfdir@/snmpd.local.conf ]; then
	ln -L @sysconfdir@/snmpd.local.conf @sysconfdir@/snmp/snmpd.conf
    fi
    if [ -s $snmp_fil ]; then
	if ! grep '^# Generated from snmp.d' $snmp_fil >/dev/null 2>&1; then
	    cp -f -b --suffix=.dpkg-old -- $snmp_fil $snmp_lcl
	fi
    fi
    (   echo '# Generated from snmp.d by @PACKAGE_LCNAME@'
	echo '# DO NOT EDIT THIS FILE: ALL EDITS WILL BE LOST!'
	echo '# EDIT THE FILES IN THE snmp.d DIRECTORY INSTEAD.'
    ) >$snmp_tmp
    for f in $files; do
	if [ -f $f -a $f = $snmp_lcl ]; then
	    case $f in
		(*.dpkg-old|*.dpkg-new|*.dpkg-tmp) ;;
		(*) (   echo '# Generated from snmp.d/'`basename $f`
			sed '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f
		    ) >>$snmp_tmp
		    ;;
	    esac
	fi
    done
    for f in $files ; do
	if [ -f $f -a $f != $snmp_lcl ]; then
	    case $f in
		(*.dpkg-old|*.dpkg-new|*.dpkg-tmp) ;;
		(*) (   echo '# Generated from snmp.d/'`basename $f`
			sed '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f
		    ) >>$snmp_tmp
		    wrote_one=yes
		    ;;
	    esac
	fi
    done
    if [ $wrote_one = yes ]; then
	if ! diff $snmp_tmp $snmp_fil >/dev/null 2>&1; then
	    cp -f -b --suffix=.dpkg-old -- $snmp_tmp $snmp_fil
	    changed_local=yes
	fi
    elif [ -f $snmp_lcl ]; then
	cp -f -- $snmp_lcl $snmp_fil
	rm -f -- $snmp_lcl
	changed_local=yes
    elif [ -s $snmp_fil ]; then
	cat /dev/null > $snmp_fil
	changed_local=yes
    fi
    rmdir $snmp_dir 2>/dev/null || :
    rm -f -- $snmp_tmp || :
    if [ $changed_local = yes ]; then
	if [ -f @initrddir@/snmpd ]; then
	    r="`runlevel | awk '{print$2}'`"
	    start=no
	    for l in @initrddir@/../rc${r}.d/S[0-9][0-9]snmpd @initrddir@/rc${r}.d/S[0-9][0-9]snmpd; do
		if [ -L $l ]; then start=yes; break; fi
	    done
	    if [ $start = yes -o -e /var/lock/subsys/snmpd ]; then
		[ -x "`which service     2>/dev/null`" ] && { service     snmpd reload || :; }
		[ -x "`which invoke-rc.d 2>/dev/null`" ] && { invoke-rc.d snmpd reload || :; }
		[ -x "@initrddir@/snmpd"               ] && { @initrddir@/snmpd reload || :; }
	    fi
	else
	    killall -HUP snmpd || :
	fi
    fi
}
#
# postinst_tcllibs() - After a fresh installation, upgrade or reinstall, create the indexes for the
#   tcl libraries and modules.  Note that there is no debhelper for this.
#
#postinst_tcllibs () { :
#    if [ -x "`which tclsh 2>/dev/null`" ] ; then
#	for d in `find ${pkgtcllibdir} -mindepth 1 -maxdepth 1 -type d` ; do
#	    echo -e "pkg_mkIndex $d\\nexit" | tclsh || :
#	done
#    fi
#}
#
# postinst_lib() - After a fresh installtion, upgrade or resinstall, do a
#   ldconfig and create the indexes for the tcl libraries and modules.  Rebuild
#   the netconfig and sock2path databases used by the libraries before making
#   them available with ldconfig.
#
postinst_lib () { :
    postinst_libraries
    postinst_netconfig
    postinst_sock2path
    postinst_snmpconf
#    postinst_tcllibs
}
# -----------------------------------------------------------------------------
# Primary functions:
# -----------------------------------------------------------------------------
# xxx-postinst configure
configure_postinst () { :
    postinst_lib
}
# xxx-postinst configure most-recently-configured-version
reconfigure_postinst () { :
    postinst_lib
}
# xxx-postinst triggered triggered-packages
triggered_postinst () { :
}
# old-prerm upgrade new-version ...FAILED
# new-prerm failed-upgrade new-version ...FAILED
# old-posinst abort-upgrade new-version
abort_upgrade_postinst () { :
}
# con-prerm remove 'in-favour' package new-version ...FAILED
# con-postinst abort-remove 'in-favour' package new-version
abort_remove_postinst () { :
}
# dec-prerm deconfigure 'in-favour' package-being-installed version ['removing' conflicting-package version] ...FAILED
# dec-postinst abort-deconfigure 'in-favour' package-being-installed-but-failed version ['removing' conflicting-package version]
abort_deconfigure_postinst () { :
}
@mscript_postinst@
@mscript_debhelper@
#if [ "$1" = "configure" ]; then
#    ldconfig
#fi
# =============================================================================
#
# $Log: openss7-lib.postinst.in,v $
# Revision 1.1.2.2  2011-05-15 12:01:18  brian
# - many build system refinements
#
# Revision 1.1.2.1  2011-05-10 13:45:29  brian
# - weak modules workup
#
# =============================================================================
# vim: ft=sh sw=4 noet nocin nosi formatoptions+=tcqlorn
