#!/bin/sh
# @configure_input@
# =============================================================================
# 
# @(#) $RCSfile$ $Name$($Revision$) $Date$
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
# Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
# Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>, or write to
# the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date$ by $Author$
#
# =============================================================================
subpkg=base
@openss7_postinst@
#
# postinst_modconf() - Ensure that include line is added to the module.conf
#   file for old 2.4 module systems.  This must remove lines before including
#   them because it may also be run from reconfigure.
#
postinst_modconf () { :
    [ -z '@WITH_KO_MODULES_FALSE@' ] || return 0
    conf_old=@sysconfdir@/modules.conf
    if [ -f $conf_old ] ; then
        conf_tmp=$tmppath/modules.conf.tmp.$$
        conf_new=$tmppath/modules.conf.new.$$
        cp -f -- $conf_old $conf_new
        sed -e '\|^include[[:space:]].*'"@modutildir@"'/'"$base"'|d' $conf_new > $conf_tmp
        mv -f -- $conf_tmp $conf_new
        chmod --reference=$conf_old $conf_new
        cp -f -b --suffix=.rpmsave -- $conf_new $conf_old
        rm -f -- $conf_new
    fi
    :
}
#
# postinst_netconfig() - Rebuild the netconfig database, but only if it was
#   built by us or does not exist.  This is indempotent and can be called from
#   configure or reconfigure.
#
postinst_netconfig () { :
    t=@sysconfdir@/netconfig
    a="${t}.xnsl"
    d="${t}.d"
    if [ -f $t ] ; then
        if ! grep '^# Generated from netconfig.d' $t >/dev/null 2>&1 ; then
            t="${a}"
        fi
    fi
    echo '# Generated from netconfig.d by @PACKAGE_LCNAME@ '`date -uI` > $t.tmp
    found='no'
    files="$d/*"
    if [ -d $d ]; then
	for f in $files ; do
	    if [ -f $f -a $f = "$d/strnsl" ] ; then
		case $f in
		    (*.dpkg-save|*.dpkg-new|*.dpkg-orig) ;;
		    (*) sed -e '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f >> $t.tmp ; found='yes' ;;
		esac
	    fi
	done
	for f in $files ; do
	    if [ -f $f -a $f != "$d/strnsl" ] ; then
		case $f in
		    (*.dpkg-save|*.dpkg-new|*.dpkg-orig) ;;
		    (*) sed -e '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f >> $t.tmp ; found='yes' ;;
		esac
	    fi
	done
    fi
    if [ $found = "no" ] ; then
        rm -f $t $t.tmp
    else
        mv -f $t.tmp $t
    fi
    if [ "${t}" != "${a}" ] ; then
        rm -f $a
    fi
    :
}
#
# postinst_sock2path() - Rebuild the sock2path database.  This is indempotent
#   and can be called from configure or reconfigure.
#
postinst_sock2path () { :
    local t f empty='yes'
    t=@sysconfdir@/sock2path
    cp -f -b --suffix=.dpkg-save -- /dev/null $t
    if [ -d ${t}.d ]; then
	for f in "${t}.d/*"; do
	    if [ -f $f ]; then
		case $f in
		    (*.dpkg-save|*.dpkg-new) ;;
		    (*) sed -e '/^[[:space:]]*##/d;/^[[:space:]]*$/d' $f >> $t; empty='no' ;;
		esac
	    fi
	done
    fi
    if [ "$empty" = 'yes' ]; then
	rm -f -- ${t} || :
	rmdir --ignore-fail-on-non-empty -- ${t}.d || :
    fi
    :
    return 0
}
postinst_base_reconfigure () { :
    postinst_modconf
    postinst_netconfig
    postinst_sock2path
}
postinst_base_configure () { :
    postinst_base_reconfigure
}
postinst_base () { :
    #
    # At this point we want to ensure that our lines are added to the modules.conf (if necessary)
    # and that our preloads are added to the modules or modprobe.preload file.
    #
    postinst_mknods
    @WITH_KO_MODULES_FALSE@postinst_modconf
    postinst_preloads
    postinst_initscripts
    postinst_manpages
    postinst_manrefs
    postinst_manmacros
}
# -----------------------------------------------------------------------------
# Primary functions:
# -----------------------------------------------------------------------------
# xxx-postinst configure
configure_postinst () { :
    postinst_base_configure
}
# xxx-postinst configure most-recently-configured-version
reconfigure_postinst () { :
    postinst_base_reconfigure
}
# xxx-postinst triggered triggered-packages
triggered_postinst () { :
    postinst_base
}
# old-prerm upgrade new-version ...FAILED
# new-prerm failed-upgrade new-version ...FAILED
# old-postinst abort-upgrade new-version
abort_upgrade_postinst () { :
    postinst_base
}
# con-prerm remove 'in-favour' package new-version ...FAILED
# con-postinst abort-remove 'in-favour' package new-version
abort_remove_postinst () { :
    postinst_base
}
# dec-prerm deconfigure 'in-favour' package-being-installed version ['removing' conflicting-package version] ...FAILED
# dec-postinst abort-deconfigure 'in-favour' package-being-installed-but-failed version ['removing' conflicting-package version]
abort_deconfigure_postinst ()  { :
    postinst_base
}
@mscript_postinst@
@mscript_debhelper@
# =============================================================================
#
# $Log$
# =============================================================================
# vim: ft=sh sw=4 noet nocin nosi formatoptions+=tcqlorn
