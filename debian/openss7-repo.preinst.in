#!/bin/bash
# @configure_input@
# =============================================================================
# 
# @(#) $RCSfile: openss7-repo.preinst.in,v $ $Name:  $($Revision: 1.1.2.4 $) $Date: 2011-09-02 08:46:28 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
# Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
# Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
# details.
#
# You should have received a copy of the GNU Affero General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>, or write to
# the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2011-09-02 08:46:28 $ by $Author: brian $
#
# =============================================================================
subpkg=repo
@openss7_header@
datarootdir=@datarootdir@
# -----------------------------------------------------------------------------
# Auxiliary functions:
# -----------------------------------------------------------------------------
#
preinst_repo () { :
    local d un pw o f s ext u p m
    for s in '' .dpkg-old .dpkg-new; do
    for p in credentials; do
    for d in $localstatedir/lib/$name/; do
        o=$d$p$s
        [ -r $o ] || continue
        un=`awk 'BEGIN{FS="="}{if($1~/^username$/){print$2;exit}}' $o`
        pw=`awk 'BEGIN{FS="="}{if($1~/^password$/){print$2;exit}}' $o`
        [ -n "$un" -a -n "$pw" ] || continue
        break 3
    done
    done
    for p in $PACKAGE sources; do
    for d in $aptrepodir/ $aptconfdir/; do
        o=$d$p.list$s
        [ -r $o ] || continue
        un=`sed -n -r 's,^[#]?(deb|rpm|urpm|repomd)(-src)?[[:space:]][[:space:]]*http[s]?://([^@:]*)(:([^@]*))@.*$,\3,p;t end;b;: end q' $o`
        pw=`sed -n -r 's,^[#]?(deb|rpm|urpm|repomd)(-src)?[[:space:]][[:space:]]*http[s]?://([^@:]*)(:([^@]*))@.*$,\5,p;t end;b;: end q' $o`
        [ -n "$un" -a -n "$pw" ] || continue
        break 3
    done
    done
    done
    [ -n "$un" -a -n "$pw" ] || { un=; pw=; }
    d=$sslcertdir; n=OPENSS7-CA-CERT.pem
    o=; f=$d/$n; [ -d $d ] || mkdir -p -- $d
    { wget --no-check-certificate -O $f $reposerv://$repobase/cacert.pem 2>/dev/null; c_rehash &>/dev/null; } ||:
    d=$localstatedir/lib/$name; n=credentials
    o=; f=$d/$n; [ -d $d ] || mkdir -p -- $d
    [ ! -e $f ] || { o=$f; mv -f -- $f $f.$$; }
    hn=`hostname -f`; ip=`hostname -I | sed 'y/ /,/'`; n=patches
    id=`e=$(for s in /sys/class/net/e*; do if [ ! -L $s ]; then continue ; fi ; echo $(readlink $s)" "$s ; done | sort | head -1 | cut -f2 "-d ") ; [ -r $e/address ] && cat $e/address | sed "s,:,,g"`
    ext="?hn=$hn&ip=$ip&id=$id${un:+&un=}${un}${pw:+&pw=}${pw}"
    ext="$ext`echo /$reposubdir | sed 's,//,/,g;s,/,\&distro=,;s,/,\&relver=,;s,/,\&osarch=,'`"
    key="${un:+${un}${pw:+:}${pw}@}"
    url="$reposerv://$key$repobase/$reporoot/`basename $f`$ext"
    if ! echo "$url" | wget -i - -O $f 2>/dev/null ; then
        if echo "$url" | wget -i - -O /dev/null 2>&1 | grep '401 Authorization Required' >/dev/null 2>&1 ; then
            u="$custname"; p="$custpass"
            m='Authorization required for repository access.'
            if [ -n "$DISPLAY" -a -x "`which zenity 2>/dev/null`" ]; then
                zenity --info --text="$m" --no-wrap || return 1
                while true; do
                    u=`zenity --entry --text='Username: ' --entry-text="$u" || exit 1` || return 1; u=${u:-$custname}
                    [ "$u" != "$custname" ] || break
                    p=`zenity --entry --text="Password for '$u': " --hide-text || exit 1` || continue
                    [ -z "$p" -o "$p" = "$custpass" ] || break
                done
            elif [ "${DISPLAY+set}" = set -a -x "`which whiptail 2>/dev/null`" ]; then
                whiptail --msgbox "$m" 7 50 >/dev/tty </dev/tty || return 1
                while true; do
                    u=`whiptail --inputbox 'Username: ' 8 40 "$u" 2>&1 >/dev/tty </dev/tty || exit 1` || return 1; u=${u:-$custname}
                    [ "$u" != "$custname" ] || break
                    p=`whiptail --passwordbox "Password for '$u': " 8 40 2>&1 >/dev/tty </dev/tty || exit 1` || continue
                    [ -z "$p" -o "$p" = "$custpass" ] || break
                done
            elif [ "${DISPLAY+set}" = set -a -x "`which dialog 2>/dev/null`" ]; then
                dialog --msgbox "$m" 5 50 >/dev/tty </dev/tty || return 1
                while true; do
                    u=`dialog --inputbox 'Username: ' 0 0 "$u" 2>&1 >/dev/tty </dev/tty || exit 1` || return 1; u=${u:-$custname}
                    [ "$u" != "$custname" ] || break
                    p=`dialog --passwordbox "Password for '$u': " 0 0 2>&1 >/dev/tty </dev/tty || exit 1` || continue
                    [ -z "$p" -o "$p" = "$custpass" ] || break
                done
            else
                echo "$m" >/dev/tty
                while true; do
                    d="$u"
                    read -e  -p "Username [ENTER:default;CTRL-D:cancel] ($u): " u </dev/tty >/dev/tty || { echo '' >/dev/tty; return 1; }; u=${u:-$d}
                    [ "$u" != "$custname" ] || break
                    read -es -p "Password [ENTER:default;CTRL-D:cancel] ($u): " p </dev/tty >/dev/tty || { echo '' >/dev/tty; continue; }
                    echo '' >/dev/tty
                    [ -z "$p" -o "$p" = "$custpass" ] || break
                done
            fi
            key="${u:+${u}${p:+:}${p}@}"
            url="$reposerv://$key$repobase/$reporoot/`basename $f`$ext"
            rm -f -- $f
            if ! echo "$url" | wget -i - -O $f 2>/dev/null; then
                rm -f -- $f
                m='Authorization failed.'
                if [ -n "$DISPLAY" -a -x "`which zenity 2>/dev/null`" ]; then
                    zenity --error --text="$m" --no-wrap
                elif [ "${DISPLAY+set}" = set -a -x "`which whiptail 2>/dev/null`" ]; then
                    whiptail --msgbox "$m" 7 50 >/dev/tty </dev/tty
                elif [ "${DISPLAY+set}" = set -a -x "`which dialog 2>/dev/null`" ]; then
                    dialog --msgbox "$m" 5 50 >/dev/tty </dev/tty
                else
                    echo "$m" >/dev/tty
                fi
                [ "$o" != "$f" -o ! -e $o.$$ ] || mv -f -- $o.$$ $o
                return 1
            fi
        fi
    fi
    if [ ! -e $f ]; then
        [ "$o" != "$f" -o ! -e $o.$$ ] || mv -f -- $o.$$ $o
        return 1
    fi
    [ "$o" != "$f" ] || rm -f -- $o.$$
    chmod 0600 $f
    [ -e $libdir/apt/methods/$reposerv ] || return 0
    un=`awk 'BEGIN{FS="="}{if($1~/^username$/){print$2;exit}}' $f`
    pw=`awk 'BEGIN{FS="="}{if($1~/^password$/){print$2;exit}}' $f`
    [ -n "$un" -a -n "$pw" ] || return 1
    unp="`echo $un | cut -c1-24`"
    pwp="`echo $pw | cut -c1-24`"
    echo "$unp$pwp" >$d/$n
    key="${un:+${un}${pw:+:$pw}@}"
    ext="`echo /$reposubdir | sed 's,//,/,g;s,/,?distro=,;s,/,\&relver=,;s,/,\&osarch=,'`"
    d=$aptrepodir; n=$PACKAGE.list
    o=; f=$d/$n; [ -d $d ] || mkdir -p -- $d
    [ ! -e $f ] || { o=$f; mv -f -- $f $f.$$; }
    url="$reposerv://$key$repobase/$reporoot/$n$ext"
    if ! echo "$url" | wget -i - -O $f 2>/dev/null || [ ! -e $f ]; then
        [ "$o" != "$f" -o ! -e $o.$$ ] || mv -f -- $o.$$ $o
        return 1
    fi
    [ "$o" != "$f" ] || rm -f -- $o.$$
    d=$aptvenddir; n=$PACKAGE.vendor.list
    o=; f=$d/$n; [ -d $d ] || mkdir -p -- $d
    [ ! -e $f ] || { o=$f; mv -f -- $f $f.$$; }
    url="$reposerv://$key$repobase/$reporoot/$n$ext"
    if ! echo "$url" | wget -i - -O $f 2>/dev/null || [ ! -e $f ]; then
        [ "$o" != "$f" -o ! -e $o.$$ ] || mv -f -- $o.$$ $o
    fi
    [ "$o" != "$f" ] || rm -f -- $o.$$
    return 0
}
# -----------------------------------------------------------------------------
# Primary functions:
# -----------------------------------------------------------------------------
# new-preinst install
install_preinst () { :
    preinst_repo || exit $?
}
# new-preinst install old-version
reinstall_preinst () { :
    preinst_repo || exit $?
}
# new-preinst upgrade old-version
upgrade_preinst () { :
    preinst_repo || exit $?
}
# old-postrm upgrade new-version ...FAILED
# new-postrm failed-upgrade old-version ...FAILED
# old-preinst abort-upgrade new-version
abort_upgrade_preinst () { :
    preinst_repo || exit $?
}
@mscript_preinst@
@mscript_debhelper@
# =============================================================================
#
# $Log: openss7-repo.preinst.in,v $
# Revision 1.1.2.4  2011-09-02 08:46:28  brian
# - sync up lots of repo and build changes from git
#
# Revision 1.1.2.3  2011-05-31 09:46:00  brian
# - new distros
#
# Revision 1.1.2.2  2011-05-15 12:01:18  brian
# - many build system refinements
#
# Revision 1.1.2.1  2011-05-10 13:45:29  brian
# - weak modules workup
#
# =============================================================================
# vim: ft=sh sw=4 noet nocin nosi formatoptions+=tcqlorn
