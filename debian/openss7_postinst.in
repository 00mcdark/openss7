@openss7_header@
# =============================================================================
# @configure_input@
# @(#) $RCSfile$ $Name$($Revision$) $Date$
# Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
# Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
# This software is licensed under the GNU Affero General Public License (AGPL)
# Version 3, 19 November 2007, available at <http://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------
datarootdir=@datarootdir@
# -----------------------------------------------------------------------------
# Auxiliary functions:
# -----------------------------------------------------------------------------
postinst_modconf_noupdate () { :
#   Check that our line is in the modules.conf file
    conf_old="@sysconfdir@/modules.conf"
    if ! grep -q 'include.*'"@modutildir@"'/'$base $conf_old ; then
	streams_dirs="@kmoduledir@ @kmoduledir@/../preferred @kmoduledir@/../default @kmoduledir@/../boot"
	streams_subs="@ksubdir@ misc streams"
	conf_new=$tmppath/modules.conf.new.$$
	cp -f $conf_old $conf_new
#	if not, check for an old non-rpm LiS
	if ( grep -q 'BEGIN LiS' $conf_old ) ; then
	    conf_tmp=$tmppath/modules.conf.tmp.$$
	    list=`find @kmoduledir@/$base \( -name "*.o" -o -name "*.o.gz" \)`
	    for p in $list ; do
		f=`echo $p | sed -e 's|^.*/||'`
		m=`echo $f | sed -r -e 's|\.(k)?o(\.gz)? | |'`
#		Remove references to our modules from old installation.
		sed -e '/alias[^#]*\<'$m'\>/d' $conf_new > $conf_tmp
		mv -f $conf_tmp $conf_new
#		Remove conflicting modules.
		for d in $streams_dirs ; do
		    for s in $streams_subs ; do
			rm -f -- $d/$s/$f $d/$s/boot/$f
		    done
		done
	    done
	    for d in $streams_dirs ; do
		for s in $streams_subs ; do
		    rmdir --ignore-fail-on-non-empty $d/$s/boot $d/$s $d
		done
	    done
	fi
#	check for forced over installs of older LiS or LfS rpm installations
#	or installs over older LiS or LfS autoconf installations
	streams_old=@kmoduledir@/modules.$kmodext
	if [ -d @kmoduledir@/@ksubdir@ -a -f $streams_old ] ; then
	    streams_new=$tmppath/modules.$kmodext.new.$$
	    streams_tmp=$tmppath/modules.$kmodext.tmp.$$
	    cp -f $streams_old $streams_new
	    list=`find @kmoduledir@/$base -name "*.o"`
	    for p in $list ; do
		f=`echo $p | sed -e 's|^.*/||'`
		m=`echo $f | sed -r -e 's|\.(k)?o(\.gz)? | |'`
#		Remove references to our modules from old installation.
		sed -e '/alias[^#]*\<'$m'\>/d' $streams_new > $streams_tmp
		mv -f $streams_tmp $streams_new
#		Remove conflicting modules.
		for d in $streams_dirs ; do
		    for s in $streams_subs ; do
			rm -f -- $d/$s/$f $d/$s/boot/$f
		    done
		done
	    done
	    for d in $streams_dirs ; do
		for s in $streams_subs ; do
		    rmdir --ignore-fail-on-non-empty $d/$s/boot $d/$s $d
		done
	    done
#	    can't make backups in modules directory
	    chmod --reference=$streams_old $streams_new
	    cp -f $streams_new $streams_old
	    rm -f $streams_new
	fi
	echo "include @modutildir@/$base" >> $conf_new
	chmod --reference=$conf_old $conf_new
	cp -fb --suffix=.old $conf_new $conf_old
	rm -f $conf_new
    fi
}
# -----------------------------------------------------------------------------
# Default functions:
# -----------------------------------------------------------------------------
configure_postinst () { :; }
reconfigure_postinst () { :; }
triggered_postinst () { :; }
abort_upgrade_postinst () { :; }
abort_remove_postinst () { :; }
abort_deconfigure_postinst () { :; }
# -----------------------------------------------------------------------------
# vim: ft=sh sw=4 noet
# @configure_input@
# =============================================================================
