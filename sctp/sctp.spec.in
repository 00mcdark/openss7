# vim: ft=spec sw=4 et tw=78
# =============================================================================
# 
# @(#) $RCSfile: sctp.spec.in,v $ $Name:  $($Revision: 0.9.2.28 $) $Date: 2005/02/19 12:06:51 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2005/02/19 12:06:51 $ by $Author: brian $
#
# =============================================================================

# default is to build kernel modules and tools
# conditional builds of binary rpms relies on the sneaky spec trick that
# rpmbuild will not build a binary rpm when it has no %files section
%global BUILD_modules 1
%global BUILD_tools   1

#
# there are three ways to pass kernel version to the build process:
#    define _kversion in /usr/lib/rpm/macros, /etc/rpm/macros or ~/.rpmmacros
#    define _kversion on the rpmbuild command line
#    define PACKAGE_KVERSION environment variable
#    just let it default to `uname -r`
#
%{!?_kversion: %{expand: %%global _kversion %(uname -r)}}

%global kernel_version %{_kversion}
%global kernel_source %(echo %{_kversion} | sed -e 's|BOOT$||;s|smp$||;s|bigmem$||;s|debug$||;s|enterprise$||;s|hugemem$||;s|secure$||;s|-i686-up-4GB$||;s|-p3-smp-64GB$||;s|-64GB-SMP|.SuSE|')
%global kernel_number %(echo %{_kversion} | sed -e 's|-.*$||')
%global kernel_release %(echo %{_kversion} | sed -e 's|-|.|g')
%global core_name core-%{_kversion}
%global info_name info-%{_kversion}
%global epoch @PACKAGE_EPOCH@
%global base @PACKAGE_TARNAME@
%global title @PACKAGE_TITLE@
%global stitle @PACKAGE_SHORTTITLE@

%global modules     sctp
%global libraries   sctp
%global tools       test-sctpc test-sctp-dc test-sctp-ds test-sctps test-sctp-sc test-sctp-ss test-sctp-tc test-sctp-ts test-tcpc test-tcp-dc test-tcp-ds test-tcps test-tcp-tc test-tcp-ts test-udpc test-udps
%global infofiles   %{name}

# because we only need to build the tools binaries once for each architecture,
# but need to build the modules binaries once for each architecture and kernel
# version, we accept the --with[out] options "modules" and "tools"
%{?_without_modules: %{expand: %%global BUILD_modules 0}}
%{?_without_tools:   %{expand: %%global BUILD_tools   0}}
%{?_with_modules:    %{expand: %%global BUILD_modules 1}}
%{?_with_tools:      %{expand: %%global BUILD_tools   1}}

%define oldrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 0 ; else echo 1; fi)
%define newrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 1 ; else echo 0; fi)

%if %{BUILD_tools}
%global BUILD_libs    0
%global BUILD_devs    %newrpm
%global MAKE_devs     %oldrpm
%else
%global BUILD_libs    0
%global BUILD_devs    0
%global MAKE_devs     0
%endif


# we have some more options that control configure for the build
%{?disturl:%{!?url:%{expand: %%global url %{disturl}}}}
%global fullrelease @PACKAGE_RELEASE@%{extrarelease}
%global _builddir %{_builddir}/%{extrarelease}

# a macro to build require one package of the same version as another
%define buildreq_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|BuildRequires: %1 =|')
%define requires_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|Requires: %1 =|')

Summary:        %{title}
%if %{?_without_public: 0}%{!?_without_public: 1}
Name:           @PACKAGE_TARNAME@
%else
Name:           @PACKAGE_TARNAME@-bin
%endif
Epoch:          @PACKAGE_EPOCH@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@
License:        GPL
Group:          System Environment/Kernel
%if %{?url: 1}%{!?url: 0}
URL:            %{url}
%endif
%if %{?_xpm_icon: 1}%{!?_xpm_icon: 0}
Icon:           %{_xpm_icon}
%endif
%if %{?_gif_icon: 1}%{!?_gif_icon: 0}
Icon:           %{_gif_icon}
%endif
ExclusiveArch:  %{ix86} k6 x86_64 s390 s390x ppc ppciseries ppcpseries ppc64 arm armv4l sh mips mipsel
ExclusiveOs:    Linux
#Source:         %{name}-%{version}-%{release}.tar.bz2
Source:         ftp://ftp.openss7.org/pub/linux/src/%{name}/%{name}-%{version}-%{release}.tar.bz2
Obsoletes:      %{base}
Obsoletes:      %{name}
Obsoletes:      sctp
%if %{?buildroot: 0}%{!?buildroot: 1}
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{fullrelease}-root
%endif
Provides:       sctp
#BuildRequires:  sctp-devel >= 0.2.20
%if %{BUILD_modules}
BuildRequires:  kernel-source = %{kernel_source}
BuildRequires:  modutils >= 2.4.12
%endif
%define newgcc %(if test `gcc -v 2>&1 | grep 'gcc version' | sed -e 's|gcc version ||;s| .*$||'` != '2.95.3' ; then echo 1 ; else echo 0 ; fi)
%ifarch s390 s390x
BuildRequires:  gcc >= 2.95.3
%else
%ifarch %{all_ppc}
BuildRequires:  gcc >= 2.96-75
%else
%if %{newgcc}
BuildRequires:  gcc >= 2.96-98
%else
BuildRequires:  gcc = 2.95.3
%endif
%endif
%endif
%if %{newgcc}
BuildRequires:  gcc >= 2.96
%else
BuildRequires:  gcc = 2.95.3
%endif
# these are some needs of the configure script
# to manipulate manual pages:
BuildRequires:  /usr/bin/soelim
BuildRequires:  /usr/bin/refer
BuildRequires:  /usr/bin/tbl
BuildRequires:  /usr/bin/pic
BuildRequires:  /usr/bin/gzip
# to generate kernel symbols:
BuildRequires:  /sbin/genksyms
# find the rest automagically
Autoreq:        true

# ---------------------------------------------------------------------------
%description
The %{name} package includes kernel modules, Linux/BSD NET4 protocol
modules, libraries, utilities, test programs, daemons, and development
environment for the development and execution of the Stream Control
Transmission Protocol (SCTP) stack components and applications for the
Linux/BSD NET4 environment.  This distribution is only currently
applicable to 2.4 kernels and was targetted at ix86 and ppc architectures, but
should build and install for other architectures as well.

%prep
# ---------------------------------------------------------------------------

[ -L %{name} ] && rm -f %{name}
ln -sf %{name}-%{version}-%{release} %{name}
%setup -q -n %{name}-%{version}-%{release}

%build
# ---------------------------------------------------------------------------

preferred_cflags="%{optflags}"

%ifarch %{ix86}
preferred_cflags="$preferred_cflags -D__USE_STRING_INLINES -fstrict-aliasing"
%endif

%ifarch sparc
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparcv9
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparc64
preferred_cflags="$preferred_cflags -mvis -fcall-used-g7"
%endif

%ifnarch ia64 s390 s390x ppc ppciseries ppc64
if test "`gcc --version`" != '2.95.3' ; then
preferred_cflags="$preferred_cflags -freorder-blocks"
fi
%endif

%define cache_file %{_builddir}/%{_target_platform}-%{kernel_version}-config.cache
%define csite_file %{_builddir}/%{_target_platform}-config.site

%define enable()  %(echo "%1" | sed -e 's|^--with-|--enable-|')
%define disable() %(echo "%1" | sed -e 's|^--without-|--disable-|')

./configure \
    CC="${CC}" \
    CFLAGS="${CFLAGS:-$preferred_cflags}" \
    LDFLAGS="${LDFLAGS}" \
    CPPFLAGS="${CPPFLAGS}" \
    CPP="${CPP}" \
    CXX="${CXX:-$CC}" \
    CXXFLAGS="${CXXFLAGS:-$preferred_cflags}" \
    CXXCPP="${CXXCPP:-$CPP}" \
    CONFIG_SITE="%{csite_file}" \
    --cache-file="%{cache_file}" \
    --build=%{_build} \
    --host=%{_target_platform} \
    --prefix=%{_prefix} \
    --exec-prefix=%{_exec_prefix} \
    --bindir=%{_bindir} \
    --sbindir=%{_sbindir} \
    --sysconfdir=%{_sysconfdir} \
    --datadir=%{_datadir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --libexecdir=%{_libexecdir} \
    --localstatedir=%{_localstatedir} \
    --sharedstatedir=%{_sharedstatedir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --disable-maintainer-mode \
    --disable-dependency-tracking \
    --with-gnu-ld \
    --with-k-release=%{kernel_version} \
    --with-k-modules=/%{_lib}/modules/%{kernel_version} \
    --with-pkg-epoch=%{epoch} \
    --with-pkg-release=%{release} \
    %{?_with_checks:             '%enable %_with_checks'} \
    %{?_without_checks:          '%disable %_without_checks'} \
    %{?_with_autotest:           '%enable %_with_autotest'} \
    %{?_without_autotest:        '%disable %_without_autotest'} \
    %{?_with_k_optimize:         '%_with_k_optimize'} \
    %{?_with_cooked_manpages:    '%_with_cooked_manpages'} \
    %{?_without_cooked_manpages: '%_without_cooked_manpages'} \
    %{?_with_public:             '%enable %_with_public'} \
    %{?_without_public:          '%disable %_without_public'} \
    %{?_with_k_debug:            '%enable %_with_k_debug'} \
    %{?_without_k_debug:         '%disable %_without_k_debug'} \
    %{?_with_k_test:             '%enable %_with_k_test'} \
    %{?_without_k_test:          '%disable %_without_k_test'} \
    %{?_with_k_safe:             '%enable %_with_k_safe'} \
    %{?_without_k_safe:          '%disable %_without_k_safe'} \
    %{?_with_k_inline:           '%enable %_with_k_inline'} \
    %{?_without_k_inline:        '%disable %_without_k_inline'} \
    %{?_with_tools:              '%enable %_with_tools'} \
    %{?_without_tools:           '%disable %_without_tools'} \
    %{?_with_modules:            '%enable %_with_modules'} \
    %{?_without_modules:         '%disable %_without_modules'} \
    %{?_with_sctp_slow_verification:        '%enable %_with_sctp_slow_verification'} \
    %{?_without_sctp_slow_verification:     '%disable %_without_sctp_slow_verification'} \
    %{?_with_sctp_throttle_heartbeats:      '%enable %_with_sctp_throttle_heartbeats'} \
    %{?_without_sctp_throttle_heartbeats:   '%disable %_without_sctp_throttle_heartbeats'} \
    %{?_with_sctp_discard_ootb:             '%enable %_with_sctp_discard_ootb'} \
    %{?_without_sctp_discard_ootb:          '%disable %_without_sctp_discard_ootb'} \
    %{?_with_sctp_extended_ip_support:      '%enable %_with_sctp_extended_ip_support'} \
    %{?_without_sctp_extended_ip_support:   '%disable %_without_sctp_extended_ip_support'} \
    %{?_with_sctp_hmac_sha1:                '%enable %_with_sctp_hmac_sha1'} \
    %{?_without_sctp_hmac_sha1:             '%disable %_without_sctp_hmac_sha1'} \
    %{?_with_sctp_hmac_md5:                 '%enable %_with_sctp_hmac_md5'} \
    %{?_without_sctp_hmac_md5:              '%disable %_without_sctp_hmac_md5'} \
    %{?_with_sctp_adler32:                  '%enable %_with_sctp_adler32'} \
    %{?_without_sctp_adler32:               '%disable %_without_sctp_adler32'} \
    %{?_with_sctp_crc32c:                   '%enable %_with_sctp_crc32c'} \
    %{?_without_sctp_crc32c:                '%disable %_without_sctp_crc32c'} \
    %{?_with_sctp_throttle_passiveopens:    '%enable %_with_sctp_throttle_passiveopens'} \
    %{?_without_sctp_throttle_passiveopens: '%disable %_without_sctp_throttle_passiveopens'} \
    %{?_with_sctp_ecn:                      '%enable %_with_sctp_ecn'} \
    %{?_without_sctp_ecn:                   '%disable %_without_sctp_ecn'} \
    %{?_with_sctp_lifetimes:                '%enable %_with_sctp_lifetimes'} \
    %{?_without_sctp_lifetimes:             '%disable %_without_sctp_lifetimes'} \
    %{?_with_sctp_add_ip:                   '%enable %_with_sctp_add_ip'} \
    %{?_without_sctp_add_ip:                '%disable %_without_sctp_add_ip'} \
    %{?_with_sctp_adaptation_layer_info:    '%enable %_with_sctp_adaptation_layer_info'} \
    %{?_without_sctp_adaptation_layer_info: '%disable %_without_sctp_adaptation_layer_info'} \
    %{?_with_sctp_partial_reliability:      '%enable %_with_sctp_partial_reliability'} \
    %{?_without_sctp_partial_reliability:   '%disable %_without_sctp_partial_reliability'} \
    %{?_with_sctp_debug:                    '%enable %_with_sctp_debug'} \
    %{?_without_sctp_debug:                 '%disable %_without_sctp_debug'} \
    %{?_with_sctp_error_generator:          '%enable %_with_sctp_error_generator'} \
    %{?_without_sctp_error_generator:       '%disable %_without_sctp_error_generator'} \
    %{?_with_tcp_compatible:                '%enable %_with_tcp_compatible'} \
    %{?_without_tcp_compatible:             '%disable %_without_tcp_compatible'} \
    %{?_with_udp_compatible:                '%enable %_with_udp_compatible'} \
    %{?_without_udp_compatible:             '%disable %_without_udp_compatible'} \
    || { rm -f %{cache_file} ; exit 1 ; }

make
make check

%install
# ---------------------------------------------------------------------------

# in case it was not cleaned
[ -n "%{buildroot}" -a "%{buildroot}" != / ] && rm -rf %{buildroot}

%if %{?_enable_debug_packages: %{_enable_debug_packages}}%{!?_enable_debug_packages: 0}
# we are going to create debug packages, so we need to install unstripped binaries.
make DESTDIR="%{buildroot}" DOCDIR="%{_docdir}" install
%else
# use libtoolized install-strip to strip binaries, modules, shared and static libraries.
make DESTDIR="%{buildroot}" DOCDIR="%{_docdir}" install-strip
%endif

# copy out our devices list
# cp -pf %{mybuilddir}/%{makedev} .

# get the installed info directory out of the build root
[ -e "%{buildroot}/%{_infodir}/dir" ] && rm -f "%{buildroot}/%{_infodir}/dir"

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
# clean out binaries and auxilliary files
make mostlyclean
# punch rpm release to Custom
echo '.Custom.1'  > .rpmextra
# create configured source directory for source package
mkdir -p %{buildroot}%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# tar and move the sources for source release
tar cf - . | tar xf - -C %{buildroot}%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# create symbolic link
ln -sf %{name}-%{version}-%{fullrelease} %{buildroot}%{_usrsrc}/%{name}
%endif

# stupid mandrake spec-helper will compress our macros files otherwise
@COOKED_MANPAGES_FALSE@export EXCLUDE_FROM_COMPRESS="%{base}.refs %{base}.macros"

%clean
# ---------------------------------------------------------------------------

[ -n "%{buildroot}" -a "%{buildroot}" != / ] && rm -rf %{buildroot}

# ===========================================================================
%package %{core_name}

Summary:        %{title} core kernel modules.
Group:          System Environment/Kernel
Prefix:         /%{_lib}/modules/%{kernel_version}/kernel/net
Requires:       %(LANG_ALL="C" rpm -q --whatprovides /lib/modules/%{kernel_version}/kernel --qf "%{NAME} = %{VERSION}-%{RELEASE}\n")
Prereq:         /sbin/depmod
Prereq:         /sbin/lsmod
Prereq:         /sbin/insmod
Prereq:         /sbin/modprobe
Prereq:         /bin/netstat
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Provides:       %{name}-core = %{epoch}:%{version}-%{fullrelease}
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{core_name}
The %{name}-%{core_name} package contains the kernel modules
that provide the Linux kernel %{stitle} Linux/BSD NET4 protocol modules.
This package is heavily tied to the kernel for which it
was compiled.  This package applies to kernel
version %{kernel_version}.

%pre %{core_name}
# ---------------------------------------------------------------------------
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   if we are upgrading and the upgrade is for the running kernel, or we are
#   installing new on the running kernel, we have to worry about previous
#   loaded modules for the old version or a non-rpm version
    for m in %{modules} ; do
        :
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           module running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                :
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /bin/netstat -p 2>/dev/null | grep "^$m" | while read -a tokens ; do
                        case :"${tokens[6]}" in
                            :[0-9]+)
                                eval "kill -HUP $token" ;;
                            :-)
                                ;; # this is ssh hiding the pid
                        esac
                    done
                    /sbin/sleep 5 # wait for processes to die and close sockets
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Cannot install or upgrade with $m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%post %{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 1 ] ; then
#   This is the end of a fresh install.
    k=/%{_lib}/modules/%{kernel_version}/kernel/net/sctp
    if [ -e $k/sctp.o ] ; then
        mv -f $k/sctp.o $k/sctp_deprecated.o
    fi
    # some distros compress their kernel modules
    if [ -e $k/sctp.o.gz ] ; then
        mv -f $k/sctp.o.gz $k/sctp_deprecated.o.gz
    fi
fi
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot by /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi

%preun %{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 0 -a ":%{kernel_version}" = ":`uname -r`" ] ; then
#   We are about to uninstall for good on a running kernel then we have to
#   worry about which modules are running
    for m in %{modules} ; do
        :
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                :
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /bin/netstat -p 2>/dev/null | grep "^$m" | while read -a tokens ; do
                        case :"${tokens[6]}" in
                            :[0-9]+)
                                eval "kill -HUP $token" ;;
                            :-)
                                ;; # this is ssh hiding the pid
                        esac
                    done
                    /sbin/sleep 5 # wait for processes to die and close sockets
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Cannot uninstall with $m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%postun %{core_name}
# ---------------------------------------------------------------------------

if [ $1 = 0 ]; then
#   this is the last stage of a removal we are going away
    k=/%{_lib}/modules/%{kernel_version}/kernel/net/sctp
    if [ -e $k/sctp_deprecated.o ] ; then
        mv -f $k/sctp_deprecated.o $k/sctp.o
    fi
    # some distros compress their kernel modules
    if [ -e $k/sctp_deprecated.o.gz ] ; then
        mv -f $k/sctp_deprecated.o.gz $k/sctp.o.gz
    fi
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot but /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   one more kick at killing any loaded modules on uninstall, last stage of
#   the upgrade on a running kernel for upgrade.
    reboot='no'
    for m in %{modules} ; do
        :
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                :
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /sbin/insmod -ar $m
                    /bin/netstat -p 2>/dev/null | grep "^$m" | while read -a tokens ; do
                        case :"${tokens[6]}" in
                            :[0-9]+)
                                if [ $1 = 0 ] ; then
#                                   extreme prejudice for removal
                                    eval "kill -KILL ${tokens[6]}"
                                else
#                                   try to get them to reload for upgrade
                                    eval "kill -HUP ${tokens[6]}"
                                fi ;;
                            :-) ;; # this is ssh hiding the pid
                        esac
                    done
                    /sbin/sleep 5 # wait for processes to die and close sockets
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Error: modules may be still loaded" >&2
                        /sbin/lsmod | grep "^$m" >&2
                        reboot='yes'
                    fi
                fi
            fi
        fi
    done
    if [ "$reboot" = 'yes' ]; then
        echo "you may have to reboot" >&2
        exit 1
    fi
fi

%if %{BUILD_modules}
%files %{core_name}
# ---------------------------------------------------------------------------
%defattr(-,root,root)
/%{_lib}/modules/%{kernel_version}/kernel/net/*
%endif

# ===========================================================================
%package lib

Summary:        %{title} run-time libraries.
Group:          System Environment/Libraries
Prefix:         %{_libdir}
Prefix:         %{_datadir}/locale
Obsoletes:      %{name}-libs
Prereq:         /sbin/ldconfig
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description lib
The %{name}-lib package contains the run-time shared libraries
necessary to run applications programs and utilities developed for
%{title}.

%pre lib
# ---------------------------------------------------------------------------
if [ $1 = 0 ] ; then
#   this is supposed to be a fresh install
#   see if there are any libraries hanging around from a non-rpm install
    libs="%{libraries}" ; for lib in $libs ; do
        old_libs="`( /sbin/ldconfig -p | grep '\<lib'$lib'\>' | cut '-d ' -f4 ) 2>/dev/null`"
        if [ -n "$old_libs" ] ; then
#       old libraries hanging around, delete them
            echo "warning: Deleting old non-rpm libraries $old_libs" >&2
            rm -f $old_libs
        fi
    done
else
    :
#   upgrade, let RPM do its job
fi

%post lib
# ---------------------------------------------------------------------------
# do a load config
if [ $1 = 0 ] ; then
#   end of fresh install, do /sbin/ldconfig
    /sbin/ldconfig >/dev/null
else
    :
#   upgrade, wait for old postun
fi

%postun lib
# ---------------------------------------------------------------------------
# whether complete removal or upgrade, do a load config
/sbin/ldconfig

%if %{BUILD_libs}
%files lib
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.so*
%{_libdir}/*.la
%{_datadir}/locale/*
%endif

# ===========================================================================
%package doc

Summary:        %{title} manpages, manuals and docs.
Group:          Documentation
Prefix:         %{_docdir}
Prefix:         %{_infodir}
Prefix:         %{_mandir}
Conflicts:      texinfo < 3.11
Obsoletes:      %{name}-docs
Prereq:         /sbin/install-info
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description doc
The %{name}-doc package contains html documentation for the development of
%{title} applications, modules and drivers.

%post doc
# ---------------------------------------------------------------------------
if [ -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        elif [ -f %{_infodir}/$n.info.bz2 ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.bz2
        fi
    done
fi

%preun doc
# ---------------------------------------------------------------------------
if [ "$1" = 0 -a -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        elif [ -f %{_infodir}/$n.info.bz2 ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.bz2
        fi
    done
fi

%if %{BUILD_tools}
%files doc
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%doc ABOUT-NLS
%endif
%doc AUTHORS ChangeLog COPYING INSTALL NEWS README THANKS doc/manual
%doc %{name}-%{version}-@PACKAGE_RELEASE@.lsm
%{_infodir}/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.macros
%{_mandir}/man*/*
%endif

# ===========================================================================
%package devel

Summary:        %{title} headers, libs and docs.
Group:          Development/System
Prefix:         %{_libdir}
Prefix:         %{_includedir}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description devel
The %{name}-devel package contains library archives for static compilation,
and headers files to develop %{title} applications.
This also includes the header files and static libraries required to compile
%{title} applications programs.  In addition it
contains all of the manual pages necessary for developing
%{title} application programs.

%if %{BUILD_tools}
%files devel
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%{_libdir}/*.a
%endif
%{_includedir}/*
%endif

# ===========================================================================
%package source

Summary:        %{title} source package.
Group:          Development/System
Prefix:         %{_usrsrc}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description source
The %{name}-source package contains the source code necessary for building the
%{name} release.  It includes the autoconf configuration utilities necessary
to create and distribute this rpm.

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
%files source
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir %{_usrsrc}/%{name}-%{version}-%{fullrelease}
%{_usrsrc}/%{name}
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/*
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/.[^.]*
%endif

# ===========================================================================
%package util

Summary:        %{title} admin utilities and test programs.
Group:          Development/System
#Prefix:         %{_bindir}
#Prefix:         %{_sbindir}
Prefix:         %{_libexecdir}
Obsoletes:      %{name}-utils
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description util
The %{name}-util package provides administrative and configuration
test utilities and commands associated with the
%{title} package.

%pre util
# ---------------------------------------------------------------------------
if [ $1 = 0 ]; then
# this is a fresh install, look for old non-rpm tools
    tools="%{tools}" ; for tool in $tools ; do
        location="`which $tool 2>/dev/null`"
        while [ -n "$location" -a -x "$location" ] ; do
            eval "rm -f $location"
            location="`which $tool 2>/dev/null`"
        done
    done
else
    :
#   upgrade, let rpm do its job
fi

%if %{BUILD_tools}
%files util
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%{_bindir}/*
#%{_sbindir}/*
%{_libexecdir}/*test*
%endif

# ===========================================================================
%changelog
# ---------------------------------------------------------------------------
# $Log: sctp.spec.in,v $
# Revision 0.9.2.28  2005/02/19 12:06:51  brian
# - rpm-epoch to pkg-epoch, rpm-release to pkg-release
# - proper quotation of configure options
#
# Revision 1.28  2005/02/19 12:06:51  brian
# - rpm-epoch to pkg-epoch, rpm-release to pkg-release
# - proper quotation of configure options
#
# Revision 1.27  2005/02/15 14:15:24  brian
# - Remove link before linking.
#
# Revision 1.26  2005/02/07 22:23:11  brian
# - Updated changelog.
#

* Thu Feb  3 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.25  2005/02/03 12:34:53  brian
- Spec file grand rework.

* Wed Feb  2 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.24  2005/02/02 10:43:02  brian
- Build in builddir again.

* Tue Feb  1 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.23  2005/02/01 19:01:24  brian
- Working up master build.

* Sat Jan 29 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.22  2005/01/29 11:22:40  brian
- Have master build working well.

* Thu Jan 27 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.21  2005/01/27 08:30:29  brian
- Get tarball and srpm names right.

* Fri Jan 21 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.20  2005/01/21 08:39:51  brian
- Work around mandrake spec-helper for uncooked manpages.

* Thu Jan 20 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.19  2005/01/20 00:51:51  brian
- Go back to quick no dependencies compile.

* Wed Jan 19 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.18  2005/01/19 07:38:28  brian
- Added checks and autotest options to configure.

* Tue Jan 18 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.17  2005/01/18 13:31:07  brian
- Support multiple builds on same NFS mount.

* Tue Jan 18 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.16  2005/01/18 10:42:24  brian
- Rationalize to new separated build approach.

* Sat Jan 15 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.15  2005/01/15 19:43:11  brian
- Added kernel module checks.

* Thu Jan 13 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.14  2005/01/13 12:18:06  brian
- *** empty log message ***

* Thu Jan 13 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.13  2005/01/13 11:45:28  brian
- EL3 provides two kernel packages, get the right one.

* Mon Jan 10 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 1.12  2005/01/10 18:59:16  brian
- mandrake places libexec files in /usr/lib, correct globbing
- updated change logs

* Thu Dec 30 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.11  2004/12/30 21:22:21  brian
- Mandrake compresses info files with bzip2.

* Thu Dec 30 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.10  2004/12/30 08:05:37  brian
- Fix globbing on source package.

* Thu Dec 30 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.9  2004/12/30 07:42:05  brian
- Find the right kernel version for requires.
- Take care to handle compressed kernel modules if present.

* Wed Dec 29 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.8  2004/12/29 21:32:03  brian
- Straighten out cache and site files.

* Fri Dec 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.7  2004/12/24 18:30:12  brian
- Updated descriptions.

* Fri Dec 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.6  2004/12/24 12:56:24  brian
- Get a few things in the right places.

* Fri Dec 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.5  2004/12/24 12:17:30  brian
- Path error.

* Fri Dec 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.4  2004/12/24 07:58:00  brian
- Added test package.

* Thu Dec 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.3  2004/12/23 12:49:15  brian
- Corrections for first rpm build.

* Tue Dec 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.2  2004/12/21 12:23:52  brian
- Proper install scriplets for SCTP package.

* Mon Dec 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.1  2004/12/20 10:18:07  brian
- Big start on autoconf release of Linux Native SCTP.

* Mon Dec 20 2004 Brian Bidulock <bidulock@openss7.org>
- Begain this RPM build for Linux Native SCTP.
- Borrowed heavily from the OpenSS7 STREAMS builds.

# vim: ft=spec sw=4 et tw=78
