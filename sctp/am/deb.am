# vim: ft=automake
# =============================================================================
# 
# @(#) $RCSfile: deb.am,v $ $Name:  $($Revision: 0.9.2.11 $) $Date: 2005/02/21 01:55:53 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2005/02/21 01:55:53 $ by $Author: brian $
#
# =============================================================================

if BUILD_DPKG

#
# Debian builds are a little different from rpm builds.  We use the same bootstrapping as we do for
# RPM in that a distributed tarball has all of the targets necessary for building dsc and deb
# packages built in, however, the debian control file does not have the powerful macro capabilities
# of an RPM spec file.  Therefore, one debian source package cannot be used for building all binary
# packages as we do with RPM.  The Debian build process here consists of unpacking the distribution
# and configuring it.  Then the .dsc and .deb packages are built from the already configured source.
#

$(PACKAGE_DISTDIR)/stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0: \
$(PACKAGE_DISTDIR)/$(PACKAGE)-$(VERSION).tar.gz
	(cd "$(PACKAGE_DISTDIR)" \
	 && $(am__remove_distdir) \
	 && tar -xzvf $(PACKAGE)-$(VERSION).tar.gz | grep '/$$' \
	 && mv -f $(PACKAGE)-$(VERSION) $(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0 \
	 && touch stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0)

$(PACKAGE_DISTDIR)/$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0: \
$(PACKAGE_DISTDIR)/stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0

#
# Because we *are* the upstream source, we always use debign version 0 and pack the RPM release
# number onto the upstream version, but with a period instead of a dash to suppress warnings from
# dpkg-source.
#
debianpkg = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)_0

$(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc $(PACKAGE_DEBTOPDIR)/$(debianpkg).tar.gz: \
    $(PACKAGE_DISTDIR)/stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0
	test -d $(PACKAGE_DEBTOPDIR) || mkdir -p -- "$(PACKAGE_DEBTOPDIR)"
	@there="`(cd "$(PACKAGE_DISTDIR)"; pwd)`" ; \
	echo "(cd "$(PACKAGE_DEBTOPDIR)" ; $(DPKG_SOURCE) -b -sn $$there/$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0)" ; \
	(cd "$(PACKAGE_DEBTOPDIR)" ; $(DPKG_SOURCE) -b -sn $$there/$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0)


dsc: $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc $(PACKAGE_DEBTOPDIR)/$(debianpkg).tar.gz

#
# Approach to signing dsc files taken from dpkg-buildpackage:  A signed .dsc file is merely a
# signed cleartext armoured version of the original .dsc file with the same filename.  The tar file
# is not signed.  As there is an md5 checksum in the signed .dsc file, the signature verifies the
# tar file as well.  We use a little trick to allow GPGPASSWD to be exported by the user to permit
# automated builds that including signing.  If you don't like the security issues that raises, dont
# use it and you will be prompted for a passphrase with each signature.
#
dsc-sign: $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc
	@if ! ${GPG} --verify -- $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc >/dev/null 2>&1 ; then \
		user="$(GNUPGUSER)" ; user="$${user:+ -u }$$user" ; \
		home="$(GNUPGHOME)" ; home="$${home:+ --homedir }$$home" ; \
		echo "rm -f $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc.asc" ; \
		rm -f $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc.asc ; \
		echo "$(GPG) --clearsign --passphrase-fd 0 -a$$user$$home -- $<" ; \
		$(GPG) --clearsign --passphrase-fd 0 -a$$user$$home -- $< ; \
		echo "mv -f $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc.asc $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc" ; \
		mv -f $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc.asc $(PACKAGE_DEBTOPDIR)/$(debianpkg).dsc ; \
	fi

debs:

RELEASE			+= dsc
RELEASE_SIGN		+= dsc-sign

CLEANFILES		+= debian/$(debianpkg).asc stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0
DISTCLEANFILES		+= debian/$(debianpkg).dsc debian/$(debianpkg).tar.gz

distclean-deb:
	@test -d $(PACKAGE_DISTDIR) && (cd $(PACKAGE_DISTDIR) ; $(am__remove_distdir))
	rm -rf $(PACKAGE_DISTDIR)/$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0 $(PACKAGE_DISTDIR)/stamp-$(PACKAGE)-$(PACKAGE_VERSION).$(PACKAGE_RELEASE)-0

maintainer-clean-deb:

DISTCLEAN_LOCAL		+= distclean-deb
MAINTAINER_CLEAN_LOCAL	+= maintainer-clean-deb

endif

EXTRA_DIST		+= \
			debian/changelog \
			debian/control \
			debian/rules \
			.pkgrelease \
			.pkgepoch

ALL_RECURSIVE_TARGETS	+= all-dsc all-debs

# vim: ft=automake
