% -*- texinfo -*-
% vim: ft=texinfo nosi nocin noai tw=100
% =========================================================================
%
% @(#) $Id: mg.texi,v 0.9.2.8 2008-10-28 07:09:46 brian Exp $
%
% =========================================================================
%
% Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
%
% All Rights Reserved.
%
% Permission is granted to make and distribute verbatim copies of this
% manual provided the copyright notice and this permission notice are
% preserved on all copies.
%
% Permission is granted to copy and distribute modified versions of this
% manual under the conditions for verbatim copying, provided that the
% entire resulting derived work is distributed under the terms of a
% permission notice identical to this one.
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2008-10-28 07:09:46 $ by $Author: brian $
%
% =========================================================================
%
% $Log: mg.texi,v $
% Revision 0.9.2.8  2008-10-28 07:09:46  brian
% - correct info direntry naming
%
% Revision 0.9.2.7  2008-09-20 11:04:33  brian
% - added package patchlevel
%
% Revision 0.9.2.6  2008-08-03 06:03:34  brian
% - protected agains texinfo commands in log entries
%
% Revision 0.9.2.5  2008-04-28 23:39:53  brian
% - updated headers for release
%
% Revision 0.9.2.4  2008-04-25 11:50:48  brian
% - updates to AGPLv3
%
% Revision 0.9.2.3  2007/11/06 09:04:25  brian
% - working up documentation
%
% Revision 0.9.2.2  2007/08/14 06:47:23  brian
% - GPLv3 header update
%
% Revision 0.9.2.1  2007/07/04 08:25:00  brian
% - added new files
%
% =========================================================================
\input texinfo @c -*-texinfo-*-
@c vim: ft=texinfo nosi nocin noai tw=100
@c %**start of header
@setfilename mg.info
@include texi/args.texi
@set MANUAL_TITLE OpenSS7 Media Gateway Platform
@set MANUAL_TYPE High-Level Design
@settitle @value{MANUAL_TITLE}
@c %**end of header

@dircategory OpenSS7
@direntry
* MG: (mg).			OpenSS7 Media Gateway
@end direntry

@include texi/args.texi
@set MANUAL_TITLE OpenSS7 Media Gateway Platform
@set MANUAL_TYPE High-Level Design

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file documents the @value{MANUAL_TITLE}.

This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, for
@value{PACKAGE_TITLE} version @value{PACKAGE_VERSION} release @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}.

Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

All Rights Reserved.

Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of OpenSS7 Corporation not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  OpenSS7 Corporation makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@ignore
Permission is granted to process this file through Tex and print the results, provided the printed
document carries a copying permission notice identical to this one except for the removal of this
paragraph (this paragraph not being relevant to the printed manual).

@end ignore
OpenSS7 Corporation disclaims all warranties with regard to this documentation including all implied
warranties of merchantability, fitness for a particular purpose, non-infringement, or title; that
the contents of the document are suitable for any purpose, or that the implementation of such
contents will not infringe on any third party patents, copyrights, trademarks or other rights.  In
no event shall OpenSS7 Corporation be liable for any direct, indirect, special or consequential
damages or any damages whatsoever resulting from loss of use, data or profits, whether in an action
of contract, negligence or other tortious action, arising out of or in connection with any use of
this document or the performance or implementation of the contents thereof.

OpenSS7 Corporation reserves the right to revise this software and documentation for any reason,
including but not limited to, conformity with standards promulgated by various agencies, utilization
of advances in the state of the technical arts, or the reflection of changes in the design of any
techniques, or procedures embodied, described, or referred to herein.  OpenSS7 Corporation is under
no obligation to provide any feature listed herein.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE OpenSS7 Media Gateway Platform
@set MANUAL_TYPE High-Level Design

@ignore
@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@end ignore
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2008  OpenSS7 Corporation
@subtitle All Rights Reserved.
@sp 4
@quotation
@subheading Abstract
This document provides a @value{MANUAL_TYPE} for the @value{MANUAL_TITLE}.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll
@subsubheading Published by:
@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

@noindent
All Rights Reserved.

@sp 1

@noindent
Permission to use, copy and distribute this documentation without modification, for any purpose and
without fee or royalty is hereby granted, provided that both the above copyright notice and this
permission notice appears in all copies and that the name of OpenSS7 Corporation not be used in
advertising or publicity pertaining to distribution of this documentation or its contents without
specific, written prior permission.  OpenSS7 Corporation makes no representation about the
suitability of this documentation for any purpose.  It is provided ``as is'' without express or
implied warranty.

@subsubheading Notice:

@noindent
@b{OpenSS7 Corporation disclaims all warranties with regard to this documentation including all
implied warranties of merchantability, fitness for a particular purpose, non-infringement, or title;
that the contents of the document are suitable for any purpose, or that the implementation of such
contents will not infringe on any third party patents, copyrights, trademarks or other rights.  In
no event shall OpenSS7 Corporation be liable for any direct, indirect, special or consequential
damages, or any damages whatsoever resulting from loss of use, data or profits, whether in an action
of contract, negligence or other tortious action, arising out of or in connection with any use of
this document or the performance or implementation of the contents thereof.}

@sp 1

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation for any reason,
including but not limited to, conformity with standards promulgated by various agencies, utilization
of advances in the state of the technical arts, or the reflection of changes in the design of any
techniques, or procedures embodied, described, or referred to herein.  OpenSS7 Corporation is under
no obligation to provide any feature listed herein.

@vskip 0pt
@end titlepage

@c An index of manual pages.
@defcodeindex mp

@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Ed. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Ed. @value{PACKAGE_RELEASE}@value{PACKAGE_PATCHLEVEL}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@include texi/macros.texi
@include texi/versions.texi

@ifnottex
@node Top
@top OpenSS7 Media Gateway Platform
@end ifnottex

@menu
* Executive Overview::
* Preface::
* Introduction::
* Application Architecture::
* Network Architecture::
* Reference Architecture::
* System Architecture::
* Platform Architecture::
* Protocol Architecture::
* Software Architecture::
* Hardware Architecture::
* Management Architecture::
* Logistics::
* Optional Application Support::
* Optional Network Support::
* Optional System Support::
* Optional Platform Support::
* Optional Protocol Support::
* Optional Software Support::
* Optional Hardware Support::
* Optional Management Support::
* Programmatic Interfaces::
* Platform Sizing::
@end menu

@node Executive Overview
@unnumbered Executive Overview

This document provides a @value{MANUAL_TYPE} for the @value{MANUAL_TITLE}.
The initial and primary purpose of this equipment is to provide a scalable, carrier-grade platform
for terminating TDM voice circuits from the PSTN and providing Media Gatway capabilities for those
terminated circuits.  The purpose is both one of @dfn{hard switching}, where circuits are directly
connected, as well as @dfn{soft switching}, where circuits are converted to RTP sessions and passed
to another Media Gateway.

@subsubheading The OpenSS7 Project

The @uref{http://www.openss7.org/, OpenSS7 Project} is an open source software project that has
developed many protocol components within the SS7, SIGTRAN, ISDN and VoIP protocol stacks.
Intellectual property rights for the OpenSS7 Project are held by @uref{http://www.openss7.com/,
OpenSS7 Corporation}.  All OpenSS7 Project software is eventually licensed under the GNU Affero General Public
License Version 3.  OpenSS7 Corporation also provides commercial licensing of OpenSS7 Project
software under terms less restrictive than the AGPL.

@subsubheading OpenSS7 Media Gateway (MG) Platform

OpenSS7 can provide VoIP gateway capabilities in a high-performance, low-cost, small-footprint
platform leaveraging the GNU/Linux operating system distributions and tools, and utilizing low-cost
commodity, or high-quality standardized hardware.

For details on platform applications, see @ref{Application Architecture}, @ref{Network
Architecture}, @ref{Optional Application Support}, and @ref{Optional Network Support}.

@subsubheading Open Source Software

The OpenSS7 Project leverages the widespread use of GNU/Linux operation systems, distributions, and
FSF tools such as @samp{autoconf} and @dfn{RPM}.  For example, this document was formatted for PDF,
HTML, info and plain text using the GNU @dfn{texinfo} system, @samp{autoconf}, and the @TeX{}
formatting system.

The open source model avoids proprietary lock-in and permits in-house or outsourced development.
All source code is available for use and modification by the end customer.  All build tools,
documentation and associated resources are generally available.  The availability of the source code
and complete documentation eases problem resolution and can offer upgrades and fixes even in advance
of client problem reports.  

For details on software solutions, see @ref{Protocol Architecture}, @ref{Software Architecture},
@ref{Optional Protocol Support}, and @ref{Optional Software Support}.

@subsubheading Commodity Hardware

By best utilizing commodity PC or standardized CompactPCI hardware, OpenSS7 makes available the
highest performance platforms available on the market at back-to-school prices.  When carrier-grade
and large scale is not essential, 3GHz Pentium class servers in hardened rack mount chassis can be
used at a fraction of the cost, and yet outperform, other solutions.  Where carrier-grade is
necessary, embedded Linux on standardized PICMG 2.16 NEBS compliant chassis make for a higher cost,
but more reliable alternative.

For details on hardware solutions, see @ref{Platform Architecture}, @ref{Hardware Architecture},
and @ref{Optional Hardware Support}.

@subsubheading Integrated Management

Utilizing open source management tools, such as @command{net-snmp} and @command{OSIMIS}, OpenSS7
protocol stacks provide integrated management support for SNMPv2c, SNMPv3, or CMISE/CMIP.  The
entire platform, from alarms to provisioning, can be provided using integrated SNMP agents.

For details on management solutions, see @ref{Platform Architecture}, @ref{Management Architecture},
and @ref{Optional Management Support}.

@subsubheading Rapid Development

The OpenSS7 Project has already developed protocol components completing the SS7 and SIGTRAN
signalling stacks including MTP Level 2 and Level 3, ISUP, SCCP, TCAP; and SCTP, M2PA, M2UA, M3UA,
SUA and TUA.  Development of a Carrier VoIP Switch to meet initial field requirements needs only the
development of some intermediate and auxillary modules.

For details on scheduling, see @ref{Logistics}.

@subsubheading An Evolving Solution

The OpenSS7 Project is evolving to support more protocol stacks including ISDN and VoIP.  Support
for an ever expanding capability is demonstrated by the additional options available as described in
@ref{Optional Application Support}, @ref{Optional Network Support},
@ref{Optional Protocol Support}, @ref{Optional Software Support},
and @ref{Optional Hardware Support}.

@subsubheading Conclusions

In summary, an OpenSS7 Carrier VoIP Switch an excellent application of the OpenSS7 SS7 and VoIP stacks and
can be provided at a affordable price on short time-lines, while offering an evolution path for
future deployment applications.

@sp 4

@flushright
@email{bidulock@@openss7.org, Brian Bidulock}
The OpenSS7 Project
@end flushright

@node Preface
@unnumbered Preface

@section Document Information
@cindex Document information

@subsection Abstract
@cindex Document abstract

This document provides a @value{MANUAL_TYPE} for the @value{MANUAL_TITLE}.

@subsection Objective
@cindex Document objective

The objective of this document is to provide a @value{MANUAL_TYPE} for the development of a low
cost, high-performance, @value{MANUAL_TITLE} using OpenSS7 protocol components, software, and
compatible systems and hardware.

@subsection Intent
@cindex Document intent

The intent of this document is to act as a @value{MANUAL_TYPE} for a project for an
@value{MANUAL_TYPE}.  As a @value{MANUAL_TYPE}, this document discusses components and systems which
are not necessarily complete.  @uref{http://www.openss7.com/,OpenSS7 Corporation} is under no
obligation to provide any software, system or feature listed herein.

@subsection Audience
@cindex Document audience

This document is intended for a technical audience.  The reader should be familiar with most ETSI,
ITU-T and ANSI, Signalling System No. 7 recommendations, H.323, H.225, H.245, as well as IETF drafts
and RFCS for RTP, SIP, SIP-T, MEGACO, MGCP, and SIGTRAN protocols.

@subsection Revisions
@cindex Document revisions

Take care that you are working with a current version of this document: you will not be notified of
updates.  To ensure that you are working with a current version, contact the
@uref{mailto:bidulock@@openss7.org,Author}, or check @uref{http://www.openss7.org/,The OpenSS7
Project} website for a current version.

@subsubsection Version Control

@smallexample
@verbatim
$Log: mg.texi,v $
Revision 0.9.2.8  2008-10-28 07:09:46  brian
- correct info direntry naming

Revision 0.9.2.7  2008-09-20 11:04:33  brian
- added package patchlevel

Revision 0.9.2.6  2008-08-03 06:03:34  brian
- protected agains texinfo commands in log entries

Revision 0.9.2.5  2008-04-28 23:39:53  brian
- updated headers for release

Revision 0.9.2.4  2008-04-25 11:50:48  brian
- updates to AGPLv3

Revision 0.9.2.3  2007/11/06 09:04:25  brian
- working up documentation

Revision 0.9.2.2  2007/08/14 06:47:23  brian
- GPLv3 header update

Revision 0.9.2.1  2007/07/04 08:25:00  brian
- added new files
@end verbatim
@end smallexample

@subsubsection ISO 9000 Compliance

Only the @TeX{}, texinfo, or roff source for this document is controlled.  An opaque (printed or
postscript) version of this document is an @strong{UNCONTROLLED VERSION}.

@subsection Disclaimer
@cindex Document disclaimer

@noindent
OpenSS7 Corporation disclaims all warranties with regard to this documentation including all implied
warranties of merchantability, fitness for a particular purpose, non-infringement, or title; that
the contents of the document are suitable for any purpose, or that the implementation of such
contents will not infringe on any third party patents, copyrights, trademarks or other rights..  In
no event shall OpenSS7 Corporation be liable for any direct, indirect, special or consequential
damages or any damages whatsoever resulting from loss of use, data or profits, whether in an action
of contract, negligence or other tortious action, arising out of or in connection with any use of
this document or the performance or implementation of the contents thereof.

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation for any reason,
including but not limited to, conformity with standards promulgated by various agencies, utilization
of advances in the state of the technical arts, or the reflection of changes in the design of any
techniques, or procedures embodied, described, or referred to herein.  OpenSS7 Corporation is under
no obligation to provide any feature listed herein.

@section Document Organization
@cindex Document organization

This document is organized as follows:

@ifnottex
@menu
* Introduction::
* Application Architecture::
* Network Architecture::
* Reference Architecture::
* System Architecture::
* Platform Architecture::
* Protocol Architecture::
* Software Architecture::
* Hardware Architecture::
* Management Architecture::
* Logistics::
* Optional Application Support::
* Optional Network Support::
* Optional Protocol Support::
* Optional Software Support::
* Optional Hardware Support::
* Optional Management Support::
* Programmatic Interfaces::
* Platform Sizing::
* Indices::
@end menu
@end ifnottex
@iftex
@table @emph
@item @ref{Introduction}
Introduction to the @value{MANUAL_TITLE} application.
@item @ref{Application Architecture}
The application requirements and architecture.
@item @ref{Network Architecture}
The network architecture for the application.
@item @ref{Reference Architecture}
The reference architecture for the application.
@item @ref{System Architecture}
The architecture of the @value{MANUAL_TITLE} system.
@item @ref{Platform Architecture}
The architecture of the @value{MANUAL_TITLE} platform.
@item @ref{Protocol Architecture}
The protocol architecture supporting the application.
@item @ref{Software Architecture}
The software architecture supporting the protocol stack and application.
@item @ref{Hardware Architecture}
The hardware architecture supporting the protocol stack and application.
@item @ref{Management Architecture}
The management architecture supporting the system and application.
@item @ref{Logistics}
Project logistics for completion of the @value{MANUAL_TITLE} application.
@item @ref{Optional Application Support}
Additional application support not directly contributing to the current objective.
@item @ref{Optional Network Support}
Additional network interface support not directly contributing to the current objective.
@item @ref{Optional Protocol Support}
Additional protocol component support not directly contributing to the current objective.
@item @ref{Optional Software Support}
Additional software support not directly contributing to the current objective.
@item @ref{Optional Hardware Support}
Additional hardware support not directly contributing to the current objective.
@item @ref{Optional Management Support}
Additional managment component support not directly contributing to the current objective.
@item @ref{Programmatic Interfaces}
Programmatic interfaces to selected protocol components.
@item @ref{Platform Sizing}
Detailed platform sizing considerations.
@item @ref{Indices}
Index of concepts, manual pages, etc.
@end table
@end iftex


@node Introduction
@chapter Introduction
@cindex Introduction

This document provides a @value{MANUAL_TYPE} for a platform to provide the @value{MANUAL_TITLE}
capabilities.  The primary driver for the @value{MANUAL_TITLE} is to provide a system capable of
interconnecting a VoIP backbone to the PSTN using SS7.  This document provide a high-level design
and proposal for a production system to provide this capability at a number of scale points.

The proposal utilizes, where possible, existing OpenSS7 protocol stack components and provides a
development plan for components that are specific to the @value{MANUAL_TITLE} initial requirements.

This document discusses the resulting software configuration that will be put in place on the
production system, the platform configuration for the production system, and a network configuration
for deployment.  Also discussed is an overview of the project management logistics for successful
completion over the course of this development project.

It is intended that this document be a ``living'' document, that is updated over the course of this
development project.

@menu
* The OpenSS7 Media Gateway::
* Project Drivers::
* Scope::
@end menu

@node The OpenSS7 Media Gateway
@section The OpenSS7 Media Gateway
@cindex The OpenSS7 Media Gateway

This project provides an @value{MANUAL_TITLE} that provides interconnection to the PSTN using TDM
circuits and is capable of routng call to and from the PSTN and a VoIP backbone network using
@dfn{hard switching}, physical circuit switching, or @dfn{soft switching}, RTP transport.

@node Project Drivers
@section Project Drivers
@cindex Project drivers

The lead purpose of the @value{MANUAL_TITLE} is to provide PSTN interconnection to an existing VoIP
backbone deployment infrastructure that lacks same.

@node Scope
@section Scope
@cindex Scope

Because the focus on low cost, high performance, and production stability, the @value{MANUAL_TITLE}
is constructed using commodity computing platforms and PCI based hardware cards, but using hardenned
NEBS-3/ETSI compliant chasses in an active/standby failover configuration.  This will result in a
cost-effective carrier grade system for mid- to low deployment cost.

Because of early deployment drivers yet requirements for scale, the @value{MANUAL_TITLE} platform is
constructed using standardized PICMG 2.16 telephony hardware in a NEBS 3/ETSI compliant chassis
providing carrier-grade serviceability and reliability.  Non-carrier-grade platforms utilizing
commodity PC hardware for lower scale installations are possible.

@menu
* Phases::
* Gates::
@end menu

@node Phases
@subsection Phases
@cindex Project phases

The longer term project is broken into the following phases:

@table @dfn
@item Phase 1
The initial phase of the project is intended to provide the capabilities of the
@value{MANUAL_TITLE} operation for the deployment platform.
@item Phase 2
The second phase of the project is intended on performing SS7 signalling interoperability testing
for live deployment of the signalling gateway production platform.
@item Phase 3
The third phase of the project is to integrate the deployment platform with the OpenSS7 VoIP Switch
using the Internet Protocol suite.
@item Phase 4
The fourth phase of the project is to perform interoperability testing and a field trial of the
deployment platform.
@item Phase 5
The fifth phase of the project is to complete management system integration for remote monitoring
and provisioning for production service.
@end table

@node Gates
@subsection Gates
@cindex Project gates

Each phase of the project consists of seven gates.  The seven gates are defined as follows:

@table @dfn

@item Gate 0 --- Concept

@dfn{Gate 0} is passed when the initial concept has been elucidated and work is begun on a
High-Level Design.  This is an internal OpenSS7 gate.

@item Gate 1 --- High Level Design

@dfn{Gate 1} is passed when the high-level design has been reviewed to the satisfaction of the
consumers of the project.  This is an external review gate.  OpenSS7 internally passes this gate
once the High-Level Design has been published and work is begun on a detailed design.@footnote{This
document is a @value{MANUAL_TYPE} document and it meets the internal requirements for passing Gate 1
of Phase 1 and Phase 2 of the project.  An external review of this document by a Beta or Gamma
client or sponsor is pending.}

@item Gate 2 --- Detailed Design

@dfn{Gate 2} is passed when the detailed design has been reviewed to the satisfaction of the
consumers of the project and the developers on the project.  This is an external as well as an
internal review gate.  OpenSS7 passes this gate once the Detailed Design has been published and work
has begun on development and implementation of the design.@footnote{OpenSS7 requires a contractual
commitment for purchase from a Beta or Gamma client, or funding from a Sponsor of the OpenSS7
Project, before this gate can be passed and development started.} Passing this gate moves from the
design stage to the development stage of the project.

@item Gate 3 --- Deployment and Implementation

@dfn{Gate 3} is passed when the software and systems development and implementation to the detailed
design is complete and testing has begun.  This is an internal review gate.  OpenSS7 internally
passes this gate when software is code complete and hardware has been installed for testing.

@item Gate 4 --- System Test

@dfn{Gate 4} is passed once the product implementation meets all internal ad hoc and formal
conformance test suites and internal testing is complete.  This is an internal review gate.  OpenSS7
passes this gate internally once conformance testing is complete.  Passing this gate moves from the
development stage to the support stage of the project.

@item Gate 5 --- Acceptance Test

@dfn{Gate 5} is passed once the product implementation has passed external Gamma client acceptance
testing.  This is an external review gate.  OpenSS7 passes this gate internally once participation
in external acceptance testing is complete.

@item Gate 6 --- Project Complete

@dfn{Gate 6} is passed once all support obligations for the product implementation have been
discharged.  This is an internal review gate.  OpenSS7 passes this gate once support agreements have
terminated.

@end table

For more details on Gate scheduling for Phase 1, 2 and 3 of the project, @pxref{Schedule}.

@node Application Architecture
@chapter Application Architecture
@cindex Application architecture

@menu
* Application Background::
* Application Objectives::
* Application Requirements::
* Solution Architecture::
* Message Flows::
@end menu

The @value{MANUAL_TITLE} is intended to provide high performance and high-density PSTN to VoIP
backbone gateway.

@node Application Background
@section Application Background
@cindex Application background

@node Application Objectives
@section Application Objectives
@cindex Application objectives

@node Application Requirements
@section Application Requirements
@cindex Application requirements

Application requirements have been broken into 5 phases using the timeboxing approach.

@subsection Phase 1 Requirements

Phase 1 requirements provide an @value{MANUAL_TITLE} capability that will connect an existing H.323
VoIP network to the PSTN using SS7 ISUP trunks.

@itemize ---
@end itemize

@itemize ---
@end itemize

@subsection Phase 2 Requirements

Phase 2 requirements provide SIP-T capabilities.

@itemize ---
@end itemize

@subsection Phase 3 Requirements

Phase 3 requirements provide network service capabilities.

@itemize ---
@end itemize

@subsection Phase 4 Requirements

Phase 4 requirements expose internal interfaces to provide softswitch capabilities.

@itemize ---
@end itemize

@subsection Phase 5 Requirements

Phase 5 requirements complete full VoIP (NGN) switching.

@itemize ---
@end itemize

@node Solution Architecture
@section Solution Architecture
@cindex Solution architecture

Although the functions of @dfn{Media Gateway Controller}, @dfn{Media Gateway} and @dfn{Signalling
Gateway} have been decomposed, and in the past these functional groups have been implemented on
separate physical platforms, modern compute capacity and densities permit these functions to be
integrated into a single physical platform without limitation.  Open standard interfaces are
utilized internal to the platform to permit a decomposed model to be split out and to permit ETSI
Tiphon Version 4 compatibility as well as Multi-Services Forum Version 2 compatibility.

@subsection @value{MANUAL_TITLE} for Deployment

In light of the foregoing, the solution architecture takes the form of an integrated media gateway
capable of providing a number of functional groups in the traditional models.  The
@value{MANUAL_TITLE} integrates the following functional groups while still permitting standard
interfaces to be exposed for maximum deployment flexibility:

@itemize ---
@item
@item
@item
@item
@end itemize

@node Message Flows
@section Message Flows
@cindex Message flows

This section provides some illustrative application call flows:@footnote{This section is not
intended as a @dfn{Detailed Design}, but provides illustration only for these
@dfn{@value{MANUAL_TYPE}}.}

@node Network Architecture
@chapter Network Architecture
@cindex Network architecture

@figref{3.1} illustrates the call path for various calls within the softswitching complex.

@enumerate
@item Intra-MG calls originate on a network SSP and terminate on a network SSP, both attached to
the same MG.  This is an intra-MG call in that the call never traverses more than one MG.

@item Inter-MG calls originate on a network SSP and terminate on a network SSP, each attached to a
different MG.  This is an inter-MG call within the same switching complex as the call traverses two
MGs.

@item Trans-MG calls originate on a network SSP and terminate on a network VoIP gateway.
@end enumerate

@figuresized{netarch,3.1,Network Architecture,5.5in}

Signalling is via a path typically separate from the MG.  In the illustration in @figref{3.1}, the
signalling is via external STPs that are attached to switching complex Signalling Gateways (SGs)
that communicate with the Media Gateway Controller.  In some arrangements, the MG is possibly
also a Signalling Gateway.

@figuresized{netarch2,3.2,Network Architecture,5.5in}

@figref{3.2} illustrates the placement of the Media Gateway (MG) within the decomposed Service
Switching Point and its connection to Media Gateway Controllers within the switching complex as well
as to Service Switching Points (SSPs) in the external network.  As illustrated, the MG terminates
media gateway control messaging from the Media Gateway Controller (MGC) and attaches to external
network SSPs using TDM voice trunks.

@node Reference Architecture
@chapter Reference Architecture
@cindex Reference architecture

@section ETSI TIPHON

@figref{2.1} illustrates the ETSI TIPHON reference architecture.

@figuresized{tiphon,2.1,Reference Architecture,}

@subsection ETSI TIPHON Entities

The ETSI TIPHON model illustrated in @figref{2.1} contains the following reference entities:

@table @dfn
@item Terminal:
The H.323, SIP or MEGACO @dfn{Terminal} support the @var{A} or @var{B} interface.  The @var{A}
interface is used for communicating with an H.323 @dfn{Gatekeeper}; SIP Forwarding Server, Proxy
Server or User Agent.

@dfn{Terminal} devices are external to the NG switching complex.  In initial phases, @dfn{Terminal}
device interface @var{A} (@pxref{Reference Interface A}) will only be supported via external H.323
Gatekeepers; SIP Forwarding Server or SIP Proxy Server.  Direct @dfn{Terminal} device attachment for
H.323, SIP and H.248 @dfn{Terminals} will be supported in later phases.

@item Gatekeeper:
The H.323 @dfn{Gatekeeper}, SIP Forwarding Server, or SIP Proxy Server, supports the @var{A},
@var{C}, @var{D} and @var{G} interfaces.

The NG switching complex will support an internal @dfn{Gatekeeper} function that will intially
support the @var{D} and @var{C} interfaces, and will support the @var{A} interface in later phases.
Intitially the @var{G} interface will be internal to the platform, and will be exposed in later phases.

In the NG switching complex, the @dfn{Gatekeeper} performs the role of a call-by-call server (and is
termed the CBC) which performance access authorization, routing and other functions on a call by
call basis, for FGD, H.323 and SIP calls.

@item Media Gateway Controller:
The H.323 or SIP @dfn{Media Gateway Controller} supports the @var{C}, @var{F}, @var{J} and @var{N}
interfaces.  The NG swtiching complex will incorporate an integral @dfn{Media Gateway Controller}
function.  In the field deployment the @var{C}, @var{F}, @var{J} and @var{N} interfaces will be
exposed.

The SIP @dfn{Media Gateway Controller} is primarily responsible for conversion of SCN signalling
from the PSTN on the @var{J} interface to VoIP signalling tot he SIP Redirect/Proxy server on the
@var{C} interface.  Also, the SIP MGC must coordinate this conversion with the control of media
conversion from G.703/704 G.711 A- and mu-law circtuis from the PSTN to RTP/RTCP channels within
the VoIP network.

@item Media Gateway:

@item Signalling Gateway:

@item Back End:

@item Session Border Controller:
The @dfn{Session Border Controller} is not illustrated in the ETSI TIPHON illustration, @figref{2.1}.

In essesnce a @dfn{Session Border Controller} is a security devices but may also be a protocol
conversion device.  The @dfn{Session Border Controller} sits on the @var{A}, @var{B} or @var{D}
interfaces, when those interfaces span an administrative, security or protocol domain.

@end table

@subsection ETSI TIPHON Reference Points

The ETSI TIPHON model illustrated in @figref{2.1} contains the following reference interfaces:

@table @dfn
@item Interface A

@item Interface B

@item Interface C

@item Interface D

@item Interface E.a

@item Interface E.b

@item Interface F

@item Interface G

@item Interface J

@item Interface N

@end table

@section Interfaces

@figuresized{iface,2.3,Interfaces,3.5in}

The interfaces suppored by the @value{MANUAL_TITLE} are illustrated in @figref{2.3}.  The interfaces
are enumerated as follows:

@enumerate

@item Primary Media Gateway Controller (MGC) Interface

This interface provides primary MGC circuit switching control.  Typical protocols include an
H.248/MEGACO and Q.1950 profile.
The profile should include an Intra-MG and Inter-MG switching package in the profile.

@item Secondary Media Gateway Controller (MGC) Interface

This inteface provides secondary (backup) MGC circuit switching control.  Typical protocols include
an H.248/MEGACO and Q.1950 profile.
The profile should include an Intra-MG and Inter-MG switching package in the profile.

@item Service Switching Point (SSP) Interface Type I

This interface is an Inter-Machine or PABX Trunk based on CAS signalling, with Type I signalling
(customer).  The physical interface is T1, E1, J1, T3, E2, OC3, OC12 or OC48.

@item Service Switching Point (SSP) Interface Type II

This interface is an FGD Inter-Machine Trunk on SS7 or CAS signalling, with Type II signalling
(local or toll tandem).  The physical interface is T1, E1, J1, T3, E2, OC3, OC12 or OC48.

@item Data Session Border Gateway (D-SBG) Interface

This interface is RTP/RTCP over UDP over Internet Protocol (IP).  The D-SBG provides pinhole
firewall control over RTP/RTCP sessions under control of the S-SBG.

@item Media Gateway (MG) Interface

This interface is an MG to MG interface.  This interface multiplexes TDM signals over an IP network
connection using a profile of ITU-T and IETF NGN protocols.  Switching to and from these interfaces
are controlled via an Inter-MG switching package on the MG.  Multiple MG can be ganged together in
this fashion to appear as a signle switching fabric to the MGC.

@item Signalling Session Border Gateway (S-SBG) Interface

This interface is unused.

@item Operations Support System (OSS) Interface

This interface provids OAM&P for the MG platform.  The protocol is a management profile that can
include SNMPv2c, SNMPv3, CMISE/CMIP, CMOT, IPMI, CIM, DTMF, WS-MAN, etc.

@end enumerate

These interfaces and the protocol profile requirements are detailed in the sub-sections that follow:

@subsection Primary MGC Interface

@subsection Secondary MGC Interface

@subsection SSP Type I Interface

@subsection SSP Type II Interface

@subsection D-SBG Interface

@subsection MG Interface

@subsection S-SBG Interface

@subsection OSS Interface

@node System Architecture
@chapter System Architecture
@cindex System architecture

This section details the solution system architecture.  The solution system architecture consists of
the computing platform and it placement within the locale installation environment.

The solution system has the following requirements:

@itemize ---

@item 19" rack.

@item -48 VDC electrical power.

@item CO cooling.

@item Bantam to RJ-48c patch pannel.

@end itemize

@figuresized{sysarch,4.1,System Architecture,5.0in}

@node Platform Architecture
@chapter Platform Architecture
@cindex Platform architecture

@menu
* Platform Capacity::
@end menu

This section details the platform architecture.  The solution platform architecture consists of the
computing platform and associated hardware, interfaces and peripherals.

@figref{5.1} illustrates the solution platform rack configuration.

@figuresized{rack,5.1,Rack Mount Components,}

The solution platform consists of the following:

@itemize ---

@item Two hardened PC (2U) chassis per system.

@item Two GigE (1000baseT) RJ-48c Layer 2 Ethernet Switches.

@item Two 1-1 DSX 14 T1 patch pannels.

@end itemize

@node Platform Capacity
@section Platform Capacity
@cindex Platform capacity

The PC chasses is equipped with the following:@footnote{For detailing sizing considrations,
@pxref{Platform Sizing}.}

@itemize --
@item 2 x 3.2GHz Xeon class E7520 based Motherboard.
@item 2 x 100MHz PCI-X 2.1 bus.
@item 4G DDR memory.
@item 2 x Ultra320 SCSI hard drives.
@item 2 X GigE Ethernet NICs.
@item 3 x V401PT Quad T1 interface cards.
@end itemize

@node Protocol Architecture
@chapter Protocol Architecture
@cindex Protocol Architecture

@figref{6.1} illustrates the protocol configuration of the @value{MANUAL_TITLE} system.  The
protocol stack uses the following OpenSS7 stack components:

@figuresized{protconf,6.1,Protocol Architecture,6in}

@menu
* Protocol Components::
@end menu

@node Protocol Components
@section Protocol Components
@cindex Protocol components

The following Protocol Components are provided as part of the OpenSS7 MG stack:

@menu
* Media Gateway (MG) Stack Manager::
* Media Gateway (MG) Switching Application::
* Media Gateway (MG) Driver::
* MEGACO/H.248 (H248) Driver::
* Multiplex/Channel (MX/CH) Driver::
* PCI 532 DE Multiplex (MX) Driver::
* V401P Multiplex (MX) Driver::
* Voice Trunking over IP (VToIP) Driver::
* Real-Time Transport (Control) Protocol (RTP/RTCP) Driver::
* User Datagram Protocol (UDP) Driver::
* Stream Control Transmission Protocol (SCTP) Driver::
* Transmission Control Protocol (TCP) Driver::
* Internet Protocol (IP) Driver::
@end menu

@node Media Gateway (MG) Stack Manager
@subsection Media Gateway (MG) Stack Manager
@cindex Media Gateway (MG) stack manager

The @dfn{Media Gateway (MG) Stack Manager} provides management of the MG stack components.  It is
discussed in more detail in @ref{Management Architecture}.

@node Media Gateway (MG) Switching Application
@subsection Media Gateway (MG) Switching Application
@cindex Media Gateway (MG) switching application

@node Media Gateway (MG) Driver
@subsection Media Gateway (MG) Driver
@cindex Media Gateway (MG) driver

The @dfn{Media Gateway (MG) Driver} provides a unified interface to local switching functions,
remote switching functions, and media gateway server functions.  The driver controls a local MX
driver to perform local switching functions and accesses the client version of the MEGACO/H.248
driver to perform remote switching functions.  The server version of the MEGACO/H.248 driver is
accessed by the MG driver to provide control of MG functions to a remote MGC.

@node MEGACO/H.248 (H248) Driver
@subsection MEGACO/H.248 (H248) Driver
@cindex MEGACO/H.248 (H248) driver

The @dfn{MEGACO/H.248 (H248) Driver} provides a media gateway interface to local or remote switching
functions using the MEGACO/H.248 protocol and packages.  A client version of the driver is located
at the Media Gateway Controller and a server version of the driver is located at the Media Gateway.
This project uses the server version of the driver.

@node Multiplex/Channel (MX/CH) Driver
@subsection Multiplex/Channel (MX/CH) Driver
@cindex Multiplex/Channel (MX/CH) driver

The @dfn{Multiplex/Channel (MX/CH) Driver} performs soft-switching of multiplex Streams as well as
channel access to channels within multiplex Streams.  This driver links multiplex interfaces beneath
it and presents both multiplex and channel interfaces to it users.  For this project, the MX/CH
driver is used to link PCI 532 DE, V401P, VToIP or RTP/RTCP MX Streams beneath the driver and
provide channel access to DS0, DS1 or full DS3 channels within the multiplex for use by the Media
Gateway.  Multiplex streams present an MX interface to its users.  Channel streams present a CH
interface to its users.  The CH interfaces are converted to appropriate Streams using additional
modules.

The MX/CH drivers supports T1, E1 and J1 operation, as well as T3 and E2 operation, both for locally
attached TDM trunks, locally terminated VToIP trunks, and RTP/RTCP streams.  The driver provides a
specialized MX and CH interface to its users.

This is an existing OpenSS7 channel stack component; for documentation see @manref{mx(4)} and
@manref{ch(4)}.

The Multiplex/Channel (MX/CH) driver is responsible for providing CH services to its users.

@node PCI 532 DE Multiplex (MX) Driver
@subsection PCI 532 DE Multiplex (MX) Driver
@cindex PCI 532 DE Multiplex (MX) driver

The @dfn{PCI 532 DE Multiplex (MX) Driver} provides MX services for locally attached DSX-3 or E3
facilities.  This driver provides hardware interface to TDM facilities and allows the MX driver to
provide transparent switching capabilities for DSX-3 or E3 TDM facilities.

The PCI 532 DE MX driver supports DSX-3 and E3 oepration for locally attached TDM trunks.  The
driver provides a specialized MX interface at the DS3 rate to its users.  Neither a DS1 rate MX
interface nor a NxDS0 CH interface is provided.  A DS1 rate MX interface and NxDS0 CH interface can
be acessed by linking this driver under the generic MX/CH driver.

This is an existing OpenSS7 channel stack component; for documentation see @manref{pci532(4)} and
@manref{mx(4)}.

@node V401P Multiplex (MX) Driver
@subsection V401P Multiplex (MX) Driver
@cindex V401P Multiplex (MX) driver

The @dfn{V401P Multiplex (MX) Driver} provides MX services for locally attached DSX-1 or E1
facilities.  This driver provides hardware interface to TDM facilities and allows the MX driver to
provide transparent switching capabilities for DSX-1 or E1 TDM facilities.

The V401P MX driver supports DSX-1, E2 and J2 operation for locally attached TDM trunks.  The driver
provides a specialized MX interface to its users.  A CH interface is not provided but can be
accessed by linking this driver under the generic MX/CH driver.

This is an existing OpenSS7 channel stack component; for documentation see @manref{v401p(4)} and
@manref{mx(4)}.

@node Voice Trunking over IP (VToIP) Driver
@subsection Voice Trunking over IP (VToIP) Driver
@cindex Voice Trunking over IP (VToIP) driver

The @dfn{Voice Trunking over IP (VToIP) Driver} provides MX services for virtual trunks using
ITU-T Recommendation Y.1452, or transparent unstructured DSX-1, E1, DSX-3, E3 MX services using
ITU-T Recommendation Y.1453.  This driver uses ATM AAL1 or AAL2 CPS PDUs encapsulated in RTP or UDP
packets.  The primary purpose of this driver for the @value{MANUAL_TITLE} is to provide Inter-MG
switching capabilities utilizing distributed matrix control.

The VToIP MX driver supports unstructured DSX-3 and E3 operation, structured and unstructured DSX-1
and E1 operation, and structure NxDS0 operation.  The driver provides a specialized MX or CH
interface to its users.  The driver can be linked under the generic MX/CH driver for transpartent
matrix switching operation.

This is an existing OpenSS7 channel stack component; for documentation see @manref{vtoip(4)},
@manref{mx(4)} and @manref{ch(4)}.

@node Real-Time Transport (Control) Protocol (RTP/RTCP) Driver
@subsection Real-Time Transport (Control) Protocol (RTP/RTCP) Driver
@cindex Real-Time Transport (Control) Protocol (RTP/RTCP) driver

The @dfn{Real-Time Transport (Control) Protocol (RTP/RTCP) Driver} provides MX services for RTP/RTCP
voice channels.  This driver maps individual RTP/RTCP streams into an MX group for use with the
Generic MX/CH driver.  The driver provides codec conversion to and from G.711 mu- or A-law, jitter
buffering, digital padding, echo cancellation and other VoIP mechanisms including out-of-band DTMF.

The RTP/RTCP drivers supports audio profile streams.  The driver provides a specialized MX or CH
interface to its users.  The driver can be linked under the generic MX/CH driver for transparent
matrix switching operation.

This is an existing OpenSS7 channel stack component; for documentation see @manref{rtp(4)},
@manref{mx(4)} and @manref{ch(4)}.

@node User Datagram Protocol (UDP) Driver
@subsection User Datagram Protocol (UDP) Driver
@cindex User Datagram Protocol (UDP) driver

The @dfn{User Datagram Protocol (UDP) Driver} is a @dfn{STREAMS} based driver providing access to
the underlying UDP layer in the Linux kernel.  The primary use of this component in the
@value{MANUAL_TITLE} is to provide UDP services to the RTP/RTCP driver, the VToIP driver, and the
MEGACO/H.248 driver.  This is an existing OpenSS7 XNS stack component; for documentation, see
@manref{udp(4)}.

@node Stream Control Transmission Protocol (SCTP) Driver
@subsection Stream Control Transmission Protocol (SCTP) Driver
@cindex Stream Control Transmission Protocol (SCTP) Driver
@cindex SCTP

OpenSS7 has two implementations (@dfn{STREAMS} and Linux Sockets) that provide support for this new
transport protocol and that provide transport for SIGTRAN and other protocols.  The @dfn{STREAMS}
SCTP implementation provides an NPI Revision 2.0 and TPI Revision 2.0 interface to its users.  Alos
supported is an X/Open XNS 5.2 XTI Library and ITOS (ISO over SCTP).  The Linux Native SCTP
implementation provides a Sockets interface.

This is an existing OpenSS7 SIGTRAN stack component; for documentation, see:
@manref{sctp(4)}.  @dfn{Phase 1} activities for SCTP include integration testing with the SG
components.

@node Transmission Control Protocol (TCP) Driver
@subsection Transmission Control Protocol (TCP) Driver
@cindex Transmission Control Protocol (TCP) driver

@node Internet Protocol (IP) Driver
@subsection Internet Protocol (IP) Driver
@cindex Internet Protocol (IP) driver

The @dfn{Internet Protocol (IP) Driver} is a @dfn{STREAMS} based driver providing access to the
underlying IP layer in the Linux kernel.  The primary use of this component in the
@value{MANUAL_TITLE} is to provide IP services to the UDP, RTP/RTCP, and VToIP drivers.  This is an
existing OpenSS7 XNS stack component; for documentation, see @manref{ip(4)}.

@node Software Architecture
@chapter Software Architecture
@cindex Software Architecture

This chapter details the software configuration of the OpenSS7 solutions.  OpenSS7 stack software is
based on the @dfn{STREAMS} facility running on the Linux Operating System.  This provides for use of
the Linux Operating System while maintaining portability and consistency with major UNIX operating
systems that provide an @dfn{SVR 4.2 ES/MP STREAMS} facility.

@menu
* Linux Operating System::
* STREAMS Facility::
* OpenSS7 SS7 and SIGTRAN Stacks::
@end menu

@node Linux Operating System
@section Linux Operating System
@cindex Linux Operating System

The OpenSS7 @dfn{STREAMS} releases and stacks currently support the 2.4 and 2.6 Linux Kernel.  A
Linux kernel version greater than or equal to 2.4.18 is recommended for 2.4 kernels.  The Linux 2.5
series kernels are not supported.  A Linux kernel version greater than or equal to 2.6.9 is
recommended for 2.6 kernels.  Linux 2.4 and 2.6 kernels released by popular distributions are
supported.  These include kernel.org releases, RedHat (7.2, 9, EL3, AS/EL4, AS/EL5), WhiteBox (EL3,
EL4), Fedora Core (FC1-FC7), Debian (Woody-Etch), Ubuntu (6.10-7.10), SuSE (8.2-10.2 OSS), CentOS(4
and 5), Lineox (4 and 5).  Currently our preferred distribution is CentOS 5 with all updates
applied.

Although OpenSS7 @dfn{STREAMS} SS7 and SIGTRAN stacks are tested primarily on ix86 hardware, the
stacks compile and install on PPC (MPC 8260, Freescale 440), HPPA, and other processor architectures
supported by the Linux 2.4 and 2.6 kernels.

For the current project, RedHat AS/EL5 or CentOS 5 is recommended.

@node STREAMS Facility
@section STREAMS Facility
@cindex STREAMS Facility

OpenSS7 @dfn{STREAMS} SS7 and SIGTRAN stacks utilize a @dfn{SVR 4.2 ES/MP STREAMS} facility.  Two
such facilities are available for Linux:

@enumerate
@item @dfn{Linux STREAMS} (referred to as LiS), and
@item @dfn{Linux Fast-STREAMS} (referred to as LfS).
For additional information on @dfn{Linux Fast-STREAMS}, @xref{Linux Fast-STREAMS (LfS)}.
@end enumerate

@menu
* Linux STREAMS (LiS)::
* Linux Fast-STREAMS (LfS)::
@end menu

@node Linux STREAMS (LiS)
@subsection Linux STREAMS (LiS)
@cindex Linux STREAMS (LiS)
@cindex LiS

@node Linux Fast-STREAMS (LfS)
@subsection Linux Fast-STREAMS (LfS)
@cindex Linux Fast-STREAMS (LfS)
@cindex LfS


@node OpenSS7 SS7 and SIGTRAN Stacks
@section OpenSS7 SS7 and SIGTRAN Stacks
@cindex OpenSS7 SS7 and SIGTRAN Stacks

The OpenSS7 SS7 and SIGTRAN stacks are implemented using the @dfn{STREAMS} facility.  Protocol
moduels within the stack are implemented as @dfn{STREAMS} modules, device drivers, multiplexing
drivers and pseudo-device drivers.  The @dfn{STREAMS} facility has the ability to stack modules and
multiplexing drivers above read or pseudo-device drivers using the @dfn{STREAMS} @manref{I_PUSH(7)}
an @manref{I_LINK(7)} facilities.  Since @dfn{STREAMS} modules and drivers run within the context of
the Operating System Kernel using message-based scheduling, greatly increased performance is
experienced over equivalent user-space applications.  @dfn{STREAMS} modules and drivers communicate
by passing priority.  In addition, @dfn{STREAMS} provides memory management, timer, locking,
syncrhonization, flow control and other facilities commonly used by protocol modules.

@figuresized{osimap,7.1,SS7 to ISO/OSI Mapping,}

Each OpenSS7 protocol module provides standardized X/Open ISO/OSI interfaces as well as more SS7
specialized interfaces.  Many of the OpenSS7 protocol modules provide TPI Revision 2.0 interfaces
with support fot he OpenSS7 XTI/TLI Library.

@figuresized{stack,7.2,STREAMS SS7/SIGTRAN Stack Architecture,3.8in}

@figref{7.2} illustrates the organization of @dfn{STREAMS} modules, multiplexing drivers,
pseudo-device drivers and real device drivers in the OpenSS7 SS7 stack.  At each interface, the
equivalent SIGTRAN User Adaptation Layer (UA) can be used.  So, for example, between MTP Level 3 and
its Users, the M3UA
@cindex M3UA
protocol can be employed.  Each UA provides the same lower layer interface and upper layer
interface.  So, M3UA
@cindex M3UA
provides an MTP/MTP-User interface at its lower layer interface as well as at it supper layer
interface.

@node Hardware Architecture
@chapter Hardware Architecture
@cindex Hardware Architecture

@figref{8.1} illustrates the hardware configuration for the @value{MANUAL_TITLE}.

@figuresized{platarch,8.1,Platform Architecture,6.0in}

@figuresized{platarch2,8.2,Platform Architecture,6.0in}

The configuration show in @figref{8.1} shows:

@itemize @bullet
@item Two compute nodes attached in a fully redundant configuration.
@item Each compute node has 3 x V401P-SS7 cards proding quad DSX-1 connectivity per card, for a
total of 12 DSX-1's per compute node.
@item Each compute node is attached via cross-connect over 12 DSX-1's (each) to a DACS which has
drop-down capability on each pair of DSX-1's consisting of one DSX-1 from each compute node.
@item On the IP network side, each compute node supports 2 GigE NIC ports.
@item Each NIC port on each compute node is attached to a GigE rail or swtich which subsequently
attacheds to two Routers, one for Network A and one for Network B.
@item The configuration shown supports up to 288 low-speed (56 or 64 kbps) signalling links or up to
12 high-speed (1.544 Mpbs) signalling links.
@item Compute nodes communicate with each other over the IP network, either via local switch or
remote router, using M2UA.  This SIGTRAN protocol permits the compute node to logically share their
V401P-SS7 hardware interfaces. 
@item Compute nodes communicate with the associated STP pair via TDM links as well as using the M2PA
protocol.  The M2PA SIGTRAN protocol provides an IP-based high-speed SS7 link and is used to augment
TDM links to implement C-Links on the platform.
@item Compont nodes act as SGP within the SG and provide MTP Level 3 and above connectivity to
remote application servers using the M3UA SIGTRAN protocol.  The M3UA SIGTRAN protocol exports the
MTP to MTP-User interface and effectivley transports the interface to the application server from
the signalling gateway.
@end itemize

@node Management Architecture
@chapter Management Architecture
@cindex Management Architecture

Characteristics of the management architecture are as follows:

@enumerate

@item The MG is a portion of a managed switching element.  As such, the MG is a managed element that
is only part of a managed switching element.  Management Stations may correlate similar managed
data that occurs both on the MGC and the MG, or the MGC might be capable of providing a single
managed switching element view.

@end enumerate

@figuresized{manarch,9.1,Management Architecture,4in}

The management facilities provided by the hardware platform, operating system and associated
subsystems are illustrated in @figref{9.1}.  They are summarized as follows:

@itemize @bullet

@item @dfn{Platform Hardware}

The platform hardware provides for physical management of hardware resources.  Platform hardware is
configured for rack-mount operation in a Telco environment.  It provides for field replacable units.
A number of hardware features provide for local physical managements, such as sliding rack mounts,
cable management, chassis LEDS, unit identification, chassis LEDS, KVM, auxillary DCS panels,
monitoring ports, front-panel management controls and ports.

@item @dfn{Linux Kernel}

@item @dfn{ACPI}

@item @dfn{IPMI}

@item @dfn{Linux Fast-STREAMS}

@item @dfn{SNMP}

@item @dfn{TMN}

@end itemize


@node Logistics
@chapter Logistics
@cindex Logistics

@node Optional Application Support
@appendix Optional Application Support
@cindex Optional Application Support

@node Optional Network Support
@appendix Optional Network Support
@cindex Optional Network Support

@node Optional System Support
@appendix Optional System Support
@cindex Optional System Support

@node Optional Platform Support
@appendix Optional Platform Support
@cindex Optional Platform Support

@node Optional Protocol Support
@appendix Optional Protocol Support
@cindex Optional Protocol Support

@node Optional Software Support
@appendix Optional Software Support
@cindex Optional Software Support

@node Optional Hardware Support
@appendix Optional Hardware Support
@cindex Optional Hardware Support

@node Optional Management Support
@appendix Optional Management Support
@cindex Optional Management Support

@node Programmatic Interfaces
@appendix Programmatic Interfaces
@cindex Programmatic interfaces

@node Platform Sizing
@appendix Platform Sizing
@cindex Platform sizing

@node Indices
@unnumbered Indices
@cindex indices

@menu
* Concept Index::		    Index of Concepts
* Manual Page Index::		    Index of Manual Pages Referenced
@end menu

@node Concept Index
@unnumberedsec Index of Concepts
@printindex cp

@page 
@node Manual Page Index
@unnumberedsec Index of Manual Pages Referenced
@printindex mp

@page
@shortcontents
@page
@contents
@bye
