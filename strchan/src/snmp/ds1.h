/*****************************************************************************

 @(#) $Id: ds1.h,v 0.9.2.13 2009-01-19 13:31:55 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2009-01-19 13:31:55 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: ds1.h,v $
 Revision 0.9.2.13  2009-01-19 13:31:55  brian
 - updating standalone agents

 Revision 0.9.2.12  2009-01-16 20:40:56  brian
 - working up mibs and agents

 Revision 0.9.2.11  2009-01-14 14:31:20  brian
 - working up agents

 Revision 0.9.2.10  2009-01-10 17:46:46  brian
 - updated agents and mibs

 Revision 0.9.2.9  2009-01-04 13:16:10  brian
 - updated agents

 Revision 0.9.2.8  2009-01-03 10:51:10  brian
 - updated agent

 Revision 0.9.2.7  2009-01-02 15:04:18  brian
 - updated agents

 Revision 0.9.2.6  2008-12-31 16:04:50  brian
 - updated mibs

 Revision 0.9.2.5  2008-12-24 13:40:56  brian
 - updated mibs

 *****************************************************************************/

#ifndef __LOCAL_DS1_H__
#define __LOCAL_DS1_H__

#ident "@(#) $RCSfile: ds1.h,v $ $Name:  $($Revision: 0.9.2.13 $) Copyright (c) 2008-2009 Monavacon Limited."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

#undef MASTER
extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ds1_data {
	uint ds1_request;
};
struct dsx1ConfigTable_data {
	uint dsx1ConfigTable_request;
	uint dsx1ConfigTable_refs;
	long dsx1LineIndex;		/* ReadOnly */
	long dsx1IfIndex;		/* ReadOnly */
	long dsx1TimeElapsed;		/* ReadOnly */
	long dsx1ValidIntervals;	/* ReadOnly */
	long dsx1LineType;		/* ReadWrite */
	long dsx1LineCoding;		/* ReadWrite */
	long dsx1SendCode;		/* ReadWrite */
	uint8_t *dsx1CircuitIdentifier;	/* ReadWrite */
	size_t dsx1CircuitIdentifierLen;
	long dsx1LoopbackConfig;	/* ReadWrite */
	long dsx1LineStatus;		/* ReadOnly */
	long dsx1SignalMode;		/* ReadWrite */
	long dsx1TransmitClockSource;	/* ReadWrite */
	long dsx1Fdl;			/* ReadWrite */
	long dsx1InvalidIntervals;	/* ReadOnly */
	long dsx1LineLength;		/* ReadWrite */
	long dsx1LineStatusLastChange;	/* ReadOnly */
	long dsx1LineStatusChangeTrapEnable;	/* ReadWrite */
	long dsx1LoopbackStatus;	/* ReadOnly */
	long dsx1Ds1ChannelNumber;	/* ReadOnly */
	long dsx1Channelization;	/* ReadWrite */
	long dsx1LineMode;		/* ReadWrite */
	long dsx1LineBuildOut;		/* ReadWrite */
};
struct dsx1CurrentTable_data {
	uint dsx1CurrentTable_request;
	uint dsx1CurrentTable_refs;
	long dsx1CurrentIndex;		/* ReadOnly */
	long dsx1CurrentESs;		/* ReadOnly */
	long dsx1CurrentSESs;		/* ReadOnly */
	long dsx1CurrentSEFSs;		/* ReadOnly */
	long dsx1CurrentUASs;		/* ReadOnly */
	long dsx1CurrentCSSs;		/* ReadOnly */
	long dsx1CurrentPCVs;		/* ReadOnly */
	long dsx1CurrentLESs;		/* ReadOnly */
	long dsx1CurrentBESs;		/* ReadOnly */
	long dsx1CurrentDMs;		/* ReadOnly */
	long dsx1CurrentLCVs;		/* ReadOnly */
};
struct dsx1IntervalTable_data {
	uint dsx1IntervalTable_request;
	uint dsx1IntervalTable_refs;
	long dsx1IntervalIndex;		/* ReadOnly */
	long dsx1IntervalNumber;	/* ReadOnly */
	long dsx1IntervalESs;		/* ReadOnly */
	long dsx1IntervalSESs;		/* ReadOnly */
	long dsx1IntervalSEFSs;		/* ReadOnly */
	long dsx1IntervalUASs;		/* ReadOnly */
	long dsx1IntervalCSSs;		/* ReadOnly */
	long dsx1IntervalPCVs;		/* ReadOnly */
	long dsx1IntervalLESs;		/* ReadOnly */
	long dsx1IntervalBESs;		/* ReadOnly */
	long dsx1IntervalDMs;		/* ReadOnly */
	long dsx1IntervalLCVs;		/* ReadOnly */
	long dsx1IntervalValidData;	/* ReadOnly */
};
struct dsx1TotalTable_data {
	uint dsx1TotalTable_request;
	uint dsx1TotalTable_refs;
	long dsx1TotalIndex;		/* ReadOnly */
	long dsx1TotalESs;		/* ReadOnly */
	long dsx1TotalSESs;		/* ReadOnly */
	long dsx1TotalSEFSs;		/* ReadOnly */
	long dsx1TotalUASs;		/* ReadOnly */
	long dsx1TotalCSSs;		/* ReadOnly */
	long dsx1TotalPCVs;		/* ReadOnly */
	long dsx1TotalLESs;		/* ReadOnly */
	long dsx1TotalBESs;		/* ReadOnly */
	long dsx1TotalDMs;		/* ReadOnly */
	long dsx1TotalLCVs;		/* ReadOnly */
};
struct dsx1FarEndCurrentTable_data {
	uint dsx1FarEndCurrentTable_request;
	uint dsx1FarEndCurrentTable_refs;
	long dsx1FarEndCurrentIndex;	/* ReadOnly */
	long dsx1FarEndTimeElapsed;	/* ReadOnly */
	long dsx1FarEndValidIntervals;	/* ReadOnly */
	long dsx1FarEndCurrentESs;	/* ReadOnly */
	long dsx1FarEndCurrentSESs;	/* ReadOnly */
	long dsx1FarEndCurrentSEFSs;	/* ReadOnly */
	long dsx1FarEndCurrentUASs;	/* ReadOnly */
	long dsx1FarEndCurrentCSSs;	/* ReadOnly */
	long dsx1FarEndCurrentLESs;	/* ReadOnly */
	long dsx1FarEndCurrentPCVs;	/* ReadOnly */
	long dsx1FarEndCurrentBESs;	/* ReadOnly */
	long dsx1FarEndCurrentDMs;	/* ReadOnly */
	long dsx1FarEndInvalidIntervals;	/* ReadOnly */
};
struct dsx1FarEndIntervalTable_data {
	uint dsx1FarEndIntervalTable_request;
	uint dsx1FarEndIntervalTable_refs;
	long dsx1FarEndIntervalIndex;	/* ReadOnly */
	long dsx1FarEndIntervalNumber;	/* ReadOnly */
	long dsx1FarEndIntervalESs;	/* ReadOnly */
	long dsx1FarEndIntervalSESs;	/* ReadOnly */
	long dsx1FarEndIntervalSEFSs;	/* ReadOnly */
	long dsx1FarEndIntervalUASs;	/* ReadOnly */
	long dsx1FarEndIntervalCSSs;	/* ReadOnly */
	long dsx1FarEndIntervalLESs;	/* ReadOnly */
	long dsx1FarEndIntervalPCVs;	/* ReadOnly */
	long dsx1FarEndIntervalBESs;	/* ReadOnly */
	long dsx1FarEndIntervalDMs;	/* ReadOnly */
	long dsx1FarEndIntervalValidData;	/* ReadOnly */
};
struct dsx1FarEndTotalTable_data {
	uint dsx1FarEndTotalTable_request;
	uint dsx1FarEndTotalTable_refs;
	long dsx1FarEndTotalIndex;	/* ReadOnly */
	long dsx1FarEndTotalESs;	/* ReadOnly */
	long dsx1FarEndTotalSESs;	/* ReadOnly */
	long dsx1FarEndTotalSEFSs;	/* ReadOnly */
	long dsx1FarEndTotalUASs;	/* ReadOnly */
	long dsx1FarEndTotalCSSs;	/* ReadOnly */
	long dsx1FarEndTotalLESs;	/* ReadOnly */
	long dsx1FarEndTotalPCVs;	/* ReadOnly */
	long dsx1FarEndTotalBESs;	/* ReadOnly */
	long dsx1FarEndTotalDMs;	/* ReadOnly */
};
struct dsx1FracTable_data {
	uint dsx1FracTable_request;
	uint dsx1FracTable_refs;
	long dsx1FracIndex;		/* ReadOnly */
	long dsx1FracNumber;		/* ReadOnly */
	long dsx1FracIfIndex;		/* ReadWrite */
};
struct dsx1ChanMappingTable_data {
	uint dsx1ChanMappingTable_request;
	uint dsx1ChanMappingTable_refs;
	long ifIndex;			/* ReadOnly */
	long dsx1Ds1ChannelNumber;	/* ReadOnly */
	long dsx1ChanMappedIfIndex;	/* ReadOnly */
};

/* storage declarations */
extern struct ds1_data *ds1Storage;
extern struct header_complex_index *dsx1ConfigTableStorage;
extern struct header_complex_index *dsx1CurrentTableStorage;
extern struct header_complex_index *dsx1IntervalTableStorage;
extern struct header_complex_index *dsx1TotalTableStorage;
extern struct header_complex_index *dsx1FarEndCurrentTableStorage;
extern struct header_complex_index *dsx1FarEndIntervalTableStorage;
extern struct header_complex_index *dsx1FarEndTotalTableStorage;
extern struct header_complex_index *dsx1FracTableStorage;
extern struct header_complex_index *dsx1ChanMappingTableStorage;

/* enum definitions from the covered mib sections */

#define DSX1LINETYPE_OTHER                       1
#define DSX1LINETYPE_DSX1ESF                     2
#define DSX1LINETYPE_DSX1D4                      3
#define DSX1LINETYPE_DSX1E1                      4
#define DSX1LINETYPE_DSX1E1CRC                   5
#define DSX1LINETYPE_DSX1E1MF                    6
#define DSX1LINETYPE_DSX1E1CRCMF                 7
#define DSX1LINETYPE_DSX1UNFRAMED                8
#define DSX1LINETYPE_DSX1E1UNFRAMED              9
#define DSX1LINETYPE_DSX1DS2M12                  10
#define DSX1LINETYPE_DSX1E2                      11
#define DSX1LINETYPE_DSX1E1Q50                   12
#define DSX1LINETYPE_DSX1E1Q50CRC                13

#define DSX1LINECODING_DSX1JBZS                  1
#define DSX1LINECODING_DSX1B8ZS                  2
#define DSX1LINECODING_DSX1HDB3                  3
#define DSX1LINECODING_DSX1ZBTSI                 4
#define DSX1LINECODING_DSX1AMI                   5
#define DSX1LINECODING_OTHER                     6
#define DSX1LINECODING_DSX1B6ZS                  7

#define DSX1SENDCODE_DSX1SENDNOCODE              1
#define DSX1SENDCODE_DSX1SENDLINECODE            2
#define DSX1SENDCODE_DSX1SENDPAYLOADCODE         3
#define DSX1SENDCODE_DSX1SENDRESETCODE           4
#define DSX1SENDCODE_DSX1SENDQRS                 5
#define DSX1SENDCODE_DSX1SEND511PATTERN          6
#define DSX1SENDCODE_DSX1SEND3IN24PATTERN        7
#define DSX1SENDCODE_DSX1SENDOTHERTESTPATTERN    8

#define DSX1LOOPBACKCONFIG_DSX1NOLOOP            1
#define DSX1LOOPBACKCONFIG_DSX1PAYLOADLOOP       2
#define DSX1LOOPBACKCONFIG_DSX1LINELOOP          3
#define DSX1LOOPBACKCONFIG_DSX1OTHERLOOP         4
#define DSX1LOOPBACKCONFIG_DSX1INWARDLOOP        5
#define DSX1LOOPBACKCONFIG_DSX1DUALLOOP          6

#define DSX1SIGNALMODE_NONE                      1
#define DSX1SIGNALMODE_ROBBEDBIT                 2
#define DSX1SIGNALMODE_BITORIENTED               3
#define DSX1SIGNALMODE_MESSAGEORIENTED           4
#define DSX1SIGNALMODE_OTHER                     5

#define DSX1TRANSMITCLOCKSOURCE_LOOPTIMING       1
#define DSX1TRANSMITCLOCKSOURCE_LOCALTIMING      2
#define DSX1TRANSMITCLOCKSOURCE_THROUGHTIMING    3
#define DSX1TRANSMITCLOCKSOURCE_ADAPTIVE         4

#define DSX1LINESTATUSCHANGETRAPENABLE_ENABLED   1
#define DSX1LINESTATUSCHANGETRAPENABLE_DISABLED  2

#define DSX1CHANNELIZATION_DISABLED              1
#define DSX1CHANNELIZATION_ENABLEDDS0            2
#define DSX1CHANNELIZATION_ENABLEDDS1            3

#define DSX1LINEMODE_CSU                         1
#define DSX1LINEMODE_DSU                         2

#define DSX1LINEBUILDOUT_NOTAPPLICABLE           1
#define DSX1LINEBUILDOUT_NEG75DB                 2
#define DSX1LINEBUILDOUT_NEG15DB                 3
#define DSX1LINEBUILDOUT_NEG225DB                4
#define DSX1LINEBUILDOUT_ZERODB                  5

#define DSX1INTERVALVALIDDATA_TRUE               1
#define DSX1INTERVALVALIDDATA_FALSE              2

#define DSX1FARENDINTERVALVALIDDATA_TRUE         1
#define DSX1FARENDINTERVALVALIDDATA_FALSE        2

/* notifications */
extern oid dsx1LineStatusChange_oid[11];

/* scalars accessible only for notify */

/* object id definitions */
extern oid ds1NearEndConfigGroup_oid[11];
extern oid ds1NearEndStatisticsGroup_oid[11];
extern oid ds1FarEndGroup_oid[11];
extern oid ds1DeprecatedGroup_oid[11];
extern oid ds1NearEndOptionalConfigGroup_oid[11];
extern oid ds1DS2Group_oid[11];
extern oid ds1TransStatsGroup_oid[11];
extern oid ds1NearEndOptionalTrapGroup_oid[11];
extern oid ds1ChanMappingGroup_oid[11];
extern oid ds1NearEndConfigurationGroup_oid[11];
extern oid ds1Compliance_oid[11];
extern oid ds1MibT1PriCompliance_oid[11];
extern oid ds1MibE1PriCompliance_oid[11];
extern oid ds1Ds2Compliance_oid[11];
extern oid ds1NCompliance_oid[11];
extern oid ds1MibT1PriNCompliance_oid[11];
extern oid ds1MibE1PriNCompliance_oid[11];

/* function prototypes */
/* trap function prototypes */
extern void send_dsx1LineStatusChange_v2trap(struct variable_list *);

/* variable function prototypes */
void init_ds1(void);
void deinit_ds1(void);
int term_ds1(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ds1;
void parse_ds1(const char *, char *);
SNMPCallback store_ds1;
void refresh_ds1(int);
FindVarMethod var_dsx1ConfigTable;
struct dsx1ConfigTable_data *dsx1ConfigTable_create(void);
struct dsx1ConfigTable_data *dsx1ConfigTable_duplicate(struct dsx1ConfigTable_data *);
int dsx1ConfigTable_destroy(struct dsx1ConfigTable_data **);
int dsx1ConfigTable_add(struct dsx1ConfigTable_data *);
int dsx1ConfigTable_del(struct dsx1ConfigTable_data *);
void parse_dsx1ConfigTable(const char *, char *);
SNMPCallback store_dsx1ConfigTable;
void refresh_dsx1ConfigTable(int);
FindVarMethod var_dsx1CurrentTable;
struct dsx1CurrentTable_data *dsx1CurrentTable_create(void);
struct dsx1CurrentTable_data *dsx1CurrentTable_duplicate(struct dsx1CurrentTable_data *);
int dsx1CurrentTable_destroy(struct dsx1CurrentTable_data **);
int dsx1CurrentTable_add(struct dsx1CurrentTable_data *);
int dsx1CurrentTable_del(struct dsx1CurrentTable_data *);
void parse_dsx1CurrentTable(const char *, char *);
SNMPCallback store_dsx1CurrentTable;
void refresh_dsx1CurrentTable(int);
FindVarMethod var_dsx1IntervalTable;
struct dsx1IntervalTable_data *dsx1IntervalTable_create(void);
struct dsx1IntervalTable_data *dsx1IntervalTable_duplicate(struct dsx1IntervalTable_data *);
int dsx1IntervalTable_destroy(struct dsx1IntervalTable_data **);
int dsx1IntervalTable_add(struct dsx1IntervalTable_data *);
int dsx1IntervalTable_del(struct dsx1IntervalTable_data *);
void parse_dsx1IntervalTable(const char *, char *);
SNMPCallback store_dsx1IntervalTable;
void refresh_dsx1IntervalTable(int);
FindVarMethod var_dsx1TotalTable;
struct dsx1TotalTable_data *dsx1TotalTable_create(void);
struct dsx1TotalTable_data *dsx1TotalTable_duplicate(struct dsx1TotalTable_data *);
int dsx1TotalTable_destroy(struct dsx1TotalTable_data **);
int dsx1TotalTable_add(struct dsx1TotalTable_data *);
int dsx1TotalTable_del(struct dsx1TotalTable_data *);
void parse_dsx1TotalTable(const char *, char *);
SNMPCallback store_dsx1TotalTable;
void refresh_dsx1TotalTable(int);
FindVarMethod var_dsx1FarEndCurrentTable;
struct dsx1FarEndCurrentTable_data *dsx1FarEndCurrentTable_create(void);
struct dsx1FarEndCurrentTable_data *dsx1FarEndCurrentTable_duplicate(struct dsx1FarEndCurrentTable_data *);
int dsx1FarEndCurrentTable_destroy(struct dsx1FarEndCurrentTable_data **);
int dsx1FarEndCurrentTable_add(struct dsx1FarEndCurrentTable_data *);
int dsx1FarEndCurrentTable_del(struct dsx1FarEndCurrentTable_data *);
void parse_dsx1FarEndCurrentTable(const char *, char *);
SNMPCallback store_dsx1FarEndCurrentTable;
void refresh_dsx1FarEndCurrentTable(int);
FindVarMethod var_dsx1FarEndIntervalTable;
struct dsx1FarEndIntervalTable_data *dsx1FarEndIntervalTable_create(void);
struct dsx1FarEndIntervalTable_data *dsx1FarEndIntervalTable_duplicate(struct dsx1FarEndIntervalTable_data *);
int dsx1FarEndIntervalTable_destroy(struct dsx1FarEndIntervalTable_data **);
int dsx1FarEndIntervalTable_add(struct dsx1FarEndIntervalTable_data *);
int dsx1FarEndIntervalTable_del(struct dsx1FarEndIntervalTable_data *);
void parse_dsx1FarEndIntervalTable(const char *, char *);
SNMPCallback store_dsx1FarEndIntervalTable;
void refresh_dsx1FarEndIntervalTable(int);
FindVarMethod var_dsx1FarEndTotalTable;
struct dsx1FarEndTotalTable_data *dsx1FarEndTotalTable_create(void);
struct dsx1FarEndTotalTable_data *dsx1FarEndTotalTable_duplicate(struct dsx1FarEndTotalTable_data *);
int dsx1FarEndTotalTable_destroy(struct dsx1FarEndTotalTable_data **);
int dsx1FarEndTotalTable_add(struct dsx1FarEndTotalTable_data *);
int dsx1FarEndTotalTable_del(struct dsx1FarEndTotalTable_data *);
void parse_dsx1FarEndTotalTable(const char *, char *);
SNMPCallback store_dsx1FarEndTotalTable;
void refresh_dsx1FarEndTotalTable(int);
FindVarMethod var_dsx1FracTable;
struct dsx1FracTable_data *dsx1FracTable_create(void);
struct dsx1FracTable_data *dsx1FracTable_duplicate(struct dsx1FracTable_data *);
int dsx1FracTable_destroy(struct dsx1FracTable_data **);
int dsx1FracTable_add(struct dsx1FracTable_data *);
int dsx1FracTable_del(struct dsx1FracTable_data *);
void parse_dsx1FracTable(const char *, char *);
SNMPCallback store_dsx1FracTable;
void refresh_dsx1FracTable(int);
FindVarMethod var_dsx1ChanMappingTable;
struct dsx1ChanMappingTable_data *dsx1ChanMappingTable_create(void);
struct dsx1ChanMappingTable_data *dsx1ChanMappingTable_duplicate(struct dsx1ChanMappingTable_data *);
int dsx1ChanMappingTable_destroy(struct dsx1ChanMappingTable_data **);
int dsx1ChanMappingTable_add(struct dsx1ChanMappingTable_data *);
int dsx1ChanMappingTable_del(struct dsx1ChanMappingTable_data *);
void parse_dsx1ChanMappingTable(const char *, char *);
SNMPCallback store_dsx1ChanMappingTable;
void refresh_dsx1ChanMappingTable(int);

WriteMethod write_dsx1LineType;
WriteMethod write_dsx1LineCoding;
WriteMethod write_dsx1SendCode;
WriteMethod write_dsx1CircuitIdentifier;
WriteMethod write_dsx1LoopbackConfig;
WriteMethod write_dsx1SignalMode;
WriteMethod write_dsx1TransmitClockSource;
WriteMethod write_dsx1Fdl;
WriteMethod write_dsx1LineLength;
WriteMethod write_dsx1LineStatusChangeTrapEnable;
WriteMethod write_dsx1Channelization;
WriteMethod write_dsx1LineMode;
WriteMethod write_dsx1LineBuildOut;
WriteMethod write_dsx1FracIfIndex;
#endif				/* __LOCAL_DS1_H__ */
