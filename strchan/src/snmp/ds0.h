/*****************************************************************************

 @(#) $Id: ds0.h,v 0.9.2.2 2009-01-19 13:31:54 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2009-01-19 13:31:54 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: ds0.h,v $
 Revision 0.9.2.2  2009-01-19 13:31:54  brian
 - updating standalone agents

 Revision 0.9.2.1  2009-01-16 20:39:30  brian
 - added standard mibs

 *****************************************************************************/

#ifndef __LOCAL_DS0_H__
#define __LOCAL_DS0_H__

#ident "@(#) $RCSfile: ds0.h,v $ $Name:  $($Revision: 0.9.2.2 $) Copyright (c) 2008-2009 Monavacon Limited."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

#undef MASTER
extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ds0_data {
	uint ds0_request;
};
struct dsx0ConfigTable_data {
	uint dsx0ConfigTable_request;
	uint dsx0ConfigTable_refs;
	long ifIndex;			/* ReadOnly */
	long dsx0Ds0ChannelNumber;	/* ReadOnly */
	long dsx0RobbedBitSignalling;	/* ReadWrite */
	uint8_t *dsx0CircuitIdentifier;	/* ReadWrite */
	size_t dsx0CircuitIdentifierLen;
	long dsx0IdleCode;		/* ReadWrite */
	long dsx0SeizedCode;		/* ReadWrite */
	long dsx0ReceivedCode;		/* ReadOnly */
	long dsx0TransmitCodesEnable;	/* ReadWrite */
	long dsx0Ds0BundleMappedIfIndex;	/* ReadOnly */
};
struct dsx0ChanMappingTable_data {
	uint dsx0ChanMappingTable_request;
	uint dsx0ChanMappingTable_refs;
	long ifIndex;			/* ReadOnly */
	long dsx0Ds0ChannelNumber;	/* ReadOnly */
	long dsx0ChanMappedIfIndex;	/* ReadOnly */
};

/* storage declarations */
extern struct ds0_data *ds0Storage;
extern struct header_complex_index *dsx0ConfigTableStorage;
extern struct header_complex_index *dsx0ChanMappingTableStorage;

/* enum definitions from the covered mib sections */

#define DSX0ROBBEDBITSIGNALLING_TRUE             1
#define DSX0ROBBEDBITSIGNALLING_FALSE            2

#define DSX0TRANSMITCODESENABLE_TRUE             1
#define DSX0TRANSMITCODESENABLE_FALSE            2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ds0ConfigGroup_oid[11];
extern oid ds0Compliance_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ds0(void);
void deinit_ds0(void);
int term_ds0(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ds0;
void parse_ds0(const char *, char *);
SNMPCallback store_ds0;
void refresh_ds0(int);
FindVarMethod var_dsx0ConfigTable;
struct dsx0ConfigTable_data *dsx0ConfigTable_create(void);
struct dsx0ConfigTable_data *dsx0ConfigTable_duplicate(struct dsx0ConfigTable_data *);
int dsx0ConfigTable_destroy(struct dsx0ConfigTable_data **);
int dsx0ConfigTable_add(struct dsx0ConfigTable_data *);
int dsx0ConfigTable_del(struct dsx0ConfigTable_data *);
void parse_dsx0ConfigTable(const char *, char *);
SNMPCallback store_dsx0ConfigTable;
void refresh_dsx0ConfigTable(int);
FindVarMethod var_dsx0ChanMappingTable;
struct dsx0ChanMappingTable_data *dsx0ChanMappingTable_create(void);
struct dsx0ChanMappingTable_data *dsx0ChanMappingTable_duplicate(struct dsx0ChanMappingTable_data *);
int dsx0ChanMappingTable_destroy(struct dsx0ChanMappingTable_data **);
int dsx0ChanMappingTable_add(struct dsx0ChanMappingTable_data *);
int dsx0ChanMappingTable_del(struct dsx0ChanMappingTable_data *);
void parse_dsx0ChanMappingTable(const char *, char *);
SNMPCallback store_dsx0ChanMappingTable;
void refresh_dsx0ChanMappingTable(int);

WriteMethod write_dsx0RobbedBitSignalling;
WriteMethod write_dsx0CircuitIdentifier;
WriteMethod write_dsx0IdleCode;
WriteMethod write_dsx0SeizedCode;
WriteMethod write_dsx0TransmitCodesEnable;
#endif				/* __LOCAL_DS0_H__ */
