/*****************************************************************************

 @(#) $RCSfile: mxMIB.h,v $ $Name:  $($Revision: 0.9.2.4 $) $Date: 2008-04-28 23:39:59 $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software: you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation, version 3 of the license.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-04-28 23:39:59 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: mxMIB.h,v $
 Revision 0.9.2.4  2008-04-28 23:39:59  brian
 - updated headers for release

 Revision 0.9.2.3  2008/01/14 19:55:03  brian
 - updated stub files

 Revision 0.9.2.2  2008/01/03 12:46:00  brian
 - updates for new mib2c

 Revision 0.9.2.1  2008/01/01 13:59:38  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_MXMIB_H__
#define __LOCAL_MXMIB_H__

#ident "@(#) $RCSfile: mxMIB.h,v $ $Name:  $($Revision: 0.9.2.4 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

/* our storage structure(s) */

struct mxMIB_data {
	unsigned int mxMIB_request;

	long mxDiscontinuityTime;

};

struct mxSpanTable_data {
	unsigned int mxSpanTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	char *mxSpanDevice;
	size_t mxSpanDeviceLen;
	char *mxSpanEquipmentId;
	size_t mxSpanEquipmentIdLen;
	long mxSpanType;
	long mxSpanNumber;
	long mxSpanRate;
	char *mxSpanMode;
	size_t mxSpanModeLen;
	long mxSpanCrc;
	long mxSpanClocking;
	u_long mxSpanPriority;
	long mxSpanCoding;
	long mxSpanFraming;
	long mxSpanLineImpedance;
	long mxSpanLineMode;
	long mxSpanLineLength;
	long mxSpanLineAttenuation;
	long mxSpanLineGain;
	u_long mxSpanLineDelay;
	long mxSpanTxLevel;
	long mxSpanRxLevel;
	long mxSpanAlarmSettleTime;
	long mxSpanLineCodeTime;
	char *mxSpanPrimary;
	size_t mxSpanPrimaryLen;
	char *mxSpanDataLink;
	size_t mxSpanDataLinkLen;
	long mxSpanLineCode;
	char *mxSpanAlarmSeverityMappingProfile;
	size_t mxSpanAlarmSeverityMappingProfileLen;
	long mxSpanAdministrativeState;
	long mxSpanOperationalState;
	long mxSpanUsageState;
	char *mxSpanAlarmStatus;
	size_t mxSpanAlarmStatusLen;
	char *mxSpanProceduralStatus;
	size_t mxSpanProceduralStatusLen;
	char *mxSpanAvailabilityStatus;
	size_t mxSpanAvailabilityStatusLen;
	char *mxSpanControlStatus;
	size_t mxSpanControlStatusLen;
	long mxSpanStandbyStatus;
	long mxSpanUnknownStatus;
	char *mxSpanSap;
	size_t mxSpanSapLen;
	char *mxSpanLoopbackStatus;
	size_t mxSpanLoopbackStatusLen;
	char *mxSpanLineStatus;
	size_t mxSpanLineStatusLen;
	char *mxSpanAlarms;
	size_t mxSpanAlarmsLen;
	char *mxSpanEvents;
	size_t mxSpanEventsLen;
	long mxSpanReceiveLevel;
	long mxSpanReceiveThreshold;
	long mxSpanRowStatus;
};

struct mxChanTable_data {
	unsigned int mxChanTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxChanIndex;
	long mxChanType;
	long mxChanRate;
	char *mxChanMode;
	size_t mxChanModeLen;
	long mxChanAdministrativeState;
	long mxChanUsageState;
	char *mxChanAvailabilityStatus;
	size_t mxChanAvailabilityStatusLen;
	char *mxChanControlStatus;
	size_t mxChanControlStatusLen;
	char *mxChanSap;
	size_t mxChanSapLen;
};

struct mxXconTable_data {
	unsigned int mxXconTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxChanIndex;
	char *mxXconSpanIndex;
	size_t mxXconSpanIndexLen;
	long mxXconChanIndex;
	long mxXconType;
	long mxXconStorageType;
	long mxXconRowStatus;
};

struct mxBertTable_data {
	unsigned int mxBertTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxBertMode;
	long mxBertSelect;
	char *mxBertPattern;
	size_t mxBertPatternLen;
	long mxBertOperationalState;
	char *mxBertProceduralStatus;
	size_t mxBertProceduralStatusLen;
	long mxBertBitCount;
	long mxBertErrorCount;
};

struct mxNearEndCurrentTable_data {
	unsigned int mxNearEndCurrentTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxNearEndCurrentTimeElapsed;
	long mxNearEndCurrentESs;
	long mxNearEndCurrentSESs;
	long mxNearEndCurrentSEFSs;
	long mxNearEndCurrentUASs;
	long mxNearEndCurrentCSSs;
	long mxNearEndCurrentPCVs;
	long mxNearEndCurrentLESs;
	long mxNearEndCurrentBESs;
	long mxNearEndCurrentDMs;
	long mxNearEndCurrentLCVs;
};

struct mxNearEndIntervalTable_data {
	unsigned int mxNearEndIntervalTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxNearEndIntervalIndex;
	long mxNearEndIntervalESs;
	long mxNearEndIntervalSESs;
	long mxNearEndIntervalSEFSs;
	long mxNearEndIntervalUASs;
	long mxNearEndIntervalCSSs;
	long mxNearEndIntervalPCVs;
	long mxNearEndIntervalLESs;
	long mxNearEndIntervalBESs;
	long mxNearEndIntervalDMs;
	long mxNearEndIntervalLCVs;
	long mxNearEndIntervalValidData;
};

struct mxNearEndTotalTable_data {
	unsigned int mxNearEndTotalTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxNearEndTotalValidIntervals;
	long mxNearEndTotalInvalidIntervals;
	long mxNearEndTotalESs;
	long mxNearEndTotalSESs;
	long mxNearEndTotalSEFSs;
	long mxNearEndTotalUASs;
	long mxNearEndTotalCSSs;
	long mxNearEndTotalPCVs;
	long mxNearEndTotalLESs;
	long mxNearEndTotalBESs;
	long mxNearEndTotalDMs;
	long mxNearEndTotalLCVs;
};

struct mxFarEndCurrentTable_data {
	unsigned int mxFarEndCurrentTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxFarEndCurrentTimeElapsed;
	long mxFarEndCurrentESs;
	long mxFarEndCurrentSESs;
	long mxFarEndCurrentSEFSs;
	long mxFarEndCurrentUASs;
	long mxFarEndCurrentCSSs;
	long mxFarEndCurrentPCVs;
	long mxFarEndCurrentLESs;
	long mxFarEndCurrentBESs;
	long mxFarEndCurrentDMs;
};

struct mxFarEndIntervalTable_data {
	unsigned int mxFarEndIntervalTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxFarEndIntervalIndex;
	long mxFarEndIntervalESs;
	long mxFarEndIntervalSESs;
	long mxFarEndIntervalSEFSs;
	long mxFarEndIntervalUASs;
	long mxFarEndIntervalCSSs;
	long mxFarEndIntervalPCVs;
	long mxFarEndIntervalLESs;
	long mxFarEndIntervalBESs;
	long mxFarEndIntervalDMs;
	long mxFarEndIntervalValidData;
};

struct mxFarEndTotalTable_data {
	unsigned int mxFarEndTotalTable_request;
	char *mxSpanIndex;
	size_t mxSpanIndexLen;
	long mxFarEndTotalValidIntervals;
	long mxFarEndTotalInvalidIntervals;
	long mxFarEndTotalESs;
	long mxFarEndTotalSESs;
	long mxFarEndTotalSEFSs;
	long mxFarEndTotalUASs;
	long mxFarEndTotalCSSs;
	long mxFarEndTotalPCVs;
	long mxFarEndTotalLESs;
	long mxFarEndTotalBESs;
	long mxFarEndTotalDMs;
};

/* enum definitions from the covered mib sections */

#define MXSPANTYPE_NONE                          0
#define MXSPANTYPE_T1                            1
#define MXSPANTYPE_E1                            2
#define MXSPANTYPE_J1                            3
#define MXSPANTYPE_E2                            4
#define MXSPANTYPE_E3                            5
#define MXSPANTYPE_T3                            6

#define MXSPANMODE_LOCAL                         0
#define MXSPANMODE_REMOTE                        1
#define MXSPANMODE_FRAMER                        2
#define MXSPANMODE_PAYLOAD                       3

#define MXSPANCRC_NONE                           0
#define MXSPANCRC_CRC4                           1
#define MXSPANCRC_CRC5                           2
#define MXSPANCRC_CRC6                           3
#define MXSPANCRC_CRC6J                          4

#define MXSPANCLOCKING_NONE                      0
#define MXSPANCLOCKING_LOOP                      1
#define MXSPANCLOCKING_LOCAL                     2
#define MXSPANCLOCKING_INTERNAL                  3
#define MXSPANCLOCKING_EXTERNAL                  4
#define MXSPANCLOCKING_ADAPTIVE                  5

#define MXSPANCODING_NONE                        0
#define MXSPANCODING_AMI                         1
#define MXSPANCODING_B6ZS                        2
#define MXSPANCODING_B8ZS                        3
#define MXSPANCODING_HDB3                        4
#define MXSPANCODING_JBZS                        5
#define MXSPANCODING_ZBTSI                       6

#define MXSPANFRAMING_NONE                       0
#define MXSPANFRAMING_CCS                        1
#define MXSPANFRAMING_CAS                        2
#define MXSPANFRAMING_SF                         3
#define MXSPANFRAMING_D4                         4
#define MXSPANFRAMING_ESF                        5

#define MXSPANLINEIMPEDANCE_NONE                 0
#define MXSPANLINEIMPEDANCE_UNBALANCED75OHM      1
#define MXSPANLINEIMPEDANCE_BALANCED100OHM       2
#define MXSPANLINEIMPEDANCE_BALANCED120OHM       3

#define MXSPANLINEMODE_NONE                      0
#define MXSPANLINEMODE_DSU                       1
#define MXSPANLINEMODE_CSU                       2
#define MXSPANLINEMODE_MONITOR                   3

#define MXSPANLINELENGTH_NONE                    0
#define MXSPANLINELENGTH_DSX133FT                1
#define MXSPANLINELENGTH_DSX266FT                2
#define MXSPANLINELENGTH_DSX399FT                3
#define MXSPANLINELENGTH_DSX533FT                4
#define MXSPANLINELENGTH_DSX666FT                5

#define MXSPANLINEATTENUATION_NONE               0
#define MXSPANLINEATTENUATION_CSU0DB             1
#define MXSPANLINEATTENUATION_CSU8DB             2
#define MXSPANLINEATTENUATION_CSU15DB            3
#define MXSPANLINEATTENUATION_CSU23DB            4

#define MXSPANLINEGAIN_NONE                      0
#define MXSPANLINEGAIN_MON0DB                    1
#define MXSPANLINEGAIN_MON12DB                   2
#define MXSPANLINEGAIN_MON20DB                   3
#define MXSPANLINEGAIN_MON26DB                   4
#define MXSPANLINEGAIN_MON30DB                   5
#define MXSPANLINEGAIN_MON32DB                   6

#define MXSPANTXLEVEL_OFF                        0
#define MXSPANTXLEVEL_ON                         1

#define MXSPANRXLEVEL_OFF                        0
#define MXSPANRXLEVEL_ON                         1

#define MXSPANDATALINK_ANSIT1403                 0
#define MXSPANDATALINK_ATT54016                  1
#define MXSPANDATALINK_OTHER                     2

#define MXSPANLINECODE_NOCODE                    1
#define MXSPANLINECODE_LINECODE                  2
#define MXSPANLINECODE_PAYLOADCODE               3
#define MXSPANLINECODE_RESETCODE                 4
#define MXSPANLINECODE_TESTCODE                  5
#define MXSPANLINECODE_UNFRAMEDALLONES           6

#define MXSPANADMINISTRATIVESTATE_LOCKED         0
#define MXSPANADMINISTRATIVESTATE_UNLOCKED       1
#define MXSPANADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define MXSPANOPERATIONALSTATE_DISABLED          0
#define MXSPANOPERATIONALSTATE_ENABLED           1

#define MXSPANUSAGESTATE_IDLE                    0
#define MXSPANUSAGESTATE_ACTIVE                  1
#define MXSPANUSAGESTATE_BUSY                    2

#define MXSPANALARMSTATUS_UNDERREPAIR            0
#define MXSPANALARMSTATUS_CRITICAL               1
#define MXSPANALARMSTATUS_MAJOR                  2
#define MXSPANALARMSTATUS_MINOR                  3
#define MXSPANALARMSTATUS_ALARMOUTSTANDING       4

#define MXSPANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXSPANPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXSPANPROCEDURALSTATUS_INITIALIZING      2
#define MXSPANPROCEDURALSTATUS_REPORTING         3
#define MXSPANPROCEDURALSTATUS_TERMINATING       4

#define MXSPANAVAILABILITYSTATUS_INTEST          0
#define MXSPANAVAILABILITYSTATUS_FAILED          1
#define MXSPANAVAILABILITYSTATUS_POWEROFF        2
#define MXSPANAVAILABILITYSTATUS_OFFLINE         3
#define MXSPANAVAILABILITYSTATUS_OFFDUTY         4
#define MXSPANAVAILABILITYSTATUS_DEPENDENCY      5
#define MXSPANAVAILABILITYSTATUS_DEGRADED        6
#define MXSPANAVAILABILITYSTATUS_NOTINSTALLED    7
#define MXSPANAVAILABILITYSTATUS_LOGFULL         8

#define MXSPANCONTROLSTATUS_SUBJECTTOTEST        0
#define MXSPANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define MXSPANCONTROLSTATUS_RESERVEDFORTEST      2
#define MXSPANCONTROLSTATUS_SUSPENDED            3

#define MXSPANSTANDBYSTATUS_HOTSTANDBY           0
#define MXSPANSTANDBYSTATUS_COLDSTANDBY          1
#define MXSPANSTANDBYSTATUS_PROVIDINGSERVICE     2

#define MXSPANUNKNOWNSTATUS_FALSE                0
#define MXSPANUNKNOWNSTATUS_TRUE                 1

#define MXSPANLOOPBACKSTATUS_NEARENDINWARD       0
#define MXSPANLOOPBACKSTATUS_NEARENDLINE         1
#define MXSPANLOOPBACKSTATUS_NEARENDFRAMER       2
#define MXSPANLOOPBACKSTATUS_NEARENDPAYLOAD      3
#define MXSPANLOOPBACKSTATUS_FARENDLINE          4
#define MXSPANLOOPBACKSTATUS_FARENDPAYLOAD       5

#define MXSPANLINESTATUS_NONE                    0
#define MXSPANLINESTATUS_RCVFARENDLOF            1
#define MXSPANLINESTATUS_XMTFARENDLOF            2
#define MXSPANLINESTATUS_RCVAIS                  3
#define MXSPANLINESTATUS_XMTAIS                  4
#define MXSPANLINESTATUS_LOSSOFFRAME             5
#define MXSPANLINESTATUS_LOSSOFSIGNAL            6
#define MXSPANLINESTATUS_LOOPBACKSTATE           7
#define MXSPANLINESTATUS_T16AIS                  8
#define MXSPANLINESTATUS_RCVFARENDLOMF           9
#define MXSPANLINESTATUS_XMTFARENDLOMF           10
#define MXSPANLINESTATUS_RCVTESTCODE             11
#define MXSPANLINESTATUS_OTHERFAILURE            12
#define MXSPANLINESTATUS_UAVAILSIGSTATE          13
#define MXSPANLINESTATUS_NETEQUIPOOS             14
#define MXSPANLINESTATUS_RCVPAYLOADAIS           15
#define MXSPANLINESTATUS_PERFTHRESHOLD           16

#define MXSPANALARMS_YELLOW                      0
#define MXSPANALARMS_RED                         1
#define MXSPANALARMS_BLUE                        2
#define MXSPANALARMS_RECOVERY                    3

#define MXSPANEVENTS_RLOS                        0
#define MXSPANEVENTS_FRCL                        1
#define MXSPANEVENTS_RUAL                        2
#define MXSPANEVENTS_RYEL                        3
#define MXSPANEVENTS_RRA                         4
#define MXSPANEVENTS_RDMA                        5
#define MXSPANEVENTS_V52LNK                      6
#define MXSPANEVENTS_LORC                        7
#define MXSPANEVENTS_LOTC                        8
#define MXSPANEVENTS_LUP                         9
#define MXSPANEVENTS_LDN                         10
#define MXSPANEVENTS_LSPARE                      11
#define MXSPANEVENTS_TOCD                        12
#define MXSPANEVENTS_TCLE                        13

#define MXCHANTYPE_NONE                          0
#define MXCHANTYPE_CAS                           1
#define MXCHANTYPE_CCS                           2

#define MXCHANMODE_REMOTELOOPBACK                0
#define MXCHANMODE_LOCALLOOPBACK                 1
#define MXCHANMODE_TEST                          2

#define MXCHANADMINISTRATIVESTATE_LOCKED         0
#define MXCHANADMINISTRATIVESTATE_UNLOCKED       1
#define MXCHANADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define MXCHANUSAGESTATE_IDLE                    0
#define MXCHANUSAGESTATE_ACTIVE                  1
#define MXCHANUSAGESTATE_BUSY                    2

#define MXCHANAVAILABILITYSTATUS_INTEST          0
#define MXCHANAVAILABILITYSTATUS_FAILED          1
#define MXCHANAVAILABILITYSTATUS_POWEROFF        2
#define MXCHANAVAILABILITYSTATUS_OFFLINE         3
#define MXCHANAVAILABILITYSTATUS_OFFDUTY         4
#define MXCHANAVAILABILITYSTATUS_DEPENDENCY      5
#define MXCHANAVAILABILITYSTATUS_DEGRADED        6
#define MXCHANAVAILABILITYSTATUS_NOTINSTALLED    7
#define MXCHANAVAILABILITYSTATUS_LOGFULL         8

#define MXCHANCONTROLSTATUS_SUBJECTTOTEST        0
#define MXCHANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define MXCHANCONTROLSTATUS_RESERVEDFORTEST      2
#define MXCHANCONTROLSTATUS_SUSPENDED            3

#define MXXCONTYPE_SWITCHED                      1
#define MXXCONTYPE_SEMIPERMANENT                 2
#define MXXCONTYPE_PERMANENT                     3

#define MXBERTMODE_NONE                          0
#define MXBERTMODE_SPAN                          1
#define MXBERTMODE_CHANNEL                       2
#define MXBERTMODE_FBIT                          3

#define MXBERTSELECT_NONE                        0
#define MXBERTSELECT_PRE2E7MINUS1                1
#define MXBERTSELECT_PRE2E9MINUS1                2
#define MXBERTSELECT_PRE2E11MINUS1               3
#define MXBERTSELECT_PRE2E15MINUS1               4
#define MXBERTSELECT_QRSS                        5
#define MXBERTSELECT_DALY                        6
#define MXBERTSELECT_REPEATING                   7
#define MXBERTSELECT_ALTERNATING                 8

#define MXBERTOPERATIONALSTATE_DISABLED          0
#define MXBERTOPERATIONALSTATE_ENABLED           1

#define MXBERTPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXBERTPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXBERTPROCEDURALSTATUS_INITIALIZING      2
#define MXBERTPROCEDURALSTATUS_REPORTING         3
#define MXBERTPROCEDURALSTATUS_TERMINATING       4

#define MXNEARENDINTERVALVALIDDATA_TRUE          1
#define MXNEARENDINTERVALVALIDDATA_FALSE         2

#define MXFARENDINTERVALVALIDDATA_TRUE           1
#define MXFARENDINTERVALVALIDDATA_FALSE          2

/* function prototypes */

void init_mxMIB(void);
void deinit_mxMIB(void);
int term_mxMIB(int majorID, int minorID, void *serverarg, void *clientarg);

FindVarMethod var_mxMIB;
void parse_mxMIB(const char *, char *);
SNMPCallback store_mxMIB;
void refresh_mxMIB(void);

FindVarMethod var_mxSpanTable;
void parse_mxSpanTable(const char *, char *);
SNMPCallback store_mxSpanTable;
void refresh_mxSpanTable(void);

FindVarMethod var_mxChanTable;
void parse_mxChanTable(const char *, char *);
SNMPCallback store_mxChanTable;
void refresh_mxChanTable(void);

FindVarMethod var_mxXconTable;
void parse_mxXconTable(const char *, char *);
SNMPCallback store_mxXconTable;
void refresh_mxXconTable(void);

FindVarMethod var_mxBertTable;
void parse_mxBertTable(const char *, char *);
SNMPCallback store_mxBertTable;
void refresh_mxBertTable(void);

FindVarMethod var_mxNearEndCurrentTable;
void parse_mxNearEndCurrentTable(const char *, char *);
SNMPCallback store_mxNearEndCurrentTable;
void refresh_mxNearEndCurrentTable(void);

FindVarMethod var_mxNearEndIntervalTable;
void parse_mxNearEndIntervalTable(const char *, char *);
SNMPCallback store_mxNearEndIntervalTable;
void refresh_mxNearEndIntervalTable(void);

FindVarMethod var_mxNearEndTotalTable;
void parse_mxNearEndTotalTable(const char *, char *);
SNMPCallback store_mxNearEndTotalTable;
void refresh_mxNearEndTotalTable(void);

FindVarMethod var_mxFarEndCurrentTable;
void parse_mxFarEndCurrentTable(const char *, char *);
SNMPCallback store_mxFarEndCurrentTable;
void refresh_mxFarEndCurrentTable(void);

FindVarMethod var_mxFarEndIntervalTable;
void parse_mxFarEndIntervalTable(const char *, char *);
SNMPCallback store_mxFarEndIntervalTable;
void refresh_mxFarEndIntervalTable(void);

FindVarMethod var_mxFarEndTotalTable;
void parse_mxFarEndTotalTable(const char *, char *);
SNMPCallback store_mxFarEndTotalTable;
void refresh_mxFarEndTotalTable(void);

WriteMethod write_mxSpanDevice;
WriteMethod write_mxSpanEquipmentId;
WriteMethod write_mxSpanType;
WriteMethod write_mxSpanNumber;
WriteMethod write_mxSpanMode;
WriteMethod write_mxSpanCrc;
WriteMethod write_mxSpanClocking;
WriteMethod write_mxSpanPriority;
WriteMethod write_mxSpanCoding;
WriteMethod write_mxSpanFraming;
WriteMethod write_mxSpanLineImpedance;
WriteMethod write_mxSpanLineMode;
WriteMethod write_mxSpanLineLength;
WriteMethod write_mxSpanLineAttenuation;
WriteMethod write_mxSpanLineGain;
WriteMethod write_mxSpanLineDelay;
WriteMethod write_mxSpanTxLevel;
WriteMethod write_mxSpanRxLevel;
WriteMethod write_mxSpanAlarmSettleTime;
WriteMethod write_mxSpanLineCodeTime;
WriteMethod write_mxSpanPrimary;
WriteMethod write_mxSpanDataLink;
WriteMethod write_mxSpanLineCode;
WriteMethod write_mxSpanAlarmSeverityMappingProfile;
WriteMethod write_mxSpanAdministrativeState;
WriteMethod write_mxSpanAlarmStatus;
WriteMethod write_mxSpanControlStatus;
WriteMethod write_mxSpanStandbyStatus;
WriteMethod write_mxSpanReceiveThreshold;
WriteMethod write_mxSpanRowStatus;
WriteMethod write_mxChanType;
WriteMethod write_mxChanRate;
WriteMethod write_mxChanMode;
WriteMethod write_mxChanAdministrativeState;
WriteMethod write_mxChanControlStatus;
WriteMethod write_mxXconSpanIndex;
WriteMethod write_mxXconChanIndex;
WriteMethod write_mxXconType;
WriteMethod write_mxXconStorageType;
WriteMethod write_mxXconRowStatus;
WriteMethod write_mxBertMode;
WriteMethod write_mxBertSelect;
WriteMethod write_mxBertPattern;

#endif				/* __LOCAL_MXMIB_H__ */
