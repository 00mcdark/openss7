/*****************************************************************************

 @(#) $Id: mxMIB.h,v 0.9.2.12 2009-01-14 14:31:21 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2009-01-14 14:31:21 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: mxMIB.h,v $
 Revision 0.9.2.12  2009-01-14 14:31:21  brian
 - working up agents

 Revision 0.9.2.11  2009-01-10 17:46:47  brian
 - updated agents and mibs

 Revision 0.9.2.10  2009-01-04 13:16:11  brian
 - updated agents

 Revision 0.9.2.9  2009-01-03 10:51:11  brian
 - updated agent

 Revision 0.9.2.8  2009-01-02 15:04:18  brian
 - updated agents

 Revision 0.9.2.7  2008-12-31 16:04:51  brian
 - updated mibs

 Revision 0.9.2.6  2008-12-24 13:40:57  brian
 - updated mibs

 Revision 0.9.2.5  2008-07-31 17:40:16  brian
 - SNMP updates

 Revision 0.9.2.4  2008-04-28 23:39:59  brian
 - updated headers for release

 Revision 0.9.2.3  2008/01/14 19:55:03  brian
 - updated stub files

 Revision 0.9.2.2  2008/01/03 12:46:00  brian
 - updates for new mib2c

 Revision 0.9.2.1  2008/01/01 13:59:38  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_MXMIB_H__
#define __LOCAL_MXMIB_H__

#ident "@(#) $RCSfile: mxMIB.h,v $ $Name:  $($Revision: 0.9.2.12 $) Copyright (c) 2008-2009 Monavacon Limited."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct mxMIB_data {
	uint mxMIB_request;
	ulong mxCardNextIndex;		/* ReadOnly */
	long mxDiscontinuityTime;	/* ReadOnly */
};
struct mxSyncTable_data {
	uint mxSyncTable_request;
	uint mxSyncTable_refs;
	ulong mxSyncGroup;		/* NoAccess */
	ulong mxSyncIndex;		/* NoAccess */
	uint8_t *mxSyncSpanId;		/* Create */
	size_t mxSyncSpanIdLen;
	long mxSyncRowStatus;		/* Create */
};
struct mxCardTable_data {
	uint mxCardTable_request;
	uint mxCardTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	oid *mxCardType;		/* ReadOnly */
	size_t mxCardTypeLen;
	long mxCardIdentifier;		/* ReadOnly */
	uint8_t *mxCardRevision;	/* ReadOnly */
	size_t mxCardRevisionLen;
	oid *mxCardChipType;		/* ReadOnly */
	size_t mxCardChipTypeLen;
	uint8_t *mxCardChipRevision;	/* ReadOnly */
	size_t mxCardChipRevisionLen;
	ulong mxCardPciBus;		/* ReadOnly */
	ulong mxCardPciSlot;		/* ReadOnly */
	ulong mxCardPciIrq;		/* ReadOnly */
	long mxCardSpanType;		/* Create */
	uint8_t *mxCardMode;		/* Create */
	size_t mxCardModeLen;
	long mxCardSyncMaster;		/* Create */
	long mxCardSyncSource;		/* Create */
	ulong mxCardSyncGroup;		/* Create */
	long mxCardAdministrativeState;	/* Create */
	long mxCardOperationalState;	/* ReadOnly */
	long mxCardUsageState;		/* ReadOnly */
	uint8_t *mxCardAlarmStatus;	/* Create */
	size_t mxCardAlarmStatusLen;
	uint8_t *mxCardProceduralStatus;	/* ReadOnly */
	size_t mxCardProceduralStatusLen;
	uint8_t *mxCardAvailabilityStatus;	/* ReadOnly */
	size_t mxCardAvailabilityStatusLen;
	uint8_t *mxCardControlStatus;	/* Create */
	size_t mxCardControlStatusLen;
	long mxCardUnknownStatus;	/* ReadOnly */
	long mxCardStandbyStatus;	/* ReadOnly */
	uint8_t *mxCardSyncSpanId;	/* ReadOnly */
	size_t mxCardSyncSpanIdLen;
	long mxCardSyncTransitions;	/* ReadOnly */
	uint8_t *mxCardName;		/* ReadOnly */
	size_t mxCardNameLen;
	long mxCardStatus;		/* ReadOnly */
};
struct mxSpanTable_data {
	uint mxSpanTable_request;
	uint mxSpanTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	uint8_t *mxSpanName;		/* Create */
	size_t mxSpanNameLen;
	oid *mxSpanDevice;		/* Create */
	size_t mxSpanDeviceLen;
	uint8_t *mxSpanEquipmentId;	/* Create */
	size_t mxSpanEquipmentIdLen;
	long mxSpanType;		/* Create */
	ulong mxSpanNumber;		/* Create */
	long mxSpanRate;		/* ReadOnly */
	uint8_t *mxSpanMode;		/* Create */
	size_t mxSpanModeLen;
	long mxSpanCrc;			/* Create */
	long mxSpanClocking;		/* Create */
	ulong mxSpanPriority;		/* Create */
	long mxSpanCoding;		/* Create */
	long mxSpanFraming;		/* Create */
	long mxSpanLineImpedance;	/* Create */
	long mxSpanLineMode;		/* Create */
	long mxSpanLineLength;		/* Create */
	long mxSpanLineAttenuation;	/* Create */
	long mxSpanLineGain;		/* Create */
	ulong mxSpanLineDelay;		/* Create */
	long mxSpanTxLevel;		/* Create */
	long mxSpanRxLevel;		/* Create */
	long mxSpanAlarmSettleTime;	/* Create */
	long mxSpanLineCodeTime;	/* Create */
	ulong mxSpanPrimary;		/* Create */
	uint8_t *mxSpanDataLink;	/* Create */
	size_t mxSpanDataLinkLen;
	long mxSpanLineCode;		/* Create */
	oid *mxSpanAlarmSeverityMappingProfile;	/* Create */
	size_t mxSpanAlarmSeverityMappingProfileLen;
	long mxSpanAdministrativeState;	/* Create */
	long mxSpanOperationalState;	/* ReadOnly */
	long mxSpanUsageState;		/* ReadOnly */
	uint8_t *mxSpanAlarmStatus;	/* Create */
	size_t mxSpanAlarmStatusLen;
	uint8_t *mxSpanProceduralStatus;	/* ReadOnly */
	size_t mxSpanProceduralStatusLen;
	uint8_t *mxSpanAvailabilityStatus;	/* ReadOnly */
	size_t mxSpanAvailabilityStatusLen;
	uint8_t *mxSpanControlStatus;	/* Create */
	size_t mxSpanControlStatusLen;
	long mxSpanStandbyStatus;	/* Create */
	long mxSpanUnknownStatus;	/* ReadOnly */
	oid *mxSpanSap;			/* ReadOnly */
	size_t mxSpanSapLen;
	uint8_t *mxSpanLoopbackStatus;	/* ReadOnly */
	size_t mxSpanLoopbackStatusLen;
	uint8_t *mxSpanLineStatus;	/* ReadOnly */
	size_t mxSpanLineStatusLen;
	uint8_t *mxSpanAlarms;		/* ReadOnly */
	size_t mxSpanAlarmsLen;
	uint8_t *mxSpanEvents;		/* ReadOnly */
	size_t mxSpanEventsLen;
	ulong mxSpanReceiveLevel;	/* ReadOnly */
	ulong mxSpanReceiveThreshold;	/* Create */
	long mxSpanRowStatus;		/* Create */
};
struct mxBertTable_data {
	uint mxBertTable_request;
	uint mxBertTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	long mxBertMode;		/* ReadWrite */
	long mxBertSelect;		/* ReadWrite */
	uint8_t *mxBertPattern;		/* ReadWrite */
	size_t mxBertPatternLen;
	long mxBertOperationalState;	/* ReadOnly */
	uint8_t *mxBertProceduralStatus;	/* ReadOnly */
	size_t mxBertProceduralStatusLen;
	long mxBertBitCount;		/* ReadOnly */
	long mxBertErrorCount;		/* ReadOnly */
};
struct mxChanTable_data {
	uint mxChanTable_request;
	uint mxChanTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	ulong mxChanIndex;		/* NoAccess */
	long mxChanType;		/* ReadWrite */
	long mxChanFormat;		/* ReadWrite */
	long mxChanRate;		/* ReadWrite */
	uint8_t *mxChanMode;		/* ReadWrite */
	size_t mxChanModeLen;
	oid *mxChanSap;			/* ReadOnly */
	size_t mxChanSapLen;
	long mxChanAdministrativeState;	/* ReadWrite */
	long mxChanOperationalState;	/* ReadOnly */
	long mxChanUsageState;		/* ReadOnly */
	uint8_t *mxChanAvailabilityStatus;	/* ReadOnly */
	size_t mxChanAvailabilityStatusLen;
	uint8_t *mxChanControlStatus;	/* ReadWrite */
	size_t mxChanControlStatusLen;
	uint8_t *mxChanProceduralStatus;	/* ReadOnly */
	size_t mxChanProceduralStatusLen;
	uint8_t *mxChanAlarmStatus;	/* ReadWrite */
	size_t mxChanAlarmStatusLen;
	long mxChanStandbyStatus;	/* ReadOnly */
};
struct mxXconTable_data {
	uint mxXconTable_request;
	uint mxXconTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	ulong mxChanIndex;		/* NoAccess */
	ulong mxXconCardIndex;		/* Create */
	ulong mxXconSpanIndex;		/* Create */
	ulong mxXconChanIndex;		/* Create */
	long mxXconType;		/* Create */
	long mxXconStorageType;		/* Create */
	long mxXconRowStatus;		/* Create */
};
struct mxNearEndCurrentTable_data {
	uint mxNearEndCurrentTable_request;
	uint mxNearEndCurrentTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	long mxNearEndCurrentTimeElapsed;	/* ReadOnly */
	long mxNearEndCurrentESs;	/* ReadOnly */
	long mxNearEndCurrentSESs;	/* ReadOnly */
	long mxNearEndCurrentSEFSs;	/* ReadOnly */
	long mxNearEndCurrentUASs;	/* ReadOnly */
	long mxNearEndCurrentCSSs;	/* ReadOnly */
	long mxNearEndCurrentPCVs;	/* ReadOnly */
	long mxNearEndCurrentLESs;	/* ReadOnly */
	long mxNearEndCurrentBESs;	/* ReadOnly */
	long mxNearEndCurrentDMs;	/* ReadOnly */
	long mxNearEndCurrentLCVs;	/* ReadOnly */
};
struct mxNearEndIntervalTable_data {
	uint mxNearEndIntervalTable_request;
	uint mxNearEndIntervalTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	ulong mxNearEndIntervalIndex;	/* NoAccess */
	long mxNearEndIntervalESs;	/* ReadOnly */
	long mxNearEndIntervalSESs;	/* ReadOnly */
	long mxNearEndIntervalSEFSs;	/* ReadOnly */
	long mxNearEndIntervalUASs;	/* ReadOnly */
	long mxNearEndIntervalCSSs;	/* ReadOnly */
	long mxNearEndIntervalPCVs;	/* ReadOnly */
	long mxNearEndIntervalLESs;	/* ReadOnly */
	long mxNearEndIntervalBESs;	/* ReadOnly */
	long mxNearEndIntervalDMs;	/* ReadOnly */
	long mxNearEndIntervalLCVs;	/* ReadOnly */
	long mxNearEndIntervalValidData;	/* ReadOnly */
};
struct mxNearEndTotalTable_data {
	uint mxNearEndTotalTable_request;
	uint mxNearEndTotalTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	long mxNearEndTotalValidIntervals;	/* ReadOnly */
	long mxNearEndTotalInvalidIntervals;	/* ReadOnly */
	long mxNearEndTotalESs;		/* ReadOnly */
	long mxNearEndTotalSESs;	/* ReadOnly */
	long mxNearEndTotalSEFSs;	/* ReadOnly */
	long mxNearEndTotalUASs;	/* ReadOnly */
	long mxNearEndTotalCSSs;	/* ReadOnly */
	long mxNearEndTotalPCVs;	/* ReadOnly */
	long mxNearEndTotalLESs;	/* ReadOnly */
	long mxNearEndTotalBESs;	/* ReadOnly */
	long mxNearEndTotalDMs;		/* ReadOnly */
	long mxNearEndTotalLCVs;	/* ReadOnly */
};
struct mxFarEndCurrentTable_data {
	uint mxFarEndCurrentTable_request;
	uint mxFarEndCurrentTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	long mxFarEndCurrentTimeElapsed;	/* ReadOnly */
	long mxFarEndCurrentESs;	/* ReadOnly */
	long mxFarEndCurrentSESs;	/* ReadOnly */
	long mxFarEndCurrentSEFSs;	/* ReadOnly */
	long mxFarEndCurrentUASs;	/* ReadOnly */
	long mxFarEndCurrentCSSs;	/* ReadOnly */
	long mxFarEndCurrentPCVs;	/* ReadOnly */
	long mxFarEndCurrentLESs;	/* ReadOnly */
	long mxFarEndCurrentBESs;	/* ReadOnly */
	long mxFarEndCurrentDMs;	/* ReadOnly */
};
struct mxFarEndIntervalTable_data {
	uint mxFarEndIntervalTable_request;
	uint mxFarEndIntervalTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	ulong mxFarEndIntervalIndex;	/* NoAccess */
	long mxFarEndIntervalESs;	/* ReadOnly */
	long mxFarEndIntervalSESs;	/* ReadOnly */
	long mxFarEndIntervalSEFSs;	/* ReadOnly */
	long mxFarEndIntervalUASs;	/* ReadOnly */
	long mxFarEndIntervalCSSs;	/* ReadOnly */
	long mxFarEndIntervalPCVs;	/* ReadOnly */
	long mxFarEndIntervalLESs;	/* ReadOnly */
	long mxFarEndIntervalBESs;	/* ReadOnly */
	long mxFarEndIntervalDMs;	/* ReadOnly */
	long mxFarEndIntervalValidData;	/* ReadOnly */
};
struct mxFarEndTotalTable_data {
	uint mxFarEndTotalTable_request;
	uint mxFarEndTotalTable_refs;
	ulong mxCardIndex;		/* NoAccess */
	ulong mxSpanIndex;		/* NoAccess */
	long mxFarEndTotalValidIntervals;	/* ReadOnly */
	long mxFarEndTotalInvalidIntervals;	/* ReadOnly */
	long mxFarEndTotalESs;		/* ReadOnly */
	long mxFarEndTotalSESs;		/* ReadOnly */
	long mxFarEndTotalSEFSs;	/* ReadOnly */
	long mxFarEndTotalUASs;		/* ReadOnly */
	long mxFarEndTotalCSSs;		/* ReadOnly */
	long mxFarEndTotalPCVs;		/* ReadOnly */
	long mxFarEndTotalLESs;		/* ReadOnly */
	long mxFarEndTotalBESs;		/* ReadOnly */
	long mxFarEndTotalDMs;		/* ReadOnly */
};

/* storage declarations */
extern struct mxMIB_data *mxMIBStorage;
extern struct header_complex_index *mxSyncTableStorage;
extern struct header_complex_index *mxCardTableStorage;
extern struct header_complex_index *mxSpanTableStorage;
extern struct header_complex_index *mxBertTableStorage;
extern struct header_complex_index *mxChanTableStorage;
extern struct header_complex_index *mxXconTableStorage;
extern struct header_complex_index *mxNearEndCurrentTableStorage;
extern struct header_complex_index *mxNearEndIntervalTableStorage;
extern struct header_complex_index *mxNearEndTotalTableStorage;
extern struct header_complex_index *mxFarEndCurrentTableStorage;
extern struct header_complex_index *mxFarEndIntervalTableStorage;
extern struct header_complex_index *mxFarEndTotalTableStorage;

/* enum definitions from the covered mib sections */

#define MXCARDSPANTYPE_NONE                      1
#define MXCARDSPANTYPE_T1                        2
#define MXCARDSPANTYPE_E1                        3
#define MXCARDSPANTYPE_J1                        4

#define MXCARDMODE_REMOTELOOPBACK                0
#define MXCARDMODE_LOCALLOOPBACK                 1

#define MXCARDSYNCMASTER_SLAVE                   0
#define MXCARDSYNCMASTER_MASTER                  1

#define MXCARDSYNCSOURCE_SYNCSELF                0
#define MXCARDSYNCSOURCE_SYNC1                   1
#define MXCARDSYNCSOURCE_SYNC2                   2
#define MXCARDSYNCSOURCE_SYNC3                   3
#define MXCARDSYNCSOURCE_SYNC4                   4
#define MXCARDSYNCSOURCE_SYNCEXTERN              5
#define MXCARDSYNCSOURCE_SYNCAUTO                6

#define MXCARDADMINISTRATIVESTATE_LOCKED         0
#define MXCARDADMINISTRATIVESTATE_UNLOCKED       1
#define MXCARDADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define MXCARDOPERATIONALSTATE_DISABLED          0
#define MXCARDOPERATIONALSTATE_ENABLED           1

#define MXCARDUSAGESTATE_IDLE                    0
#define MXCARDUSAGESTATE_ACTIVE                  1
#define MXCARDUSAGESTATE_BUSY                    2

#define MXCARDALARMSTATUS_UNDERREPAIR            0
#define MXCARDALARMSTATUS_CRITICAL               1
#define MXCARDALARMSTATUS_MAJOR                  2
#define MXCARDALARMSTATUS_MINOR                  3
#define MXCARDALARMSTATUS_ALARMOUTSTANDING       4

#define MXCARDPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXCARDPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXCARDPROCEDURALSTATUS_INITIALIZING      2
#define MXCARDPROCEDURALSTATUS_REPORTING         3
#define MXCARDPROCEDURALSTATUS_TERMINATING       4

#define MXCARDAVAILABILITYSTATUS_INTEST          0
#define MXCARDAVAILABILITYSTATUS_FAILED          1
#define MXCARDAVAILABILITYSTATUS_POWEROFF        2
#define MXCARDAVAILABILITYSTATUS_OFFLINE         3
#define MXCARDAVAILABILITYSTATUS_OFFDUTY         4
#define MXCARDAVAILABILITYSTATUS_DEPENDENCY      5
#define MXCARDAVAILABILITYSTATUS_DEGRADED        6
#define MXCARDAVAILABILITYSTATUS_NOTINSTALLED    7
#define MXCARDAVAILABILITYSTATUS_LOGFULL         8

#define MXCARDCONTROLSTATUS_SUBJECTTOTEST        0
#define MXCARDCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define MXCARDCONTROLSTATUS_RESERVEDFORTEST      2
#define MXCARDCONTROLSTATUS_SUSPENDED            3

#define MXCARDUNKNOWNSTATUS_FALSE                0
#define MXCARDUNKNOWNSTATUS_TRUE                 1

#define MXCARDSTANDBYSTATUS_HOTSTANDBY           0
#define MXCARDSTANDBYSTATUS_COLDSTANDBY          1
#define MXCARDSTANDBYSTATUS_PROVIDINGSERVICE     2

#define MXSPANTYPE_NONE                          0
#define MXSPANTYPE_T1                            1
#define MXSPANTYPE_E1                            2
#define MXSPANTYPE_J1                            3
#define MXSPANTYPE_E2                            4
#define MXSPANTYPE_E3                            5
#define MXSPANTYPE_T3                            6

#define MXSPANMODE_LOCAL                         0
#define MXSPANMODE_REMOTE                        1
#define MXSPANMODE_FRAMER                        2
#define MXSPANMODE_PAYLOAD                       3

#define MXSPANCRC_NONE                           0
#define MXSPANCRC_CRC4                           1
#define MXSPANCRC_CRC5                           2
#define MXSPANCRC_CRC6                           3
#define MXSPANCRC_CRC6J                          4

#define MXSPANCLOCKING_NONE                      0
#define MXSPANCLOCKING_LOOP                      1
#define MXSPANCLOCKING_LOCAL                     2
#define MXSPANCLOCKING_INTERNAL                  3
#define MXSPANCLOCKING_EXTERNAL                  4
#define MXSPANCLOCKING_ADAPTIVE                  5

#define MXSPANCODING_NONE                        0
#define MXSPANCODING_AMI                         1
#define MXSPANCODING_B6ZS                        2
#define MXSPANCODING_B8ZS                        3
#define MXSPANCODING_HDB3                        4
#define MXSPANCODING_JBZS                        5
#define MXSPANCODING_ZBTSI                       6

#define MXSPANFRAMING_NONE                       0
#define MXSPANFRAMING_CCS                        1
#define MXSPANFRAMING_CAS                        2
#define MXSPANFRAMING_SF                         3
#define MXSPANFRAMING_D4                         4
#define MXSPANFRAMING_ESF                        5

#define MXSPANLINEIMPEDANCE_NONE                 0
#define MXSPANLINEIMPEDANCE_UNBALANCED75OHM      1
#define MXSPANLINEIMPEDANCE_BALANCED100OHM       2
#define MXSPANLINEIMPEDANCE_BALANCED120OHM       3

#define MXSPANLINEMODE_NONE                      0
#define MXSPANLINEMODE_DSU                       1
#define MXSPANLINEMODE_CSU                       2
#define MXSPANLINEMODE_MONITOR                   3

#define MXSPANLINELENGTH_NONE                    0
#define MXSPANLINELENGTH_DSX133FT                1
#define MXSPANLINELENGTH_DSX266FT                2
#define MXSPANLINELENGTH_DSX399FT                3
#define MXSPANLINELENGTH_DSX533FT                4
#define MXSPANLINELENGTH_DSX666FT                5

#define MXSPANLINEATTENUATION_NONE               0
#define MXSPANLINEATTENUATION_CSU0DB             1
#define MXSPANLINEATTENUATION_CSU8DB             2
#define MXSPANLINEATTENUATION_CSU15DB            3
#define MXSPANLINEATTENUATION_CSU23DB            4

#define MXSPANLINEGAIN_NONE                      0
#define MXSPANLINEGAIN_MON0DB                    1
#define MXSPANLINEGAIN_MON12DB                   2
#define MXSPANLINEGAIN_MON20DB                   3
#define MXSPANLINEGAIN_MON26DB                   4
#define MXSPANLINEGAIN_MON30DB                   5
#define MXSPANLINEGAIN_MON32DB                   6

#define MXSPANTXLEVEL_OPEN                       0
#define MXSPANTXLEVEL_OFF                        1
#define MXSPANTXLEVEL_ON                         2

#define MXSPANRXLEVEL_OPEN                       0
#define MXSPANRXLEVEL_OFF                        1
#define MXSPANRXLEVEL_ON                         2

#define MXSPANDATALINK_ANSIT1403                 0
#define MXSPANDATALINK_ATT54016                  1
#define MXSPANDATALINK_OTHER                     2

#define MXSPANLINECODE_NOCODE                    1
#define MXSPANLINECODE_LINECODE                  2
#define MXSPANLINECODE_PAYLOADCODE               3
#define MXSPANLINECODE_RESETCODE                 4
#define MXSPANLINECODE_TESTCODE                  5
#define MXSPANLINECODE_UNFRAMEDALLONES           6
#define MXSPANLINECODE_UNFRAMEDONEANDZERO        7

#define MXSPANADMINISTRATIVESTATE_LOCKED         0
#define MXSPANADMINISTRATIVESTATE_UNLOCKED       1
#define MXSPANADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define MXSPANOPERATIONALSTATE_DISABLED          0
#define MXSPANOPERATIONALSTATE_ENABLED           1

#define MXSPANUSAGESTATE_IDLE                    0
#define MXSPANUSAGESTATE_ACTIVE                  1
#define MXSPANUSAGESTATE_BUSY                    2

#define MXSPANALARMSTATUS_UNDERREPAIR            0
#define MXSPANALARMSTATUS_CRITICAL               1
#define MXSPANALARMSTATUS_MAJOR                  2
#define MXSPANALARMSTATUS_MINOR                  3
#define MXSPANALARMSTATUS_ALARMOUTSTANDING       4

#define MXSPANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXSPANPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXSPANPROCEDURALSTATUS_INITIALIZING      2
#define MXSPANPROCEDURALSTATUS_REPORTING         3
#define MXSPANPROCEDURALSTATUS_TERMINATING       4

#define MXSPANAVAILABILITYSTATUS_INTEST          0
#define MXSPANAVAILABILITYSTATUS_FAILED          1
#define MXSPANAVAILABILITYSTATUS_POWEROFF        2
#define MXSPANAVAILABILITYSTATUS_OFFLINE         3
#define MXSPANAVAILABILITYSTATUS_OFFDUTY         4
#define MXSPANAVAILABILITYSTATUS_DEPENDENCY      5
#define MXSPANAVAILABILITYSTATUS_DEGRADED        6
#define MXSPANAVAILABILITYSTATUS_NOTINSTALLED    7
#define MXSPANAVAILABILITYSTATUS_LOGFULL         8

#define MXSPANCONTROLSTATUS_SUBJECTTOTEST        0
#define MXSPANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define MXSPANCONTROLSTATUS_RESERVEDFORTEST      2
#define MXSPANCONTROLSTATUS_SUSPENDED            3

#define MXSPANSTANDBYSTATUS_HOTSTANDBY           0
#define MXSPANSTANDBYSTATUS_COLDSTANDBY          1
#define MXSPANSTANDBYSTATUS_PROVIDINGSERVICE     2

#define MXSPANUNKNOWNSTATUS_FALSE                0
#define MXSPANUNKNOWNSTATUS_TRUE                 1

#define MXSPANLOOPBACKSTATUS_NEARENDINWARD       0
#define MXSPANLOOPBACKSTATUS_NEARENDLINE         1
#define MXSPANLOOPBACKSTATUS_NEARENDFRAMER       2
#define MXSPANLOOPBACKSTATUS_NEARENDPAYLOAD      3
#define MXSPANLOOPBACKSTATUS_FARENDLINE          4
#define MXSPANLOOPBACKSTATUS_FARENDPAYLOAD       5

#define MXSPANLINESTATUS_NONE                    0
#define MXSPANLINESTATUS_RCVFARENDLOF            1
#define MXSPANLINESTATUS_XMTFARENDLOF            2
#define MXSPANLINESTATUS_RCVAIS                  3
#define MXSPANLINESTATUS_XMTAIS                  4
#define MXSPANLINESTATUS_LOSSOFFRAME             5
#define MXSPANLINESTATUS_LOSSOFSIGNAL            6
#define MXSPANLINESTATUS_LOOPBACKSTATE           7
#define MXSPANLINESTATUS_T16AIS                  8
#define MXSPANLINESTATUS_RCVFARENDLOMF           9
#define MXSPANLINESTATUS_XMTFARENDLOMF           10
#define MXSPANLINESTATUS_RCVTESTCODE             11
#define MXSPANLINESTATUS_OTHERFAILURE            12
#define MXSPANLINESTATUS_UAVAILSIGSTATE          13
#define MXSPANLINESTATUS_NETEQUIPOOS             14
#define MXSPANLINESTATUS_RCVPAYLOADAIS           15
#define MXSPANLINESTATUS_PERFTHRESHOLD           16

#define MXSPANALARMS_YELLOW                      0
#define MXSPANALARMS_RED                         1
#define MXSPANALARMS_BLUE                        2
#define MXSPANALARMS_RECOVERY                    3

#define MXSPANEVENTS_RLOS                        0
#define MXSPANEVENTS_FRCL                        1
#define MXSPANEVENTS_RUAL                        2
#define MXSPANEVENTS_RYEL                        3
#define MXSPANEVENTS_RRA                         4
#define MXSPANEVENTS_RDMA                        5
#define MXSPANEVENTS_V52LNK                      6
#define MXSPANEVENTS_LORC                        7
#define MXSPANEVENTS_LOTC                        8
#define MXSPANEVENTS_LUP                         9
#define MXSPANEVENTS_LDN                         10
#define MXSPANEVENTS_LSPARE                      11
#define MXSPANEVENTS_TOCD                        12
#define MXSPANEVENTS_TCLE                        13

#define MXBERTMODE_NONE                          0
#define MXBERTMODE_SPAN                          1
#define MXBERTMODE_CHANNEL                       2
#define MXBERTMODE_FBIT                          3

#define MXBERTSELECT_NONE                        0
#define MXBERTSELECT_PRE2E7MINUS1                1
#define MXBERTSELECT_PRE2E9MINUS1                2
#define MXBERTSELECT_PRE2E11MINUS1               3
#define MXBERTSELECT_PRE2E15MINUS1               4
#define MXBERTSELECT_QRSS                        5
#define MXBERTSELECT_DALY                        6
#define MXBERTSELECT_REPEATING                   7
#define MXBERTSELECT_ALTERNATING                 8

#define MXBERTOPERATIONALSTATE_DISABLED          0
#define MXBERTOPERATIONALSTATE_ENABLED           1

#define MXBERTPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXBERTPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXBERTPROCEDURALSTATUS_INITIALIZING      2
#define MXBERTPROCEDURALSTATUS_REPORTING         3
#define MXBERTPROCEDURALSTATUS_TERMINATING       4

#define MXCHANTYPE_NONE                          0
#define MXCHANTYPE_CAS                           1
#define MXCHANTYPE_CCS                           2

#define MXCHANFORMAT_NONE                        1
#define MXCHANFORMAT_DS0A                        2
#define MXCHANFORMAT_DS0                         3
#define MXCHANFORMAT_T1                          4
#define MXCHANFORMAT_J1                          5
#define MXCHANFORMAT_E1                          6

#define MXCHANRATE_VARIABLE                      0
#define MXCHANRATE_KBITS56                       56
#define MXCHANRATE_KBITS64                       64
#define MXCHANRATE_KBITS1536                     1536
#define MXCHANRATE_KBITS1984                     1984

#define MXCHANMODE_REMOTELOOPBACK                0
#define MXCHANMODE_LOCALLOOPBACK                 1
#define MXCHANMODE_TEST                          2
#define MXCHANMODE_LOOPBACKECHO                  3

#define MXCHANADMINISTRATIVESTATE_LOCKED         0
#define MXCHANADMINISTRATIVESTATE_UNLOCKED       1
#define MXCHANADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define MXCHANOPERATIONALSTATE_DISABLED          0
#define MXCHANOPERATIONALSTATE_ENABLED           1

#define MXCHANUSAGESTATE_IDLE                    0
#define MXCHANUSAGESTATE_ACTIVE                  1
#define MXCHANUSAGESTATE_BUSY                    2

#define MXCHANAVAILABILITYSTATUS_INTEST          0
#define MXCHANAVAILABILITYSTATUS_FAILED          1
#define MXCHANAVAILABILITYSTATUS_POWEROFF        2
#define MXCHANAVAILABILITYSTATUS_OFFLINE         3
#define MXCHANAVAILABILITYSTATUS_OFFDUTY         4
#define MXCHANAVAILABILITYSTATUS_DEPENDENCY      5
#define MXCHANAVAILABILITYSTATUS_DEGRADED        6
#define MXCHANAVAILABILITYSTATUS_NOTINSTALLED    7
#define MXCHANAVAILABILITYSTATUS_LOGFULL         8

#define MXCHANCONTROLSTATUS_SUBJECTTOTEST        0
#define MXCHANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define MXCHANCONTROLSTATUS_RESERVEDFORTEST      2
#define MXCHANCONTROLSTATUS_SUSPENDED            3

#define MXCHANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define MXCHANPROCEDURALSTATUS_NOTINITIALIZED    1
#define MXCHANPROCEDURALSTATUS_INITIALIZING      2
#define MXCHANPROCEDURALSTATUS_REPORTING         3
#define MXCHANPROCEDURALSTATUS_TERMINATING       4

#define MXCHANALARMSTATUS_UNDERREPAIR            0
#define MXCHANALARMSTATUS_CRITICAL               1
#define MXCHANALARMSTATUS_MAJOR                  2
#define MXCHANALARMSTATUS_MINOR                  3
#define MXCHANALARMSTATUS_ALARMOUTSTANDING       4

#define MXCHANSTANDBYSTATUS_HOTSTANDBY           0
#define MXCHANSTANDBYSTATUS_COLDSTANDBY          1
#define MXCHANSTANDBYSTATUS_PROVIDINGSERVICE     2

#define MXXCONTYPE_SWITCHED                      1
#define MXXCONTYPE_SEMIPERMANENT                 2
#define MXXCONTYPE_PERMANENT                     3

#define MXNEARENDINTERVALVALIDDATA_TRUE          1
#define MXNEARENDINTERVALVALIDDATA_FALSE         2

#define MXFARENDINTERVALVALIDDATA_TRUE           1
#define MXFARENDINTERVALVALIDDATA_FALSE          2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid mxCardTypePLX9030_oid[12];
extern oid mxCardTypePLXDevelopmentBoard_oid[12];
extern oid mxCardTypeX400P_oid[12];
extern oid mxCardTypeE400P_oid[13];
extern oid mxCardTypeT400P_oid[13];
extern oid mxCardTypeX400P_SS7_oid[12];
extern oid mxCardTypeE400P_SS7_oid[13];
extern oid mxCardTypeT400P_SS7_oid[13];
extern oid mxCardTypeV400P_oid[12];
extern oid mxCardTypeV400PE_oid[13];
extern oid mxCardTypeV400PT_oid[13];
extern oid mxCardTypeV401PE_oid[12];
extern oid mxCardTypeV401PT_oid[12];
extern oid mxChipTypeDS2152_oid[12];
extern oid mxChipTypeDS21352_oid[12];
extern oid mxChipTypeDS21552_oid[12];
extern oid mxChipTypeDS2154_oid[12];
extern oid mxChipTypeDS21354_oid[12];
extern oid mxChipTypeDS21554_oid[12];
extern oid mxChipTypeDS2155_oid[12];
extern oid mxChipTypeDS2156_oid[12];
extern oid mxSyncMandatoryGroup_oid[11];
extern oid mxCardIdGroup_oid[11];
extern oid mxChipGroup_oid[11];
extern oid mxPciGroup_oid[11];
extern oid mxCardGroup_oid[11];
extern oid mxSpanGroup_oid[11];
extern oid mxChanGroup_oid[11];
extern oid mxXconGroup_oid[11];
extern oid mxBertGroup_oid[11];
extern oid mxScalarGroup_oid[11];
extern oid mxNearEndCurrentGroup_oid[11];
extern oid mxNearEndIntervalGroup_oid[11];
extern oid mxNearEndTotalGroup_oid[11];
extern oid mxFarEndCurrentGroup_oid[11];
extern oid mxFarEndIntervalGroup_oid[11];
extern oid mxFarEndTotalGroup_oid[11];
extern oid mxBasicCompliance_oid[11];
extern oid mxEnhancedCompliance_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_mxMIB(void);
void deinit_mxMIB(void);
int term_mxMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_mxMIB;
void parse_mxMIB(const char *, char *);
SNMPCallback store_mxMIB;
void refresh_mxMIB(int);
FindVarMethod var_mxSyncTable;
struct mxSyncTable_data *mxSyncTable_create(void);
struct mxSyncTable_data *mxSyncTable_duplicate(struct mxSyncTable_data *);
int mxSyncTable_destroy(struct mxSyncTable_data **);
int mxSyncTable_add(struct mxSyncTable_data *);
int mxSyncTable_del(struct mxSyncTable_data *);
void parse_mxSyncTable(const char *, char *);
SNMPCallback store_mxSyncTable;
void refresh_mxSyncTable(int);
FindVarMethod var_mxCardTable;
struct mxCardTable_data *mxCardTable_create(void);
struct mxCardTable_data *mxCardTable_duplicate(struct mxCardTable_data *);
int mxCardTable_destroy(struct mxCardTable_data **);
int mxCardTable_add(struct mxCardTable_data *);
int mxCardTable_del(struct mxCardTable_data *);
void parse_mxCardTable(const char *, char *);
SNMPCallback store_mxCardTable;
void refresh_mxCardTable(int);
FindVarMethod var_mxSpanTable;
struct mxSpanTable_data *mxSpanTable_create(void);
struct mxSpanTable_data *mxSpanTable_duplicate(struct mxSpanTable_data *);
int mxSpanTable_destroy(struct mxSpanTable_data **);
int mxSpanTable_add(struct mxSpanTable_data *);
int mxSpanTable_del(struct mxSpanTable_data *);
void parse_mxSpanTable(const char *, char *);
SNMPCallback store_mxSpanTable;
void refresh_mxSpanTable(int);
FindVarMethod var_mxBertTable;
struct mxBertTable_data *mxBertTable_create(void);
struct mxBertTable_data *mxBertTable_duplicate(struct mxBertTable_data *);
int mxBertTable_destroy(struct mxBertTable_data **);
int mxBertTable_add(struct mxBertTable_data *);
int mxBertTable_del(struct mxBertTable_data *);
void parse_mxBertTable(const char *, char *);
SNMPCallback store_mxBertTable;
void refresh_mxBertTable(int);
FindVarMethod var_mxChanTable;
struct mxChanTable_data *mxChanTable_create(void);
struct mxChanTable_data *mxChanTable_duplicate(struct mxChanTable_data *);
int mxChanTable_destroy(struct mxChanTable_data **);
int mxChanTable_add(struct mxChanTable_data *);
int mxChanTable_del(struct mxChanTable_data *);
void parse_mxChanTable(const char *, char *);
SNMPCallback store_mxChanTable;
void refresh_mxChanTable(int);
FindVarMethod var_mxXconTable;
struct mxXconTable_data *mxXconTable_create(void);
struct mxXconTable_data *mxXconTable_duplicate(struct mxXconTable_data *);
int mxXconTable_destroy(struct mxXconTable_data **);
int mxXconTable_add(struct mxXconTable_data *);
int mxXconTable_del(struct mxXconTable_data *);
void parse_mxXconTable(const char *, char *);
SNMPCallback store_mxXconTable;
void refresh_mxXconTable(int);
FindVarMethod var_mxNearEndCurrentTable;
struct mxNearEndCurrentTable_data *mxNearEndCurrentTable_create(void);
struct mxNearEndCurrentTable_data *mxNearEndCurrentTable_duplicate(struct mxNearEndCurrentTable_data *);
int mxNearEndCurrentTable_destroy(struct mxNearEndCurrentTable_data **);
int mxNearEndCurrentTable_add(struct mxNearEndCurrentTable_data *);
int mxNearEndCurrentTable_del(struct mxNearEndCurrentTable_data *);
void parse_mxNearEndCurrentTable(const char *, char *);
SNMPCallback store_mxNearEndCurrentTable;
void refresh_mxNearEndCurrentTable(int);
FindVarMethod var_mxNearEndIntervalTable;
struct mxNearEndIntervalTable_data *mxNearEndIntervalTable_create(void);
struct mxNearEndIntervalTable_data *mxNearEndIntervalTable_duplicate(struct mxNearEndIntervalTable_data *);
int mxNearEndIntervalTable_destroy(struct mxNearEndIntervalTable_data **);
int mxNearEndIntervalTable_add(struct mxNearEndIntervalTable_data *);
int mxNearEndIntervalTable_del(struct mxNearEndIntervalTable_data *);
void parse_mxNearEndIntervalTable(const char *, char *);
SNMPCallback store_mxNearEndIntervalTable;
void refresh_mxNearEndIntervalTable(int);
FindVarMethod var_mxNearEndTotalTable;
struct mxNearEndTotalTable_data *mxNearEndTotalTable_create(void);
struct mxNearEndTotalTable_data *mxNearEndTotalTable_duplicate(struct mxNearEndTotalTable_data *);
int mxNearEndTotalTable_destroy(struct mxNearEndTotalTable_data **);
int mxNearEndTotalTable_add(struct mxNearEndTotalTable_data *);
int mxNearEndTotalTable_del(struct mxNearEndTotalTable_data *);
void parse_mxNearEndTotalTable(const char *, char *);
SNMPCallback store_mxNearEndTotalTable;
void refresh_mxNearEndTotalTable(int);
FindVarMethod var_mxFarEndCurrentTable;
struct mxFarEndCurrentTable_data *mxFarEndCurrentTable_create(void);
struct mxFarEndCurrentTable_data *mxFarEndCurrentTable_duplicate(struct mxFarEndCurrentTable_data *);
int mxFarEndCurrentTable_destroy(struct mxFarEndCurrentTable_data **);
int mxFarEndCurrentTable_add(struct mxFarEndCurrentTable_data *);
int mxFarEndCurrentTable_del(struct mxFarEndCurrentTable_data *);
void parse_mxFarEndCurrentTable(const char *, char *);
SNMPCallback store_mxFarEndCurrentTable;
void refresh_mxFarEndCurrentTable(int);
FindVarMethod var_mxFarEndIntervalTable;
struct mxFarEndIntervalTable_data *mxFarEndIntervalTable_create(void);
struct mxFarEndIntervalTable_data *mxFarEndIntervalTable_duplicate(struct mxFarEndIntervalTable_data *);
int mxFarEndIntervalTable_destroy(struct mxFarEndIntervalTable_data **);
int mxFarEndIntervalTable_add(struct mxFarEndIntervalTable_data *);
int mxFarEndIntervalTable_del(struct mxFarEndIntervalTable_data *);
void parse_mxFarEndIntervalTable(const char *, char *);
SNMPCallback store_mxFarEndIntervalTable;
void refresh_mxFarEndIntervalTable(int);
FindVarMethod var_mxFarEndTotalTable;
struct mxFarEndTotalTable_data *mxFarEndTotalTable_create(void);
struct mxFarEndTotalTable_data *mxFarEndTotalTable_duplicate(struct mxFarEndTotalTable_data *);
int mxFarEndTotalTable_destroy(struct mxFarEndTotalTable_data **);
int mxFarEndTotalTable_add(struct mxFarEndTotalTable_data *);
int mxFarEndTotalTable_del(struct mxFarEndTotalTable_data *);
void parse_mxFarEndTotalTable(const char *, char *);
SNMPCallback store_mxFarEndTotalTable;
void refresh_mxFarEndTotalTable(int);

WriteMethod write_mxSyncSpanId;
WriteMethod write_mxSyncRowStatus;
WriteMethod write_mxCardSpanType;
WriteMethod write_mxCardMode;
WriteMethod write_mxCardSyncMaster;
WriteMethod write_mxCardSyncSource;
WriteMethod write_mxCardSyncGroup;
WriteMethod write_mxCardAdministrativeState;
WriteMethod write_mxCardAlarmStatus;
WriteMethod write_mxCardControlStatus;
WriteMethod write_mxSpanName;
WriteMethod write_mxSpanDevice;
WriteMethod write_mxSpanEquipmentId;
WriteMethod write_mxSpanType;
WriteMethod write_mxSpanNumber;
WriteMethod write_mxSpanMode;
WriteMethod write_mxSpanCrc;
WriteMethod write_mxSpanClocking;
WriteMethod write_mxSpanPriority;
WriteMethod write_mxSpanCoding;
WriteMethod write_mxSpanFraming;
WriteMethod write_mxSpanLineImpedance;
WriteMethod write_mxSpanLineMode;
WriteMethod write_mxSpanLineLength;
WriteMethod write_mxSpanLineAttenuation;
WriteMethod write_mxSpanLineGain;
WriteMethod write_mxSpanLineDelay;
WriteMethod write_mxSpanTxLevel;
WriteMethod write_mxSpanRxLevel;
WriteMethod write_mxSpanAlarmSettleTime;
WriteMethod write_mxSpanLineCodeTime;
WriteMethod write_mxSpanPrimary;
WriteMethod write_mxSpanDataLink;
WriteMethod write_mxSpanLineCode;
WriteMethod write_mxSpanAlarmSeverityMappingProfile;
WriteMethod write_mxSpanAdministrativeState;
WriteMethod write_mxSpanAlarmStatus;
WriteMethod write_mxSpanControlStatus;
WriteMethod write_mxSpanStandbyStatus;
WriteMethod write_mxSpanReceiveThreshold;
WriteMethod write_mxSpanRowStatus;
WriteMethod write_mxBertMode;
WriteMethod write_mxBertSelect;
WriteMethod write_mxBertPattern;
WriteMethod write_mxChanType;
WriteMethod write_mxChanFormat;
WriteMethod write_mxChanRate;
WriteMethod write_mxChanMode;
WriteMethod write_mxChanAdministrativeState;
WriteMethod write_mxChanControlStatus;
WriteMethod write_mxChanAlarmStatus;
WriteMethod write_mxXconCardIndex;
WriteMethod write_mxXconSpanIndex;
WriteMethod write_mxXconChanIndex;
WriteMethod write_mxXconType;
WriteMethod write_mxXconStorageType;
WriteMethod write_mxXconRowStatus;
#endif				/* __LOCAL_MXMIB_H__ */
