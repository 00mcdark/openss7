/*****************************************************************************

 @(#) $RCSfile: ds1EXT.h,v $ $Name:  $($Revision: 0.9.2.6 $) $Date: 2008-12-24 13:40:56 $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software: you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation, version 3 of the license.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-24 13:40:56 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: ds1EXT.h,v $
 Revision 0.9.2.6  2008-12-24 13:40:56  brian
 - updated mibs

 Revision 0.9.2.5  2008-07-31 17:40:16  brian
 - SNMP updates

 Revision 0.9.2.4  2008-04-28 23:39:59  brian
 - updated headers for release

 Revision 0.9.2.3  2008/01/14 19:55:03  brian
 - updated stub files

 Revision 0.9.2.2  2008/01/03 12:46:00  brian
 - updates for new mib2c

 Revision 0.9.2.1  2008/01/01 13:59:37  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_DS1EXT_H__
#define __LOCAL_DS1EXT_H__

#ident "@(#) $RCSfile: ds1EXT.h,v $ $Name:  $($Revision: 0.9.2.6 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct ds1EXT_data {
	uint ds1EXT_request;

};
struct dsx1ConfigTable_data {
	uint dsx1ConfigTable_request;
	int32_t dsx1LineIndex;
	int32_t dsx1IfIndex;
	int32_t dsx1TimeElapsed;
	int32_t dsx1ValidIntervals;
	int32_t dsx1LineType;
	int32_t dsx1LineCoding;
	int32_t dsx1SendCode;
	char *dsx1CircuitIdentifier;
	int dsx1CircuitIdentifierLen;
	int32_t dsx1LoopbackConfig;
	char *dsx1LineStatus;
	int dsx1LineStatusLen;
	int32_t dsx1SignalMode;
	int32_t dsx1TransmitClockSource;
	char *dsx1Fdl;
	int dsx1FdlLen;
	int32_t dsx1InvalidIntervals;
	int32_t dsx1LineLength;
	int32_t dsx1LineStatusLastChange;
	int32_t dsx1LineStatusChangeTrapEnable;
	char *dsx1LoopbackStatus;
	int dsx1LoopbackStatusLen;
	int32_t dsx1Ds1ChannelNumber;
	int32_t dsx1Channelization;
	int32_t dsx1LineMode;
	int32_t dsx1LineBuildOut;
	int32_t dsx1LineImpedance;
};
struct dsx1CurrentTable_data {
	uint dsx1CurrentTable_request;
	int32_t dsx1CurrentIndex;
	int32_t dsx1CurrentESs;
	int32_t dsx1CurrentSESs;
	int32_t dsx1CurrentSEFSs;
	int32_t dsx1CurrentUASs;
	int32_t dsx1CurrentCSSs;
	int32_t dsx1CurrentPCVs;
	int32_t dsx1CurrentLESs;
	int32_t dsx1CurrentBESs;
	int32_t dsx1CurrentDMs;
	int32_t dsx1CurrentLCVs;
};
struct dsx1IntervalTable_data {
	uint dsx1IntervalTable_request;
	int32_t dsx1IntervalIndex;
	int32_t dsx1IntervalNumber;
	int32_t dsx1IntervalESs;
	int32_t dsx1IntervalSESs;
	int32_t dsx1IntervalSEFSs;
	int32_t dsx1IntervalUASs;
	int32_t dsx1IntervalCSSs;
	int32_t dsx1IntervalPCVs;
	int32_t dsx1IntervalLESs;
	int32_t dsx1IntervalBESs;
	int32_t dsx1IntervalDMs;
	int32_t dsx1IntervalLCVs;
	int32_t dsx1IntervalValidData;
};
struct dsx1TotalTable_data {
	uint dsx1TotalTable_request;
	int32_t dsx1TotalIndex;
	int32_t dsx1TotalESs;
	int32_t dsx1TotalSESs;
	int32_t dsx1TotalSEFSs;
	int32_t dsx1TotalUASs;
	int32_t dsx1TotalCSSs;
	int32_t dsx1TotalPCVs;
	int32_t dsx1TotalLESs;
	int32_t dsx1TotalBESs;
	int32_t dsx1TotalDMs;
	int32_t dsx1TotalLCVs;
};
struct dsx1FarEndCurrentTable_data {
	uint dsx1FarEndCurrentTable_request;
	int32_t dsx1FarEndCurrentIndex;
	int32_t dsx1FarEndTimeElapsed;
	int32_t dsx1FarEndValidIntervals;
	int32_t dsx1FarEndCurrentESs;
	int32_t dsx1FarEndCurrentSESs;
	int32_t dsx1FarEndCurrentSEFSs;
	int32_t dsx1FarEndCurrentUASs;
	int32_t dsx1FarEndCurrentCSSs;
	int32_t dsx1FarEndCurrentLESs;
	int32_t dsx1FarEndCurrentPCVs;
	int32_t dsx1FarEndCurrentBESs;
	int32_t dsx1FarEndCurrentDMs;
	int32_t dsx1FarEndInvalidIntervals;
};
struct dsx1FarEndIntervalTable_data {
	uint dsx1FarEndIntervalTable_request;
	int32_t dsx1FarEndIntervalIndex;
	int32_t dsx1FarEndIntervalNumber;
	int32_t dsx1FarEndIntervalESs;
	int32_t dsx1FarEndIntervalSESs;
	int32_t dsx1FarEndIntervalSEFSs;
	int32_t dsx1FarEndIntervalUASs;
	int32_t dsx1FarEndIntervalCSSs;
	int32_t dsx1FarEndIntervalLESs;
	int32_t dsx1FarEndIntervalPCVs;
	int32_t dsx1FarEndIntervalBESs;
	int32_t dsx1FarEndIntervalDMs;
	int32_t dsx1FarEndIntervalValidData;
};
struct dsx1FarEndTotalTable_data {
	uint dsx1FarEndTotalTable_request;
	int32_t dsx1FarEndTotalIndex;
	int32_t dsx1FarEndTotalESs;
	int32_t dsx1FarEndTotalSESs;
	int32_t dsx1FarEndTotalSEFSs;
	int32_t dsx1FarEndTotalUASs;
	int32_t dsx1FarEndTotalCSSs;
	int32_t dsx1FarEndTotalLESs;
	int32_t dsx1FarEndTotalPCVs;
	int32_t dsx1FarEndTotalBESs;
	int32_t dsx1FarEndTotalDMs;
};
struct dsx1FracTable_data {
	uint dsx1FracTable_request;
	int32_t dsx1FracIndex;
	int32_t dsx1FracNumber;
	int32_t dsx1FracIfIndex;
};
struct dsx1ChanMappingTable_data {
	uint dsx1ChanMappingTable_request;
	int32_t ifIndex;
	int32_t dsx1Ds1ChannelNumber;
	int32_t dsx1ChanMappedIfIndex;
};

/* storage declarations */
extern struct ds1EXT_data *ds1EXTStorage;
extern struct header_complex_index *dsx1ConfigTableStorage;
extern struct header_complex_index *dsx1CurrentTableStorage;
extern struct header_complex_index *dsx1IntervalTableStorage;
extern struct header_complex_index *dsx1TotalTableStorage;
extern struct header_complex_index *dsx1FarEndCurrentTableStorage;
extern struct header_complex_index *dsx1FarEndIntervalTableStorage;
extern struct header_complex_index *dsx1FarEndTotalTableStorage;
extern struct header_complex_index *dsx1FracTableStorage;
extern struct header_complex_index *dsx1ChanMappingTableStorage;

/* enum definitions from the covered mib sections */

#define DSX1LINETYPE_OTHER                       1
#define DSX1LINETYPE_DSX1ESF                     2
#define DSX1LINETYPE_DSX1D4                      3
#define DSX1LINETYPE_DSX1E1                      4
#define DSX1LINETYPE_DSX1E1CRC                   5
#define DSX1LINETYPE_DSX1E1MF                    6
#define DSX1LINETYPE_DSX1E1CRCMF                 7
#define DSX1LINETYPE_DSX1UNFRAMED                8
#define DSX1LINETYPE_DSX1E1UNFRAMED              9
#define DSX1LINETYPE_DSX1DS2M12                  10
#define DSX1LINETYPE_DSX1E2                      11
#define DSX1LINETYPE_DSX1E1Q50                   12
#define DSX1LINETYPE_DSX1E1Q50CRC                13
#define DSX1LINETYPE_DSX1J1ESF                   14
#define DSX1LINETYPE_DSX1J1UNFRAMED              16

#define DSX1LINECODING_DSX1JBZS                  1
#define DSX1LINECODING_DSX1B8ZS                  2
#define DSX1LINECODING_DSX1HDB3                  3
#define DSX1LINECODING_DSX1ZBTSI                 4
#define DSX1LINECODING_DSX1AMI                   5
#define DSX1LINECODING_OTHER                     6
#define DSX1LINECODING_DSX1B6ZS                  7

#define DSX1SENDCODE_DSX1SENDNOCODE              1
#define DSX1SENDCODE_DSX1SENDLINECODE            2
#define DSX1SENDCODE_DSX1SENDPAYLOADCODE         3
#define DSX1SENDCODE_DSX1SENDRESETCODE           4
#define DSX1SENDCODE_DSX1SENDQRS                 5
#define DSX1SENDCODE_DSX1SEND511PATTERN          6
#define DSX1SENDCODE_DSX1SEND3IN24PATTERN        7
#define DSX1SENDCODE_DSX1SENDOTHERTESTPATTERN    8

#define DSX1LOOPBACKCONFIG_DSX1NOLOOP            1
#define DSX1LOOPBACKCONFIG_DSX1PAYLOADLOOP       2
#define DSX1LOOPBACKCONFIG_DSX1LINELOOP          3
#define DSX1LOOPBACKCONFIG_DSX1OTHERLOOP         4
#define DSX1LOOPBACKCONFIG_DSX1INWARDLOOP        5
#define DSX1LOOPBACKCONFIG_DSX1DUALLOOP          6

#define DSX1LINESTATUS_DSX1NOALARM               0
#define DSX1LINESTATUS_DSX1RCVFARENDLOF          1
#define DSX1LINESTATUS_DSX1XMTFARENDLOF          2
#define DSX1LINESTATUS_DSX1RCVAIS                3
#define DSX1LINESTATUS_DSX1XMTAIS                4
#define DSX1LINESTATUS_DSX1LOSSOFFRAME           5
#define DSX1LINESTATUS_DSX1LOSSOFSIGNAL          6
#define DSX1LINESTATUS_DSX1LOOPBACKSTATE         7
#define DSX1LINESTATUS_DSX1T16AIS                8
#define DSX1LINESTATUS_DSX1RCVFARENDLOMF         9
#define DSX1LINESTATUS_DSX1XMTFARENDLOMF         10
#define DSX1LINESTATUS_DSX1RCVTESTCODE           11
#define DSX1LINESTATUS_DSX1OTHERFAILURE          12
#define DSX1LINESTATUS_DSX1UNAVAILSIGSTATE       13
#define DSX1LINESTATUS_DSX1NETEQUIPOOS           14
#define DSX1LINESTATUS_DSX1RCVPAYLOADAIS         15
#define DSX1LINESTATUS_DSX1DS2PERFTHRESHOLD      16

#define DSX1SIGNALMODE_NONE                      1
#define DSX1SIGNALMODE_ROBBEDBIT                 2
#define DSX1SIGNALMODE_BITORIENTED               3
#define DSX1SIGNALMODE_MESSAGEORIENTED           4
#define DSX1SIGNALMODE_OTHER                     5

#define DSX1TRANSMITCLOCKSOURCE_LOOPTIMING       1
#define DSX1TRANSMITCLOCKSOURCE_LOCALTIMING      2
#define DSX1TRANSMITCLOCKSOURCE_THROUGHTIMING    3
#define DSX1TRANSMITCLOCKSOURCE_ADAPTIVE         4

#define DSX1FDL_OTHER                            0
#define DSX1FDL_DSX1ANSIT1403                    1
#define DSX1FDL_DSX1ATT54016                     2
#define DSX1FDL_DSX1FDLNONE                      3

#define DSX1LINESTATUSCHANGETRAPENABLE_ENABLED   1
#define DSX1LINESTATUSCHANGETRAPENABLE_DISABLED  2

#define DSX1LOOPBACKSTATUS_DSX1NOLOOPBACK        0
#define DSX1LOOPBACKSTATUS_DSX1NEARENDPAYLOADLOOPBACK 1
#define DSX1LOOPBACKSTATUS_DSX1NEARENDLINELOOPBACK 2
#define DSX1LOOPBACKSTATUS_DSX1NEARENDOTHERLOOPBACK 3
#define DSX1LOOPBACKSTATUS_DSX1NEARENDINWARDLOOPBACK 4
#define DSX1LOOPBACKSTATUS_DSX1FARENDPAYLOADLOOPBACK 5
#define DSX1LOOPBACKSTATUS_DSX1FARENDLINELOOPBACK 6

#define DSX1CHANNELIZATION_DISABLED              1
#define DSX1CHANNELIZATION_ENABLEDDS0            2
#define DSX1CHANNELIZATION_ENABLEDDS1            3

#define DSX1LINEMODE_CSU                         1
#define DSX1LINEMODE_DSU                         2

#define DSX1LINEBUILDOUT_NOTAPPLICABLE           1
#define DSX1LINEBUILDOUT_NEG75DB                 2
#define DSX1LINEBUILDOUT_NEG15DB                 3
#define DSX1LINEBUILDOUT_NEG225DB                4
#define DSX1LINEBUILDOUT_ZERODB                  5

#define DSX1LINEIMPEDANCE_NOTAPPLICABLE          1
#define DSX1LINEIMPEDANCE_UNBALANCED75OHMS       2
#define DSX1LINEIMPEDANCE_BALANCED100OHMS        3
#define DSX1LINEIMPEDANCE_BALANCED120OHMS        4

#define DSX1INTERVALVALIDDATA_TRUE               1
#define DSX1INTERVALVALIDDATA_FALSE              2

#define DSX1FARENDINTERVALVALIDDATA_TRUE         1
#define DSX1FARENDINTERVALVALIDDATA_FALSE        2

/* function prototypes */
void init_ds1EXT(void);
void deinit_ds1EXT(void);
int term_ds1EXT(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ds1EXT;
void parse_ds1EXT(const char *, char *);
SNMPCallback store_ds1EXT;
void refresh_ds1EXT(void);
FindVarMethod var_dsx1ConfigTable;
void parse_dsx1ConfigTable(const char *, char *);
SNMPCallback store_dsx1ConfigTable;
void refresh_dsx1ConfigTable(void);
FindVarMethod var_dsx1CurrentTable;
void parse_dsx1CurrentTable(const char *, char *);
SNMPCallback store_dsx1CurrentTable;
void refresh_dsx1CurrentTable(void);
FindVarMethod var_dsx1IntervalTable;
void parse_dsx1IntervalTable(const char *, char *);
SNMPCallback store_dsx1IntervalTable;
void refresh_dsx1IntervalTable(void);
FindVarMethod var_dsx1TotalTable;
void parse_dsx1TotalTable(const char *, char *);
SNMPCallback store_dsx1TotalTable;
void refresh_dsx1TotalTable(void);
FindVarMethod var_dsx1FarEndCurrentTable;
void parse_dsx1FarEndCurrentTable(const char *, char *);
SNMPCallback store_dsx1FarEndCurrentTable;
void refresh_dsx1FarEndCurrentTable(void);
FindVarMethod var_dsx1FarEndIntervalTable;
void parse_dsx1FarEndIntervalTable(const char *, char *);
SNMPCallback store_dsx1FarEndIntervalTable;
void refresh_dsx1FarEndIntervalTable(void);
FindVarMethod var_dsx1FarEndTotalTable;
void parse_dsx1FarEndTotalTable(const char *, char *);
SNMPCallback store_dsx1FarEndTotalTable;
void refresh_dsx1FarEndTotalTable(void);
FindVarMethod var_dsx1FracTable;
void parse_dsx1FracTable(const char *, char *);
SNMPCallback store_dsx1FracTable;
void refresh_dsx1FracTable(void);
FindVarMethod var_dsx1ChanMappingTable;
void parse_dsx1ChanMappingTable(const char *, char *);
SNMPCallback store_dsx1ChanMappingTable;
void refresh_dsx1ChanMappingTable(void);

WriteMethod write_dsx1LineType;
WriteMethod write_dsx1LineCoding;
WriteMethod write_dsx1SendCode;
WriteMethod write_dsx1CircuitIdentifier;
WriteMethod write_dsx1LoopbackConfig;
WriteMethod write_dsx1SignalMode;
WriteMethod write_dsx1TransmitClockSource;
WriteMethod write_dsx1Fdl;
WriteMethod write_dsx1LineLength;
WriteMethod write_dsx1LineStatusChangeTrapEnable;
WriteMethod write_dsx1Channelization;
WriteMethod write_dsx1LineMode;
WriteMethod write_dsx1LineBuildOut;
WriteMethod write_dsx1LineImpedance;
WriteMethod write_dsx1FracIfIndex;

#endif				/* __LOCAL_DS1EXT_H__ */
