/*****************************************************************************

 @(#) $Id: phyMIB.h,v 0.9.2.1 2008/01/01 13:59:38 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008/01/01 13:59:38 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: phyMIB.h,v $
 Revision 0.9.2.1  2008/01/01 13:59:38  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_PHYMIB_H__
#define __LOCAL_PHYMIB_H__

#ident "@(#) $RCSfile: phyMIB.h,v $ $Name:  $($Revision: 0.9.2.1 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

/* our storage structure(s) */

struct phyMIB_data {
	unsigned int phyMIB_request;

};

struct physicalEntityTable_data {
	unsigned int physicalEntityTable_request;
	char *physicalEntityId;
	size_t physicalEntityIdLen;
	oid *physicalEntityLocalSapNames;
	size_t physicalEntityLocalSapNamesLen;
	long physicalEntityOperationalState;
	oid *physicalEntityTitles;
	size_t physicalEntityTitlesLen;
};

struct physicalSAPTable_data {
	unsigned int physicalSAPTable_request;
	char *physicalSAPsapId;
	size_t physicalSAPsapIdLen;
	u_long physicalSAPsap1Address;
	oid *physicalSAPuserEntityNames;
	size_t physicalSAPuserEntityNamesLen;
	long physicalSAPRowStatus;
};

struct dataCircuitTable_data {
	unsigned int dataCircuitTable_request;
	char *dataCircuitCoProtocolMachineId;
	size_t dataCircuitCoProtocolMachineIdLen;
	long dataCircuitOperationalState;
	struct counter64 dataCircuitBitErrorsReceived;
	struct counter64 dataCircuitBitErrorsTransmitted;
	char *dataCircuitBitErrorsThreshold;
	size_t dataCircuitBitErrorsThresholdLen;
	long dataCircuitType;
	char *dataCircuitPhysicalMediaNames;
	size_t dataCircuitPhysicalMediaNamesLen;
	char *dataCircuitPhysicalInterfaceType;
	size_t dataCircuitPhysicalInterfaceTypeLen;
	char *dataCircuitPhysicalInterfaceStandard;
	size_t dataCircuitPhysicalInterfaceStandardLen;
	long dataCircuitSynchronizationMode;
	char *dataCircuitTransmissionCoding;
	size_t dataCircuitTransmissionCodingLen;
	long dataCircuitTransmissionMode;
	char *dataCircuitTransmissionRate;
	size_t dataCircuitTransmissionRateLen;
	long dataCircuitRowStatus;
};

struct physicalConnectionTable_data {
	unsigned int physicalConnectionTable_request;
	char *physicalConnectionId;
	size_t physicalConnectionIdLen;
	oid *physicalConnectionUnderlyingConnectionNames;
	size_t physicalConnectionUnderlyingConnectionNamesLen;
	oid *physicalConnectionSupportedConnectionNames;
	size_t physicalConnectionSupportedConnectionNamesLen;
	char *physicalConnectionEndpointIdentifier;
	size_t physicalConnectionEndpointIdentifierLen;
	long physicalConnectionPortNumber;
	long physicalConnectionRowStatus;
};

/* enum definitions from the covered mib sections */

#define PHYSICALENTITYOPERATIONALSTATE_DISABLED  0
#define PHYSICALENTITYOPERATIONALSTATE_ENABLED   1

#define DATACIRCUITOPERATIONALSTATE_DISABLED     0
#define DATACIRCUITOPERATIONALSTATE_ENABLED      1

#define DATACIRCUITTYPE_END_SYSTEM               0
#define DATACIRCUITTYPE_RELAY_SYSTEM             1

#define DATACIRCUITSYNCHRONIZATIONMODE_SYNCRHONOUS 0
#define DATACIRCUITSYNCHRONIZATIONMODE_ASYNCRHONOUS 1

#define DATACIRCUITTRANSMISSIONMODE_SIMPLEX      0
#define DATACIRCUITTRANSMISSIONMODE_DUPLEX       1
#define DATACIRCUITTRANSMISSIONMODE_HALF_DUPLEX  2

/* function prototypes */

void init_phyMIB(void);

FindVarMethod var_phyMIB;
void parse_phyMIB(const char *, char *);
SNMPCallback store_phyMIB;

FindVarMethod var_physicalEntityTable;
void parse_physicalEntityTable(const char *, char *);
SNMPCallback store_physicalEntityTable;

FindVarMethod var_physicalSAPTable;
void parse_physicalSAPTable(const char *, char *);
SNMPCallback store_physicalSAPTable;

FindVarMethod var_dataCircuitTable;
void parse_dataCircuitTable(const char *, char *);
SNMPCallback store_dataCircuitTable;

FindVarMethod var_physicalConnectionTable;
void parse_physicalConnectionTable(const char *, char *);
SNMPCallback store_physicalConnectionTable;

WriteMethod write_physicalSAPRowStatus;
WriteMethod write_dataCircuitBitErrorsThreshold;
WriteMethod write_dataCircuitRowStatus;
WriteMethod write_physicalConnectionEndpointIdentifier;
WriteMethod write_physicalConnectionRowStatus;

#endif				/* __LOCAL_PHYMIB_H__ */
