/*****************************************************************************

 @(#) $RCSfile: phyMIB.h,v $ $Name:  $($Revision: 0.9.2.6 $) $Date: 2008-12-24 13:40:57 $

 -----------------------------------------------------------------------------

 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software: you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation, version 3 of the license.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2008-12-24 13:40:57 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: phyMIB.h,v $
 Revision 0.9.2.6  2008-12-24 13:40:57  brian
 - updated mibs

 Revision 0.9.2.5  2008-07-31 17:40:17  brian
 - SNMP updates

 Revision 0.9.2.4  2008-04-28 23:39:59  brian
 - updated headers for release

 Revision 0.9.2.3  2008/01/14 19:55:03  brian
 - updated stub files

 Revision 0.9.2.2  2008/01/03 12:46:00  brian
 - updates for new mib2c

 Revision 0.9.2.1  2008/01/01 13:59:38  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_PHYMIB_H__
#define __LOCAL_PHYMIB_H__

#ident "@(#) $RCSfile: phyMIB.h,v $ $Name:  $($Revision: 0.9.2.6 $) Copyright (c) 2001-2008 OpenSS7 Corporation."

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct phyMIB_data {
	uint phyMIB_request;

};
struct physicalEntityTable_data {
	uint physicalEntityTable_request;
	char *physicalEntityId;
	int physicalEntityIdLen;
	oid *physicalEntityLocalSapNames;
	int physicalEntityLocalSapNamesLen;
	int32_t physicalEntityOperationalState;
	oid *physicalEntityTitles;
	int physicalEntityTitlesLen;
};
struct physicalSAPTable_data {
	uint physicalSAPTable_request;
	char *physicalEntityId;
	int physicalEntityIdLen;
	char *physicalSAPsapId;
	int physicalSAPsapIdLen;
	uint32_t physicalSAPsap1Address;
	oid *physicalSAPuserEntityNames;
	int physicalSAPuserEntityNamesLen;
	int32_t physicalSAPRowStatus;
};
struct dataCircuitTable_data {
	uint dataCircuitTable_request;
	char *physicalEntityId;
	int physicalEntityIdLen;
	char *dataCircuitCoProtocolMachineId;
	int dataCircuitCoProtocolMachineIdLen;
	int32_t dataCircuitOperationalState;
	struct counter64 dataCircuitBitErrorsReceived;
	struct counter64 dataCircuitBitErrorsTransmitted;
	char *dataCircuitBitErrorsThreshold;
	int dataCircuitBitErrorsThresholdLen;
	int32_t dataCircuitType;
	char *dataCircuitPhysicalMediaNames;
	int dataCircuitPhysicalMediaNamesLen;
	char *dataCircuitPhysicalInterfaceType;
	int dataCircuitPhysicalInterfaceTypeLen;
	oid *dataCircuitPhysicalInterfaceStandard;
	int dataCircuitPhysicalInterfaceStandardLen;
	int32_t dataCircuitSynchronizationMode;
	char *dataCircuitTransmissionCoding;
	int dataCircuitTransmissionCodingLen;
	int32_t dataCircuitTransmissionMode;
	char *dataCircuitTransmissionRate;
	int dataCircuitTransmissionRateLen;
	int32_t dataCircuitRowStatus;
};
struct physicalConnectionTable_data {
	uint physicalConnectionTable_request;
	char *physicalEntityId;
	int physicalEntityIdLen;
	char *dataCircuitCoProtocolMachineId;
	int dataCircuitCoProtocolMachineIdLen;
	char *physicalConnectionId;
	int physicalConnectionIdLen;
	oid *physicalConnectionUnderlyingConnectionNames;
	int physicalConnectionUnderlyingConnectionNamesLen;
	oid *physicalConnectionSupportedConnectionNames;
	int physicalConnectionSupportedConnectionNamesLen;
	char *physicalConnectionEndpointIdentifier;
	int physicalConnectionEndpointIdentifierLen;
	int32_t physicalConnectionPortNumber;
	int32_t physicalConnectionRowStatus;
};

/* storage declarations */
extern struct phyMIB_data *phyMIBStorage;
extern struct header_complex_index *physicalEntityTableStorage;
extern struct header_complex_index *physicalSAPTableStorage;
extern struct header_complex_index *dataCircuitTableStorage;
extern struct header_complex_index *physicalConnectionTableStorage;

/* enum definitions from the covered mib sections */

#define PHYSICALENTITYOPERATIONALSTATE_DISABLED  0
#define PHYSICALENTITYOPERATIONALSTATE_ENABLED   1

#define DATACIRCUITOPERATIONALSTATE_DISABLED     0
#define DATACIRCUITOPERATIONALSTATE_ENABLED      1

#define DATACIRCUITTYPE_ENDSYSTEM                0
#define DATACIRCUITTYPE_RELAYSYSTEM              1

#define DATACIRCUITSYNCHRONIZATIONMODE_SYNCRHONOUS 0
#define DATACIRCUITSYNCHRONIZATIONMODE_ASYNCRHONOUS 1

#define DATACIRCUITTRANSMISSIONMODE_SIMPLEX      0
#define DATACIRCUITTRANSMISSIONMODE_DUPLEX       1
#define DATACIRCUITTRANSMISSIONMODE_HALFDUPLEX   2

/* function prototypes */
void init_phyMIB(void);
void deinit_phyMIB(void);
int term_phyMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_phyMIB;
void parse_phyMIB(const char *, char *);
SNMPCallback store_phyMIB;
void refresh_phyMIB(void);
FindVarMethod var_physicalEntityTable;
void parse_physicalEntityTable(const char *, char *);
SNMPCallback store_physicalEntityTable;
void refresh_physicalEntityTable(void);
FindVarMethod var_physicalSAPTable;
void parse_physicalSAPTable(const char *, char *);
SNMPCallback store_physicalSAPTable;
void refresh_physicalSAPTable(void);
FindVarMethod var_dataCircuitTable;
void parse_dataCircuitTable(const char *, char *);
SNMPCallback store_dataCircuitTable;
void refresh_dataCircuitTable(void);
FindVarMethod var_physicalConnectionTable;
void parse_physicalConnectionTable(const char *, char *);
SNMPCallback store_physicalConnectionTable;
void refresh_physicalConnectionTable(void);

WriteMethod write_physicalSAPRowStatus;
WriteMethod write_dataCircuitBitErrorsThreshold;
WriteMethod write_dataCircuitRowStatus;
WriteMethod write_physicalConnectionEndpointIdentifier;
WriteMethod write_physicalConnectionRowStatus;

#endif				/* __LOCAL_PHYMIB_H__ */
