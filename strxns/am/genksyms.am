## =============================================================================
## 
# @(#) $RCSfile: genksyms.am,v $ $Name:  $($Revision: 0.9.2.19 $) $Date: 2005/03/02 17:41:27 $
##
## -----------------------------------------------------------------------------
##
## Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
## Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation; either version 2 of the License, or (at your option) any later
## version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 675 Mass
## Ave, Cambridge, MA 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## -----------------------------------------------------------------------------
##
## Last Modified $Date: 2005/03/02 17:41:27 $ by $Author: brian $
##
## =============================================================================

##
## This automake file fragment includes rules for generating symbol versions.  This is only necessary
## (and permissible) if the kernel supports versioned symbols.
##

if RPM_BUILD_KERNEL

if WITH_KO_MODULES
## WITH_KO_MODULES

if AMDEP
## AMDEP
sinclude ./$(DEPDIR)/modversions.Ph
## AMDEP
endif

if AMDEP
## AMDEP
$(DEPDIR)/modversions.Ph: $(EXPORT_SRCFILES)
	@if test -f $@ ; then \
		$(ECHO) "touch $@" ; \
		touch $@ ; \
	else \
		$(ECHO) "$(ECHO) \" \" > $@" ; \
		$(ECHO) " " > $@ ; \
		list="$(EXPORT_SRCFILES)" ; for s in $$list ; do \
			if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi ; \
			r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
			if test -f $$r.ver ; then \
				$(ECHO) "( $(ECHO) \"sinclude ./$(DEPDIR)/$$r.Pver\" ; $(ECHO) \"\" )	>> $@" ; \
				( $(ECHO) "sinclude ./$(DEPDIR)/$$r.Pver" ; $(ECHO) "" )		>> $@ ; \
				$(ECHO) "( $(ECHO) \"$$r.ver: $$d$$s\" ; $(ECHO) \"\" )			>> $@" ; \
				( $(ECHO) "$$r.ver: $$d$$s" ; $(ECHO) "" )				>> $@ ; \
			fi ; \
		done ; \
	fi
## AMDEP
endif

MY_SUFFIXES		+= .c .ver

.c.ver:
if am__fastdepCC
## am__fastdepCC
	if ( $(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $@ -MD -MP -MF "$(DEPDIR)/$*.TPver" `test -f '$<' || $(ECHO) '$(srcdir)/'`$< | $(KGENKSYMS) > $@ ) \
	then mv -f "$(DEPDIR)/$*.TPver" "$(DEPDIR)/$*.Pver"; else rm -f -- "$(DEPDIR)/$*.TPver"; exit 1; fi
## am__fastdepCC
else
## !am__fastdepCC
if AMDEP
## AMDEP
	source='$<' object='$@' libtool=no depfile='$(DEPDIR)/$*.Pver' tmpdepfile='$(DEPDIR)/$*.TPver' $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
## AMDEP
endif
	$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ `test -f '$<' || $(ECHO) '$(srcdir)/'`$< | $(KGENKSYMS) > $@
## !am__fastdepCC
endif

if KERNEL_VERSIONS
## KERNEL_VERSIONS

if am__fastdepCC
## am_fastdepCC
stamp-verfiles: $(EXPORT_SRCFILES)
	@list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $$r.ver -MD -MP -MF \"$(DEPDIR)/$$r.Pver\" $$d$$s | $(KGENKSYMS) > $$r.ver" ; \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $$r.ver -MD -MP -MF "$(DEPDIR)/$$r.Pver" $$d$$s | $(KGENKSYMS) > $$r.ver ; \
	done ; \
	touch stamp-verfiles
## am_fastdepCC
else
## !am_fastdepCC
if AMDEP
## AMDEP
stamp-verfiles: $(EXPORT_SRCFILES)
	@list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "source=\"$$s\" object=\"$$r.ver\" libtool=no depfile=\"$(DEPDIR)/$$r.Pver\" tmpdepfile=\"$(DEPDIR)/$$r.TPver\" $(CCDEPMODE) $(depcomp)  \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(KGENKSYMS) > $$r.ver" ; \
		source="$$s" object="$$r.ver" libtool=no depfile="$(DEPDIR)/$$r.Pver" tmpdepfile="$(DEPDIR)/$$r.TPver" $(CCDEPMODE) $(depcomp) \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(KGENKSYMS) > $$r.ver ; \
	done ; \
	touch stamp-verfiles
## AMDEP
else
## !AMDEP
stamp-verfiles: $(EXPORT_SRCFILES)
	@list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(KGENKSYMS) > $$r.ver" ; \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(KGENKSYMS) > $$r.ver ; \
	done ; \
	touch stamp-verfiles
## !AMDEP
endif
## !am_fastdepCC
endif

clean-verfiles:
	@vers=`$(ECHO) " $(EXPORT_SRCFILES) " | sed -e 's| *  | |g;s| [^[:space:]]*/| |g;s|\.c |.ver |g'` ; \
	$(ECHO) "rm -f -- stamp-verfiles $$vers" ; \
	rm -f -- stamp-verfiles $$vers

CLEAN_LOCAL		+= clean-verfiles

stamp-verobjs: stamp-verfiles $(KERNEL_OBJECTS)
	@list="$(KERNEL_OBJECTS)" ; for obj in $$list ; do \
		if $(OBJDUMP) -h $$obj | grep -q __ksymtab; then \
			a=`$(ECHO) "$$obj" | sed -e 's|^lib.*_a-|streams-|'` ; \
			v=`$(ECHO) "$$obj" | sed -e 's|^lib.*_a-||;s|\.o$$||'` ; \
			$(ECHO) "$(LD) -r -o a.$$$$.out $$obj -T $$v.ver && mv -f -- a.$$$$.out $$a" ; \
			$(LD) -r -o a.$$$$.out $$obj -T $$v.ver && mv -f -- a.$$$$.out $$a ; \
		else \
			a=`$(ECHO) "$$obj" | sed -e 's|^lib.*_a-|streams-|'` ; \
			v=`$(ECHO) "$$obj" | sed -e 's|^lib.*_a-||;s|\.o$$||'` ; \
			$(ECHO) "$(LD) -r -o a.$$$$.out $$obj && mv -f -- a.$$$$.out $$a" ; \
			$(LD) -r -o a.$$$$.out $$obj && mv -f -- a.$$$$.out $$a ; \
		fi ; \
	done ; \
	touch stamp-verobjs

clean-verobjs:
	@objs=`$(ECHO) " $(KERNEL_OBJECTS) " | sed -e 's| *  | |g;s| lib[^[:space:]]*_a-| streams-|g'` ; \
	$(ECHO) "rm -f -- stamp-verobjs $$objs" ; \
	rm -f -- stamp-verobjs $$objs

CLEAN_LOCAL		+= clean-verobjs


## KERNEL_VERSIONS
endif

## WITH_KO_MODULES
else
## !WITH_KO_MODULES

MODVERSIONS_H = $(PKGINCL)/modversions.h

if AMDEP
## AMDEP
sinclude ./$(DEPDIR)/modversions.Ph
## AMDEP
endif

if AMDEP
## AMDEP
$(MODVERSIONS_H): $(EXPORT_VERFILES)
	@if test -e $(MODVERSIONS_H) ; then \
		$(ECHO) "touch $(MODVERSIONS_H)" ; \
		touch $(MODVERSIONS_H) ; \
	else \
		v=`$(ECHO) "$(MODVERSIONS_H)" | sed -e s'|/[^/]*$$||'`/versions ; \
		$(ECHO) "$(mkdir_p) $$v" ; \
		$(mkdir_p) $$v ; \
		touch $(MODVERSIONS_H) ; \
		$(ECHO) "$(ECHO) \"#ifndef _SYS_MODVERSIONS_H\"		>  $(MODVERSIONS_H)" ; \
		$(ECHO) "#ifndef _SYS_MODVERSIONS_H"			>  $(MODVERSIONS_H) ; \
		$(ECHO) "$(ECHO) \"#define _SYS_MODVERSIONS_H\"		>> $(MODVERSIONS_H)" ; \
		$(ECHO) "#define _SYS_MODVERSIONS_H"			>> $(MODVERSIONS_H) ; \
		$(ECHO) "$(ECHO) \" \"					>  ./$(DEPDIR)/modversions.Ph" ; \
		$(ECHO) " "						>  ./$(DEPDIR)/modversions.Ph ; \
		vers='' ; \
		list='$(EXPORT_SRCFILES)'; \
		for s in $$list ; do \
			if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
			r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
			if test -f $$v/$$r.ver ; then \
				p=`$(ECHO) "$$v" | sed -e 's|^[^/]*/||'` ; \
				$(ECHO) "$(ECHO) \"#include \"$$p/$$r.ver\"\"				>> $(MODVERSIONS_H)" ; \
				$(ECHO) "#include \"$$p/$$r.ver\""					>> $(MODVERSIONS_H) ; \
				$(ECHO) "( $(ECHO) \"sinclude ./$(DEPDIR)/$$r.Pver\" ; $(ECHO) \"\" )	>> ./$(DEPDIR)/modversions.Ph" ; \
				( $(ECHO) "sinclude ./$(DEPDIR)/$$r.Pver" ; $(ECHO) "" )		>> ./$(DEPDIR)/modversions.Ph ; \
				$(ECHO) "( $(ECHO) \"$$v/$$r.ver: $$d$$s\" ; $(ECHO) \"\" )		>> ./$(DEPDIR)/modversions.Ph" ; \
				( $(ECHO) "$$v/$$r.ver: $$d$$s" ; $(ECHO) "" )				>> ./$(DEPDIR)/modversions.Ph ; \
				vers="$${vers}$${vers:+ }$$v/$$r.ver" ; \
			fi ; \
		done ; \
		$(ECHO) "$(ECHO) \"#endif /* _SYS_MODVERSIONS_H */\"		>> $(MODVERSIONS_H)" ; \
		$(ECHO) "#endif /* _SYS_MODVERSIONS_H */"			>> $(MODVERSIONS_H) ; \
		$(ECHO) "( $(ECHO) \"\" ; $(ECHO) \"$(MODVERSIONS_H): $$vers\" )	>> ./$(DEPDIR)/modversions.Ph" ; \
		( $(ECHO) "" ; $(ECHO) "$(MODVERSIONS_H): $$vers" )		>> ./$(DEPDIR)/modversions.Ph ; \
	fi
## AMDEP
else
## !AMDEP
$(MODVERSIONS_H): $(EXPORT_VERFILES)
	@if test -e $(MODVERSIONS_H) ; then \
		$(ECHO) "touch $(MODVERSIONS_H)" ; \
		touch $(MODVERSIONS_H) ; \
	else \
		v=`$(ECHO) "$(MODVERSIONS_H)" | sed -e s'|/[^/]*$$||'`/versions ; \
		$(ECHO) "$(mkdir_p) $$v" ; \
		$(mkdir_p) $$v ; \
		touch $(MODVERSIONS_H) ; \
		$(ECHO) "$(ECHO) \"#ifndef _SYS_MODVERSIONS_H\"		>  $(MODVERSIONS_H)" ; \
		$(ECHO) "#ifndef _SYS_MODVERSIONS_H"			>  $(MODVERSIONS_H) ; \
		$(ECHO) "$(ECHO) \"#define _SYS_MODVERSIONS_H\"		>> $(MODVERSIONS_H)" ; \
		$(ECHO) "#define _SYS_MODVERSIONS_H"			>> $(MODVERSIONS_H) ; \
		vers='' ; \
		list='$(EXPORT_SRCFILES)'; \
		for s in $$list ; do \
			if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
			r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
			if test -f $$v/$$r.ver ; then \
				p=`$(ECHO) "$$v" | sed -e 's|^[^/]*/||'` ; \
				$(ECHO) "$(ECHO) \"#include \"$$p/$$r.ver\"\"	>> $(MODVERSIONS_H)" ; \
				$(ECHO) "#include \"$$p/$$r.ver\""		>> $(MODVERSIONS_H) ; \
				vers="$${vers}$${vers:+ }$$v/$$r.ver" ; \
			fi ; \
		done ; \
		$(ECHO) "$(ECHO) \"#endif /* _SYS_MODVERSIONS_H */\"	>> $(MODVERSIONS_H)" ; \
		$(ECHO) "#endif /* _SYS_MODVERSIONS_H */"		>> $(MODVERSIONS_H) ; \
	fi
## !AMDEP
endif

MY_SUFFIXES		+= .c .ver

.c.ver:
if am__fastdepCC
## am__fastdepCC
	if ( $(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $@ -MD -MP -MF "$(DEPDIR)/$*.TPver" `test -f '$<' || $(ECHO) '$(srcdir)/'`$< | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $@ ) \
	then mv -f "$(DEPDIR)/$*.TPver" "$(DEPDIR)/$*.Pver"; else rm -f -- "$(DEPDIR)/$*.TPver"; exit 1; fi
## am__fastdepCC
else
## !am__fastdepCC
if AMDEP
## AMDEP
	source='$<' object='$@' libtool=no depfile='$(DEPDIR)/$*.Pver' tmpdepfile='$(DEPDIR)/$*.TPver' $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
## AMDEP
endif
	$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ `test -f '$<' || $(ECHO) '$(srcdir)/'`$< | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $@
## !am__fastdepCC
endif

if KERNEL_VERSIONS
## KERNEL_VERSIONS

if am__fastdepCC
## am__fastdepCC
$(EXPORT_VERFILES): $(EXPORT_SRCFILES) $(STRCONF_CONFIG)
	@v=`$(ECHO) "$(MODVERSIONS_H)" | sed -e s'|/[^/]*$$||'`/versions ; \
	$(mkdir_p) $$v ; \
	list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $$v/$$r.ver -MD -MP -MF \"$(DEPDIR)/$$r.Pver\" $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver" ; \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ -MT $$v/$$r.ver -MD -MP -MF "$(DEPDIR)/$$r.Pver" $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver ; \
	done
## am__fastdepCC
else
## !am__fastdepCC
if AMDEP
## AMDEP
$(EXPORT_VERFILES): $(EXPORT_SRCFILES) $(STRCONF_CONFIG)
	@v=`$(ECHO) "$(MODVERSIONS_H)" | sed -e s'|/[^/]*$$||'`/versions ; \
	$(mkdir_p) $$v ; \
	list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "source=\"$$s\" object=\"$$v/$$r.ver\" libtool=no depfile=\"$(DEPDIR)/$$r.Pver\" tmpdepfile=\"$(DEPDIR)/$$r.TPver\" $(CCDEPMODE) $(depcomp)  \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver" ; \
		source="$$s" object="$$v/$$r.ver" libtool=no depfile="$(DEPDIR)/$$r.Pver" tmpdepfile="$(DEPDIR)/$$r.TPver" $(CCDEPMODE) $(depcomp) \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver ; \
	done
## AMDEP
else
## !AMDEP
$(EXPORT_VERFILES): $(EXPORT_SRCFILES) $(STRCONF_CONFIG)
	@v=`$(ECHO) "$(MODVERSIONS_H)" | sed -e s'|/[^/]*$$||'`/versions ; \
	$(mkdir_p) $$v ; \
	list="$(EXPORT_SRCFILES)"; for s in $$list ; do \
		if test -f "$$s" ; then d=; else d="$(srcdir)/"; fi; \
		r=`$(ECHO) "$$s" | sed -e 's|.*/||;s|\.c$$||'` ; \
		$(ECHO) "$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver" ; \
		$(CPP) $(GENKSYMS_CPPFLAGS) -D__GENKSYMS__ $$d$$s | $(GENKSYMS) $(GENKSYMS_SMP_PREFIX) -k $(PACKAGE_KNUMBER) > $$v/$$r.ver ; \
	done
## !AMDEP
endif
## !am__fastdepCC
endif

BUILD_SPECIFIC_FILES = $(AUTOCONFIG_H) $(MODVERSIONS_H) $(EXPORT_VERFILES)

## KERNEL_VERSIONS
else
## !KERNEL_VERSIONS

$(MODVERSIONS_H):
	$(mkdir_p) $(PKGINCL) ; \
	$(ECHO) "#ifndef _SYS_MODVERSIONS_H"	>  $(MODVERSIONS_H) ; \
	$(ECHO) "#define _SYS_MODVERSIONS_H"	>> $(MODVERSIONS_H) ; \
	$(ECHO) "#endif /* _SYS_MODVERSIONS_H */"	>> $(MODVERSIONS_H)

BUILD_SPECIFIC_FILES = $(AUTOCONFIG_H) $(MODVERSIONS_H)

## !KERNEL_VERSIONS
endif

clean-ksyms:

##
# Remove the stamp file autoconf doesn't know about.
##
distclean-ksyms:
	@if test -n "$(AUTOCONFIG_H)" ; then \
		p=`$(ECHO) "$(AUTOCONFIG_H)" | sed -e 's|[^/]*$$||'` ; \
		if test -d "$$p" ; then \
			rm -f -- $(AUTOCONFIG_H) $${p}stamp-h2 ; \
		fi \
	fi
	rm -f -- $(BUILD_SPECIFIC_FILES)

maintainer-clean-ksyms:

install-ksyms: $(BUILD_SPECIFIC_FILES)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	test -z "$(kversion)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)/$(kversion)"
	test -z "$(target_cpu)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)/$(kversion)/$(target_cpu)"
	@pkgstrip=`$(ECHO) "sys/$(PACKAGE_TARNAME)" | sed 's|.|.|g'`; \
	dirstrip=`$(ECHO) "$(PKGINCL)" | sed "s|^$$pkgstrip||"`; \
	incstrip=`$(ECHO) "$$dirstrip" | sed 's|.|.|g'`; \
	list='$(BUILD_SPECIFIC_FILES)'; for p in $$list; do \
		case $$p in \
			$(PKGINCL)/*) f=`$(ECHO) "$$p" | sed "s|^$$incstrip||"`;; \
			*) f=$$p;; \
		esac; \
		$(ECHO) "$(install_sh_DATA) '$$p' '$(DESTDIR)$(pkgincludedir)/$(kversion)/$(target_cpu)/$$f'"; \
		$(install_sh_DATA) "$$p" "$(DESTDIR)$(pkgincludedir)/$(kversion)/$(target_cpu)/$$f"; \
	done

post-ksyms:

uninstall-ksyms:
	@$(NORMAL_UNINSTALL)
	@pkgstrip=`$(ECHO) "sys/$(PACKAGE_TARNAME)" | sed 's|.|.|g'`; \
	dirstrip=`$(ECHO) "$(PKGINCL)" | sed "s|^$$pkgstrip||"`; \
	incstrip=`$(ECHO) "$$dirstrip" | sed 's|.|.|g'`; \
	list='$(BUILD_SPECIFIC_FILES)'; for p in $$list; do \
		case $$p in \
			$(PKGINCL)/*) f=`$(ECHO) "$$p" | sed "s|^$$incstrip||"`;; \
			*) f=$$p;; \
		esac; \
		$(ECHO) "rm -f -- '$(DESTDIR)$(pkgincludedir)/$(kversion)/$(target_cpu)/$$f'"; \
		rm -f -- "$(DESTDIR)$(pkgincludedir)/$(kversion)/$(target_cpu)/$$f"; \
	done

postun-ksyms:

ksyms-all: $(BUILD_SPECIFIC_FILES)

INSTALL_DATA_LOCAL	+= install-ksyms

INSTALL_DATA_HOOK	+= post-ksyms

UNINSTALL_LOCAL		+= uninstall-ksyms

UNINSTALL_HOOK		+= postun-ksyms

ALL_LOCAL		+= ksyms-all

CLEAN_LOCAL		+= clean-ksyms

DISTCLEAN_LOCAL		+= distclean-ksyms

MAINTAINER_CLEAN_LOCAL	+= maintainer-clean-ksyms

## !WITH_KO_MODULES
endif

## RPM_BUILD_KERNEL
endif

.PHONY: all-genksyms ksyms-all install-ksyms post-ksyms uninstall-ksyms postun-ksyms clean-ksyms distclean-ksyms maintainer-clean-ksyms

# vim: ft=automake
