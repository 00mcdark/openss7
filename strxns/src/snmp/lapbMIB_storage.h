#ifndef __LOCAL_LAPBMIB_H__
#define __LOCAL_LAPBMIB_H__
/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct lapbMIB_data {
	uint lapbMIB_request;

	int32_t lapbDiscontinuityTime;
	int32_t sLPConnectionDefaultInterfaceType;
	int32_t sLPConnectionDefaultK;
	int32_t sLPConnectionDefaultN1;
	int32_t sLPConnectionDefaultN2;
	int32_t sLPConnectionDefaultSequenceModulus;
	int32_t sLPConnectionDefaultT1Timer;
	int32_t sLPConnectionDefaultT2Timer;
	int32_t sLPConnectionDefaultT3Timer;
	int32_t sLPConnectionDefaultT4Timer;
};
struct lAPBDLETable_data {
	uint lAPBDLETable_request;
	char *lAPBDLEcommunicationsEntityId;
	int lAPBDLEcommunicationsEntityIdLen;
	oid *lAPBDLElocalSapNames;
	int lAPBDLElocalSapNamesLen;
	int32_t lAPBDLEoperationalState;
	oid *lAPBDLEproviderEntityNames;
	int lAPBDLEproviderEntityNamesLen;
	int32_t lAPBDLEmT1Timer;
	int32_t lAPBDLEmT3Timer;
	int32_t lAPBDLEmW;
	int32_t lAPBDLEmXSend;
	int32_t lAPBDLEmXReceive;
	int32_t lAPBDLEmT2Timer;
	int32_t lAPBDLEreceivedMlpResets;
	int32_t lAPBDLEtimesMT1Expired;
	int32_t lAPBDLEIframesReassignments;
	int32_t lAPBDLEmlpFramesReceived;
	int32_t lAPBDLEmlpFramesSent;
	int32_t lAPBDLEmlpFramesOutsideWindowGuard;
	int32_t lAPBDLEreceivedMlpFramesInGuardRegion;
	int32_t lAPBDLERowStatus;
};
struct dLSAPTable_data {
	uint dLSAPTable_request;
	char *lAPBDLEcommunicationsEntityId;
	int lAPBDLEcommunicationsEntityIdLen;
	char *dLSAPsapId;
	int dLSAPsapIdLen;
	uint32_t dLSAPsap1Address;
	oid *dLSAPuserEntityNames;
	int dLSAPuserEntityNamesLen;
	int32_t dLSAPRowStatus;
};
struct sLPPMTable_data {
	uint sLPPMTable_request;
	char *lAPBDLEcommunicationsEntityId;
	int lAPBDLEcommunicationsEntityIdLen;
	char *sLPPMcoProtocolMachineId;
	int sLPPMcoProtocolMachineIdLen;
	int32_t sLPPMoperationalState;
	int32_t sLPPMadministrativeState;
	int32_t sLPPMRowStatus;
};
struct sLPConnectionTable_data {
	uint sLPConnectionTable_request;
	char *sLPConnectionConnectionId;
	int sLPConnectionConnectionIdLen;
	oid *sLPConnectionUnderlyingConnectionNames;
	int sLPConnectionUnderlyingConnectionNamesLen;
	oid *sLPConnectionSupportedConnectionNames;
	int sLPConnectionSupportedConnectionNamesLen;
	int32_t sLPConnectionInterfaceType;
	int32_t sLPConnectionK;
	int32_t sLPConnectionN1;
	int32_t sLPConnectionN2;
	int32_t sLPConnectionSequenceModulus;
	int32_t sLPConnectionT1Timer;
	int32_t sLPConnectionT2Timer;
	int32_t sLPConnectionFCSErrorsReceived;
	int32_t sLPConnectionFRMRsReceived;
	int32_t sLPConnectionFRMRsSent;
	int32_t sLPConnectionIFrameDataOctetsReceived;
	int32_t sLPConnectionIFrameDataOctetsSent;
	int32_t sLPConnectionIFramesReceived;
	int32_t sLPConnectionIFramesSent;
	int32_t sLPConnectionPollsReceived;
	int32_t sLPConnectionREJsReceived;
	int32_t sLPConnectionREJsSent;
	int32_t sLPConnectionRNRsReceived;
	int32_t sLPConnectionRNRsSent;
	int32_t sLPConnectionSABMsReceived;
	int32_t sLPConnectionSABMsSent;
	int32_t sLPConnectionProtocolState;
	int32_t sLPConnectionTimesT1Expired;
	int32_t sLPConnectionT3Timer;
	int32_t sLPConnectionTimesT3Expired;
	int32_t sLPConnectionT4Timer;
	int32_t sLPConnectionTimesT4Expired;
	int32_t sLPConnectionAbnormalLinkDisconnectsReceived;
	int32_t sLPConnectionAbnormalLinkDisconnectsSent;
	int32_t sLPConnectionLinkResetsReceived;
	int32_t sLPConnectionLinkResetsSent;
	int32_t sLPConnectionTimesN2Reached;
	int32_t sLPConnectionAdministrativeState;
	int32_t sLPConnectionOperationalState;
	int32_t sLPConnectionUsageState;
	char *sLPConnectionProceduralStatus;
	int sLPConnectionProceduralStatusLen;
	char *sLPConnectionAlarmStatus;
	int sLPConnectionAlarmStatusLen;
	int32_t sLPConnectionRowStatus;
};
struct sLPConnectionIVMOTable_data {
	uint sLPConnectionIVMOTable_request;
	char *sLPConnectionConnectionId;
	int sLPConnectionConnectionIdLen;
	char *sLPConnectionIVMOid;
	int sLPConnectionIVMOidLen;
	int32_t sLPConnectionIVMOinterfaceType;
	int32_t sLPConnectionIVMOk;
	int32_t sLPConnectionIVMOn1;
	int32_t sLPConnectionIVMOn2;
	int32_t sLPConnectionIVMOsequenceModulus;
	int32_t sLPConnectionIVMOt1Timer;
	int32_t sLPConnectionIVMOt2Timer;
	int32_t sLPConnectionIVMOt3Timer;
	int32_t sLPConnectionIVMOt4Timer;
	int32_t sLPConnectionIVMORowStatus;
};

/* storage declarations */
extern struct lapbMIB_data *lapbMIBStorage;
extern struct header_complex_index *lAPBDLETableStorage;
extern struct header_complex_index *dLSAPTableStorage;
extern struct header_complex_index *sLPPMTableStorage;
extern struct header_complex_index *sLPConnectionTableStorage;
extern struct header_complex_index *sLPConnectionIVMOTableStorage;

/* enum definitions from the covered mib sections */

#define LAPBDLEOPERATIONALSTATE_DISABLED         0
#define LAPBDLEOPERATIONALSTATE_ENABLED          1

#define SLPPMOPERATIONALSTATE_DISABLED           0
#define SLPPMOPERATIONALSTATE_ENABLED            1

#define SLPPMADMINISTRATIVESTATE_LOCKED          0
#define SLPPMADMINISTRATIVESTATE_UNLOCKED        1
#define SLPPMADMINISTRATIVESTATE_SHUTTINGDOWN    2

#define SLPCONNECTIONINTERFACETYPE_DTE           0
#define SLPCONNECTIONINTERFACETYPE_DCE           1

#define SLPCONNECTIONPROTOCOLSTATE_DISCONNECTEDPHASE 0
#define SLPCONNECTIONPROTOCOLSTATE_LINKDISCONNECTION_PHASE 1
#define SLPCONNECTIONPROTOCOLSTATE_LINK_SET_UP_PHASE 2
#define SLPCONNECTIONPROTOCOLSTATE_INFORMATION_TRANSFER_PHASE 3
#define SLPCONNECTIONPROTOCOLSTATE_FRAME_REJECT_CONDITION 4
#define SLPCONNECTIONPROTOCOLSTATE_BUSY_CONDITION 5
#define SLPCONNECTIONPROTOCOLSTATE_SENT_REJECT_CONDITION 6
#define SLPCONNECTIONPROTOCOLSTATE_SYSTEM_PARAMETERS_AND_ERROR_RECOVERY 7

#define SLPCONNECTIONADMINISTRATIVESTATE_LOCKED  0
#define SLPCONNECTIONADMINISTRATIVESTATE_UNLOCKED 1
#define SLPCONNECTIONADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SLPCONNECTIONOPERATIONALSTATE_DISABLED   0
#define SLPCONNECTIONOPERATIONALSTATE_ENABLED    1

#define SLPCONNECTIONUSAGESTATE_IDLE             0
#define SLPCONNECTIONUSAGESTATE_ACTIVE           1
#define SLPCONNECTIONUSAGESTATE_BUSY             2

#define SLPCONNECTIONPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLPCONNECTIONPROCEDURALSTATUS_NOTINITIALIZED 1
#define SLPCONNECTIONPROCEDURALSTATUS_INITIALIZING 2
#define SLPCONNECTIONPROCEDURALSTATUS_REPORTING  3
#define SLPCONNECTIONPROCEDURALSTATUS_TERMINATING 4

#define SLPCONNECTIONALARMSTATUS_UNDERREPAIR     0
#define SLPCONNECTIONALARMSTATUS_CRITICAL        1
#define SLPCONNECTIONALARMSTATUS_MAJOR           2
#define SLPCONNECTIONALARMSTATUS_MINOR           3
#define SLPCONNECTIONALARMSTATUS_ALARMOUTSTANDING 4

#define SLPCONNECTIONIVMOINTERFACETYPE_DTE       0
#define SLPCONNECTIONIVMOINTERFACETYPE_DCE       1

#define SLPCONNECTIONDEFAULTINTERFACETYPE_DTE    0
#define SLPCONNECTIONDEFAULTINTERFACETYPE_DCE    1

/* function prototypes */
void init_lapbMIB(void);
void deinit_lapbMIB(void);
int term_lapbMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lapbMIB;
void parse_lapbMIB(const char *, char *);
SNMPCallback store_lapbMIB;
void refresh_lapbMIB(void);
FindVarMethod var_lAPBDLETable;
void parse_lAPBDLETable(const char *, char *);
SNMPCallback store_lAPBDLETable;
void refresh_lAPBDLETable(void);
FindVarMethod var_dLSAPTable;
void parse_dLSAPTable(const char *, char *);
SNMPCallback store_dLSAPTable;
void refresh_dLSAPTable(void);
FindVarMethod var_sLPPMTable;
void parse_sLPPMTable(const char *, char *);
SNMPCallback store_sLPPMTable;
void refresh_sLPPMTable(void);
FindVarMethod var_sLPConnectionTable;
void parse_sLPConnectionTable(const char *, char *);
SNMPCallback store_sLPConnectionTable;
void refresh_sLPConnectionTable(void);
FindVarMethod var_sLPConnectionIVMOTable;
void parse_sLPConnectionIVMOTable(const char *, char *);
SNMPCallback store_sLPConnectionIVMOTable;
void refresh_sLPConnectionIVMOTable(void);

WriteMethod write_lAPBDLElocalSapNames;
WriteMethod write_lAPBDLEoperationalState;
WriteMethod write_lAPBDLEproviderEntityNames;
WriteMethod write_lAPBDLEmT1Timer;
WriteMethod write_lAPBDLEmT3Timer;
WriteMethod write_lAPBDLEmW;
WriteMethod write_lAPBDLEmXSend;
WriteMethod write_lAPBDLEmXReceive;
WriteMethod write_lAPBDLEmT2Timer;
WriteMethod write_lAPBDLERowStatus;
WriteMethod write_dLSAPRowStatus;
WriteMethod write_sLPPMadministrativeState;
WriteMethod write_sLPPMRowStatus;
WriteMethod write_sLPConnectionUnderlyingConnectionNames;
WriteMethod write_sLPConnectionSupportedConnectionNames;
WriteMethod write_sLPConnectionInterfaceType;
WriteMethod write_sLPConnectionK;
WriteMethod write_sLPConnectionN1;
WriteMethod write_sLPConnectionN2;
WriteMethod write_sLPConnectionSequenceModulus;
WriteMethod write_sLPConnectionT1Timer;
WriteMethod write_sLPConnectionT2Timer;
WriteMethod write_sLPConnectionT3Timer;
WriteMethod write_sLPConnectionT4Timer;
WriteMethod write_sLPConnectionAdministrativeState;
WriteMethod write_sLPConnectionRowStatus;
WriteMethod write_sLPConnectionIVMOinterfaceType;
WriteMethod write_sLPConnectionIVMOk;
WriteMethod write_sLPConnectionIVMOn1;
WriteMethod write_sLPConnectionIVMOn2;
WriteMethod write_sLPConnectionIVMOsequenceModulus;
WriteMethod write_sLPConnectionIVMOt1Timer;
WriteMethod write_sLPConnectionIVMOt2Timer;
WriteMethod write_sLPConnectionIVMOt3Timer;
WriteMethod write_sLPConnectionIVMOt4Timer;
WriteMethod write_sLPConnectionIVMORowStatus;
WriteMethod write_sLPConnectionDefaultInterfaceType;
WriteMethod write_sLPConnectionDefaultK;
WriteMethod write_sLPConnectionDefaultN1;
WriteMethod write_sLPConnectionDefaultN2;
WriteMethod write_sLPConnectionDefaultSequenceModulus;
WriteMethod write_sLPConnectionDefaultT1Timer;
WriteMethod write_sLPConnectionDefaultT2Timer;
WriteMethod write_sLPConnectionDefaultT3Timer;
WriteMethod write_sLPConnectionDefaultT4Timer;

#endif				/* __LOCAL_LAPBMIB_H__ */
