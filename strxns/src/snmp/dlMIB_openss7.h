#ifndef __LOCAL_DLMIB_H__
#define __LOCAL_DLMIB_H__
/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */
/* our storage structure(s) */
struct dlMIB_data {
	uint dlMIB_request;
	int32_t llcDiscontinuityTime;
	int32_t sLPConnectionDefaultInterfaceType;
	int32_t sLPConnectionDefaultK;
	int32_t sLPConnectionDefaultN1;
	int32_t sLPConnectionDefaultN2;
	int32_t sLPConnectionDefaultSequenceModulus;
	int32_t sLPConnectionDefaultT1Timer;
	int32_t sLPConnectionDefaultT2Timer;
	int32_t sLPConnectionDefaultT3Timer;
	int32_t sLPConnectionDefaultT4Timer;
	int32_t lLCConnection2DefaultMaximumRetransmissions;
	int32_t lLCConnection2DefaultReceivedWindowSize;
	int32_t lLCConnection2DefaultSendWindowSize;
	int32_t lLCConnection2DefaultAcknowledgeTimeoutValue;
	int32_t lLCConnection2DefaultBusyStateTimeoutValue;
	int32_t lLCConnection2DefaultPBitTimeoutValue;
	int32_t lLCConnection2DefaultRejectTimeoutValue;
	uint8_t *lLCConnection2DefaultRoute;
	int lLCConnection2DefaultRouteLen;
	int32_t lLCConnection2DefaultKStep;
	int32_t lLCConnection2DefaultMaxSendWindowSize;
	int32_t lLCConnection2DefaultOptionalTolerationIPDUs;
	int32_t lLCConnectionlessAckDefaultMaximumLLCInformationFieldSize;
	int32_t lLCConnectionlessAckDefaultMaximumRetransmissions;
};
struct communicationsEntityTable_data {
	uint communicationsEntityTable_request;
	uint communicationsEntityTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	oid *communicationsEntityLocalSapNames;
	int communicationsEntityLocalSapNamesLen;
	int32_t communicationsEntityOperationalState;
};
struct sap1Table_data {
	uint sap1Table_request;
	uint sap1Table_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	uint32_t sap1Address;
	oid *sap1UserEntityNames;
	int sap1UserEntityNamesLen;
};
struct sap2Table_data {
	uint sap2Table_request;
	uint sap2Table_refs;
	uint8_t *sapId;
	int sapIdLen;
	uint8_t *sap2Address;
	int sap2AddressLen;
	oid *sap2UserEntityNames;
	int sap2UserEntityNamesLen;
	oid *sap2ProviderEntityNames;
	int sap2ProviderEntityNamesLen;
};
struct clProtocolMachineTable_data {
	uint clProtocolMachineTable_request;
	uint clProtocolMachineTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	int32_t clProtocolMachineOperationalState;
	int32_t clProtocolMachineTotalRemoteSAPs;
};
struct coProtocolMachineTable_data {
	uint coProtocolMachineTable_request;
	uint coProtocolMachineTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t coProtocolMachineOperationalState;
};
struct singlePeerConnectionTable_data {
	uint singlePeerConnectionTable_request;
	uint singlePeerConnectionTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	oid *underlyingConnectionNames;
	int underlyingConnectionNamesLen;
	oid *suppportedConnectionNames;
	int suppportedConnectionNamesLen;
};
struct physicalEntityTable_data {
	uint physicalEntityTable_request;
	uint physicalEntityTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	oid *physicalEntityPhysicalEntityTitles;
	int physicalEntityPhysicalEntityTitlesLen;
};
struct physicalSAPTable_data {
	uint physicalSAPTable_request;
	uint physicalSAPTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	int32_t physicalSAPRowStatus;
};
struct dataCircuitTable_data {
	uint dataCircuitTable_request;
	uint dataCircuitTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t dataCircuitBitErrorsReceived;
	int32_t dataCircuitBitErrorsTransmitted;
	uint8_t *dataCircuitBitErrorsThreshold;
	int dataCircuitBitErrorsThresholdLen;
	int32_t dataCircuitType;
	uint8_t *dataCircuitPhysicalMediaNames;
	int dataCircuitPhysicalMediaNamesLen;
	uint8_t *dataCircuitPhysicalInterfaceType;
	int dataCircuitPhysicalInterfaceTypeLen;
	uint8_t *dataCircuitPhysicalInterfaceStandard;
	int dataCircuitPhysicalInterfaceStandardLen;
	int32_t dataCircuitSynchronizationMode;
	uint8_t *dataCircuitTransmissionCoding;
	int dataCircuitTransmissionCodingLen;
	int32_t dataCircuitTransmissionMode;
	uint8_t *dataCircuitTransmissionRate;
	int dataCircuitTransmissionRateLen;
	int32_t dataCircuitRowStatus;
};
struct physicalConnectionTable_data {
	uint physicalConnectionTable_request;
	uint physicalConnectionTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	uint8_t *physicalConnectionEndpointIdentifier;
	int physicalConnectionEndpointIdentifierLen;
	int32_t physicalConnectionPortNumber;
	int32_t physicalConnectionRowStatus;
};
struct datalinkEntityTable_data {
	uint datalinkEntityTable_request;
	uint datalinkEntityTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	oid *datalinkEntityProviderEntityNames;
	int datalinkEntityProviderEntityNamesLen;
	int32_t datalinkEntityRowStatus;
};
struct dLSAPTable_data {
	uint dLSAPTable_request;
	uint dLSAPTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	int32_t dLSAPRowStatus;
};
struct lAPBDLETable_data {
	uint lAPBDLETable_request;
	uint lAPBDLETable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	int32_t lAPBDLEmT1Timer;
	int32_t lAPBDLEmT3Timer;
	int32_t lAPBDLEmW;
	int32_t lAPBDLEmXSend;
	int32_t lAPBDLEmXReceive;
	int32_t lAPBDLEmT2Timer;
	int32_t lAPBDLEreceivedMlpResets;
	int32_t lAPBDLEtimesMT1Expired;
	int32_t lAPBDLEIframesReassignments;
	int32_t lAPBDLEmlpFramesReceived;
	int32_t lAPBDLEmlpFramesSent;
	int32_t lAPBDLEmlpFramesOutsideWindowGuard;
	int32_t lAPBDLEreceivedMlpFramesInGuardRegion;
	int32_t lAPBDLERowStatus;
};
struct sLPPMTable_data {
	uint sLPPMTable_request;
	uint sLPPMTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t sLPPMadministrativeState;
	int32_t sLPPMRowStatus;
};
struct sLPConnectionTable_data {
	uint sLPConnectionTable_request;
	uint sLPConnectionTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	int32_t sLPConnectionInterfaceType;
	int32_t sLPConnectionK;
	int32_t sLPConnectionN1;
	int32_t sLPConnectionN2;
	int32_t sLPConnectionSequenceModulus;
	int32_t sLPConnectionT1Timer;
	int32_t sLPConnectionT2Timer;
	int32_t sLPConnectionFCSErrorsReceived;
	int32_t sLPConnectionFRMRsReceived;
	int32_t sLPConnectionFRMRsSent;
	int32_t sLPConnectionIFrameDataOctetsReceived;
	int32_t sLPConnectionIFrameDataOctetsSent;
	int32_t sLPConnectionIFramesReceived;
	int32_t sLPConnectionIFramesSent;
	int32_t sLPConnectionPollsReceived;
	int32_t sLPConnectionREJsReceived;
	int32_t sLPConnectionREJsSent;
	int32_t sLPConnectionRNRsReceived;
	int32_t sLPConnectionRNRsSent;
	int32_t sLPConnectionSABMsReceived;
	int32_t sLPConnectionSABMsSent;
	int32_t sLPConnectionProtocolState;
	int32_t sLPConnectionTimesT1Expired;
	int32_t sLPConnectionT3Timer;
	int32_t sLPConnectionTimesT3Expired;
	int32_t sLPConnectionT4Timer;
	int32_t sLPConnectionTimesT4Expired;
	int32_t sLPConnectionAbnormalLinkDisconnectsReceived;
	int32_t sLPConnectionAbnormalLinkDisconnectsSent;
	int32_t sLPConnectionLinkResetsReceived;
	int32_t sLPConnectionLinkResetsSent;
	int32_t sLPConnectionTimesN2Reached;
	int32_t sLPConnectionAdministrativeState;
	int32_t sLPConnectionOperationalState;
	int32_t sLPConnectionUsageState;
	uint8_t *sLPConnectionProceduralStatus;
	int sLPConnectionProceduralStatusLen;
	uint8_t *sLPConnectionAlarmStatus;
	int sLPConnectionAlarmStatusLen;
	int32_t sLPConnectionRowStatus;
};
struct sLPConnectionIVMOTable_data {
	uint sLPConnectionIVMOTable_request;
	uint sLPConnectionIVMOTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	uint8_t *sLPConnectionIVMOid;
	int sLPConnectionIVMOidLen;
	int32_t sLPConnectionIVMOinterfaceType;
	int32_t sLPConnectionIVMOk;
	int32_t sLPConnectionIVMOn1;
	int32_t sLPConnectionIVMOn2;
	int32_t sLPConnectionIVMOsequenceModulus;
	int32_t sLPConnectionIVMOt1Timer;
	int32_t sLPConnectionIVMOt2Timer;
	int32_t sLPConnectionIVMOt3Timer;
	int32_t sLPConnectionIVMOt4Timer;
	int32_t sLPConnectionIVMORowStatus;
};
struct mACDLETable_data {
	uint mACDLETable_request;
	uint mACDLETable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	int32_t mACDLERowStatus;
};
struct mACTable_data {
	uint mACTable_request;
	uint mACTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	int32_t mACOperationalState;
	uint8_t *mACId;
	int mACIdLen;
	int32_t mACRowStatus;
};
struct lLCDLETable_data {
	uint lLCDLETable_request;
	uint lLCDLETable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	int32_t lLCDLERowStatus;
};
struct lLCCLPMTable_data {
	uint lLCCLPMTable_request;
	uint lLCCLPMTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	int32_t lLCCLPMRowStatus;
};
struct lLCCOPMTable_data {
	uint lLCCOPMTable_request;
	uint lLCCOPMTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t lLCCOPMRowStatus;
};
struct resourceTypeIdTable_data {
	uint resourceTypeIdTable_request;
	uint resourceTypeIdTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *resourceTypeIdName;
	int resourceTypeIdNameLen;
	uint8_t *resourceInfoManufacturerOUI;
	int resourceInfoManufacturerOUILen;
	uint8_t *resourceInfoManufacturerName;
	int resourceInfoManufacturerNameLen;
	uint8_t *resourceInfoManufacturerProductName;
	int resourceInfoManufacturerProductNameLen;
	uint8_t *resourceInfoManufacturerProductVersion;
	int resourceInfoManufacturerProductVersionLen;
};
struct lLCStationTable_data {
	uint lLCStationTable_request;
	uint lLCStationTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	uint8_t *lLCStationLLCName;
	int lLCStationLLCNameLen;
	int32_t lLCStationMaximumLSAPsConfigured;
	int32_t lLCStationNumberOfActiveLSAPs;
	uint8_t *lLCStationSupportedServicesTypes;
	int lLCStationSupportedServicesTypesLen;
	int32_t lLCStationStatus;
	int32_t lLCStationType1AcknowledgeTimeoutValue;
	int32_t lLCStationType1MaximumRetryCount;
	int32_t lLCStationMaximumPDUN3;
	int32_t lLCStationMaximumRetransmissions4;
	int32_t lLCStationReceiveVariableLifetime;
	int32_t lLCStationTransmitVariableLifetime;
	int32_t lLCStationType3AcknowledgeTimeoutValue;
	int32_t lLCStationType3Retransmissions;
	int32_t lLCStationAvgBufferUseSize;
	int32_t lLCStationBufferProblems;
	int32_t lLCStationBufferSize;
	int32_t lLCStationMaxBufferUseSize;
	int32_t lLCStationInactiveLSAP;
	int32_t lLCStationPDUsDiscard;
	uint8_t *lLCStationSTRIndicator;
	int lLCStationSTRIndicatorLen;
	int32_t lLCStationVersionNumber;
	int32_t lLCStationType1AcknowledgmentTimerTimeouts;
};
struct lLCSAPTable_data {
	uint lLCSAPTable_request;
	uint lLCSAPTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	uint8_t *lLCSAPName;
	int lLCSAPNameLen;
	uint8_t *lLCSAPAddress;
	int lLCSAPAddressLen;
	int32_t lLCSAPRDE;
};
struct rDESetupTable_data {
	uint rDESetupTable_request;
	uint rDESetupTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	int32_t rDESetupAgingEnabled;
	int32_t rDESetupAgingValue;
	int32_t rDESetupEnableType2Reset;
	int32_t rDESetupMaximumRouteDescriptors;
	int32_t rDESetupMaximumResponseTime;
	int32_t rDESetupMinimumPDUSize;
	int32_t rDESetupRDEHold;
	int32_t rDESetupRDEReplace;
	int32_t rDESetupName;
	int32_t rDESetupResetOnTestEnabled;
};
struct rDEPairTable_data {
	uint rDEPairTable_request;
	uint rDEPairTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *sapId;
	int sapIdLen;
	uint8_t *rDEPairName;
	int rDEPairNameLen;
	int32_t rDEPairDiscardCounter;
	int32_t rDEPairNSRPDUCounter;
	int32_t rDEPairNSRSelectedCounter;
	uint8_t *rDEPairRIF;
	int rDEPairRIFLen;
	int32_t rDEPairSRFPDUCounter;
	int32_t rDEPairQueryCounter;
};
struct lLCConnectionLessTable_data {
	uint lLCConnectionLessTable_request;
	uint lLCConnectionLessTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *lLCConnectionlessName;
	int lLCConnectionlessNameLen;
	int32_t lLCConnectionlessMaximumLLCInformationFieldSize;
	int32_t lLCConnectionlessTESTReceivedABBResponse;
	int32_t lLCConnectionlessTESTReceivedCommand;
	int32_t lLCConnectionlessTESTReceivedResponse;
	int32_t lLCConnectionlessTESTSentABBResponse;
	int32_t lLCConnectionlessTESTSentCommand;
	int32_t lLCConnectionlessTESTSentResponse;
	int32_t lLCConnectionlessUIReceived;
	int32_t lLCConnectionlessUISent;
	int32_t lLCConnectionlessXIDReceivedCommand;
	int32_t lLCConnectionlessXIDReceivedResponse;
	int32_t lLCConnectionlessXIDSentCommand;
	int32_t lLCConnectionlessXIDSentResponse;
};
struct lLCConnection2Table_data {
	uint lLCConnection2Table_request;
	uint lLCConnection2Table_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *lLCConnection2Name;
	int lLCConnection2NameLen;
	int32_t lLCConnection2MaximumRetransmissions;
	int32_t lLCConnection2ReceivedWindowSize;
	int32_t lLCConnection2SendWindowSize;
	int32_t lLCConnection2AcknowledgeTimeoutValue;
	int32_t lLCConnection2BusyStateTimeoutValue;
	int32_t lLCConnection2PBitTimeoutValue;
	int32_t lLCConnection2RejectTimeoutValue;
	int32_t lLCConnection2LocalBusy;
	int32_t lLCConnection2RemoteBusy;
	int32_t lLCConnection2RemoteReset;
	int32_t lLCConnection2LocalReset;
	int32_t lLCConnection2ProviderReset;
	uint8_t *lLCConnection2Route;
	int lLCConnection2RouteLen;
	int32_t lLCConnection2KStep;
	int32_t lLCConnection2MaxSendWindowSize;
	int32_t lLCConnection2ReceivedI;
	int32_t lLCConnection2SentI;
	int32_t lLCConnection2SentAcks;
	int32_t lLCConnection2ReceivedAcks;
	int32_t lLCConnection2ReceivedFRMR;
	int32_t lLCConnection2SentFRMR;
	int32_t lLCConnection2ReceivedRR;
	int32_t lLCConnection2SentRR;
	int32_t lLCConnection2ReceivedRNR;
	int32_t lLCConnection2SentRNR;
	int32_t lLCConnection2ReceivedREJ;
	int32_t lLCConnection2SentREJ;
	int32_t lLCConnection2ReceivedSABME;
	int32_t lLCConnection2SentSABME;
	int32_t lLCConnection2ReceivedUA;
	int32_t lLCConnection2SentUA;
	int32_t lLCConnection2ReceivedDISC;
	int32_t lLCConnection2SentDISC;
	int32_t lLCConnection2ReceivedDM;
	int32_t lLCConnection2SentDM;
	int32_t lLCConnection2PDUsDiscarded1;
	int32_t lLCConnection2PDUsDiscarded2;
	int32_t lLCConnection2PDURetransmissions;
	int32_t lLCConnection2OptionalTolerationIPDUs;
	int32_t lLCConnection2DuplicateIPDUsReceived;
	int32_t lLCConnection2Violation;
	int32_t lLCConnection2ProtocolState;
	int32_t lLCConnection2AdministrativeState;
	int32_t lLCConnection2OperationalState;
	int32_t lLCConnection2UsageState;
	uint8_t *lLCConnection2ProceduralStatus;
	int lLCConnection2ProceduralStatusLen;
	uint8_t *lLCConnection2AlarmStatus;
	int lLCConnection2AlarmStatusLen;
};
struct lLCConnection2IVMOTable_data {
	uint lLCConnection2IVMOTable_request;
	uint lLCConnection2IVMOTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	uint8_t *lLCConnection2IVMOName;
	int lLCConnection2IVMONameLen;
	uint32_t lLCConnection2IVMOMaximumRetransmissions;
	uint32_t lLCConnection2IVMOReceivedWindowSize;
	uint32_t lLCConnection2IVMOSendWindowSize;
	int32_t lLCConnection2IVMOAcknowledgeTimeoutValue;
	int32_t lLCConnection2IVMOBusyStateTimeoutValue;
	int32_t lLCConnection2IVMOBitTimeoutValue;
	int32_t lLCConnection2IVMORejectTimeoutValue;
	uint32_t lLCConnection2IVMORoute;
	uint32_t lLCConnection2IVMOKStep;
	uint32_t lLCConnection2IVMOMaxSendWindowSize;
	int32_t lLCConnection2IVMOOptionalTolerationIPDUs;
};
struct lLCConnectionlessAckTable_data {
	uint lLCConnectionlessAckTable_request;
	uint lLCConnectionlessAckTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *lLCConnectionlessAckName;
	int lLCConnectionlessAckNameLen;
	int32_t lLCConnectionlessAckMaximumLLCInformationFieldSize;
	int32_t lLCConnectionlessAckMaximumRetransmissions;
	int32_t lLCConnectionlessAckTESTReceivedABBResponse;
	int32_t lLCConnectionlessAckTESTReceivedCommand;
	int32_t lLCConnectionlessAckTESTReceivedResponse;
	int32_t lLCConnectionlessAckTESTSentABBResponse;
	int32_t lLCConnectionlessAckTESTSentCommand;
	int32_t lLCConnectionlessAckTESTSentResponse;
	int32_t lLCConnectionlessAckReceiveResources;
	int32_t lLCConnectionlessAckUIReceived;
	int32_t lLCConnectionlessAckUISent;
	int32_t lLCConnectionlessAckXIDReceivedCommand;
	int32_t lLCConnectionlessAckXIDReceivedResponse;
	int32_t lLCConnectionlessAckXIDSentCommand;
	int32_t lLCConnectionlessAckXIDSentResponse;
	int32_t lLCConnectionlessAckRetransmissions;
	int32_t lLCConnectionlessAckNoResponse;
	int32_t lLCConnectionlessAckCommandIP;
	int32_t lLCConnectionlessAckCommandIT;
	int32_t lLCConnectionlessAckCommandOK;
	int32_t lLCConnectionlessAckCommandPE;
	int32_t lLCConnectionlessAckCommandRS;
	int32_t lLCConnectionlessAckCommandUE;
	int32_t lLCConnectionlessAckCommandUN;
	int32_t lLCConnectionlessAckReceivedACCommand;
	int32_t lLCConnectionlessAckSentACCommand;
	int32_t lLCConnectionlessAckResponseIP;
	int32_t lLCConnectionlessAckResponseIT;
	int32_t lLCConnectionlessAckResponseNE;
	int32_t lLCConnectionlessAckResponseNR;
	int32_t lLCConnectionlessAckResponseOK;
	int32_t lLCConnectionlessAckResponseRS;
	int32_t lLCConnectionlessAckResponseUE;
	int32_t lLCConnectionlessAckResponseUN;
	int32_t lLCConnectionlessAckViolation;
};
struct lLCConnectionlessAckIVMOTable_data {
	uint lLCConnectionlessAckIVMOTable_request;
	uint lLCConnectionlessAckIVMOTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *lLCConnectionlessAckIVMOName;
	int lLCConnectionlessAckIVMONameLen;
	int32_t lLCConnectionlessAckIVMOMaximumLLCInformationFieldSize;
	int32_t lLCConnectionlessAckIVMOMaximumRetransmissions;
	int32_t lLCConnectionlessAckIVMORowStatus;
};
struct networkEntityTable_data {
	uint networkEntityTable_request;
	uint networkEntityTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *networkEntityTitles;
	int networkEntityTitlesLen;
	uint8_t *networkEntitySystemTypes;
	int networkEntitySystemTypesLen;
	int32_t networkEntityRowStatus;
};
struct nSAPTable_data {
	uint nSAPTable_request;
	uint nSAPTable_refs;
	uint8_t *sapId;
	int sapIdLen;
	int32_t nSAPRowStatus;
};
struct cLNSTable_data {
	uint cLNSTable_request;
	uint cLNSTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	int32_t cLNSAdministrativeState;
	uint8_t *cLNSSupportedProtocols;
	int cLNSSupportedProtocolsLen;
	uint8_t *cLNSOperationalSystemType;
	int cLNSOperationalSystemTypeLen;
	int32_t cLNSOctetsSentCounter;
	int32_t cLNSOctetsReceivedCounter;
	int32_t cLNSSegmentsReceived;
	int32_t cLNSSegmentsDiscarded;
	int32_t cLNSAssemblingSegmentsDiscarded;
	int32_t cLNSErrorReportsReceived;
	int32_t cLNSpDUDiscards;
	int32_t cLNSCongestionDiscards;
	int32_t cLNSMaximumLifetime;
	int32_t cLNSEnableChecksum;
	int32_t cLNSRowStatus;
};
struct cLNSISISTable_data {
	uint cLNSISISTable_request;
	uint cLNSISISTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *cLNSISISversion;
	int cLNSISISversionLen;
	int32_t cLNSISISiSType;
	uint8_t *cLNSISISsystemId;
	int cLNSISISsystemIdLen;
	int32_t cLNSISISmaximumPathSplits;
	int32_t cLNSISISminimumLSPTransmissionInterval;
	int32_t cLNSISISmaximumLSPGenerationInterval;
	int32_t cLNSISISminimumBroadcastLSPTransmissionInterval;
	int32_t cLNSISIScompleteSNPInterval;
	int32_t cLNSISISoriginatingL1LSPBufferSize;
	uint8_t *cLNSISISmanualAreaAddresses;
	int cLNSISISmanualAreaAddressesLen;
	int32_t cLNSISISmaximumAreaAddresses;
	int32_t cLNSISISminimumLSPGenerationInterval;
	int32_t cLNSISISpollESHelloRate;
	int32_t cLNSISISpartialSNPInterval;
	int32_t cLNSISISwaitingTime;
	int32_t cLNSISISdRISISHelloTimer;
	int32_t cLNSISISl1State;
	uint8_t *cLNSISISareaAddresses;
	int cLNSISISareaAddressesLen;
	int32_t cLNSISIScorruptedLSPsDetected;
	int32_t cLNSISISlSPL1DatabaseOverloads;
	int32_t cLNSISISmanualAddressesDroppedFromAreas;
	int32_t cLNSISISattemptsToExceedMaximumSequenceNumber;
	int32_t cLNSISISsequenceNumberSkips;
	int32_t cLNSISISownLSPPurges;
	int32_t cLNSISISiDFieldLengthMismatches;
	int32_t cLNSISISmaximumAreaAddressesMismatches;
	int32_t cLNSISISoriginatingLSPBufferSizeMismatches;
	int32_t cLNSISISlSPTooLargeToPropagate;
	uint8_t *cLNSISISareaTransmitPassword;
	int cLNSISISareaTransmitPasswordLen;
	uint8_t *cLNSISISareaReceivePasswords;
	int cLNSISISareaReceivePasswordsLen;
	int32_t cLNSISISauthenticationFailures;
	int32_t cLNSISISRowStatus;
};
struct cLNSISISLevel2Table_data {
	uint cLNSISISLevel2Table_request;
	uint cLNSISISLevel2Table_refs;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t cLNSISISLevel2maximumVirtualAdjacencies;
	uint8_t *cLNSISISLevel2partitionAreaAddresses;
	int cLNSISISLevel2partitionAreaAddressesLen;
	uint8_t *cLNSISISLevel2partitionDesignatedL2IntermediateSystem;
	int cLNSISISLevel2partitionDesignatedL2IntermediateSystemLen;
	int32_t cLNSISISLevel2partitionVirtualLinkChanges;
	int32_t cLNSISISLevel2originatingL2LSPBufferSize;
	int32_t cLNSISISLevel2l2State;
	int32_t cLNSISISLevel2lSPL2DatabaseOverloads;
	uint8_t *cLNSISISLevel2domainTransmitPassword;
	int cLNSISISLevel2domainTransmitPasswordLen;
	uint8_t *cLNSISISLevel2domainReceivePasswords;
	int cLNSISISLevel2domainReceivePasswordsLen;
	int32_t cLNSISISLevel2RowStatus;
};
struct linkageTable_data {
	uint linkageTable_request;
	uint linkageTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *protocolMachineId;
	int protocolMachineIdLen;
	uint8_t *linkageId;
	int linkageIdLen;
	int32_t linkageOperationalState;
	int32_t linkageAdministrativeState;
	uint8_t *linkageSnServiceProvider;
	int linkageSnServiceProviderLen;
	oid *linkageSnSAP;
	int linkageSnSAPLen;
	uint8_t *linkageOperationalProtocols;
	int linkageOperationalProtocolsLen;
	uint8_t *linkageISiSO9542OperationalSubsets;
	int linkageISiSO9542OperationalSubsetsLen;
	uint8_t *linkageISHoldingTimerMultiplier;
	int linkageISHoldingTimerMultiplierLen;
	uint8_t *linkageISISConfigurationTimer;
	int linkageISISConfigurationTimerLen;
	uint8_t *linkageISSuggestedEsConfigurationTimer;
	int linkageISSuggestedEsConfigurationTimerLen;
	uint8_t *linkageISRedirectHoldingTime;
	int linkageISRedirectHoldingTimeLen;
	int32_t linkageISESReachabilityChanges;
	int32_t linkageISInvalid9542PDUs;
	uint8_t *linkageESiSO9542OperationalSubsets;
	int linkageESiSO9542OperationalSubsetsLen;
	uint8_t *linkageESHoldingTimerMultiplier;
	int linkageESHoldingTimerMultiplierLen;
	uint8_t *linkageESManualISSNPAAddress;
	int linkageESManualISSNPAAddressLen;
	uint8_t *linkageESDefaultESConfigTimer;
	int linkageESDefaultESConfigTimerLen;
	uint8_t *linkageESActiveESConfigTimer;
	int linkageESActiveESConfigTimerLen;
	int32_t linkageESISReachabilityChanges;
	int32_t linkageESInvalid9542PDUs;
	int32_t linkageEnableChecksum;
	uint8_t *linkageInitialMinimumTimer;
	int linkageInitialMinimumTimerLen;
	uint8_t *linkageReserveTimer;
	int linkageReserveTimerLen;
	uint8_t *linkageIdleTimer;
	int linkageIdleTimerLen;
	int32_t linkageSNDCFCallsPlaced;
	int32_t linkageSNDCFCallsFailed;
	int32_t linkageCODLCallsPlaced;
	int32_t linkageCODLCallsFailed;
	uint8_t *linkageISISType;
	int linkageISISTypeLen;
	uint8_t *linkageISISiSISHelloTimer;
	int linkageISISiSISHelloTimerLen;
	uint8_t *linkageISISl1DefaultMetric;
	int linkageISISl1DefaultMetricLen;
	uint8_t *linkageISISl1DelayMetric;
	int linkageISISl1DelayMetricLen;
	uint8_t *linkageISISl1ExpenseMetric;
	int linkageISISl1ExpenseMetricLen;
	uint8_t *linkageISISl1ErrorMetric;
	int linkageISISl1ErrorMetricLen;
	uint8_t *linkageISISexternalDomain;
	int linkageISISexternalDomainLen;
	int32_t linkageISISchangedInAdjacencyState;
	int32_t linkageISISinitialisationFailures;
	int32_t linkageISISrejectedAdjacencies;
	int32_t linkageISISiSISControlPDUsSent;
	int32_t linkageISISiSISControlPDUsReceived;
	int32_t linkageISISiDFieldLenthMismatches;
	int32_t linkageISISmaximumAreaAddressesMismatches;
	uint8_t *linkageISIScircuitTransmitPassword;
	int linkageISIScircuitTransmitPasswordLen;
	uint8_t *linkageISIScircuitReceivedPasswords;
	int linkageISIScircuitReceivedPasswordsLen;
	int32_t linkageISISauthenticationFailures;
	uint8_t *linkageISISl1IntermediateSystemPriority;
	int linkageISISl1IntermediateSystemPriorityLen;
	uint8_t *linkageISISl1CircuitID;
	int linkageISISl1CircuitIDLen;
	uint8_t *linkageISISl1DesignatedIntermediateSystem;
	int linkageISISl1DesignatedIntermediateSystemLen;
	int32_t linkageISISlanL1DesignatedIntermediateSystemChanges;
	uint8_t *linkageISIScallEstablishmentDefaultMetricIncrement;
	int linkageISIScallEstablishmentDefaultMetricIncrementLen;
	uint8_t *linkageISIScallEstablishmentDelayMetricIncrement;
	int linkageISIScallEstablishmentDelayMetricIncrementLen;
	uint8_t *linkageISIScallEstablishmentExpenseMetricIncrement;
	int linkageISIScallEstablishmentExpenseMetricIncrementLen;
	uint8_t *linkageISIScallEstablishmentErrorMetricIncrement;
	int linkageISIScallEstablishmentErrorMetricIncrementLen;
	uint8_t *linkageISISptPtCircuitID;
	int linkageISISptPtCircuitIDLen;
	uint8_t *linkageISISoutgoingCallIVMO;
	int linkageISISoutgoingCallIVMOLen;
	uint8_t *linkageISISneighborSNPAAddress;
	int linkageISISneighborSNPAAddressLen;
	uint8_t *linkageISISl2DefaultMetric;
	int linkageISISl2DefaultMetricLen;
	uint8_t *linkageISISl2DelayMetric;
	int linkageISISl2DelayMetricLen;
	uint8_t *linkageISISl2ExpenseMetric;
	int linkageISISl2ExpenseMetricLen;
	uint8_t *linkageISISl2ErrorMetric;
	int linkageISISl2ErrorMetricLen;
	int32_t linkageISISmanualL2OnlyMode;
	uint8_t *linkageISISl2IntermediateSystemPriority;
	int linkageISISl2IntermediateSystemPriorityLen;
	uint8_t *linkageISISl2CircuitID;
	int linkageISISl2CircuitIDLen;
	uint8_t *linkageISISl2DesignatedIntermediateSystem;
	int linkageISISl2DesignatedIntermediateSystemLen;
	int32_t linkageISISlanL2DesignatedIntermediteSystemChanges;
	int32_t linkageRowStatus;
};
struct cONSTable_data {
	uint cONSTable_request;
	uint cONSTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	int32_t cONSAdministrativeState;
	uint8_t *cONSOperationalSystemType;
	int cONSOperationalSystemTypeLen;
	int32_t cONSRowStatus;
};
struct networkConnectionTable_data {
	uint networkConnectionTable_request;
	uint networkConnectionTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *coProtocolMachineId;
	int coProtocolMachineIdLen;
	uint8_t *connectionId;
	int connectionIdLen;
	uint8_t *networkConnectionLocalNSAPMO;
	int networkConnectionLocalNSAPMOLen;
	uint8_t *networkConnectionRemoteNSAPAddress;
	int networkConnectionRemoteNSAPAddressLen;
	int32_t networkConnectionRowStatus;
};
struct x25PLETable_data {
	uint x25PLETable_request;
	uint x25PLETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	int32_t x25PLEoperationalState;
	int32_t x25PLEadministrativeState;
	uint8_t *x25PLEprotocolVersionSupported;
	int x25PLEprotocolVersionSupportedLen;
	uint8_t *x25PLElocalDTEAddress;
	int x25PLElocalDTEAddressLen;
	int32_t x25PLEMode;
	uint8_t *x25PLEdefaultThroughputClasses;
	int x25PLEdefaultThroughputClassesLen;
	uint8_t *x25PLEflowControlParameterNegotiation;
	int x25PLEflowControlParameterNegotiationLen;
	uint8_t *x25PLEdefaultPackageSizes;
	int x25PLEdefaultPackageSizesLen;
	uint8_t *x25PLEthroughputClassNegotiation;
	int x25PLEthroughputClassNegotiationLen;
	uint8_t *x25PLEsNserviceProvider;
	int x25PLEsNserviceProviderLen;
	uint8_t *x25PLEsNsAP;
	int x25PLEsNsAPLen;
	uint8_t *x25PElogicalChannelAssignments;
	int x25PElogicalChannelAssignmentsLen;
	int32_t x25PLEinterfaceMode;
	uint8_t *x25PLEdefaultThroughputClass;
	int x25PLEdefaultThroughputClassLen;
	uint8_t *x25PLEflowControlNegotiationPermitted;
	int x25PLEflowControlNegotiationPermittedLen;
	int32_t x25PLEcallDeflectionSubscription;
	uint8_t *x25PLEmaxActiveCircuits;
	int x25PLEmaxActiveCircuitsLen;
	uint8_t *x25PLErestartTime;
	int x25PLErestartTimeLen;
	uint8_t *x25PLEdefaultPacketSize;
	int x25PLEdefaultPacketSizeLen;
	uint8_t *x25PLEdefaultWindowSize;
	int x25PLEdefaultWindowSizeLen;
	uint8_t *x25PLEminimumRecallTimer;
	int x25PLEminimumRecallTimerLen;
	uint8_t *x25PLErestartCount;
	int x25PLErestartCountLen;
	uint8_t *x25PLEsN - ServiceProvider;
	int x25PLEsN - ServiceProviderLen;
	uint8_t *x25PLEsN - SA - P;
	int x25PLEsN - SA - PLen;
	uint8_t *x25PLElogicalChannelAssignments;
	int x25PLElogicalChannelAssignmentsLen;
	uint8_t *x25PLEpacketSequencing;
	int x25PLEpacketSequencingLen;
	uint8_t *x25PLEoctetsSentCounter;
	int x25PLEoctetsSentCounterLen;
	uint8_t *x25PLEoctetsReceivedCounter;
	int x25PLEoctetsReceivedCounterLen;
	uint8_t *x25PLEdataPacketsSent;
	int x25PLEdataPacketsSentLen;
	uint8_t *x25PLEdataPacketsReceived;
	int x25PLEdataPacketsReceivedLen;
	uint8_t *x25PLEcallAttempts;
	int x25PLEcallAttemptsLen;
	uint8_t *x25PLEcallsConnected;
	int x25PLEcallsConnectedLen;
	int32_t x25PLEproviderInitiatedDisconnects;
	uint8_t *x25PLEcallTimeouts;
	int x25PLEcallTimeoutsLen;
	uint8_t *x25PLEclearTimeouts;
	int x25PLEclearTimeoutsLen;
	uint8_t *x25PLEremotelyInitiatedResets;
	int x25PLEremotelyInitiatedResetsLen;
	uint8_t *x25PLEdataRetransmissionTimerExpiries;
	int x25PLEdataRetransmissionTimerExpiriesLen;
	uint8_t *x25PLEproviderInitiatedResets;
	int x25PLEproviderInitiatedResetsLen;
	uint8_t *x25PLEresetTimeouts;
	int x25PLEresetTimeoutsLen;
	uint8_t *x25PLEremotelyInitiatedRestarts;
	int x25PLEremotelyInitiatedRestartsLen;
	uint8_t *x25PLErestartCountsExceeded;
	int x25PLErestartCountsExceededLen;
	uint8_t *x25PLEprotocolErrorsDetectedLocally;
	int x25PLEprotocolErrorsDetectedLocallyLen;
	uint8_t *x25PLEprotocolErrorsAccusedOf;
	int x25PLEprotocolErrorsAccusedOfLen;
	uint8_t *x25PLEcallEstablishmentRetryCountsExceeded;
	int x25PLEcallEstablishmentRetryCountsExceededLen;
	uint8_t *x25PLEclearCountsExceeded;
	int x25PLEclearCountsExceededLen;
	uint8_t *x25PLEpLEClientMOName;
	int x25PLEpLEClientMONameLen;
	uint8_t *x25PLEregistrationRequestTime;
	int x25PLEregistrationRequestTimeLen;
	uint8_t *x25PLEregistrationRequestCount;
	int x25PLEregistrationRequestCountLen;
	int32_t x25PLEregistrationPermitted;
	int32_t x25PLERowStatus;
};
struct x25PLE -DTETable_data {
	uint x25PLE - DTETable_request;
	uint x25PLE - DTETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	int32_t x25PLE - DTEcallDeflectionSubscription;
	uint8_t *x25PLE - DTEcallRequestResponseTimer;
	int x25PLE - DTEcallRequestResponseTimerLen;
	uint8_t *x25PLE - DTEextendedPacketSequenceNumbering;
	int x25PLE - DTEextendedPacketSequenceNumberingLen;
	uint8_t *x25PLE - DTEmaxActiveCircuits;
	int x25PLE - DTEmaxActiveCircuitsLen;
	uint8_t *x25PLE - DTEminimumRecallTimer;
	int x25PLE - DTEminimumRecallTimerLen;
	uint8_t *x25PLE - DTEresetRequestResponseTimer;
	int x25PLE - DTEresetRequestResponseTimerLen;
	uint8_t *x25PLE - DTErestartRequestRetransmissionCount;
	int x25PLE - DTErestartRequestRetransmissionCountLen;
	uint8_t *x25PLE - DTErestartRequestResponseTimer;
	int x25PLE - DTErestartRequestResponseTimerLen;
	uint8_t *x25PLE - DTEclearRequestResponseTimer;
	int x25PLE - DTEclearRequestResponseTimerLen;
	uint8_t *x25PLE - DTEinterruptResponseTimer;
	int x25PLE - DTEinterruptResponseTimerLen;
	uint8_t *x25PLE - DTEresetRequestRetransmissionCount;
	int x25PLE - DTEresetRequestRetransmissionCountLen;
	uint8_t *x25PLE - DTEclearRequestRetransmissionCount;
	int x25PLE - DTEclearRequestRetransmissionCountLen;
	int32_t x25PLE - DTEcallAttempts;
	int32_t x25PLE - DTEprotocolErrorsDetectedLocally;
	int32_t x25PLE - DTEprotocolErrorsAccusedOf;
	int32_t x25PLE - DTEcallEstablishmentRetryCountsExceeded;
	int32_t x25PLE - DTEoctetsReceivedCounter;
	int32_t x25PLE - DTEoctetsSentCounter;
	int32_t x25PLE - DTEcallTimeouts;
	int32_t x25PLE - DTEcallsConnected;
	int32_t x25PLE - DTEclearCountsExceeded;
	int32_t x25PLE - DTEclearTimeouts;
	int32_t x25PLE - DTEdataPacketsReceived;
	int32_t x25PLE - DTEdataPacketsSent;
	int32_t x25PLE - DTEdataRetransmissionTimerExpiries;
	int32_t x25PLE - DTEproviderInitiatedResets;
	int32_t x25PLE - DTEproviderInitiatedDisconnects;
	int32_t x25PLE - DTEremotelyInitiatedResets;
	int32_t x25PLE - DTEremotelyInitiatedRestarts;
	int32_t x25PLE - DTEresetTimeouts;
	int32_t x25PLE - DTErestartCountsExceeded;
	uint8_t *x25PLE - DTEwindowStatusTransmissionTimer;
	int x25PLE - DTEwindowStatusTransmissionTimerLen;
	uint8_t *x25PLE - DTEwindowRotationTimer;
	int x25PLE - DTEwindowRotationTimerLen;
	uint8_t *x25PLE - DTEdataPacketRetransmissionCount;
	int x25PLE - DTEdataPacketRetransmissionCountLen;
	uint8_t *x25PLE - DTErejectResponseTimer;
	int x25PLE - DTErejectResponseTimerLen;
	uint8_t *x25PLE - DTErejectRetransmissionCount;
	int x25PLE - DTErejectRetransmissionCountLen;
	uint8_t *x25PLE - DTEregistrationRequestResponseTimer;
	int x25PLE - DTEregistrationRequestResponseTimerLen;
	uint8_t *x25PLE - DTEregistrationRequestRetransmissionCount;
	int x25PLE - DTEregistrationRequestRetransmissionCountLen;
	int32_t x25PLE - DTEregistrationPermitted;
};
struct x25PLE -DCETable_data {
	uint x25PLE - DCETable_request;
	uint x25PLE - DCETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	int32_t x25PLE - DCEcallAttempts;
	int32_t x25PLE - DCEcallsConnected;
	int32_t x25PLE - DCEcUG;
	int32_t x25PLE - DCEfastSelectAcceptance;
	int32_t x25PLE - DCEincomingCallsBarred;
	int32_t x25PLE - DCEoneWayLogicalChannelOutgoing;
	int32_t x25PLE - DCEoutgoingCallsBarred;
	int32_t x25PLE - DCEdataPacketsReceived;
	int32_t x25PLE - DCEdataPacketsSent;
	int32_t x25PLE - DCEinterruptPacketsReceived;
	int32_t x25PLE - DCEinterruptPacketsSent;
	int32_t x25PLE - DCEinterruptTimerExpiries;
	int32_t x25PLE - DCEoctetsReceivedCounter;
	int32_t x25PLE - DCEoctetsSentCounter;
	int32_t x25PLE - DCEproviderInitiatedDisconnects;
	int32_t x25PLE - DCEproviderInitiatedResets;
	int32_t x25PLE - DCEremotelyInitiatedRestarts;
	int32_t x25PLE - DCEremotelyInitiatedResets;
	int32_t x25PLE - DCEresetTimeouts;
	int32_t x25PLE - DCEx25SegmentsReceived;
	int32_t x25PLE - DCEx25SegmentsSent;
	int32_t x25PLE - DCEbilateralCUG;
	int32_t x25PLE - DCEbilateralCUGWithOutgoingAccess;
	int32_t x25PLE - DCEcallDeflectionSubscription;
	int32_t x25PLE - DCEcallRedirection;
	int32_t x25PLE - DCEchargingInformation;
	int32_t x25PLE - DCEcUGWithIncomingAccess;
	int32_t x25PLE - DCEcUGWithOutgoingAccess;
	int32_t x25PLE - DCEdBitModification;
	uint8_t *x25PLE - DCEdefaultThroughputClassesAssignment;
	int x25PLE - DCEdefaultThroughputClassesAssignmentLen;
	uint8_t *x25PLE - DCEextendedPacketSequenceNumbering;
	int x25PLE - DCEextendedPacketSequenceNumberingLen;
	int32_t x25PLE - DCEhuntGroup;
	int32_t x25PLE - DCEincomingCallBarredWithinCUG;
	int32_t x25PLE - DCElocalChargingPrevention;
	uint8_t *x25PLE - DCEnonStandardDefaultPacketSizes;
	int x25PLE - DCEnonStandardDefaultPacketSizesLen;
	uint8_t *x25PLE - DCEnonStandardDefaultWindowSizes;
	int x25PLE - DCEnonStandardDefaultWindowSizesLen;
	int32_t x25PLE - DCEnUIOverride;
	int32_t x25PLE - DCEnUISubscription;
	int32_t x25PLE - DCEoneWayLogicalChannelIncoming;
	int32_t x25PLE - DCEonlineFacilityRegistration;
	int32_t x25PLE - DCEoutgoingCallBarredWithinCUG;
	int32_t x25PLE - DCEpacketRetransmission;
	int32_t x25PLE - DCEreverseChargingAcceptance;
	int32_t x25PLE - DCErOASubscription;
	int32_t x25PLE - DCEclearIndication;
	uint8_t *x25PLE - DCEincomingCall;
	int x25PLE - DCEincomingCallLen;
	uint8_t *x25PLE - DCEresetIndication;
	int x25PLE - DCEresetIndicationLen;
	uint8_t *x25PLE - DCErestartIndication;
	int x25PLE - DCErestartIndicationLen;
};
struct x25PLEIVMOTable_data {
	uint x25PLEIVMOTable_request;
	uint x25PLEIVMOTable_refs;
	uint8_t *x25PLEIVMOId;
	int x25PLEIVMOIdLen;
	uint8_t *x25PLEIVMOlocalDTEAddress;
	int x25PLEIVMOlocalDTEAddressLen;
	uint8_t *x25PLEIVMOlogicalChannelAssignments;
	int x25PLEIVMOlogicalChannelAssignmentsLen;
	uint8_t *x25PLEIVMOsN - ServiceProvider;
	int x25PLEIVMOsN - ServiceProviderLen;
	uint8_t *x25PLEIVMOdefaultPacketSizes;
	int x25PLEIVMOdefaultPacketSizesLen;
	uint8_t *x25PLEIVMOdefaultThroughputClasses;
	int x25PLEIVMOdefaultThroughputClassesLen;
	uint8_t *x25PLEIVMOdefaultWindowSizes;
	int x25PLEIVMOdefaultWindowSizesLen;
	uint8_t *x25PLEIVMOflowControlParameterNegotiation;
	int x25PLEIVMOflowControlParameterNegotiationLen;
	uint8_t *x25PLEIVMOthroughputClassNegotiation;
	int x25PLEIVMOthroughputClassNegotiationLen;
	uint8_t *x25PLEIVMOx25PLEMode;
	int x25PLEIVMOx25PLEModeLen;
	int32_t x25PLEIVMOinterfaceMode;
	uint8_t *x25PLEIVMOdefaultThroughputClass;
	int x25PLEIVMOdefaultThroughputClassLen;
	uint8_t *x25PLEIVMOflowControlNegotiationPermitted;
	int x25PLEIVMOflowControlNegotiationPermittedLen;
	int32_t x25PLEIVMOcallDeflectionSubscription;
	uint8_t *x25PLEIVMOmaxActiveCircuits;
	int x25PLEIVMOmaxActiveCircuitsLen;
	uint8_t *x25PLEIVMOrestartTime;
	int x25PLEIVMOrestartTimeLen;
	uint8_t *x25PLEIVMOdefaultPacketSize;
	int x25PLEIVMOdefaultPacketSizeLen;
	uint8_t *x25PLEIVMOdefaultWindowSize;
	int x25PLEIVMOdefaultWindowSizeLen;
	uint8_t *x25PLEIVMOminimumRecallTimer;
	int x25PLEIVMOminimumRecallTimerLen;
	uint8_t *x25PLEIVMOrestartCount;
	int x25PLEIVMOrestartCountLen;
	uint8_t *x25PLEIVMOpacketSequencing;
	int x25PLEIVMOpacketSequencingLen;
	uint8_t *x25PLEIVMOregistrationRequestTime;
	int x25PLEIVMOregistrationRequestTimeLen;
	uint8_t *x25PLEIVMOregistrationRequestCount;
	int x25PLEIVMOregistrationRequestCountLen;
	int32_t x25PLEIVMOregistrationPermitted;
	int32_t x25PLEIVMORowStatus;
};
struct x25PLEIVMO -DTETable_data {
	uint x25PLEIVMO - DTETable_request;
	uint x25PLEIVMO - DTETable_refs;
	uint8_t *x25PLEIVMOId;
	int x25PLEIVMOIdLen;
	int32_t x25PLEIVMO - DTEcallDeflectionSubscription;
	uint8_t *x25PLEIVMO - DTEcallRequestResponseTimer;
	int x25PLEIVMO - DTEcallRequestResponseTimerLen;
	uint8_t *x25PLEIVMO - DTEextendedPacketSequenceNumbering;
	int x25PLEIVMO - DTEextendedPacketSequenceNumberingLen;
	uint8_t *x25PLEIVMO - DTEmaxActiveCircuits;
	int x25PLEIVMO - DTEmaxActiveCircuitsLen;
	uint8_t *x25PLEIVMO - DTEminimumRecallTimer;
	int x25PLEIVMO - DTEminimumRecallTimerLen;
	uint8_t *x25PLEIVMO - DTEresetRequestResponseTimer;
	int x25PLEIVMO - DTEresetRequestResponseTimerLen;
	uint8_t *x25PLEIVMO - DTErestartRequestRetransmissionCount;
	int x25PLEIVMO - DTErestartRequestRetransmissionCountLen;
	uint8_t *x25PLEIVMO - DTErestartRequestResponseTimer;
	int x25PLEIVMO - DTErestartRequestResponseTimerLen;
	uint8_t *x25PLEIVMO - DTEclearRequestResponseTimer;
	int x25PLEIVMO - DTEclearRequestResponseTimerLen;
	uint8_t *x25PLEIVMO - DTEinterruptResponseTimer;
	int x25PLEIVMO - DTEinterruptResponseTimerLen;
	uint8_t *x25PLEIVMO - DTEresetRequestRetransmissionCount;
	int x25PLEIVMO - DTEresetRequestRetransmissionCountLen;
	uint8_t *x25PLEIVMO - DTEclearRequestRetransmissionCount;
	int x25PLEIVMO - DTEclearRequestRetransmissionCountLen;
	uint8_t *x25PLEIVMO - DTEcallAttempts;
	int x25PLEIVMO - DTEcallAttemptsLen;
	uint8_t *x25PLEIVMO - DTEprotocolErrorsDetectedLocally;
	int x25PLEIVMO - DTEprotocolErrorsDetectedLocallyLen;
	uint8_t *x25PLEIVMO - DTEprotocolErrorsAccusedOf;
	int x25PLEIVMO - DTEprotocolErrorsAccusedOfLen;
	uint8_t *x25PLEIVMO - DTEcallEstablishmentRetryCountsExceeded;
	int x25PLEIVMO - DTEcallEstablishmentRetryCountsExceededLen;
	int32_t x25PLEIVMO - DTEoctetsReceivedCounter;
	int32_t x25PLEIVMO - DTEoctetsSentCounter;
	int32_t x25PLEIVMO - DTEcallTimeouts;
	int32_t x25PLEIVMO - DTEcallsConnected;
	int32_t x25PLEIVMO - DTEclearCountsExceeded;
	int32_t x25PLEIVMO - DTEclearTimeouts;
	int32_t x25PLEIVMO - DTEdataPacketsReceived;
	int32_t x25PLEIVMO - DTEdataPacketsSent;
	int32_t x25PLEIVMO - DTEdataRetransmissionTimerExpiries;
	int32_t x25PLEIVMO - DTEproviderInitiatedResets;
	int32_t x25PLEIVMO - DTEproviderInitiatedDisconnects;
	int32_t x25PLEIVMO - DTEremotelyInitiatedResets;
	int32_t x25PLEIVMO - DTEremotelyInitiatedRestarts;
	int32_t x25PLEIVMO - DTEresetTimeouts;
	int32_t x25PLEIVMO - DTErestartCountsExceeded;
	uint8_t *x25PLEIVMO - DTEwindowStatusTransmissionTimer;
	int x25PLEIVMO - DTEwindowStatusTransmissionTimerLen;
	uint8_t *x25PLEIVMO - DTEwindowRotationTimer;
	int x25PLEIVMO - DTEwindowRotationTimerLen;
	uint8_t *x25PLEIVMO - DTEdataPacketRetransmissionCount;
	int x25PLEIVMO - DTEdataPacketRetransmissionCountLen;
	uint8_t *x25PLEIVMO - DTErejectResponseTimer;
	int x25PLEIVMO - DTErejectResponseTimerLen;
	uint8_t *x25PLEIVMO - DTErejectRetransmissionCount;
	int x25PLEIVMO - DTErejectRetransmissionCountLen;
	uint8_t *x25PLEIVMO - DTEregistrationRequestResponseTimer;
	int x25PLEIVMO - DTEregistrationRequestResponseTimerLen;
	uint8_t *x25PLEIVMO - DTEregistrationRequestRetransmissionCount;
	int x25PLEIVMO - DTEregistrationRequestRetransmissionCountLen;
	int32_t x25PLEIVMO - DTEregistrationPermitted;
	int32_t x25PLEIVMO - DTERowStatus;
};
struct x25PLEIVMO -DCETable_data {
	uint x25PLEIVMO - DCETable_request;
	uint x25PLEIVMO - DCETable_refs;
	uint8_t *x25PLEIVMOId;
	int x25PLEIVMOIdLen;
	int32_t x25PLEIVMO - DCERowStatus;
};
struct virtualCallTable_data {
	uint virtualCallTable_request;
	uint virtualCallTable_refs;
	uint8_t *virtualCallId;
	int virtualCallIdLen;
	uint8_t *virtualCallChannel;
	int virtualCallChannelLen;
	uint8_t *virtualCallPacketSize;
	int virtualCallPacketSizeLen;
	uint8_t *virtualCallWindowSize;
	int virtualCallWindowSizeLen;
	uint8_t *virtualCallOctetsSentCounter;
	int virtualCallOctetsSentCounterLen;
	uint8_t *virtualCallOctetsReceivedCounter;
	int virtualCallOctetsReceivedCounterLen;
	uint8_t *virtualCallDataPacketsSent;
	int virtualCallDataPacketsSentLen;
	uint8_t *virtualCallDataPacketsReceived;
	int virtualCallDataPacketsReceivedLen;
	uint8_t *virtualCallRemotelyInitiatedResets;
	int virtualCallRemotelyInitiatedResetsLen;
	uint8_t *virtualCallDataRetransmissionTimerExpiries;
	int virtualCallDataRetransmissionTimerExpiriesLen;
	uint8_t *virtualCallProviderInitiatedResets;
	int virtualCallProviderInitiatedResetsLen;
	uint8_t *virtualCallResetTimeouts;
	int virtualCallResetTimeoutsLen;
	uint8_t *virtualCallInterruptPacketsSent;
	int virtualCallInterruptPacketsSentLen;
	uint8_t *virtualCallInterruptPacketsReceived;
	int virtualCallInterruptPacketsReceivedLen;
	uint8_t *virtualCallInterruptTimerExpiries;
	int virtualCallInterruptTimerExpiriesLen;
};
struct virtualCircuitTable_data {
	uint virtualCircuitTable_request;
	uint virtualCircuitTable_refs;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *virtualCircuitLogicalChannel;
	int virtualCircuitLogicalChannelLen;
	uint8_t *virtualCircuitPacketSizes;
	int virtualCircuitPacketSizesLen;
	uint8_t *virtualCircuitThroughputClasses;
	int virtualCircuitThroughputClassesLen;
	uint8_t *virtualCircuitWindowSizes;
	int virtualCircuitWindowSizesLen;
};
struct virtualCircuit -DTETable_data {
	uint virtualCircuit - DTETable_request;
	uint virtualCircuit - DTETable_refs;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	int32_t virtualCircuit - DTEoctetsSentCounter;
	int32_t virtualCircuit - DTEoctetsReceivedCounter;
	int32_t virtualCircuit - DTEdataPacketsReceived;
	int32_t virtualCircuit - DTEdataPacketsSent;
	int32_t virtualCircuit - DTEdataRetransmissionTimerExpiries;
	int32_t virtualCircuit - DTEinterruptPacketsReceived;
	int32_t virtualCircuit - DTEinterruptPacketsSent;
	int32_t virtualCircuit - DTEinterruptTimerExpiries;
	int32_t virtualCircuit - DTEproviderInitiatedResets;
	int32_t virtualCircuit - DTEremotelyInitiatedResets;
	int32_t virtualCircuit - DTEresetTimeouts;
};
struct virtualCircuit -DCETable_data {
	uint virtualCircuit - DCETable_request;
	uint virtualCircuit - DCETable_refs;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	int32_t virtualCircuit - DCEdataPacketsReceived;
	int32_t virtualCircuit - DCEdataPacketsSent;
	int32_t virtualCircuit - DCEinterruptPacketsReceived;
	int32_t virtualCircuit - DCEinterruptPacketsSent;
	int32_t virtualCircuit - DCEinterruptTimerExpiries;
	int32_t virtualCircuit - DCEoctetsReceivedCounter;
	int32_t virtualCircuit - DCEoctetsSentCounter;
	int32_t virtualCircuit - DCEproviderInitiatedDisconnects;
	int32_t virtualCircuit - DCEproviderInitiatedResets;
	int32_t virtualCircuit - DCEremotelyInitiatedRestarts;
	int32_t virtualCircuit - DCEremotelyInitiatedResets;
	int32_t virtualCircuit - DCEresetTimeouts;
	int32_t virtualCircuit - DCEx25SegmentsReceived;
	int32_t virtualCircuit - DCEx25SegmentsSent;
};
struct permanentVirtualCircuitTable_data {
	uint permanentVirtualCircuitTable_request;
	uint permanentVirtualCircuitTable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCallId;
	int virtualCallIdLen;
	uint8_t *permanentVirtualCircuitChannel;
	int permanentVirtualCircuitChannelLen;
	int32_t permanentVirtualCircuitRowStatus;
};
struct permanentVirtualCircuit -DTETable_data {
	uint permanentVirtualCircuit - DTETable_request;
	uint permanentVirtualCircuit - DTETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *permanentVirtualCircuit - DTElogicalChannel;
	int permanentVirtualCircuit - DTElogicalChannelLen;
	uint8_t *permanentVirtualCircuit - DTEpacketSizes;
	int permanentVirtualCircuit - DTEpacketSizesLen;
	uint8_t *permanentVirtualCircuit - DTEthroughputClasses;
	int permanentVirtualCircuit - DTEthroughputClassesLen;
	uint8_t *permanentVirtualCircuit - DTEwindowSizes;
	int permanentVirtualCircuit - DTEwindowSizesLen;
	int32_t permanentVirtualCircuit - DTERowStatus;
};
struct permanentVirtualCircuit -DCETable_data {
	uint permanentVirtualCircuit - DCETable_request;
	uint permanentVirtualCircuit - DCETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *permanentVirtualCircuit - DCEchargingDirection;
	int permanentVirtualCircuit - DCEchargingDirectionLen;
	uint8_t *permanentVirtualCircuit - DCElogicalChannel;
	int permanentVirtualCircuit - DCElogicalChannelLen;
	uint8_t *permanentVirtualCircuit - DCEpacketSizes;
	int permanentVirtualCircuit - DCEpacketSizesLen;
	uint8_t *permanentVirtualCircuit - DCEthroughputClasses;
	int permanentVirtualCircuit - DCEthroughputClassesLen;
	uint8_t *permanentVirtualCircuit - DCEwindowSizes;
	int permanentVirtualCircuit - DCEwindowSizesLen;
	int32_t permanentVirtualCircuit - DCEoperationalState;
	uint8_t *permanentVirtualCircuit - DCEremoteDTEAddress;
	int permanentVirtualCircuit - DCEremoteDTEAddressLen;
	uint8_t *permanentVirtualCircuit - DCEremoteLogicalChannel;
	int permanentVirtualCircuit - DCEremoteLogicalChannelLen;
	int32_t permanentVirtualCircuit - DCERowStatus;
};
struct virtualCallIVMOTable_data {
	uint virtualCallIVMOTable_request;
	uint virtualCallIVMOTable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCallIVMOId;
	int virtualCallIVMOIdLen;
	int32_t virtualCallIVMOfastSelect;
	uint8_t *virtualCallIVMOpacketSizes;
	int virtualCallIVMOpacketSizesLen;
	uint8_t *virtualCallIVMOreverseCharging;
	int virtualCallIVMOreverseChargingLen;
	uint8_t *virtualCallIVMOthroughputClasses;
	int virtualCallIVMOthroughputClassesLen;
	uint8_t *virtualCallIVMOwindowSizes;
	int virtualCallIVMOwindowSizesLen;
	uint8_t *virtualCallIVMOproposedPacketSize;
	int virtualCallIVMOproposedPacketSizeLen;
	uint8_t *virtualCallIVMOproposedWindowSize;
	int virtualCallIVMOproposedWindowSizeLen;
	uint8_t *virtualCallIVMOacceptReverseCharging;
	int virtualCallIVMOacceptReverseChargingLen;
	uint8_t *virtualCallIVMOproposeReverseCharging;
	int virtualCallIVMOproposeReverseChargingLen;
	uint8_t *virtualCallIVMOcallTime;
	int virtualCallIVMOcallTimeLen;
	uint8_t *virtualCallIVMOresetTime;
	int virtualCallIVMOresetTimeLen;
	uint8_t *virtualCallIVMOclearTime;
	int virtualCallIVMOclearTimeLen;
	uint8_t *virtualCallIVMOinterruptTime;
	int virtualCallIVMOinterruptTimeLen;
	uint8_t *virtualCallIVMOresetCount;
	int virtualCallIVMOresetCountLen;
	uint8_t *virtualCallIVMOclearCount;
	int virtualCallIVMOclearCountLen;
	uint8_t *virtualCallIVMOwindowTime;
	int virtualCallIVMOwindowTimeLen;
	uint8_t *virtualCallIVMOdataRetransmissionTime;
	int virtualCallIVMOdataRetransmissionTimeLen;
	uint8_t *virtualCallIVMOdataRetransmissionCount;
	int virtualCallIVMOdataRetransmissionCountLen;
	uint8_t *virtualCallIVMOrejectTime;
	int virtualCallIVMOrejectTimeLen;
	uint8_t *virtualCallIVMOrejectCount;
	int virtualCallIVMOrejectCountLen;
	int32_t virtualCallIVMORowStatus;
};
struct switchedVirtualCallTable_data {
	uint switchedVirtualCallTable_request;
	uint switchedVirtualCallTable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCallId;
	int virtualCallIdLen;
	uint8_t *switchedVirtualCalldirection;
	int switchedVirtualCalldirectionLen;
	uint8_t *switchedVirtualCallremoteDTEAddress;
	int switchedVirtualCallremoteDTEAddressLen;
	uint8_t *switchedVirtualCallthroughputClass;
	int switchedVirtualCallthroughputClassLen;
	uint8_t *switchedVirtualCallredirectReason;
	int switchedVirtualCallredirectReasonLen;
	uint8_t *switchedVirtualCalloriginallyCalledAddress;
	int switchedVirtualCalloriginallyCalledAddressLen;
	uint8_t *switchedVirtualCallcallingAddressExtension;
	int switchedVirtualCallcallingAddressExtensionLen;
	uint8_t *switchedVirtualCallcalledAddressExtension;
	int switchedVirtualCallcalledAddressExtensionLen;
	int32_t switchedVirtualCallRowStatus;
};
struct virtualCall -DTETable_data {
	uint virtualCall - DTETable_request;
	uint virtualCall - DTETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *virtualCall - DTEcallingAddressExtension;
	int virtualCall - DTEcallingAddressExtensionLen;
	uint8_t *virtualCall - DTEcalledAddressExtension;
	int virtualCall - DTEcalledAddressExtensionLen;
	uint8_t *virtualCall - DTEdirection;
	int virtualCall - DTEdirectionLen;
	int32_t virtualCall - DTEfastSelect;
	uint8_t *virtualCall - DTEoriginallyCalledAddress;
	int virtualCall - DTEoriginallyCalledAddressLen;
	uint8_t *virtualCall - DTEredirectReason;
	int virtualCall - DTEredirectReasonLen;
	uint8_t *virtualCall - DTEremoteDTEAddress;
	int virtualCall - DTEremoteDTEAddressLen;
	uint8_t *virtualCall - DTEreverseCharging;
	int virtualCall - DTEreverseChargingLen;
	int32_t virtualCall - DTERowStatus;
};
struct virtualCall -DCETable_data {
	uint virtualCall - DCETable_request;
	uint virtualCall - DCETable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *virtualCall - DCEchargingDirection;
	int virtualCall - DCEchargingDirectionLen;
	uint8_t *virtualCall - DCEcUGSelection;
	int virtualCall - DCEcUGSelectionLen;
	uint8_t *virtualCall - DCEdirection;
	int virtualCall - DCEdirectionLen;
	int32_t virtualCall - DCEfastSelect;
	uint8_t *virtualCall - DCEremoteDTEAddress;
	int virtualCall - DCEremoteDTEAddressLen;
	uint8_t *virtualCall - DCEtransitDelaySelectionAndIndication;
	int virtualCall - DCEtransitDelaySelectionAndIndicationLen;
	uint8_t *virtualCall - DCEbilateralCUGSelection;
	int virtualCall - DCEbilateralCUGSelectionLen;
	int32_t virtualCall - DCEcallRedirectionDeflectionNotification;
	int32_t virtualCall - DCEcalledLineAddressModifiedNotification;
	uint8_t *virtualCall - DCEcUGWithOutgoingAccessSelection;
	int virtualCall - DCEcUGWithOutgoingAccessSelectionLen;
	uint8_t *virtualCall - DCEnUISelection;
	int virtualCall - DCEnUISelectionLen;
	uint8_t *virtualCall - DCEreverseCharging;
	int virtualCall - DCEreverseChargingLen;
	uint8_t *virtualCall - DCErOASelection;
	int virtualCall - DCErOASelectionLen;
	int32_t virtualCall - DCERowStatus;
};
struct dSeriesCountsTable_data {
	uint dSeriesCountsTable_request;
	uint dSeriesCountsTable_refs;
	uint8_t *x25PLEId;
	int x25PLEIdLen;
	uint8_t *virtualCircuitId;
	int virtualCircuitIdLen;
	uint8_t *dSeriesId;
	int dSeriesIdLen;
	int32_t dSeriesResetRequestIndicationPackets;
	int32_t dSeriesSegmentsSent;
	int32_t dSeriesSegmentsReceived;
	int32_t dSeriesRowStatus;
};
struct adjacencyTable_data {
	uint adjacencyTable_request;
	uint adjacencyTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *linkageId;
	int linkageIdLen;
	uint8_t *adjacencyId;
	int adjacencyIdLen;
	int32_t adjacencyState;
	uint8_t *neighbourSNPAAddress;
	int neighbourSNPAAddressLen;
	int32_t neighbourSystemType;
	uint8_t *neighbourSystemIds;
	int neighbourSystemIdsLen;
	int32_t adjacencyUsage;
	uint8_t *areaAddressesOfNeighbour;
	int areaAddressesOfNeighbourLen;
	int32_t holdingTimer;
	int32_t priorityOfNeighbour;
	int32_t adjacencyRowStatus;
};
struct virtualAdjacencyTable_data {
	uint virtualAdjacencyTable_request;
	uint virtualAdjacencyTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *virtualAdjacencyNetworkEntityTitle;
	int virtualAdjacencyNetworkEntityTitleLen;
	int32_t virtualAdjacencyMetric;
};
struct destinationTable_data {
	uint destinationTable_request;
	uint destinationTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *destinationAddressPrefix;
	int destinationAddressPrefixLen;
	int32_t destinationDefaultMetricPathCost;
	uint8_t *destinationDefaultMetricOutputAdjacencies;
	int destinationDefaultMetricOutputAdjacenciesLen;
	int32_t destinationDelayMetricPathCost;
	uint8_t *destinationDelayMetricOutputAdjacencies;
	int destinationDelayMetricOutputAdjacenciesLen;
	int32_t destinationExpenseMetricPathCost;
	uint8_t *destinationExpenseMetricOutputAdjacencies;
	int destinationExpenseMetricOutputAdjacenciesLen;
	int32_t destinationErrorMetricPathCost;
	uint8_t *destinationErrorMetricOutputAdjacencies;
	int destinationErrorMetricOutputAdjacenciesLen;
};
struct destinationSystemTable_data {
	uint destinationSystemTable_request;
	uint destinationSystemTable_refs;
	uint8_t *communicationsEntityId;
	int communicationsEntityIdLen;
	uint8_t *clProtocolMachineId;
	int clProtocolMachineIdLen;
	uint8_t *destinationSystemNetworkEntityTitle;
	int destinationSystemNetworkEntityTitleLen;
	int32_t destinationSystemMetricType;
	int32_t desintationSystemMetric;
	oid *destinationSystemAdjacency;
	int destinationSystemAdjacencyLen;
};
struct destinationAreaTable_data {
	uint destinationAreaTable_request;
	uint destinationAreaTable_refs;
	uint8_t *destinationAreaId;
	int destinationAreaIdLen;
};
struct reachableAddressTable_data {
	uint reachableAddressTable_request;
	uint reachableAddressTable_refs;
	uint8_t *reachableAddressId;
	int reachableAddressIdLen;
	uint8_t *reachableAddressPrefix;
	int reachableAddressPrefixLen;
	int32_t reachableAddressMappingType;
	int32_t reachableAddressDefaultMetric;
	int32_t reachableAddressDelayMetric;
	int32_t reachableAddressExpenseMetric;
	int32_t reachableAddressErrorMetric;
	int32_t reachableAddressDefaultMetricType;
	int32_t reachableAddressDelayMetricType;
	int32_t reachableAddressExpenseMetricType;
	int32_t reachableAddressErrorMetricType;
	int32_t reachableAddressOperationalState;
	int32_t reachableAddressAdministrativeState;
	uint8_t *reachableAddressSNPAAddresses;
	int reachableAddressSNPAAddressesLen;
	uint8_t *reachableAddressSNPAMask;
	int reachableAddressSNPAMaskLen;
	uint8_t *reachableAddressSNPAPrefix;
	int reachableAddressSNPAPrefixLen;
	int32_t reachableAddressRowStatus;
};

/* storage declarations */
extern struct dlMIB_data *dlMIBStorage;
extern struct header_complex_index *communicationsEntityTableStorage;
extern struct header_complex_index *sap1TableStorage;
extern struct header_complex_index *sap2TableStorage;
extern struct header_complex_index *clProtocolMachineTableStorage;
extern struct header_complex_index *coProtocolMachineTableStorage;
extern struct header_complex_index *singlePeerConnectionTableStorage;
extern struct header_complex_index *physicalEntityTableStorage;
extern struct header_complex_index *physicalSAPTableStorage;
extern struct header_complex_index *dataCircuitTableStorage;
extern struct header_complex_index *physicalConnectionTableStorage;
extern struct header_complex_index *datalinkEntityTableStorage;
extern struct header_complex_index *dLSAPTableStorage;
extern struct header_complex_index *lAPBDLETableStorage;
extern struct header_complex_index *sLPPMTableStorage;
extern struct header_complex_index *sLPConnectionTableStorage;
extern struct header_complex_index *sLPConnectionIVMOTableStorage;
extern struct header_complex_index *mACDLETableStorage;
extern struct header_complex_index *mACTableStorage;
extern struct header_complex_index *lLCDLETableStorage;
extern struct header_complex_index *lLCCLPMTableStorage;
extern struct header_complex_index *lLCCOPMTableStorage;
extern struct header_complex_index *resourceTypeIdTableStorage;
extern struct header_complex_index *lLCStationTableStorage;
extern struct header_complex_index *lLCSAPTableStorage;
extern struct header_complex_index *rDESetupTableStorage;
extern struct header_complex_index *rDEPairTableStorage;
extern struct header_complex_index *lLCConnectionLessTableStorage;
extern struct header_complex_index *lLCConnection2TableStorage;
extern struct header_complex_index *lLCConnection2IVMOTableStorage;
extern struct header_complex_index *lLCConnectionlessAckTableStorage;
extern struct header_complex_index *lLCConnectionlessAckIVMOTableStorage;
extern struct header_complex_index *networkEntityTableStorage;
extern struct header_complex_index *nSAPTableStorage;
extern struct header_complex_index *cLNSTableStorage;
extern struct header_complex_index *cLNSISISTableStorage;
extern struct header_complex_index *cLNSISISLevel2TableStorage;
extern struct header_complex_index *linkageTableStorage;
extern struct header_complex_index *cONSTableStorage;
extern struct header_complex_index *networkConnectionTableStorage;
extern struct header_complex_index *x25PLETableStorage;
extern struct header_complex_index *x25PLE - DTETableStorage;
extern struct header_complex_index *x25PLE - DCETableStorage;
extern struct header_complex_index *x25PLEIVMOTableStorage;
extern struct header_complex_index *x25PLEIVMO - DTETableStorage;
extern struct header_complex_index *x25PLEIVMO - DCETableStorage;
extern struct header_complex_index *virtualCallTableStorage;
extern struct header_complex_index *virtualCircuitTableStorage;
extern struct header_complex_index *virtualCircuit - DTETableStorage;
extern struct header_complex_index *virtualCircuit - DCETableStorage;
extern struct header_complex_index *permanentVirtualCircuitTableStorage;
extern struct header_complex_index *permanentVirtualCircuit - DTETableStorage;
extern struct header_complex_index *permanentVirtualCircuit - DCETableStorage;
extern struct header_complex_index *virtualCallIVMOTableStorage;
extern struct header_complex_index *switchedVirtualCallTableStorage;
extern struct header_complex_index *virtualCall - DTETableStorage;
extern struct header_complex_index *virtualCall - DCETableStorage;
extern struct header_complex_index *dSeriesCountsTableStorage;
extern struct header_complex_index *adjacencyTableStorage;
extern struct header_complex_index *virtualAdjacencyTableStorage;
extern struct header_complex_index *destinationTableStorage;
extern struct header_complex_index *destinationSystemTableStorage;
extern struct header_complex_index *destinationAreaTableStorage;
extern struct header_complex_index *reachableAddressTableStorage;

/* enum definitions from the covered mib sections */

#define COMMUNICATIONSENTITYOPERATIONALSTATE_DISABLED 0
#define COMMUNICATIONSENTITYOPERATIONALSTATE_ENABLED 1

#define CLPROTOCOLMACHINEOPERATIONALSTATE_DISABLED 0
#define CLPROTOCOLMACHINEOPERATIONALSTATE_ENABLED 1

#define COPROTOCOLMACHINEOPERATIONALSTATE_DISABLED 0
#define COPROTOCOLMACHINEOPERATIONALSTATE_ENABLED 1

#define DATACIRCUITTYPE_END_SYSTEM               0
#define DATACIRCUITTYPE_RELAY_SYSTEM             1

#define DATACIRCUITSYNCHRONIZATIONMODE_SYNCHRONOUS 0
#define DATACIRCUITSYNCHRONIZATIONMODE_ASYNCHRONOUS 1

#define DATACIRCUITTRANSMISSIONMODE_SIMPLEX      0
#define DATACIRCUITTRANSMISSIONMODE_DUPLEX       1
#define DATACIRCUITTRANSMISSIONMODE_HALF_DUPLEX  2

#define SLPPMADMINISTRATIVESTATE_LOCKED          0
#define SLPPMADMINISTRATIVESTATE_UNLOCKED        1
#define SLPPMADMINISTRATIVESTATE_SHUTTINGDOWN    2

#define SLPCONNECTIONINTERFACETYPE_DTE           0
#define SLPCONNECTIONINTERFACETYPE_DCE           1

#define SLPCONNECTIONPROTOCOLSTATE_DISCONNECTEDPHASE 0
#define SLPCONNECTIONPROTOCOLSTATE_LINKDISCONNECTION_PHASE 1
#define SLPCONNECTIONPROTOCOLSTATE_LINK_SET_UP_PHASE 2
#define SLPCONNECTIONPROTOCOLSTATE_INFORMATION_TRANSFER_PHASE 3
#define SLPCONNECTIONPROTOCOLSTATE_FRAME_REJECT_CONDITION 4
#define SLPCONNECTIONPROTOCOLSTATE_BUSY_CONDITION 5
#define SLPCONNECTIONPROTOCOLSTATE_SENT_REJECT_CONDITION 6
#define SLPCONNECTIONPROTOCOLSTATE_SYSTEM_PARAMETERS_AND_ERROR_RECOVERY 7

#define SLPCONNECTIONADMINISTRATIVESTATE_LOCKED  0
#define SLPCONNECTIONADMINISTRATIVESTATE_UNLOCKED 1
#define SLPCONNECTIONADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SLPCONNECTIONOPERATIONALSTATE_DISABLED   0
#define SLPCONNECTIONOPERATIONALSTATE_ENABLED    1

#define SLPCONNECTIONUSAGESTATE_IDLE             0
#define SLPCONNECTIONUSAGESTATE_ACTIVE           1
#define SLPCONNECTIONUSAGESTATE_BUSY             2

#define SLPCONNECTIONPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLPCONNECTIONPROCEDURALSTATUS_NOTINITIALIZED 1
#define SLPCONNECTIONPROCEDURALSTATUS_INITIALIZING 2
#define SLPCONNECTIONPROCEDURALSTATUS_REPORTING  3
#define SLPCONNECTIONPROCEDURALSTATUS_TERMINATING 4

#define SLPCONNECTIONALARMSTATUS_UNDERREPAIR     0
#define SLPCONNECTIONALARMSTATUS_CRITICAL        1
#define SLPCONNECTIONALARMSTATUS_MAJOR           2
#define SLPCONNECTIONALARMSTATUS_MINOR           3
#define SLPCONNECTIONALARMSTATUS_ALARMOUTSTANDING 4

#define SLPCONNECTIONIVMOINTERFACETYPE_DTE       0
#define SLPCONNECTIONIVMOINTERFACETYPE_DCE       1

#define MACOPERATIONALSTATE_DISABLED             0
#define MACOPERATIONALSTATE_ENABLED              1

#define LLCSTATIONSUPPORTEDSERVICESTYPES_TYPE1   0
#define LLCSTATIONSUPPORTEDSERVICESTYPES_TYPE2   1
#define LLCSTATIONSUPPORTEDSERVICESTYPES_TYPE3INITIATE 2
#define LLCSTATIONSUPPORTEDSERVICESTYPES_TYPE3RECEIVEDATA 3
#define LLCSTATIONSUPPORTEDSERVICESTYPES_TYPE3RETURNDATA 4

#define LLCSTATIONSTATUS_UP                      0
#define LLCSTATIONSTATUS_DOWN                    1
#define LLCSTATIONSTATUS_OTHER                   2

#define LLCSTATIONSTRINDICATOR_NSR               0
#define LLCSTATIONSTRINDICATOR_STE               1

#define LLCSAPRDE_TRUE                           1
#define LLCSAPRDE_FALSE                          2

#define RDESETUPAGINGENABLED_TRUE                1
#define RDESETUPAGINGENABLED_FALSE               2

#define RDESETUPRDEHOLD_TRUE                     1
#define RDESETUPRDEHOLD_FALSE                    2

#define RDESETUPRDEREPLACE_TRUE                  1
#define RDESETUPRDEREPLACE_FALSE                 2

#define RDESETUPRESETONTESTENABLED_TRUE          1
#define RDESETUPRESETONTESTENABLED_FALSE         2

#define LLCCONNECTION2OPTIONALTOLERATIONIPDUS_TRUE 1
#define LLCCONNECTION2OPTIONALTOLERATIONIPDUS_FALSE 2

#define LLCCONNECTION2PROTOCOLSTATE_DISCONNECTEDPHASE 0
#define LLCCONNECTION2PROTOCOLSTATE_LINKDICONNECTION_PHASE 1
#define LLCCONNECTION2PROTOCOLSTATE_LINK_SET_UP_PHASE 2
#define LLCCONNECTION2PROTOCOLSTATE_INFORMATION_TRANSFER_PHASE 3
#define LLCCONNECTION2PROTOCOLSTATE_FRAME_REJECT_CONDITION 4
#define LLCCONNECTION2PROTOCOLSTATE_BUSY_CONDITION 5
#define LLCCONNECTION2PROTOCOLSTATE_SENT_REJECT_CONDITION 6
#define LLCCONNECTION2PROTOCOLSTATE_SYSTEM_PARAMETERS_AND_ERROR_RECOVERY 7

#define LLCCONNECTION2ADMINISTRATIVESTATE_LOCKED 0
#define LLCCONNECTION2ADMINISTRATIVESTATE_UNLOCKED 1
#define LLCCONNECTION2ADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define LLCCONNECTION2OPERATIONALSTATE_DISABLED  0
#define LLCCONNECTION2OPERATIONALSTATE_ENABLED   1

#define LLCCONNECTION2USAGESTATE_IDLE            0
#define LLCCONNECTION2USAGESTATE_ACTIVE          1
#define LLCCONNECTION2USAGESTATE_BUSY            2

#define LLCCONNECTION2PROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define LLCCONNECTION2PROCEDURALSTATUS_NOTINITIALIZED 1
#define LLCCONNECTION2PROCEDURALSTATUS_INITIALIZING 2
#define LLCCONNECTION2PROCEDURALSTATUS_REPORTING 3
#define LLCCONNECTION2PROCEDURALSTATUS_TERMINATING 4

#define LLCCONNECTION2ALARMSTATUS_UNDERREPAIR    0
#define LLCCONNECTION2ALARMSTATUS_CRITICAL       1
#define LLCCONNECTION2ALARMSTATUS_MAJOR          2
#define LLCCONNECTION2ALARMSTATUS_MINOR          3
#define LLCCONNECTION2ALARMSTATUS_ALARMOUTSTANDING 4

#define LLCCONNECTION2IVMOOPTIONALTOLERATIONIPDUS_TRUE 1
#define LLCCONNECTION2IVMOOPTIONALTOLERATIONIPDUS_FALSE 2

#define LLCCONNECTIONLESSACKRECEIVERESOURCES_TRUE 1
#define LLCCONNECTIONLESSACKRECEIVERESOURCES_FALSE 2

#define NETWORKENTITYSYSTEMTYPES_ES              0
#define NETWORKENTITYSYSTEMTYPES_IS              1

#define CLNSADMINISTRATIVESTATE_LOCKED           0
#define CLNSADMINISTRATIVESTATE_UNLOCKED         1
#define CLNSADMINISTRATIVESTATE_SHUTTINGDOWN     2

#define CLNSOPERATIONALSYSTEMTYPE_ES             0
#define CLNSOPERATIONALSYSTEMTYPE_IS             1

#define CLNSENABLECHECKSUM_TRUE                  1
#define CLNSENABLECHECKSUM_FALSE                 2

#define CLNSISISL1STATE_OFF                      0
#define CLNSISISL1STATE_ON                       1
#define CLNSISISL1STATE_WAITING                  2

#define CLNSISISLEVEL2L2STATE_OFF                0
#define CLNSISISLEVEL2L2STATE_ON                 1
#define CLNSISISLEVEL2L2STATE_WAITING            2

#define LINKAGEOPERATIONALSTATE_DISABLED         0
#define LINKAGEOPERATIONALSTATE_ENABLED          1

#define LINKAGEADMINISTRATIVESTATE_LOCKED        0
#define LINKAGEADMINISTRATIVESTATE_UNLOCKED      1
#define LINKAGEADMINISTRATIVESTATE_SHUTTINGDOWN  2

#define LINKAGEENABLECHECKSUM_TRUE               1
#define LINKAGEENABLECHECKSUM_FALSE              2

#define LINKAGEISISMANUALL2ONLYMODE_TRUE         1
#define LINKAGEISISMANUALL2ONLYMODE_FALSE        2

#define CONSADMINISTRATIVESTATE_LOCKED           0
#define CONSADMINISTRATIVESTATE_UNLOCKED         1
#define CONSADMINISTRATIVESTATE_SHUTTINGDOWN     2

#define CONSOPERATIONALSYSTEMTYPE_ES             0
#define CONSOPERATIONALSYSTEMTYPE_IS             1

#define X25PLEOPERATIONALSTATE_DISABLED          0
#define X25PLEOPERATIONALSTATE_ENABLED           1

#define X25PLEADMINISTRATIVESTATE_LOCKED         0
#define X25PLEADMINISTRATIVESTATE_UNLOCKED       1
#define X25PLEADMINISTRATIVESTATE_SHUTTINGDOWN   2

#define X25PLEMODE_DTE                           0
#define X25PLEMODE_DCE                           1
#define X25PLEMODE_DTEASDCE                      2

#define X25PLEINTERFACEMODE_DTE                  0
#define X25PLEINTERFACEMODE_DCE                  1
#define X25PLEINTERFACEMODE_DTEASDCE             2

#define X25PLECALLDEFLECTIONSUBSCRIPTION_TRUE    1
#define X25PLECALLDEFLECTIONSUBSCRIPTION_FALSE   2

#define X25PLEREGISTRATIONPERMITTED_TRUE         1
#define X25PLEREGISTRATIONPERMITTED_FALSE        2

#define X25PLE_DTECALLDEFLECTIONSUBSCRIPTION_TRUE 1
#define X25PLE_DTECALLDEFLECTIONSUBSCRIPTION_FALSE 2

#define X25PLE_DTEREGISTRATIONPERMITTED_TRUE     1
#define X25PLE_DTEREGISTRATIONPERMITTED_FALSE    2

#define X25PLE_DCECUG_TRUE                       1
#define X25PLE_DCECUG_FALSE                      2

#define X25PLE_DCEFASTSELECTACCEPTANCE_TRUE      1
#define X25PLE_DCEFASTSELECTACCEPTANCE_FALSE     2

#define X25PLE_DCEINCOMINGCALLSBARRED_TRUE       1
#define X25PLE_DCEINCOMINGCALLSBARRED_FALSE      2

#define X25PLE_DCEONEWAYLOGICALCHANNELOUTGOING_TRUE 1
#define X25PLE_DCEONEWAYLOGICALCHANNELOUTGOING_FALSE 2

#define X25PLE_DCEOUTGOINGCALLSBARRED_TRUE       1
#define X25PLE_DCEOUTGOINGCALLSBARRED_FALSE      2

#define X25PLE_DCEBILATERALCUG_TRUE              1
#define X25PLE_DCEBILATERALCUG_FALSE             2

#define X25PLE_DCEBILATERALCUGWITHOUTGOINGACCESS_TRUE 1
#define X25PLE_DCEBILATERALCUGWITHOUTGOINGACCESS_FALSE 2

#define X25PLE_DCECALLDEFLECTIONSUBSCRIPTION_TRUE 1
#define X25PLE_DCECALLDEFLECTIONSUBSCRIPTION_FALSE 2

#define X25PLE_DCECALLREDIRECTION_TRUE           1
#define X25PLE_DCECALLREDIRECTION_FALSE          2

#define X25PLE_DCECHARGINGINFORMATION_TRUE       1
#define X25PLE_DCECHARGINGINFORMATION_FALSE      2

#define X25PLE_DCECUGWITHINCOMINGACCESS_TRUE     1
#define X25PLE_DCECUGWITHINCOMINGACCESS_FALSE    2

#define X25PLE_DCECUGWITHOUTGOINGACCESS_TRUE     1
#define X25PLE_DCECUGWITHOUTGOINGACCESS_FALSE    2

#define X25PLE_DCEDBITMODIFICATION_TRUE          1
#define X25PLE_DCEDBITMODIFICATION_FALSE         2

#define X25PLE_DCEHUNTGROUP_TRUE                 1
#define X25PLE_DCEHUNTGROUP_FALSE                2

#define X25PLE_DCEINCOMINGCALLBARREDWITHINCUG_TRUE 1
#define X25PLE_DCEINCOMINGCALLBARREDWITHINCUG_FALSE 2

#define X25PLE_DCELOCALCHARGINGPREVENTION_TRUE   1
#define X25PLE_DCELOCALCHARGINGPREVENTION_FALSE  2

#define X25PLE_DCENUIOVERRIDE_TRUE               1
#define X25PLE_DCENUIOVERRIDE_FALSE              2

#define X25PLE_DCENUISUBSCRIPTION_TRUE           1
#define X25PLE_DCENUISUBSCRIPTION_FALSE          2

#define X25PLE_DCEONEWAYLOGICALCHANNELINCOMING_TRUE 1
#define X25PLE_DCEONEWAYLOGICALCHANNELINCOMING_FALSE 2

#define X25PLE_DCEONLINEFACILITYREGISTRATION_TRUE 1
#define X25PLE_DCEONLINEFACILITYREGISTRATION_FALSE 2

#define X25PLE_DCEOUTGOINGCALLBARREDWITHINCUG_TRUE 1
#define X25PLE_DCEOUTGOINGCALLBARREDWITHINCUG_FALSE 2

#define X25PLE_DCEPACKETRETRANSMISSION_TRUE      1
#define X25PLE_DCEPACKETRETRANSMISSION_FALSE     2

#define X25PLE_DCEREVERSECHARGINGACCEPTANCE_TRUE 1
#define X25PLE_DCEREVERSECHARGINGACCEPTANCE_FALSE 2

#define X25PLE_DCEROASUBSCRIPTION_TRUE           1
#define X25PLE_DCEROASUBSCRIPTION_FALSE          2

#define X25PLEIVMOINTERFACEMODE_DTE              0
#define X25PLEIVMOINTERFACEMODE_DCE              1
#define X25PLEIVMOINTERFACEMODE_DTEASDCE         2

#define X25PLEIVMOCALLDEFLECTIONSUBSCRIPTION_TRUE 1
#define X25PLEIVMOCALLDEFLECTIONSUBSCRIPTION_FALSE 2

#define X25PLEIVMOREGISTRATIONPERMITTED_TRUE     1
#define X25PLEIVMOREGISTRATIONPERMITTED_FALSE    2

#define X25PLEIVMO_DTECALLDEFLECTIONSUBSCRIPTION_TRUE 1
#define X25PLEIVMO_DTECALLDEFLECTIONSUBSCRIPTION_FALSE 2

#define X25PLEIVMO_DTEREGISTRATIONPERMITTED_TRUE 1
#define X25PLEIVMO_DTEREGISTRATIONPERMITTED_FALSE 2

#define PERMANENTVIRTUALCIRCUIT_DCEOPERATIONALSTATE_DISABLED 0
#define PERMANENTVIRTUALCIRCUIT_DCEOPERATIONALSTATE_ENABLED 1

#define VIRTUALCALLIVMOFASTSELECT_NOTSPECIFIED   0
#define VIRTUALCALLIVMOFASTSELECT_FASTSELECT     1
#define VIRTUALCALLIVMOFASTSELECT_FASTSELECTWITHRESTRICTEDRESPONSE 2
#define VIRTUALCALLIVMOFASTSELECT_NOFASTSELECT   3

#define VIRTUALCALL_DTEFASTSELECT_NOTSPECIFIED   0
#define VIRTUALCALL_DTEFASTSELECT_FASTSELECT     1
#define VIRTUALCALL_DTEFASTSELECT_FASTSELECTWITHRESTRICTEDRESPONSE 2
#define VIRTUALCALL_DTEFASTSELECT_NOFASTSELECT   3

#define VIRTUALCALL_DCEFASTSELECT_NOTSPECIFIED   0
#define VIRTUALCALL_DCEFASTSELECT_FASTSELECT     1
#define VIRTUALCALL_DCEFASTSELECT_FASTSELECTWITHRESTRICTEDRESPONSE 2
#define VIRTUALCALL_DCEFASTSELECT_NOFASTSELECT   3

#define VIRTUALCALL_DCECALLREDIRECTIONDEFLECTIONNOTIFICATION_TRUE 1
#define VIRTUALCALL_DCECALLREDIRECTIONDEFLECTIONNOTIFICATION_FALSE 2

#define VIRTUALCALL_DCECALLEDLINEADDRESSMODIFIEDNOTIFICATION_TRUE 1
#define VIRTUALCALL_DCECALLEDLINEADDRESSMODIFIEDNOTIFICATION_FALSE 2

#define ADJACENCYSTATE_INITIALIZING              0
#define ADJACENCYSTATE_UP                        1
#define ADJACENCYSTATE_FAILED                    2
#define ADJACENCYSTATE_DOWN                      3

#define NEIGHBOURSYSTEMTYPE_UNKNOWN              0
#define NEIGHBOURSYSTEMTYPE_ENDSYSTEM            1
#define NEIGHBOURSYSTEMTYPE_INTERMEDIATESYSTEM   2
#define NEIGHBOURSYSTEMTYPE_L1INTERMEDIATESYSTEM 3
#define NEIGHBOURSYSTEMTYPE_L2INTERMEIDATESYSTEM 4

#define ADJACENCYUSAGE_UNDEFINED                 0
#define ADJACENCYUSAGE_LEVEL1                    1
#define ADJACENCYUSAGE_LEVEL2                    2
#define ADJACENCYUSAGE_LEVEL1AND2                3

#define DESTINATIONSYSTEMMETRICTYPE_DEFAULT      0
#define DESTINATIONSYSTEMMETRICTYPE_DELAY        1
#define DESTINATIONSYSTEMMETRICTYPE_EXPENSE      2
#define DESTINATIONSYSTEMMETRICTYPE_ERROR        3

#define REACHABLEADDRESSMAPPINGTYPE_NONE         0
#define REACHABLEADDRESSMAPPINGTYPE_EXPLICIT     1
#define REACHABLEADDRESSMAPPINGTYPE_EXTRACTIDI   2
#define REACHABLEADDRESSMAPPINGTYPE_EXTRACTDSP   3

#define REACHABLEADDRESSDEFAULTMETRICTYPE_INTERNAL 0
#define REACHABLEADDRESSDEFAULTMETRICTYPE_EXTERNAL 1

#define REACHABLEADDRESSDELAYMETRICTYPE_INTERNAL 0
#define REACHABLEADDRESSDELAYMETRICTYPE_EXTERNAL 1

#define REACHABLEADDRESSEXPENSEMETRICTYPE_INTERNAL 0
#define REACHABLEADDRESSEXPENSEMETRICTYPE_EXTERNAL 1

#define REACHABLEADDRESSERRORMETRICTYPE_INTERNAL 0
#define REACHABLEADDRESSERRORMETRICTYPE_EXTERNAL 1

#define REACHABLEADDRESSOPERATIONALSTATE_DISABLED 0
#define REACHABLEADDRESSOPERATIONALSTATE_ENABLED 1

#define REACHABLEADDRESSADMINISTRATIVESTATE_LOCKED 0
#define REACHABLEADDRESSADMINISTRATIVESTATE_UNLOCKED 1
#define REACHABLEADDRESSADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define SLPCONNECTIONDEFAULTINTERFACETYPE_DTE    0
#define SLPCONNECTIONDEFAULTINTERFACETYPE_DCE    1

#define LLCCONNECTION2DEFAULTOPTIONALTOLERATIONIPDUS_TRUE 1
#define LLCCONNECTION2DEFAULTOPTIONALTOLERATIONIPDUS_FALSE 2

/* function prototypes */
void init_dlMIB(void);
void deinit_dlMIB(void);
int term_dlMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_dlMIB;
void parse_dlMIB(const char *, char *);
SNMPCallback store_dlMIB;
void refresh_dlMIB(void);
FindVarMethod var_communicationsEntityTable;
int communicationsEntityTable_add(struct communicationsEntityTable_data *);
int communicationsEntityTable_del(struct communicationsEntityTable_data **);
void parse_communicationsEntityTable(const char *, char *);
SNMPCallback store_communicationsEntityTable;
void refresh_communicationsEntityTable(void);
FindVarMethod var_sap1Table;
int sap1Table_add(struct sap1Table_data *);
int sap1Table_del(struct sap1Table_data **);
void parse_sap1Table(const char *, char *);
SNMPCallback store_sap1Table;
void refresh_sap1Table(void);
FindVarMethod var_sap2Table;
int sap2Table_add(struct sap2Table_data *);
int sap2Table_del(struct sap2Table_data **);
void parse_sap2Table(const char *, char *);
SNMPCallback store_sap2Table;
void refresh_sap2Table(void);
FindVarMethod var_clProtocolMachineTable;
int clProtocolMachineTable_add(struct clProtocolMachineTable_data *);
int clProtocolMachineTable_del(struct clProtocolMachineTable_data **);
void parse_clProtocolMachineTable(const char *, char *);
SNMPCallback store_clProtocolMachineTable;
void refresh_clProtocolMachineTable(void);
FindVarMethod var_coProtocolMachineTable;
int coProtocolMachineTable_add(struct coProtocolMachineTable_data *);
int coProtocolMachineTable_del(struct coProtocolMachineTable_data **);
void parse_coProtocolMachineTable(const char *, char *);
SNMPCallback store_coProtocolMachineTable;
void refresh_coProtocolMachineTable(void);
FindVarMethod var_singlePeerConnectionTable;
int singlePeerConnectionTable_add(struct singlePeerConnectionTable_data *);
int singlePeerConnectionTable_del(struct singlePeerConnectionTable_data **);
void parse_singlePeerConnectionTable(const char *, char *);
SNMPCallback store_singlePeerConnectionTable;
void refresh_singlePeerConnectionTable(void);
FindVarMethod var_physicalEntityTable;
int physicalEntityTable_add(struct physicalEntityTable_data *);
int physicalEntityTable_del(struct physicalEntityTable_data **);
void parse_physicalEntityTable(const char *, char *);
SNMPCallback store_physicalEntityTable;
void refresh_physicalEntityTable(void);
FindVarMethod var_physicalSAPTable;
int physicalSAPTable_add(struct physicalSAPTable_data *);
int physicalSAPTable_del(struct physicalSAPTable_data **);
void parse_physicalSAPTable(const char *, char *);
SNMPCallback store_physicalSAPTable;
void refresh_physicalSAPTable(void);
FindVarMethod var_dataCircuitTable;
int dataCircuitTable_add(struct dataCircuitTable_data *);
int dataCircuitTable_del(struct dataCircuitTable_data **);
void parse_dataCircuitTable(const char *, char *);
SNMPCallback store_dataCircuitTable;
void refresh_dataCircuitTable(void);
FindVarMethod var_physicalConnectionTable;
int physicalConnectionTable_add(struct physicalConnectionTable_data *);
int physicalConnectionTable_del(struct physicalConnectionTable_data **);
void parse_physicalConnectionTable(const char *, char *);
SNMPCallback store_physicalConnectionTable;
void refresh_physicalConnectionTable(void);
FindVarMethod var_datalinkEntityTable;
int datalinkEntityTable_add(struct datalinkEntityTable_data *);
int datalinkEntityTable_del(struct datalinkEntityTable_data **);
void parse_datalinkEntityTable(const char *, char *);
SNMPCallback store_datalinkEntityTable;
void refresh_datalinkEntityTable(void);
FindVarMethod var_dLSAPTable;
int dLSAPTable_add(struct dLSAPTable_data *);
int dLSAPTable_del(struct dLSAPTable_data **);
void parse_dLSAPTable(const char *, char *);
SNMPCallback store_dLSAPTable;
void refresh_dLSAPTable(void);
FindVarMethod var_lAPBDLETable;
int lAPBDLETable_add(struct lAPBDLETable_data *);
int lAPBDLETable_del(struct lAPBDLETable_data **);
void parse_lAPBDLETable(const char *, char *);
SNMPCallback store_lAPBDLETable;
void refresh_lAPBDLETable(void);
FindVarMethod var_sLPPMTable;
int sLPPMTable_add(struct sLPPMTable_data *);
int sLPPMTable_del(struct sLPPMTable_data **);
void parse_sLPPMTable(const char *, char *);
SNMPCallback store_sLPPMTable;
void refresh_sLPPMTable(void);
FindVarMethod var_sLPConnectionTable;
int sLPConnectionTable_add(struct sLPConnectionTable_data *);
int sLPConnectionTable_del(struct sLPConnectionTable_data **);
void parse_sLPConnectionTable(const char *, char *);
SNMPCallback store_sLPConnectionTable;
void refresh_sLPConnectionTable(void);
FindVarMethod var_sLPConnectionIVMOTable;
int sLPConnectionIVMOTable_add(struct sLPConnectionIVMOTable_data *);
int sLPConnectionIVMOTable_del(struct sLPConnectionIVMOTable_data **);
void parse_sLPConnectionIVMOTable(const char *, char *);
SNMPCallback store_sLPConnectionIVMOTable;
void refresh_sLPConnectionIVMOTable(void);
FindVarMethod var_mACDLETable;
int mACDLETable_add(struct mACDLETable_data *);
int mACDLETable_del(struct mACDLETable_data **);
void parse_mACDLETable(const char *, char *);
SNMPCallback store_mACDLETable;
void refresh_mACDLETable(void);
FindVarMethod var_mACTable;
int mACTable_add(struct mACTable_data *);
int mACTable_del(struct mACTable_data **);
void parse_mACTable(const char *, char *);
SNMPCallback store_mACTable;
void refresh_mACTable(void);
FindVarMethod var_lLCDLETable;
int lLCDLETable_add(struct lLCDLETable_data *);
int lLCDLETable_del(struct lLCDLETable_data **);
void parse_lLCDLETable(const char *, char *);
SNMPCallback store_lLCDLETable;
void refresh_lLCDLETable(void);
FindVarMethod var_lLCCLPMTable;
int lLCCLPMTable_add(struct lLCCLPMTable_data *);
int lLCCLPMTable_del(struct lLCCLPMTable_data **);
void parse_lLCCLPMTable(const char *, char *);
SNMPCallback store_lLCCLPMTable;
void refresh_lLCCLPMTable(void);
FindVarMethod var_lLCCOPMTable;
int lLCCOPMTable_add(struct lLCCOPMTable_data *);
int lLCCOPMTable_del(struct lLCCOPMTable_data **);
void parse_lLCCOPMTable(const char *, char *);
SNMPCallback store_lLCCOPMTable;
void refresh_lLCCOPMTable(void);
FindVarMethod var_resourceTypeIdTable;
int resourceTypeIdTable_add(struct resourceTypeIdTable_data *);
int resourceTypeIdTable_del(struct resourceTypeIdTable_data **);
void parse_resourceTypeIdTable(const char *, char *);
SNMPCallback store_resourceTypeIdTable;
void refresh_resourceTypeIdTable(void);
FindVarMethod var_lLCStationTable;
int lLCStationTable_add(struct lLCStationTable_data *);
int lLCStationTable_del(struct lLCStationTable_data **);
void parse_lLCStationTable(const char *, char *);
SNMPCallback store_lLCStationTable;
void refresh_lLCStationTable(void);
FindVarMethod var_lLCSAPTable;
int lLCSAPTable_add(struct lLCSAPTable_data *);
int lLCSAPTable_del(struct lLCSAPTable_data **);
void parse_lLCSAPTable(const char *, char *);
SNMPCallback store_lLCSAPTable;
void refresh_lLCSAPTable(void);
FindVarMethod var_rDESetupTable;
int rDESetupTable_add(struct rDESetupTable_data *);
int rDESetupTable_del(struct rDESetupTable_data **);
void parse_rDESetupTable(const char *, char *);
SNMPCallback store_rDESetupTable;
void refresh_rDESetupTable(void);
FindVarMethod var_rDEPairTable;
int rDEPairTable_add(struct rDEPairTable_data *);
int rDEPairTable_del(struct rDEPairTable_data **);
void parse_rDEPairTable(const char *, char *);
SNMPCallback store_rDEPairTable;
void refresh_rDEPairTable(void);
FindVarMethod var_lLCConnectionLessTable;
int lLCConnectionLessTable_add(struct lLCConnectionLessTable_data *);
int lLCConnectionLessTable_del(struct lLCConnectionLessTable_data **);
void parse_lLCConnectionLessTable(const char *, char *);
SNMPCallback store_lLCConnectionLessTable;
void refresh_lLCConnectionLessTable(void);
FindVarMethod var_lLCConnection2Table;
int lLCConnection2Table_add(struct lLCConnection2Table_data *);
int lLCConnection2Table_del(struct lLCConnection2Table_data **);
void parse_lLCConnection2Table(const char *, char *);
SNMPCallback store_lLCConnection2Table;
void refresh_lLCConnection2Table(void);
FindVarMethod var_lLCConnection2IVMOTable;
int lLCConnection2IVMOTable_add(struct lLCConnection2IVMOTable_data *);
int lLCConnection2IVMOTable_del(struct lLCConnection2IVMOTable_data **);
void parse_lLCConnection2IVMOTable(const char *, char *);
SNMPCallback store_lLCConnection2IVMOTable;
void refresh_lLCConnection2IVMOTable(void);
FindVarMethod var_lLCConnectionlessAckTable;
int lLCConnectionlessAckTable_add(struct lLCConnectionlessAckTable_data *);
int lLCConnectionlessAckTable_del(struct lLCConnectionlessAckTable_data **);
void parse_lLCConnectionlessAckTable(const char *, char *);
SNMPCallback store_lLCConnectionlessAckTable;
void refresh_lLCConnectionlessAckTable(void);
FindVarMethod var_lLCConnectionlessAckIVMOTable;
int lLCConnectionlessAckIVMOTable_add(struct lLCConnectionlessAckIVMOTable_data *);
int lLCConnectionlessAckIVMOTable_del(struct lLCConnectionlessAckIVMOTable_data **);
void parse_lLCConnectionlessAckIVMOTable(const char *, char *);
SNMPCallback store_lLCConnectionlessAckIVMOTable;
void refresh_lLCConnectionlessAckIVMOTable(void);
FindVarMethod var_networkEntityTable;
int networkEntityTable_add(struct networkEntityTable_data *);
int networkEntityTable_del(struct networkEntityTable_data **);
void parse_networkEntityTable(const char *, char *);
SNMPCallback store_networkEntityTable;
void refresh_networkEntityTable(void);
FindVarMethod var_nSAPTable;
int nSAPTable_add(struct nSAPTable_data *);
int nSAPTable_del(struct nSAPTable_data **);
void parse_nSAPTable(const char *, char *);
SNMPCallback store_nSAPTable;
void refresh_nSAPTable(void);
FindVarMethod var_cLNSTable;
int cLNSTable_add(struct cLNSTable_data *);
int cLNSTable_del(struct cLNSTable_data **);
void parse_cLNSTable(const char *, char *);
SNMPCallback store_cLNSTable;
void refresh_cLNSTable(void);
FindVarMethod var_cLNSISISTable;
int cLNSISISTable_add(struct cLNSISISTable_data *);
int cLNSISISTable_del(struct cLNSISISTable_data **);
void parse_cLNSISISTable(const char *, char *);
SNMPCallback store_cLNSISISTable;
void refresh_cLNSISISTable(void);
FindVarMethod var_cLNSISISLevel2Table;
int cLNSISISLevel2Table_add(struct cLNSISISLevel2Table_data *);
int cLNSISISLevel2Table_del(struct cLNSISISLevel2Table_data **);
void parse_cLNSISISLevel2Table(const char *, char *);
SNMPCallback store_cLNSISISLevel2Table;
void refresh_cLNSISISLevel2Table(void);
FindVarMethod var_linkageTable;
int linkageTable_add(struct linkageTable_data *);
int linkageTable_del(struct linkageTable_data **);
void parse_linkageTable(const char *, char *);
SNMPCallback store_linkageTable;
void refresh_linkageTable(void);
FindVarMethod var_cONSTable;
int cONSTable_add(struct cONSTable_data *);
int cONSTable_del(struct cONSTable_data **);
void parse_cONSTable(const char *, char *);
SNMPCallback store_cONSTable;
void refresh_cONSTable(void);
FindVarMethod var_networkConnectionTable;
int networkConnectionTable_add(struct networkConnectionTable_data *);
int networkConnectionTable_del(struct networkConnectionTable_data **);
void parse_networkConnectionTable(const char *, char *);
SNMPCallback store_networkConnectionTable;
void refresh_networkConnectionTable(void);
FindVarMethod var_x25PLETable;
int x25PLETable_add(struct x25PLETable_data *);
int x25PLETable_del(struct x25PLETable_data **);
void parse_x25PLETable(const char *, char *);
SNMPCallback store_x25PLETable;
void refresh_x25PLETable(void);
FindVarMethod var_x25PLE - DTETable;
int x25PLE - DTETable_add(struct x25PLE -DTETable_data *);
int x25PLE - DTETable_del(struct x25PLE -DTETable_data **);
void parse_x25PLE - DTETable(const char *, char *);
SNMPCallback store_x25PLE - DTETable;
void refresh_x25PLE - DTETable(void);
FindVarMethod var_x25PLE - DCETable;
int x25PLE - DCETable_add(struct x25PLE -DCETable_data *);
int x25PLE - DCETable_del(struct x25PLE -DCETable_data **);
void parse_x25PLE - DCETable(const char *, char *);
SNMPCallback store_x25PLE - DCETable;
void refresh_x25PLE - DCETable(void);
FindVarMethod var_x25PLEIVMOTable;
int x25PLEIVMOTable_add(struct x25PLEIVMOTable_data *);
int x25PLEIVMOTable_del(struct x25PLEIVMOTable_data **);
void parse_x25PLEIVMOTable(const char *, char *);
SNMPCallback store_x25PLEIVMOTable;
void refresh_x25PLEIVMOTable(void);
FindVarMethod var_x25PLEIVMO - DTETable;
int x25PLEIVMO - DTETable_add(struct x25PLEIVMO -DTETable_data *);
int x25PLEIVMO - DTETable_del(struct x25PLEIVMO -DTETable_data **);
void parse_x25PLEIVMO - DTETable(const char *, char *);
SNMPCallback store_x25PLEIVMO - DTETable;
void refresh_x25PLEIVMO - DTETable(void);
FindVarMethod var_x25PLEIVMO - DCETable;
int x25PLEIVMO - DCETable_add(struct x25PLEIVMO -DCETable_data *);
int x25PLEIVMO - DCETable_del(struct x25PLEIVMO -DCETable_data **);
void parse_x25PLEIVMO - DCETable(const char *, char *);
SNMPCallback store_x25PLEIVMO - DCETable;
void refresh_x25PLEIVMO - DCETable(void);
FindVarMethod var_virtualCallTable;
int virtualCallTable_add(struct virtualCallTable_data *);
int virtualCallTable_del(struct virtualCallTable_data **);
void parse_virtualCallTable(const char *, char *);
SNMPCallback store_virtualCallTable;
void refresh_virtualCallTable(void);
FindVarMethod var_virtualCircuitTable;
int virtualCircuitTable_add(struct virtualCircuitTable_data *);
int virtualCircuitTable_del(struct virtualCircuitTable_data **);
void parse_virtualCircuitTable(const char *, char *);
SNMPCallback store_virtualCircuitTable;
void refresh_virtualCircuitTable(void);
FindVarMethod var_virtualCircuit - DTETable;
int virtualCircuit - DTETable_add(struct virtualCircuit -DTETable_data *);
int virtualCircuit - DTETable_del(struct virtualCircuit -DTETable_data **);
void parse_virtualCircuit - DTETable(const char *, char *);
SNMPCallback store_virtualCircuit - DTETable;
void refresh_virtualCircuit - DTETable(void);
FindVarMethod var_virtualCircuit - DCETable;
int virtualCircuit - DCETable_add(struct virtualCircuit -DCETable_data *);
int virtualCircuit - DCETable_del(struct virtualCircuit -DCETable_data **);
void parse_virtualCircuit - DCETable(const char *, char *);
SNMPCallback store_virtualCircuit - DCETable;
void refresh_virtualCircuit - DCETable(void);
FindVarMethod var_permanentVirtualCircuitTable;
int permanentVirtualCircuitTable_add(struct permanentVirtualCircuitTable_data *);
int permanentVirtualCircuitTable_del(struct permanentVirtualCircuitTable_data **);
void parse_permanentVirtualCircuitTable(const char *, char *);
SNMPCallback store_permanentVirtualCircuitTable;
void refresh_permanentVirtualCircuitTable(void);
FindVarMethod var_permanentVirtualCircuit - DTETable;
int permanentVirtualCircuit - DTETable_add(struct permanentVirtualCircuit -DTETable_data *);
int permanentVirtualCircuit - DTETable_del(struct permanentVirtualCircuit -DTETable_data **);
void parse_permanentVirtualCircuit - DTETable(const char *, char *);
SNMPCallback store_permanentVirtualCircuit - DTETable;
void refresh_permanentVirtualCircuit - DTETable(void);
FindVarMethod var_permanentVirtualCircuit - DCETable;
int permanentVirtualCircuit - DCETable_add(struct permanentVirtualCircuit -DCETable_data *);
int permanentVirtualCircuit - DCETable_del(struct permanentVirtualCircuit -DCETable_data **);
void parse_permanentVirtualCircuit - DCETable(const char *, char *);
SNMPCallback store_permanentVirtualCircuit - DCETable;
void refresh_permanentVirtualCircuit - DCETable(void);
FindVarMethod var_virtualCallIVMOTable;
int virtualCallIVMOTable_add(struct virtualCallIVMOTable_data *);
int virtualCallIVMOTable_del(struct virtualCallIVMOTable_data **);
void parse_virtualCallIVMOTable(const char *, char *);
SNMPCallback store_virtualCallIVMOTable;
void refresh_virtualCallIVMOTable(void);
FindVarMethod var_switchedVirtualCallTable;
int switchedVirtualCallTable_add(struct switchedVirtualCallTable_data *);
int switchedVirtualCallTable_del(struct switchedVirtualCallTable_data **);
void parse_switchedVirtualCallTable(const char *, char *);
SNMPCallback store_switchedVirtualCallTable;
void refresh_switchedVirtualCallTable(void);
FindVarMethod var_virtualCall - DTETable;
int virtualCall - DTETable_add(struct virtualCall -DTETable_data *);
int virtualCall - DTETable_del(struct virtualCall -DTETable_data **);
void parse_virtualCall - DTETable(const char *, char *);
SNMPCallback store_virtualCall - DTETable;
void refresh_virtualCall - DTETable(void);
FindVarMethod var_virtualCall - DCETable;
int virtualCall - DCETable_add(struct virtualCall -DCETable_data *);
int virtualCall - DCETable_del(struct virtualCall -DCETable_data **);
void parse_virtualCall - DCETable(const char *, char *);
SNMPCallback store_virtualCall - DCETable;
void refresh_virtualCall - DCETable(void);
FindVarMethod var_dSeriesCountsTable;
int dSeriesCountsTable_add(struct dSeriesCountsTable_data *);
int dSeriesCountsTable_del(struct dSeriesCountsTable_data **);
void parse_dSeriesCountsTable(const char *, char *);
SNMPCallback store_dSeriesCountsTable;
void refresh_dSeriesCountsTable(void);
FindVarMethod var_adjacencyTable;
int adjacencyTable_add(struct adjacencyTable_data *);
int adjacencyTable_del(struct adjacencyTable_data **);
void parse_adjacencyTable(const char *, char *);
SNMPCallback store_adjacencyTable;
void refresh_adjacencyTable(void);
FindVarMethod var_virtualAdjacencyTable;
int virtualAdjacencyTable_add(struct virtualAdjacencyTable_data *);
int virtualAdjacencyTable_del(struct virtualAdjacencyTable_data **);
void parse_virtualAdjacencyTable(const char *, char *);
SNMPCallback store_virtualAdjacencyTable;
void refresh_virtualAdjacencyTable(void);
FindVarMethod var_destinationTable;
int destinationTable_add(struct destinationTable_data *);
int destinationTable_del(struct destinationTable_data **);
void parse_destinationTable(const char *, char *);
SNMPCallback store_destinationTable;
void refresh_destinationTable(void);
FindVarMethod var_destinationSystemTable;
int destinationSystemTable_add(struct destinationSystemTable_data *);
int destinationSystemTable_del(struct destinationSystemTable_data **);
void parse_destinationSystemTable(const char *, char *);
SNMPCallback store_destinationSystemTable;
void refresh_destinationSystemTable(void);
FindVarMethod var_destinationAreaTable;
int destinationAreaTable_add(struct destinationAreaTable_data *);
int destinationAreaTable_del(struct destinationAreaTable_data **);
void parse_destinationAreaTable(const char *, char *);
SNMPCallback store_destinationAreaTable;
void refresh_destinationAreaTable(void);
FindVarMethod var_reachableAddressTable;
int reachableAddressTable_add(struct reachableAddressTable_data *);
int reachableAddressTable_del(struct reachableAddressTable_data **);
void parse_reachableAddressTable(const char *, char *);
SNMPCallback store_reachableAddressTable;
void refresh_reachableAddressTable(void);

WriteMethod write_physicalEntityPhysicalEntityTitles;
WriteMethod write_dataCircuitBitErrorsThreshold;
WriteMethod write_dataCircuitType;
WriteMethod write_dataCircuitPhysicalMediaNames;
WriteMethod write_dataCircuitPhysicalInterfaceType;
WriteMethod write_dataCircuitPhysicalInterfaceStandard;
WriteMethod write_dataCircuitSynchronizationMode;
WriteMethod write_dataCircuitTransmissionCoding;
WriteMethod write_dataCircuitTransmissionMode;
WriteMethod write_dataCircuitTransmissionRate;
WriteMethod write_dataCircuitRowStatus;
WriteMethod write_physicalConnectionEndpointIdentifier;
WriteMethod write_physicalConnectionPortNumber;
WriteMethod write_physicalConnectionRowStatus;
WriteMethod write_datalinkEntityProviderEntityNames;
WriteMethod write_datalinkEntityRowStatus;
WriteMethod write_dLSAPRowStatus;
WriteMethod write_lAPBDLEmT1Timer;
WriteMethod write_lAPBDLEmT3Timer;
WriteMethod write_lAPBDLEmW;
WriteMethod write_lAPBDLEmXSend;
WriteMethod write_lAPBDLEmXReceive;
WriteMethod write_lAPBDLEmT2Timer;
WriteMethod write_lAPBDLERowStatus;
WriteMethod write_sLPPMadministrativeState;
WriteMethod write_sLPPMRowStatus;
WriteMethod write_sLPConnectionInterfaceType;
WriteMethod write_sLPConnectionK;
WriteMethod write_sLPConnectionN1;
WriteMethod write_sLPConnectionN2;
WriteMethod write_sLPConnectionSequenceModulus;
WriteMethod write_sLPConnectionT1Timer;
WriteMethod write_sLPConnectionT2Timer;
WriteMethod write_sLPConnectionT3Timer;
WriteMethod write_sLPConnectionT4Timer;
WriteMethod write_sLPConnectionAdministrativeState;
WriteMethod write_sLPConnectionRowStatus;
WriteMethod write_sLPConnectionIVMOinterfaceType;
WriteMethod write_sLPConnectionIVMOk;
WriteMethod write_sLPConnectionIVMOn1;
WriteMethod write_sLPConnectionIVMOn2;
WriteMethod write_sLPConnectionIVMOsequenceModulus;
WriteMethod write_sLPConnectionIVMOt1Timer;
WriteMethod write_sLPConnectionIVMOt2Timer;
WriteMethod write_sLPConnectionIVMOt3Timer;
WriteMethod write_sLPConnectionIVMOt4Timer;
WriteMethod write_sLPConnectionIVMORowStatus;
WriteMethod write_mACDLERowStatus;
WriteMethod write_mACRowStatus;
WriteMethod write_lLCDLERowStatus;
WriteMethod write_lLCCLPMRowStatus;
WriteMethod write_lLCCOPMRowStatus;
WriteMethod write_lLCStationLLCName;
WriteMethod write_lLCStationSupportedServicesTypes;
WriteMethod write_lLCStationType1AcknowledgeTimeoutValue;
WriteMethod write_lLCStationType1MaximumRetryCount;
WriteMethod write_lLCStationMaximumPDUN3;
WriteMethod write_lLCStationMaximumRetransmissions4;
WriteMethod write_lLCStationReceiveVariableLifetime;
WriteMethod write_lLCStationTransmitVariableLifetime;
WriteMethod write_lLCStationType3AcknowledgeTimeoutValue;
WriteMethod write_lLCStationBufferSize;
WriteMethod write_lLCStationSTRIndicator;
WriteMethod write_lLCStationVersionNumber;
WriteMethod write_rDESetupAgingEnabled;
WriteMethod write_rDESetupAgingValue;
WriteMethod write_rDESetupEnableType2Reset;
WriteMethod write_rDESetupMaximumRouteDescriptors;
WriteMethod write_rDESetupMaximumResponseTime;
WriteMethod write_rDESetupMinimumPDUSize;
WriteMethod write_rDESetupRDEHold;
WriteMethod write_rDESetupRDEReplace;
WriteMethod write_rDESetupResetOnTestEnabled;
WriteMethod write_lLCConnectionlessName;
WriteMethod write_lLCConnectionlessMaximumLLCInformationFieldSize;
WriteMethod write_lLCConnection2Name;
WriteMethod write_lLCConnection2MaximumRetransmissions;
WriteMethod write_lLCConnection2ReceivedWindowSize;
WriteMethod write_lLCConnection2SendWindowSize;
WriteMethod write_lLCConnection2AcknowledgeTimeoutValue;
WriteMethod write_lLCConnection2BusyStateTimeoutValue;
WriteMethod write_lLCConnection2PBitTimeoutValue;
WriteMethod write_lLCConnection2RejectTimeoutValue;
WriteMethod write_lLCConnection2Route;
WriteMethod write_lLCConnection2KStep;
WriteMethod write_lLCConnection2MaxSendWindowSize;
WriteMethod write_lLCConnection2OptionalTolerationIPDUs;
WriteMethod write_lLCConnection2AdministrativeState;
WriteMethod write_lLCConnection2AlarmStatus;
WriteMethod write_lLCConnection2IVMOMaximumRetransmissions;
WriteMethod write_lLCConnection2IVMOReceivedWindowSize;
WriteMethod write_lLCConnection2IVMOSendWindowSize;
WriteMethod write_lLCConnection2IVMOAcknowledgeTimeoutValue;
WriteMethod write_lLCConnection2IVMOBusyStateTimeoutValue;
WriteMethod write_lLCConnection2IVMOBitTimeoutValue;
WriteMethod write_lLCConnection2IVMORejectTimeoutValue;
WriteMethod write_lLCConnection2IVMORoute;
WriteMethod write_lLCConnection2IVMOKStep;
WriteMethod write_lLCConnection2IVMOMaxSendWindowSize;
WriteMethod write_lLCConnection2IVMOOptionalTolerationIPDUs;
WriteMethod write_lLCConnectionlessAckMaximumLLCInformationFieldSize;
WriteMethod write_lLCConnectionlessAckMaximumRetransmissions;
WriteMethod write_lLCConnectionlessAckReceiveResources;
WriteMethod write_lLCConnectionlessAckIVMOMaximumLLCInformationFieldSize;
WriteMethod write_lLCConnectionlessAckIVMOMaximumRetransmissions;
WriteMethod write_lLCConnectionlessAckIVMORowStatus;
WriteMethod write_networkEntityTitles;
WriteMethod write_networkEntitySystemTypes;
WriteMethod write_networkEntityRowStatus;
WriteMethod write_nSAPRowStatus;
WriteMethod write_cLNSAdministrativeState;
WriteMethod write_cLNSSupportedProtocols;
WriteMethod write_cLNSOperationalSystemType;
WriteMethod write_cLNSMaximumLifetime;
WriteMethod write_cLNSEnableChecksum;
WriteMethod write_cLNSRowStatus;
WriteMethod write_cONSAdministrativeState;
WriteMethod write_cONSOperationalSystemType;
WriteMethod write_cONSRowStatus;
WriteMethod write_x25PLEIVMO - DCERowStatus;
WriteMethod write_permanentVirtualCircuitRowStatus;
WriteMethod write_switchedVirtualCallRowStatus;
WriteMethod write_virtualCall - DTERowStatus;
WriteMethod write_dSeriesRowStatus;
WriteMethod write_neighbourSNPAAddress;
WriteMethod write_neighbourSystemIds;
WriteMethod write_adjacencyRowStatus;
WriteMethod write_destinationDefaultMetricPathCost;
WriteMethod write_destinationDefaultMetricOutputAdjacencies;
WriteMethod write_destinationDelayMetricPathCost;
WriteMethod write_destinationDelayMetricOutputAdjacencies;
WriteMethod write_destinationExpenseMetricPathCost;
WriteMethod write_destinationExpenseMetricOutputAdjacencies;
WriteMethod write_destinationErrorMetricPathCost;
WriteMethod write_destinationErrorMetricOutputAdjacencies;
WriteMethod write_reachableAddressPrefix;
WriteMethod write_reachableAddressMappingType;
WriteMethod write_reachableAddressDefaultMetric;
WriteMethod write_reachableAddressDelayMetric;
WriteMethod write_reachableAddressExpenseMetric;
WriteMethod write_reachableAddressErrorMetric;
WriteMethod write_reachableAddressDefaultMetricType;
WriteMethod write_reachableAddressDelayMetricType;
WriteMethod write_reachableAddressExpenseMetricType;
WriteMethod write_reachableAddressErrorMetricType;
WriteMethod write_reachableAddressAdministrativeState;
WriteMethod write_reachableAddressSNPAAddresses;
WriteMethod write_reachableAddressSNPAMask;
WriteMethod write_reachableAddressSNPAPrefix;
WriteMethod write_reachableAddressRowStatus;
WriteMethod write_sLPConnectionDefaultInterfaceType;
WriteMethod write_sLPConnectionDefaultK;
WriteMethod write_sLPConnectionDefaultN1;
WriteMethod write_sLPConnectionDefaultN2;
WriteMethod write_sLPConnectionDefaultSequenceModulus;
WriteMethod write_sLPConnectionDefaultT1Timer;
WriteMethod write_sLPConnectionDefaultT2Timer;
WriteMethod write_sLPConnectionDefaultT3Timer;
WriteMethod write_sLPConnectionDefaultT4Timer;
WriteMethod write_lLCConnection2DefaultMaximumRetransmissions;
WriteMethod write_lLCConnection2DefaultReceivedWindowSize;
WriteMethod write_lLCConnection2DefaultSendWindowSize;
WriteMethod write_lLCConnection2DefaultAcknowledgeTimeoutValue;
WriteMethod write_lLCConnection2DefaultBusyStateTimeoutValue;
WriteMethod write_lLCConnection2DefaultPBitTimeoutValue;
WriteMethod write_lLCConnection2DefaultRejectTimeoutValue;
WriteMethod write_lLCConnection2DefaultRoute;
WriteMethod write_lLCConnection2DefaultKStep;
WriteMethod write_lLCConnection2DefaultMaxSendWindowSize;
WriteMethod write_lLCConnection2DefaultOptionalTolerationIPDUs;
WriteMethod write_lLCConnectionlessAckDefaultMaximumLLCInformationFieldSize;
WriteMethod write_lLCConnectionlessAckDefaultMaximumRetransmissions;
#endif				/* __LOCAL_DLMIB_H__ */
