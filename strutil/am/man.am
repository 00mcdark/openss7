# vim: ft=automake
# =============================================================================
# 
# @(#) $RCSfile: man.am,v $ $Name:  $($Revision: 0.9.2.10 $) $Date: 2005/01/18 00:58:20 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2005/01/18 00:58:20 $ by $Author: brian $
#
# =============================================================================

#
#   Need to generate "cooked" man pages from the source man pages.  This is
#   for systems (such as debian) that will not do not do grefer on man pages.
#

man_MACROS = $(MANMACRO_PFX).macros $(MANMACRO_PFX).refs

EXTRA_DIST += \
	$(man_MACROS) \
	$(dist_noinst_MANS)

if COOKED_MANPAGES

$(man_MANS):: %: %.man
	@p=`echo $@ | sed -e 's|/[^/]*$$||'` ; \
	$(mkdir_p) $$p ; \
	echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man//' > $@ ;

$(man1_MANS):: %.1: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.1/' > $@ ;

$(man2_MANS):: %.2: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.2/' > $@ ;

$(man3_MANS):: %.3: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.3/' > $@ ;

$(man4_MANS):: %.4: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.4/' > $@ ;

$(man5_MANS):: %.5: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.5/' > $@ ;

$(man6_MANS):: %.6: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.6/' > $@ ;

$(man7_MANS):: %.7: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.7/' > $@ ;

$(man8_MANS):: %.8: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.8/' > $@ ;

$(man9_MANS):: %.9: %.man
	@echo "converting (soelim, grefer) manpage $< to $@" ; \
	cat $< | (cd $(srcdir) ; $(SOELIM) 2>/dev/null | $(REFER) 2>/dev/null) | sed -e '/^\.lf/d;/^\.\\"/d;/^\.so.*\.man/s/\.man/\.9/' > $@ ;

$(man_MANS):: $(man_MACROS)
$(man1_MANS):: $(man_MACROS)
$(man2_MANS):: $(man_MACROS)
$(man3_MANS):: $(man_MACROS)
$(man4_MANS):: $(man_MACROS)
$(man5_MANS):: $(man_MACROS)
$(man6_MANS):: $(man_MACROS)
$(man7_MANS):: $(man_MACROS)
$(man8_MANS):: $(man_MACROS)
$(man9_MANS):: $(man_MACROS)

install-manpages:

uninstall-manpages:

#EXTRA_DIST += \
#	$(man_MANS)

else

$(man_MANS): %: %.man
	@p=`echo $@ | sed -e 's|/[^/]*$$||'` ; \
	$(mkdir_p) $$p ; \
	echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man//' > $@ ;

$(man1_MANS): %.1: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.1/' > $@ ;

$(man2_MANS): %.2: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.2/' > $@ ;

$(man3_MANS): %.3: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.3/' > $@ ;

$(man4_MANS): %.4: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.4/' > $@ ;

$(man5_MANS): %.5: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.5/' > $@ ;

$(man6_MANS): %.6: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.6/' > $@ ;

$(man7_MANS): %.7: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.7/' > $@ ;

$(man8_MANS): %.8: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.8/' > $@ ;

$(man9_MANS): %.9: %.man
	@echo "converting manpage $< to $@" ; \
	cat $< | sed -e '/^\.lf/d;/^\.so.*\.man/s/\.man/\.9/' > $@ ;

install-manpages: $(man_MANS) $(man_MACROS) $(man1_MANS) $(man2_MANS) $(man3_MANS) $(man4_MANS) $(man5_MANS) $(man6_MANS) $(man7_MANS) $(man8_MANS) $(man9_MANS)
	@$(NORMAL_INSTALL)
	$(mkdir_p) $(DESTDIR)$(mandir)
	@list="$(man_MACROS)" ; if test -n "$$list" ; then \
		for f in $$list ; do \
			if test -x $$f ; then d=; else d=$(srcdir)/ ; fi ; \
			echo "$(INSTALL_DATA) $$d$$f $(DESTDIR)$(mandir)" ; \
			$(INSTALL_DATA) $$d$$f $(DESTDIR)$(mandir) ; \
		done ; \
	fi

uninstall-manpages:
	@$(NORMAL_UNINSTALL)
	rm -f $(DESTDIR)$(mandir)/$(MANMACRO_PFX).macros
	rm -f $(DESTDIR)$(mandir)/$(MANMACRO_PFX).refs

endif

clean-manpages:
	@if test -n "$(man_MANS)" ; then \
		echo "rm -f $(man_MANS)" ; \
		rm -f $(man_MANS) ; \
	fi ; \
	if test -n "$(man1_MANS)" ; then \
		echo "rm -f $(man1_MANS)" ; \
		rm -f $(man1_MANS) ; \
	fi ; \
	if test -n "$(man2_MANS)" ; then \
		echo "rm -f $(man2_MANS)" ; \
		rm -f $(man2_MANS) ; \
	fi ; \
	if test -n "$(man3_MANS)" ; then \
		echo "rm -f $(man3_MANS)" ; \
		rm -f $(man3_MANS) ; \
	fi ; \
	if test -n "$(man4_MANS)" ; then \
		echo "rm -f $(man4_MANS)" ; \
		rm -f $(man4_MANS) ; \
	fi ; \
	if test -n "$(man5_MANS)" ; then \
		echo "rm -f $(man5_MANS)" ; \
		rm -f $(man5_MANS) ; \
	fi ; \
	if test -n "$(man6_MANS)" ; then \
		echo "rm -f $(man6_MANS)" ; \
		rm -f $(man6_MANS) ; \
	fi ; \
	if test -n "$(man7_MANS)" ; then \
		echo "rm -f $(man7_MANS)" ; \
		rm -f $(man7_MANS) ; \
	fi ; \
	if test -n "$(man8_MANS)" ; then \
		echo "rm -f $(man8_MANS)" ; \
		rm -f $(man8_MANS) ; \
	fi ; \
	if test -n "$(man9_MANS)" ; then \
		echo "rm -f $(man9_MANS)" ; \
		rm -f $(man9_MANS) ; \
	fi

INSTALL_DATA_LOCAL += install-manpages

UNINSTALL_LOCAL += uninstall-manpages

CLEAN_LOCAL += clean-manpages

if COMPRESS_MANPAGES

#
# If there are compressed files in the install directory for manpages, then we will compress our
# manpages as well, unless it was specifically requested to configure that manpages not be
# compressed.  Note that for an rpm install, we have installed into a sandbox directory that should
# contain no compressed manpages and compress will be supressed.  rpm will do compression during the
# rpm install process.
#
post-manpages:
	@$(NORMAL_INSTALL)
	@if test -n "`find $(DESTDIR)$(mandir) -name \"*.gz\" 2>/dev/null`" -o -n "$(INSTALL_STRIP_FLAG)" ; then \
		if test -n "$(GZIP)" ; then \
			list="$(man_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man1_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man1/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man1/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man1/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man2_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man2/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man2/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man2/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man3_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man3/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man3/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man3/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man4_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man4/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man4/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man4/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man5_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man5/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man5/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man5/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man6_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man6/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man6/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man6/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man7_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man7/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man7/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man7/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man8_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man8/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man8/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man8/$$f ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man9_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man9/$$f ; then \
						echo "$(GZIP) -f -9 $(DESTDIR)$(mandir)/man9/$$f" ; \
						$(GZIP) -f -9 $(DESTDIR)$(mandir)/man9/$$f ; \
					fi ; \
				done ; \
			fi ; \
		fi ; \
	fi

#
# When we comrpess manpages, we must remove the compressed versions after uninstall.
#
postun-manpages:
	@$(NORMAL_UNINSTALL)
	@if test -n "`find $(DESTDIR)$(mandir) -name \"*.gz\" 2>/dev/null`" ; then \
		if test -n "$(GZIP)" ; then \
			list="$(man_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man1_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man1/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man1/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man1/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man2_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man2/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man2/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man2/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man3_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man3/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man3/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man3/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man4_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man4/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man4/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man4/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man5_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man5/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man5/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man5/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man6_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man6/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man6/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man6/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man7_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man7/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man7/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man7/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man8_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man8/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man8/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man8/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
			list="$(man9_MANS)" ; if test -n "$$list" ; then \
				for f in $$list ; do \
					if test -f $(DESTDIR)$(mandir)/man9/$$f.gz ; then \
						echo "rm -f $(DESTDIR)$(mandir)/man9/$$f.gz" ; \
						rm -f $(DESTDIR)$(mandir)/man9/$$f.gz ; \
					fi ; \
				done ; \
			fi ; \
		fi ; \
	fi

else

post-manpages:

postun-manpages:

endif

#
# The install-data-hook target is run after the files have been installed.  It is essentially
# equivalent to the rpm %post, but it is only executed when the install directory is fully
# configured for compressed manpages.  (That is, this does not run when building an rpm, because the
# manpages are installed in a temporary, unconfigured directory.)  This is for alien systems and
# embedded targets that cannot build from packages.
#
INSTALL_DATA_HOOK += post-manpages

#
# The uninstall-hook target is run after the files have been removed.  It is essentially equivalent
# to the rpm %postun, but it is only executed when the uninstall directory is fully configured for
# compressed manpages.  (That is, this does not run when building an rpm, because the mangpages are
# installed in a temporary, unconfigured directory.)  This is for alien systems and embedded targets
# that cannot build from packages.
#
UNINSTALL_HOOK += postun-manpages


dist_check_SCRIPTS	+= $(top_srcdir)/scripts/check_mans
TESTS_ENVIRONMENT	+= MANS='$(MANS)'

.PHONY: clean-manpages install-manpages uninstall-manpages post-manpages postun-manpages

# vim: ft=automake
