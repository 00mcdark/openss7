Makefile_ident="@(#) LiS Makefile 2.32 11/23/03"
#
# Makefile for the kernel STREAMS device drivers.
#
# Note 1: Dependencies are done automagically by 'make dep', which also
# removes any old dependencies.
#
# This Makefile is intended to be run from the command line.  It can
# also be run from other makefiles.
#

LIS_HOME = $(shell pwd)
LIS_ROOT = /
include config.mk
include version
GENCONF	 = $(LIS_HOME)/include/sys/LiS/genconf.h

#
#  Our default target
#
default: all


#########################################################################
##                                                                     ##
##   Configuration                                                     ##
##                                                                     ##
#########################################################################

#
# A rule to run the configuration script
#
configure:
	$(LIS_HOME)/Configure "invoked from main makefile" config.in
	$(MAKE) clean
	$(MAKE) dep

#
#  If config.in does not exists, here is a rule to create it.
#
#  GNU make will use this rule if present, as we include the target of it.
#  This is why we have to do the "ifneq" stuff.
#
ifneq (config.in,$(wildcard config.in))

$(LIS_HOME)/config.in:
	$(LIS_HOME)/Configure "invoked from main makefile" config.in
	$(MAKE) clean
	$(MAKE) config

endif

ifeq ($(LIS_TARG),user)

STRCONF_XOPTS = -rmake_nodes -Muser_mknod

# The file Config.master is just the contents of the file Config.user
Config.master: Config.user
	cat $^ >$@

else

#
# Kernel version 2.3, 2.4 have major device numbers allocated up
# into the 180 region.  We want to get safely above those.  One of
# these days the kernel developers are going to have to fix the
# 8-bit major/minor problem.  DMG 1-7-00
#
# Now even Red Hat 6.2 and 7.0 are encroaching on our major device
# number 50 default range.  So beginning with LiS-2.12 I am moving
# the LiS majors up to 240 for all versions.  This is the range
# that is reserved for "experimental" drivers. DMG 3-22-2001
#
# The macro LIS_MAJOR_BASE is where the major device numbers start.
# You can set this in you environment, or by editing the LiS configs.in
# file to override this default value.  This variable is normally not
# set in configs.in, so you can just add it onto the end of the file.
#
# Beginning in LiS-2.13B9 and LiS-2.14 this is going to default to 230
# to provide for more room for STREAMS devices.  You can still override
# as described above.
#
ifndef LIS_MAJOR_BASE
LIS_MAJOR_BASE=230
endif
STRCONF_XOPTS = -b$(LIS_MAJOR_BASE)

#
# The file Config.master consists of the concatenation of the Config
# file from the directory LiS/drivers/str and all of the individual
# Configs from binary packages in subdirectories of pkg.
# TODO: The pkg directory should have a "make dep" that creates a
# file pkg/Config.pkg.
#
PKG_CONFIG_FILES := $(shell find pkg -mindepth 2 -maxdepth 2 -follow -type f -name Config)

Config.master: $(DRVRDIR)/Config $(PKG_CONFIG_FILES)
	cat $^ >$@

endif

$(UTILOBJ)/strconf:
	$(MAKE) MAKINGSTRCONF=1 -C $(UTILOBJ) strconf

# These are the files generated by the strconf utility
SC_CONFIG   := $(LIS_INCL)/sys/LiS/config.h
SC_MODCONF  := $(LIS_HOME)/head/modconf.inc
SC_DRVRCONF := $(LIS_HOME)/drvrconf.mk
SC_CONFMOD  := $(LIS_HOME)/conf.modules
ifeq ($(LIS_TARG),user)
SC_MKNODES  := $(LIBOBJ)/makenodes.c
else
SC_MKNODES  := $(UTILOBJ)/makenodes.c
endif
SC_GEN := $(SC_CONFIG) $(SC_MODCONF) $(SC_MKNODES) $(SC_DRVRCONF) $(SC_CONFMOD)

$(SC_GEN): Config.master $(UTILOBJ)/strconf $(GENCONF)
	$(UTILOBJ)/strconf			\
		-h$(SC_CONFIG)			\
		-o$(SC_MODCONF)			\
		-m$(SC_MKNODES)			\
		-l$(SC_DRVRCONF)		\
		-L$(SC_CONFMOD)			\
		$(STRCONF_XOPTS)		\
		$<
	$(MAKE) -C $(DRVROBJ) clean
	$(MAKE) -C $(DRVROBJ) dep
	$(MAKE) -C $(UTILOBJ) dep
	$(MAKE) -C $(LIBOBJ) dep

CONFIG_TARGETS = $(LIS_HOME)/config.in $(SC_GEN)

#
# This is our configuration proper.
#
# Use the target below for dependencies on the whole configuration.
#
config: $(CONFIG_TARGETS)

#########################################################################
##   End of: Configuration                                             ##
#########################################################################

TODO = $(GENCONF) config

ifneq ($(LIS_TARG),user)
TODO += libc util
endif


#
# Build modules only when running in the Linux kernel
#
ifeq ($(LIS_TARG),linux)
TODO += modules
endif

#
# Does the user want us to install streams.o in the official
# modules directory?
#
ifeq ($(MOD_INSTALL),y)
TODO += modules_install
endif

#
# Does the user want us to make the kernel after we make STREAMS?
#
ifeq ($(CONFIG_MK_KERNEL),y)
TODO += kernel
endif

ifeq ($(LIS_TARG),user)
TODO += streams.o libc util
endif

all: $(TODO)

FORCE:

#
# You may have to be root to do these targets
#
ifeq ($(LIS_TARG),linux)

install: all
	$(MAKE) -C $(LIBOBJ) $@
	$(MAKE) -C $(UTILOBJ) $@
	$(MAKE) -C $(DRVROBJ) $@
	$(MAKE) -C man $@ MANDIR=$(LIS_ROOT)/usr/share/man
ifneq ($(LIS_PACK),1)
	$(INST_SBIN)/strmakenodes
endif
	install -d $(LIS_ROOT)/usr/lib/LiS/include/sys/LiS
	install -d $(LIS_ROOT)/usr/sbin
	find include -type f -name "*.h" -print -exec install {} $(LIS_ROOT)/usr/lib/LiS/{} \;
	install -m 555 strms_down strms_status strms_up $(LIS_ROOT)/usr/sbin


modules_install: streams.o modules
ifeq ($(CONFIG_STREAMS),m)
	install -d $(LIS_ROOT)/$(MOD_INST_DIR)
	install modules/*.o $(LIS_ROOT)/$(MOD_INST_DIR)
 ifneq ($(LIS_PACK),1)
	$(LIS_HOME)/update_conf.modules $(LIS_HOME)/conf.modules
	/sbin/depmod -a
 else
	install -d $(LIS_ROOT)/etc
	install $(LIS_HOME)/conf.modules $(LIS_ROOT)/etc/modules-LiS.conf
 endif
endif

uninstall:
	-env LD_LIBRARY_PATH=$(INST_LIB):$(LD_LIBRARY_PATH) \
		$(INST_SBIN)/strmakenodes -r
	-$(MAKE) -C $(LIBOBJ) $@
	-$(MAKE) -C $(UTILOBJ) $@
	-$(MAKE) -C $(DRVROBJ) $@
	-$(MAKE) -C man $@ MANDIR=$(LIS_ROOT)/usr/share/man
	-(cd $(LIS_ROOT)/usr/sbin && rm -f strms_down strms_status strms_up)
ifeq ($(CONFIG_STREAMS),m)
 ifneq ($(LIS_PACK),1)
	- $(LIS_HOME)/update_conf.modules
 endif	
	- ./update_conf.modules
	- (cd $(MOD_INST_DIR); rm -f streams.o streams-*.o)
endif

else		# from LIS_TARG  == linux

install:
	@echo "install target meaningful only for Linux kernel"

uninstall:
	@echo "uninstall target meaningful only for Linux kernel"

endif

clean:
	-rm -f streams.o 
	-rm -f modules/*
	-$(MAKE) -C $(LIBOBJ) $@
	-$(MAKE) -C $(HEADOBJ) $@
	-$(MAKE) -C $(DRVROBJ) $@
	-$(MAKE) -C $(UTILOBJ) $@
	-$(MAKE) -C $(LIS_HOME)/pkg $@


realclean: clean
	-$(MAKE) -C $(LIBDIR)/linux $@
	-$(MAKE) -C $(HEADDIR)/linux $@
	-$(MAKE) -C $(DRVRDIR)/linux $@
	-$(MAKE) -C $(UTILDIR)/linux $@
	-$(MAKE) -C $(LIBDIR)/user $@
	-$(MAKE) -C $(HEADDIR)/user $@
	-$(MAKE) -C $(DRVRDIR)/user $@
	-$(MAKE) -C $(UTILDIR)/user $@
	-rm -f pkg/proto/Space.o
	-rm -f $(SC_GEN)
	-rm -f Config.master
	-rm -f config.in
	-rm -f conf.modules.save
	-rm -f kver
	-find . \( -name "*.o" -o -name "*~" \) -print -exec rm -f {} \;
	-rm -rf rpm-root/ RPMS/

ifeq ($(LIS_TARG),linux)

# Also remove patches to the Linux kernel
realclean: 

endif

very-clean: uninstall clean realclean 


dep:    $(GENCONF)
	$(MAKE) -C $(LIBOBJ)  dep
	$(MAKE) -C $(HEADOBJ) dep
	$(MAKE) -C $(DRVROBJ) dep
	$(MAKE) -C $(UTILOBJ) dep

libc: FORCE
	$(MAKE) -C $(LIBOBJ)

util: libc FORCE
	$(MAKE) -C $(UTILOBJ)


#
# The following four rules takes care of building streams.o
#
streams.o: $(DRVROBJ)/drivers.o $(HEADOBJ)/streamshead.o pkg/drivers.o
	$(LD) -r -o $@ $^

#	$(LD) -r -u sys_putpmsg -o $@ $^

$(HEADOBJ)/streamshead.o: config FORCE
	$(MAKE) -C $(HEADOBJ)

$(DRVROBJ)/drivers.o: config FORCE
	$(MAKE) -C $(DRVROBJ)

pkg/drivers.o: config FORCE
	$(MAKE) -C pkg


#
# Building STREAMS as a loadable module
#
ifeq ($(CONFIG_STREAMS),m)

modules: streams.o FORCE
	-rm -f modules/*
	ln -s $(LIS_HOME)/streams.o modules/streams.o
	$(MAKE) -C $(DRVROBJ) $@
	$(MAKE) -C pkg $@
endif

ifeq ($(CONFIG_STREAMS),k)

modules: streams.o FORCE
	-rm -f modules/*
	$(MAKE) -C $(DRVROBJ) $@
	$(MAKE) -C pkg $@
endif


#
# User wants us to make the kernel whenever we do a make of STREAMS
#
kernel:	streams.o
	$(MAKE) $(KERN_TARGET) -C $(KSRC)

all_but_kernel:			# Placeholder target from kernel build

#
# Make a user-space version of STREAMS for laboratory testing
#
user:
	$(MAKE) -C $(DRVROBJ)
	$(MAKE) -C $(HEADOBJ)
	$(MAKE) -C $(LIBOBJ)
	$(MAKE) -C $(UTILOBJ)

tags:	files
	ctags `cat files`

$(GENCONF):	$(LIS_HOME)/config.in
	$(LIS_HOME)/mkgenconf

#
# Make a rpm out of a compile
#

rpm: all
	rm -rf $(LIS_HOME)/rpm-root/
	mkdir -p $(LIS_HOME)/rpm-root/
	mkdir -p $(LIS_HOME)/rpm-root/usr/share/doc/LiS-$(LISVER) || exit 2
	cp -rf COPYING LSM README VOLUNTEERS version htdocs/ \
		$(LIS_HOME)/rpm-root/usr/share/doc/LiS-$(LISVER)
	make install LIS_ROOT=$(LIS_HOME)/rpm-root/ LIS_PACK=1
	make modules_install LIS_ROOT=$(LIS_HOME)/rpm-root/ LIS_PACK=1
	# convert .spec to current value.
	m4 -D LISROOT=$(LIS_HOME) -D LISVERSION=$(LISVER) \
		util/linux/LiS.spec.in > LiS.spec
	# Welcome RPMS..
	mkdir -p $(LIS_HOME)/RPMS/i386 $(LIS_HOME)/RPMS/ia64
	rpmbuild -bb LiS.spec
