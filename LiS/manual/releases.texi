@c -*- texinfo -*- vim: ft=texinfo
@c =========================================================================
@c
@c @(#) $Id: releases.texi,v 1.1.4.25 2006/08/26 14:46:26 brian Exp $
@c
@c =========================================================================
@c
@c Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
@c Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
@c
@c All Rights Reserved.
@c
@c Permission is granted to make and distribute verbatim copies of this
@c manual provided the copyright notice and this permission notice are
@c preserved on all copies.
@c
@c Permission is granted to copy and distribute modified versions of this
@c manual under the conditions for verbatim copying, provided that the
@c entire resulting derived work is distributed under the terms of a
@c permission notice identical to this one.
@c 
@c Since the Linux kernel and libraries are constantly changing, this
@c manual page may be incorrect or out-of-date.  The author(s) assume no
@c responsibility for errors or omissions, or for damages resulting from
@c the use of the information contained herein.  The author(s) may not
@c have taken the same level of care in the production of this manual,
@c which is licensed free of charge, as they might when working
@c professionally.
@c 
@c Formatted or processed versions of this manual, if unaccompanied by
@c the source, must acknowledge the copyright and authors of this work.
@c
@c -------------------------------------------------------------------------
@c
@c U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
@c on behalf of the U.S. Government ("Government"), the following
@c provisions apply to you.  If the Software is supplied by the Department
@c of Defense ("DoD"), it is classified as "Commercial Computer Software"
@c under paragraph 252.227-7014 of the DoD Supplement to the Federal
@c Acquisition Regulations ("DFARS") (or any successor regulations) and the
@c Government is acquiring only the license rights granted herein (the
@c license rights customarily provided to non-Government users).  If the
@c Software is supplied to any unit or agency of the Government other than
@c DoD, it is classified as "Restricted Computer Software" and the
@c Government's rights in the Software are defined in paragraph 52.227-19
@c of the Federal Acquisition Regulations ("FAR") (or any successor
@c regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
@c NASA Supplement to the FAR (or any successor regulations).
@c
@c =========================================================================
@c 
@c Commercial licensing and support of this software is available from
@c OpenSS7 Corporation at a fee.  See http://www.openss7.com/
@c 
@c =========================================================================
@c
@c Last Modified $Date: 2006/08/26 14:46:26 $ by $Author: brian $
@c
@c =========================================================================

@c ----------------------------------------------------------------------------

This is the OpenSS7 Release of the @value{PACKAGE_TITLE} core, tools, drivers and modules that
implement the @dfn{@value{PACKAGE_TITLE}} SVR 4 STREAMS utility for Linux.

The following sections provide information on @value{PACKAGE_TITLE} releases as well as
compatibility information of OpenSS7 release to the original GCOM releases of these modules and
drivers, as well as Linux kernel compatibility.

@menu
* Prerequisites::		Prerequisite packages
* Compatibility::		Compatibility Issues
* Release Notes::		Release Notes
* Maturity::			Package Maturity
* Bugs::			Package Defects
* Schedule::			Development and Bug Fix Schedule
* History::			Project History
@end menu

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Prerequisites
@section Prerequisites
@cindex prerequisites

@include prerequisites.texi

If you need to rebuild the package from sources with modifications, you will need a larger GNU
toolchain as described in @xref{Downloading from CVS}.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Compatibility
@section Compatibility
@cindex compatibility

This section discusses compatibility with major prerequisites.

@menu
* GNU/Linux Distributions::	Compatibility to GNU/Linux Distributions
* Linux Kernel::		Compatibility to Linux Kernels
* Linux Architectures::		Compatibility to Linux Architectures
* Linux STREAMS::		Compatibility to LiS
* Linux Fast-STREAMS::		Compatibility to LfS
@end menu

@c ----------------------------------------------------------------------------

@include texi/compat.texi

@menu
* Kernel Version 2.3.x::
* Kernel Version 2.2.x::
* Kernel Version 2.0.36::
@end menu

@node Kernel Version 2.3.x
@subsubsection Kernel Version 2.3.x

For LiS version 2.7 and later and for kernel version 2.3.x there are some significant compatibility
issues.  Version 2.3 of the Linux kernel brings with it some compatibility issues that need to be
addressed by the LiS user.  The two most important ones concern the file @file{<sys/stropts.h>} and
the major device numbers used by LiS.  @pgindex stropts.h

@subsubheading @file{stropts.h} Compatibility
There are no more compatibility problems with @file{<sys/stropts.h>} with glibc-2.1 and LiS-2.10.
The following is more for historical purposes than practical necessity.

Beginning at least with egcs-2.91.66 (egcs-1.1.2 release), which comes with Red Hat 6.0, there is a
file in the standard include directory named @file{<sys/stropts.h>}.  This file has constant
definitions that are incompatible with those used in @file{LiS/include/sys/stropts.h}.  If you
compile an application against the glibc version of @file{stropts.h}, and compile LiS using its own
version then certain ioctls may not work correctly.  You should be aware of this problem and be sure
to include "-I/usr/src/LiS/include" in the compiler options that you use in compiling your STREAMS
based applications.

In this version of LiS, some of the constants in @file{stropts.h} have been changed to conform to
the values used by UnixWare and Solaris.  These are different values than previously used in LiS.
When you install LiS the installation procedure will ask you whether you want LiS compiled with the
backward-compatible LiS constants, or the UnixWare/Solaris compatible constants.  Logically
speaking, it does not matter which set you use as long as LiS and your application code are both
compiled with the same values.

I highly recommend that you use the UnixWare/Solaris compatible version, however.  A future release
of egcs, utilizing glibc 2.2, will contain an updated version of its @file{stropts.h} which has
constants that are compatible with UnixWare, Solaris and LiS.  So by selecting the UnixWare/Solaris
compatible version at this time you can ensure that your applications will be fully compatible with
these values in the future.

With any luck, these constants will never have to change again.

@subsubheading Major Device Number Compatibility
The second major compatibility issue concerns the major device numbers that LiS assigns to STREAMS
devices.  In the past LiS based these device numbers at 50, since the Linux kernel did not
pre-define many major device numbers.  As of kernel version 2.3.x there are major device numbers
defined up to 220 and beyone! So starting with LiS-2.12, we have used the major number of 240 as the
base for STREAMS device files.  This range is supposed to be reserved for "experimental drivers"
which should make it safe to use.

What this means is that you must be sure to run the strmakenodes program before running any STREAMS
applications after installing LiS-2.12.  This need not concern you overly, since doing a "make
install" in the @file{/usr/src/LiS} directory causes strmakenodes to be run anyway.  This is more a
concern if you are compiling LiS on one machine and then loading it onto another for execution.  In
such cases you may need to load the new strmakenodes program and run it.
@pgindex /usr/src/LiS

I am hoping that the kernel developers will expand the major and minor device number spaces for 2.6.
If they do that then LiS should be able to get a block of majors allocated to it.

@node Kernel Version 2.2.x
@subsubsection Kernel Version 2.2.x

For LiS version 2.5 and later and for kernel version 2.2.x there are no compatibility issues; there
are no kernel patches whatsoever required to install LiS.  You will need LiS-2.4 at minimum to run
in a 2.2.x kernel.

@node Kernel Version 2.0.36
@subsubsection Kernel Version 2.0.36

The latest version of LiS has not been tested on 2.0 kernels.  Therefore, do not be surprised if it
does not install or execute correctly in these kernels.  If you are using an old kernel, you must
also use an older version of LiS, perhaps LiS-2.5.

For LiS version 2.5 and later and for kernel version 2.0.36 there are no kernel patches required to
run LiS as a "bottom half" process.  A one-line patch is required to run LiS as a kernel daemon
process.  The installation default is to run as a bottom half process in 2.0.36.  LiS-1.25 or later
should install properly with 2.0.36.  The more recent the version of LiS, the less kernel patching
is required.

@node Linux STREAMS
@subsection Linux STREAMS
@cindex Linux STREAMS

@dfn{Linux Fast-STREAMS} provides a suitable replacement for the (now deprecated)
@dfn{@value{PACKAGE_TITLE} 2.18.0} package formerly maintained by Dave Goethe of
@uref{http://www.gcom.com/,GCOM}.

@menu
* LiS-2.18 Kernel and Driver Compatibility::
* LiS-2.16 Kernel and Driver Compatibility::
* LiS-2.15 Kernel and Driver Compatibility::
* LiS-2.14 Kernel and Driver Compatibility::
* LiS-2.13 Kernel and Driver Compatibility::
* LiS-2.12 Kernel and Driver Compatibility::
* LiS-2.10 Kernel and Driver Compatibility::
@end menu

@node LiS-2.18 Kernel and Driver Compatibility
@subsubsection LiS-2.18 Kernel and Driver Compatibility

There are several issues that needed to be addressed for compatibility with the 2.6 Linux kernel.
You are encouraged to follow the links in the paragraphs below to see more detailed information on
each of these topics.

@enumerate
@item
The 2.6 kernel redefined the size of the dev_t structure.  LiS has extended its internal dev_t
structure to be compatible with the 2.6 method for some time.
@item
The 2.6 kernel changed the approach to building and installing kernel modules.  This affects LiS as
a whole and also affects how you install separate loadable STREAMS drivers.  LiS provides a
mechanism that allows STREAMS drivers and moduels to be easily installed.
@item
The 2.6 kernel offers an option to compile the kernel using machine registers to pass parameters to
functions.  LiS takes this into account.
@item
The 2.6 kernel needs GCC version 3.3.3 (sic) to be compiled properly.  LiS needs to be compiled
using the same version of the compiler when running with the 2.6 kernel.
@item
You may have to edit the file /etc/rc.d/rc.sysinit to get demand loadable modules to work correctly.
This is especially true when hosting a 2.6 kernel on a 2.4 distribution.
@end enumerate

@node LiS-2.16 Kernel and Driver Compatibility
@subsubsection LiS-2.16 Kernel and Driver Compatibility

LiS-2.16 is a small change from LiS-2.15.  The change is that it no longer uses Linux system calls
to implement getpmsg and putpmsg.  Instead it overloads the read and write file system functions
with particular values for the count parameter, values that are otherwise invalid.@footnote{This
change is far from small because it outdates @file{libLiS.a} and @file{libLiS.so}.  A
@file{libLiS.a} or @file{libLiS.so} from a previous version will not work correctly.  All
applications statically linking @file{libLiS.a} must be recompiled to use a @file{libLiS.a} from the
more recent version.  Unfortunately, LiS did not include versioning on its libraries.  This has been
corrected with the OpenSS7 release of LiS.}

@node LiS-2.15 Kernel and Driver Compatibility
@subsubsection LiS-2.15 Kernel and Driver Compatibility

LiS-2.15 continues to insulate STREAMS drivers from the Linux kernel.  It works with 2.2, 2.4, and
2.5 versions of the kernel.  Support for 2.0 kernels has been dropped.

Driver writers will need to recompile their drivers against LiS-2.15 include files.  You will see
the following major changes.

@itemize @bullet
@item
LiS spin locks and semaphores have been rearranged so that the kernel memory is at the end of the
structure instead of the beginning.
@item
The former change allows for there to be dynamic allocation routines for spin locks and semaphores.
(@pxref{LiS Spin Locks})
@item
LiS now provides an abstraction for read/write locks, with dynamic allocation.  (@pxref{LiS
Read/Write Locks})
@item
Those experimenting with 2.5 kernels will notice that the "sleep while holding spin lock" problems
have been fixed.
@item
Porting to 2.5 has necessitated some changes to the major/minor device structure handling.
(@pxref{Major/Minor Device Numbering})
@item
The fattach related functions are functional on kernels version 2.4.7 and later.
@item
STREAMS pipes and FIFOs are now functional.
@item
OS interface code has been added for the kernel's DMA mapping functions.
@end itemize

There is one known bug in LiS-2.15 relative to 2.5 kernels.  It has to do with a memory leak
involving timer structures, and may prove to be a kernel bug rather than an LiS bug.  Since the 2.5
kernel is not suitable for general use I am saving the investigation of this bug for later.

@node LiS-2.14 Kernel and Driver Compatibility
@subsubsection LiS-2.14 Kernel and Driver Compatibility

LiS-2.13 was a series of beta releases.  LiS-2.14 represents the culmination of this series.  There
should be enough distribution and kernel compatibility that LiS-2.14 will hold up for some time.

The known fattach and FIFO bugs have still not been fixed.  The author of those subsystems has not
found the time to put in the fixes, nor have I.

@node LiS-2.13 Kernel and Driver Compatibility
@subsubsection LiS-2.13 Kernel and Driver Compatibility

This version of LiS has been tested with 2.4 kernels up to 2.4.16.  LiS does not yet support the
fattach/fdetach functions on kernel versions 2.4.7 and beyond.  There are also known bugs in the LiS
pipe/FIFO code.  All of these problems are scheduled to be fixed in early 2002.

LiS-2.13 adds the ability for drivers to make their own "/dev" nodes via the @dfn{lis_mknod}
function (@pxref{System Calls from within the Kernel}).  Also provided is an @dfn{lis_unlink}
function that allows drivers to remove their device files.

There is almost no new functionality added by LiS-2.13.  The differences between LiS-2.13 and
LiS-2.12 are almost entirely kernel compatibility issues and bug fixes.

@node LiS-2.12 Kernel and Driver Compatibility
@subsubsection LiS-2.12 Kernel and Driver Compatibility

This version of LiS is compatible with all 2.2.x versions of the kernel and with early versions of
the 2.4.x kernel, at least up to 2.4.2 and perhaps later versions as well.

If you have drivers that have worked with LiS-2.10 or LiS-2.11 (or earlier) please recompile them
using the header files from LiS-2.12.  This may be the last recompile in quite some time that you
will need for your driver code.

LiS-2.12 contains a sufficient Driver/Kernel Interface (DKI), (@pxref{Development}), that it is
straightforward to write a STREAMS driver that can be compiled against LiS-2.12 and the resulting
object modules used either on a 2.2 or 2.4 kernel, with only LiS needing recompilation on the target
machine.

When run on 2.4 kernels, LiS makes full use of multiple CPUs (@pxref{LiS SMP Implementation}).  It
forks a queue runner task for each CPU and locks each task onto its CPU.  Queue runner tasks are
awakened to assist with service procedure processing as the number of scheduled queues increases.

Because of this aggressive use of processors, you may find that your drivers do not function
properly when run with LiS-2.12 in a multi-CPU SMP environment.  You should expect that drivers that
worked in single-CPU environments will continue to work as before.

Making your drivers MP safe involves the use of spin locks.  The DKI documentation contains advice
on the use of these locks.  @xref{LiS Spin Locks}.

This version of LiS also contains a rewrite of the flushing code and tests added to strtst for
flushing.  In particular the details of the rules for flushing queue bands are now adhered to.
@xref{Flushing Queue Bands}.  Be advised, however, that Solaris STREAMS does not adhere strictly to
these rules so there may be some subtle differences in behavior between LiS and Solaris when
flushing queue bands.

Speaking of queue bands, the queue band handling code has been debugged a bit more and a test added
to strtst to illustrate its correct behavior.

@node LiS-2.10 Kernel and Driver Compatibility
@subsubsection LiS-2.10 Kernel and Driver Compatibility

This version of LiS is compatible with all 2.2.x versions of the Linux kernel.  It may work with
2.4.x kernels, but you should probably wait for LiS-2.11 for that.

If you have drivers that worked with LiS-2.8 or earlier, you must recompile your drivers in the
context of the LiS-2.10 header files.  The queue_t structure has changed in size since LiS-2.8 which
means that the old RD and WR macros will not compute the correct addresses.

LiS-2.10 contains features that are intended to greately reduce the necessity of recompiling STREAMS
driver code in future versions of LiS or future versions of the kernel.  The goal is to be able to
compile STREAMS drivers against LiS-2.10 header files and use the resulting object code on both
2.2.x kernels and 2.4.x kernels.

For more details about the interface between STREAMS drivers and the kernel, see the Driver/Kernel
Interface documentation, (@pxref{Development}).


@node Linux Fast-STREAMS
@subsection Linux Fast-STREAMS
@cindex Linux Fast-STREAMS

The @cite{@value{PACKAGE_TITLE}} package is no longer receiving active development or support.  The
@cite{@value{PACKAGE_TITLE}} package is so fraught with bugs that it is unusable as far as The
OpenSS7 Project is concerned.  @cite{Linux Fast-STREAMS} is the preferred replacement for
@cite{@value{PACKAGE_TITLE}}.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Release Notes
@section Release Notes
@cindex release notes

@include news.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Maturity
@section Maturity
@cindex maturity

The @cite{OpenSS7 Project} adheres to the following release philosophy:

@menu
* Pre-Alpha Releases::		Pre-Alpha release description
* Alpha Releases::		Alpha release description
* Beta Releases::		Beta release description
* Gamma Releases::		Gamma release description
* Production Releases::		Production release description
* Unstable Releases::		Unstable release description
@end menu

@itemize
@item pre-alpha release
@item alpha release
@item beta release
@item gamma release
@item production release
@item unstable release
@end itemize

@node Pre-Alpha Releases
@subsection Pre-Alpha Releases

@dfn{Pre-alpha} releases are releases that have received no testing whatsoever.  Code in the release
is not even known to configure or compile.  The purpose of a pre-alpha release is to make code and
documenation available for insepection only, and to solicit comments on the design approach or other
characteristics of the software package.

@dfn{Pre-alpha} release packages ship containing warnings recommending that the user not even
execute the contained code.

@node Alpha Releases
@subsection Alpha Releases

@dfn{Alpha} release are releases that have received little to no testing, or that have been tested
and contains known bugs or defects that make the package unsuitable even for testing.  The purpose
for an @dfn{alpha} release are the same as for the pre-alpha release, with the additional purpose
that it is an earily release of partially functional code that has problems that an external
developer might be willing to fix themselves and contribute back to the project.

@dfn{Alpha} release packages ship containing warnings that executing the code can crash machines and
might possibly do damage to systems upon which it is executed.

@node Beta Releases
@subsection Beta Releases

@dfn{Beta} releases are releases that have received some testing, but the testing to date is not
exhaustive.  @dfn{Beta} release packages do not ship with known defects.  All known defects are
resolved before distribution; however, as exhaustive testing has not been performed, unknown
defects may exist.  The purpose for a @dfn{beta} release is to provide a baseline for other
organizations to participate in the rigorous testing of the package.

@dfn{Beta} release packages ship containing warnings that the package has not been exhaustively
tested and that the package may cause systems to crash.  Suitability of software in this category
for production use is not advised by the project; however, as always, is at the discretion of the
user of the software.

@node Gamma Releases
@subsection Gamma Releases

@dfn{Gamma} release are releases that have received exhaustive testing within the project, but
external testing has been minimal.  @dfn{Gamma} release packages do not ship with known defects.  As
exhaustive internal testing has been performed, unknown defects should be few.  Please remember that
there is NO WARRANTY on public release packages.

@dfn{Gamma} release packages typically resolve problems in previous @dfn{beta} releases, and might
not have had full regression testing performed.  Suitability of software in this category for
production use is at the discretion of the user of the software.   @dfn{The OpenSS7 Project}
recommends that the complete validation test suites provided with the package be performed and pass
on target systems before considering production use.

@node Production Releases
@subsection Production Releases

@dfn{Production} releases are releases that have received exhaustive testing within the project and
validated on specific distributions and architectures.  @dfn{Production} release packages do not
ship with known defects.  Please remember that there is NO WARRANTY on public release packages.

@dfn{Production} packages ship containig a list of validated distributions and architecutres.
Full regression testing of any maintenance changes is performed.  Suitability of software in this
category for production use on the specified target distributions and architectures is at the
discretion of the user.  It should not be necessary to preform validation tests on the set of
supported target systems before considering production use.

@node Unstable Releases
@subsection Unstable Releases

@dfn{Unstable} releases are releases that have received extensive testing within the project and
validated on a a wide range of distributions and architectures; however, is has tested unstable and
found to be suffering from critical problems and issues that cannot be resolved.  Maintenance of the
package has proven impossible.  @dfn{Unstable} release packages ship with known defects (and loud
warnings).  Suitability of software in this category for production use is at the discretion of the
user of the software.  @dfn{The OpenSS7 Project} recommends that the problems and issues be closely
examined before this software is used even in a non-production evironment.  Each failing test
scenario should be completely avoided by the application.  @cite{OpenSS7} beta software is more
stable that software in this category.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Bugs
@section Bugs
@cindex bugs

@menu
* Defect Notices::		Notices of the possibility of defects
* Known Defects::		Known bugs in the package
@end menu

@node Defect Notices
@subsection Defect Notices

@c This is the defect notice for pre-alpha release software
@ignore
@dfn{@value{PACKAGE_TITLE}} has known and unknown defects.  This is a @dfn{pre-alpha} release.  Some
defects might be harmful.  No validation testing whatsoever has been performed by the @cite{OpenSS7
Project} on this software.  The software might not even configure or compile.  The @cite{OpenSS7
Project} recommends that you @b{do not use this software}. Use at your own risk.  Remember that
there is @b{NO WARRANTY}.@footnote{See section @b{NO WARRANTY} under @ref{GNU General Public
License}.}

@b{This software is @i{pre-alpha} software.  As such, it will crash your kernel.  Installation of
the software will irreparably mangle your header files or Linux distribution in such a way as to
make it unusable.  Crashes will lock your system and rebooting the system will not repair the
problem.  You will loose all the data on your system.  Because this software will crash your kernel,
the resulting unstable system can destroy computer hardware or peripherals making them unusable.
You will void the warranty on any system on which you run this software.  YOU HAVE BEEN WARNED.}
@end ignore

@c This is the defect notice for alpha release software
@ignore
@dfn{@value{PACKAGE_TITLE}} has unknown defects.  This is a @dfn{alpha} release.  Some defects could
be harmful.  No validation testing whatsoever has been performed by the @cite{OpenSS7 Project} on
this software.  The software might fail to configure or compile on some systems.  The @cite{OpenSS7
Project} recommends that you @b{do not use this software for purposes other than develoment or
evaluation, and then only with great care}. Use at your own risk.  Remember that there is @b{NO
WARRANTY}.@footnote{See section @b{NO WARRANTY} under @ref{GNU General Public License}.}

@b{This software is @i{alpha} software.  As such, it can likely crash your kernel.  Installation of
the software can irreparably mangle your header files or Linux distribution in such a way as to make
it unusable.  Crashes could lock your system and rebooting the system might not repair the problem.
You can possibly loose all the data on your system.  Because this software can crash your kernel,
the resulting unstable system could destroy computer hardware or peripherals making them unusable.
You could void the warranty on any system on which you run this software.  YOU HAVE BEEN WARNED.}
@end ignore

@c This is the defect notice for beta release software
@ignore
@dfn{@value{PACKAGE_TITLE}} could contain unknown defects.  This is a @dfn{beta} release.  Some
defects could be harmful.  Validation testing has been performed by the @cite{OpenSS7 Project} on
this software for only a restricted set of systems.  The software might fail to configure or compile
on other systems.  The @cite{OpenSS7 Project} recommends that you @b{do not use this software for
purposes other than validation testing and evaluation, and then only with care}. Use at your own
risk.  Remember that there is @b{NO WARRANTY}.@footnote{See section @b{NO WARRANTY} under @ref{GNU
General Public License}.}

@b{This software is @i{beta} software.  As such, it might crash your kernel.  Installation of the
software might mangle your header files or Linux distribution in such a way as to make it unusable.
Crashes could lock your system and rebooting the system might not repair the problem.  You can
possibly loose all the data on your system.  Because this software might crash your kernel, the
resulting unstable system could possibly destroy computer hardware or peripherals making them
unusable.  You might void the warranty on any system on which you run this software.  YOU HAVE BEEN
WARNED.}
@end ignore

@c This is the defect notice for gammar release software
@ignore
@dfn{@value{PACKAGE_TITLE}} could possibly contain unknown defects.  This is a @dfn{gamma} release.
Some remaining unknown defects could possibly be harmful.  Validation testing has been performed by
the @cite{OpenSS7 Project} on this software for a set of systems and external validation testing has
been performed on other systems.  Nevertheless, the software might still fail to configure or
compile on other systems.  The @cite{OpenSS7 Project} recommends that you @b{validate this software
for your target system with care before using this software}.  Use at your own risk.  Remember that
there is @b{NO WARRANTY}.@footnote{See section @b{NO WARRANTY} under @ref{GNU General Public
License}.}

@b{This software is @i{gamma} software.  As such, it is quite stable but might still crash your
kernel under some conditions.  Installation of the software on a non-validated distribution might
mangle your header files or Linux distribution in such a way as to make it unusable.  Crashes could
possibly lock your system and rebooting the system might not repair the problem.  You can possibly
loose all the data on your system.  Because this software stands a chance of crashing your kernel,
the resulting unstable system could possibly destroy computer hardware or peripherals making them
unusable.  You might void the warranty on any system on which you run this software.  YOU HAVE BEEN
WARNED.}
@end ignore

@c This is the defect notice for production release software
@ignore
@dfn{@value{PACKAGE_TITLE}} could possibly contain unknown defects.  This is a @dfn{production}
release.  Nevertheless, some remaining unknown defects could possibly be harmful.  Validation
testing has been performed by the @cite{OpenSS7 Project} and external entities on this software for
the set of systems listed in the release notes.  Nevertheless, the software might still fail to
configure or compile on other systems.  The @cite{OpenSS7 Project} recommends that you @b{validate
this software for your target system before using this software}.  Use at your own risk.  Remember
that there is @b{NO WARRANTY}.@footnote{See section @b{NO WARRANTY} under @ref{GNU General Public
License}.}

@b{This software is @i{production} software.  As such, it is stable on validated systems but might
still crash your kernel in unique circumstances.  Installation of the software on a non-validated
distribution might mangle your header files or Linux distribution in such a way as to make it
unusable.  Crashes could possibly lock your system and rebooting the system might not repair the
problem.  You can possibly loose all the data on your system.  Because this software stands a chance
of crashing your kernel, the resulting unstable system could possibly destroy computer hardware or
peripherals making them unusable.  You might void the warranty on any system on which you run this
software.  YOU HAVE BEEN WARNED.}
@end ignore

@c This is the defect notice for unstable release software
@dfn{@value{PACKAGE_TITLE}} has many and critical known defects.  This is an @dfn{unstable} release.
Some defects could be harmful.  Validation testing has been performed by the @cite{OpenSS7 Project}
on this software and it has revealed itself to be unstable and irreparable.  The software might not
even configure or compile.  The @cite{OpenSS7 Project} recommends that you @b{do not use this
software}.  Use at your own risk.  Remember that there is @b{NO WARRANTY}.@footnote{See section
@b{NO WARRANTY} under @ref{GNU General Public License}.}

@dfn{@value{PACKAGE_TITLE}}, both releases from @cite{OpenSS7} and @cite{GCOM}, contain many known
bugs. These are unstable releases.  Although there are no bugs known directly to be harmful, the
@cite{OpenSS7 Project} has tested the release and found defects that cause the kernel to lock or
crash. Use at your own risk.  Remember that there is @b{NO WARRANTY}@footnote{See section @b{NO
WARRANTY} under @ref{GNU General Public License}.} and that the package is no longer actively
maintained.

@b{This software is @i{unstable} software.  As such, it will lock or crash your kernel.
Installation of the software will irreparably mangle your header files or Linux distribution in such
a way as to make it unusable.  Crashes will lock your system and rebooting the system will not
repair the problem.  You will loose all the data on your system.  Because this software has tested
unstable in a number of test cases, simply running the validation test cases can cause locks or
crashes.  Because this software will lock or crash your kernel, the resulting unstable system can
destroy computer hardware or You will void the warranty on any system on which you run this
software.  YOU HAVE BEEN WARNED.}

@node Known Defects
@subsection Known Defects
@cindex known bugs
@cindex bugs, known

With the exception of packages not originaly created by the @cite{OpenSS7 Project}, the
@cite{OpenSS7 Project} software does not ship with known bugs in any release stage except
@dfn{pre-alpha}.  @dfn{@value{PACKAGE_TITLE}} had many known bugs at the time of release.

@dfn{@value{PACKAGE_TITLE}} has many known bugs.  Under some architectures, the test cases in the
conformance test suite cause the kernel to lock or crash.  @dfn{@value{PACKAGE_TITLE}} contains many
races and defects and is unsuitable for production environments.  This section provides a summary of
some (but not all) known defects.

@enumerate
@item
A substantial group of test cases in the @dfn{POSIX} conformance test suite fail.  This is largely
due to non-fatal defects in LiS.
@item
A number of test cases fail under any architecture and result in a kernel lock.  In particular if a
significant number of modules are pushed onto a Stream using I_PUSH, the kernel will lock when the
Stream is closed.  The number of modules pushed to cause a crash depends on the speed of the machine
upon which the test case is run.  The test case in the test suite pushes 64 modules and has always
resulted in a kernel lock regardless of the machine speed upon which it was tested.  Pushing 20
modules results in a kernel lock on some of the @cite{OpenSS7 Project} 2.57GHz test machines.

As a result, any test case that pushes a number of modules, and the performance tests (that push
modules for measurement) will cause the kernel to lock.
@item
A large number of test cases fail when running under an SMP kernel, regardless of the number of
processors on the test system.  These test cases cause the kernel to lock.  The kernel locks are
apparentlhy due to locking defects in the implementation.  None of these implementation defects have
been repaired.
@item
The original @file{LiS-2.18.0} release from @cite{GCOM} has a large number of defects that were
repaired in the @cite{OpenSS7} @file{LiS-2.18.1} release.
@item
The original @cite{LiS-2.18.0} release has defects in the description of data types and handling
under 64-bit architectures.  32-bit compatibility for 64-bit architectures is all but non-existent
in the LiS-2.18.0 release.  Because of binary compatibility issues, many of these defects persist in
the @cite{OpenSS7} @file{LiS-2.18.1} and @file{LiS-2.18.2} releases.  LiS is largely unusable in a
64-bit and almost completely unusable in a mixed architecture.
@end enumerate

The work-around for these defects is to not use LiS at all: use the @cite{OpenSS7 Linux
Fast-STREAMS} release instead.  The @cite{OpenSS7 Linux Fast-STREAMS}, being a completely
independent implemenation, does not suffer from this extensive set of LiS defects.

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node Schedule
@section Schedule
@cindex schedule

@include todo.texi

@c ----------------------------------------------------------------------------
@c ----------------------------------------------------------------------------

@node History
@section History
@cindex history

For the latest developments with regard to history of changes, please see the @file{ChangeLog} file
in the release package.

@c ----------------------------------------------------------------------------

