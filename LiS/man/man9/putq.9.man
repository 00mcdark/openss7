'\" rtp
.\" -*- nroff -*- vim: ft=nroff noautoindent nocindent nosmartindent
.\"
.\" @(#) $Id: putq.9.man,v 1.1.4.1 2005/03/09 23:14:13 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2005  OpenSS7 Corporation <www.openss7.com>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2005/03/09 23:14:13 $ by $Author: brian $
.\"
.\" =========================================================================
.so lis.macros
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database lis.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.\"
.\"
.TH PUTQ 9 "$Date: 2005/03/09 23:14:13 $" "$Name:  $" "Linux STREAMS DDI/DKI"
.\"
.\"
.SH NAME
.B putq, lis_putq
\- puts a message on a \fISTREAMS\fR message queue
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/stream.h>
.HP 8
.BI "int " retval " = putq(queue_t *" q ", mblk_t *" mp );
.\"
.\"
.SH DESCRIPTION
.PP
.BR putq ()
places the message pointed to by
.I mp
on the queue
.I q
without invoking the queue's put procedure.
.PP
After placing the message on queue
.IR q ,
.BR putq ()
adjusts the queue's flags and byte counts appropriately and schedules the
queue for processing by
.BR runqueues ()
if necessary.
.PP
It is the responsibility of a procedure calling
.BR putq ()
with a low priority message pointed to by
.I mp
to first call
.BR canput (9)
for the queue to check for flow control.
If
.BR canput (9)
fails for queue
.IR q ,
the procedure should not normally invoke
.BR putq ()
with a low priority message for the flow controlled queue
.IR q .
.\"
.\"
.SH "RETURN VALUES"
.PP
Upon success,
.BR putq ()
returns true (1) and places the message pointed to by
.I mp
on the queue pointed to by
.IR q .
.PP
Upon failure,
.BR putq ()
returns false (0) and
does not alter the passed in queue or message.
.\"
.\"
.SH ERRORS
.PP
When
.BR putq ()
fails, it returns false (0).
.BR putq ()
fails when the following occurs:
the message pointer
.I mp
is
.BR NULL ;
the queue pointer
.I q
is
.BR NULL ;
the structure pointed to by
.I q
is not a queue structure;
the queue pointed to by
.I q
is closing, or the queue has had put and service routine processing turned off
(e.g. with
.BR qprocsoff (9)).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR canput (9),
.BR putnext (9),
.BR getq (9).
.\"
.\"
.SH BUGS
.PP
Versions of
.BR putq ()
previous to OpenSS7 release
.BR LiS-2.16.18-17
automatically freed the message on failure.
.PP
Versions of
.BR putq ()
after OpenSS7 release
.BR LiS-2.16.18-16
do not free the message on failure in accordance with SVR 4.2 and other
implementation documentation.
.PP
.BR putq ()
still has bugs related to
.BR qprocsoff (9)
handling in that it fails while
.BR qprocsoff (9)
is in effect or if the stream is closing.
.\"
.\"
.SH VERSIONS
.PP
This manpage is for
.B LiS\c
.
.[
LiS
.]
.PP
.BR putq ()
first appeared in SVR 3.
.[
svr3
.]
.\"
.\"
.XX
.[
magic
.]
.[
svr42
.]
.[
svr4
.]
.\"
.\"
.[
$LIST$
.]
.TI
