#!/bin/bash
# =============================================================================
# 
# @(#) $RCSfile: check_mans,v $ $Name:  $($Revision: 0.9.2.3 $) $Date: 2005/01/18 20:22:45 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2005/01/18 20:22:45 $ by $Author: brian $
#
# =============================================================================

me=`basename $0`
retval=0

exec 5>$top_builddir/$me.log

export -p >&5

function echo_v()
{
#	if test :"${MAINTAINER_MODE:-no}" = :yes ; then
		echo "$me:  : $1"
#	fi
}
function echo_t()
{
#	if test :"${MAINTAINER_MODE:-no}" = :verbose ; then
		echo "$me: T: $1"
#	fi
}
function echo_s()
{
	if test :"${MAINTAINER_MODE:-no}" = :verbose ; then
		echo "$me: S: $1"
	fi
}
function echo_d()
{
	echo "$me: D: $1" >&5
}
function echo_e()
{
	echo "$me: E: $1" >&2
	echo "$me: E: $1" >&5
}
function echo_w()
{
	if test :"${MAINTAINER_MODE:-no}" != :no ; then
		echo "$me: W: $1" >&2
	fi
	echo "$me: W: $1" >&5
}

man1_required_sections="
NAME
SYNOPSIS
DESCRIPTION
OPTIONS
'ERRORS|DIAGNOSTICS|ERROR[[:space:]]HANDLING'
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man1_recommended_sections="
'SEE[[:space:]]ALSO|REFERENCES'
BUGS|CAVEATS
COMPATIBILITY
'CONFORMANCE|CONFORMING[[:space:]]TO'
HISTORY|VERSIONS
"
man1_required_options="
--help
--version
--copying
"
man2_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man2_recommended_sections="
ARGUMENTS|MEMBERS
'RETURN|RETURN[[:space:]]VALUE'
'ERRORS|ERROR[[:space:]]HANDLING'
'SEE[[:space:]]ALSO|REFERENCES'
CONTEXT|MP-STREAMS
COMPATIBILITY
'CONFORMANCE|CONFORMING[[:space:]]TO'
HISTORY|VERSIONS
"
man2_required_options="
"
man3_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man3_recommended_sections="
ARGUMENTS|MEMBERS
'RETURN|RETURN[[:space:]]VALUE'
'ERRORS|ERROR[[:space:]]HANDLING'
'SEE[[:space:]]ALSO|REFERENCES'
CONTEXT|MP-STREAMS
COMPATIBILITY
'CONFORMANCE|CONFORMING[[:space:]]TO'
HISTORY|VERSIONS
"
man3_required_options="
"
man4_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man4_recommended_sections="
"
man4_required_options="
"
man5_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man5_recommended_sections="
"
man5_required_options="
"
man6_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man6_recommended_sections="
"
man6_required_options="
"
man7_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man7_recommended_sections="
"
man7_required_options="
"
man8_required_sections="
NAME
SYNOPSIS
DESCRIPTION
OPTIONS
'ERRORS|DIAGNOSTICS|ERROR[[:space:]]HANDLING'
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man8_recommended_sections="
'SEE[[:space:]]ALSO|REFERENCES'
BUGS|CAVEATS
COMPATIBILITY
'CONFORMANCE|CONFORMING[[:space:]]TO'
HISTORY|VERSIONS
"
man8_required_options="
--help
--version
--copying
"
man9_required_sections="
NAME
SYNOPSIS
DESCRIPTION
IDENTIFICATION|AUTHOR|COPYRIGHT
"
man9_recommended_sections="
ARGUMENTS|MEMBERS
'RETURN|RETURN[[:space:]]VALUE'
'ERRORS|ERROR[[:space:]]HANDLING'
'SEE[[:space:]]ALSO|REFERENCES'
CONTEXT|MP-STREAMS
COMPATIBILITY
'CONFORMANCE|CONFORMING[[:space:]]TO'
HISTORY|VERSIONS
"
man9_required_options="
"

for page in $MANS
do
	# can we find it?
	base=`basename $page`
	echo_t "testing page $page"
	: #echo_t "looking for page $page"
	echo_d "test ! -e ./$page -a ! -e ${srcdir}/$page"
	p=
	if test -e ./$page ; then
		p="./$page"
	elif test -e $srcdir/$page ; then
		p="$srcdir/$page"
	fi
	if test -z "$p" ; then
		echo_e "cannot find page $page"
		retval=1
		continue
	fi
	# can we format it?
	: #echo_t "testing formatting of page $base"
	echo_d "man $p | sed -e 's/.[[:cntrl:]]//g' > ${me}_$$.out 2> ${me}_$$.err"
	if man $p | sed -e 's/.[[:cntrl:]]//g' > ${me}_$$.out 2> ${me}_$$.err \
		&& test -n "`cat ${me}_$$.out`" \
		&& test -z "`cat ${me}_$$.err`"
	then
		echo_s "manual page $p formats correctly"
	else
		echo_e "error formatting manual page $p"
		echo_d "stderr was:"
		while read line ; do echo_d "$line" ; done < ${me}_$$.err
		echo_d "stdout was:"
		while read line ; do echo_d "$line" ; done < ${me}_$$.out
		retval=1
		echo_d "rm -f ${me}_$$.out ${me}_$$.err"
		rm -f ${me}_$$.out ${me}_$$.err
		continue
	fi
	# check for sections and options
	case $base in
		*.1*) section=man1 ;;
		*.2*) section=man2 ;;
		*.3*) section=man3 ;;
		*.4*) section=man4 ;;
		*.5*) section=man5 ;;
		*.6*) section=man6 ;;
		*.7*) section=man7 ;;
		*.8*) section=man8 ;;
		*.9*) section=man9 ;;
		*) echo_w "cannot find base for $base" ; continue ;;
	esac
	eval "required_sections=\"\$${section}_required_sections\""
	eval "recommended_sections=\"\$${section}_recommended_sections\""
	eval "required_options=\"\$${section}_required_options\""
	: #echo_t "testing $base for required sections"
	for target in $required_sections
	do
		: #echo_t "testing $base for required section $target"
		echo_d "egrep -- \"$target\" ${me}_$$.out >/dev/null 2>&1"
		if (egrep -- "$target" ${me}_$$.out >/dev/null 2>&1)
		then
			echo_s "found in $base, section $target"
		else
			if test :"${MAINTAINER_MODE:-no}" != :no
			then
				echo_e "cannot find section '$target' in $base"
				retval=1
				continue
			else
				echo_w "cannot find section '$target' in $base"
			fi
		fi
	done
	: #echo_t "testing $base for recommended sections"
	for target in $recommended_sections
	do
		: #echo_t "testing $base for recommended section $target"
		echo_d "egrep -- \"$target\" ${me}_$$.out >/dev/null 2>&1"
		if (egrep -- "$target" ${me}_$$.out >/dev/null 2>&1)
		then
			echo_s "found in $base, section $target"
		else
			if test :"${MAINTAINER_MODE:-no}" != :no
			then
				echo_w "cannot find section '$target' in $base"
			else
				echo_s "cannot find section '$target' in $base"
			fi
		fi
	done
	: #echo_t "testing $base for required options"
	for target in $required_options
	do
		: #echo_t "testing $base for required option $target"
		echo_d "egrep -- \"$target\" ${me}_$$.out >/dev/null 2>&1"
		if (egrep -- "$target" ${me}_$$.out >/dev/null 2>&1)
		then
			echo_s "found in $base, option $target"
		else
			if test :"${MAINTAINER_MODE:-no}" != :no
			then
				echo_e "cannot find option '$target' in $base"
				retval=1
				continue
			else
				echo_w "cannot find option '$target' in $base"
			fi
		fi
	done
	echo_d "rm -f ${me}_$$.out ${me}_$$.err"
	rm -f ${me}_$$.out ${me}_$$.err
done

if test $retval -eq 1 ; then
	echo_v "--------------"
	echo_v "Error summary:"
	echo_v "--------------"
	egrep '\<E:' $top_builddir/$me.log >&2
	echo_v "--------------"
fi

exit $retval
