# vim: ft=spec sw=4 et
# =============================================================================
# 
# @(#) $RCSfile: strxnet.spec.in,v $ $Name:  $($Revision: 0.9.2.64 $) $Date: 2005/02/19 12:06:52 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2005  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2005/02/19 12:06:52 $ by $Author: brian $
#
# =============================================================================

# default is to build kernel modules and tools
# conditional builds of binary rpms relies on the sneaky spec trick that
# rpmbuild will not build a binary rpm when it has no %files section
%global BUILD_modules 1
%global BUILD_tools   1
%global BUILD_lis     1
%global BUILD_lfs     0

#
# there are three ways to pass kernel version to the build process:
#    define _kversion in /usr/lib/rpm/macros, /etc/rpm/macros or ~/.rpmmacros
#    define _kversion on the rpmbuild command line
#    define PACKAGE_KVERSION environment variable
#    just let it default to `uname -r`
#
%{!?_kversion: %{expand: %%global _kversion %(uname -r)}}

%global kernel_version %{_kversion}
%global kernel_source %(echo %{_kversion} | sed -e 's|BOOT$||;s|smp$||;s|bigmem$||;s|debug$||;s|enterprise$||;s|hugemem$||;s|secure$||;s|-i686-up-4GB$||;s|-p3-smp-64GB$||;s|-64GB-SMP|.SuSE|')
%global kernel_number %(echo %{_kversion} | sed -e 's|-.*$||')
%global kernel_release %(echo %{_kversion} | sed -e 's|-|.|g')
%global core_name core-%{_kversion}
%global info_name info-%{_kversion}
%global epoch @PACKAGE_EPOCH@
%global majbase @STRCONF_MAJBASE@
%global makedev @STRCONF_MAKEDEV@
%global base @PACKAGE_TARNAME@
%global title @PACKAGE_TITLE@
%global stitle @PACKAGE_SHORTTITLE@

%global modules     timod tirdwr
%global libraries   xnet
%global tools       strxnet_mknod test-xnet test-xnet_thr
%global infofiles   %{name} libxnet

# because we only need to build the tools binaries once for each architecture,
# but need to build the modules binaries once for each architecture and kernel
# version, we accept the --with[out] options "modules" and "tools"
%{?_without_modules: %{expand: %%global BUILD_modules 0}}
%{?_without_tools:   %{expand: %%global BUILD_tools   0}}
%{?_without_lis:     %{expand: %%global BUILD_lis     0}}
%{?_without_lis:     %{expand: %%global BUILD_lfs     1}}
%{?_without_lfs:     %{expand: %%global BUILD_lfs     0}}
%{?_without_lfs:     %{expand: %%global BUILD_lis     1}}

%{?_with_modules:    %{expand: %%global BUILD_modules 1}}
%{?_with_tools:      %{expand: %%global BUILD_tools   1}}
%{?_with_lis:        %{expand: %%global BUILD_lis     1}}
%{?_with_lis:        %{expand: %%global BUILD_lfs     0}}
%{?_with_lfs:        %{expand: %%global BUILD_lfs     1}}
%{?_with_lfs:        %{expand: %%global BUILD_lis     0}}

%define oldrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 0 ; else echo 1; fi)
%define newrpm %(if (rpm --version|grep 'RPM version 4' >/dev/null 2>&1) ; then echo 1 ; else echo 0; fi)

%if %{BUILD_tools}
%global BUILD_libs    1
%global BUILD_devs    %newrpm
%global MAKE_devs     %oldrpm
%else
%global BUILD_libs    0
%global BUILD_devs    0
%global MAKE_devs     0
%endif

%global _streams lis
%global _ksubdir lis
%global _kmodext lis
%if %{BUILD_lfs}
%global _STREAMS LfS
%global _streams streams
%global _strvers 0.7a
%global _ksubdir streams
%global _kmodext streams
%global _conflict LiS
%endif
%if %{BUILD_lis}
%global _STREAMS LiS
%global _streams LiS
%global _strvers 2:2.16.18
%global _ksubdir lis
%global _kmodext lis
%global _conflict streams
%endif

# we have some more options that control configure for the build
%{?disturl:%{!?url:%{expand: %%global url %{disturl}}}}
%global fullrelease @PACKAGE_RELEASE@%{extrarelease}
%global _builddir %{_builddir}/%{extrarelease}

# a macro to build require one package of the same version as another
%define buildreq_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|BuildRequires: %1 =|')
%define requires_prov() %(LANG_ALL="C" rpm -q --provides `rpm -q --whatprovides %2` | grep '%2' | grep -v "is not" | head -1 | sed -e 's|%2.*=|Requires: %1 =|')

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} for Linux
%if %{?_without_public: 0}%{!?_without_public: 1}
Name:           @PACKAGE_TARNAME@
%else
Name:           @PACKAGE_TARNAME@-bin
%endif
Epoch:          @PACKAGE_EPOCH@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@
License:        GPL
Group:          System Environment/Kernel
%if %{?url: 1}%{!?url: 0}
URL:            %{url}
%endif
%if %{?_xpm_icon: 1}%{!?_xpm_icon: 0}
Icon:           %{_xpm_icon}
%endif
%if %{?_gif_icon: 1}%{!?_gif_icon: 0}
Icon:           %{_gif_icon}
%endif
ExclusiveArch:  %{ix86} k6 x86_64 s390 s390x ppc ppciseries ppcpseries ppc64 arm armv4l sh mips mipsel
ExclusiveOs:    Linux
#Source:         %{name}-%{version}-%{release}.tar.bz2
Source:         ftp://ftp.openss7.org/pub/linux/src/%{name}/%{name}-%{version}-%{release}.tar.bz2
%if %{?buildroot: 0}%{!?buildroot: 1}
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{fullrelease}-root
%endif
%if %{BUILD_modules}
BuildRequires:  kernel-source = %{kernel_source}
BuildRequires:  modutils >= 2.4.12
%endif
BuildRequires:  %{_streams}-%{info_name} >= %{_strvers}
BuildRequires:  %{_streams}-devel >= %{_strvers}
%buildreq_prov %{_streams}-devel %{_streams}-%{info_name}
%define newgcc %(if test `gcc -v 2>&1 | grep 'gcc version' | sed -e 's|gcc version ||;s| .*$||'` != '2.95.3' ; then echo 1 ; else echo 0 ; fi)
%ifarch s390 s390x
BuildRequires:  gcc >= 2.95.3
%else
%ifarch %{all_ppc}
BuildRequires:  gcc >= 2.96-75
%else
%if %{newgcc}
BuildRequires:  gcc >= 2.96-98
%else
BuildRequires:  gcc = 2.95.3
%endif
%endif
%endif
%if %{newgcc}
BuildRequires:  gcc >= 2.96
%else
BuildRequires:  gcc = 2.95.3
%endif
BuildRequires:  strxns-devel >= %{epoch}:%{version}
# these are some needs of the configure script
# to manipulate manual pages:
BuildRequires:  /usr/bin/soelim
BuildRequires:  /usr/bin/refer
BuildRequires:  /usr/bin/tbl
BuildRequires:  /usr/bin/pic
BuildRequires:  /usr/bin/gzip
# to generate kernel symbols:
BuildRequires:  /sbin/genksyms
# find the rest automagically
Autoreq:        true

# ---------------------------------------------------------------------------
%description
The %{name} package includes kernel modules, %{_STREAMS} STREAMS drivers,
modules, libraries, utilities, test programs, daemons, and development
environment for the development and execution of X/Open Networking (XNET)
protocol stack components and applications for the
%{_STREAMS} STREAMS environment.  This distribution is only currently
applicable to 2.4 kernels and was targetted at ix86 and ppc architectures, but
should build and install for other architectures as well.

%prep
# ---------------------------------------------------------------------------

[ -L %{name} ] && rm -f %{name}
ln -sf %{name}-%{version}-%{release} %{name}
%setup -q -n %{name}-%{version}-%{release}

%build
# ---------------------------------------------------------------------------

preferred_cflags="%{optflags}"

%ifarch %{ix86}
preferred_cflags="$preferred_cflags -D__USE_STRING_INLINES -fstrict-aliasing"
%endif

%ifarch sparc
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparcv9
preferred_cflags="$preferred_cflags -fcall-used-g7"
%endif

%ifarch sparc64
preferred_cflags="$preferred_cflags -mvis -fcall-used-g7"
%endif

%ifnarch ia64 s390 s390x ppc ppciseries ppc64
if test "`gcc --version`" != '2.95.3' ; then
preferred_cflags="$preferred_cflags -freorder-blocks"
fi
%endif

%define cache_file %{_builddir}/%{_target_platform}-%{kernel_version}-config.cache
%define csite_file %{_builddir}/%{_target_platform}-config.site

%define enable()  %(echo "%1" | sed -e 's|^--with-|--enable-|')
%define disable() %(echo "%1" | sed -e 's|^--without-|--disable-|')

./configure \
    CC="${CC}" \
    CFLAGS="${CFLAGS:-$preferred_cflags}" \
    LDFLAGS="${LDFLAGS}" \
    CPPFLAGS="${CPPFLAGS}" \
    CPP="${CPP}" \
    CXX="${CXX:-$CC}" \
    CXXFLAGS="${CXXFLAGS:-$preferred_cflags}" \
    CXXCPP="${CXXCPP:-$CPP}" \
    CONFIG_SITE="%{csite_file}" \
    --cache-file="%{cache_file}" \
    --build=%{_build} \
    --host=%{_target_platform} \
    --prefix=%{_prefix} \
    --exec-prefix=%{_exec_prefix} \
    --bindir=%{_bindir} \
    --sbindir=%{_sbindir} \
    --sysconfdir=%{_sysconfdir} \
    --datadir=%{_datadir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --libexecdir=%{_libexecdir} \
    --localstatedir=%{_localstatedir} \
    --sharedstatedir=%{_sharedstatedir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --disable-maintainer-mode \
    --disable-dependency-tracking \
    --with-gnu-ld \
    --with-k-release=%{kernel_version} \
    --with-k-modules=/%{_lib}/modules/%{kernel_version} \
    --with-pkg-epoch=%{epoch} \
    --with-pkg-release=%{release} \
    --with-base-major=%{majbase} \
    %{?_with_checks:             '%enable %_with_checks'} \
    %{?_without_checks:          '%disable %_without_checks'} \
    %{?_with_autotest:           '%enable %_with_autotest'} \
    %{?_without_autotest:        '%disable %_without_autotest'} \
    %{?_with_k_optimize:         '%_with_k_optimize'} \
    %{?_with_cooked_manpages:    '%_with_cooked_manpages'} \
    %{?_without_cooked_manpages: '%_without_cooked_manpages'} \
    %{?_with_public:             '%enable %_with_public'} \
    %{?_without_public:          '%disable %_without_public'} \
    %{?_with_k_debug:            '%enable %_with_k_debug'} \
    %{?_without_k_debug:         '%disable %_without_k_debug'} \
    %{?_with_k_test:             '%enable %_with_k_test'} \
    %{?_without_k_test:          '%disable %_without_k_test'} \
    %{?_with_k_safe:             '%enable %_with_k_safe'} \
    %{?_without_k_safe:          '%disable %_without_k_safe'} \
    %{?_with_k_inline:           '%enable %_with_k_inline'} \
    %{?_without_k_inline:        '%disable %_without_k_inline'} \
    %{?_with_tools:              '%enable %_with_tools'} \
    %{?_without_tools:           '%disable %_without_tools'} \
    %{?_with_modules:            '%enable %_with_modules'} \
    %{?_without_modules:         '%disable %_without_modules'} \
    %{?_with_lis:                '%_with_lis'} \
    %{?_with_lfs:                '%_with_lfs'} \
    || { rm -f %{cache_file} ; exit 1 ; }

make
make check

%install
# ---------------------------------------------------------------------------

# in case it was not cleaned
[ -n "%{buildroot}" -a "%{buildroot}" != / ] && rm -rf %{buildroot}

%if %{?_enable_debug_packages: %{_enable_debug_packages}}%{!?_enable_debug_packages: 0}
# we are going to create debug packages, so we need to install unstripped binaries.
make DESTDIR="%{buildroot}" DOCDIR="%{_docdir}" install
%else
# use libtoolized install-strip to strip binaries, modules, shared and static libraries.
make DESTDIR="%{buildroot}" DOCDIR="%{_docdir}" install-strip
%endif

# copy out our devices list
# cp -pf %{mybuilddir}/%{makedev} .

# get the installed info directory out of the build root
[ -e "%{buildroot}/%{_infodir}/dir" ] && rm -f "%{buildroot}/%{_infodir}/dir"

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
# clean out binaries and auxilliary files
make mostlyclean
# punch rpm release to Custom
echo '.Custom.1'  > .rpmextra
# create configured source directory for source package
mkdir -p %{buildroot}%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# tar and move the sources for source release
tar cf - . | tar xf - -C %{buildroot}%{_usrsrc}/%{name}-%{version}-%{fullrelease}
# create symbolic link
ln -sf %{name}-%{version}-%{fullrelease} %{buildroot}%{_usrsrc}/%{name}
%endif

# stupid mandrake spec-helper will compress our macros files otherwise
@COOKED_MANPAGES_FALSE@export EXCLUDE_FROM_COMPRESS="%{base}.refs %{base}.macros"

%clean
# ---------------------------------------------------------------------------

[ -n "%{buildroot}" -a "%{buildroot}" != / ] && rm -rf %{buildroot}

# ===========================================================================
%package %{_streams}-%{core_name}

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} kernel modules.
Group:          System Environment/Kernel
Prefix:         /%{_lib}/modules/%{kernel_version}
Requires:       %(LANG_ALL="C" rpm -q --whatprovides /lib/modules/%{kernel_version}/kernel --qf "%{NAME} = %{VERSION}-%{RELEASE}\n")
Requires:       %{_streams}-%{core_name} >= %{_strvers}
Conflicts:      %{_conflict}-%{core_name}
Prereq:         /sbin/depmod
Prereq:         /sbin/lsmod
Prereq:         /sbin/insmod
Prereq:         /sbin/modprobe
Prereq:         /usr/sbin/lsof
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Provides:       %{name}-core = %{epoch}:%{version}-%{fullrelease}
Provides:       %{name}-%{_streams}-core = %{epoch}:%{version}-%{fullrelease}
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-%{core_name}
The %{name}-%{_streams}-%{core_name} package contains the kernel modules
that provide the Linux kernel %{stitle} %{_STREAMS} STREAMS drivers and modules.
This also includes assorted drivers and modules for additional protocol stacks
such as XNET.  This package is heavily tied to the kernel for which it and the
%{_STREAMS} STREAMS facility was compiled.  This package applies to kernel
version %{kernel_version} and requires a %{_STREAMS} STREAMS package compiled
for the same kernel.

%pre %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   if we are upgrading and the upgrade is for the running kernel, or we are
#   installing new on the running kernel, we have to worry about previous
#   loaded modules for the old version or a non-rpm version
    for m in %{modules} ; do
        m="streams-$m"
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           module running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                fdetach -a 2>/dev/null
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                eval "kill -HUP $tokens[1]"
                            fi
                        fi
                    done
                    /sbin/sleep 5 # wait for processes to die and close streams
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Cannot install or upgrade with $m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%post %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 1 ] ; then
#   This is the end of a fresh install.
#   Check that our line is in the modules.%{base} file
    conf_old=/etc/modules.conf
    if ( grep -q 'include.*modules.%{base}' $conf_old ) ; then :; else
        streams_dir=/%{_lib}/modules/%{kernel_version}/misc
        streams_prf=/%{_lib}/modules/preferred/misc
        streams_dfl=/%{_lib}/modules/default/misc
        conf_new=%{_tmppath}/modules.conf.new.$$
        cp -f $conf_old $conf_new
#       if not, check for an old non-rpm LiS
        if ( grep -q 'BEGIN LiS' $conf_old ) ; then
            conf_tmp=%{_tmppath}/modules.conf.tmp.$$
            list=`find /%{_lib}/modules/%{kernel_version}/%{base} -name "*.o" -o -name "*.o.gz"`
            for p in $list ; do
                f=$(basename $p)
                m=$(basename $(basename $f .gz) .o)
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $conf_new > $conf_tmp
                mv -f $conf_tmp $conf_new
#               Remove conflicting modules.
                rm -f $streams_dir/boot/$f $streams_dir/$f
                rm -f $streams_prf/boot/$f $streams_prf/$f
                rm -f $streams_dfl/boot/$f $streams_dfl/$f
            done
            rmdir --ignore-fail-on-non-empty $streams_dir/boot $streams_dir
            rmdir --ignore-fail-on-non-empty $streams_prf/boot $streams_prf
            rmdir --ignore-fail-on-non-empty $streams_dfl/boot $streams_dfl
        fi
#       check for forced over installs of older LiS or LfS rpm installations
#       or installs over older LiS or LfS autoconf installations
        streams_dir=/%{_lib}/modules/%{kernel_version}/%{_ksubdir}
        streams_prf=/%{_lib}/modules/preferred/%{_ksubdir}
        streams_dfl=/%{_lib}/modules/default/%{_ksubdir}
        streams_old=/%{_lib}/modules/%{kernel_version}/modules.%{_kmodext}
        if [ -d $streams_dir -a -f $streams_old ] ; then
            streams_new=%{_tmppath}/modules.%{_kmodext}.new.$$
            streams_tmp=%{_tmppath}/modules.%{_kmodext}.tmp.$$
            cp -f $streams_old $streams_new
            list=`find /%{_lib}/modules/%{kernel_version}/%{base} -name "*.o"`
            for p in $list ; do
                f=$(basename $p)
                m=$(basename $(basename $f .gz) .o)
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $streams_new > $streams_tmp
                mv -f $streams_tmp $streams_new
#               Remove conflicting modules.
                rm -f $streams_dir/boot/$f $streams_dir/$f
                rm -f $streams_prf/boot/$f $streams_prf/$f
                rm -f $streams_dfl/boot/$f $streams_dfl/$f
            done
            rmdir --ignore-fail-on-non-empty $streams_dir/boot $streams_dir
            rmdir --ignore-fail-on-non-empty $streams_prf/boot $streams_prf
            rmdir --ignore-fail-on-non-empty $streams_dfl/boot $streams_dfl
#           can't make backups in modules directory
            chmod --reference=$streams_old $streams_new
            cp -f $streams_new $streams_old
            rm -f $streams_new
        fi
        echo 'prune modules.%{base}' >> $conf_new
        echo 'if -f /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'include /lib/modules/`uname -r`/modules.%{base}' >> $conf_new
        echo 'endif' >> $conf_new
        chmod --reference=$conf_old $conf_new
        cp -fb --suffix=.rpmsave $conf_new $conf_old
        rm -f $conf_new
    fi
fi
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot by /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi

%preun %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
if [ $1 = 0 -a ":%{kernel_version}" = ":`uname -r`" ] ; then
#   We are about to uninstall for good on a running kernel then we have to
#   worry about which modules are running
    for m in %{modules} ; do
        m="streams-$m"
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                fdetach -a
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                eval "kill -KILL $tokens[1]"
                            fi
                        fi
                    done
                    /sbin/sleep 5 # wait for processes to die and close streams
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Cannot uninstall with $m module running." >&2
                        exit 1
                    fi
                fi
            fi
        fi
    done
fi

%postun %{_streams}-%{core_name}
# ---------------------------------------------------------------------------

if [ $1 = 0 ]; then
#   this is the last stage of a removal we are going away: we need to see if
#   we need to remove our line from modules.conf and remove our devices
    remove_line=yes
    for file in /lib/modules/*/modules.%{base} ; do
        if [ -f $file ] ; then
            remove_line=no
            break
        fi
    done
    if [ ":$remove_line" = :yes ] ; then
        sed -e '/prune modules.%{base}/,/endif/d' /etc/modules.conf > %{_tmppath}/modules.conf.tmp.$$
        chmod --reference=/etc/modules.conf %{_tmppath}/modules.conf.tmp.$$
        cp -fb --suffix=.rpmorig %{_tmppath}/modules.conf.tmp.$$ /etc/modules.conf
        rm -f %{_tmppath}/modules.conf.tmp.$$
    fi
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   this is a running kernel, do a /sbin/depmod on the modules directory for
    /sbin/depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a /sbin/depmod will be performed on boot but /sbin/depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    /sbin/depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   one more kick at killing any loaded modules on uninstall, last stage of
#   the upgrade on a running kernel for upgrade.
    reboot='no'
    for m in %{modules} ; do
        m="streams-$m"
        if ( /sbin/lsmod | grep -q "^$m" ) ; then
#           modules running, kick the stack
            /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
            if ( /sbin/lsmod | grep -q "^$m" ) ; then
                fdetach -a
                /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                if ( /sbin/lsmod | grep -q "^$m" ) ; then
                    /sbin/insmod -ar "$m"
                    /usr/sbin/lsof | while read -a tokens; do
                        if [ :"$tokens[4]" = :"CHR" ]; then
                            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
                            if [ $major -eq %{majbase} ]; then
                                if [ $1 = 0 ] ; then
#                                   extreme prejudice for removal
                                    eval "kill -KILL $tokens[1]"
                                else
#                                   try to get them to reload for upgrade
                                    eval "kill -HUP $tokens[1]"
                                fi
                            fi
                        fi
                    done
                    /sbin/sleep 5 # wait for processes to die and close streams
                    /sbin/modprobe -r `/sbin/lsmod | grep "^$m" | cut -f1 '-d '`
                    if ( /sbin/lsmod | grep -q "^$m" ) ; then
                        echo "Error: modules may be still loaded" >&2
                        /sbin/lsmod | grep "^$m" >&2
                        reboot='yes'
                    fi
                fi
            fi
        fi
    done
    if [ "$reboot" = 'yes' ]; then
        echo "you may have to reboot" >&2
        exit 1
    fi
fi

%if %{BUILD_modules}
%files %{_streams}-%{core_name}
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir /%{_lib}/modules/%{kernel_version}/%{base}
%attr(644,root,root) /%{_lib}/modules/%{kernel_version}/modules.%{base}
/%{_lib}/modules/%{kernel_version}/%{base}/*
%endif

# ===========================================================================
%package dev

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} devices.
Group:          System Environment/Base
Requires:       dev >= 3.3
Obsoletes:      %{name}-devs
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description dev
The %{name}-dev package contains the device definitions necessary to run
applications programs and utilities developed for OpenSS7 %{_STREAMS} STREAMS
%{stitle}.

%if %{MAKE_devs}
%post dev
#   older rpm versions < 4.0 (such as those used by SuSE) are not capable of doing
#   rootless builds because they have no %%dev macro, so in that case we just run the makenodes
#   program that was generated in the build to create devices.
if [ $1 = 0 ] ; then
    /usr/sbin/@STRMAKENODES@
fi

%preun dev
#   older rpm versions < 4.0 (such as those used by SuSE) are not capable of doing
#   rootless builds because they have no %%dev macro, so in that case we just run the makenodes
#   program that was generated in the build to create devices.
if [ $1 = 0 ] ; then
    /usr/sbin/@STRMAKENODES@ --remove
fi

%endif

# ---------------------------------------------------------------------------
%if %{MAKE_devs}
%files dev
%defattr(-,root,root)
%endif
%if %{BUILD_devs}
%files dev -f %{makedev}
%defattr(-,root,root)
%endif

# ===========================================================================
%package %{_streams}-lib

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} run-time libraries.
Group:          System Environment/Libraries
Prefix:         %{_libdir}
Prefix:         %{_datadir}/locale
Requires:       %{_streams}-lib >= %{_strvers}
Obsoletes:      %{name}-%{_streams}-libs
Prereq:         /sbin/ldconfig
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-lib
The %{name}-%{_streams}-lib package contains the run-time shared libraries
necessary to run applications programs and utilities developed for OpenSS7
%{_STREAMS} STREAMS %{stitle}.

%pre %{_streams}-lib
# ---------------------------------------------------------------------------
if [ $1 = 0 ] ; then
#   this is supposed to be a fresh install
#   see if there are any libraries hanging around from a non-rpm install
    libs="%{libraries}" ; for lib in $libs ; do
        old_libs="`( /sbin/ldconfig -p | grep '\<lib'$lib'\>' | cut '-d ' -f4 ) 2>/dev/null`"
        if [ -n "$old_libs" ] ; then
#       old libraries hanging around, delete them
            echo "warning: Deleting old non-rpm libraries $old_libs" >&2
            rm -f $old_libs
        fi
    done
else
    :
#   upgrade, let RPM do its job
fi

%post %{_streams}-lib
# ---------------------------------------------------------------------------
# do a load config
if [ $1 = 0 ] ; then
#   end of fresh install, do /sbin/ldconfig
    /sbin/ldconfig >/dev/null
else
    :
#   upgrade, wait for old postun
fi

%postun %{_streams}-lib
# ---------------------------------------------------------------------------
# whether complete removal or upgrade, do a load config
/sbin/ldconfig

%if %{BUILD_libs}
%files %{_streams}-lib
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.so*
%{_libdir}/*.la
%{_datadir}/locale/*
%endif

# ===========================================================================
%package doc

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} manpages and doc.
Group:          Documentation
Prefix:         %{_docdir}
Prefix:         %{_infodir}
Prefix:         %{_mandir}
Conflicts:      texinfo < 3.11
Obsoletes:      %{name}-docs
Prereq:         /sbin/install-info
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description doc
The %{name}-doc package contains html documentation for the development of
OpenSS7 %{_STREAMS} STREAMS %{stitle} applications, modules and drivers.

%post doc
# ---------------------------------------------------------------------------
if [ -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        elif [ -f %{_infodir}/$n.info.bz2 ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.bz2
        fi
    done
fi

%preun doc
# ---------------------------------------------------------------------------
if [ "$1" = 0 -a -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{infofiles} ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        elif [ -f %{_infodir}/$n.info.bz2 ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.bz2
        fi
    done
fi

%if %{BUILD_tools}
%files doc
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%doc ABOUT-NLS
%endif
%doc AUTHORS ChangeLog COPYING INSTALL NEWS README THANKS doc/manual
%doc %{name}-%{version}-@PACKAGE_RELEASE@.lsm
%{_infodir}/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{base}.macros
%{_mandir}/man*/*
%endif

# ===========================================================================
%package devel

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} headers, lib and doc.
Group:          Development/System
Prefix:         %{_libdir}
Prefix:         %{_includedir}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description devel
The %{name}-devel package contains library archives for static compilation,
and headers files to develop OpenSS7 %{_STREAMS} STREAMS %{stitle} applications.
This also includes the header files and static libraries required to compile
OpenSS7 %{_STREAMS} STREAMS %{stitle} applications programs.  In addition it
contains all of the manual pages necessary for developing OpenSS7 %{_STREAMS}
STREAMS %{stitle} application programs.

%if %{BUILD_tools}
%files devel
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{BUILD_libs}
%{_libdir}/*.a
%endif
%{_includedir}/*
%endif

# ===========================================================================
%package source

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} source package.
Group:          Development/System
Prefix:         %{_usrsrc}
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description source
The %{name}-source package contains the source code necessary for building the
%{name} release.  It includes the autoconf configuration utilities necessary
to create and distribute this rpm.

%if %{?_without_public: 0}%{!?_without_public: %{BUILD_tools}}
%files source
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir %{_usrsrc}/%{name}-%{version}-%{fullrelease}
%{_usrsrc}/%{name}
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/*
%{_usrsrc}/%{name}-%{version}-%{fullrelease}/.[^.]*
%endif

# ===========================================================================
%package %{_streams}-util

Summary:        OpenSS7 %{_STREAMS} STREAMS %{stitle} admin utilities.
Group:          System Environment/Base
Prefix:         %{_bindir}
Prefix:         %{_sbindir}
Prefix:         %{_libexecdir}
Requires:       %{name}-%{_streams}-lib = %{epoch}:%{version}-%{fullrelease}
Requires:       %{_streams}-lib >= %{_strvers}
Obsoletes:      %{name}-%{_streams}-utils
Conflicts:      %{_conflict}-util
Autoreq:        true
%if %{?_xpm: 1}%{!?_xpm: 0}
Icon:           %{_xpm}
%endif
%if %{?_gif: 1}%{!?_gif: 0}
Icon:           %{_gif}
%endif
Release:        %{fullrelease}

# ---------------------------------------------------------------------------
%description %{_streams}-util
The %{name}-%{_streams}-util package provides administrative and configuration
test utilities and commands associated with the OpenSS7 %{_STREAMS} STREAMS
%{stitle} package.

%pre %{_streams}-util
# ---------------------------------------------------------------------------
if [ $1 = 0 ]; then
# this is a fresh install, look for old non-rpm tools
    tools="%{tools}" ; for tool in $tools ; do
        location="`which $tool 2>/dev/null`"
        while [ -n "$location" -a -x "$location" ] ; do
            eval "rm -f $location"
            location="`which $tool 2>/dev/null`"
        done
    done
else
    :
#   upgrade, let rpm do its job
fi

%if %{BUILD_tools}
%files %{_streams}-util
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%{_bindir}/*
%{_sbindir}/*
%{_libexecdir}/*test*
%endif

# ===========================================================================
%changelog
# ---------------------------------------------------------------------------
# $Log: strxnet.spec.in,v $
# Revision 0.9.2.64  2005/02/19 12:06:52  brian
# - rpm-epoch to pkg-epoch, rpm-release to pkg-release
# - proper quotation of configure options
#
# Revision 0.9.2.63  2005/02/15 14:15:40  brian
# - Remove link before linking.
#
# Revision 0.9.2.62  2005/02/11 04:20:43  brian
# - Added boot directory.
#
# Revision 0.9.2.61  2005/02/10 12:56:43  brian
# - Minor adjustments for compressed modules.
#
# Revision 0.9.2.60  2005/02/07 22:23:28  brian
# - Updated changelog.
#

* Thu Feb  3 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.59  2005/02/03 12:34:56  brian
- Spec file grand rework.

* Wed Feb  2 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.58  2005/02/02 10:43:03  brian
- Build in builddir again.

* Tue Feb  1 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.57  2005/02/01 19:01:25  brian
- Working up master build.

* Sat Jan 29 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.56  2005/01/29 11:22:41  brian
- Have master build working well.

* Thu Jan 27 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.55  2005/01/27 08:30:30  brian
- Get tarball and srpm names right.

* Fri Jan 21 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.54  2005/01/21 08:41:15  brian
- Work around mandrake spec-helper for uncooked manpages.

* Thu Jan 20 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.53  2005/01/20 00:52:05  brian
- Go back to quick no dependencies compile.

* Wed Jan 19 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.52  2005/01/19 07:38:47  brian
- Added checks and autotest options to configure.

* Tue Jan 18 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.51  2005/01/18 20:23:47  brian
- Also reference makedev file one down.

* Tue Jan 18 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.50  2005/01/18 13:31:22  brian
- Support multiple builds on same NFS mount.

* Tue Jan 18 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.49  2005/01/18 10:42:40  brian
- Rationalize to new separated build approach.

* Sat Jan 15 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.48  2005/01/15 19:44:06  brian
- Added kernel module checks.

* Thu Jan 13 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.47  2005/01/13 12:18:17  brian
- *** empty log message ***

* Mon Jan 10 2005 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.46  2005/01/10 18:59:31  brian
- mandrake places libexec files in /usr/lib, correct globbing
- updated change logs

* Thu Dec 30 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.45  2004/12/30 21:22:39  brian
- Mandrake compresses info files with bzip2.

* Thu Dec 30 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.44  2004/12/30 08:07:25  brian
- Fix globbing on source package.

* Wed Dec 29 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.43  2004/12/29 21:33:45  brian
- Straighten out cache and site files.

* Wed Dec 29 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.42  2004/12/29 07:23:10  brian
- Added missing config_site macro definition.

* Tue Dec 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.41  2004/12/21 22:22:28  brian
- Added automatic site configuration to rpm build.

* Sun Dec 19 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.40  2004/12/19 15:12:00  brian
- Working up better spec files.

* Fri Dec 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.39  2004/12/17 13:31:17  brian
- Cleared up build depdendencies, added info subpackage to LiS and streams.

* Fri Dec 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.38  2004/12/17 04:02:54  brian
- Improving spec files.

* Wed Dec 15 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.37  2004/12/15 15:25:34  brian
- avoid undefined debug macro

* Wed Dec 15 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.36  2004/12/15 14:59:08  brian
- Update RPM build to build multiple distribution binary RPMs from a single SRPM.

* Mon Dec 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.35  2004/12/13 10:52:09  brian
- Removed vendor specific headers. (Define these in your .rpmmacros file.)
- Added both .xpm and .gif icons into binary packages.
- Fixed extrainfo empty macro body warning once and for all.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.34  2004/11/24 14:30:46  brian
- Changes for multiple rpm distro builds.

* Wed Nov 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.33  2004/11/24 11:27:51  brian
- Changes to accomodate %_vendor macro for multiple distribution rpm builds.

* Wed Oct 13 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.32  2004/10/13 01:49:06  brian
- Updates spec changelogs.

* Tue Aug 31 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.31  2004/08/31 04:49:05  brian
- Avoid empty macro body error on extrainfo.

* Sun Aug 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.30  2004/08/22 04:01:06  brian
- Corrected removal of old installed modules.

* Tue Aug 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.29  2004/08/17 11:45:12  brian
- Upgraded spec files.

* Sat Aug  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.28  2004/08/07 11:01:09  brian
- More rational provides structure.

* Fri Aug  6 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.27  2004/08/06 08:15:35  brian
- Strapped out dev sub-package.

* Sun Jul 11 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.26  2004/07/11 08:48:30  brian
- Correct symbolic links again.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.25  2004/06/28 19:40:34  brian
- Do not package up debug files on recent rpmbuild.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.24  2004/06/28 11:33:15  brian
- Support binary release.

* Mon Jun 28 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.23  2004/06/28 09:01:18  brian
- Updated spec files.

* Sun Jun 27 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.22  2004/06/27 10:12:38  brian
- Updated changelog.

* Sun Jun 27 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.21  2004/06/27 10:11:41  brian
- Some rpm fixes.

* Sun Jun 27 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.20  2004/06/27 08:21:50  brian
- Finalizing separate xnet release.

* Sat Jun 26 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.19  2004/06/27 04:24:12  brian
- Parameterized major base.

* Mon Jun 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.18  2004/06/21 18:08:37  brian
- RPM 4.2.1 and up set default epoch to 0.

* Sun Jun 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.17  2004/06/20 20:22:21  brian
- FC1 rpm 4.2.1 can't handle internal Requires.

* Sun Jun  6 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.16  2004/06/06 03:48:44  brian
- Updated change logs.

* Sun May 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.15  2004/05/25 06:52:50  brian
- Removed double listing on source directory.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.14  2004/05/24 20:49:21  brian
- Don't copy sources if source package not built.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.13  2004/05/24 12:48:47  brian
- Updated build process.

* Sun May 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.12  2004/05/23 08:40:54  brian
- Corrected info install.

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.11  2004/05/20 18:20:58  brian
- make before DESTDIR on install

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.10  2004/05/20 00:03:43  brian
- Split and factor packages by STREAMS dependency.

* Tue May 18 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.9  2004/05/18 07:14:09  brian
- More adjustments for dual LiS/LfS build.

* Tue May 18 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.8  2004/05/18 04:41:17  brian
- Changes for Linux Fast-STREAMS build.

* Mon May 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.7  2004/05/17 08:33:33  brian
- More relocations and script typo.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.6  2004/05/16 19:19:27  brian
- Reworking install.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/05/16 04:12:30  brian
- Updating strxnet release.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/05/16 02:35:33  brian
- Updating strxnet for release.

* Wed Apr  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/04/07 22:23:06  brian
- Updating build system.

* Wed Apr  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/04/07 08:38:55  brian
- Preparing for release.

* Mon Apr  5 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/04/05 12:39:05  brian
- Working up XNET release.

* Sat Apr  3 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/04/03 22:37:07  brian
- Initial cut of new strxnet rpm release.

* Sat Apr  3 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/04/03 12:44:16  brian
- Initial cut of new strxnet package.

* Sun Feb 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/02/22 07:30:09  brian
- Added documentation.

* Tue Feb 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/02/17 06:30:25  brian
- Added public release option.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/01/21 23:25:47  brian
- Corrected info install for older RPM versions.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/01/21 21:24:50  brian
- Updated and tested M2PA to Draft10.

* Mon Jan 19 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/01/19 22:57:08  brian
- Corrected info install.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/01/17 07:50:03  brian
- Added files for 0.9 baseline autoconf release.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.1  2004/01/17 02:15:32  brian
- Added spec file.

* Sun Jan 11 2004 Brian Bidulock <bidulock@openss7.org>
- Began this RPM build for OpenSS7.
- Borrowed heavily from the OpenSS7 LiS build.

# vim: ft=spec sw=4 et
