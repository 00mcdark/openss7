# vim: ft=spec sw=4 et
# =============================================================================
# 
# @(#) $RCSfile: strxnet.spec.in,v $ $Name:  $($Revision: 0.9.2.16 $) $Date: 2004/06/06 03:48:44 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2004  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any success regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2004/06/06 03:48:44 $ by $Author: brian $
#
# =============================================================================

%define base_release @PACKAGE_RELEASE@

# default is to build kernel modules and tools
# conditional builds of binary rpms relies on the sneaky spec trick that
# rpmbuild will not build a binary rpm when it has no %files section
%define BUILD_modules 1
%define BUILD_tools   1
%define BUILD_lis     1
%define BUILD_lfs     0

#
# there are three ways to pass kernel version to the build process:
#    define _kversion in /usr/lib/rpm/macros, /etc/rpm/macros or ~/.rpmmacros
#    define _kversion on the rpmbuild command line
#    define PACKAGE_KVERSION environment variable
#    just let it default to `uname -r`
#
%{!?_kversion:%{expand: %%define _kversion %(env | grep PACKAGE_KVERSION | sed -e 's|.*=||')}}
%{!?_kversion:%{expand: %%define _kversion %(uname -r)}}

%define kernel_version %{_kversion}
%define kernel_source %(echo %{_kversion} | sed -e 's|BOOT||')
%define kernel_number %(echo %{_kversion} | sed -e 's|-.*$||')
%define kernel_release %(echo %{_kversion} | sed -e 's|-|.|g')

# because we only need to build the tools binaries once for each architecture,
# but need to build the modules binaries once for each architecture and kernel
# version, we accept the --with[out] options "modules" and "tools"
%{?_without_modules: %{expand: %%define BUILD_modules 0}}
%{?_without_tools:   %{expand: %%define BUILD_tools   0}}
%{?_without_lis:     %{expand: %%define BUILD_lis     0}}
%{?_without_lis:     %{expand: %%define BUILD_lfs     1}}
%{?_without_lfs:     %{expand: %%define BUILD_lfs     0}}
%{?_without_lfs:     %{expand: %%define BUILD_lis     1}}

%{?_with_modules:    %{expand: %%define BUILD_modules 1}}
%{?_with_tools:      %{expand: %%define BUILD_tools   1}}
%{?_with_lis:        %{expand: %%define BUILD_lis     1}}
%{?_with_lis:        %{expand: %%define BUILD_lfs     0}}
%{?_with_lfs:        %{expand: %%define BUILD_lfs     1}}
%{?_with_lfs:        %{expand: %%define BUILD_lis     0}}

%define _streams lis
%define _ksubdir misc
%if %{BUILD_lfs}
%define _streams lfs
%define _ksubdir streams
%endif
%if %{BUILD_lis}
%define _streams lis
%define _ksubdir misc
%endif

# we have some more options that control configure for the build

Summary:        OpenSS7 STREAMS INET for Linux
Name:           @PACKAGE_TARNAME@
Epoch:          @PACKAGE_EPOCH@
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_RELEASE@
License:        GPL
Group:          System Environment/Kernel
%if %{?_vendor: 1}%{!?_vendor: 0}
Vendor:         %{_vendor}
%endif
%if %{?_distribution: 1}%{!?_distribution: 0}
Distribution:   %{_distribution}
%endif
%if %{?disturl: 1}%{!?disturl: 0}
URL:            %disturl
%endif
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif
ExclusiveArch:  i386 i686 i586 athlon x86_64 s390 s390x ppc ppciseries ppcpseries ppc64 arm armv4l sh mips mipsel
ExclusiveOs:    Linux
Source:         %{name}-%{version}-%{release}.tar.bz2
Obsoletes:      %{name}
Obsoletes:      INET
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root
Requires:       kernel >= 2.4.7
Requires:       kernel < 2.5
%if %{BUILD_lfs}
Requires:       streams >= 0.7a
%endif
%if %{BUILD_lis}
Requires:       LiS >= 2.16.18-15
%endif
Provides:       INET
BuildRequires:  kernel-source >= 2.4
%ifarch s390 s390x
BuildRequires:  gcc >= 2.95.3
%else
%ifarch %{all_ppc}
BuildRequires:  gcc >= 2.96-75
%else
BuildRequires:  gcc >= 2.96-98
%endif
%endif
BuildRequires:  gcc >= 2.96
%if %{BUILD_lis}
BuildRequires:  LiS-devel >= 2.16.18
%endif
%if %{BUILD_lfs}
BuildRequires:  streams-devel >= 0.7a
%endif
Autoreq:        true

# ---------------------------------------------------------------------------
%description
The %{name} package includes kernel modules, STREAMS drivers, modules,
libraries, utilities, test programs, daemons, and development environment for
the development and execution of Internet Protocols (INET) protocol stack
components and applications for the STREAMS environment.  This distribution is
only currently applicable to 2.4 kernels and was targetted at ix86 and ppc
architectures, but should build and install for other architectures as well.

%prep
# ---------------------------------------------------------------------------
# let rpm do its job (but tell it where to find things)

%setup -q -n %{name}-%{version}-%{release}

%build
# ---------------------------------------------------------------------------

rm -rf build-%{_target_cpu}
mkdir  build-%{_target_cpu}
cd     build-%{_target_cpu}

preferred_cflags="%{optflags}"

%ifarch %{ix86}
preferred_cflags="-march=%{_target_cpu} -D__USE_STRING_INLINES -fstrict-aliasing"
%endif

%ifarch alphaev6
preferred_cflags="-mcpu=ev6"
%endif

%ifarch sparc
preferred_cflags="-m32 -fcall-used-g7"
%endif

%ifarch sparcv9
preferred_cflags="-m32 -mcpu=ultrasparc -fcall-used-g7"
%endif

%ifarch sparc64
preferred_cflags="-m64 -mcpu=ultrasparc -mvis -fcall-used-g7"
%endif

%ifnarch ia64 s390 s390x ppc ppciseries ppc64
preferred_cflags="-freorder-blocks"
%endif

../configure \
    CC=${CC} \
    CFLAGS=${CFLAGS:-$preferred_cflags} \
    LDFLAGS=${LDFLAGS} \
    CPPFLAGS=${CPPFLAGS} \
    CPP=${CPP} \
    CXX=${CXX:-$CC} \
    CXXFLAGS=${CXXFLAGS:-$preferred_cflags} \
    CXXCPP=${CXXCPP:-$CPP} \
    --build=%{_build} \
    --host=%{_target_platform} \
    --prefix=%{_prefix} \
    --exec-prefix=%{_exec_prefix} \
    --bindir=%{_bindir} \
    --sbindir=%{_sbindir} \
    --sysconfdir=%{_sysconfdir} \
    --datadir=%{_datadir} \
    --includedir=%{_includedir} \
    --libdir=%{_libdir} \
    --libexecdir=%{_libexecdir} \
    --localstatedir=%{_localstatedir} \
    --sharedstatedir=%{_sharedstatedir} \
    --mandir=%{_mandir} \
    --infodir=%{_infodir} \
    --disable-maintainer-mode \
    --disable-dependency-tracking \
    --with-gnu-ld \
    --with-k-release=%{kernel_version} \
    --with-k-modules=/%{_lib}/modules/%{kernel_version} \
    --with-rpm-epoch=@PACKAGE_EPOCH@ \
    --with-rpm-release=@PACKAGE_RELEASE@ \
    --with-base-major=@STRCONF_MAJBASE@ \
    %{?_with_cooked_manpages:    %{_with_cooked_manpages}} \
    %{?_without_cooked_manpages: %{_without_cooked_manpages}} \
    %{?_with_public:              --enable-public} \
    %{?_without_public:           --disable-public} \
    %{?_with_k_debug:             --enable-k-debug} \
    %{?_without_k_debug:          --disable-k-debug} \
    %{?_with_k_test:              --enable-k-test} \
    %{?_without_k_test:           --disable-k-test} \
    %{?_with_k_safe:              --enable-k-safe} \
    %{?_without_k_safe:           --disable-k-safe} \
    %{?_with_k_inline:            --enable-k-inline} \
    %{?_without_k_inline:         --disable-k-inline} \
    %{?_with_lis:                %{_with_lis}} \
    %{?_with_lfs:                %{_with_lfs}}

make

%install
# ---------------------------------------------------------------------------
# we use libtoolized install-strip to strip binaries, modules, shared and
# static libraries appropriately.  we keep the brp-compress to compress man
# pages and any architectural post install procedures.

# %define __os_install_post /usr/lib/rpm/brp-compress || :

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT

# take our configured source and move it for the source package
mkdir -p $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{release}

# add a directory for our devices
mkdir -p $RPM_BUILD_ROOT/dev/%{name}

# Note: RH9 assembles debug information while stripping, so we install
# unstripped if the __debug_package macro is defined
%if %__debug_package
(cd build-%{_target_cpu}; make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install)
%else
(cd build-%{_target_cpu}; make DESTDIR="$RPM_BUILD_ROOT" DOCDIR="$RPM_DOC_DIR" install-strip)
%endif

# get the installed info directory out of the build root
[ -e "$RPM_BUILD_ROOT/%{_infodir}/dir" ] && rm -f "$RPM_BUILD_ROOT/%{_infodir}/dir"

# create a device list
sh scripts/strconf-sh -b190 --strmknods=devices.lst build-%{_target_cpu}/Config.master

rm -rf build-%{_target_cpu}

%if %{BUILD_tools}
# punch rpm release to Custom
echo 'Custom' > .rpmrelease

# tar and move the sources for source release
tar cf - . | tar xf - -C $RPM_BUILD_ROOT%{_usrsrc}/%{name}-%{version}-%{release}
ln -sf %{name}-%{version}-%{release} $RPM_BUILD_ROOT%{_usrsrc}/%{name}
%endif

%clean
# ---------------------------------------------------------------------------

[ -n "$RPM_BUILD_ROOT" -a "$RPM_BUILD_ROOT" != / ] && rm -rf $RPM_BUILD_ROOT


# ===========================================================================
%package %{_streams}-core-%{_kversion}

Summary:        OpenSS7 STREAMS INET LfS kernel modules.
Group:          System Environment/Kernel
Prefix:         /%{_lib}/modules/%{kernel_version}
Requires:       kernel = %{kernel_version}
%if %{BUILD_lis}
Requires:       LiS-core-%{kernel_version} >= 2.16.18-15
%endif
%if %{BUILD_lfs}
Requires:       streams-core-%{kernel_version} >= 0.7a
%endif
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description %{_streams}-core-%{_kversion}
The %{name}-%{_streams}-core-%{_kversion} package contains the kernel modules that provide
the Linux kernel INET STREAMS drivers and modules.  This also includes
assorted drivers and modules for additional protocol stacks such as SCTP.
This package is heavily tied to the kernel for which it and the Linux STREAMS
facility was compiled.  This package applies to kernel version %{kernel_version}
and requires a STREAMS package compiled for the same kernel.

%pre %{_streams}-core-%{_kversion}
# ---------------------------------------------------------------------------
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   if we are upgrading and the upgrade is for the running kernel, or we are
#   installing new on the running kernel, we have to worry about previous
#   loaded modules for the old version or a non-rpm version
    ( lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    fdetach -a 2>/dev/null
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge @STRCONF_MAJBASE@ ]; then
                eval "kill -HUP $tokens[1]"
            fi
        fi
    done
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    echo 'Cannot install or upgrade with streams modules running.' >&2
    exit 1
fi

%post %{_streams}-core-%{_kversion}
# ---------------------------------------------------------------------------
if [ $1 = 1 ] ; then
#   This is the end of a fresh install.
#   Check that our line is in the modules.%{name} file
    conf_old=/etc/modules.conf
    if ( grep -q 'include.*modules.%{name}' $conf_old ) ; then :; else
        streams_dir=/%{_lib}/modules/%{kernel_version}/%{_ksubdir}
        streams_prf=/%{_lib}/modules/preferred/%{_ksubdir}
        conf_new=%{_tmppath}/modules.conf.new.$$
        cp -f $conf_old $conf_new
#       if not, check for an old non-rpm LiS
        if ( grep -q 'BEGIN LiS' $conf_old ) ; then
            conf_tmp=%{_tmppath}/modules.conf.tmp.$$
            list=`find /%{_lib}/modules/%{kernel_version}/%{name} -name "*.o"`
            for p in $list ; do
                m="`echo $p | sed -e 's|^.*/||;s|\.o||'`"
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $conf_new > $conf_tmp
                mv -f $conf_tmp $conf_new
#               Remove conflicting modules.
                rm -f $streams_dir/$m.o
                rm -f $streams_prf/$m.o
            done
        fi
#       check for forced over installs of older LiS or LfS rpm installations
#       or installs over older LiS or LfS autoconf installations
        streams_old=/%{_lib}/modules/%{kernel_version}/modules.streams
        if [ -d $streams_dir -a -f $streams_old ] ; then
            streams_new=%{_tmppath}/modules.streams.new.$$
            streams_tmp=%{_tmppath}/modules.streams.tmp.$$
            cp -f $streams_old $streams_new
            list=`find /%{_lib}/modules/%{kernel_version}/%{name} -name "*.o"`
            for p in $list ; do
                m="`echo $p | sed -e 's|^.*/||;s|\.o||'`"
#               Remove references to our modules from old installation.
                sed -e '/alias.*\<'$m'\>/d' $streams_new > $streams_tmp
                mv -f $streams_tmp $streams_new
#               Remove conflicting modules.
                rm -f $streams_dir/$m.o
                rm -f $streams_prf/$m.o
            done
            chmod --reference=$streams_old $streams_new
            cp -fb --suffix=.rpmsave $streams_new $streams_old
            rm -f $streams_new
        fi
        echo 'prune modules.%{name}' >> $conf_new
        echo 'if -f /lib/modules/`uname -r`/modules.%{name}' >> $conf_new
        echo 'include /lib/modules/`uname -r`/modules.%{name}' >> $conf_new
        echo 'endif' >> $conf_new
        chmod --reference=$conf_old $conf_new
        cp -fb --suffix=.rpmsave $conf_new $conf_old
        rm -f $conf_new
    fi
fi
if [ ":%{kernel_version}" = ":`uname -r`" ] ; then
#   this is a running kernel, do a depmod on the modules directory for
    depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a depmod will be performed on boot by depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi

%preun %{_streams}-core-%{_kversion}
# ---------------------------------------------------------------------------
if [ $1 = 0 -a ":%{kernel_version}" = ":`uname -r`" ] ; then
#   We are about to uninstall for good on a running kernel then we have to
#   worry about which modules are running
    ( lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    fdetach -a
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge @STRCONF_MAJBASE@ ]; then
                eval "kill -KILL $tokens[1]"
            fi
        fi
    done
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    echo "Cannot uninstall with streams modules running." >&2
    exit 1
fi

%postun %{_streams}-core-%{_kversion}
# ---------------------------------------------------------------------------

if [ $1 = 0 ]; then
#   this is the last stage of a removal we are going away: we need to see if
#   we need to remove our line from modules.conf and remove our devices
    remove_line=yes
    for file in /lib/modules/*/modules.%{name} ; do
        if [ -f $file ] ; then
            remove_line=no
            break
        fi
    done
    if [ ":$remove_line" = :yes ] ; then
        sed -e '/prune modules.%{name}/,/endif/d' /etc/modules.conf > %{_tmppath}/modules.conf.tmp.$$
        chmod --reference=/etc/modules.conf %{_tmppath}/modules.conf.tmp.$$
        cp -fb --suffix=.rpmorig %{_tmppath}/modules.conf.tmp.$$ /etc/modules.conf
        rm -f %{_tmppath}/modules.conf.tmp.$$
    fi
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   this is a running kernel, do a depmod on the modules directory for
    depmod -ae
elif [ -r /boot/System.map-%{kernel_version} ] ; then
#   non-running kernels a depmod will be performed on boot but depmod anyway
    UNAME_MACHINE=%{_target_cpu} \
    depmod -ae -F /boot/System.map-%{kernel_version} %{kernel_version}
fi
if [ :"%{kernel_version}" = :"`uname -r`" ] ; then
#   one more kick at killing any loaded modules on uninstall, last stage of
#   the upgrade on a running kernel for upgrade.
    ( lsmod | grep -q '^streams' ) || exit 0
#   modules running, kick the stack
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    fdetach -a
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    insmod -ar streams
    lsof | while read -a tokens; do
        if [ :"$tokens[4]" = :"CHR" ]; then
            major=`echo "$tokens[5]" | sed -e 's|,.*||'`
            if [ $major -ge @STRCONF_MAJBASE@ ]; then
                if [ $1 = 0 ] ; then
#                   extreme prejudice for removal
                    eval "kill -KILL $tokens[1]"
                else
#                   try to get them to reload for 
                    eval "kill -HUP $tokens[1]"
                fi
            fi
        fi
    done
    modprobe -r `lsmod | grep '^streams' | cut -f1 '-d '`
    ( lsmod | grep -q '^streams' ) || exit 0
    echo "Error: modules may be still loaded" >&2
    lsmod | grep '^streams' >&2
    echo "you may have to reboot" >&2
    exit 1
fi

%if %{BUILD_modules}
%files %{_streams}-core-%{_kversion}
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%dir /%{_lib}/modules/%{kernel_version}/%{name}
%attr(644,root,root) /%{_lib}/modules/%{kernel_version}/modules.%{name}
/%{_lib}/modules/%{kernel_version}/%{name}/*
%endif

# ===========================================================================
%package dev

Summary:        OpenSS7 STREAMS INET devices.
Group:          System Environment/Base
Requires:       dev >= 3.3
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description dev
The %{name}-dev package contains the device definitions necessary to run
applications programs and utilities developed for OpenSS7 STREAMS INET.

%if %{BUILD_tools}
# ---------------------------------------------------------------------------
%files dev -f devices.lst
%defattr(-,root,root)
%endif

# ===========================================================================
%package %{_streams}-lib

Summary:        OpenSS7 STREAMS INET run-time libraries.
Group:          System Environment/Libraries
Prefix:         %{_libdir}
Prefix:         %{_datadir}/locale
%if %{BUILD_lis}
Requires:       LiS-lib-%{kernel_version} >= 2.16.18-15
%endif
%if %{BUILD_lfs}
Requires:       streams-lib-%{kernel_version} >= 0.7a
%endif
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description %{_streams}-lib
The %{name}-%{_streams}-lib package contains the run-time shared libraries necessary to
run applications programs and utilities developed for OpenSS7 STREAMS INET.

%pre %{_streams}-lib
# ---------------------------------------------------------------------------
if [ $1 = 0 ] ; then
#   this is supposed to be a fresh install
#   see if there are any libraries hanging around from a non-rpm install
    old_libs="`( ldconfig -p | grep '\<lib.*xnet\> | cut '-d ' -f4 ) 2>/dev/null`"
    if [ -n "$old_libs" ] ; then
#       old libraries hanging around, delete them
        echo "warning: Deleting old non-rpm libraries $old_libs" >&2
        rm -f $old_libs
    fi
else
    :
#   upgrade, let RPM do its job
fi

%post %{_streams}-lib
# ---------------------------------------------------------------------------
# do a load config
if [ $1 = 0 ] ; then
#   end of fresh install, do ldconfig
    ldconfig >/dev/null
else
    :
#   upgrade, wait for old postun
fi

%preun %{_streams}-lib
# ---------------------------------------------------------------------------
# noting really

%postun %{_streams}-lib
# ---------------------------------------------------------------------------
# whether complete removal or upgrade, do a load config
ldconfig

%if %{BUILD_tools}
%files %{_streams}-lib
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.so*
%{_libdir}/*.la
%{_datadir}/locale/*
%endif

# ===========================================================================
%package doc

Summary:        OpenSS7 STREAMS INET manpages and doc.
Group:          Documentation
Conflicts:      texinfo < 3.11
Prereq:         /sbin/install-info
Prefix:         %{_docdir}
Prefix:         %{_infodir}
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description doc
The %{name}-doc package contains html documentation for the development of
OpenSS7 STREAMS INET applications, modules and drivers.

%pre doc
# ---------------------------------------------------------------------------
# nothing really

%post doc
# ---------------------------------------------------------------------------
if [ -x /sbin/install-info ] ; then
    # older rpm versions do not compress info files
    for n in %{name} libxnet ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%preun doc
# ---------------------------------------------------------------------------
if [ "$1" = 0 -a -x /sbin/install-info ] ; then
    for n in %{name} libxnet ; do
        if [ -f %{_infodir}/$n.info ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info
        elif [ -f %{_infodir}/$n.info.gz ] ; then
            /sbin/install-info --delete --info-dir=%{_infodir} %{_infodir}/$n.info.gz
        fi
    done
fi

%postun doc
# ---------------------------------------------------------------------------
# nothing really

%if %{BUILD_tools}
%files doc
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%if %{?_with_xnet: 1}%{!?_with_xnet: 0}
%doc ABOUT-NLS
%endif
%doc AUTHORS ChangeLog COPYING INSTALL NEWS README THANKS
%doc doc/manual
%{_infodir}/*
%endif

# ===========================================================================
%package devel

Summary:        OpenSS7 STREAMS INET headers, lib and doc.
Group:          Development/System
Requires:       %{name}-lib = %{version}-%{base_release}
Requires:       %{name}-doc = %{version}-%{base_release}
%if %{BUILD_lis}
Requires:       LiS-devel >= 2.16.18
%endif
%if %{BUILD_lfs}
Requires:       streams-devel >= 0.7a
%endif
Prefix:         %{_libdir}
Prefix:         %{_includedir}
Prefix:         %{_mandir}
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description devel
The %{name}-devel package contains library archives for static compilation,
and headers files to develop OpenSS7 STREAMS INET applications.  This also
includes the header files and static libraries required to compile OpenSS7
STREAMS INET applications programs.  In addition it contains all of the manual
pages necessary for developing OpenSS7 STREAMS INET application programs.

%pre devel
# ---------------------------------------------------------------------------
# let rpm do its job

%post devel
# ---------------------------------------------------------------------------
# let rpm do its job

%preun devel
# ---------------------------------------------------------------------------
# let rpm do its job

%postun devel
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{BUILD_tools}
%files devel
# ---------------------------------------------------------------------------
%defattr(-,root,root)
%{_libdir}/*.a
%{_includedir}/*
@COOKED_MANPAGES_FALSE@%{_mandir}/%{name}.refs
@COOKED_MANPAGES_FALSE@%{_mandir}/%{name}.macros
#%{_mandir}/man2/*
%{_mandir}/man3/*
%{_mandir}/man4/*
#%{_mandir}/man5/*
%{_mandir}/man7/*
#%{_mandir}/man9/*
%endif


# ===========================================================================
%package source

Summary:        OpenSS7 STREAMS INET source package.
Group:          Development/System
Prefix:         %{_usrsrc}
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description source
The %{name}-source package contains the source code necessary for building the
%{name} release.  It includes the autoconf configuration utilities
necessary to create and distribute this rpm.

%pre source
# ---------------------------------------------------------------------------
# let rpm do its job

%post source
# ---------------------------------------------------------------------------
# let rpm do its job

%preun source
# ---------------------------------------------------------------------------
# let rpm do its job

%postun source
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{BUILD_tools}
%files source
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%dir %{_usrsrc}/%{name}-%{version}-%{release}
%{_usrsrc}/*
%endif

# ===========================================================================
%package %{_streams}-util

Summary:        OpenSS7 STREAMS INET admin utilities.
Group:          System Environment/Base
Requires:       %{name}-lib = %{version}-%{base_release}
Prefix:         %{_bindir}
Prefix:         %{_sbindir}
Prefix:         %{_mandir}
Prefix:         %{_libexecdir}
%if %{BUILD_lis}
Requires:       LiS-lib-%{kernel_version} >= 2.16.18-15
%endif
%if %{BUILD_lfs}
Requires:       streams-lib-%{kernel_version} >= 0.7a
%endif
Autoreq:        true
%if %{?_icon: 1}%{!?_icon: 0}
Icon:           %{_icon}
%endif

# ---------------------------------------------------------------------------
%description %{_streams}-util
The %{name}-%{_streams}-util package provides adminstrative and configuration test
utilities and commands associated with the OpenSS7 STREAMS INET package.

%pre %{_streams}-util
# ---------------------------------------------------------------------------
# let rpm do its job

%post %{_streams}-util
# ---------------------------------------------------------------------------
# let rpm do its job

%preun %{_streams}-util
# ---------------------------------------------------------------------------
# let rpm do its job

%postun %{_streams}-util
# ---------------------------------------------------------------------------
# let rpm do its job

%if %{BUILD_tools}
%files %{_streams}-util
# ---------------------------------------------------------------------------
%defattr(-,root,root)
#%{_bindir}/*
%{_sbindir}/*
%{_libexecdir}/*
#@COOKED_MANPAGES_FALSE@%{_mandir}/%{name}.refs
#@COOKED_MANPAGES_FALSE@%{_mandir}/%{name}.macros
#%{_mandir}/man1/*
#%{_mandir}/man8/*
%endif

# ===========================================================================
%changelog
# ---------------------------------------------------------------------------
# $Log: strxnet.spec.in,v $
# Revision 0.9.2.16  2004/06/06 03:48:44  brian
# - Updated change logs.
#

* Sun May 25 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.15  2004/05/25 06:52:50  brian
- Removed double listing on source directory.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.14  2004/05/24 20:49:21  brian
- Don't copy sources if source package not built.

* Mon May 24 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.13  2004/05/24 12:48:47  brian
- Updated build process.

* Sun May 23 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.12  2004/05/23 08:40:54  brian
- Corrected info install.

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.11  2004/05/20 18:20:58  brian
- make before DESTDIR on install

* Thu May 20 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.10  2004/05/20 00:03:43  brian
- Split and factor packages by STREAMS dependency.

* Tue May 18 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.9  2004/05/18 07:14:09  brian
- More adjustments for dual LiS/LfS build.

* Tue May 18 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.8  2004/05/18 04:41:17  brian
- Changes for Linux Fast-STREAMS build.

* Mon May 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.7  2004/05/17 08:33:33  brian
- More relocations and script typo.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.6  2004/05/16 19:19:27  brian
- Reworking install.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/05/16 04:12:30  brian
- Updating strxnet release.

* Sun May 16 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/05/16 02:35:33  brian
- Updating strxnet for release.

* Wed Apr  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/04/07 22:23:06  brian
- Updating build system.

* Wed Apr  7 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/04/07 08:38:55  brian
- Preparing for release.

* Mon Apr  5 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/04/05 12:39:05  brian
- Working up XNET release.

* Sat Apr  3 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/04/03 22:37:07  brian
- Initial cut of new strxnet rpm release.

* Sat Apr  3 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/04/03 12:44:16  brian
- Initial cut of new strxnet package.

* Sun Feb 22 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.5  2004/02/22 07:30:09  brian
- Added documentation.

* Tue Feb 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.4  2004/02/17 06:30:25  brian
- Added public release option.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.3  2004/01/21 23:25:47  brian
- Corrected info install for older RPM versions.

* Wed Jan 21 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.2  2004/01/21 21:24:50  brian
- Updated and tested M2PA to Draft10.

* Mon Jan 19 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9.2.1  2004/01/19 22:57:08  brian
- Corrected info install.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 0.9  2004/01/17 07:50:03  brian
- Added files for 0.9 baseline autoconf release.

* Sat Jan 17 2004 Brian Bidulock <bidulock@openss7.org>
- Revision 1.1  2004/01/17 02:15:32  brian
- Added spec file.

* Sun Jan 11 2004 Brian Bidulock <bidulock@openss7.org>
- Began this RPM build for OpenSS7.
- Borrowed heavily from the OpenSS7 LiS build.

# vim: ft=spec sw=4 et
