--@@ GDMOCHECK $Revision: 1.1.2.1 $
--@@ Copyright (c), 2001-2007 OpenSS7 Corporation  <http://www.openss7.com/>
--@@ Copyright (c), 1999-2000 Brian F. G. Bidulock <bidulock@openss7.org>
--@@ 
--@@ Input File: <(standard input)>
--@@ Special File: <(standard input).specials>
--@@ Date: Wed Sep 19 15:38:59 MDT 2007
--@@ 
--< GDMO.Include "X.721.gdmo" >--
--< GDMO.Document "ITU-T Rec. X.742 (1995) | ISO/IEC 10164-10 : 1995"
--  { joint-iso-ccitt ms(9) function(2) part10(10) } >--
--< GDMO.Namespace itut_x742 >--
--< GDMO.Alias "ITU-T Rec. X.742 (1995) | ISO/IEC 10164-10 : 1995" "X.742",
--  "Recommendation X.742 | ISO/IEC 10164-10: 1995",
--  "ITU-T Rec. X.742 | ISO/IEC 10164-10 : 1995",
--  "ITU-T Rec. X.742 | ISO/IEC 10164-10",
--  "ITU-T Rec. X.742 (1995)/Cor.1 (1998) | ISO/IEC 10164-10 : 1995/Cor.1 : 1999",
--  "ITU-T Rec. X.742 (1995)/Cor.2 (2000) | ISO/IEC 10164-10 : 1995/Cor.2 : 2001",
--  "Rec. X.742 (1995)" >--
MODULE "ITU-T Rec. X.742 (1995) | ISO/IEC 10164-10 : 1995" { joint-iso-ccitt ms(9) function(2) part10(10) }
-- Annex A
-- Usage metering templates and abstract syntax
-- (This annex forms an integral part of this Recommendation | International Standard)
-- A.1 Definitions of managed object classes

usageMeteringControlObject MANAGED OBJECT CLASS
	DERIVED FROM
		"CCITT Rec. X.721 | ISO/IEC 10165-2":top;
	CHARACTERIZED BY
		meteringControlObject PACKAGE
			ATTRIBUTES
				controlObjectId GET,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":operationalState;;,
		meteringControlCapabilities PACKAGE
			BEHAVIOUR
				usageMeterControlBehaviour;
			ATTRIBUTES
				reportingTriggers GET-REPLACE ADD-REMOVE,
				accountableObjectsReferenceList GET,
				dataObjectsReferenceList GET;
			NOTIFICATIONS
				"CCITT Rec. X.721 | ISO/IEC 10165-2":attributeValueChange,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":objectCreation,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":objectDeletion,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":stateChange;
		REGISTERED AS { umf-pkg 1 };;
	CONDITIONAL PACKAGES
		meteringStart
			PRESENT IF
				"corresponding data objects are explicitly created in a suspended condition",
		meteringControl
			PRESENT IF
				"suspend and resume operations are required and the corresponding data objects 
				support the meteringDataCondition package",
		startNotification
			PRESENT IF
				"there is a static requirement to advise manager(s) other than the one generating 
				the action of the outcome of the action and the meteringStart package is 
				supported",
		controlNotification
			PRESENT IF
				"there is a static requirement to advise manager(s) other than the one generating 
				the action of the outcome of the action and the meteringControl package is 
				supported";
REGISTERED AS { umf-mo 1 };
----


usageMeteringDataObject MANAGED OBJECT CLASS
	DERIVED FROM
		"CCITT Rec. X.721 | ISO/IEC 10165-2":top;
	CHARACTERIZED BY
		meteringDataObject PACKAGE
			ATTRIBUTES
				dataObjectId GET;;,
		meteringDataInfo PACKAGE
			BEHAVIOUR
				usageMeterDataObjectBehaviour;
			ATTRIBUTES
				accountableObjectReference GET,
				usageInfo GET,
				dataErrors GET,
				providerId GET;
			NOTIFICATIONS
				usageReport,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":objectCreation,
				"CCITT Rec. X.721 | ISO/IEC 10165-2":objectDeletion;
		REGISTERED AS { umf-pkg 2 };;
	CONDITIONAL PACKAGES
		meteringDataCondition
			PRESENT IF
				"the accounting activity can be suspended or can exist in a terminating condition 
				pending the emission of a usageReport notification",
		auditInformation
			PRESENT IF
				"the accounting activity requires the measurement of certain source information 
				for audit purposes";
REGISTERED AS { umf-mo 2 };
----


usageMeteringRecord MANAGED OBJECT CLASS
	DERIVED FROM
		"Rec. X.721 | ISO/IEC 10165-2":eventLogRecord;
	CHARACTERIZED BY
		usageMeteringRecordObject PACKAGE
			ATTRIBUTES
				accountableObjectReference GET,
				usageInfo GET,
				dataErrors GET,
				providerId GET;;;
	CONDITIONAL PACKAGES
		auditInformation
			PRESENT IF
				"this package has been included in the usageMeteringData object emitting the 
				notification to be stored in this record managed object";
REGISTERED AS { umf-mo 3 };
-- A.2 Definition of packages


auditInformation PACKAGE
	ATTRIBUTES
		auditInfo GET;
REGISTERED AS { umf-pkg 3 };
----


controlNotification PACKAGE
	NOTIFICATIONS
		meteringSuspended,
		meteringResumed;
REGISTERED AS { umf-pkg 4 };
----


meteringControl PACKAGE
	ACTIONS
		suspendMetering
			deniedMeteringAction,
		resumeMetering
			deniedMeteringAction;
REGISTERED AS { umf-pkg 5 };
----


meteringDataCondition PACKAGE
	BEHAVIOUR
		meterConditionBehaviour;
	ATTRIBUTES
		"CCITT Rec X.721 | ISO/IEC 10165-2":controlStatus
			PERMITTED VALUES UsageMeteringFunction.ControlStatusValue
			REQUIRED VALUES UsageMeteringFunction.ControlStatusValue
			GET,
		"CCITT Rec X.721 | ISO/IEC 10165-2":proceduralStatus
			PERMITTED VALUES UsageMeteringFunction.ProceduralStatusValue
			REQUIRED VALUES UsageMeteringFunction.ProceduralStatusValue
			GET;
REGISTERED AS { umf-pkg 6 };
----


meteringStart PACKAGE
	ACTIONS
		startMetering
			deniedMeteringAction;
REGISTERED AS { umf-pkg 7 };
----


startNotification PACKAGE
	NOTIFICATIONS
		meteringStarted;
REGISTERED AS { umf-pkg 8 };
-- A.3 Definition of attributes


accountableObjectReference ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.AccountableObjectReference;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 1 };
----


accountableObjectsReferenceList ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.AccountableObjectsReferenceList;
	MATCHES FOR EQUALITY, SET-COMPARISON, SET-INTERSECTION;
REGISTERED AS { umf-att 2 };
----


actionResponse ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.ActionResponse;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 3 };
----


auditInfo ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.AuditInfo;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		usageObjectRecordsIdBehaviour;
REGISTERED AS { umf-att 4 };
----


controlObjectId ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.UsageMeteringControlObjectId;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 5 };
----


dataObjectId ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.UsageMeteringDataObjectId;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 6 };
----


dataObjectsReferenceList ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.DataObjectsReferenceList;
	MATCHES FOR EQUALITY, SET-COMPARISON, SET-INTERSECTION;
REGISTERED AS { umf-att 7 };
----


dataErrors ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.DataErrors;
	MATCHES FOR EQUALITY, SET-COMPARISON, SET-INTERSECTION;
	BEHAVIOUR
		dataErrorBehaviour;
REGISTERED AS { umf-att 8 };
----


notificationCause ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.NotificationCause;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 9 };
----


providerId ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.ProviderId;
	MATCHES FOR EQUALITY;
REGISTERED AS { umf-att 10 };
----


reportingTriggers ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.ReportingTriggers;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		triggerBehaviour;
REGISTERED AS { umf-att 11 };
----


usageInfo ATTRIBUTE
	WITH ATTRIBUTE SYNTAX UsageMeteringFunction.UsageInfo;
REGISTERED AS { umf-att 12 };
-- A.4 Definition of notification types


usageReport NOTIFICATION
	BEHAVIOUR
		usageReportBehaviour,
		usageMeterTimeBehaviour,
		triggerBehaviour;
	WITH INFORMATION SYNTAX UsageMeteringFunction.UsageDataInfo
		AND ATTRIBUTE IDS
			accountableObjectReference
				accountableObjectReference,
			notificationCause
				notificationCause,
			usageInfo
				usageInfo,
			auditInfo
				auditInfo,
			dataErrors
				dataErrors,
			providerId
				providerId;
REGISTERED AS { umf-not 1 };
----


meteringResumed NOTIFICATION
	BEHAVIOUR
		meteringResumedBehaviour;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ControlInfo
		AND ATTRIBUTE IDS
			actionResponse
				actionResponse,
			reportingTriggers
				reportingTriggers,
			dataObjectsReferenceList
				dataObjectsReferenceList;-- Corrigendum 1
	REGISTERED AS { umf-not 2 };
----


meteringStarted NOTIFICATION
	BEHAVIOUR
		meteringStartedBehaviour;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ControlInfo
		AND ATTRIBUTE IDS
			actionResponse
				actionResponse,
			reportingTriggers
				reportingTriggers,
			dataObjectsReferenceList
				dataObjectsReferenceList;-- Corrigendum 1
	REGISTERED AS { umf-not 3 };
----


meteringSuspended NOTIFICATION
	BEHAVIOUR
		meteringSuspendedBehaviour;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ControlInfo
		AND ATTRIBUTE IDS
			actionResponse
				actionResponse,
			reportingTriggers
				reportingTriggers,
			dataObjectsReferenceList
				dataObjectsReferenceList;-- Corrigendum 1
	REGISTERED AS { umf-not 4 };
-- A.5 Definition of actions


resumeMetering ACTION
	BEHAVIOUR
		resumeBehaviour;
	MODE CONFIRMED;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ActionArgument;
	WITH REPLY SYNTAX UsageMeteringFunction.ActionResponse;
REGISTERED AS { umf-act 1 };
----


startMetering ACTION
	BEHAVIOUR
		startBehaviour;
	MODE CONFIRMED;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ActionArgument;
	WITH REPLY SYNTAX UsageMeteringFunction.ActionResponse;
REGISTERED AS { umf-act 2 };
----


suspendMetering ACTION
	BEHAVIOUR
		suspendBehaviour;
	MODE CONFIRMED;
	WITH INFORMATION SYNTAX UsageMeteringFunction.ActionArgument;
	WITH REPLY SYNTAX UsageMeteringFunction.ActionResponse;
REGISTERED AS { umf-act 3 };
-- A.6 Definition of behaviour


usageObjectRecordsIdBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute provides the storage for audit information which is included in 
		the usage metering record in order to enable a guarantee of completeness of all 
		usage metering data provided";
----


usageMeterDataObjectBehaviour BEHAVIOUR
	DEFINED AS
		"The data object reports usage metering data when triggered by or on the 
		occurrence of events identified in the reportingTriggers attribute in the 
		associated control object";
----


usageReportBehaviour BEHAVIOUR
	DEFINED AS
		"On the occurrence of an event specified by the reporting triggers attribute 
		within an object containing usage metering control or the usage metering control 
		object, the usage metering data objects or the objects which contain a 
		meteringDataInfo package, generates a usageReport notification. The notification 
		cause field of the usageReport notification service supplies the value of the 
		reportingTriggers attribute which caused the notification to occur.";
----


meteringResumedBehaviour BEHAVIOUR
	DEFINED AS
		"A meteringResumed notification is generated when the resume action completes 
		without error.";
----


meteringStartedBehaviour BEHAVIOUR
	DEFINED AS
		"A meteringStarted notification is generated when the start action completes 
		without error.";
----


meteringSuspendedBehaviour BEHAVIOUR
	DEFINED AS
		"A meteringSuspended notification is generated when the suspend action completes 
		without error.";
----


usageMeterControlBehaviour BEHAVIOUR
	DEFINED AS
		"When an instance of usage metering control has been created to account for usage 
		of a named resource, it controls the behaviour of related instances of usage 
		metering data through its reportingTriggers attribute. These identify the 
		internal events which will cause a usageReport notification to be generated 
		within a controlled instance of usage metering data. The triggers may be time 
		related, e.g. as in the case of time related units, they may be determined by 
		operations performed upon the control object e.g. suspend or resume metering, 
		they may be determined by the accountable events as described in 8.2.3 or they 
		may be externally specified. When the associated accountable objects requires no 
		further usage to be metered and there are no more instances of data objects, the 
		instance of usage metering control may be deleted.";
----


meterConditionBehaviour BEHAVIOUR
	DEFINED AS
		"If the data meter is in a suspended condition, the control status takes the 
		value suspended. This status value is removed when the data object is carrying 
		out usage metering after being started or resumed. When a request is made 
		(either explicitly or implicitly) for the data object to be deleted and, where 
		the reporting triggers specify that this is a situation which will lead to a 
		usage report notification, the data object shall take a procedural status value 
		of terminating until the required notification has been generated";
----


resumeBehaviour BEHAVIOUR
	DEFINED AS
		"Upon the completion of a resume ACTION, the response indicates the corresponding 
		data objects upon which the requested operation was successful, those upon which 
		it was unsuccessful and, where the result of the operation is unknown, returns 
		an indeterminate response. The action is only effective when the instance of a 
		selected data object is in a suspended condition. Because the action is 
		idempotent, the action has no additional effect if applied to a data object in a 
		metering condition.";
----


startBehaviour BEHAVIOUR
	DEFINED AS
		"This action enables a control object to (re-)start usage metering. All 
		parameters for a selected data object (or objects) metering usage which are 
		under the control of that object are re-initialized. Upon the completion of a 
		start ACTION, the response indicates the corresponding data objects upon which 
		the requested operation was successful, those upon which it was unsuccessful 
		and, where the result of the operation is unknown, returns an indeterminate 
		response.";
----


suspendBehaviour BEHAVIOUR
	DEFINED AS
		"Upon the completion of a suspend ACTION, the response indicates the 
		corresponding data objects upon which the requested operation was successful, 
		those upon which it was unsuccessful and, where the result of the operation is 
		unknown, returns an indeterminate response. The action is only effective when 
		the instance of a selected data object is already metering. Because the action 
		is idempotent, the action has no additional effect if applied to a data object 
		in a suspended condition.";
----


triggerBehaviour BEHAVIOUR
	DEFINED AS
		"Given a set of events, which result in some defined activity with respect to 
		metering of resource usage, the event will lead either to the update of meter 
		information (recording triggers) or to the generation of usage report 
		notifications (reporting triggers). Triggering events may be of three kinds: 
		initiated at regular time intervals, induced as the result of a usage metering 
		action (both locally and externally induced), and initiated by identified 
		external stimuli.";
----


usageMeterTimeBehaviour BEHAVIOUR
	DEFINED AS
		"The usageMeterTime is the current time if metering of usage is taking place. If 
		metering of usage has been suspended or the instance of usage metering data has 
		been deleted, then the usageMeterTime value is the usageStoppedTime.";
----


dataErrorBehaviour BEHAVIOUR
	DEFINED AS
		"Set matching is only permitted if the set valued syntax choice is selected";
-- A.7 Definition of name binding
-- A.7.1 Usage meter data
-- No name bindings for the usageMeterData object class are provided in this Recommendation | International Standard
-- because of the variety of accountable objects for which the usage data can be collected. Users of this Recommendation |
-- International Standard specializing the usage data are expected to specify name bindings for usageMeterData or its
-- subclasses to make them instantiable.
-- A.7.2 Usage meter control
-- One name binding is provided in this Recommendation | International Standard for the usage meter control object class.
-- This can be used only when the accountable object is contained in a managed object that is an instance of either the
-- system managed object class or its subclasses. Other name bindings are expected to be defined by users of this
-- Recommendation | International Standard when the accountable objects have name bindings to objects other than the
-- system or its subclass.


usageMeterControl-system NAME BINDING
	SUBORDINATE OBJECT CLASS usageMeteringControlObject AND SUBCLASSES;
	NAMED BY
	SUPERIOR OBJECT CLASS "CCITT Rec. X.721 | ISO/IEC 10165-2":system AND SUBCLASSES;
	WITH ATTRIBUTE
		controlObjectId;
	DELETE DELETES-CONTAINED-OBJECTS;
REGISTERED AS { umf-nb 1 };
-- A.8 Parameter Templates


deniedMeteringAction PARAMETER
	CONTEXT SPECIFIC-ERROR;
	WITH SYNTAX UsageMeteringFunction.DeniedMeteringAction;
	BEHAVIOUR
		deniedMeteringActionBehaviour BEHAVIOUR
			DEFINED AS
				"This error is returned if the usage metering control object received a request 
				to start metering or suspend metering or resume metering for the data object 
				that has the value of terminating for the procedural status.";;
REGISTERED AS { umf-par 1 };

--< ASN1.Version 1990 UMFObjId
--  { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 0 } >--
-- A.9 Definition of ASN.1 modules
UMFObjId { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 0 }
DEFINITIONS ::=
BEGIN
umf-mo OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) managedObjectClass(3) }
umf-pkg OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) package(4) }
umf-par OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) parameter(5) }
umf-nb OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) nameBinding(6) }
umf-att OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) attribute(7) }
umf-act OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) action(9) }
umf-not OBJECT IDENTIFIER ::= { joint-iso-ccitt ms(9) function(2) part10(10) notification(10) }
END

--< ASN1.Version 1994 UsageMeteringFunction
--  { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 1 } >--
UsageMeteringFunction { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 1 }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
-- EXPORTS everything
IMPORTS
ObjectInstance
	FROM CMIP-1 { joint-iso-ccitt ms(9) cmip(1) modules(0) protocol(3) }-- Corrigendum 1
DMI-TYPE-IDENTIFIER, ControlStatus, ProceduralStatus, SimpleNameType, ManagementExtension
	FROM Attribute-ASN1Module { joint-iso-ccitt ms(9) smi(3) part2(2) asn1Module(2) 1 }
TimePeriod
	FROM MetricModule { joint-iso-ccitt ms(9) function(2) part11(11) asn1Module(2) 0 }
UsageInfo
	FROM UsageMeteringDataInfo { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 2 }-- Corrigendum 1
;
AccountableObjectReference ::= ObjectInstance
AccountableObjectsReferenceList ::= SET OF ObjectInstance
ActionArgument ::= CHOICE {
	selectedObjects SET OF ObjectInstance,
	-- set of data objects, controlled by the control
	-- object for which the request is appropriate
	allObjects NULL
	-- selects all data objects controlled by control
	-- object -- }
ActionResponse ::= SEQUENCE {
	-- at least one component shall be present
	success [0] SET OF ObjectInstance OPTIONAL,
	failed [1] SET OF ObjectInstance OPTIONAL,
	indeterminate [2] SET OF ObjectInstance OPTIONAL }
UMF-AUDIT ::= DMI-TYPE-IDENTIFIER
AuditInfo ::= SEQUENCE {
	service UMF-AUDIT.&id( {AuditInfoSet }),
	auditDetails UMF-AUDIT.&Value( { AuditInfoSet } { @.service }) }
AuditInfoSet UMF-AUDIT ::= {
	... }
ControlInfo ::= SEQUENCE {
	actionResponse ActionResponse,
	reportingTriggers [0] ReportingTriggers OPTIONAL,
	accountableObjectsReferenceList [1] AccountableObjectsReferenceList OPTIONAL,
	dataObjectsReferenceList [2] DataObjectsReferenceList OPTIONAL,
	additionalInformation [3] SET OF ManagementExtension }
ControlStatusValue ::= ControlStatus(WITH COMPONENT(suspended))
DataErrors ::= CHOICE {
	possibleErrors SET OF PossibleError,
	noProblem NULL }
DataObjectsReferenceList ::= SET OF ObjectInstance
DeniedMeteringAction ::= ENUMERATED {
	canNotStart(0),
	canNotSuspend(1),
	canNotResume(2) }
Induced ::= ENUMERATED {
	start(0),
	suspend(1),
	resume(2),
	delete(3),
	disabled(4),
	enabled(5) }
NotificationCause ::= CHOICE {
	periodic [1] TimePeriod,
	induced [2] Induced,
	event [3] ReportingEvent,
	stimulus [4] OBJECT IDENTIFIER }
PossibleError ::= OBJECT IDENTIFIER
ProceduralStatusValue ::= ProceduralStatus(WITH COMPONENT(terminating))
ProviderId ::= CHOICE {
	objectReference [1] ObjectInstance,
	textualName [2] GraphicString,
	serviceSpecific [3] ServiceSpecificId,
	unknown [4] NULL }
ReportingTriggers ::= SET OF CHOICE {
	periodic [1] TimePeriod,
	induced [2] Induced,
	event [3] ReportingEvent,
	stimulus [4] OBJECT IDENTIFIER }
ReportingEvent ::= ENUMERATED {
	registration(0),
	request(1),
	accept(2),
	complete(3),
	corresponding(4),
	bulk(5),
	interruption(6) }
-- The applicability of each of these values must be specified by a specialization, together
-- with the exact semantics of the values used.
-- NOTE  All of events from 8.2.3 have been included in this enumerated type for the
-- sake of completeness. It does not imply that specializations need to assign semantics to all
-- of them. In particular the values "corresponding (4)" and "bulk (5)" may not be required in
-- certain specializations.
UMF-SERVICE ::= DMI-TYPE-IDENTIFIER
ServiceSpecificId ::= SEQUENCE {
	service UMF-SERVICE.&id( {ServiceSpecificSet }),
	serviceSpecificId UMF-SERVICE.&Value( { ServiceSpecificSet } { @.service }) }
ServiceSpecificSet UMF-SERVICE ::= {
	... }
UsageDataInfo ::= SEQUENCE {
	accountableObjectReference [0] ObjectInstance,
	notificationCause [1] NotificationCause,
	usageInfo [2] UsageInfo,
	auditInfo [3] AuditInfo OPTIONAL,
	dataErrors [4] DataErrors,
	providerId [5] ProviderId OPTIONAL,
	additionalInformation [6] SET OF ManagementExtension OPTIONAL }
UsageMeteringControlObjectId ::= SimpleNameType
UsageMeteringDataObjectId ::= SimpleNameType
END

--< ASN1.Version 1994 UsageMeteringDataInfo
--  { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 2 } >--
UsageMeteringDataInfo { joint-iso-ccitt ms(9) function(2) part10(10) asn1Modules(2) 2 }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
EXPORTS UsageInfo;-- Corrigendum 1
IMPORTS
DMI-TYPE-IDENTIFIER
	FROM Attribute-ASN1Module { joint-iso-itu-t ms(9) smi(3) part2(2) asn1Module(2) 1 };
UMF-USAGE ::= DMI-TYPE-IDENTIFIER
UsageInfo ::= SEQUENCE {
	serviceType UMF-USAGE.&id( {UsageInfoSet }),
	usageData UMF-USAGE.&Value( { UsageInfoSet } { @.serviceType }) }
UsageInfoSet UMF-USAGE ::= {
	... }
-- the following ASN.1 provides the means to include the service-specific information in the usage
-- metering data. The data type XxxUsageData, detailed below, is a prototype of how a
-- specialization shall specify a data type to replace the ANY in the usageData field of the UsageInfo
-- in a way that allows the specifier to include the necessary syntax to fully specify each block. In
-- addition the specialization shall allocate an OBJECT IDENTIFIER value to register the variant of
-- usageData specified by the specialization. A concrete example of a specification, using PSTN as
-- illustration is given in G.1.
--
-- Detail for the contents of each block are given as follows:
-- XxxUsageData ::= SEQUENCE OF CHOICE {
-- registration XxxRegistrationType,
-- The registration block is used to identify the requester using the service. An
-- XxxRegistrationType shall be specified by all specializations. The registration component shall
-- appear once and only once in every value of the UsageInfo data type, and shall always
-- appear as the first element in the XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- identification of the requester (directory number, user address, etc.)
-- request XxxRequestType,
-- The request block identifies the service request made by the requester. The XxxRequestType
-- may be omitted from specializations not requiring it. If an XxxRequestType is specified in a
-- specialization, zero or more request components may appear in a value of the XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- service request information which identifies the type of service requested and also any
-- additional service parameters, note that this information can be very detailed and complex
-- depending on the service type and the types of request that the service supports (e.g.
-- destination addresses, electronic mail message information, directory numbers, feature
-- codes).
-- and the following information may be provided:
-- a usage measurement (time, volume);
-- a time stamp (date and time).
-- accept XxxAcceptType,
-- The accept block identifies the details of what service was provided and the associated usage.
-- The XxxAcceptType may be omitted from specializations not requiring it. If an XxxAcceptType
-- is specified in a specialization, zero or more accept components may appear in a value of the
-- XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- service information which identifies the type of service provided and also any additional service
-- parameters;
-- a usage measurement;
-- a time stamp.
-- complete XxxCompleteType,
-- The complete block identifies the details of the end of some instance of utilization. The
-- XxxCompleteType may be omitted from specializations not requiring it. If an XxxCompleteType
-- is specified in a specialization, zero or more complete components may appear in a value
-- of the XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- a usage measurement;
-- and the following information may be provided:
-- service information which identifies any further details about the provided service
-- (reason for call completion);
-- a time stamp.
-- interrupt XxxInterruptType,
-- The interrupt block indicates any abnormal occurrence during the transaction
-- for which different charging algorithms may need to be applied by the recipient of the usage
-- metering record. The XxxInterruptType may be omitted from specializations not requiring it.
-- If an XxxInterruptType is specified in a specialization, zero or more interrupt components
-- may appear in a value of the XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- duration of the interruption,
-- reason for the interruption;
-- and the following information may be provided:
-- a usage measurement
-- a time stamp.
-- bulk XxxBulkType,
-- The bulk block indicates any bulk usage measurements made. The
-- XxxBulkType may be omitted from specializations not requiring it. If an XxxBulkType
-- is specified in a specialization, zero or more bulk components may appear in a
--value of the XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- a usage measurement
-- and the following information may be provided:
-- reason for reporting
-- corresponding XxxCorrespondingType }
-- The corresponding block includes any specific information to allow many
-- usage metering records to be correlated. The XxxCorrespondingType may be omitted
-- from specializations not requiring it. If an XxxCorrespondingType is specified in a
-- specialization, at most one corresponding components may appear in a value of the
-- XxxUsageData.
--
-- The definition of the service-specific syntax to be included in this block, shall include the
-- following information:
-- an identifying key which relates many usage metering records to one service transaction record.
-- The above data type gives the usage metering record structure, where, for a given requester,
-- there are associated a set of the events required to describe the transaction, i.e. the
-- SEQUENCE OF CHOICE construct allows an ordered list of the different event types. The
-- registration and corresponding event types will only appear in the sequence once. The
-- registration block shall always be present. This constraint ensures that a usage metering record
-- only applies to the one requester and that there is only one set of correlation information.
-- there are associated a set of the events required to describe the transaction, i.e. the
-- SEQUENCE OF CHOICE construct allows an ordered list of the different event types. The
-- registration and corresponding event types will only appear in the sequence once. The
-- registration block shall always be present. This constraint ensures that a usage metering record
-- only applies to the one requester and that there is only one set of correlation information.
END-- Corrigendum 1


END
--< GDMO.EndDocument "ITU-T Rec. X.742 (1995) | ISO/IEC 10164-10 : 1995"
--  { joint-iso-ccitt ms(9) function(2) part10(10) } >--
--@@ 
--@@ end of gdmos
--@@ 
--@@ 

--@@
--@@ Derivation Tree:
--@@
--@@ itut_x721::top
--@@ +- itut_x721::discriminator
--@@ |  +- itut_x721::eventForwardingDiscriminator
--@@ +- itut_x721::log
--@@ +- itut_x721::logRecord
--@@ |  +- itut_x721::eventLogRecord
--@@ |  |  +- itut_x721::alarmRecord
--@@ |  |  +- itut_x721::attributeValueChangeRecord
--@@ |  |  +- itut_x721::objectCreationRecord
--@@ |  |  +- itut_x721::objectDeletionRecord
--@@ |  |  +- itut_x721::relationshipChangeRecord
--@@ |  |  +- itut_x721::securityAlarmReportRecord
--@@ |  |  +- itut_x721::stateChangeRecord
--@@ |  |  +- itut_x742::usageMeteringRecord
--@@ +- itut_x721::system
--@@ +- itut_x742::usageMeteringControlObject
--@@ +- itut_x742::usageMeteringDataObject
--@@

--@@
--@@ Containment Tree:
--@@
--@@ itut_x721::system
--@@ >- itut_x721::discriminator
--@@ >- itut_x721::log
--@@ |  >- itut_x721::logRecord
--@@ >- itut_x742::usageMeteringControlObject
--@@
--@@ vim: comments=\b\:\-\-,\:\-\-,\f\b\:- fo+=tcqlornw tw=120 nocin nosi
