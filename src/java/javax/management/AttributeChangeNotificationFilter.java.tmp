//  ==========================================================================
//  
//  @(#) $Id$
//  
//  --------------------------------------------------------------------------
//  
//  Copyright (c) 2008-2009  Monavacon Limited <http://www.monavacon.com/>
//  Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
//  Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>
//  
//  All Rights Reserved.
//  
//  This program is free software; you can redistribute it and/or modify it
//  under the terms of the GNU Affero General Public License as published by
//  the Free Software Foundation; version 3 of the License.
//  
//  This program is distributed in the hope that it will be useful, but
//  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
//  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
//  License for more details.
//  
//  You should have received a copy of the GNU Affero General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>, or
//  write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
//  02139, USA.
//  
//  --------------------------------------------------------------------------
//  
//  U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
//  behalf of the U.S. Government ("Government"), the following provisions
//  apply to you.  If the Software is supplied by the Department of Defense
//  ("DoD"), it is classified as "Commercial Computer Software" under
//  paragraph 252.227-7014 of the DoD Supplement to the Federal Acquisition
//  Regulations ("DFARS") (or any successor regulations) and the Government is
//  acquiring only the license rights granted herein (the license rights
//  customarily provided to non-Government users).  If the Software is
//  supplied to any unit or agency of the Government other than DoD, it is
//  classified as "Restricted Computer Software" and the Government's rights
//  in the Software are defined in paragraph 52.227-19 of the Federal
//  Acquisition Regulations ("FAR") (or any successor regulations) or, in the
//  cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
//  (or any successor regulations).
//  
//  --------------------------------------------------------------------------
//  
//  Commercial licensing and support of this software is available from
//  OpenSS7 Corporation at a fee.  See http://www.openss7.com/
//  
//  --------------------------------------------------------------------------
//  
//  Last Modified $Date$ by $Author$
//  
//  --------------------------------------------------------------------------
//  
//  $Log$
//  ==========================================================================

package javax.management;

/**
 *
 * This  class  implements  of  the  NotificationFilter interface for the
 * attribute  change notification. The filtering is performed on the name
 * of the observed attribute.
 *
 * It manages a list of enabled attribute names. A method allows users to
 * enable/disable as many attribute names as required.
 *
 * @since 1.5
 *
 * @see Serialized Form
 */
public class AttributeChangeNotificationFilter implements NotificationFilter {

    public AttributeChangeNotificationFilter();

    /**
     * Invoked before sending the specified notification to the listener.
     *
     * Invoked before sending the specified notification to the listener.  This
     * filter compares the attribute name of the specified attribute change
     * notification with each enabled attribute name.  If the attribute name
     * equals one of the enabled attribute names, the notification must be sent
     * to the listener and this method returns true.
     *
     * Specified by:
     * isNotificationEnabled in interface NotificationFilter
     *
     * @param notification - The attribute change notification to be sent.
     *
     * @return true if the notification has to be sent to the listener, false
     * otherwise.
     */
    public boolean isNotificationEnabled(Notification notification);

    /**
     * Enables all the attribute change notifications the attribute name of
     * which equals the specified name to be sent to the listener.
     *
     * Enables all the attribute change notifications the attribute name of
     * which equals the specified name to be sent to the listener.
     *
     * If the specified name is already in the list of enabled attribute names,
     * this method has no effect.
     *
     * @param name - The attribute name.
     *
     * @exception IllegalArgumentException - The attribute name parameter is
     * null.
     */
    public void enableAttribute(String name) throws IllegalArgumentException;

    /**
     * Disables all the attribute change notifications the attribute name of
     * which equals the specified attribute name to be sent to the listener.
     *
     * Disables all the attribute change notifications the attribute name of
     * which equals the specified attribute name to be sent to the listener.
     *
     * If the specified name is not in the list of enabled attribute names,
     * this method has no effect.
     *
     * @param name - The attribute name.
     */
    public void disableAttribute(String name);

    /**
     * Disables all the attribute names.
     */
    public void disableAllAttributes();

    /**
     * Gets all the enabled attribute names for this filter.
     *
     * @return The list containing all the enabled attribute names.
     */
    public Vector<String> getEnabledAttributes()

}
