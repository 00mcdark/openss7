// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __org_openss7_javax_jain_ss7_isup_JainIsupProviderImpl__
#define __org_openss7_javax_jain_ss7_isup_JainIsupProviderImpl__

#pragma interface

#include <java/lang/Object.h>

extern "Java"
{
  namespace javax
  {
    namespace jain
    {
      namespace ss7
      {
        namespace isup
        {
          class JainIsupStack;
          class IsupEvent;
          class IsupUserAddress;
          class JainIsupListener;
        }
      }
    }
  }
  namespace org
  {
    namespace openss7
    {
      namespace javax
      {
        namespace jain
        {
          namespace ss7
          {
            namespace isup
            {
              class JainIsupProviderImpl;
              class JainIsupStackImpl;
            }
          }
        }
      }
    }
  }
}

class org::openss7::javax::jain::ss7::isup::JainIsupProviderImpl : public ::java::lang::Object
{
public:  // actually protected
  JainIsupProviderImpl ();
public:
  JainIsupProviderImpl (::org::openss7::javax::jain::ss7::isup::JainIsupStackImpl *);
  virtual void finalize ();
  virtual void addIsupListener (::javax::jain::ss7::isup::JainIsupListener *, ::javax::jain::ss7::isup::IsupUserAddress *);
  virtual void removeIsupListener (::javax::jain::ss7::isup::JainIsupListener *, ::javax::jain::ss7::isup::IsupUserAddress *);
  virtual void sendIsupEvent (::javax::jain::ss7::isup::IsupEvent *);
  virtual ::javax::jain::ss7::isup::JainIsupStack *getAttachedStack () { return reinterpret_cast< ::javax::jain::ss7::isup::JainIsupStack *> (m_stack); }
  virtual void run ();
  virtual void shutdown ();
public:  // actually protected
  virtual ::javax::jain::ss7::isup::IsupEvent *recvIsupEvent ();
private:
  ::org::openss7::javax::jain::ss7::isup::JainIsupStackImpl * __attribute__((aligned(__alignof__( ::java::lang::Object )))) m_stack;
  jboolean running;
public:

  static ::java::lang::Class class$;
};

#endif /* __org_openss7_javax_jain_ss7_isup_JainIsupProviderImpl__ */
