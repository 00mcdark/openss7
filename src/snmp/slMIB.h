/*****************************************************************************

 @(#) $Id: slMIB.h,v 1.1.2.1 2009-06-21 11:42:35 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2010  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2009-06-21 11:42:35 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: slMIB.h,v $
 Revision 1.1.2.1  2009-06-21 11:42:35  brian
 - added files to new distro

 Revision 0.9.2.8  2009-02-18 20:18:53  brian
 - updated agents

 Revision 0.9.2.7  2009-01-19 13:31:50  brian
 - updating standalone agents

 Revision 0.9.2.6  2009-01-14 14:30:07  brian
 - working up agents

 Revision 0.9.2.5  2009-01-10 17:09:21  brian
 - updated agents

 Revision 0.9.2.4  2009-01-04 13:16:06  brian
 - updated agents

 Revision 0.9.2.3  2009-01-03 10:51:07  brian
 - updated agent

 Revision 0.9.2.2  2009-01-02 15:04:15  brian
 - updated agents

 Revision 0.9.2.1  2008-12-31 16:09:08  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_SLMIB_H__
#define __LOCAL_SLMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct slMIB_data {
	uint slMIB_request;
	ulong slSdtNextIndex;		/* ReadOnly */
	ulong slSdlNextIndex;		/* ReadOnly */
};
struct slProfileTable_data {
	uint slProfileTable_request;
	uint slProfileTable_refs;
	uint8_t *slProfileId;		/* NoAccess */
	size_t slProfileIdLen;
	long slProfileTransmissionRate;	/* NoAccess */
	long slProfileErrorCorrectionMethod;	/* Create */
	oid *slProfileProtocolVariant;	/* Create */
	size_t slProfileProtocolVariantLen;
	long slProfileTimerT1;		/* Create */
	long slProfileTimerT2;		/* Create */
	long slProfileTimerT2L;		/* Create */
	long slProfileTimerT2H;		/* Create */
	long slProfileTimerT3;		/* Create */
	long slProfileTimerT4N;		/* Create */
	long slProfileTimerT4E;		/* Create */
	long slProfileTimerT5;		/* Create */
	long slProfileTimerT6;		/* Create */
	long slProfileTimerT7;		/* Create */
	ulong slProfileTbOnset1;	/* Create */
	ulong slProfileTbAbate1;	/* Create */
	ulong slProfileNumberOfThresholdLevels;	/* Create */
	long slProfileCongestionCounting;	/* Create */
	long slProfileCongestionReportingBaseObject;	/* Create */
	ulong slProfileLoopDelay;	/* Create */
	uint8_t *slProfileName;		/* Create */
	size_t slProfileNameLen;
	ulong slProfileTbOnset2;	/* Create */
	ulong slProfileTbAbate2;	/* Create */
	ulong slProfileTbOnset3;	/* Create */
	ulong slProfileTbAbate3;	/* Create */
	ulong slProfileTbDiscard1;	/* Create */
	ulong slProfileTbDiscard2;	/* Create */
	ulong slProfileTbDiscard3;	/* Create */
	long slProfileTimerTx;		/* Create */
	long slProfileTimerTy;		/* Create */
	ulong slProfileNumberOfCongestionStates;	/* Create */
	ulong slProfileInitialLevelOfCongestion;	/* Create */
	ulong slProfileMaxMSUsRetransN1;	/* Create */
	ulong slProfileMaxOctRetransN2;	/* Create */
	ulong slProfileReceiveCongestionThresholdOnset;	/* Create */
	ulong slProfileReceiveCongestionThresholdAbate;	/* Create */
	ulong slProfileReceiveCongestionThresholdDiscard;	/* Create */
	ulong slProfileM;		/* ReadOnly */
	long slProfileRowStatus;	/* Create */
};
struct slTable_data {
	uint slTable_request;
	uint slTable_refs;
	ulong slId;			/* NoAccess */
	ulong slMaxCapacitySL;		/* Create */
	uint8_t *slProceduralStatus;	/* ReadOnly */
	size_t slProceduralStatusLen;
	uint8_t *slProfilePointer;	/* Create */
	size_t slProfilePointerLen;
	uint8_t *slSignTermPointer;	/* Create */
	size_t slSignTermPointerLen;
	uint8_t *slSignDataLinkTpPointer;	/* Create */
	size_t slSignDataLinkTpPointerLen;
	long slReplaceSt;		/* Create */
	long slCongestionLevel;		/* ReadOnly */
	ulong slRelatedLinkGroupNumber;	/* Create */
	ulong slSdlList;		/* Create */
	uint8_t *slName;		/* Create */
	size_t slNameLen;
	ulong slSdtList;		/* Create */
	long slRowStatus;		/* Create */
};
struct slSdlListTable_data {
	uint slSdlListTable_request;
	uint slSdlListTable_refs;
	ulong slId;			/* NoAccess */
	ulong slSdlListId;		/* NoAccess */
	uint8_t *slSdlListPointer;	/* Create */
	size_t slSdlListPointerLen;
	long slSdlListRowStatus;	/* Create */
};
struct slSdtListTable_data {
	uint slSdtListTable_request;
	uint slSdtListTable_refs;
	ulong slId;			/* NoAccess */
	ulong slSdtListId;		/* NoAccess */
	uint8_t *slSdtListPointer;	/* Create */
	size_t slSdtListPointerLen;
	long slSdtListRowStatus;	/* Create */
};
struct slNbTable_data {
	uint slNbTable_request;
	uint slNbTable_refs;
	uint8_t *slSdtProfileId;	/* NoAccess */
	size_t slSdtProfileIdLen;
	long slNbTransmissionRate;	/* Create */
	ulong slNbTimerT8;		/* ReadOnly */
	ulong slNbTin;			/* ReadOnly */
	ulong slNbTie;			/* ReadOnly */
	ulong slNbT;			/* ReadOnly */
	ulong slNbD;			/* ReadOnly */
	ulong slNbTe;			/* ReadOnly */
	ulong slNbDe;			/* ReadOnly */
	ulong slNbUe;			/* ReadOnly */
	ulong slNbN;			/* ReadOnly */
	ulong slNbm;			/* ReadOnly */
	ulong slNbb;			/* ReadOnly */
	long slNbf;			/* Create */
	long slNbRowStatus;		/* Create */
};
struct slSaalTable_data {
	uint slSaalTable_request;
	uint slSaalTable_refs;
	uint8_t *slSdtProfileId;	/* NoAccess */
	size_t slSdtProfileIdLen;
	long slSaalBufferRelease;	/* Create */
	ulong slSaalMaxCc;		/* Create */
	ulong slSaalMaxNrp;		/* Create */
	ulong slSaalMaxInformationFieldLength;	/* Create */
	ulong slSaalMaxLengthSscopUuField;	/* Create */
	ulong slSaalMaxPd;		/* Create */
	ulong slSaalMaxSscopCreditToPeer;	/* Create */
	ulong slSaalMaxStat;		/* Create */
	ulong slSaalN1;			/* Create */
	long slSaalNniLayerManagementProvingState;	/* Create */
	long slSaalNniLayerManagementTimerNoCredit;	/* Create */
	long slSaalNniLayerManagementTimerRepeatSrec;	/* Create */
	long slSaalNniTimerT1;		/* Create */
	long slSaalNniTimerT2;		/* Create */
	long slSaalNniTimerT3;		/* Create */
	long slSaalSscopTimerCc;	/* Create */
	long slSaalSscopTimerIdle;	/* Create */
	long slSaalSscopTimerKeepAlive;	/* Create */
	long slSaalSscopTimerNoResponse;	/* Create */
	long slSaalSscopTimerPoll;	/* Create */
	ulong slSaalTransmissionRateIntervalLower;	/* Create */
	ulong slSaalTransmissionRateIntervalUpper;	/* Create */
	ulong slSaalEgressTransmissionRateIntervalLower;	/* Create */
	ulong slSaalEgressTransmissionRateIntervalUpper;	/* Create */
	long slSaalPollAfterRetransmission;	/* Create */
	long slSaalRowStatus;		/* Create */
};
struct slM2paTable_data {
	uint slM2paTable_request;
	uint slM2paTable_refs;
	uint8_t *slSdtProfileId;	/* NoAccess */
	size_t slSdtProfileIdLen;
	ulong slM2paN1;			/* Create */
	long slM2paProving;		/* Create */
	long slM2paManagementProvingState;	/* Create */
	ulong slM2paLoopDelayLower;	/* Create */
	ulong slM2paLoopDelayUpper;	/* Create */
	ulong slM2paTransmissionRateIntervalLower;	/* Create */
	ulong slM2paTransmissionRateIntervalUpper;	/* Create */
	long slM2paSctpNoDelay;		/* Create */
	ulong slM2paSctpMaxseg;		/* Create */
	ulong slM2paSctpHeartbeatItvl;	/* Create */
	long slM2paSctpHeartbeat;	/* Create */
	ulong slM2paSctpRtoInitial;	/* Create */
	ulong slM2paSctpRtoMin;		/* Create */
	ulong slM2paSctpRtoMax;		/* Create */
	ulong slM2paSctpPathMaxRetrans;	/* Create */
	ulong slM2paSctpCookieLife;	/* Create */
	ulong slM2paSctpCookieInc;	/* Create */
	ulong slM2paSctpMaxInitRetries;	/* Create */
	ulong slM2paSctpMaxBurst;	/* Create */
	ulong slM2paSctpAssocMaxRetrans;	/* Create */
	ulong slM2paSctpSackDelay;	/* Create */
	ulong slM2paSctpLifetime;	/* Create */
	ulong slM2paProvingAttempts;	/* Create */
	long slM2paRowStatus;		/* Create */
};
struct slSdtTable_data {
	uint slSdtTable_request;
	uint slSdtTable_refs;
	ulong slSdtId;			/* NoAccess */
	long slSdtAdministrativeState;	/* Create */
	long slSdtOperationalState;	/* ReadOnly */
	long slSdtUsageState;		/* ReadOnly */
	uint8_t *slSdtProceduralStatus;	/* ReadOnly */
	size_t slSdtProceduralStatusLen;
	uint8_t *slSdtAvailabilityStatus;	/* ReadOnly */
	size_t slSdtAvailabilityStatusLen;
	oid *slSdtEquipmentPointer;	/* Create */
	size_t slSdtEquipmentPointerLen;
	uint8_t *slSdtName;		/* Create */
	size_t slSdtNameLen;
	uint8_t *slSdtProfilePointer;	/* Create */
	size_t slSdtProfilePointerLen;
	long slSdtRowStatus;		/* Create */
};
struct slSdlTable_data {
	uint slSdlTable_request;
	uint slSdlTable_refs;
	ulong slSdlId;			/* NoAccess */
	uint8_t *slSdlAdjPc;		/* Create */
	size_t slSdlAdjPcLen;
	long slSdlTransmissionRate;	/* Create */
	ulong slSdlLoopDelay;		/* Create */
	long slSdlOperationalState;	/* ReadOnly */
	oid *slSdlEquipmentPointer;	/* Create */
	size_t slSdlEquipmentPointerLen;
	long slSdlCIC;			/* Create */
	uint8_t *slSdlName;		/* Create */
	size_t slSdlNameLen;
	uint8_t *slSdlStmChannel;	/* Create */
	size_t slSdlStmChannelLen;
	oid *slSdlVcTTpPointer;		/* Create */
	size_t slSdlVcTTpPointerLen;
	long slSdlRowStatus;		/* Create */
};

/* storage declarations */
extern struct slMIB_data *slMIBStorage;
extern struct header_complex_index *slProfileTableStorage;
extern struct header_complex_index *slTableStorage;
extern struct header_complex_index *slSdlListTableStorage;
extern struct header_complex_index *slSdtListTableStorage;
extern struct header_complex_index *slNbTableStorage;
extern struct header_complex_index *slSaalTableStorage;
extern struct header_complex_index *slM2paTableStorage;
extern struct header_complex_index *slSdtTableStorage;
extern struct header_complex_index *slSdlTableStorage;

/* enum definitions from the covered mib sections */

#define SLPROFILETRANSMISSIONRATE_KBITS4POINT8   0
#define SLPROFILETRANSMISSIONRATE_KBITS56        1
#define SLPROFILETRANSMISSIONRATE_KBITS64        2
#define SLPROFILETRANSMISSIONRATE_KBITS1544      3
#define SLPROFILETRANSMISSIONRATE_KBITS2048      4

#define SLPROFILEERRORCORRECTIONMETHOD_BASICRETR 0
#define SLPROFILEERRORCORRECTIONMETHOD_PREVCYCLRETR 1

#define SLPROFILECONGESTIONCOUNTING_OCTET        0
#define SLPROFILECONGESTIONCOUNTING_MESSAGE      1

#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_ROUTESET 0
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_LINKSETOFCONGESTEDROUTESET 1
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_LINKOFCONGESTEDROUTESET 2
#define SLPROFILECONGESTIONREPORTINGBASEOBJECT_CONGESTEDLINKOFCONGESTEDROUTE 3

#define SLPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLPROCEDURALSTATUS_NOTINITIALIZED        1
#define SLPROCEDURALSTATUS_INITIALIZING          2
#define SLPROCEDURALSTATUS_REPORTING             3
#define SLPROCEDURALSTATUS_TERMINATING           4

#define SLREPLACEST_SUCCESS                      0
#define SLREPLACEST_UNSUCCESSFUL                 1
#define SLREPLACEST_NOTPERFORMED                 2
#define SLREPLACEST_LINKALREADYINHIBITED         3
#define SLREPLACEST_LINKNOTINHIBITED             4
#define SLREPLACEST_WRONGCLASSREFERENCED         5
#define SLREPLACEST_SIGNTERMNONEXISTING          6
#define SLREPLACEST_SIGNTERMALREADYREFERENCED    7
#define SLREPLACEST_WRONGSIGNLINKTPSTATUS        8

#define SLCONGESTIONLEVEL_NONE                   0
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL1       1
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL2       2
#define SLCONGESTIONLEVEL_CONGESTIONLEVEL3       3

#define SLNBTRANSMISSIONRATE_KBITS4POINT8        0
#define SLNBTRANSMISSIONRATE_KBITS56             1
#define SLNBTRANSMISSIONRATE_KBITS64             2
#define SLNBTRANSMISSIONRATE_KBITS1544           3
#define SLNBTRANSMISSIONRATE_KBITS2048           4

#define SLNBF_ONE                                0
#define SLNBF_SHARED                             1
#define SLNBF_TWO                                2
#define SLNBF_THREE                              3
#define SLNBF_FOUR                               4
#define SLNBF_FIVE                               5
#define SLNBF_SIX                                6

#define SLSAALBUFFERRELEASE_TRUE                 1
#define SLSAALBUFFERRELEASE_FALSE                2

#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_NORMAL 0
#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_EMERGENCY 1
#define SLSAALNNILAYERMANAGEMENTPROVINGSTATE_NEUTRAL 2

#define SLSAALPOLLAFTERRETRANSMISSION_TRUE       1
#define SLSAALPOLLAFTERRETRANSMISSION_FALSE      2

#define SLM2PAPROVING_TRUE                       1
#define SLM2PAPROVING_FALSE                      2

#define SLM2PAMANAGEMENTPROVINGSTATE_NORMAL      0
#define SLM2PAMANAGEMENTPROVINGSTATE_EMERGENCY   1
#define SLM2PAMANAGEMENTPROVINGSTATE_NEUTRAL     2

#define SLM2PASCTPNODELAY_TRUE                   1
#define SLM2PASCTPNODELAY_FALSE                  2

#define SLM2PASCTPHEARTBEAT_TRUE                 1
#define SLM2PASCTPHEARTBEAT_FALSE                2

#define SLSDTADMINISTRATIVESTATE_LOCKED          0
#define SLSDTADMINISTRATIVESTATE_UNLOCKED        1
#define SLSDTADMINISTRATIVESTATE_SHUTTINGDOWN    2

#define SLSDTOPERATIONALSTATE_DISABLED           0
#define SLSDTOPERATIONALSTATE_ENABLED            1

#define SLSDTUSAGESTATE_IDLE                     0
#define SLSDTUSAGESTATE_ACTIVE                   1
#define SLSDTUSAGESTATE_BUSY                     2

#define SLSDTPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define SLSDTPROCEDURALSTATUS_NOTINITIALIZED     1
#define SLSDTPROCEDURALSTATUS_INITIALIZING       2
#define SLSDTPROCEDURALSTATUS_REPORTING          3
#define SLSDTPROCEDURALSTATUS_TERMINATING        4

#define SLSDTAVAILABILITYSTATUS_INTEST           0
#define SLSDTAVAILABILITYSTATUS_FAILED           1
#define SLSDTAVAILABILITYSTATUS_POWEROFF         2
#define SLSDTAVAILABILITYSTATUS_OFFLINE          3
#define SLSDTAVAILABILITYSTATUS_OFFDUTY          4
#define SLSDTAVAILABILITYSTATUS_DEPENDENCY       5
#define SLSDTAVAILABILITYSTATUS_DEGRADED         6
#define SLSDTAVAILABILITYSTATUS_NOTINSTALLED     7
#define SLSDTAVAILABILITYSTATUS_LOGFULL          8

#define SLSDLTRANSMISSIONRATE_KBITS4POINT8       0
#define SLSDLTRANSMISSIONRATE_KBITS56            1
#define SLSDLTRANSMISSIONRATE_KBITS64            2
#define SLSDLTRANSMISSIONRATE_KBITS1544          3
#define SLSDLTRANSMISSIONRATE_KBITS2048          4

#define SLSDLOPERATIONALSTATE_DISABLED           0
#define SLSDLOPERATIONALSTATE_ENABLED            1

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_slMIB(void);
void deinit_slMIB(void);
int term_slMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_slMIB;
void parse_slMIB(const char *, char *);
SNMPCallback store_slMIB;
void refresh_slMIB(int);
FindVarMethod var_slProfileTable;
struct slProfileTable_data *slProfileTable_create(void);
struct slProfileTable_data *slProfileTable_duplicate(struct slProfileTable_data *);
int slProfileTable_destroy(struct slProfileTable_data **);
int slProfileTable_add(struct slProfileTable_data *);
int slProfileTable_del(struct slProfileTable_data *);
void parse_slProfileTable(const char *, char *);
SNMPCallback store_slProfileTable;
void refresh_slProfileTable(int);
FindVarMethod var_slTable;
struct slTable_data *slTable_create(void);
struct slTable_data *slTable_duplicate(struct slTable_data *);
int slTable_destroy(struct slTable_data **);
int slTable_add(struct slTable_data *);
int slTable_del(struct slTable_data *);
void parse_slTable(const char *, char *);
SNMPCallback store_slTable;
void refresh_slTable(int);
FindVarMethod var_slSdlListTable;
struct slSdlListTable_data *slSdlListTable_create(void);
struct slSdlListTable_data *slSdlListTable_duplicate(struct slSdlListTable_data *);
int slSdlListTable_destroy(struct slSdlListTable_data **);
int slSdlListTable_add(struct slSdlListTable_data *);
int slSdlListTable_del(struct slSdlListTable_data *);
void parse_slSdlListTable(const char *, char *);
SNMPCallback store_slSdlListTable;
void refresh_slSdlListTable(int);
FindVarMethod var_slSdtListTable;
struct slSdtListTable_data *slSdtListTable_create(void);
struct slSdtListTable_data *slSdtListTable_duplicate(struct slSdtListTable_data *);
int slSdtListTable_destroy(struct slSdtListTable_data **);
int slSdtListTable_add(struct slSdtListTable_data *);
int slSdtListTable_del(struct slSdtListTable_data *);
void parse_slSdtListTable(const char *, char *);
SNMPCallback store_slSdtListTable;
void refresh_slSdtListTable(int);
FindVarMethod var_slNbTable;
struct slNbTable_data *slNbTable_create(void);
struct slNbTable_data *slNbTable_duplicate(struct slNbTable_data *);
int slNbTable_destroy(struct slNbTable_data **);
int slNbTable_add(struct slNbTable_data *);
int slNbTable_del(struct slNbTable_data *);
void parse_slNbTable(const char *, char *);
SNMPCallback store_slNbTable;
void refresh_slNbTable(int);
FindVarMethod var_slSaalTable;
struct slSaalTable_data *slSaalTable_create(void);
struct slSaalTable_data *slSaalTable_duplicate(struct slSaalTable_data *);
int slSaalTable_destroy(struct slSaalTable_data **);
int slSaalTable_add(struct slSaalTable_data *);
int slSaalTable_del(struct slSaalTable_data *);
void parse_slSaalTable(const char *, char *);
SNMPCallback store_slSaalTable;
void refresh_slSaalTable(int);
FindVarMethod var_slM2paTable;
struct slM2paTable_data *slM2paTable_create(void);
struct slM2paTable_data *slM2paTable_duplicate(struct slM2paTable_data *);
int slM2paTable_destroy(struct slM2paTable_data **);
int slM2paTable_add(struct slM2paTable_data *);
int slM2paTable_del(struct slM2paTable_data *);
void parse_slM2paTable(const char *, char *);
SNMPCallback store_slM2paTable;
void refresh_slM2paTable(int);
FindVarMethod var_slSdtTable;
struct slSdtTable_data *slSdtTable_create(void);
struct slSdtTable_data *slSdtTable_duplicate(struct slSdtTable_data *);
int slSdtTable_destroy(struct slSdtTable_data **);
int slSdtTable_add(struct slSdtTable_data *);
int slSdtTable_del(struct slSdtTable_data *);
void parse_slSdtTable(const char *, char *);
SNMPCallback store_slSdtTable;
void refresh_slSdtTable(int);
FindVarMethod var_slSdlTable;
struct slSdlTable_data *slSdlTable_create(void);
struct slSdlTable_data *slSdlTable_duplicate(struct slSdlTable_data *);
int slSdlTable_destroy(struct slSdlTable_data **);
int slSdlTable_add(struct slSdlTable_data *);
int slSdlTable_del(struct slSdlTable_data *);
void parse_slSdlTable(const char *, char *);
SNMPCallback store_slSdlTable;
void refresh_slSdlTable(int);

WriteMethod write_slProfileErrorCorrectionMethod;
WriteMethod write_slProfileProtocolVariant;
WriteMethod write_slProfileTimerT1;
WriteMethod write_slProfileTimerT2;
WriteMethod write_slProfileTimerT2L;
WriteMethod write_slProfileTimerT2H;
WriteMethod write_slProfileTimerT3;
WriteMethod write_slProfileTimerT4N;
WriteMethod write_slProfileTimerT4E;
WriteMethod write_slProfileTimerT5;
WriteMethod write_slProfileTimerT6;
WriteMethod write_slProfileTimerT7;
WriteMethod write_slProfileTbOnset1;
WriteMethod write_slProfileTbAbate1;
WriteMethod write_slProfileNumberOfThresholdLevels;
WriteMethod write_slProfileCongestionCounting;
WriteMethod write_slProfileCongestionReportingBaseObject;
WriteMethod write_slProfileLoopDelay;
WriteMethod write_slProfileName;
WriteMethod write_slProfileTbOnset2;
WriteMethod write_slProfileTbAbate2;
WriteMethod write_slProfileTbOnset3;
WriteMethod write_slProfileTbAbate3;
WriteMethod write_slProfileTbDiscard1;
WriteMethod write_slProfileTbDiscard2;
WriteMethod write_slProfileTbDiscard3;
WriteMethod write_slProfileTimerTx;
WriteMethod write_slProfileTimerTy;
WriteMethod write_slProfileNumberOfCongestionStates;
WriteMethod write_slProfileInitialLevelOfCongestion;
WriteMethod write_slProfileMaxMSUsRetransN1;
WriteMethod write_slProfileMaxOctRetransN2;
WriteMethod write_slProfileReceiveCongestionThresholdOnset;
WriteMethod write_slProfileReceiveCongestionThresholdAbate;
WriteMethod write_slProfileReceiveCongestionThresholdDiscard;
WriteMethod write_slProfileRowStatus;
WriteMethod write_slMaxCapacitySL;
WriteMethod write_slProfilePointer;
WriteMethod write_slSignTermPointer;
WriteMethod write_slSignDataLinkTpPointer;
WriteMethod write_slReplaceSt;
WriteMethod write_slRelatedLinkGroupNumber;
WriteMethod write_slSdlList;
WriteMethod write_slName;
WriteMethod write_slSdtList;
WriteMethod write_slRowStatus;
WriteMethod write_slSdlListPointer;
WriteMethod write_slSdlListRowStatus;
WriteMethod write_slSdtListPointer;
WriteMethod write_slSdtListRowStatus;
WriteMethod write_slNbTransmissionRate;
WriteMethod write_slNbf;
WriteMethod write_slNbRowStatus;
WriteMethod write_slSaalBufferRelease;
WriteMethod write_slSaalMaxCc;
WriteMethod write_slSaalMaxNrp;
WriteMethod write_slSaalMaxInformationFieldLength;
WriteMethod write_slSaalMaxLengthSscopUuField;
WriteMethod write_slSaalMaxPd;
WriteMethod write_slSaalMaxSscopCreditToPeer;
WriteMethod write_slSaalMaxStat;
WriteMethod write_slSaalN1;
WriteMethod write_slSaalNniLayerManagementProvingState;
WriteMethod write_slSaalNniLayerManagementTimerNoCredit;
WriteMethod write_slSaalNniLayerManagementTimerRepeatSrec;
WriteMethod write_slSaalNniTimerT1;
WriteMethod write_slSaalNniTimerT2;
WriteMethod write_slSaalNniTimerT3;
WriteMethod write_slSaalSscopTimerCc;
WriteMethod write_slSaalSscopTimerIdle;
WriteMethod write_slSaalSscopTimerKeepAlive;
WriteMethod write_slSaalSscopTimerNoResponse;
WriteMethod write_slSaalSscopTimerPoll;
WriteMethod write_slSaalTransmissionRateIntervalLower;
WriteMethod write_slSaalTransmissionRateIntervalUpper;
WriteMethod write_slSaalEgressTransmissionRateIntervalLower;
WriteMethod write_slSaalEgressTransmissionRateIntervalUpper;
WriteMethod write_slSaalPollAfterRetransmission;
WriteMethod write_slSaalRowStatus;
WriteMethod write_slM2paN1;
WriteMethod write_slM2paProving;
WriteMethod write_slM2paManagementProvingState;
WriteMethod write_slM2paLoopDelayLower;
WriteMethod write_slM2paLoopDelayUpper;
WriteMethod write_slM2paTransmissionRateIntervalLower;
WriteMethod write_slM2paTransmissionRateIntervalUpper;
WriteMethod write_slM2paSctpNoDelay;
WriteMethod write_slM2paSctpMaxseg;
WriteMethod write_slM2paSctpHeartbeatItvl;
WriteMethod write_slM2paSctpHeartbeat;
WriteMethod write_slM2paSctpRtoInitial;
WriteMethod write_slM2paSctpRtoMin;
WriteMethod write_slM2paSctpRtoMax;
WriteMethod write_slM2paSctpPathMaxRetrans;
WriteMethod write_slM2paSctpCookieLife;
WriteMethod write_slM2paSctpCookieInc;
WriteMethod write_slM2paSctpMaxInitRetries;
WriteMethod write_slM2paSctpMaxBurst;
WriteMethod write_slM2paSctpAssocMaxRetrans;
WriteMethod write_slM2paSctpSackDelay;
WriteMethod write_slM2paSctpLifetime;
WriteMethod write_slM2paProvingAttempts;
WriteMethod write_slM2paRowStatus;
WriteMethod write_slSdtAdministrativeState;
WriteMethod write_slSdtEquipmentPointer;
WriteMethod write_slSdtName;
WriteMethod write_slSdtProfilePointer;
WriteMethod write_slSdtRowStatus;
WriteMethod write_slSdlAdjPc;
WriteMethod write_slSdlTransmissionRate;
WriteMethod write_slSdlLoopDelay;
WriteMethod write_slSdlEquipmentPointer;
WriteMethod write_slSdlCIC;
WriteMethod write_slSdlName;
WriteMethod write_slSdlStmChannel;
WriteMethod write_slSdlVcTTpPointer;
WriteMethod write_slSdlRowStatus;
#endif				/* __LOCAL_SLMIB_H__ */
