/*****************************************************************************

 @(#) $Id: tcapMIB.h,v 1.1.2.3 2011-07-18 19:42:28 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2010  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2011-07-18 19:42:28 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: tcapMIB.h,v $
 Revision 1.1.2.3  2011-07-18 19:42:28  brian
 - added documentation

 Revision 1.1.2.2  2010-11-28 14:22:20  brian
 - remove #ident, protect _XOPEN_SOURCE

 Revision 1.1.2.1  2009-06-21 11:42:35  brian
 - added files to new distro

 Revision 0.9.2.9  2009-02-18 20:18:55  brian
 - updated agents

 Revision 0.9.2.8  2009-01-19 13:31:51  brian
 - updating standalone agents

 Revision 0.9.2.7  2009-01-14 14:30:08  brian
 - working up agents

 Revision 0.9.2.6  2009-01-10 17:09:22  brian
 - updated agents

 Revision 0.9.2.5  2009-01-04 13:16:06  brian
 - updated agents

 Revision 0.9.2.4  2009-01-02 15:04:16  brian
 - updated agents

 Revision 0.9.2.3  2008-12-31 16:04:47  brian
 - updated mibs

 Revision 0.9.2.2  2008-12-24 13:08:26  brian
 - building ss7confd

 *****************************************************************************/

#ifndef __LOCAL_TCAPMIB_H__
#define __LOCAL_TCAPMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct tcapMIB_data {
	uint tcapMIB_request;
};
struct tcapApplicationSubsystemTable_data {
	uint tcapApplicationSubsystemTable_request;
	uint tcapApplicationSubsystemTable_refs;
	long tcapSystemId;		/* NoAccess */
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	long tcapApplicationSubsystemRowStatus;	/* Create */
};
struct tcapTransactionCopmTable_data {
	uint tcapTransactionCopmTable_request;
	uint tcapTransactionCopmTable_refs;
	ulong tcapTransactionCopmId;	/* NoAccess */
	long tcapTransactionCopmOperationalState;	/* NoAccess */
	long tcapTransactionCopmRowStatus;	/* Create */
};
struct tcapTransactionTable_data {
	uint tcapTransactionTable_request;
	uint tcapTransactionTable_refs;
	long tcapApInvocationId;	/* NoAccess */
	long tcapTransactionId;		/* NoAccess */
	oid *tcapTransactionUnderlyingConnectionNames;	/* ReadOnly */
	size_t tcapTransactionUnderlyingConnectionNamesLen;
	oid *tcapTransactionInvocationOfPointer;	/* ReadOnly */
	size_t tcapTransactionInvocationOfPointerLen;
	uint8_t *tcapTransactionPresFUinUse;	/* ReadOnly */
	size_t tcapTransactionPresFUinUseLen;
	oid *tcapTransactionPresContextInUse;	/* ReadOnly */
	size_t tcapTransactionPresContextInUseLen;
	uint8_t *tcapTransactionSessProtInUse;	/* ReadOnly */
	size_t tcapTransactionSessProtInUseLen;
	uint8_t *tcapTransactionSessFUInUse;	/* ReadOnly */
	size_t tcapTransactionSessFUInUseLen;
	ulong tcapTransactionMaxTSDUsize;	/* ReadOnly */
};
struct tcapDialogueTable_data {
	uint tcapDialogueTable_request;
	uint tcapDialogueTable_refs;
	long tcapApInvocationId;	/* NoAccess */
	long tcapTransactionId;		/* NoAccess */
	ulong tcapDialogueId;		/* NoAccess */
	oid *tcapDialogueInvocationOfPointer;	/* ReadOnly */
	size_t tcapDialogueInvocationOfPointerLen;
	uint8_t *tcapDialogueCallingAEtitle;	/* ReadOnly */
	size_t tcapDialogueCallingAEtitleLen;
	uint8_t *tcapDialogueAcseFUinUse;	/* ReadOnly */
	size_t tcapDialogueAcseFUinUseLen;
	oid *tcapDialogueApplContextInUse;	/* ReadOnly */
	size_t tcapDialogueApplContextInUseLen;
	oid *tcapDialogueParentASOinvoc;	/* ReadOnly */
	size_t tcapDialogueParentASOinvocLen;
	uint8_t *tcapDialogueCalledAEtitle;	/* ReadOnly */
	size_t tcapDialogueCalledAEtitleLen;
};
struct tcapTcUserTable_data {
	uint tcapTcUserTable_request;
	uint tcapTcUserTable_refs;
	long tcapSystemId;		/* NoAccess */
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	ulong tcapTcUserId;		/* NoAccess */
	oid *tcapTcUserInvocationOfPointer;	/* Create */
	size_t tcapTcUserInvocationOfPointerLen;
};
struct tcapApplicationProcessTable_data {
	uint tcapApplicationProcessTable_request;
	uint tcapApplicationProcessTable_refs;
	long tcapSystemId;		/* NoAccess */
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	uint8_t *tcapApplicationProcessId;	/* NoAccess */
	size_t tcapApplicationProcessIdLen;
	oid *tcapApplicationProcessTitle;	/* Create */
	size_t tcapApplicationProcessTitleLen;
	ulong tcapApplicationProcessSupportEntityNames;	/* ReadOnly */
	long tcapApplicationProcessOperationalState;	/* ReadOnly */
	long tcapApplicationProcessRowStatus;	/* Create */
};
struct tcapSupportEntityNameTable_data {
	uint tcapSupportEntityNameTable_request;
	uint tcapSupportEntityNameTable_refs;
	long tcapSystemId;		/* NoAccess */
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	uint8_t *tcapApplicationProcessId;	/* NoAccess */
	size_t tcapApplicationProcessIdLen;
	ulong tcapSupportEntityNameId;	/* NoAccess */
	oid *tcapSupportEntityNamePointer;	/* Create */
	size_t tcapSupportEntityNamePointerLen;
	long tcapSupportEntityRowStatus;	/* Create */
};
struct tcapApplicationEntityTable_data {
	uint tcapApplicationEntityTable_request;
	uint tcapApplicationEntityTable_refs;
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	uint8_t *tcapApplicationEntityId;	/* NoAccess */
	size_t tcapApplicationEntityIdLen;
	ulong tcapApplicationEntityLocalSapNames;	/* ReadOnly */
	long tcapApplicationEntityOperationalState;	/* ReadOnly */
	oid *tcapApplicationEntityAsoTitle;	/* Create */
	size_t tcapApplicationEntityAsoTitleLen;
	oid *tcapApplicationEntityAsoQualifier;	/* Create */
	size_t tcapApplicationEntityAsoQualifierLen;
	ulong tcapApplicationEntityApplicationContextNameSupport;	/* ReadOnly */
	uint8_t *tcapApplicationEntityPresFUsupport;	/* Create */
	size_t tcapApplicationEntityPresFUsupportLen;
	oid *tcapApplicationEntityAbstrSyntaxSupport;	/* Create */
	size_t tcapApplicationEntityAbstrSyntaxSupportLen;
	oid *tcapApplicationEntityTransfSynstaxSupport;	/* Create */
	size_t tcapApplicationEntityTransfSynstaxSupportLen;
	uint8_t *tcapApplicationEntityPresSelectorValue;	/* Create */
	size_t tcapApplicationEntityPresSelectorValueLen;
	uint8_t *tcapApplicationEntitySessProtVerSupport;	/* Create */
	size_t tcapApplicationEntitySessProtVerSupportLen;
	uint8_t *tcapApplicationEntitySessFUsupport;	/* Create */
	size_t tcapApplicationEntitySessFUsupportLen;
	uint8_t *tcapApplicationEntitySessOptSupport;	/* Create */
	size_t tcapApplicationEntitySessOptSupportLen;
	uint8_t *tcapApplicationEntitySessionSelectorValue;	/* Create */
	size_t tcapApplicationEntitySessionSelectorValueLen;
	long tcapApplicationEntityRowStatus;	/* Create */
};
struct tcapLocalSapNameTable_data {
	uint tcapLocalSapNameTable_request;
	uint tcapLocalSapNameTable_refs;
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	uint8_t *tcapApplicationEntityId;	/* NoAccess */
	size_t tcapApplicationEntityIdLen;
	ulong tcapLocalSapNameId;	/* NoAccess */
	oid *tcapLocalSapNamePointer;	/* Create */
	size_t tcapLocalSapNamePointerLen;
	long tcapLocalSapNameRowStatus;	/* Create */
};
struct tcapApplicationContextNameTable_data {
	uint tcapApplicationContextNameTable_request;
	uint tcapApplicationContextNameTable_refs;
	uint8_t *tcapApplicationSubsystemId;	/* NoAccess */
	size_t tcapApplicationSubsystemIdLen;
	uint8_t *tcapApplicationEntityId;	/* NoAccess */
	size_t tcapApplicationEntityIdLen;
	ulong tcapApplicationContextId;	/* NoAccess */
	oid *tcapApplicationContextName;	/* Create */
	size_t tcapApplicationContextNameLen;
	long tcapApplicationContextNumber;	/* Create */
	long tcapApplicationContextRowStatus;	/* Create */
};
struct tcapAbstractSyntaxTable_data {
	uint tcapAbstractSyntaxTable_request;
	uint tcapAbstractSyntaxTable_refs;
	uint8_t *tcapApplicationEntityId;	/* NoAccess */
	size_t tcapApplicationEntityIdLen;
	ulong tcapAbstractSyntaxId;	/* NoAccess */
	oid *tcapAbstractSyntaxName;	/* Create */
	size_t tcapAbstractSyntaxNameLen;
	long tcapAbstractSyntaxRowStatus;	/* Create */
};
struct tcapTransferSyntaxTable_data {
	uint tcapTransferSyntaxTable_request;
	uint tcapTransferSyntaxTable_refs;
	uint8_t *tcapApplicationEntityId;	/* NoAccess */
	size_t tcapApplicationEntityIdLen;
	oid *tcapTransferSyntaxId;	/* NoAccess */
	size_t tcapTransferSyntaxIdLen;
	oid *tcapTransferSyntaxName;	/* Create */
	size_t tcapTransferSyntaxNameLen;
	long tcapTransferSyntaxRowStatus;	/* Create */
};

/* storage declarations */
extern struct tcapMIB_data *tcapMIBStorage;
extern struct header_complex_index *tcapApplicationSubsystemTableStorage;
extern struct header_complex_index *tcapTransactionCopmTableStorage;
extern struct header_complex_index *tcapTransactionTableStorage;
extern struct header_complex_index *tcapDialogueTableStorage;
extern struct header_complex_index *tcapTcUserTableStorage;
extern struct header_complex_index *tcapApplicationProcessTableStorage;
extern struct header_complex_index *tcapSupportEntityNameTableStorage;
extern struct header_complex_index *tcapApplicationEntityTableStorage;
extern struct header_complex_index *tcapLocalSapNameTableStorage;
extern struct header_complex_index *tcapApplicationContextNameTableStorage;
extern struct header_complex_index *tcapAbstractSyntaxTableStorage;
extern struct header_complex_index *tcapTransferSyntaxTableStorage;

/* enum definitions from the covered mib sections */

#define TCAPTRANSACTIONCOPMOPERATIONALSTATE_DISABLED 0
#define TCAPTRANSACTIONCOPMOPERATIONALSTATE_ENABLED 1

#define TCAPTRANSACTIONPRESFUINUSE_CONTEXTMANAGEMENT 0
#define TCAPTRANSACTIONPRESFUINUSE_RESTORATION   1

#define TCAPTRANSACTIONSESSPROTINUSE_VERSION1    0
#define TCAPTRANSACTIONSESSPROTINUSE_VERSION2    1

#define TCAPTRANSACTIONSESSFUINUSE_HALFDUPLEX    0
#define TCAPTRANSACTIONSESSFUINUSE_DUPLEX        1
#define TCAPTRANSACTIONSESSFUINUSE_EXPEDITEDDATA 2
#define TCAPTRANSACTIONSESSFUINUSE_MINORSYNCHRONIZE 3
#define TCAPTRANSACTIONSESSFUINUSE_MAJORSYNCHRONIZE 4
#define TCAPTRANSACTIONSESSFUINUSE_RESYNCHRONIZE 5
#define TCAPTRANSACTIONSESSFUINUSE_ACTIVITYMANAGEMENT 6
#define TCAPTRANSACTIONSESSFUINUSE_NEGOTIATEDRELEASE 7
#define TCAPTRANSACTIONSESSFUINUSE_CAPABILITYDATA 8
#define TCAPTRANSACTIONSESSFUINUSE_EXCEPTIONS    9
#define TCAPTRANSACTIONSESSFUINUSE_TYPEDDATA     10

#define TCAPDIALOGUEACSEFUINUSE_AUTHENTICATION   0
#define TCAPDIALOGUEACSEFUINUSE_APPLICATIONCONTEXTNEGOTIATION 1

#define TCAPAPPLICATIONPROCESSOPERATIONALSTATE_DISABLED 0
#define TCAPAPPLICATIONPROCESSOPERATIONALSTATE_ENABLED 1

#define TCAPAPPLICATIONENTITYOPERATIONALSTATE_DISABLED 0
#define TCAPAPPLICATIONENTITYOPERATIONALSTATE_ENABLED 1

#define TCAPAPPLICATIONENTITYPRESFUSUPPORT_CONTEXTMANAGEMENT 0
#define TCAPAPPLICATIONENTITYPRESFUSUPPORT_RESTORATION 1

#define TCAPAPPLICATIONENTITYSESSPROTVERSUPPORT_VERSION1 0
#define TCAPAPPLICATIONENTITYSESSPROTVERSUPPORT_VERSION2 1

#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_HALFDUPLEX 0
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_DUPLEX 1
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_EXPEDITEDDATA 2
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_MINORSYNCHRONIZE 3
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_MAJORSYNCHRONIZE 4
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_RESYNCHRONIZE 5
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_ACTIVITYMANAGEMENT 6
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_NEGOTIATEDRELEASE 7
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_CAPABILITYDATA 8
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_EXCEPTIONS 9
#define TCAPAPPLICATIONENTITYSESSFUSUPPORT_TYPEDDATA 10

#define TCAPAPPLICATIONENTITYSESSOPTSUPPORT_SEGMENTING 0

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid tcapBasicGroup_oid[12];
extern oid tcapBasicCompliance_oid[12];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_tcapMIB(void);
void deinit_tcapMIB(void);
int term_tcapMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_tcapMIB;
void parse_tcapMIB(const char *, char *);
SNMPCallback store_tcapMIB;
void refresh_tcapMIB(int);
FindVarMethod var_tcapApplicationSubsystemTable;
struct tcapApplicationSubsystemTable_data *tcapApplicationSubsystemTable_create(void);
struct tcapApplicationSubsystemTable_data *tcapApplicationSubsystemTable_duplicate(struct tcapApplicationSubsystemTable_data *);
int tcapApplicationSubsystemTable_destroy(struct tcapApplicationSubsystemTable_data **);
int tcapApplicationSubsystemTable_add(struct tcapApplicationSubsystemTable_data *);
int tcapApplicationSubsystemTable_del(struct tcapApplicationSubsystemTable_data *);
void parse_tcapApplicationSubsystemTable(const char *, char *);
SNMPCallback store_tcapApplicationSubsystemTable;
void refresh_tcapApplicationSubsystemTable(int);
FindVarMethod var_tcapTransactionCopmTable;
struct tcapTransactionCopmTable_data *tcapTransactionCopmTable_create(void);
struct tcapTransactionCopmTable_data *tcapTransactionCopmTable_duplicate(struct tcapTransactionCopmTable_data *);
int tcapTransactionCopmTable_destroy(struct tcapTransactionCopmTable_data **);
int tcapTransactionCopmTable_add(struct tcapTransactionCopmTable_data *);
int tcapTransactionCopmTable_del(struct tcapTransactionCopmTable_data *);
void parse_tcapTransactionCopmTable(const char *, char *);
SNMPCallback store_tcapTransactionCopmTable;
void refresh_tcapTransactionCopmTable(int);
FindVarMethod var_tcapTransactionTable;
struct tcapTransactionTable_data *tcapTransactionTable_create(void);
struct tcapTransactionTable_data *tcapTransactionTable_duplicate(struct tcapTransactionTable_data *);
int tcapTransactionTable_destroy(struct tcapTransactionTable_data **);
int tcapTransactionTable_add(struct tcapTransactionTable_data *);
int tcapTransactionTable_del(struct tcapTransactionTable_data *);
void parse_tcapTransactionTable(const char *, char *);
SNMPCallback store_tcapTransactionTable;
void refresh_tcapTransactionTable(int);
FindVarMethod var_tcapDialogueTable;
struct tcapDialogueTable_data *tcapDialogueTable_create(void);
struct tcapDialogueTable_data *tcapDialogueTable_duplicate(struct tcapDialogueTable_data *);
int tcapDialogueTable_destroy(struct tcapDialogueTable_data **);
int tcapDialogueTable_add(struct tcapDialogueTable_data *);
int tcapDialogueTable_del(struct tcapDialogueTable_data *);
void parse_tcapDialogueTable(const char *, char *);
SNMPCallback store_tcapDialogueTable;
void refresh_tcapDialogueTable(int);
FindVarMethod var_tcapTcUserTable;
struct tcapTcUserTable_data *tcapTcUserTable_create(void);
struct tcapTcUserTable_data *tcapTcUserTable_duplicate(struct tcapTcUserTable_data *);
int tcapTcUserTable_destroy(struct tcapTcUserTable_data **);
int tcapTcUserTable_add(struct tcapTcUserTable_data *);
int tcapTcUserTable_del(struct tcapTcUserTable_data *);
void parse_tcapTcUserTable(const char *, char *);
SNMPCallback store_tcapTcUserTable;
void refresh_tcapTcUserTable(int);
FindVarMethod var_tcapApplicationProcessTable;
struct tcapApplicationProcessTable_data *tcapApplicationProcessTable_create(void);
struct tcapApplicationProcessTable_data *tcapApplicationProcessTable_duplicate(struct tcapApplicationProcessTable_data *);
int tcapApplicationProcessTable_destroy(struct tcapApplicationProcessTable_data **);
int tcapApplicationProcessTable_add(struct tcapApplicationProcessTable_data *);
int tcapApplicationProcessTable_del(struct tcapApplicationProcessTable_data *);
void parse_tcapApplicationProcessTable(const char *, char *);
SNMPCallback store_tcapApplicationProcessTable;
void refresh_tcapApplicationProcessTable(int);
FindVarMethod var_tcapSupportEntityNameTable;
struct tcapSupportEntityNameTable_data *tcapSupportEntityNameTable_create(void);
struct tcapSupportEntityNameTable_data *tcapSupportEntityNameTable_duplicate(struct tcapSupportEntityNameTable_data *);
int tcapSupportEntityNameTable_destroy(struct tcapSupportEntityNameTable_data **);
int tcapSupportEntityNameTable_add(struct tcapSupportEntityNameTable_data *);
int tcapSupportEntityNameTable_del(struct tcapSupportEntityNameTable_data *);
void parse_tcapSupportEntityNameTable(const char *, char *);
SNMPCallback store_tcapSupportEntityNameTable;
void refresh_tcapSupportEntityNameTable(int);
FindVarMethod var_tcapApplicationEntityTable;
struct tcapApplicationEntityTable_data *tcapApplicationEntityTable_create(void);
struct tcapApplicationEntityTable_data *tcapApplicationEntityTable_duplicate(struct tcapApplicationEntityTable_data *);
int tcapApplicationEntityTable_destroy(struct tcapApplicationEntityTable_data **);
int tcapApplicationEntityTable_add(struct tcapApplicationEntityTable_data *);
int tcapApplicationEntityTable_del(struct tcapApplicationEntityTable_data *);
void parse_tcapApplicationEntityTable(const char *, char *);
SNMPCallback store_tcapApplicationEntityTable;
void refresh_tcapApplicationEntityTable(int);
FindVarMethod var_tcapLocalSapNameTable;
struct tcapLocalSapNameTable_data *tcapLocalSapNameTable_create(void);
struct tcapLocalSapNameTable_data *tcapLocalSapNameTable_duplicate(struct tcapLocalSapNameTable_data *);
int tcapLocalSapNameTable_destroy(struct tcapLocalSapNameTable_data **);
int tcapLocalSapNameTable_add(struct tcapLocalSapNameTable_data *);
int tcapLocalSapNameTable_del(struct tcapLocalSapNameTable_data *);
void parse_tcapLocalSapNameTable(const char *, char *);
SNMPCallback store_tcapLocalSapNameTable;
void refresh_tcapLocalSapNameTable(int);
FindVarMethod var_tcapApplicationContextNameTable;
struct tcapApplicationContextNameTable_data *tcapApplicationContextNameTable_create(void);
struct tcapApplicationContextNameTable_data *tcapApplicationContextNameTable_duplicate(struct tcapApplicationContextNameTable_data *);
int tcapApplicationContextNameTable_destroy(struct tcapApplicationContextNameTable_data **);
int tcapApplicationContextNameTable_add(struct tcapApplicationContextNameTable_data *);
int tcapApplicationContextNameTable_del(struct tcapApplicationContextNameTable_data *);
void parse_tcapApplicationContextNameTable(const char *, char *);
SNMPCallback store_tcapApplicationContextNameTable;
void refresh_tcapApplicationContextNameTable(int);
FindVarMethod var_tcapAbstractSyntaxTable;
struct tcapAbstractSyntaxTable_data *tcapAbstractSyntaxTable_create(void);
struct tcapAbstractSyntaxTable_data *tcapAbstractSyntaxTable_duplicate(struct tcapAbstractSyntaxTable_data *);
int tcapAbstractSyntaxTable_destroy(struct tcapAbstractSyntaxTable_data **);
int tcapAbstractSyntaxTable_add(struct tcapAbstractSyntaxTable_data *);
int tcapAbstractSyntaxTable_del(struct tcapAbstractSyntaxTable_data *);
void parse_tcapAbstractSyntaxTable(const char *, char *);
SNMPCallback store_tcapAbstractSyntaxTable;
void refresh_tcapAbstractSyntaxTable(int);
FindVarMethod var_tcapTransferSyntaxTable;
struct tcapTransferSyntaxTable_data *tcapTransferSyntaxTable_create(void);
struct tcapTransferSyntaxTable_data *tcapTransferSyntaxTable_duplicate(struct tcapTransferSyntaxTable_data *);
int tcapTransferSyntaxTable_destroy(struct tcapTransferSyntaxTable_data **);
int tcapTransferSyntaxTable_add(struct tcapTransferSyntaxTable_data *);
int tcapTransferSyntaxTable_del(struct tcapTransferSyntaxTable_data *);
void parse_tcapTransferSyntaxTable(const char *, char *);
SNMPCallback store_tcapTransferSyntaxTable;
void refresh_tcapTransferSyntaxTable(int);

WriteMethod write_tcapApplicationSubsystemRowStatus;
WriteMethod write_tcapTransactionCopmRowStatus;
WriteMethod write_tcapTcUserInvocationOfPointer;
WriteMethod write_tcapApplicationProcessTitle;
WriteMethod write_tcapApplicationProcessRowStatus;
WriteMethod write_tcapSupportEntityNamePointer;
WriteMethod write_tcapSupportEntityRowStatus;
WriteMethod write_tcapApplicationEntityAsoTitle;
WriteMethod write_tcapApplicationEntityAsoQualifier;
WriteMethod write_tcapApplicationEntityPresFUsupport;
WriteMethod write_tcapApplicationEntityAbstrSyntaxSupport;
WriteMethod write_tcapApplicationEntityTransfSynstaxSupport;
WriteMethod write_tcapApplicationEntityPresSelectorValue;
WriteMethod write_tcapApplicationEntitySessProtVerSupport;
WriteMethod write_tcapApplicationEntitySessFUsupport;
WriteMethod write_tcapApplicationEntitySessOptSupport;
WriteMethod write_tcapApplicationEntitySessionSelectorValue;
WriteMethod write_tcapApplicationEntityRowStatus;
WriteMethod write_tcapLocalSapNamePointer;
WriteMethod write_tcapLocalSapNameRowStatus;
WriteMethod write_tcapApplicationContextName;
WriteMethod write_tcapApplicationContextNumber;
WriteMethod write_tcapApplicationContextRowStatus;
WriteMethod write_tcapAbstractSyntaxName;
WriteMethod write_tcapAbstractSyntaxRowStatus;
WriteMethod write_tcapTransferSyntaxName;
WriteMethod write_tcapTransferSyntaxRowStatus;
#endif				/* __LOCAL_TCAPMIB_H__ */
