/*****************************************************************************

 @(#) src/snmp/mtpOmMIB.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2019  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_MTPOMMIB_H__
#define __LOCAL_MTPOMMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct mtpOmMIB_data {
	struct mtpOmMIB_data *mtpOmMIB_old;
	uint mtpOmMIB_rsvs;
	uint mtpOmMIB_tsts;
	uint mtpOmMIB_sets;
	uint mtpOmMIB_request;
};
struct mtpOmHandledMSUsOpcDpcSioTable_data {
	struct mtpOmHandledMSUsOpcDpcSioTable_data *mtpOmHandledMSUsOpcDpcSioTable_old;
	uint mtpOmHandledMSUsOpcDpcSioTable_rsvs;
	uint mtpOmHandledMSUsOpcDpcSioTable_tsts;
	uint mtpOmHandledMSUsOpcDpcSioTable_sets;
	uint mtpOmHandledMSUsOpcDpcSioTable_request;
	uint mtpOmHandledMSUsOpcDpcSioTable_refs;
	uint mtpOmHandledMSUsOpcDpcSioTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmOpc;		/* NoAccess */
	size_t mtpOmOpcLen;
	uint8_t *mtpOmDpc;		/* NoAccess */
	size_t mtpOmDpcLen;
	uint8_t *mtpOmSio;		/* NoAccess */
	size_t mtpOmSioLen;
	long mtpOmHandledMSUsOpcDpcSio;	/* ReadOnly */
	long mtpOmHandledMSUsOpcDpcSioRowStatus;	/* Create */
};
struct mtpOmHandledOctetsOpcDpcSioTable_data {
	struct mtpOmHandledOctetsOpcDpcSioTable_data *mtpOmHandledOctetsOpcDpcSioTable_old;
	uint mtpOmHandledOctetsOpcDpcSioTable_rsvs;
	uint mtpOmHandledOctetsOpcDpcSioTable_tsts;
	uint mtpOmHandledOctetsOpcDpcSioTable_sets;
	uint mtpOmHandledOctetsOpcDpcSioTable_request;
	uint mtpOmHandledOctetsOpcDpcSioTable_refs;
	uint mtpOmHandledOctetsOpcDpcSioTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmOpc;		/* NoAccess */
	size_t mtpOmOpcLen;
	uint8_t *mtpOmDpc;		/* NoAccess */
	size_t mtpOmDpcLen;
	uint8_t *mtpOmSio;		/* NoAccess */
	size_t mtpOmSioLen;
	long mtpOmHandledOctetsOpcDpcSioInterval;	/* Create */
	long mtpOmHandledOctetsOpcDpcSio;	/* ReadOnly */
	long mtpOmHandledOctetsOpcDpcSioRowStatus;	/* Create */
};
struct mtpOmHandledOctetsSIOTable_data {
	struct mtpOmHandledOctetsSIOTable_data *mtpOmHandledOctetsSIOTable_old;
	uint mtpOmHandledOctetsSIOTable_rsvs;
	uint mtpOmHandledOctetsSIOTable_tsts;
	uint mtpOmHandledOctetsSIOTable_sets;
	uint mtpOmHandledOctetsSIOTable_request;
	uint mtpOmHandledOctetsSIOTable_refs;
	uint mtpOmHandledOctetsSIOTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmSio;		/* NoAccess */
	size_t mtpOmSioLen;
	long mtpOmHandledOctetsSIO;	/* ReadOnly */
};
struct mtpOmOblSpUtilizationTable_data {
	struct mtpOmOblSpUtilizationTable_data *mtpOmOblSpUtilizationTable_old;
	uint mtpOmOblSpUtilizationTable_rsvs;
	uint mtpOmOblSpUtilizationTable_tsts;
	uint mtpOmOblSpUtilizationTable_sets;
	uint mtpOmOblSpUtilizationTable_request;
	uint mtpOmOblSpUtilizationTable_refs;
	uint mtpOmOblSpUtilizationTable_id;
	ulong mtpSpId;			/* NoAccess */
	long mtpOmAdjacentInaccessibleDuration;	/* ReadOnly */
};
struct mtpOmAllSpUtilizationTable_data {
	struct mtpOmAllSpUtilizationTable_data *mtpOmAllSpUtilizationTable_old;
	uint mtpOmAllSpUtilizationTable_rsvs;
	uint mtpOmAllSpUtilizationTable_tsts;
	uint mtpOmAllSpUtilizationTable_sets;
	uint mtpOmAllSpUtilizationTable_request;
	uint mtpOmAllSpUtilizationTable_refs;
	uint mtpOmAllSpUtilizationTable_id;
	ulong mtpSpId;			/* NoAccess */
	long mtpOmAdjacentInaccessibleEvents;	/* ReadOnly */
	long mtpOmAllSpUtilizationRowStatus;	/* Create */
};
struct mtpOmReceivedOctetsOPCTable_data {
	struct mtpOmReceivedOctetsOPCTable_data *mtpOmReceivedOctetsOPCTable_old;
	uint mtpOmReceivedOctetsOPCTable_rsvs;
	uint mtpOmReceivedOctetsOPCTable_tsts;
	uint mtpOmReceivedOctetsOPCTable_sets;
	uint mtpOmReceivedOctetsOPCTable_request;
	uint mtpOmReceivedOctetsOPCTable_refs;
	uint mtpOmReceivedOctetsOPCTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmOpc;		/* NoAccess */
	size_t mtpOmOpcLen;
	long mtpOmReceivedOctetsOPCInterval;	/* Create */
	long mtpOmReceivedOctetsOPC;	/* ReadOnly */
	long mtpOmReceivedOctetsOPCRowStatus;	/* Create */
};
struct mtpOmReceivedOctetsOpcSioTable_data {
	struct mtpOmReceivedOctetsOpcSioTable_data *mtpOmReceivedOctetsOpcSioTable_old;
	uint mtpOmReceivedOctetsOpcSioTable_rsvs;
	uint mtpOmReceivedOctetsOpcSioTable_tsts;
	uint mtpOmReceivedOctetsOpcSioTable_sets;
	uint mtpOmReceivedOctetsOpcSioTable_request;
	uint mtpOmReceivedOctetsOpcSioTable_refs;
	uint mtpOmReceivedOctetsOpcSioTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmOpc;		/* NoAccess */
	size_t mtpOmOpcLen;
	uint8_t *mtpOmSio;		/* NoAccess */
	size_t mtpOmSioLen;
	long mtpOmReceivedOctetsOpcSioInterval;	/* Create */
	long mtpOmReceivedOctetsOpcSio;	/* ReadOnly */
	long mtpOmReceivedOctetsOpcSioRowStatus;	/* Create */
};
struct mtpOmSpDataTable_data {
	struct mtpOmSpDataTable_data *mtpOmSpDataTable_old;
	uint mtpOmSpDataTable_rsvs;
	uint mtpOmSpDataTable_tsts;
	uint mtpOmSpDataTable_sets;
	uint mtpOmSpDataTable_request;
	uint mtpOmSpDataTable_refs;
	uint mtpOmSpDataTable_id;
	ulong mtpSpId;			/* NoAccess */
	long mtpOmUserPart;		/* NoAccess */
	long mtpOmCongestionLevel;	/* NoAccess */
	long mtpOmSpDiscardedMSUs;	/* ReadOnly */
	long mtpOmSpTransmittedUPUnavailable;	/* ReadOnly */
	long mtpOmSpReceivedUPUnavailable;	/* ReadOnly */
	long mtpOmSpReceivedTFC;	/* ReadOnly */
	long mtpOmSpReceivedTFCLevel0;	/* ReadOnly */
	long mtpOmSpReceivedTFCLevel1;	/* ReadOnly */
	long mtpOmSpReceivedTFCLevel2;	/* ReadOnly */
	long mtpOmSpReceivedTFCLevel3;	/* ReadOnly */
};
struct mtpOmTransmittedOctetsDPCTable_data {
	struct mtpOmTransmittedOctetsDPCTable_data *mtpOmTransmittedOctetsDPCTable_old;
	uint mtpOmTransmittedOctetsDPCTable_rsvs;
	uint mtpOmTransmittedOctetsDPCTable_tsts;
	uint mtpOmTransmittedOctetsDPCTable_sets;
	uint mtpOmTransmittedOctetsDPCTable_request;
	uint mtpOmTransmittedOctetsDPCTable_refs;
	uint mtpOmTransmittedOctetsDPCTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmDpc;		/* NoAccess */
	size_t mtpOmDpcLen;
	long mtpOmTransmittedOctetsDPC;	/* ReadOnly */
	long mtpOmTransmittedOctetsDPCRowStatus;	/* Create */
};
struct mtpOmTransmittedOctetsDpcSioTable_data {
	struct mtpOmTransmittedOctetsDpcSioTable_data *mtpOmTransmittedOctetsDpcSioTable_old;
	uint mtpOmTransmittedOctetsDpcSioTable_rsvs;
	uint mtpOmTransmittedOctetsDpcSioTable_tsts;
	uint mtpOmTransmittedOctetsDpcSioTable_sets;
	uint mtpOmTransmittedOctetsDpcSioTable_request;
	uint mtpOmTransmittedOctetsDpcSioTable_refs;
	uint mtpOmTransmittedOctetsDpcSioTable_id;
	ulong mtpSpId;			/* NoAccess */
	uint8_t *mtpOmDpc;		/* NoAccess */
	size_t mtpOmDpcLen;
	uint8_t *mtpOmSio;		/* NoAccess */
	size_t mtpOmSioLen;
	long mtpOmTransmittedOctetsDpcSio;	/* ReadOnly */
	long mtpOmTransmittedOctetsDpcSioRowStatus;	/* Create */
};
struct mtpOmSignRsInformationTable_data {
	struct mtpOmSignRsInformationTable_data *mtpOmSignRsInformationTable_old;
	uint mtpOmSignRsInformationTable_rsvs;
	uint mtpOmSignRsInformationTable_tsts;
	uint mtpOmSignRsInformationTable_sets;
	uint mtpOmSignRsInformationTable_request;
	uint mtpOmSignRsInformationTable_refs;
	uint mtpOmSignRsInformationTable_id;
	ulong mtpRsId;			/* NoAccess */
	long mtpOmRouteSetUnavailable;	/* ReadOnly */
	long mtpOmRouteSetUnavailableDuration;	/* ReadOnly */
};
struct mtpOmSlsDurationTable_data {
	struct mtpOmSlsDurationTable_data *mtpOmSlsDurationTable_old;
	uint mtpOmSlsDurationTable_rsvs;
	uint mtpOmSlsDurationTable_tsts;
	uint mtpOmSlsDurationTable_sets;
	uint mtpOmSlsDurationTable_request;
	uint mtpOmSlsDurationTable_refs;
	uint mtpOmSlsDurationTable_id;
	ulong mtpLsId;			/* NoAccess */
	long mtpOmSlsUnavailable;	/* ReadOnly */
};
struct mtpOmAll5And30MinSlDurationTable_data {
	struct mtpOmAll5And30MinSlDurationTable_data *mtpOmAll5And30MinSlDurationTable_old;
	uint mtpOmAll5And30MinSlDurationTable_rsvs;
	uint mtpOmAll5And30MinSlDurationTable_tsts;
	uint mtpOmAll5And30MinSlDurationTable_sets;
	uint mtpOmAll5And30MinSlDurationTable_request;
	uint mtpOmAll5And30MinSlDurationTable_refs;
	uint mtpOmAll5And30MinSlDurationTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmAll5And30MinSlDurationInterval;	/* Create */
	long mtpOmLocalMgntInhibit;	/* ReadOnly */
	long mtpOmLocalMgntUninhibit;	/* ReadOnly */
	long mtpOmLocalBusy;		/* ReadOnly */
	long mtpOmAll5And30MinSlDurationRowStatus;	/* Create */
};
struct mtpOmOblSlDurationTable_data {
	struct mtpOmOblSlDurationTable_data *mtpOmOblSlDurationTable_old;
	uint mtpOmOblSlDurationTable_rsvs;
	uint mtpOmOblSlDurationTable_tsts;
	uint mtpOmOblSlDurationTable_sets;
	uint mtpOmOblSlDurationTable_request;
	uint mtpOmOblSlDurationTable_refs;
	uint mtpOmOblSlDurationTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmSlUnavailabilityDuration;	/* ReadOnly */
	long mtpOmSlInServiceDuration;	/* ReadOnly */
};
struct mtpOmAll30MinSlDurationTable_data {
	struct mtpOmAll30MinSlDurationTable_data *mtpOmAll30MinSlDurationTable_old;
	uint mtpOmAll30MinSlDurationTable_rsvs;
	uint mtpOmAll30MinSlDurationTable_tsts;
	uint mtpOmAll30MinSlDurationTable_sets;
	uint mtpOmAll30MinSlDurationTable_request;
	uint mtpOmAll30MinSlDurationTable_refs;
	uint mtpOmAll30MinSlDurationTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmAll30MinSlDurationInterval;	/* Create */
	long mtpOmSlLocalInhibition;	/* ReadOnly */
	long mtpOmSlRemoteInhibition;	/* ReadOnly */
	long mtpOmSlFailed;		/* ReadOnly */
	long mtpOmSlRemoteProcOutage;	/* ReadOnly */
	long mtpOmAll30MinSlDurationRowStatus;	/* Create */
};
struct mtpOmOblSlUtilizationTable_data {
	struct mtpOmOblSlUtilizationTable_data *mtpOmOblSlUtilizationTable_old;
	uint mtpOmOblSlUtilizationTable_rsvs;
	uint mtpOmOblSlUtilizationTable_tsts;
	uint mtpOmOblSlUtilizationTable_sets;
	uint mtpOmOblSlUtilizationTable_request;
	uint mtpOmOblSlUtilizationTable_refs;
	uint mtpOmOblSlUtilizationTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmSlSignUnitsReceived;	/* ReadOnly */
	long mtpOmSlTransmittedOctetsSIFSIO;	/* ReadOnly */
	long mtpOmSlReceivedOctetsSIFSIO;	/* ReadOnly */
	long mtpOmSlDiscardedMSUs;	/* ReadOnly */
};
struct mtpOmAllSlUtilizationTable_data {
	struct mtpOmAllSlUtilizationTable_data *mtpOmAllSlUtilizationTable_old;
	uint mtpOmAllSlUtilizationTable_rsvs;
	uint mtpOmAllSlUtilizationTable_tsts;
	uint mtpOmAllSlUtilizationTable_sets;
	uint mtpOmAllSlUtilizationTable_request;
	uint mtpOmAllSlUtilizationTable_refs;
	uint mtpOmAllSlUtilizationTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmSlAlignment;		/* ReadOnly */
	long mtpOmSlNegAckReceived;	/* ReadOnly */
	long mtpOmSlRetransmittedOctets;	/* ReadOnly */
	long mtpOmSlTransmittedMSUs;	/* ReadOnly */
	long mtpOmSlReceivedMSUs;	/* ReadOnly */
	long mtpOmAllSlUtilizationRowStatus;	/* Create */
};
struct mtpOmSlCongestionTable_data {
	struct mtpOmSlCongestionTable_data *mtpOmSlCongestionTable_old;
	uint mtpOmSlCongestionTable_rsvs;
	uint mtpOmSlCongestionTable_tsts;
	uint mtpOmSlCongestionTable_sets;
	uint mtpOmSlCongestionTable_request;
	uint mtpOmSlCongestionTable_refs;
	uint mtpOmSlCongestionTable_id;
	ulong mtpSlId;			/* NoAccess */
	long mtpOmCongestionLevel;	/* NoAccess */
	long mtpOmSlCongestionFirst;	/* Create */
	long mtpOmSlCongestionInterval;	/* Create */
	long mtpOmSlCongestionStarts;	/* ReadOnly */
	long mtpOmSlCongestionStops;	/* ReadOnly */
	long mtpOmSlCongestionEventsMSULoss;	/* ReadOnly */
	long mtpOmSlCongestionRowStatus;	/* Create */
};

/* storage declarations */
extern struct mtpOmMIB_data *mtpOmMIBStorage;
extern struct header_complex_index *mtpOmHandledMSUsOpcDpcSioTableStorage;
extern struct header_complex_index *mtpOmHandledOctetsOpcDpcSioTableStorage;
extern struct header_complex_index *mtpOmHandledOctetsSIOTableStorage;
extern struct header_complex_index *mtpOmOblSpUtilizationTableStorage;
extern struct header_complex_index *mtpOmAllSpUtilizationTableStorage;
extern struct header_complex_index *mtpOmReceivedOctetsOPCTableStorage;
extern struct header_complex_index *mtpOmReceivedOctetsOpcSioTableStorage;
extern struct header_complex_index *mtpOmSpDataTableStorage;
extern struct header_complex_index *mtpOmTransmittedOctetsDPCTableStorage;
extern struct header_complex_index *mtpOmTransmittedOctetsDpcSioTableStorage;
extern struct header_complex_index *mtpOmSignRsInformationTableStorage;
extern struct header_complex_index *mtpOmSlsDurationTableStorage;
extern struct header_complex_index *mtpOmAll5And30MinSlDurationTableStorage;
extern struct header_complex_index *mtpOmOblSlDurationTableStorage;
extern struct header_complex_index *mtpOmAll30MinSlDurationTableStorage;
extern struct header_complex_index *mtpOmOblSlUtilizationTableStorage;
extern struct header_complex_index *mtpOmAllSlUtilizationTableStorage;
extern struct header_complex_index *mtpOmSlCongestionTableStorage;

/* enum definitions from the covered mib sections */

#define MTPOMUSERPART_SNMM                       0
#define MTPOMUSERPART_SNTM                       1
#define MTPOMUSERPART_SNSM                       2
#define MTPOMUSERPART_SCCP                       3
#define MTPOMUSERPART_TUP                        4
#define MTPOMUSERPART_ISUP                       5
#define MTPOMUSERPART_DUP1                       6
#define MTPOMUSERPART_DUP2                       7
#define MTPOMUSERPART_MTUP                       8
#define MTPOMUSERPART_BISUP                      9
#define MTPOMUSERPART_SIUP                       10
#define MTPOMUSERPART_SPNEUP                     11
#define MTPOMUSERPART_STC                        12
#define MTPOMUSERPART_USER13                     13
#define MTPOMUSERPART_USER14                     14
#define MTPOMUSERPART_USER15                     15

#define MTPOMCONGESTIONLEVEL_NONE                0
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL1    1
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL2    2
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL3    3

#define MTPOMCONGESTIONLEVEL_NONE                0
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL1    1
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL2    2
#define MTPOMCONGESTIONLEVEL_CONGESTIONLEVEL3    3

#define MTPOMSLCONGESTIONFIRST_TRUE              1
#define MTPOMSLCONGESTIONFIRST_FALSE             2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid mtpOmGeneralCompliance_oid[13];
extern oid mtpOmObjectGroup_oid[13];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_mtpOmMIB(void);
void deinit_mtpOmMIB(void);
int term_mtpOmMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_mtpOmMIB;
struct mtpOmMIB_data *mtpOmMIB_create(void);
struct mtpOmMIB_data *mtpOmMIB_duplicate(struct mtpOmMIB_data *);
int mtpOmMIB_destroy(struct mtpOmMIB_data **);
int mtpOmMIB_add(struct mtpOmMIB_data *);
void parse_mtpOmMIB(const char *, char *);
SNMPCallback store_mtpOmMIB;
void refresh_mtpOmMIB(int);
FindVarMethod var_mtpOmHandledMSUsOpcDpcSioTable;
struct mtpOmHandledMSUsOpcDpcSioTable_data *mtpOmHandledMSUsOpcDpcSioTable_create(void);
struct mtpOmHandledMSUsOpcDpcSioTable_data *mtpOmHandledMSUsOpcDpcSioTable_duplicate(struct mtpOmHandledMSUsOpcDpcSioTable_data *);
int mtpOmHandledMSUsOpcDpcSioTable_destroy(struct mtpOmHandledMSUsOpcDpcSioTable_data **);
int mtpOmHandledMSUsOpcDpcSioTable_add(struct mtpOmHandledMSUsOpcDpcSioTable_data *);
int mtpOmHandledMSUsOpcDpcSioTable_del(struct mtpOmHandledMSUsOpcDpcSioTable_data *);
void parse_mtpOmHandledMSUsOpcDpcSioTable(const char *, char *);
SNMPCallback store_mtpOmHandledMSUsOpcDpcSioTable;
void refresh_mtpOmHandledMSUsOpcDpcSioTable(int);
FindVarMethod var_mtpOmHandledOctetsOpcDpcSioTable;
struct mtpOmHandledOctetsOpcDpcSioTable_data *mtpOmHandledOctetsOpcDpcSioTable_create(void);
struct mtpOmHandledOctetsOpcDpcSioTable_data *mtpOmHandledOctetsOpcDpcSioTable_duplicate(struct mtpOmHandledOctetsOpcDpcSioTable_data *);
int mtpOmHandledOctetsOpcDpcSioTable_destroy(struct mtpOmHandledOctetsOpcDpcSioTable_data **);
int mtpOmHandledOctetsOpcDpcSioTable_add(struct mtpOmHandledOctetsOpcDpcSioTable_data *);
int mtpOmHandledOctetsOpcDpcSioTable_del(struct mtpOmHandledOctetsOpcDpcSioTable_data *);
void parse_mtpOmHandledOctetsOpcDpcSioTable(const char *, char *);
SNMPCallback store_mtpOmHandledOctetsOpcDpcSioTable;
void refresh_mtpOmHandledOctetsOpcDpcSioTable(int);
FindVarMethod var_mtpOmHandledOctetsSIOTable;
struct mtpOmHandledOctetsSIOTable_data *mtpOmHandledOctetsSIOTable_create(void);
struct mtpOmHandledOctetsSIOTable_data *mtpOmHandledOctetsSIOTable_duplicate(struct mtpOmHandledOctetsSIOTable_data *);
int mtpOmHandledOctetsSIOTable_destroy(struct mtpOmHandledOctetsSIOTable_data **);
int mtpOmHandledOctetsSIOTable_add(struct mtpOmHandledOctetsSIOTable_data *);
int mtpOmHandledOctetsSIOTable_del(struct mtpOmHandledOctetsSIOTable_data *);
void parse_mtpOmHandledOctetsSIOTable(const char *, char *);
SNMPCallback store_mtpOmHandledOctetsSIOTable;
void refresh_mtpOmHandledOctetsSIOTable(int);
FindVarMethod var_mtpOmOblSpUtilizationTable;
struct mtpOmOblSpUtilizationTable_data *mtpOmOblSpUtilizationTable_create(void);
struct mtpOmOblSpUtilizationTable_data *mtpOmOblSpUtilizationTable_duplicate(struct mtpOmOblSpUtilizationTable_data *);
int mtpOmOblSpUtilizationTable_destroy(struct mtpOmOblSpUtilizationTable_data **);
int mtpOmOblSpUtilizationTable_add(struct mtpOmOblSpUtilizationTable_data *);
int mtpOmOblSpUtilizationTable_del(struct mtpOmOblSpUtilizationTable_data *);
void parse_mtpOmOblSpUtilizationTable(const char *, char *);
SNMPCallback store_mtpOmOblSpUtilizationTable;
void refresh_mtpOmOblSpUtilizationTable(int);
FindVarMethod var_mtpOmAllSpUtilizationTable;
struct mtpOmAllSpUtilizationTable_data *mtpOmAllSpUtilizationTable_create(void);
struct mtpOmAllSpUtilizationTable_data *mtpOmAllSpUtilizationTable_duplicate(struct mtpOmAllSpUtilizationTable_data *);
int mtpOmAllSpUtilizationTable_destroy(struct mtpOmAllSpUtilizationTable_data **);
int mtpOmAllSpUtilizationTable_add(struct mtpOmAllSpUtilizationTable_data *);
int mtpOmAllSpUtilizationTable_del(struct mtpOmAllSpUtilizationTable_data *);
void parse_mtpOmAllSpUtilizationTable(const char *, char *);
SNMPCallback store_mtpOmAllSpUtilizationTable;
void refresh_mtpOmAllSpUtilizationTable(int);
FindVarMethod var_mtpOmReceivedOctetsOPCTable;
struct mtpOmReceivedOctetsOPCTable_data *mtpOmReceivedOctetsOPCTable_create(void);
struct mtpOmReceivedOctetsOPCTable_data *mtpOmReceivedOctetsOPCTable_duplicate(struct mtpOmReceivedOctetsOPCTable_data *);
int mtpOmReceivedOctetsOPCTable_destroy(struct mtpOmReceivedOctetsOPCTable_data **);
int mtpOmReceivedOctetsOPCTable_add(struct mtpOmReceivedOctetsOPCTable_data *);
int mtpOmReceivedOctetsOPCTable_del(struct mtpOmReceivedOctetsOPCTable_data *);
void parse_mtpOmReceivedOctetsOPCTable(const char *, char *);
SNMPCallback store_mtpOmReceivedOctetsOPCTable;
void refresh_mtpOmReceivedOctetsOPCTable(int);
FindVarMethod var_mtpOmReceivedOctetsOpcSioTable;
struct mtpOmReceivedOctetsOpcSioTable_data *mtpOmReceivedOctetsOpcSioTable_create(void);
struct mtpOmReceivedOctetsOpcSioTable_data *mtpOmReceivedOctetsOpcSioTable_duplicate(struct mtpOmReceivedOctetsOpcSioTable_data *);
int mtpOmReceivedOctetsOpcSioTable_destroy(struct mtpOmReceivedOctetsOpcSioTable_data **);
int mtpOmReceivedOctetsOpcSioTable_add(struct mtpOmReceivedOctetsOpcSioTable_data *);
int mtpOmReceivedOctetsOpcSioTable_del(struct mtpOmReceivedOctetsOpcSioTable_data *);
void parse_mtpOmReceivedOctetsOpcSioTable(const char *, char *);
SNMPCallback store_mtpOmReceivedOctetsOpcSioTable;
void refresh_mtpOmReceivedOctetsOpcSioTable(int);
FindVarMethod var_mtpOmSpDataTable;
struct mtpOmSpDataTable_data *mtpOmSpDataTable_create(void);
struct mtpOmSpDataTable_data *mtpOmSpDataTable_duplicate(struct mtpOmSpDataTable_data *);
int mtpOmSpDataTable_destroy(struct mtpOmSpDataTable_data **);
int mtpOmSpDataTable_add(struct mtpOmSpDataTable_data *);
int mtpOmSpDataTable_del(struct mtpOmSpDataTable_data *);
void parse_mtpOmSpDataTable(const char *, char *);
SNMPCallback store_mtpOmSpDataTable;
void refresh_mtpOmSpDataTable(int);
FindVarMethod var_mtpOmTransmittedOctetsDPCTable;
struct mtpOmTransmittedOctetsDPCTable_data *mtpOmTransmittedOctetsDPCTable_create(void);
struct mtpOmTransmittedOctetsDPCTable_data *mtpOmTransmittedOctetsDPCTable_duplicate(struct mtpOmTransmittedOctetsDPCTable_data *);
int mtpOmTransmittedOctetsDPCTable_destroy(struct mtpOmTransmittedOctetsDPCTable_data **);
int mtpOmTransmittedOctetsDPCTable_add(struct mtpOmTransmittedOctetsDPCTable_data *);
int mtpOmTransmittedOctetsDPCTable_del(struct mtpOmTransmittedOctetsDPCTable_data *);
void parse_mtpOmTransmittedOctetsDPCTable(const char *, char *);
SNMPCallback store_mtpOmTransmittedOctetsDPCTable;
void refresh_mtpOmTransmittedOctetsDPCTable(int);
FindVarMethod var_mtpOmTransmittedOctetsDpcSioTable;
struct mtpOmTransmittedOctetsDpcSioTable_data *mtpOmTransmittedOctetsDpcSioTable_create(void);
struct mtpOmTransmittedOctetsDpcSioTable_data *mtpOmTransmittedOctetsDpcSioTable_duplicate(struct mtpOmTransmittedOctetsDpcSioTable_data *);
int mtpOmTransmittedOctetsDpcSioTable_destroy(struct mtpOmTransmittedOctetsDpcSioTable_data **);
int mtpOmTransmittedOctetsDpcSioTable_add(struct mtpOmTransmittedOctetsDpcSioTable_data *);
int mtpOmTransmittedOctetsDpcSioTable_del(struct mtpOmTransmittedOctetsDpcSioTable_data *);
void parse_mtpOmTransmittedOctetsDpcSioTable(const char *, char *);
SNMPCallback store_mtpOmTransmittedOctetsDpcSioTable;
void refresh_mtpOmTransmittedOctetsDpcSioTable(int);
FindVarMethod var_mtpOmSignRsInformationTable;
struct mtpOmSignRsInformationTable_data *mtpOmSignRsInformationTable_create(void);
struct mtpOmSignRsInformationTable_data *mtpOmSignRsInformationTable_duplicate(struct mtpOmSignRsInformationTable_data *);
int mtpOmSignRsInformationTable_destroy(struct mtpOmSignRsInformationTable_data **);
int mtpOmSignRsInformationTable_add(struct mtpOmSignRsInformationTable_data *);
int mtpOmSignRsInformationTable_del(struct mtpOmSignRsInformationTable_data *);
void parse_mtpOmSignRsInformationTable(const char *, char *);
SNMPCallback store_mtpOmSignRsInformationTable;
void refresh_mtpOmSignRsInformationTable(int);
FindVarMethod var_mtpOmSlsDurationTable;
struct mtpOmSlsDurationTable_data *mtpOmSlsDurationTable_create(void);
struct mtpOmSlsDurationTable_data *mtpOmSlsDurationTable_duplicate(struct mtpOmSlsDurationTable_data *);
int mtpOmSlsDurationTable_destroy(struct mtpOmSlsDurationTable_data **);
int mtpOmSlsDurationTable_add(struct mtpOmSlsDurationTable_data *);
int mtpOmSlsDurationTable_del(struct mtpOmSlsDurationTable_data *);
void parse_mtpOmSlsDurationTable(const char *, char *);
SNMPCallback store_mtpOmSlsDurationTable;
void refresh_mtpOmSlsDurationTable(int);
FindVarMethod var_mtpOmAll5And30MinSlDurationTable;
struct mtpOmAll5And30MinSlDurationTable_data *mtpOmAll5And30MinSlDurationTable_create(void);
struct mtpOmAll5And30MinSlDurationTable_data *mtpOmAll5And30MinSlDurationTable_duplicate(struct mtpOmAll5And30MinSlDurationTable_data *);
int mtpOmAll5And30MinSlDurationTable_destroy(struct mtpOmAll5And30MinSlDurationTable_data **);
int mtpOmAll5And30MinSlDurationTable_add(struct mtpOmAll5And30MinSlDurationTable_data *);
int mtpOmAll5And30MinSlDurationTable_del(struct mtpOmAll5And30MinSlDurationTable_data *);
void parse_mtpOmAll5And30MinSlDurationTable(const char *, char *);
SNMPCallback store_mtpOmAll5And30MinSlDurationTable;
void refresh_mtpOmAll5And30MinSlDurationTable(int);
FindVarMethod var_mtpOmOblSlDurationTable;
struct mtpOmOblSlDurationTable_data *mtpOmOblSlDurationTable_create(void);
struct mtpOmOblSlDurationTable_data *mtpOmOblSlDurationTable_duplicate(struct mtpOmOblSlDurationTable_data *);
int mtpOmOblSlDurationTable_destroy(struct mtpOmOblSlDurationTable_data **);
int mtpOmOblSlDurationTable_add(struct mtpOmOblSlDurationTable_data *);
int mtpOmOblSlDurationTable_del(struct mtpOmOblSlDurationTable_data *);
void parse_mtpOmOblSlDurationTable(const char *, char *);
SNMPCallback store_mtpOmOblSlDurationTable;
void refresh_mtpOmOblSlDurationTable(int);
FindVarMethod var_mtpOmAll30MinSlDurationTable;
struct mtpOmAll30MinSlDurationTable_data *mtpOmAll30MinSlDurationTable_create(void);
struct mtpOmAll30MinSlDurationTable_data *mtpOmAll30MinSlDurationTable_duplicate(struct mtpOmAll30MinSlDurationTable_data *);
int mtpOmAll30MinSlDurationTable_destroy(struct mtpOmAll30MinSlDurationTable_data **);
int mtpOmAll30MinSlDurationTable_add(struct mtpOmAll30MinSlDurationTable_data *);
int mtpOmAll30MinSlDurationTable_del(struct mtpOmAll30MinSlDurationTable_data *);
void parse_mtpOmAll30MinSlDurationTable(const char *, char *);
SNMPCallback store_mtpOmAll30MinSlDurationTable;
void refresh_mtpOmAll30MinSlDurationTable(int);
FindVarMethod var_mtpOmOblSlUtilizationTable;
struct mtpOmOblSlUtilizationTable_data *mtpOmOblSlUtilizationTable_create(void);
struct mtpOmOblSlUtilizationTable_data *mtpOmOblSlUtilizationTable_duplicate(struct mtpOmOblSlUtilizationTable_data *);
int mtpOmOblSlUtilizationTable_destroy(struct mtpOmOblSlUtilizationTable_data **);
int mtpOmOblSlUtilizationTable_add(struct mtpOmOblSlUtilizationTable_data *);
int mtpOmOblSlUtilizationTable_del(struct mtpOmOblSlUtilizationTable_data *);
void parse_mtpOmOblSlUtilizationTable(const char *, char *);
SNMPCallback store_mtpOmOblSlUtilizationTable;
void refresh_mtpOmOblSlUtilizationTable(int);
FindVarMethod var_mtpOmAllSlUtilizationTable;
struct mtpOmAllSlUtilizationTable_data *mtpOmAllSlUtilizationTable_create(void);
struct mtpOmAllSlUtilizationTable_data *mtpOmAllSlUtilizationTable_duplicate(struct mtpOmAllSlUtilizationTable_data *);
int mtpOmAllSlUtilizationTable_destroy(struct mtpOmAllSlUtilizationTable_data **);
int mtpOmAllSlUtilizationTable_add(struct mtpOmAllSlUtilizationTable_data *);
int mtpOmAllSlUtilizationTable_del(struct mtpOmAllSlUtilizationTable_data *);
void parse_mtpOmAllSlUtilizationTable(const char *, char *);
SNMPCallback store_mtpOmAllSlUtilizationTable;
void refresh_mtpOmAllSlUtilizationTable(int);
FindVarMethod var_mtpOmSlCongestionTable;
struct mtpOmSlCongestionTable_data *mtpOmSlCongestionTable_create(void);
struct mtpOmSlCongestionTable_data *mtpOmSlCongestionTable_duplicate(struct mtpOmSlCongestionTable_data *);
int mtpOmSlCongestionTable_destroy(struct mtpOmSlCongestionTable_data **);
int mtpOmSlCongestionTable_add(struct mtpOmSlCongestionTable_data *);
int mtpOmSlCongestionTable_del(struct mtpOmSlCongestionTable_data *);
void parse_mtpOmSlCongestionTable(const char *, char *);
SNMPCallback store_mtpOmSlCongestionTable;
void refresh_mtpOmSlCongestionTable(int);

WriteMethod write_mtpOmHandledMSUsOpcDpcSioRowStatus;
WriteMethod write_mtpOmHandledOctetsOpcDpcSioInterval;
WriteMethod write_mtpOmHandledOctetsOpcDpcSioRowStatus;
WriteMethod write_mtpOmAllSpUtilizationRowStatus;
WriteMethod write_mtpOmReceivedOctetsOPCInterval;
WriteMethod write_mtpOmReceivedOctetsOPCRowStatus;
WriteMethod write_mtpOmReceivedOctetsOpcSioInterval;
WriteMethod write_mtpOmReceivedOctetsOpcSioRowStatus;
WriteMethod write_mtpOmTransmittedOctetsDPCRowStatus;
WriteMethod write_mtpOmTransmittedOctetsDpcSioRowStatus;
WriteMethod write_mtpOmAll5And30MinSlDurationInterval;
WriteMethod write_mtpOmAll5And30MinSlDurationRowStatus;
WriteMethod write_mtpOmAll30MinSlDurationInterval;
WriteMethod write_mtpOmAll30MinSlDurationRowStatus;
WriteMethod write_mtpOmAllSlUtilizationRowStatus;
WriteMethod write_mtpOmSlCongestionFirst;
WriteMethod write_mtpOmSlCongestionInterval;
WriteMethod write_mtpOmSlCongestionRowStatus;
#endif				/* __LOCAL_MTPOMMIB_H__ */
