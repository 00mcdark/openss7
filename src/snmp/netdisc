#!/usr/bin/perl

use strict;
use warnings;
use threads;
use threads::shared;
use Thread qw/:DEFAULT async yield/;
use Thread::Queue;
use Carp;
use Gtk2 qw/-init -threads-init/;
use Gtk2::SimpleList;
use Glib;
use Goo::Canvas;
use Gtk2::Helper;
use SNMP;
use Net::IP;
use Net::SNMP;
use Data::Dumper;
use Net::Libdnet::Arp;
use Net::Libdnet::Intf;
use Net::Libdnet::Route;
use Net::hostent;
use Socket;
use SNMP::Info;
use SNMP::Info::LLDP;
use Data::Dumper;
use FileHandle;
use DBI;
use Time::HiRes qw(gettimeofday tv_interval);
use FindBin qw($Bin);
use lib "$Bin";
require "Network.pm";
require "GtkNetwork.pm";
use strict;

$ENV{MIBDIRS} = '+'.join(':',qw{
	/usr/share/netdisco/mibs
	/usr/share/netdisco/mibs/allied
	/usr/share/netdisco/mibs/arista
	/usr/share/netdisco/mibs/aruba
	/usr/share/netdisco/mibs/asante
	/usr/share/netdisco/mibs/cabletron
	/usr/share/netdisco/mibs/cisco
	/usr/share/netdisco/mibs/cyclades
	/usr/share/netdisco/mibs/dell
	/usr/share/netdisco/mibs/enterasys
	/usr/share/netdisco/mibs/extreme
	/usr/share/netdisco/mibs/foundry
	/usr/share/netdisco/mibs/hp
	/usr/share/netdisco/mibs/juniper
	/usr/share/netdisco/mibs/netscreen
	/usr/share/netdisco/mibs/net-snmp
	/usr/share/netdisco/mibs/nortel
	/usr/share/netdisco/mibs/rfc
});
$SNMP::verbose = 0;
$SNMP::use_long_names = 0;
$SNMP::use_sprint_value = 0;
$SNMP::use_enums = 1;
$SNMP::use_numeric = 0;
$SNMP::best_guess = 2;
$SNMP::save_descriptions = 1;
SNMP::initMib();
SNMP::addMibDirs(qw{
	/usr/share/netdisco/mibs
	/usr/share/netdisco/mibs/allied
	/usr/share/netdisco/mibs/arista
	/usr/share/netdisco/mibs/aruba
	/usr/share/netdisco/mibs/asante
	/usr/share/netdisco/mibs/cabletron
	/usr/share/netdisco/mibs/cisco
	/usr/share/netdisco/mibs/cyclades
	/usr/share/netdisco/mibs/dell
	/usr/share/netdisco/mibs/enterasys
	/usr/share/netdisco/mibs/extreme
	/usr/share/netdisco/mibs/foundry
	/usr/share/netdisco/mibs/hp
	/usr/share/netdisco/mibs/juniper
	/usr/share/netdisco/mibs/netscreen
	/usr/share/netdisco/mibs/net-snmp
	/usr/share/netdisco/mibs/nortel
	/usr/share/netdisco/mibs/rfc
});
SNMP::loadModules(qw{
	SNMPv2-SMI
	SNMPv2-TC
	SNMPv2-MIB
	RFC1213-MIB
	IF-MIB
	Q-BRIDGE-MIB
	INET-ADDRESS-MIB
	IP-MIB
	LLDP-MIB
	LLDP-EXT-DOT1-MIB
	LLDP-EXT-DOT3-MIB
	LLDP-EXT-MED-MIB
});

package main;
use strict;
use warnings;

my $model = new Model::SNMP();
my $net = $model->{net}{PUBLIC};
my $window = new Window();
my $viewer = $window->new_network($net);
$viewer->start_timeout();
my $hkey = Item::makekey('127.0.0.1');
my $loc = $model->{net}{LOOPBACK};
$loc->getchild('Point::Host::Here',$hkey,undef,[['Local::Here',$loc,$hkey]]);

Gtk2->main();

#foreach my $kind (sort keys %{$model->{lists}}) {
#	foreach my $item (values %{$model->{lists}{$kind}}) {
#		next unless $item;
#		$item->show;
#	}
#}

exit;

1;

__END__

	atTable
	ifTable
	ipAddrTable
	ipRouteTable
	ipAddressTable
	ipNetToPhysicalTable
	ipDefaultRouterTable
	lldpLocPortTable
	lldpLocManAddrTable
	lldpRemTable
	lldpRemManAddrTable
	lldpRemOrgDefInfoTable



