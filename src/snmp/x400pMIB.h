/*****************************************************************************

 @(#) $Id: x400pMIB.h,v 1.1.2.2 2010-11-28 14:22:21 brian Exp $

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2010  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date: 2010-11-28 14:22:21 $ by $Author: brian $

 -----------------------------------------------------------------------------

 $Log: x400pMIB.h,v $
 Revision 1.1.2.2  2010-11-28 14:22:21  brian
 - remove #ident, protect _XOPEN_SOURCE

 Revision 1.1.2.1  2009-06-21 11:42:36  brian
 - added files to new distro

 Revision 0.9.2.14  2009-02-18 20:19:00  brian
 - updated agents

 Revision 0.9.2.13  2009-01-19 13:31:56  brian
 - updating standalone agents

 Revision 0.9.2.12  2009-01-16 20:40:57  brian
 - working up mibs and agents

 Revision 0.9.2.11  2009-01-14 14:31:22  brian
 - working up agents

 Revision 0.9.2.10  2009-01-10 17:46:47  brian
 - updated agents and mibs

 Revision 0.9.2.9  2009-01-04 13:16:12  brian
 - updated agents

 Revision 0.9.2.8  2009-01-03 10:51:12  brian
 - updated agent

 Revision 0.9.2.7  2009-01-02 15:04:19  brian
 - updated agents

 Revision 0.9.2.6  2008-12-31 16:04:51  brian
 - updated mibs

 Revision 0.9.2.5  2008-12-24 13:40:57  brian
 - updated mibs

 Revision 0.9.2.4  2008-07-31 17:40:17  brian
 - SNMP updates

 Revision 0.9.2.3  2008-04-28 23:39:59  brian
 - updated headers for release

 Revision 0.9.2.2  2008/01/14 19:55:03  brian
 - updated stub files

 Revision 0.9.2.1  2008/01/01 13:59:38  brian
 - added new mibs

 *****************************************************************************/

#ifndef __LOCAL_X400PMIB_H__
#define __LOCAL_X400PMIB_H__

#include <sys/types.h>
#include <stropts.h>
#include <ss7/lmi.h>
#include <ss7/lmi_ioctl.h>
#include <sys/mxi.h>
#include <sys/mxi_ioctl2.h>

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct x400pMIB_data {
	uint x400pMIB_request;
	ulong x400pCardNextIndex;	/* ReadOnly */
	long x400pDiscontinuityTime;	/* ReadOnly */
};
struct x400pSyncTable_data {
	uint x400pSyncTable_request;
	uint x400pSyncTable_refs;
	ulong x400pSyncGroup;		/* NoAccess */
	ulong x400pSyncIndex;		/* NoAccess */
	uint8_t *x400pSyncSpanId;	/* Create */
	size_t x400pSyncSpanIdLen;
	long x400pSyncRowStatus;	/* Create */
};
struct x400pDrivTable_data {
	uint x400pDrivTable_request;
	uint x400pDrivTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pDrivIdnum;		/* ReadOnly */
	ulong x400pDrivMajor;		/* ReadOnly */
	uint8_t *x400pDrivDescription;	/* ReadOnly */
	size_t x400pDrivDescriptionLen;
	uint8_t *x400pDrivRevision;	/* ReadOnly */
	size_t x400pDrivRevisionLen;
	uint8_t *x400pDrivCopyright;	/* ReadOnly */
	size_t x400pDrivCopyrightLen;
	uint8_t *x400pDrivSupportedDevice;	/* ReadOnly */
	size_t x400pDrivSupportedDeviceLen;
	uint8_t *x400pDrivContact;	/* ReadOnly */
	size_t x400pDrivContactLen;
	long x400pDrivLicense;		/* ReadOnly */
	uint8_t *x400pDrivDate;		/* ReadOnly */
	size_t x400pDrivDateLen;
	long x400pDrivRowStatus;	/* Create */
};
struct x400pCardTable_data {
	uint x400pCardTable_request;
	uint x400pCardTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	oid *x400pCardType;		/* ReadOnly */
	size_t x400pCardTypeLen;
	long x400pCardIdentifier;	/* ReadOnly */
	uint8_t *x400pCardRevision;	/* ReadOnly */
	size_t x400pCardRevisionLen;
	oid *x400pCardChipType;		/* ReadOnly */
	size_t x400pCardChipTypeLen;
	uint8_t *x400pCardChipRevision;	/* ReadOnly */
	size_t x400pCardChipRevisionLen;
	ulong x400pCardPciBus;		/* ReadOnly */
	ulong x400pCardPciSlot;		/* ReadOnly */
	ulong x400pCardPciIrq;		/* ReadOnly */
	long x400pCardSpanType;		/* Create */
	uint8_t *x400pCardMode;		/* Create */
	size_t x400pCardModeLen;
	long x400pCardSyncMaster;	/* Create */
	long x400pCardSyncSource;	/* Create */
	ulong x400pCardSyncGroup;	/* Create */
	long x400pCardAdministrativeState;	/* Create */
	long x400pCardOperationalState;	/* ReadOnly */
	long x400pCardUsageState;	/* ReadOnly */
	uint8_t *x400pCardAlarmStatus;	/* Create */
	size_t x400pCardAlarmStatusLen;
	uint8_t *x400pCardProceduralStatus;	/* ReadOnly */
	size_t x400pCardProceduralStatusLen;
	uint8_t *x400pCardAvailabilityStatus;	/* ReadOnly */
	size_t x400pCardAvailabilityStatusLen;
	uint8_t *x400pCardControlStatus;	/* Create */
	size_t x400pCardControlStatusLen;
	long x400pCardUnknownStatus;	/* ReadOnly */
	long x400pCardStandbyStatus;	/* ReadOnly */
	uint8_t *x400pCardSyncSpanId;	/* ReadOnly */
	size_t x400pCardSyncSpanIdLen;
	long x400pCardSyncTransitions;	/* ReadOnly */
	uint8_t *x400pCardName;		/* ReadOnly */
	size_t x400pCardNameLen;
	long x400pCardStatus;		/* ReadOnly */
};
struct x400pSpanTable_data {
	uint x400pSpanTable_request;
	uint x400pSpanTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	uint8_t *x400pSpanName;		/* Create */
	size_t x400pSpanNameLen;
	oid *x400pSpanDevice;		/* Create */
	size_t x400pSpanDeviceLen;
	uint8_t *x400pSpanEquipmentId;	/* Create */
	size_t x400pSpanEquipmentIdLen;
	long x400pSpanType;		/* Create */
	ulong x400pSpanNumber;		/* Create */
	long x400pSpanRate;		/* ReadOnly */
	uint8_t *x400pSpanMode;		/* Create */
	size_t x400pSpanModeLen;
	long x400pSpanCrc;		/* Create */
	long x400pSpanClocking;		/* Create */
	ulong x400pSpanPriority;	/* Create */
	long x400pSpanCoding;		/* Create */
	long x400pSpanFraming;		/* Create */
	long x400pSpanLineImpedance;	/* Create */
	long x400pSpanLineMode;		/* Create */
	long x400pSpanLineLength;	/* Create */
	long x400pSpanLineAttenuation;	/* Create */
	long x400pSpanLineGain;		/* Create */
	ulong x400pSpanLineDelay;	/* Create */
	long x400pSpanTxLevel;		/* Create */
	long x400pSpanRxLevel;		/* Create */
	long x400pSpanAlarmSettleTime;	/* Create */
	long x400pSpanLineCodeTime;	/* Create */
	ulong x400pSpanPrimary;		/* Create */
	uint8_t *x400pSpanDataLink;	/* Create */
	size_t x400pSpanDataLinkLen;
	long x400pSpanLineCode;		/* Create */
	oid *x400pSpanAlarmSeverityMappingProfile;	/* Create */
	size_t x400pSpanAlarmSeverityMappingProfileLen;
	long x400pSpanAdministrativeState;	/* Create */
	long x400pSpanOperationalState;	/* ReadOnly */
	long x400pSpanUsageState;	/* ReadOnly */
	uint8_t *x400pSpanAlarmStatus;	/* Create */
	size_t x400pSpanAlarmStatusLen;
	uint8_t *x400pSpanProceduralStatus;	/* ReadOnly */
	size_t x400pSpanProceduralStatusLen;
	uint8_t *x400pSpanAvailabilityStatus;	/* ReadOnly */
	size_t x400pSpanAvailabilityStatusLen;
	uint8_t *x400pSpanControlStatus;	/* Create */
	size_t x400pSpanControlStatusLen;
	long x400pSpanStandbyStatus;	/* ReadOnly */
	long x400pSpanUnknownStatus;	/* ReadOnly */
	oid *x400pSpanSap;		/* ReadOnly */
	size_t x400pSpanSapLen;
	uint8_t *x400pSpanLoopbackStatus;	/* ReadOnly */
	size_t x400pSpanLoopbackStatusLen;
	uint8_t *x400pSpanLineStatus;	/* ReadOnly */
	size_t x400pSpanLineStatusLen;
	uint8_t *x400pSpanAlarms;	/* ReadOnly */
	size_t x400pSpanAlarmsLen;
	uint8_t *x400pSpanEvents;	/* ReadOnly */
	size_t x400pSpanEventsLen;
	ulong x400pSpanReceiveLevel;	/* ReadOnly */
	ulong x400pSpanReceiveThreshold;	/* Create */
	long x400pSpanRowStatus;	/* Create */
};
struct x400pBertTable_data {
	uint x400pBertTable_request;
	uint x400pBertTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	long x400pBertMode;		/* ReadWrite */
	long x400pBertSelect;		/* ReadWrite */
	uint8_t *x400pBertPattern;	/* ReadWrite */
	size_t x400pBertPatternLen;
	long x400pBertOperationalState;	/* ReadOnly */
	uint8_t *x400pBertProceduralStatus;	/* ReadOnly */
	size_t x400pBertProceduralStatusLen;
	long x400pBertBitCount;		/* ReadOnly */
	long x400pBertErrorCount;	/* ReadOnly */
};
struct x400pChanTable_data {
	uint x400pChanTable_request;
	uint x400pChanTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	ulong x400pChanIndex;		/* NoAccess */
	long x400pChanType;		/* ReadWrite */
	long x400pChanFormat;		/* ReadWrite */
	long x400pChanRate;		/* ReadWrite */
	uint8_t *x400pChanMode;		/* ReadWrite */
	size_t x400pChanModeLen;
	oid *x400pChanSap;		/* ReadOnly */
	size_t x400pChanSapLen;
	long x400pChanAdministrativeState;	/* ReadWrite */
	long x400pChanOperationalState;	/* ReadOnly */
	long x400pChanUsageState;	/* ReadOnly */
	uint8_t *x400pChanAvailabilityStatus;	/* ReadOnly */
	size_t x400pChanAvailabilityStatusLen;
	uint8_t *x400pChanControlStatus;	/* ReadWrite */
	size_t x400pChanControlStatusLen;
	uint8_t *x400pChanProceduralStatus;	/* ReadOnly */
	size_t x400pChanProceduralStatusLen;
	uint8_t *x400pChanAlarmStatus;	/* ReadWrite */
	size_t x400pChanAlarmStatusLen;
	long x400pChanStandbyStatus;	/* ReadOnly */
};
struct x400pXconTable_data {
	uint x400pXconTable_request;
	uint x400pXconTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	ulong x400pChanIndex;		/* NoAccess */
	ulong x400pXconCardIndex;	/* Create */
	ulong x400pXconSpanIndex;	/* Create */
	ulong x400pXconChanIndex;	/* Create */
	long x400pXconType;		/* Create */
	long x400pXconStorageType;	/* Create */
	long x400pXconRowStatus;	/* Create */
};
struct x400pNearEndCurrentTable_data {
	uint x400pNearEndCurrentTable_request;
	uint x400pNearEndCurrentTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	long x400pNearEndCurrentTimeElapsed;	/* ReadOnly */
	long x400pNearEndCurrentESs;	/* ReadOnly */
	long x400pNearEndCurrentSESs;	/* ReadOnly */
	long x400pNearEndCurrentSEFSs;	/* ReadOnly */
	long x400pNearEndCurrentUASs;	/* ReadOnly */
	long x400pNearEndCurrentCSSs;	/* ReadOnly */
	long x400pNearEndCurrentPCVs;	/* ReadOnly */
	long x400pNearEndCurrentLESs;	/* ReadOnly */
	long x400pNearEndCurrentBESs;	/* ReadOnly */
	long x400pNearEndCurrentDMs;	/* ReadOnly */
	long x400pNearEndCurrentLCVs;	/* ReadOnly */
};
struct x400pNearEndIntervalTable_data {
	uint x400pNearEndIntervalTable_request;
	uint x400pNearEndIntervalTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	ulong x400pNearEndIntervalIndex;	/* NoAccess */
	long x400pNearEndIntervalESs;	/* ReadOnly */
	long x400pNearEndIntervalSESs;	/* ReadOnly */
	long x400pNearEndIntervalSEFSs;	/* ReadOnly */
	long x400pNearEndIntervalUASs;	/* ReadOnly */
	long x400pNearEndIntervalCSSs;	/* ReadOnly */
	long x400pNearEndIntervalPCVs;	/* ReadOnly */
	long x400pNearEndIntervalLESs;	/* ReadOnly */
	long x400pNearEndIntervalBESs;	/* ReadOnly */
	long x400pNearEndIntervalDMs;	/* ReadOnly */
	long x400pNearEndIntervalLCVs;	/* ReadOnly */
	long x400pNearEndIntervalValidData;	/* ReadOnly */
};
struct x400pNearEndTotalTable_data {
	uint x400pNearEndTotalTable_request;
	uint x400pNearEndTotalTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	long x400pNearEndTotalValidIntervals;	/* ReadOnly */
	long x400pNearEndTotalInvalidIntervals;	/* ReadOnly */
	long x400pNearEndTotalESs;	/* ReadOnly */
	long x400pNearEndTotalSESs;	/* ReadOnly */
	long x400pNearEndTotalSEFSs;	/* ReadOnly */
	long x400pNearEndTotalUASs;	/* ReadOnly */
	long x400pNearEndTotalCSSs;	/* ReadOnly */
	long x400pNearEndTotalPCVs;	/* ReadOnly */
	long x400pNearEndTotalLESs;	/* ReadOnly */
	long x400pNearEndTotalBESs;	/* ReadOnly */
	long x400pNearEndTotalDMs;	/* ReadOnly */
	long x400pNearEndTotalLCVs;	/* ReadOnly */
};
struct x400pFarEndCurrentTable_data {
	uint x400pFarEndCurrentTable_request;
	uint x400pFarEndCurrentTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	long x400pFarEndCurrentTimeElapsed;	/* ReadOnly */
	long x400pFarEndCurrentESs;	/* ReadOnly */
	long x400pFarEndCurrentSESs;	/* ReadOnly */
	long x400pFarEndCurrentSEFSs;	/* ReadOnly */
	long x400pFarEndCurrentUASs;	/* ReadOnly */
	long x400pFarEndCurrentCSSs;	/* ReadOnly */
	long x400pFarEndCurrentPCVs;	/* ReadOnly */
	long x400pFarEndCurrentLESs;	/* ReadOnly */
	long x400pFarEndCurrentBESs;	/* ReadOnly */
	long x400pFarEndCurrentDMs;	/* ReadOnly */
};
struct x400pFarEndIntervalTable_data {
	uint x400pFarEndIntervalTable_request;
	uint x400pFarEndIntervalTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	ulong x400pFarEndIntervalIndex;	/* NoAccess */
	long x400pFarEndIntervalESs;	/* ReadOnly */
	long x400pFarEndIntervalSESs;	/* ReadOnly */
	long x400pFarEndIntervalSEFSs;	/* ReadOnly */
	long x400pFarEndIntervalUASs;	/* ReadOnly */
	long x400pFarEndIntervalCSSs;	/* ReadOnly */
	long x400pFarEndIntervalPCVs;	/* ReadOnly */
	long x400pFarEndIntervalLESs;	/* ReadOnly */
	long x400pFarEndIntervalBESs;	/* ReadOnly */
	long x400pFarEndIntervalDMs;	/* ReadOnly */
	long x400pFarEndIntervalValidData;	/* ReadOnly */
};
struct x400pFarEndTotalTable_data {
	uint x400pFarEndTotalTable_request;
	uint x400pFarEndTotalTable_refs;
	uint8_t *x400pDrivName;		/* NoAccess */
	size_t x400pDrivNameLen;
	ulong x400pCardIndex;		/* NoAccess */
	ulong x400pSpanIndex;		/* NoAccess */
	long x400pFarEndTotalValidIntervals;	/* ReadOnly */
	long x400pFarEndTotalInvalidIntervals;	/* ReadOnly */
	long x400pFarEndTotalESs;	/* ReadOnly */
	long x400pFarEndTotalSESs;	/* ReadOnly */
	long x400pFarEndTotalSEFSs;	/* ReadOnly */
	long x400pFarEndTotalUASs;	/* ReadOnly */
	long x400pFarEndTotalCSSs;	/* ReadOnly */
	long x400pFarEndTotalPCVs;	/* ReadOnly */
	long x400pFarEndTotalLESs;	/* ReadOnly */
	long x400pFarEndTotalBESs;	/* ReadOnly */
	long x400pFarEndTotalDMs;	/* ReadOnly */
};

/* storage declarations */
extern struct x400pMIB_data *x400pMIBStorage;
extern struct header_complex_index *x400pSyncTableStorage;
extern struct header_complex_index *x400pDrivTableStorage;
extern struct header_complex_index *x400pCardTableStorage;
extern struct header_complex_index *x400pSpanTableStorage;
extern struct header_complex_index *x400pBertTableStorage;
extern struct header_complex_index *x400pChanTableStorage;
extern struct header_complex_index *x400pXconTableStorage;
extern struct header_complex_index *x400pNearEndCurrentTableStorage;
extern struct header_complex_index *x400pNearEndIntervalTableStorage;
extern struct header_complex_index *x400pNearEndTotalTableStorage;
extern struct header_complex_index *x400pFarEndCurrentTableStorage;
extern struct header_complex_index *x400pFarEndIntervalTableStorage;
extern struct header_complex_index *x400pFarEndTotalTableStorage;

/* enum definitions from the covered mib sections */

#define X400PDRIVLICENSE_PROPRIETARY             0
#define X400PDRIVLICENSE_GPL                     1
#define X400PDRIVLICENSE_GPLV2                   2
#define X400PDRIVLICENSE_GPLPLUS                 3
#define X400PDRIVLICENSE_DUALBSDGPL              4
#define X400PDRIVLICENSE_DUALMITGPL              5
#define X400PDRIVLICENSE_DUALMPLGPL              6

#define X400PCARDSPANTYPE_NONE                   1
#define X400PCARDSPANTYPE_T1                     2
#define X400PCARDSPANTYPE_E1                     3
#define X400PCARDSPANTYPE_J1                     4

#define X400PCARDMODE_REMOTELOOPBACK             0
#define X400PCARDMODE_LOCALLOOPBACK              1

#define X400PCARDSYNCMASTER_SLAVE                0
#define X400PCARDSYNCMASTER_MASTER               1

#define X400PCARDSYNCSOURCE_SYNCSELF             0
#define X400PCARDSYNCSOURCE_SYNC1                1
#define X400PCARDSYNCSOURCE_SYNC2                2
#define X400PCARDSYNCSOURCE_SYNC3                3
#define X400PCARDSYNCSOURCE_SYNC4                4
#define X400PCARDSYNCSOURCE_SYNCEXTERN           5
#define X400PCARDSYNCSOURCE_SYNCAUTO             6

#define X400PCARDADMINISTRATIVESTATE_LOCKED      0
#define X400PCARDADMINISTRATIVESTATE_UNLOCKED    1
#define X400PCARDADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define X400PCARDOPERATIONALSTATE_DISABLED       0
#define X400PCARDOPERATIONALSTATE_ENABLED        1

#define X400PCARDUSAGESTATE_IDLE                 0
#define X400PCARDUSAGESTATE_ACTIVE               1
#define X400PCARDUSAGESTATE_BUSY                 2

#define X400PCARDALARMSTATUS_UNDERREPAIR         0
#define X400PCARDALARMSTATUS_CRITICAL            1
#define X400PCARDALARMSTATUS_MAJOR               2
#define X400PCARDALARMSTATUS_MINOR               3
#define X400PCARDALARMSTATUS_ALARMOUTSTANDING    4

#define X400PCARDPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PCARDPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PCARDPROCEDURALSTATUS_INITIALIZING   2
#define X400PCARDPROCEDURALSTATUS_REPORTING      3
#define X400PCARDPROCEDURALSTATUS_TERMINATING    4

#define X400PCARDAVAILABILITYSTATUS_INTEST       0
#define X400PCARDAVAILABILITYSTATUS_FAILED       1
#define X400PCARDAVAILABILITYSTATUS_POWEROFF     2
#define X400PCARDAVAILABILITYSTATUS_OFFLINE      3
#define X400PCARDAVAILABILITYSTATUS_OFFDUTY      4
#define X400PCARDAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PCARDAVAILABILITYSTATUS_DEGRADED     6
#define X400PCARDAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PCARDAVAILABILITYSTATUS_LOGFULL      8

#define X400PCARDCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PCARDCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PCARDCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PCARDCONTROLSTATUS_SUSPENDED         3

#define X400PCARDUNKNOWNSTATUS_FALSE             0
#define X400PCARDUNKNOWNSTATUS_TRUE              1

#define X400PCARDSTANDBYSTATUS_HOTSTANDBY        0
#define X400PCARDSTANDBYSTATUS_COLDSTANDBY       1
#define X400PCARDSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PSPANTYPE_NONE                       0
#define X400PSPANTYPE_T1                         1
#define X400PSPANTYPE_E1                         2
#define X400PSPANTYPE_J1                         3
#define X400PSPANTYPE_E2                         4
#define X400PSPANTYPE_E3                         5
#define X400PSPANTYPE_T3                         6

#define X400PSPANMODE_LOCAL                      0
#define X400PSPANMODE_REMOTE                     1
#define X400PSPANMODE_FRAMER                     2
#define X400PSPANMODE_PAYLOAD                    3

#define X400PSPANCRC_NONE                        0
#define X400PSPANCRC_CRC4                        1
#define X400PSPANCRC_CRC5                        2
#define X400PSPANCRC_CRC6                        3
#define X400PSPANCRC_CRC6J                       4

#define X400PSPANCLOCKING_NONE                   0
#define X400PSPANCLOCKING_LOOP                   1
#define X400PSPANCLOCKING_LOCAL                  2
#define X400PSPANCLOCKING_INTERNAL               3
#define X400PSPANCLOCKING_EXTERNAL               4
#define X400PSPANCLOCKING_ADAPTIVE               5

#define X400PSPANCODING_NONE                     0
#define X400PSPANCODING_AMI                      1
#define X400PSPANCODING_B6ZS                     2
#define X400PSPANCODING_B8ZS                     3
#define X400PSPANCODING_HDB3                     4
#define X400PSPANCODING_JBZS                     5
#define X400PSPANCODING_ZBTSI                    6

#define X400PSPANFRAMING_NONE                    0
#define X400PSPANFRAMING_CCS                     1
#define X400PSPANFRAMING_CAS                     2
#define X400PSPANFRAMING_SF                      3
#define X400PSPANFRAMING_D4                      4
#define X400PSPANFRAMING_ESF                     5

#define X400PSPANLINEIMPEDANCE_NONE              0
#define X400PSPANLINEIMPEDANCE_UNBALANCED75OHM   1
#define X400PSPANLINEIMPEDANCE_BALANCED100OHM    2
#define X400PSPANLINEIMPEDANCE_BALANCED120OHM    3

#define X400PSPANLINEMODE_NONE                   0
#define X400PSPANLINEMODE_DSU                    1
#define X400PSPANLINEMODE_CSU                    2
#define X400PSPANLINEMODE_MONITOR                3

#define X400PSPANLINELENGTH_NONE                 0
#define X400PSPANLINELENGTH_DSX133FT             1
#define X400PSPANLINELENGTH_DSX266FT             2
#define X400PSPANLINELENGTH_DSX399FT             3
#define X400PSPANLINELENGTH_DSX533FT             4
#define X400PSPANLINELENGTH_DSX666FT             5

#define X400PSPANLINEATTENUATION_NONE            0
#define X400PSPANLINEATTENUATION_CSU0DB          1
#define X400PSPANLINEATTENUATION_CSU8DB          2
#define X400PSPANLINEATTENUATION_CSU15DB         3
#define X400PSPANLINEATTENUATION_CSU23DB         4

#define X400PSPANLINEGAIN_NONE                   0
#define X400PSPANLINEGAIN_MON0DB                 1
#define X400PSPANLINEGAIN_MON12DB                2
#define X400PSPANLINEGAIN_MON20DB                3
#define X400PSPANLINEGAIN_MON26DB                4
#define X400PSPANLINEGAIN_MON30DB                5
#define X400PSPANLINEGAIN_MON32DB                6

#define X400PSPANTXLEVEL_OPEN                    0
#define X400PSPANTXLEVEL_OFF                     1
#define X400PSPANTXLEVEL_ON                      2

#define X400PSPANRXLEVEL_OPEN                    0
#define X400PSPANRXLEVEL_OFF                     1
#define X400PSPANRXLEVEL_ON                      2

#define X400PSPANDATALINK_ANSIT1403              0
#define X400PSPANDATALINK_ATT54016               1
#define X400PSPANDATALINK_OTHER                  2

#define X400PSPANLINECODE_NOCODE                 1
#define X400PSPANLINECODE_LINECODE               2
#define X400PSPANLINECODE_PAYLOADCODE            3
#define X400PSPANLINECODE_RESETCODE              4
#define X400PSPANLINECODE_TESTCODE               5
#define X400PSPANLINECODE_UNFRAMEDALLONES        6
#define X400PSPANLINECODE_UNFRAMEDONEANDZERO     7

#define X400PSPANADMINISTRATIVESTATE_LOCKED      0
#define X400PSPANADMINISTRATIVESTATE_UNLOCKED    1
#define X400PSPANADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define X400PSPANOPERATIONALSTATE_DISABLED       0
#define X400PSPANOPERATIONALSTATE_ENABLED        1

#define X400PSPANUSAGESTATE_IDLE                 0
#define X400PSPANUSAGESTATE_ACTIVE               1
#define X400PSPANUSAGESTATE_BUSY                 2

#define X400PSPANALARMSTATUS_UNDERREPAIR         0
#define X400PSPANALARMSTATUS_CRITICAL            1
#define X400PSPANALARMSTATUS_MAJOR               2
#define X400PSPANALARMSTATUS_MINOR               3
#define X400PSPANALARMSTATUS_ALARMOUTSTANDING    4

#define X400PSPANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PSPANPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PSPANPROCEDURALSTATUS_INITIALIZING   2
#define X400PSPANPROCEDURALSTATUS_REPORTING      3
#define X400PSPANPROCEDURALSTATUS_TERMINATING    4

#define X400PSPANAVAILABILITYSTATUS_INTEST       0
#define X400PSPANAVAILABILITYSTATUS_FAILED       1
#define X400PSPANAVAILABILITYSTATUS_POWEROFF     2
#define X400PSPANAVAILABILITYSTATUS_OFFLINE      3
#define X400PSPANAVAILABILITYSTATUS_OFFDUTY      4
#define X400PSPANAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PSPANAVAILABILITYSTATUS_DEGRADED     6
#define X400PSPANAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PSPANAVAILABILITYSTATUS_LOGFULL      8

#define X400PSPANCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PSPANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PSPANCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PSPANCONTROLSTATUS_SUSPENDED         3

#define X400PSPANSTANDBYSTATUS_HOTSTANDBY        0
#define X400PSPANSTANDBYSTATUS_COLDSTANDBY       1
#define X400PSPANSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PSPANUNKNOWNSTATUS_FALSE             0
#define X400PSPANUNKNOWNSTATUS_TRUE              1

#define X400PSPANLOOPBACKSTATUS_NEARENDINWARD    0
#define X400PSPANLOOPBACKSTATUS_NEARENDLINE      1
#define X400PSPANLOOPBACKSTATUS_NEARENDFRAMER    2
#define X400PSPANLOOPBACKSTATUS_NEARENDPAYLOAD   3
#define X400PSPANLOOPBACKSTATUS_FARENDLINE       4
#define X400PSPANLOOPBACKSTATUS_FARENDPAYLOAD    5

#define X400PSPANLINESTATUS_NONE                 0
#define X400PSPANLINESTATUS_RCVFARENDLOF         1
#define X400PSPANLINESTATUS_XMTFARENDLOF         2
#define X400PSPANLINESTATUS_RCVAIS               3
#define X400PSPANLINESTATUS_XMTAIS               4
#define X400PSPANLINESTATUS_LOSSOFFRAME          5
#define X400PSPANLINESTATUS_LOSSOFSIGNAL         6
#define X400PSPANLINESTATUS_LOOPBACKSTATE        7
#define X400PSPANLINESTATUS_T16AIS               8
#define X400PSPANLINESTATUS_RCVFARENDLOMF        9
#define X400PSPANLINESTATUS_XMTFARENDLOMF        10
#define X400PSPANLINESTATUS_RCVTESTCODE          11
#define X400PSPANLINESTATUS_OTHERFAILURE         12
#define X400PSPANLINESTATUS_UAVAILSIGSTATE       13
#define X400PSPANLINESTATUS_NETEQUIPOOS          14
#define X400PSPANLINESTATUS_RCVPAYLOADAIS        15
#define X400PSPANLINESTATUS_PERFTHRESHOLD        16

#define X400PSPANALARMS_YELLOW                   0
#define X400PSPANALARMS_RED                      1
#define X400PSPANALARMS_BLUE                     2
#define X400PSPANALARMS_RECOVERY                 3

#define X400PSPANEVENTS_RLOS                     0
#define X400PSPANEVENTS_FRCL                     1
#define X400PSPANEVENTS_RUAL                     2
#define X400PSPANEVENTS_RYEL                     3
#define X400PSPANEVENTS_RRA                      4
#define X400PSPANEVENTS_RDMA                     5
#define X400PSPANEVENTS_V52LNK                   6
#define X400PSPANEVENTS_LORC                     7
#define X400PSPANEVENTS_LOTC                     8
#define X400PSPANEVENTS_LUP                      9
#define X400PSPANEVENTS_LDN                      10
#define X400PSPANEVENTS_LSPARE                   11
#define X400PSPANEVENTS_TOCD                     12
#define X400PSPANEVENTS_TCLE                     13

#define X400PBERTMODE_NONE                       0
#define X400PBERTMODE_SPAN                       1
#define X400PBERTMODE_CHANNEL                    2
#define X400PBERTMODE_FBIT                       3

#define X400PBERTSELECT_NONE                     0
#define X400PBERTSELECT_PRE2E7MINUS1             1
#define X400PBERTSELECT_PRE2E9MINUS1             2
#define X400PBERTSELECT_PRE2E11MINUS1            3
#define X400PBERTSELECT_PRE2E15MINUS1            4
#define X400PBERTSELECT_QRSS                     5
#define X400PBERTSELECT_DALY                     6
#define X400PBERTSELECT_REPEATING                7
#define X400PBERTSELECT_ALTERNATING              8

#define X400PBERTOPERATIONALSTATE_DISABLED       0
#define X400PBERTOPERATIONALSTATE_ENABLED        1

#define X400PBERTPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PBERTPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PBERTPROCEDURALSTATUS_INITIALIZING   2
#define X400PBERTPROCEDURALSTATUS_REPORTING      3
#define X400PBERTPROCEDURALSTATUS_TERMINATING    4

#define X400PCHANTYPE_NONE                       0
#define X400PCHANTYPE_CAS                        1
#define X400PCHANTYPE_CCS                        2

#define X400PCHANFORMAT_NONE                     1
#define X400PCHANFORMAT_DS0A                     2
#define X400PCHANFORMAT_DS0                      3
#define X400PCHANFORMAT_T1                       4
#define X400PCHANFORMAT_J1                       5
#define X400PCHANFORMAT_E1                       6

#define X400PCHANRATE_VARIABLE                   0
#define X400PCHANRATE_KBITS56                    56
#define X400PCHANRATE_KBITS64                    64
#define X400PCHANRATE_KBITS1536                  1536
#define X400PCHANRATE_KBITS1984                  1984

#define X400PCHANMODE_REMOTELOOPBACK             0
#define X400PCHANMODE_LOCALLOOPBACK              1
#define X400PCHANMODE_TEST                       2
#define X400PCHANMODE_LOOPBACKECHO               3

#define X400PCHANADMINISTRATIVESTATE_LOCKED      0
#define X400PCHANADMINISTRATIVESTATE_UNLOCKED    1
#define X400PCHANADMINISTRATIVESTATE_SHUTTINGDOWN 2

#define X400PCHANOPERATIONALSTATE_DISABLED       0
#define X400PCHANOPERATIONALSTATE_ENABLED        1

#define X400PCHANUSAGESTATE_IDLE                 0
#define X400PCHANUSAGESTATE_ACTIVE               1
#define X400PCHANUSAGESTATE_BUSY                 2

#define X400PCHANAVAILABILITYSTATUS_INTEST       0
#define X400PCHANAVAILABILITYSTATUS_FAILED       1
#define X400PCHANAVAILABILITYSTATUS_POWEROFF     2
#define X400PCHANAVAILABILITYSTATUS_OFFLINE      3
#define X400PCHANAVAILABILITYSTATUS_OFFDUTY      4
#define X400PCHANAVAILABILITYSTATUS_DEPENDENCY   5
#define X400PCHANAVAILABILITYSTATUS_DEGRADED     6
#define X400PCHANAVAILABILITYSTATUS_NOTINSTALLED 7
#define X400PCHANAVAILABILITYSTATUS_LOGFULL      8

#define X400PCHANCONTROLSTATUS_SUBJECTTOTEST     0
#define X400PCHANCONTROLSTATUS_PARTOFSERVICESLOCKED 1
#define X400PCHANCONTROLSTATUS_RESERVEDFORTEST   2
#define X400PCHANCONTROLSTATUS_SUSPENDED         3

#define X400PCHANPROCEDURALSTATUS_INITIALIZATIONREQUIRED 0
#define X400PCHANPROCEDURALSTATUS_NOTINITIALIZED 1
#define X400PCHANPROCEDURALSTATUS_INITIALIZING   2
#define X400PCHANPROCEDURALSTATUS_REPORTING      3
#define X400PCHANPROCEDURALSTATUS_TERMINATING    4

#define X400PCHANALARMSTATUS_UNDERREPAIR         0
#define X400PCHANALARMSTATUS_CRITICAL            1
#define X400PCHANALARMSTATUS_MAJOR               2
#define X400PCHANALARMSTATUS_MINOR               3
#define X400PCHANALARMSTATUS_ALARMOUTSTANDING    4

#define X400PCHANSTANDBYSTATUS_HOTSTANDBY        0
#define X400PCHANSTANDBYSTATUS_COLDSTANDBY       1
#define X400PCHANSTANDBYSTATUS_PROVIDINGSERVICE  2

#define X400PXCONTYPE_SWITCHED                   1
#define X400PXCONTYPE_SEMIPERMANENT              2
#define X400PXCONTYPE_PERMANENT                  3

#define X400PNEARENDINTERVALVALIDDATA_TRUE       1
#define X400PNEARENDINTERVALVALIDDATA_FALSE      2

#define X400PFARENDINTERVALVALIDDATA_TRUE        1
#define X400PFARENDINTERVALVALIDDATA_FALSE       2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid x400pCardTypePLX9030_oid[13];
extern oid x400pCardTypePLXDevelopmentBoard_oid[13];
extern oid x400pCardTypeX400P_oid[13];
extern oid x400pCardTypeE400P_oid[14];
extern oid x400pCardTypeT400P_oid[14];
extern oid x400pCardTypeX400P_SS7_oid[13];
extern oid x400pCardTypeE400P_SS7_oid[14];
extern oid x400pCardTypeT400P_SS7_oid[14];
extern oid x400pCardTypeV400P_oid[13];
extern oid x400pCardTypeV400PE_oid[14];
extern oid x400pCardTypeV400PT_oid[14];
extern oid x400pCardTypeV401PE_oid[13];
extern oid x400pCardTypeV401PT_oid[13];
extern oid x400pChipTypeDS2152_oid[13];
extern oid x400pChipTypeDS21352_oid[13];
extern oid x400pChipTypeDS21552_oid[13];
extern oid x400pChipTypeDS2154_oid[13];
extern oid x400pChipTypeDS21354_oid[13];
extern oid x400pChipTypeDS21554_oid[13];
extern oid x400pChipTypeDS2155_oid[13];
extern oid x400pChipTypeDS2156_oid[13];
extern oid x400pSyncMandatoryGroup_oid[12];
extern oid x400pCardIdGroup_oid[12];
extern oid x400pChipGroup_oid[12];
extern oid x400pPciGroup_oid[12];
extern oid x400pCardGroup_oid[12];
extern oid x400pSpanGroup_oid[12];
extern oid x400pChanGroup_oid[12];
extern oid x400pXconGroup_oid[12];
extern oid x400pBertGroup_oid[12];
extern oid x400pScalarGroup_oid[12];
extern oid x400pNearEndCurrentGroup_oid[12];
extern oid x400pNearEndIntervalGroup_oid[12];
extern oid x400pNearEndTotalGroup_oid[12];
extern oid x400pFarEndCurrentGroup_oid[12];
extern oid x400pFarEndIntervalGroup_oid[12];
extern oid x400pFarEndTotalGroup_oid[12];
extern oid x400pBasicCompliance_oid[12];
extern oid x400pEnhancedCompliance_oid[12];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_x400pMIB(void);
void deinit_x400pMIB(void);
int term_x400pMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_x400pMIB;
void parse_x400pMIB(const char *, char *);
SNMPCallback store_x400pMIB;
void refresh_x400pMIB(int);
FindVarMethod var_x400pSyncTable;
struct x400pSyncTable_data *x400pSyncTable_create(void);
struct x400pSyncTable_data *x400pSyncTable_duplicate(struct x400pSyncTable_data *);
int x400pSyncTable_destroy(struct x400pSyncTable_data **);
int x400pSyncTable_add(struct x400pSyncTable_data *);
int x400pSyncTable_del(struct x400pSyncTable_data *);
void parse_x400pSyncTable(const char *, char *);
SNMPCallback store_x400pSyncTable;
void refresh_x400pSyncTable(int);
FindVarMethod var_x400pDrivTable;
struct x400pDrivTable_data *x400pDrivTable_create(void);
struct x400pDrivTable_data *x400pDrivTable_duplicate(struct x400pDrivTable_data *);
int x400pDrivTable_destroy(struct x400pDrivTable_data **);
int x400pDrivTable_add(struct x400pDrivTable_data *);
int x400pDrivTable_del(struct x400pDrivTable_data *);
void parse_x400pDrivTable(const char *, char *);
SNMPCallback store_x400pDrivTable;
void refresh_x400pDrivTable(int);
FindVarMethod var_x400pCardTable;
struct x400pCardTable_data *x400pCardTable_create(void);
struct x400pCardTable_data *x400pCardTable_duplicate(struct x400pCardTable_data *);
int x400pCardTable_destroy(struct x400pCardTable_data **);
int x400pCardTable_add(struct x400pCardTable_data *);
int x400pCardTable_del(struct x400pCardTable_data *);
void parse_x400pCardTable(const char *, char *);
SNMPCallback store_x400pCardTable;
void refresh_x400pCardTable(int);
FindVarMethod var_x400pSpanTable;
struct x400pSpanTable_data *x400pSpanTable_create(void);
struct x400pSpanTable_data *x400pSpanTable_duplicate(struct x400pSpanTable_data *);
int x400pSpanTable_destroy(struct x400pSpanTable_data **);
int x400pSpanTable_add(struct x400pSpanTable_data *);
int x400pSpanTable_del(struct x400pSpanTable_data *);
void parse_x400pSpanTable(const char *, char *);
SNMPCallback store_x400pSpanTable;
void refresh_x400pSpanTable(int);
FindVarMethod var_x400pBertTable;
struct x400pBertTable_data *x400pBertTable_create(void);
struct x400pBertTable_data *x400pBertTable_duplicate(struct x400pBertTable_data *);
int x400pBertTable_destroy(struct x400pBertTable_data **);
int x400pBertTable_add(struct x400pBertTable_data *);
int x400pBertTable_del(struct x400pBertTable_data *);
void parse_x400pBertTable(const char *, char *);
SNMPCallback store_x400pBertTable;
void refresh_x400pBertTable(int);
FindVarMethod var_x400pChanTable;
struct x400pChanTable_data *x400pChanTable_create(void);
struct x400pChanTable_data *x400pChanTable_duplicate(struct x400pChanTable_data *);
int x400pChanTable_destroy(struct x400pChanTable_data **);
int x400pChanTable_add(struct x400pChanTable_data *);
int x400pChanTable_del(struct x400pChanTable_data *);
void parse_x400pChanTable(const char *, char *);
SNMPCallback store_x400pChanTable;
void refresh_x400pChanTable(int);
FindVarMethod var_x400pXconTable;
struct x400pXconTable_data *x400pXconTable_create(void);
struct x400pXconTable_data *x400pXconTable_duplicate(struct x400pXconTable_data *);
int x400pXconTable_destroy(struct x400pXconTable_data **);
int x400pXconTable_add(struct x400pXconTable_data *);
int x400pXconTable_del(struct x400pXconTable_data *);
void parse_x400pXconTable(const char *, char *);
SNMPCallback store_x400pXconTable;
void refresh_x400pXconTable(int);
FindVarMethod var_x400pNearEndCurrentTable;
struct x400pNearEndCurrentTable_data *x400pNearEndCurrentTable_create(void);
struct x400pNearEndCurrentTable_data *x400pNearEndCurrentTable_duplicate(struct x400pNearEndCurrentTable_data *);
int x400pNearEndCurrentTable_destroy(struct x400pNearEndCurrentTable_data **);
int x400pNearEndCurrentTable_add(struct x400pNearEndCurrentTable_data *);
int x400pNearEndCurrentTable_del(struct x400pNearEndCurrentTable_data *);
void parse_x400pNearEndCurrentTable(const char *, char *);
SNMPCallback store_x400pNearEndCurrentTable;
void refresh_x400pNearEndCurrentTable(int);
FindVarMethod var_x400pNearEndIntervalTable;
struct x400pNearEndIntervalTable_data *x400pNearEndIntervalTable_create(void);
struct x400pNearEndIntervalTable_data *x400pNearEndIntervalTable_duplicate(struct x400pNearEndIntervalTable_data *);
int x400pNearEndIntervalTable_destroy(struct x400pNearEndIntervalTable_data **);
int x400pNearEndIntervalTable_add(struct x400pNearEndIntervalTable_data *);
int x400pNearEndIntervalTable_del(struct x400pNearEndIntervalTable_data *);
void parse_x400pNearEndIntervalTable(const char *, char *);
SNMPCallback store_x400pNearEndIntervalTable;
void refresh_x400pNearEndIntervalTable(int);
FindVarMethod var_x400pNearEndTotalTable;
struct x400pNearEndTotalTable_data *x400pNearEndTotalTable_create(void);
struct x400pNearEndTotalTable_data *x400pNearEndTotalTable_duplicate(struct x400pNearEndTotalTable_data *);
int x400pNearEndTotalTable_destroy(struct x400pNearEndTotalTable_data **);
int x400pNearEndTotalTable_add(struct x400pNearEndTotalTable_data *);
int x400pNearEndTotalTable_del(struct x400pNearEndTotalTable_data *);
void parse_x400pNearEndTotalTable(const char *, char *);
SNMPCallback store_x400pNearEndTotalTable;
void refresh_x400pNearEndTotalTable(int);
FindVarMethod var_x400pFarEndCurrentTable;
struct x400pFarEndCurrentTable_data *x400pFarEndCurrentTable_create(void);
struct x400pFarEndCurrentTable_data *x400pFarEndCurrentTable_duplicate(struct x400pFarEndCurrentTable_data *);
int x400pFarEndCurrentTable_destroy(struct x400pFarEndCurrentTable_data **);
int x400pFarEndCurrentTable_add(struct x400pFarEndCurrentTable_data *);
int x400pFarEndCurrentTable_del(struct x400pFarEndCurrentTable_data *);
void parse_x400pFarEndCurrentTable(const char *, char *);
SNMPCallback store_x400pFarEndCurrentTable;
void refresh_x400pFarEndCurrentTable(int);
FindVarMethod var_x400pFarEndIntervalTable;
struct x400pFarEndIntervalTable_data *x400pFarEndIntervalTable_create(void);
struct x400pFarEndIntervalTable_data *x400pFarEndIntervalTable_duplicate(struct x400pFarEndIntervalTable_data *);
int x400pFarEndIntervalTable_destroy(struct x400pFarEndIntervalTable_data **);
int x400pFarEndIntervalTable_add(struct x400pFarEndIntervalTable_data *);
int x400pFarEndIntervalTable_del(struct x400pFarEndIntervalTable_data *);
void parse_x400pFarEndIntervalTable(const char *, char *);
SNMPCallback store_x400pFarEndIntervalTable;
void refresh_x400pFarEndIntervalTable(int);
FindVarMethod var_x400pFarEndTotalTable;
struct x400pFarEndTotalTable_data *x400pFarEndTotalTable_create(void);
struct x400pFarEndTotalTable_data *x400pFarEndTotalTable_duplicate(struct x400pFarEndTotalTable_data *);
int x400pFarEndTotalTable_destroy(struct x400pFarEndTotalTable_data **);
int x400pFarEndTotalTable_add(struct x400pFarEndTotalTable_data *);
int x400pFarEndTotalTable_del(struct x400pFarEndTotalTable_data *);
void parse_x400pFarEndTotalTable(const char *, char *);
SNMPCallback store_x400pFarEndTotalTable;
void refresh_x400pFarEndTotalTable(int);

WriteMethod write_x400pSyncSpanId;
WriteMethod write_x400pSyncRowStatus;
WriteMethod write_x400pDrivRowStatus;
WriteMethod write_x400pCardSpanType;
WriteMethod write_x400pCardMode;
WriteMethod write_x400pCardSyncMaster;
WriteMethod write_x400pCardSyncSource;
WriteMethod write_x400pCardSyncGroup;
WriteMethod write_x400pCardAdministrativeState;
WriteMethod write_x400pCardAlarmStatus;
WriteMethod write_x400pCardControlStatus;
WriteMethod write_x400pSpanName;
WriteMethod write_x400pSpanDevice;
WriteMethod write_x400pSpanEquipmentId;
WriteMethod write_x400pSpanType;
WriteMethod write_x400pSpanNumber;
WriteMethod write_x400pSpanMode;
WriteMethod write_x400pSpanCrc;
WriteMethod write_x400pSpanClocking;
WriteMethod write_x400pSpanPriority;
WriteMethod write_x400pSpanCoding;
WriteMethod write_x400pSpanFraming;
WriteMethod write_x400pSpanLineImpedance;
WriteMethod write_x400pSpanLineMode;
WriteMethod write_x400pSpanLineLength;
WriteMethod write_x400pSpanLineAttenuation;
WriteMethod write_x400pSpanLineGain;
WriteMethod write_x400pSpanLineDelay;
WriteMethod write_x400pSpanTxLevel;
WriteMethod write_x400pSpanRxLevel;
WriteMethod write_x400pSpanAlarmSettleTime;
WriteMethod write_x400pSpanLineCodeTime;
WriteMethod write_x400pSpanPrimary;
WriteMethod write_x400pSpanDataLink;
WriteMethod write_x400pSpanLineCode;
WriteMethod write_x400pSpanAlarmSeverityMappingProfile;
WriteMethod write_x400pSpanAdministrativeState;
WriteMethod write_x400pSpanAlarmStatus;
WriteMethod write_x400pSpanControlStatus;
WriteMethod write_x400pSpanReceiveThreshold;
WriteMethod write_x400pSpanRowStatus;
WriteMethod write_x400pBertMode;
WriteMethod write_x400pBertSelect;
WriteMethod write_x400pBertPattern;
WriteMethod write_x400pChanType;
WriteMethod write_x400pChanFormat;
WriteMethod write_x400pChanRate;
WriteMethod write_x400pChanMode;
WriteMethod write_x400pChanAdministrativeState;
WriteMethod write_x400pChanControlStatus;
WriteMethod write_x400pChanAlarmStatus;
WriteMethod write_x400pXconCardIndex;
WriteMethod write_x400pXconSpanIndex;
WriteMethod write_x400pXconChanIndex;
WriteMethod write_x400pXconType;
WriteMethod write_x400pXconStorageType;
WriteMethod write_x400pXconRowStatus;
#endif				/* __LOCAL_X400PMIB_H__ */
