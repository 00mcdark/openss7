/*****************************************************************************

 @(#) $Id$

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2011  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 -----------------------------------------------------------------------------

 Last Modified $Date$ by $Author$

 -----------------------------------------------------------------------------

 $Log$
 *****************************************************************************/

#ifndef __LOCAL_MEGACORINGINGMIB_H__
#define __LOCAL_MEGACORINGINGMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct megacoRingingMIB_data {
	uint megacoRingingMIB_request;
	long mgcoRingingCadenceNextGroupId;	/* ReadWrite */
};
struct mgcoRingingPatternTable_data {
	uint mgcoRingingPatternTable_request;
	uint mgcoRingingPatternTable_refs;
	ulong mgcoRingingPatternId;	/* NoAccess */
	ulong mgcoRingingCadenceGroupId;	/* Create */
	uint8_t *mgcoRingingPatternName;	/* Create */
	size_t mgcoRingingPatternNameLen;
	long mgcoRingingPatternRowStatus;	/* Create */
};
struct mgcoRingingCadenceGroupTable_data {
	uint mgcoRingingCadenceGroupTable_request;
	uint mgcoRingingCadenceGroupTable_refs;
	ulong mgcoRingingCadenceGroupId;	/* Create */
	ulong mgcoRingingCadenceGroupIndex;	/* NoAccess */
	uint8_t *mgcoRingingCadenceGroupName;	/* Create */
	size_t mgcoRingingCadenceGroupNameLen;
	long mgcoRingingCadenceGroupRef;	/* Create */
	long mgcoRingingCadenceGroupRingingMinDuration;	/* Create */
	long mgcoRingingCadenceGroupRingingNomDuration;	/* Create */
	long mgcoRingingCadenceGroupRingingMaxDuration;	/* Create */
	long mgcoRingingCadenceGroupSilentMinDuration;	/* Create */
	long mgcoRingingCadenceGroupSilentNomDuration;	/* Create */
	long mgcoRingingCadenceGroupSilentMaxDuration;	/* Create */
	long mgcoRingingCadenceGroupRowStatus;	/* Create */
};

/* storage declarations */
extern struct megacoRingingMIB_data *megacoRingingMIBStorage;
extern struct header_complex_index *mgcoRingingPatternTableStorage;
extern struct header_complex_index *mgcoRingingCadenceGroupTableStorage;

/* enum definitions from the covered mib sections */

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid mgcoRingingProperty_oid[10];
extern oid mgcoRingingCompliance_oid[10];
extern oid mgcoRingingPatternSetGrp_oid[10];
extern oid mgcoRingingCadenceGroupGrp_oid[10];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_megacoRingingMIB(void);
void deinit_megacoRingingMIB(void);
int term_megacoRingingMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_megacoRingingMIB;
void parse_megacoRingingMIB(const char *, char *);
SNMPCallback store_megacoRingingMIB;
void refresh_megacoRingingMIB(int);
FindVarMethod var_mgcoRingingPatternTable;
struct mgcoRingingPatternTable_data *mgcoRingingPatternTable_create(void);
struct mgcoRingingPatternTable_data *mgcoRingingPatternTable_duplicate(struct mgcoRingingPatternTable_data *);
int mgcoRingingPatternTable_destroy(struct mgcoRingingPatternTable_data **);
int mgcoRingingPatternTable_add(struct mgcoRingingPatternTable_data *);
int mgcoRingingPatternTable_del(struct mgcoRingingPatternTable_data *);
void parse_mgcoRingingPatternTable(const char *, char *);
SNMPCallback store_mgcoRingingPatternTable;
void refresh_mgcoRingingPatternTable(int);
FindVarMethod var_mgcoRingingCadenceGroupTable;
struct mgcoRingingCadenceGroupTable_data *mgcoRingingCadenceGroupTable_create(void);
struct mgcoRingingCadenceGroupTable_data *mgcoRingingCadenceGroupTable_duplicate(struct mgcoRingingCadenceGroupTable_data *);
int mgcoRingingCadenceGroupTable_destroy(struct mgcoRingingCadenceGroupTable_data **);
int mgcoRingingCadenceGroupTable_add(struct mgcoRingingCadenceGroupTable_data *);
int mgcoRingingCadenceGroupTable_del(struct mgcoRingingCadenceGroupTable_data *);
void parse_mgcoRingingCadenceGroupTable(const char *, char *);
SNMPCallback store_mgcoRingingCadenceGroupTable;
void refresh_mgcoRingingCadenceGroupTable(int);

WriteMethod write_mgcoRingingCadenceGroupId;
WriteMethod write_mgcoRingingPatternName;
WriteMethod write_mgcoRingingPatternRowStatus;
WriteMethod write_mgcoRingingCadenceNextGroupId;
WriteMethod write_mgcoRingingCadenceGroupId;
WriteMethod write_mgcoRingingCadenceGroupName;
WriteMethod write_mgcoRingingCadenceGroupRef;
WriteMethod write_mgcoRingingCadenceGroupRingingMinDuration;
WriteMethod write_mgcoRingingCadenceGroupRingingNomDuration;
WriteMethod write_mgcoRingingCadenceGroupRingingMaxDuration;
WriteMethod write_mgcoRingingCadenceGroupSilentMinDuration;
WriteMethod write_mgcoRingingCadenceGroupSilentNomDuration;
WriteMethod write_mgcoRingingCadenceGroupSilentMaxDuration;
WriteMethod write_mgcoRingingCadenceGroupRowStatus;
#endif				/* __LOCAL_MEGACORINGINGMIB_H__ */
