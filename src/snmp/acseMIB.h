/*****************************************************************************

 @(#) src/snmp/acseMIB.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_ACSEMIB_H__
#define __LOCAL_ACSEMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct acseMIB_data {
	struct acseMIB_data *acseMIB_old;
	uint acseMIB_rsvs;
	uint acseMIB_tsts;
	uint acseMIB_sets;
	uint acseMIB_request;
};
struct acseTable_data {
	struct acseTable_data *acseTable_old;
	uint acseTable_rsvs;
	uint acseTable_tsts;
	uint acseTable_sets;
	uint acseTable_request;
	uint acseTable_refs;
	uint acseTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	uint8_t *applicationProcessId;	/* NoAccess */
	size_t applicationProcessIdLen;
	uint8_t *asoEntityId;		/* NoAccess */
	size_t asoEntityIdLen;
	uint8_t *asoId;			/* NoAccess */
	size_t asoIdLen;
	uint8_t *acseFUinitiator;	/* ReadOnly */
	size_t acseFUinitiatorLen;
	uint8_t *acseEditionsSupported;	/* ReadOnly */
	size_t acseEditionsSupportedLen;
	uint8_t *acseFUresponder;	/* ReadOnly */
	size_t acseFUresponderLen;
};
struct acseAssociationTable_data {
	struct acseAssociationTable_data *acseAssociationTable_old;
	uint acseAssociationTable_rsvs;
	uint acseAssociationTable_tsts;
	uint acseAssociationTable_sets;
	uint acseAssociationTable_request;
	uint acseAssociationTable_refs;
	uint acseAssociationTable_id;
	ulong applicationSubsystemId;	/* NoAccess */
	uint8_t *apInvocationId;	/* NoAccess */
	size_t apInvocationIdLen;
	uint8_t *asoInvocationId;	/* NoAccess */
	size_t asoInvocationIdLen;
	uint8_t *acseAssociationCallingAEtitle;	/* NoAccess */
	size_t acseAssociationCallingAEtitleLen;
	uint8_t *acseAssociationFUinUse;	/* ReadOnly */
	size_t acseAssociationFUinUseLen;
	oid *acseAssociationApplContextInUse;	/* ReadOnly */
	size_t acseAssociationApplContextInUseLen;
	oid *acseAssociationParentAsoinvoc;	/* ReadOnly */
	size_t acseAssociationParentAsoinvocLen;
	uint8_t *acseAssociationCalledAEtitle;	/* ReadOnly */
	size_t acseAssociationCalledAEtitleLen;
	long acseAssociationRowStatus;	/* Create */
};
struct apInvocationTable_data {
	struct apInvocationTable_data *apInvocationTable_old;
	uint apInvocationTable_rsvs;
	uint apInvocationTable_tsts;
	uint apInvocationTable_sets;
	uint apInvocationTable_request;
	uint apInvocationTable_refs;
	uint apInvocationTable_id;
	ulong applicationSubsystemId;	/* NoAccess */
	uint8_t *apInvocationId;	/* NoAccess */
	size_t apInvocationIdLen;
	oid *apInvocationOfPointer;	/* NoAccess */
	size_t apInvocationOfPointerLen;
	long apInvocationRowStatus;	/* Create */
};
struct applicationEntityInvocationTable_data {
	struct applicationEntityInvocationTable_data *applicationEntityInvocationTable_old;
	uint applicationEntityInvocationTable_rsvs;
	uint applicationEntityInvocationTable_tsts;
	uint applicationEntityInvocationTable_sets;
	uint applicationEntityInvocationTable_request;
	uint applicationEntityInvocationTable_refs;
	uint applicationEntityInvocationTable_id;
	ulong applicationSubsystemId;	/* NoAccess */
	uint8_t *apInvocationId;	/* NoAccess */
	size_t apInvocationIdLen;
	oid *applicationEntityInvocationUnderlyingConnectionNames;	/* NoAccess */
	size_t applicationEntityInvocationUnderlyingConnectionNamesLen;
	oid *applicationEntityInvocationSupportedConnectionNames;	/* NoAccess */
	size_t applicationEntityInvocationSupportedConnectionNamesLen;
	oid *applicationEntityInvocationInvocationOfPointer;	/* NoAccess */
	size_t applicationEntityInvocationInvocationOfPointerLen;
	long applicationEntityInvocationRowStatus;	/* Create */
};
struct applicationSubsystemTable_data {
	struct applicationSubsystemTable_data *applicationSubsystemTable_old;
	uint applicationSubsystemTable_rsvs;
	uint applicationSubsystemTable_tsts;
	uint applicationSubsystemTable_sets;
	uint applicationSubsystemTable_request;
	uint applicationSubsystemTable_refs;
	uint applicationSubsystemTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	ulong applicationSubsystemId;	/* NoAccess */
};
struct asoTable_data {
	struct asoTable_data *asoTable_old;
	uint asoTable_rsvs;
	uint asoTable_tsts;
	uint asoTable_sets;
	uint asoTable_request;
	uint asoTable_refs;
	uint asoTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	uint8_t *applicationProcessId;	/* NoAccess */
	size_t applicationProcessIdLen;
	uint8_t *asoEntityId;		/* NoAccess */
	size_t asoEntityIdLen;
	uint8_t *asoId;			/* NoAccess */
	size_t asoIdLen;
	oid *asoTitle;			/* NoAccess */
	size_t asoTitleLen;
	oid *asoQualifier;		/* NoAccess */
	size_t asoQualifierLen;
	long asoOperationalState;	/* NoAccess */
	long asoRowStatus;		/* Create */
};
struct asoEntityTable_data {
	struct asoEntityTable_data *asoEntityTable_old;
	uint asoEntityTable_rsvs;
	uint asoEntityTable_tsts;
	uint asoEntityTable_sets;
	uint asoEntityTable_request;
	uint asoEntityTable_refs;
	uint asoEntityTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	uint8_t *applicationProcessId;	/* NoAccess */
	size_t applicationProcessIdLen;
	uint8_t *asoEntityId;		/* NoAccess */
	size_t asoEntityIdLen;
	uint8_t *asoEntityLocalSapNames;	/* NoAccess */
	size_t asoEntityLocalSapNamesLen;
	long asoEntityOperationalState;	/* NoAccess */
	oid *asoEntityTitle;		/* NoAccess */
	size_t asoEntityTitleLen;
	oid *asoEntityQualifier;	/* NoAccess */
	size_t asoEntityQualifierLen;
	uint8_t *asoEntityApplicationContextNameSupport;	/* NoAccess */
	size_t asoEntityApplicationContextNameSupportLen;
	long asoEntityRowStatus;	/* Create */
};
struct asoInvocationTable_data {
	struct asoInvocationTable_data *asoInvocationTable_old;
	uint asoInvocationTable_rsvs;
	uint asoInvocationTable_tsts;
	uint asoInvocationTable_sets;
	uint asoInvocationTable_request;
	uint asoInvocationTable_refs;
	uint asoInvocationTable_id;
	ulong applicationSubsystemId;	/* NoAccess */
	uint8_t *apInvocationId;	/* NoAccess */
	size_t apInvocationIdLen;
	uint8_t *asoInvocationId;	/* NoAccess */
	size_t asoInvocationIdLen;
	oid *asoInvocationOfPointer;	/* NoAccess */
	size_t asoInvocationOfPointerLen;
	long asoInvocationRowStatus;	/* Create */
};
struct monoULConnectionTable_data {
	struct monoULConnectionTable_data *monoULConnectionTable_old;
	uint monoULConnectionTable_rsvs;
	uint monoULConnectionTable_tsts;
	uint monoULConnectionTable_sets;
	uint monoULConnectionTable_request;
	uint monoULConnectionTable_refs;
	uint monoULConnectionTable_id;
	ulong applicationSubsystemId;	/* NoAccess */
	uint8_t *apInvocationId;	/* NoAccess */
	size_t apInvocationIdLen;
	long monoULConnectionRowStatus;	/* Create */
};
struct monoULEntityTable_data {
	struct monoULEntityTable_data *monoULEntityTable_old;
	uint monoULEntityTable_rsvs;
	uint monoULEntityTable_tsts;
	uint monoULEntityTable_sets;
	uint monoULEntityTable_request;
	uint monoULEntityTable_refs;
	uint monoULEntityTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	ulong monoUlEntityId;		/* NoAccess */
};
struct monolithicUpperLayerSubsystemTable_data {
	struct monolithicUpperLayerSubsystemTable_data *monolithicUpperLayerSubsystemTable_old;
	uint monolithicUpperLayerSubsystemTable_rsvs;
	uint monolithicUpperLayerSubsystemTable_tsts;
	uint monolithicUpperLayerSubsystemTable_sets;
	uint monolithicUpperLayerSubsystemTable_request;
	uint monolithicUpperLayerSubsystemTable_refs;
	uint monolithicUpperLayerSubsystemTable_id;
	uint8_t *monolithicUpperLayerSubsystemId;	/* NoAccess */
	size_t monolithicUpperLayerSubsystemIdLen;
	long monolithicUpperLayerSubssytemRowStatus;	/* Create */
};
struct pSapTable_data {
	struct pSapTable_data *pSapTable_old;
	uint pSapTable_rsvs;
	uint pSapTable_tsts;
	uint pSapTable_sets;
	uint pSapTable_request;
	uint pSapTable_refs;
	uint pSapTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	uint8_t *pSapId;		/* NoAccess */
	size_t pSapIdLen;
	uint8_t *pSapSap1Address;	/* NoAccess */
	size_t pSapSap1AddressLen;
	uint8_t *pSapUserEntityNames;	/* NoAccess */
	size_t pSapUserEntityNamesLen;
	long pSapRowStatus;		/* Create */
};
struct presentationConnectionTable_data {
	struct presentationConnectionTable_data *presentationConnectionTable_old;
	uint presentationConnectionTable_rsvs;
	uint presentationConnectionTable_tsts;
	uint presentationConnectionTable_sets;
	uint presentationConnectionTable_request;
	uint presentationConnectionTable_refs;
	uint presentationConnectionTable_id;
	uint8_t *presentationSubsystemId;	/* NoAccess */
	size_t presentationSubsystemIdLen;
	uint8_t *presentationEntityId;	/* NoAccess */
	size_t presentationEntityIdLen;
	uint8_t *presentationCopmId;	/* NoAccess */
	size_t presentationCopmIdLen;
	uint8_t *presentationConnectionId;	/* NoAccess */
	size_t presentationConnectionIdLen;
	uint8_t *presentationConnectionUnderlyingConnectionNames;	/* NoAccess */
	size_t presentationConnectionUnderlyingConnectionNamesLen;
	uint8_t *presentationConnectionSupportedConnectionNames;	/* NoAccess */
	size_t presentationConnectionSupportedConnectionNamesLen;
	uint8_t *presentationConnectionPresFUinUse;	/* NoAccess */
	size_t presentationConnectionPresFUinUseLen;
	oid *presentationConnectionPresContextInUse;	/* NoAccess */
	size_t presentationConnectionPresContextInUseLen;
	long presentationCOnnectionRowStatus;	/* Create */
};
struct presentationCopmTable_data {
	struct presentationCopmTable_data *presentationCopmTable_old;
	uint presentationCopmTable_rsvs;
	uint presentationCopmTable_tsts;
	uint presentationCopmTable_sets;
	uint presentationCopmTable_request;
	uint presentationCopmTable_refs;
	uint presentationCopmTable_id;
	uint8_t *presentationSubsystemId;	/* NoAccess */
	size_t presentationSubsystemIdLen;
	uint8_t *presentationEntityId;	/* NoAccess */
	size_t presentationEntityIdLen;
	uint8_t *presentationCopmId;	/* NoAccess */
	size_t presentationCopmIdLen;
	long presentationCopmOperationalState;	/* NoAccess */
	uint8_t *presentationCopmPresFUsupport;	/* NoAccess */
	size_t presentationCopmPresFUsupportLen;
	uint8_t *presentationCopmabstrSyntaxSupport;	/* NoAccess */
	size_t presentationCopmabstrSyntaxSupportLen;
	uint8_t *presentationCopmtransSyntaxSupport;	/* NoAccess */
	size_t presentationCopmtransSyntaxSupportLen;
	long presentationCopmRowStatus;	/* Create */
};
struct presentationEntityTable_data {
	struct presentationEntityTable_data *presentationEntityTable_old;
	uint presentationEntityTable_rsvs;
	uint presentationEntityTable_tsts;
	uint presentationEntityTable_sets;
	uint presentationEntityTable_request;
	uint presentationEntityTable_refs;
	uint presentationEntityTable_id;
	uint8_t *presentationSubsystemId;	/* NoAccess */
	size_t presentationSubsystemIdLen;
	uint8_t *presentationEntityId;	/* NoAccess */
	size_t presentationEntityIdLen;
	uint8_t *presentationEntityLocalSapNames;	/* NoAccess */
	size_t presentationEntityLocalSapNamesLen;
	long presentationEntityOperationalState;	/* NoAccess */
	long presentationEntityRowStatus;	/* Create */
};
struct presentationSubsystemTable_data {
	struct presentationSubsystemTable_data *presentationSubsystemTable_old;
	uint presentationSubsystemTable_rsvs;
	uint presentationSubsystemTable_tsts;
	uint presentationSubsystemTable_sets;
	uint presentationSubsystemTable_request;
	uint presentationSubsystemTable_refs;
	uint presentationSubsystemTable_id;
	uint8_t *presentationSubsystemId;	/* NoAccess */
	size_t presentationSubsystemIdLen;
	long presentationSubsystemRowStatus;	/* Create */
};
struct sSapTable_data {
	struct sSapTable_data *sSapTable_old;
	uint sSapTable_rsvs;
	uint sSapTable_tsts;
	uint sSapTable_sets;
	uint sSapTable_request;
	uint sSapTable_refs;
	uint sSapTable_id;
	uint8_t *subsystemId;		/* ReadOnly */
	size_t subsystemIdLen;
	uint8_t *sSapId;		/* NoAccess */
	size_t sSapIdLen;
	uint8_t *sSapSap1Address;	/* NoAccess */
	size_t sSapSap1AddressLen;
	uint8_t *sSapUserEntityNames;	/* NoAccess */
	size_t sSapUserEntityNamesLen;
	long sSapRowStatus;		/* Create */
};
struct sessionConnectionTable_data {
	struct sessionConnectionTable_data *sessionConnectionTable_old;
	uint sessionConnectionTable_rsvs;
	uint sessionConnectionTable_tsts;
	uint sessionConnectionTable_sets;
	uint sessionConnectionTable_request;
	uint sessionConnectionTable_refs;
	uint sessionConnectionTable_id;
	uint8_t *sessionSubsystemId;	/* NoAccess */
	size_t sessionSubsystemIdLen;
	uint8_t *sessionEntityId;	/* NoAccess */
	size_t sessionEntityIdLen;
	uint8_t *sessionCopmId;		/* NoAccess */
	size_t sessionCopmIdLen;
	uint8_t *sessionConnectionId;	/* NoAccess */
	size_t sessionConnectionIdLen;
	uint8_t *sessionConnectionUnderlyingConnectionNames;	/* NoAccess */
	size_t sessionConnectionUnderlyingConnectionNamesLen;
	uint8_t *sessionConnectionSupportedConnectionNames;	/* NoAccess */
	size_t sessionConnectionSupportedConnectionNamesLen;
	uint8_t *sessionConnectionSessProtInUse;	/* NoAccess */
	size_t sessionConnectionSessProtInUseLen;
	uint8_t *sessionConnectionSessFUinUse;	/* NoAccess */
	size_t sessionConnectionSessFUinUseLen;
	ulong sessionConnectionMaxTSDUsize;	/* NoAccess */
	long sessionCOnnectionRowStatus;	/* Create */
};
struct sessionCopmTable_data {
	struct sessionCopmTable_data *sessionCopmTable_old;
	uint sessionCopmTable_rsvs;
	uint sessionCopmTable_tsts;
	uint sessionCopmTable_sets;
	uint sessionCopmTable_request;
	uint sessionCopmTable_refs;
	uint sessionCopmTable_id;
	uint8_t *sessionSubsystemId;	/* NoAccess */
	size_t sessionSubsystemIdLen;
	uint8_t *sessionEntityId;	/* NoAccess */
	size_t sessionEntityIdLen;
	uint8_t *sessionCopmId;		/* NoAccess */
	size_t sessionCopmIdLen;
	long sessionCopmOperationalState;	/* NoAccess */
	uint8_t *sessionCopmSessProtVerSupport;	/* NoAccess */
	size_t sessionCopmSessProtVerSupportLen;
	uint8_t *sessionCopmSessFUsupport;	/* NoAccess */
	size_t sessionCopmSessFUsupportLen;
	uint8_t *sessionCopmOptSupport;	/* NoAccess */
	size_t sessionCopmOptSupportLen;
	long sessionCopmRowStatus;	/* Create */
};
struct sessionEntityTable_data {
	struct sessionEntityTable_data *sessionEntityTable_old;
	uint sessionEntityTable_rsvs;
	uint sessionEntityTable_tsts;
	uint sessionEntityTable_sets;
	uint sessionEntityTable_request;
	uint sessionEntityTable_refs;
	uint sessionEntityTable_id;
	uint8_t *sessionSubsystemId;	/* NoAccess */
	size_t sessionSubsystemIdLen;
	uint8_t *sessionEntityId;	/* NoAccess */
	size_t sessionEntityIdLen;
	uint8_t *sessionEntityLocalSapNames;	/* NoAccess */
	size_t sessionEntityLocalSapNamesLen;
	long sessionEntityOperationalState;	/* NoAccess */
	long sessionEntityRowStatus;	/* Create */
};
struct sessionSubsystemTable_data {
	struct sessionSubsystemTable_data *sessionSubsystemTable_old;
	uint sessionSubsystemTable_rsvs;
	uint sessionSubsystemTable_tsts;
	uint sessionSubsystemTable_sets;
	uint sessionSubsystemTable_request;
	uint sessionSubsystemTable_refs;
	uint sessionSubsystemTable_id;
	uint8_t *sessionSubsystemId;	/* NoAccess */
	size_t sessionSubsystemIdLen;
	long sessionSubsystemRowStatus;	/* Create */
};
struct acseEntityTable_data {
	struct acseEntityTable_data *acseEntityTable_old;
	uint acseEntityTable_rsvs;
	uint acseEntityTable_tsts;
	uint acseEntityTable_sets;
	uint acseEntityTable_request;
	uint acseEntityTable_refs;
	uint acseEntityTable_id;
	ulong mtpMsId;			/* NoAccess */
	ulong acseEntityId;		/* NoAccess */
	long acseEntityRowStatus;	/* Create */
};
struct acseAccessPointTable_data {
	struct acseAccessPointTable_data *acseAccessPointTable_old;
	uint acseAccessPointTable_rsvs;
	uint acseAccessPointTable_tsts;
	uint acseAccessPointTable_sets;
	uint acseAccessPointTable_request;
	uint acseAccessPointTable_refs;
	uint acseAccessPointTable_id;
	ulong mtpMsId;			/* NoAccess */
	ulong acseEntityId;		/* NoAccess */
	ulong acseAccessPointId;	/* NoAccess */
	long acseAccessPointRowStatus;	/* Create */
};
struct acseLinkageTable_data {
	struct acseLinkageTable_data *acseLinkageTable_old;
	uint acseLinkageTable_rsvs;
	uint acseLinkageTable_tsts;
	uint acseLinkageTable_sets;
	uint acseLinkageTable_request;
	uint acseLinkageTable_refs;
	uint acseLinkageTable_id;
	ulong mtpMsId;			/* NoAccess */
	uint8_t *sccpNetworkEntityId;	/* NoAccess */
	size_t sccpNetworkEntityIdLen;
	long acseLinkageRowStatus;	/* Create */
};

/* storage declarations */
extern struct acseMIB_data *acseMIBStorage;
extern struct header_complex_index *acseTableStorage;
extern struct header_complex_index *acseAssociationTableStorage;
extern struct header_complex_index *apInvocationTableStorage;
extern struct header_complex_index *applicationEntityInvocationTableStorage;
extern struct header_complex_index *applicationSubsystemTableStorage;
extern struct header_complex_index *asoTableStorage;
extern struct header_complex_index *asoEntityTableStorage;
extern struct header_complex_index *asoInvocationTableStorage;
extern struct header_complex_index *monoULConnectionTableStorage;
extern struct header_complex_index *monoULEntityTableStorage;
extern struct header_complex_index *monolithicUpperLayerSubsystemTableStorage;
extern struct header_complex_index *pSapTableStorage;
extern struct header_complex_index *presentationConnectionTableStorage;
extern struct header_complex_index *presentationCopmTableStorage;
extern struct header_complex_index *presentationEntityTableStorage;
extern struct header_complex_index *presentationSubsystemTableStorage;
extern struct header_complex_index *sSapTableStorage;
extern struct header_complex_index *sessionConnectionTableStorage;
extern struct header_complex_index *sessionCopmTableStorage;
extern struct header_complex_index *sessionEntityTableStorage;
extern struct header_complex_index *sessionSubsystemTableStorage;
extern struct header_complex_index *acseEntityTableStorage;
extern struct header_complex_index *acseAccessPointTableStorage;
extern struct header_complex_index *acseLinkageTableStorage;

/* enum definitions from the covered mib sections */

#define ACSEFUINITIATOR_AUTHENTICATION           0
#define ACSEFUINITIATOR_APPLICATIONCONTEXTNEGOTIATION 1

#define ACSEEDITIONSSUPPORTED_VERSION1           0

#define ACSEFURESPONDER_AUTHENTICATION           0
#define ACSEFURESPONDER_APPLICATIONCONTEXTNEGOTIATION 1

#define ACSEASSOCIATIONFUINUSE_AUTHENTICATION    0
#define ACSEASSOCIATIONFUINUSE_APPLICATIONCONTEXTNEGOTIATION 1

#define ASOOPERATIONALSTATE_DISABLED             0
#define ASOOPERATIONALSTATE_ENABLED              1

#define ASOENTITYOPERATIONALSTATE_DISABLED       0
#define ASOENTITYOPERATIONALSTATE_ENABLED        1

#define PRESENTATIONCONNECTIONPRESFUINUSE_UNKNOWN 0

#define PRESENTATIONCOPMOPERATIONALSTATE_DISABLED 0
#define PRESENTATIONCOPMOPERATIONALSTATE_ENABLED 1

#define PRESENTATIONCOPMPRESFUSUPPORT_UNKNOWN    0

#define PRESENTATIONENTITYOPERATIONALSTATE_DISABLED 0
#define PRESENTATIONENTITYOPERATIONALSTATE_ENABLED 1

#define SESSIONCONNECTIONSESSPROTINUSE_UNKNOWN   0

#define SESSIONCONNECTIONSESSFUINUSE_UNKNOWN     0

#define SESSIONCOPMOPERATIONALSTATE_DISABLED     0
#define SESSIONCOPMOPERATIONALSTATE_ENABLED      1

#define SESSIONCOPMSESSPROTVERSUPPORT_UNKNOWN    0

#define SESSIONCOPMSESSFUSUPPORT_UNKNOWN         0

#define SESSIONCOPMOPTSUPPORT_UNKNOWN            0

#define SESSIONENTITYOPERATIONALSTATE_DISABLED   0
#define SESSIONENTITYOPERATIONALSTATE_ENABLED    1

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid acseBasicGroup_oid[12];
extern oid acseBasicCompliance_oid[12];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_acseMIB(void);
void deinit_acseMIB(void);
int term_acseMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_acseMIB;
struct acseMIB_data *acseMIB_create(void);
struct acseMIB_data *acseMIB_duplicate(struct acseMIB_data *);
int acseMIB_destroy(struct acseMIB_data **);
int acseMIB_add(struct acseMIB_data *);
void parse_acseMIB(const char *, char *);
SNMPCallback store_acseMIB;
void refresh_acseMIB(int);
FindVarMethod var_acseTable;
struct acseTable_data *acseTable_create(void);
struct acseTable_data *acseTable_duplicate(struct acseTable_data *);
int acseTable_destroy(struct acseTable_data **);
int acseTable_add(struct acseTable_data *);
int acseTable_del(struct acseTable_data *);
void parse_acseTable(const char *, char *);
SNMPCallback store_acseTable;
void refresh_acseTable(int);
FindVarMethod var_acseAssociationTable;
struct acseAssociationTable_data *acseAssociationTable_create(void);
struct acseAssociationTable_data *acseAssociationTable_duplicate(struct acseAssociationTable_data *);
int acseAssociationTable_destroy(struct acseAssociationTable_data **);
int acseAssociationTable_add(struct acseAssociationTable_data *);
int acseAssociationTable_del(struct acseAssociationTable_data *);
void parse_acseAssociationTable(const char *, char *);
SNMPCallback store_acseAssociationTable;
void refresh_acseAssociationTable(int);
FindVarMethod var_apInvocationTable;
struct apInvocationTable_data *apInvocationTable_create(void);
struct apInvocationTable_data *apInvocationTable_duplicate(struct apInvocationTable_data *);
int apInvocationTable_destroy(struct apInvocationTable_data **);
int apInvocationTable_add(struct apInvocationTable_data *);
int apInvocationTable_del(struct apInvocationTable_data *);
void parse_apInvocationTable(const char *, char *);
SNMPCallback store_apInvocationTable;
void refresh_apInvocationTable(int);
FindVarMethod var_applicationEntityInvocationTable;
struct applicationEntityInvocationTable_data *applicationEntityInvocationTable_create(void);
struct applicationEntityInvocationTable_data *applicationEntityInvocationTable_duplicate(struct applicationEntityInvocationTable_data *);
int applicationEntityInvocationTable_destroy(struct applicationEntityInvocationTable_data **);
int applicationEntityInvocationTable_add(struct applicationEntityInvocationTable_data *);
int applicationEntityInvocationTable_del(struct applicationEntityInvocationTable_data *);
void parse_applicationEntityInvocationTable(const char *, char *);
SNMPCallback store_applicationEntityInvocationTable;
void refresh_applicationEntityInvocationTable(int);
FindVarMethod var_applicationSubsystemTable;
struct applicationSubsystemTable_data *applicationSubsystemTable_create(void);
struct applicationSubsystemTable_data *applicationSubsystemTable_duplicate(struct applicationSubsystemTable_data *);
int applicationSubsystemTable_destroy(struct applicationSubsystemTable_data **);
int applicationSubsystemTable_add(struct applicationSubsystemTable_data *);
int applicationSubsystemTable_del(struct applicationSubsystemTable_data *);
void parse_applicationSubsystemTable(const char *, char *);
SNMPCallback store_applicationSubsystemTable;
void refresh_applicationSubsystemTable(int);
FindVarMethod var_asoTable;
struct asoTable_data *asoTable_create(void);
struct asoTable_data *asoTable_duplicate(struct asoTable_data *);
int asoTable_destroy(struct asoTable_data **);
int asoTable_add(struct asoTable_data *);
int asoTable_del(struct asoTable_data *);
void parse_asoTable(const char *, char *);
SNMPCallback store_asoTable;
void refresh_asoTable(int);
FindVarMethod var_asoEntityTable;
struct asoEntityTable_data *asoEntityTable_create(void);
struct asoEntityTable_data *asoEntityTable_duplicate(struct asoEntityTable_data *);
int asoEntityTable_destroy(struct asoEntityTable_data **);
int asoEntityTable_add(struct asoEntityTable_data *);
int asoEntityTable_del(struct asoEntityTable_data *);
void parse_asoEntityTable(const char *, char *);
SNMPCallback store_asoEntityTable;
void refresh_asoEntityTable(int);
FindVarMethod var_asoInvocationTable;
struct asoInvocationTable_data *asoInvocationTable_create(void);
struct asoInvocationTable_data *asoInvocationTable_duplicate(struct asoInvocationTable_data *);
int asoInvocationTable_destroy(struct asoInvocationTable_data **);
int asoInvocationTable_add(struct asoInvocationTable_data *);
int asoInvocationTable_del(struct asoInvocationTable_data *);
void parse_asoInvocationTable(const char *, char *);
SNMPCallback store_asoInvocationTable;
void refresh_asoInvocationTable(int);
FindVarMethod var_monoULConnectionTable;
struct monoULConnectionTable_data *monoULConnectionTable_create(void);
struct monoULConnectionTable_data *monoULConnectionTable_duplicate(struct monoULConnectionTable_data *);
int monoULConnectionTable_destroy(struct monoULConnectionTable_data **);
int monoULConnectionTable_add(struct monoULConnectionTable_data *);
int monoULConnectionTable_del(struct monoULConnectionTable_data *);
void parse_monoULConnectionTable(const char *, char *);
SNMPCallback store_monoULConnectionTable;
void refresh_monoULConnectionTable(int);
FindVarMethod var_monoULEntityTable;
struct monoULEntityTable_data *monoULEntityTable_create(void);
struct monoULEntityTable_data *monoULEntityTable_duplicate(struct monoULEntityTable_data *);
int monoULEntityTable_destroy(struct monoULEntityTable_data **);
int monoULEntityTable_add(struct monoULEntityTable_data *);
int monoULEntityTable_del(struct monoULEntityTable_data *);
void parse_monoULEntityTable(const char *, char *);
SNMPCallback store_monoULEntityTable;
void refresh_monoULEntityTable(int);
FindVarMethod var_monolithicUpperLayerSubsystemTable;
struct monolithicUpperLayerSubsystemTable_data *monolithicUpperLayerSubsystemTable_create(void);
struct monolithicUpperLayerSubsystemTable_data *monolithicUpperLayerSubsystemTable_duplicate(struct monolithicUpperLayerSubsystemTable_data *);
int monolithicUpperLayerSubsystemTable_destroy(struct monolithicUpperLayerSubsystemTable_data **);
int monolithicUpperLayerSubsystemTable_add(struct monolithicUpperLayerSubsystemTable_data *);
int monolithicUpperLayerSubsystemTable_del(struct monolithicUpperLayerSubsystemTable_data *);
void parse_monolithicUpperLayerSubsystemTable(const char *, char *);
SNMPCallback store_monolithicUpperLayerSubsystemTable;
void refresh_monolithicUpperLayerSubsystemTable(int);
FindVarMethod var_pSapTable;
struct pSapTable_data *pSapTable_create(void);
struct pSapTable_data *pSapTable_duplicate(struct pSapTable_data *);
int pSapTable_destroy(struct pSapTable_data **);
int pSapTable_add(struct pSapTable_data *);
int pSapTable_del(struct pSapTable_data *);
void parse_pSapTable(const char *, char *);
SNMPCallback store_pSapTable;
void refresh_pSapTable(int);
FindVarMethod var_presentationConnectionTable;
struct presentationConnectionTable_data *presentationConnectionTable_create(void);
struct presentationConnectionTable_data *presentationConnectionTable_duplicate(struct presentationConnectionTable_data *);
int presentationConnectionTable_destroy(struct presentationConnectionTable_data **);
int presentationConnectionTable_add(struct presentationConnectionTable_data *);
int presentationConnectionTable_del(struct presentationConnectionTable_data *);
void parse_presentationConnectionTable(const char *, char *);
SNMPCallback store_presentationConnectionTable;
void refresh_presentationConnectionTable(int);
FindVarMethod var_presentationCopmTable;
struct presentationCopmTable_data *presentationCopmTable_create(void);
struct presentationCopmTable_data *presentationCopmTable_duplicate(struct presentationCopmTable_data *);
int presentationCopmTable_destroy(struct presentationCopmTable_data **);
int presentationCopmTable_add(struct presentationCopmTable_data *);
int presentationCopmTable_del(struct presentationCopmTable_data *);
void parse_presentationCopmTable(const char *, char *);
SNMPCallback store_presentationCopmTable;
void refresh_presentationCopmTable(int);
FindVarMethod var_presentationEntityTable;
struct presentationEntityTable_data *presentationEntityTable_create(void);
struct presentationEntityTable_data *presentationEntityTable_duplicate(struct presentationEntityTable_data *);
int presentationEntityTable_destroy(struct presentationEntityTable_data **);
int presentationEntityTable_add(struct presentationEntityTable_data *);
int presentationEntityTable_del(struct presentationEntityTable_data *);
void parse_presentationEntityTable(const char *, char *);
SNMPCallback store_presentationEntityTable;
void refresh_presentationEntityTable(int);
FindVarMethod var_presentationSubsystemTable;
struct presentationSubsystemTable_data *presentationSubsystemTable_create(void);
struct presentationSubsystemTable_data *presentationSubsystemTable_duplicate(struct presentationSubsystemTable_data *);
int presentationSubsystemTable_destroy(struct presentationSubsystemTable_data **);
int presentationSubsystemTable_add(struct presentationSubsystemTable_data *);
int presentationSubsystemTable_del(struct presentationSubsystemTable_data *);
void parse_presentationSubsystemTable(const char *, char *);
SNMPCallback store_presentationSubsystemTable;
void refresh_presentationSubsystemTable(int);
FindVarMethod var_sSapTable;
struct sSapTable_data *sSapTable_create(void);
struct sSapTable_data *sSapTable_duplicate(struct sSapTable_data *);
int sSapTable_destroy(struct sSapTable_data **);
int sSapTable_add(struct sSapTable_data *);
int sSapTable_del(struct sSapTable_data *);
void parse_sSapTable(const char *, char *);
SNMPCallback store_sSapTable;
void refresh_sSapTable(int);
FindVarMethod var_sessionConnectionTable;
struct sessionConnectionTable_data *sessionConnectionTable_create(void);
struct sessionConnectionTable_data *sessionConnectionTable_duplicate(struct sessionConnectionTable_data *);
int sessionConnectionTable_destroy(struct sessionConnectionTable_data **);
int sessionConnectionTable_add(struct sessionConnectionTable_data *);
int sessionConnectionTable_del(struct sessionConnectionTable_data *);
void parse_sessionConnectionTable(const char *, char *);
SNMPCallback store_sessionConnectionTable;
void refresh_sessionConnectionTable(int);
FindVarMethod var_sessionCopmTable;
struct sessionCopmTable_data *sessionCopmTable_create(void);
struct sessionCopmTable_data *sessionCopmTable_duplicate(struct sessionCopmTable_data *);
int sessionCopmTable_destroy(struct sessionCopmTable_data **);
int sessionCopmTable_add(struct sessionCopmTable_data *);
int sessionCopmTable_del(struct sessionCopmTable_data *);
void parse_sessionCopmTable(const char *, char *);
SNMPCallback store_sessionCopmTable;
void refresh_sessionCopmTable(int);
FindVarMethod var_sessionEntityTable;
struct sessionEntityTable_data *sessionEntityTable_create(void);
struct sessionEntityTable_data *sessionEntityTable_duplicate(struct sessionEntityTable_data *);
int sessionEntityTable_destroy(struct sessionEntityTable_data **);
int sessionEntityTable_add(struct sessionEntityTable_data *);
int sessionEntityTable_del(struct sessionEntityTable_data *);
void parse_sessionEntityTable(const char *, char *);
SNMPCallback store_sessionEntityTable;
void refresh_sessionEntityTable(int);
FindVarMethod var_sessionSubsystemTable;
struct sessionSubsystemTable_data *sessionSubsystemTable_create(void);
struct sessionSubsystemTable_data *sessionSubsystemTable_duplicate(struct sessionSubsystemTable_data *);
int sessionSubsystemTable_destroy(struct sessionSubsystemTable_data **);
int sessionSubsystemTable_add(struct sessionSubsystemTable_data *);
int sessionSubsystemTable_del(struct sessionSubsystemTable_data *);
void parse_sessionSubsystemTable(const char *, char *);
SNMPCallback store_sessionSubsystemTable;
void refresh_sessionSubsystemTable(int);
FindVarMethod var_acseEntityTable;
struct acseEntityTable_data *acseEntityTable_create(void);
struct acseEntityTable_data *acseEntityTable_duplicate(struct acseEntityTable_data *);
int acseEntityTable_destroy(struct acseEntityTable_data **);
int acseEntityTable_add(struct acseEntityTable_data *);
int acseEntityTable_del(struct acseEntityTable_data *);
void parse_acseEntityTable(const char *, char *);
SNMPCallback store_acseEntityTable;
void refresh_acseEntityTable(int);
FindVarMethod var_acseAccessPointTable;
struct acseAccessPointTable_data *acseAccessPointTable_create(void);
struct acseAccessPointTable_data *acseAccessPointTable_duplicate(struct acseAccessPointTable_data *);
int acseAccessPointTable_destroy(struct acseAccessPointTable_data **);
int acseAccessPointTable_add(struct acseAccessPointTable_data *);
int acseAccessPointTable_del(struct acseAccessPointTable_data *);
void parse_acseAccessPointTable(const char *, char *);
SNMPCallback store_acseAccessPointTable;
void refresh_acseAccessPointTable(int);
FindVarMethod var_acseLinkageTable;
struct acseLinkageTable_data *acseLinkageTable_create(void);
struct acseLinkageTable_data *acseLinkageTable_duplicate(struct acseLinkageTable_data *);
int acseLinkageTable_destroy(struct acseLinkageTable_data **);
int acseLinkageTable_add(struct acseLinkageTable_data *);
int acseLinkageTable_del(struct acseLinkageTable_data *);
void parse_acseLinkageTable(const char *, char *);
SNMPCallback store_acseLinkageTable;
void refresh_acseLinkageTable(int);

WriteMethod write_acseAssociationRowStatus;
WriteMethod write_apInvocationRowStatus;
WriteMethod write_applicationEntityInvocationRowStatus;
WriteMethod write_asoRowStatus;
WriteMethod write_asoEntityRowStatus;
WriteMethod write_asoInvocationRowStatus;
WriteMethod write_monoULConnectionRowStatus;
WriteMethod write_monolithicUpperLayerSubssytemRowStatus;
WriteMethod write_pSapRowStatus;
WriteMethod write_presentationCOnnectionRowStatus;
WriteMethod write_presentationCopmRowStatus;
WriteMethod write_presentationEntityRowStatus;
WriteMethod write_presentationSubsystemRowStatus;
WriteMethod write_sSapRowStatus;
WriteMethod write_sessionCOnnectionRowStatus;
WriteMethod write_sessionCopmRowStatus;
WriteMethod write_sessionEntityRowStatus;
WriteMethod write_sessionSubsystemRowStatus;
WriteMethod write_acseEntityRowStatus;
WriteMethod write_acseAccessPointRowStatus;
WriteMethod write_acseLinkageRowStatus;
#endif				/* __LOCAL_ACSEMIB_H__ */
