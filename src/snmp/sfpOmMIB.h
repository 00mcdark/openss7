/*****************************************************************************

 @(#) src/snmp/sfpOmMIB.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_SFPOMMIB_H__
#define __LOCAL_SFPOMMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct sfpOmMIB_data {
	struct sfpOmMIB_data *sfpOmMIB_old;
	uint sfpOmMIB_rsvs;
	uint sfpOmMIB_tsts;
	uint sfpOmMIB_sets;
	uint sfpOmMIB_request;
	oid *sfpOm5MinActivate;		/* ReadWrite */
	size_t sfpOm5MinActivateLen;
	oid *sfpOm5MinDeactivate;	/* ReadWrite */
	size_t sfpOm5MinDeactivateLen;
	oid *sfpOm15MinActivate;	/* ReadWrite */
	size_t sfpOm15MinActivateLen;
	oid *sfpOm15MinDeactivate;	/* ReadWrite */
	size_t sfpOm15MinDeactivateLen;
	long sfpOmDiscontinuityTime;	/* ReadOnly */
	long sfpOmTimeStamp;		/* ReadOnly */
	ulong sfpOm5MinMaxIntervals;	/* ReadWrite */
	ulong sfpOm15MinMaxIntervals;	/* ReadWrite */
	long sfpOmPollingInterval;	/* ReadWrite */
};
struct sfpOmActualTable_data {
	struct sfpOmActualTable_data *sfpOmActualTable_old;
	uint sfpOmActualTable_rsvs;
	uint sfpOmActualTable_tsts;
	uint sfpOmActualTable_sets;
	uint sfpOmActualTable_request;
	uint sfpOmActualTable_refs;
	uint sfpOmActualTable_id;
	ulong sfpModuleId;		/* NoAccess */
	long sfpOmTemp;			/* ReadOnly */
	long sfpOmVolt;			/* ReadOnly */
	long sfpOmBias;			/* ReadOnly */
	long sfpOmTxPower;		/* ReadOnly */
	long sfpOmRxPower;		/* ReadOnly */
};
struct sfpOmCurrentTable_data {
	struct sfpOmCurrentTable_data *sfpOmCurrentTable_old;
	uint sfpOmCurrentTable_rsvs;
	uint sfpOmCurrentTable_tsts;
	uint sfpOmCurrentTable_sets;
	uint sfpOmCurrentTable_request;
	uint sfpOmCurrentTable_refs;
	uint sfpOmCurrentTable_id;
	ulong sfpModuleId;		/* NoAccess */
	long sfpOmTempMarkHi;		/* ReadOnly */
	long sfpOmTempMarkLo;		/* ReadOnly */
	long sfpOmVoltMarkHi;		/* ReadOnly */
	long sfpOmVoltMarkLo;		/* ReadOnly */
	long sfpOmBiasMarkHi;		/* ReadOnly */
	long sfpOmBiasMarkLo;		/* ReadOnly */
	long sfpOmTxPowerMarkHi;	/* ReadOnly */
	long sfpOmTxPowerMarkLo;	/* ReadOnly */
	long sfpOmRxPowerMarkHi;	/* ReadOnly */
	long sfpOmRxPowerMarkLo;	/* ReadOnly */
	long sfpOm5MinValidIntervals;	/* ReadOnly */
	long sfpOm15MinValidIntervals;	/* ReadOnly */
};
struct sfpOm5MinHistoryTable_data {
	struct sfpOm5MinHistoryTable_data *sfpOm5MinHistoryTable_old;
	uint sfpOm5MinHistoryTable_rsvs;
	uint sfpOm5MinHistoryTable_tsts;
	uint sfpOm5MinHistoryTable_sets;
	uint sfpOm5MinHistoryTable_request;
	uint sfpOm5MinHistoryTable_refs;
	uint sfpOm5MinHistoryTable_id;
	ulong sfpModuleId;		/* NoAccess */
	long sfpOmInterval;		/* NoAccess */
	long sfpOm5MinTempMarkHi;	/* ReadOnly */
	long sfpOm5MinTempMarkLo;	/* ReadOnly */
	long sfpOm5MinVoltMarkHi;	/* ReadOnly */
	long sfpOm5MinVoltMarkLo;	/* ReadOnly */
	long sfpOm5MinBiasMarkHi;	/* ReadOnly */
	long sfpOm5MinBiasMarkLo;	/* ReadOnly */
	long sfpOm5MinTxPowerMarkHi;	/* ReadOnly */
	long sfpOm5MinTxPowerMarkLo;	/* ReadOnly */
	long sfpOm5MinRxPowerMarkHi;	/* ReadOnly */
	long sfpOm5MinRxPowerMarkLo;	/* ReadOnly */
};
struct sfpOm15MinHistoryTable_data {
	struct sfpOm15MinHistoryTable_data *sfpOm15MinHistoryTable_old;
	uint sfpOm15MinHistoryTable_rsvs;
	uint sfpOm15MinHistoryTable_tsts;
	uint sfpOm15MinHistoryTable_sets;
	uint sfpOm15MinHistoryTable_request;
	uint sfpOm15MinHistoryTable_refs;
	uint sfpOm15MinHistoryTable_id;
	ulong sfpModuleId;		/* NoAccess */
	long sfpOmInterval;		/* NoAccess */
	long sfpOm15MinTempMarkHi;	/* ReadOnly */
	long sfpOm15MinTempMarkLo;	/* ReadOnly */
	long sfpOm15MinVoltMarkHi;	/* ReadOnly */
	long sfpOm15MinVoltMarkLo;	/* ReadOnly */
	long sfpOm15MinBiasMarkHi;	/* ReadOnly */
	long sfpOm15MinBiasMarkLo;	/* ReadOnly */
	long sfpOm15MinTxPowerMarkHi;	/* ReadOnly */
	long sfpOm15MinTxPowerMarkLo;	/* ReadOnly */
	long sfpOm15MinRxPowerMarkHi;	/* ReadOnly */
	long sfpOm15MinRxPowerMarkLo;	/* ReadOnly */
};

/* storage declarations */
extern struct sfpOmMIB_data *sfpOmMIBStorage;
extern struct header_complex_index *sfpOmActualTableStorage;
extern struct header_complex_index *sfpOmCurrentTableStorage;
extern struct header_complex_index *sfpOm5MinHistoryTableStorage;
extern struct header_complex_index *sfpOm15MinHistoryTableStorage;

/* enum definitions from the covered mib sections */

/* notifications */
extern oid sfpOm5minReport_oid[12];
extern oid sfpOm15minReport_oid[12];

/* scalars accessible only for notify */
extern oid sfpOmDuration_oid[13];
extern oid sfpOmModuleId_oid[13];

/* object id definitions */
extern oid sfpOmProfile_oid[13];
extern oid sfpOmObligatoryGroup_oid[13];
extern oid sfpOmWatermarksGroup_oid[13];
extern oid sfpOmHistoryGroup_oid[13];
extern oid sfpOmNotificationGroup_oid[13];
extern oid sfpOmActualGroup_oid[13];
extern oid sfpOmActivationGroup_oid[13];

/* function prototypes */
/* trap function prototypes */
extern void send_sfpOm5minReport_v2trap(struct variable_list *);
extern void send_sfpOm15minReport_v2trap(struct variable_list *);

/* variable function prototypes */
void init_sfpOmMIB(void);
void deinit_sfpOmMIB(void);
int term_sfpOmMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_sfpOmMIB;
struct sfpOmMIB_data *sfpOmMIB_create(void);
struct sfpOmMIB_data *sfpOmMIB_duplicate(struct sfpOmMIB_data *);
int sfpOmMIB_destroy(struct sfpOmMIB_data **);
int sfpOmMIB_add(struct sfpOmMIB_data *);
void parse_sfpOmMIB(const char *, char *);
SNMPCallback store_sfpOmMIB;
void refresh_sfpOmMIB(int);
FindVarMethod var_sfpOmActualTable;
struct sfpOmActualTable_data *sfpOmActualTable_create(void);
struct sfpOmActualTable_data *sfpOmActualTable_duplicate(struct sfpOmActualTable_data *);
int sfpOmActualTable_destroy(struct sfpOmActualTable_data **);
int sfpOmActualTable_add(struct sfpOmActualTable_data *);
int sfpOmActualTable_del(struct sfpOmActualTable_data *);
void parse_sfpOmActualTable(const char *, char *);
SNMPCallback store_sfpOmActualTable;
void refresh_sfpOmActualTable(int);
FindVarMethod var_sfpOmCurrentTable;
struct sfpOmCurrentTable_data *sfpOmCurrentTable_create(void);
struct sfpOmCurrentTable_data *sfpOmCurrentTable_duplicate(struct sfpOmCurrentTable_data *);
int sfpOmCurrentTable_destroy(struct sfpOmCurrentTable_data **);
int sfpOmCurrentTable_add(struct sfpOmCurrentTable_data *);
int sfpOmCurrentTable_del(struct sfpOmCurrentTable_data *);
void parse_sfpOmCurrentTable(const char *, char *);
SNMPCallback store_sfpOmCurrentTable;
void refresh_sfpOmCurrentTable(int);
FindVarMethod var_sfpOm5MinHistoryTable;
struct sfpOm5MinHistoryTable_data *sfpOm5MinHistoryTable_create(void);
struct sfpOm5MinHistoryTable_data *sfpOm5MinHistoryTable_duplicate(struct sfpOm5MinHistoryTable_data *);
int sfpOm5MinHistoryTable_destroy(struct sfpOm5MinHistoryTable_data **);
int sfpOm5MinHistoryTable_add(struct sfpOm5MinHistoryTable_data *);
int sfpOm5MinHistoryTable_del(struct sfpOm5MinHistoryTable_data *);
void parse_sfpOm5MinHistoryTable(const char *, char *);
SNMPCallback store_sfpOm5MinHistoryTable;
void refresh_sfpOm5MinHistoryTable(int);
FindVarMethod var_sfpOm15MinHistoryTable;
struct sfpOm15MinHistoryTable_data *sfpOm15MinHistoryTable_create(void);
struct sfpOm15MinHistoryTable_data *sfpOm15MinHistoryTable_duplicate(struct sfpOm15MinHistoryTable_data *);
int sfpOm15MinHistoryTable_destroy(struct sfpOm15MinHistoryTable_data **);
int sfpOm15MinHistoryTable_add(struct sfpOm15MinHistoryTable_data *);
int sfpOm15MinHistoryTable_del(struct sfpOm15MinHistoryTable_data *);
void parse_sfpOm15MinHistoryTable(const char *, char *);
SNMPCallback store_sfpOm15MinHistoryTable;
void refresh_sfpOm15MinHistoryTable(int);

WriteMethod write_sfpOm5MinActivate;
WriteMethod write_sfpOm5MinDeactivate;
WriteMethod write_sfpOm15MinActivate;
WriteMethod write_sfpOm15MinDeactivate;
WriteMethod write_sfpOm5MinMaxIntervals;
WriteMethod write_sfpOm15MinMaxIntervals;
WriteMethod write_sfpOmPollingInterval;
#endif				/* __LOCAL_SFPOMMIB_H__ */
