/*****************************************************************************

 @(#) src/snmp/cdr2MIB.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_CDR2MIB_H__
#define __LOCAL_CDR2MIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct cdr2MIB_data {
	struct cdr2MIB_data *cdr2MIB_old;
	uint cdr2MIB_rsvs;
	uint cdr2MIB_tsts;
	uint cdr2MIB_sets;
	uint cdr2MIB_request;
};
struct callDetailDataTable_data {
	struct callDetailDataTable_data *callDetailDataTable_old;
	uint callDetailDataTable_rsvs;
	uint callDetailDataTable_tsts;
	uint callDetailDataTable_sets;
	uint callDetailDataTable_request;
	uint callDetailDataTable_refs;
	uint callDetailDataTable_id;
	uint8_t *callDetailDataId;	/* ReadOnly */
	size_t callDetailDataIdLen;
};
struct simpleUsageMeteringControlTable_data {
	struct simpleUsageMeteringControlTable_data *simpleUsageMeteringControlTable_old;
	uint simpleUsageMeteringControlTable_rsvs;
	uint simpleUsageMeteringControlTable_tsts;
	uint simpleUsageMeteringControlTable_sets;
	uint simpleUsageMeteringControlTable_request;
	uint simpleUsageMeteringControlTable_refs;
	uint simpleUsageMeteringControlTable_id;
	uint8_t *controlObjectId;	/* NoAccess */
	size_t controlObjectIdLen;
	uint8_t *creationTriggerList;	/* Create */
	size_t creationTriggerListLen;
	long simpleUsageMeteringControlEntryStatus;	/* Create */
};
struct configurableSimpleUsageMeteringControlTable_data {
	struct configurableSimpleUsageMeteringControlTable_data *configurableSimpleUsageMeteringControlTable_old;
	uint configurableSimpleUsageMeteringControlTable_rsvs;
	uint configurableSimpleUsageMeteringControlTable_tsts;
	uint configurableSimpleUsageMeteringControlTable_sets;
	uint configurableSimpleUsageMeteringControlTable_request;
	uint configurableSimpleUsageMeteringControlTable_refs;
	uint configurableSimpleUsageMeteringControlTable_id;
	uint8_t *controlObjectId;	/* NoAccess */
	size_t controlObjectIdLen;
	long samplingRate;		/* Create */
	uint8_t *configurationMask;	/* Create */
	size_t configurationMaskLen;
	long configurationRowStatus;	/* Create */
};
struct blockGeneratingLogTable_data {
	struct blockGeneratingLogTable_data *blockGeneratingLogTable_old;
	uint blockGeneratingLogTable_rsvs;
	uint blockGeneratingLogTable_tsts;
	uint blockGeneratingLogTable_sets;
	uint blockGeneratingLogTable_request;
	uint blockGeneratingLogTable_refs;
	uint blockGeneratingLogTable_id;
	uint8_t *logId;			/* NoAccess */
	size_t logIdLen;
	long blockGeneratingLogMaxBlockSize;	/* Create */
	long blockGeneratingLogMaxTimeInterval;	/* Create */
	long blockGeneratingLogStorageType;	/* Create */
	long blockGeneratingLogRowStatus;	/* Create */
};
struct fileGeneratingLogTable_data {
	struct fileGeneratingLogTable_data *fileGeneratingLogTable_old;
	uint fileGeneratingLogTable_rsvs;
	uint fileGeneratingLogTable_tsts;
	uint fileGeneratingLogTable_sets;
	uint fileGeneratingLogTable_request;
	uint fileGeneratingLogTable_refs;
	uint fileGeneratingLogTable_id;
	uint8_t *logId;			/* NoAccess */
	size_t logIdLen;
	uint8_t *timesOfDay;		/* Create */
	size_t timesOfDayLen;
	long periodicTrigger;		/* Create */
	long fileGeneratingLogStorageType;	/* Create */
	long fileGeneratingLogEntryStatus;	/* Create */
};
struct callDetailLogRecordTable_data {
	struct callDetailLogRecordTable_data *callDetailLogRecordTable_old;
	uint callDetailLogRecordTable_rsvs;
	uint callDetailLogRecordTable_tsts;
	uint callDetailLogRecordTable_sets;
	uint callDetailLogRecordTable_request;
	uint callDetailLogRecordTable_refs;
	uint callDetailLogRecordTable_id;
	uint8_t *logId;			/* NoAccess */
	size_t logIdLen;
	uint8_t *logRecordId;		/* NoAccess */
	size_t logRecordIdLen;
	uint8_t *networkProviderId;	/* ReadOnly */
	size_t networkProviderIdLen;
	long recordType;		/* ReadOnly */
	uint8_t *seizureTime;		/* ReadOnly */
	size_t seizureTimeLen;
	uint8_t *answerTime;		/* ReadOnly */
	size_t answerTimeLen;
	uint8_t *partialTime;		/* ReadOnly */
	size_t partialTimeLen;
	uint8_t *eventTime;		/* ReadOnly */
	size_t eventTimeLen;
	uint8_t *callingPartyNumber;	/* ReadOnly */
	size_t callingPartyNumberLen;
	uint8_t *calledPartyNumber;	/* ReadOnly */
	size_t calledPartyNumberLen;
	uint8_t *redirectingNumber;	/* ReadOnly */
	size_t redirectingNumberLen;
	uint8_t *redirectionNumber;	/* ReadOnly */
	size_t redirectionNumberLen;
	uint8_t *originalCalledNumber;	/* ReadOnly */
	size_t originalCalledNumberLen;
	uint8_t *callingPartyNumberNotScreened;	/* ReadOnly */
	size_t callingPartyNumberNotScreenedLen;
	uint8_t *operatorSpecific1Number;	/* ReadOnly */
	size_t operatorSpecific1NumberLen;
	uint8_t *operatorSpecific2Number;	/* ReadOnly */
	size_t operatorSpecific2NumberLen;
	uint8_t *operatorSpecific3Number;	/* ReadOnly */
	size_t operatorSpecific3NumberLen;
	uint8_t *bearerService;		/* ReadOnly */
	size_t bearerServiceLen;
	long participantServiceUser;	/* ReadOnly */
	uint8_t *callIdentificationNumber;	/* ReadOnly */
	size_t callIdentificationNumberLen;
	uint8_t *supplementaryServices;	/* ReadOnly */
	size_t supplementaryServicesLen;
	long immediateNotificationForUsageMetering;	/* ReadOnly */
	uint8_t *cause;			/* ReadOnly */
	size_t causeLen;
	uint8_t *personalUserId;	/* ReadOnly */
	size_t personalUserIdLen;
	long chargedParticipant;	/* ReadOnly */
	uint8_t *chargedDirectoryNumber;	/* ReadOnly */
	size_t chargedDirectoryNumberLen;
	long percentageToBeBilled;	/* ReadOnly */
	uint8_t *accountCodeInput;	/* ReadOnly */
	size_t accountCodeInputLen;
	uint8_t *iNServiceCode;		/* ReadOnly */
	size_t iNServiceCodeLen;
	uint8_t *queueTimeStamp;	/* ReadOnly */
	size_t queueTimeStampLen;
	long queueDuration;		/* ReadOnly */
	uint8_t *serviceSpecificINInformation;	/* ReadOnly */
	size_t serviceSpecificINInformationLen;
	long partialRecordNumber;	/* ReadOnly */
	long partialRecordReason;	/* ReadOnly */
	uint8_t *exchangeInfo;		/* ReadOnly */
	size_t exchangeInfoLen;
	uint8_t *relatedCallNumber;	/* ReadOnly */
	size_t relatedCallNumberLen;
	uint8_t *cDRPurpose;		/* ReadOnly */
	size_t cDRPurposeLen;
	uint8_t *physicalLineCode;	/* ReadOnly */
	size_t physicalLineCodeLen;
	uint8_t *receivedDigits;	/* ReadOnly */
	size_t receivedDigitsLen;
	uint8_t *operatorSpecific1AdditionalNumber;	/* ReadOnly */
	size_t operatorSpecific1AdditionalNumberLen;
	uint8_t *operatorSpecific2AdditionalNumber;	/* ReadOnly */
	size_t operatorSpecific2AdditionalNumberLen;
	uint8_t *operatorSpecific3AdditionalNumber;	/* ReadOnly */
	size_t operatorSpecific3AdditionalNumberLen;
	uint8_t *callingPartyCategory;	/* ReadOnly */
	size_t callingPartyCategoryLen;
	long callingPartyType;		/* ReadOnly */
	uint8_t *chargeInformation;	/* ReadOnly */
	size_t chargeInformationLen;
	uint8_t *progress;		/* ReadOnly */
	size_t progressLen;
	uint8_t *accessDelivery;	/* ReadOnly */
	size_t accessDeliveryLen;
	uint8_t *trunkGroupOutgoing;	/* ReadOnly */
	size_t trunkGroupOutgoingLen;
	uint8_t *trunkGroupIncoming;	/* ReadOnly */
	size_t trunkGroupIncomingLen;
	uint8_t *fallbackBearerService;	/* ReadOnly */
	size_t fallbackBearerServiceLen;
	uint8_t *teleservice;		/* ReadOnly */
	size_t teleserviceLen;
	long conversationTime;		/* ReadOnly */
	long durationTimeACM;		/* ReadOnly */
	long durationTimeBAnswer;	/* ReadOnly */
	long durationTimeNoBAnswer;	/* ReadOnly */
	uint8_t *uUInfo;		/* ReadOnly */
	size_t uUInfoLen;
	uint8_t *standardExtensions;	/* ReadOnly */
	size_t standardExtensionsLen;
	uint8_t *recordExtensions;	/* ReadOnly */
	size_t recordExtensionsLen;
	uint8_t *bPartyCategory;	/* ReadOnly */
	size_t bPartyCategoryLen;
	long iSUPPreferred;		/* ReadOnly */
	long networkManagementControls;	/* ReadOnly */
	long glare;			/* ReadOnly */
	long recordId;			/* ReadOnly */
	long dataValidity;		/* ReadOnly */
	long callStatus;		/* ReadOnly */
	uint8_t *carrierId;		/* ReadOnly */
	size_t carrierIdLen;
	uint8_t *dPC;			/* ReadOnly */
	size_t dPCLen;
	uint8_t *oPC;			/* ReadOnly */
	size_t oPCLen;
};
struct configurableSimpleUsageMeteringControlR2Table_data {
	struct configurableSimpleUsageMeteringControlR2Table_data *configurableSimpleUsageMeteringControlR2Table_old;
	uint configurableSimpleUsageMeteringControlR2Table_rsvs;
	uint configurableSimpleUsageMeteringControlR2Table_tsts;
	uint configurableSimpleUsageMeteringControlR2Table_sets;
	uint configurableSimpleUsageMeteringControlR2Table_request;
	uint configurableSimpleUsageMeteringControlR2Table_refs;
	uint configurableSimpleUsageMeteringControlR2Table_id;
	uint8_t *controlObjectId;	/* NoAccess */
	size_t controlObjectIdLen;
	uint8_t *configurationR2Mask;	/* Create */
	size_t configurationR2MaskLen;
	long configurationR2Status;	/* Create */
};
struct blockGeneratingLogR2Table_data {
	struct blockGeneratingLogR2Table_data *blockGeneratingLogR2Table_old;
	uint blockGeneratingLogR2Table_rsvs;
	uint blockGeneratingLogR2Table_tsts;
	uint blockGeneratingLogR2Table_sets;
	uint blockGeneratingLogR2Table_request;
	uint blockGeneratingLogR2Table_refs;
	uint blockGeneratingLogR2Table_id;
	uint8_t *logId;			/* NoAccess */
	size_t logIdLen;
	long blockGeneratingLogVersion;	/* ReadWrite */
};
struct callDetailLogRecordR2Table_data {
	struct callDetailLogRecordR2Table_data *callDetailLogRecordR2Table_old;
	uint callDetailLogRecordR2Table_rsvs;
	uint callDetailLogRecordR2Table_tsts;
	uint callDetailLogRecordR2Table_sets;
	uint callDetailLogRecordR2Table_request;
	uint callDetailLogRecordR2Table_refs;
	uint callDetailLogRecordR2Table_id;
	uint8_t *logId;			/* NoAccess */
	size_t logIdLen;
	uint8_t *logRecordId;		/* NoAccess */
	size_t logRecordIdLen;
	struct counter64 sequenceId;	/* ReadOnly */
	struct counter64 zoneId;	/* ReadOnly */
	struct counter64 recSeqId;	/* ReadOnly */
	struct counter64 fileSeqId;	/* ReadOnly */
	uint8_t *callId;		/* ReadOnly */
	size_t callIdLen;
	uint8_t *lastUpdate;		/* ReadOnly */
	size_t lastUpdateLen;
	uint8_t *eventOrder;		/* ReadOnly */
	size_t eventOrderLen;
	long status;			/* ReadOnly */
	long callType;			/* ReadOnly */
	uint8_t *clngPtyNbr;		/* ReadOnly */
	size_t clngPtyNbrLen;
	uint8_t *chargeNbr;		/* ReadOnly */
	size_t chargeNbrLen;
	uint8_t *clldPtyNbr;		/* ReadOnly */
	size_t clldPtyNbrLen;
	long clldPtyNoa;		/* ReadOnly */
	uint8_t *origLnInfo;		/* ReadOnly */
	size_t origLnInfoLen;
	uint8_t *ingLrn;		/* ReadOnly */
	size_t ingLrnLen;
	uint8_t *ingCic;		/* ReadOnly */
	size_t ingCicLen;
	long ingCsi;			/* ReadOnly */
	ulong ingCceId;			/* ReadOnly */
	long ingTgProt;			/* ReadOnly */
	long ingTgType;			/* ReadOnly */
	ulong ingTgId;			/* ReadOnly */
	uint8_t *ingCallStart;		/* ReadOnly */
	size_t ingCallStartLen;
	ulong ingGateId;		/* ReadOnly */
	ulong ingCardId;		/* ReadOnly */
	ulong ingSpanId;		/* ReadOnly */
	ulong ingChanId;		/* ReadOnly */
	ulong ingIsdnDChan;		/* ReadOnly */
	ulong ingIsdnCrn;		/* ReadOnly */
	uint8_t *ingCreatConnCplt;	/* ReadOnly */
	size_t ingCreatConnCpltLen;
	uint8_t *ingAddrCplt;		/* ReadOnly */
	size_t ingAddrCpltLen;
	uint8_t *ingCallAns;		/* ReadOnly */
	size_t ingCallAnsLen;
	uint8_t *transNbr;		/* ReadOnly */
	size_t transNbrLen;
	uint8_t *termLrn;		/* ReadOnly */
	size_t termLrnLen;
	uint8_t *transCic;		/* ReadOnly */
	size_t transCicLen;
	uint8_t *ingCallRls;		/* ReadOnly */
	size_t ingCallRlsLen;
	ulong ingRlsCause;		/* ReadOnly */
	ulong egrCceId;			/* ReadOnly */
	long egrTgProt;			/* ReadOnly */
	long egrTgType;			/* ReadOnly */
	ulong egrTgId;			/* ReadOnly */
	uint8_t *egrCallStart;		/* ReadOnly */
	size_t egrCallStartLen;
	ulong egrGateId;		/* ReadOnly */
	ulong egrCardId;		/* ReadOnly */
	ulong egrSpanId;		/* ReadOnly */
	ulong egrChanId;		/* ReadOnly */
	ulong egrIsdnDChan;		/* ReadOnly */
	ulong egrIsdnCrn;		/* ReadOnly */
	uint8_t *egrCreatConnCplt;	/* ReadOnly */
	size_t egrCreatConnCpltLen;
	uint8_t *egrAddrCplt;		/* ReadOnly */
	size_t egrAddrCpltLen;
	uint8_t *egrCallAns;		/* ReadOnly */
	size_t egrCallAnsLen;
	uint8_t *egrCallRls;		/* ReadOnly */
	size_t egrCallRlsLen;
	ulong egrRlsCause;		/* ReadOnly */
	uint8_t *chkptFirst;		/* ReadOnly */
	size_t chkptFirstLen;
	uint8_t *chkptLast;		/* ReadOnly */
	size_t chkptLastLen;
	uint8_t *ingGateName;		/* ReadOnly */
	size_t ingGateNameLen;
	uint8_t *egrGateName;		/* ReadOnly */
	size_t egrGateNameLen;
	uint8_t *ingTgName;		/* ReadOnly */
	size_t ingTgNameLen;
	uint8_t *egrTgName;		/* ReadOnly */
	size_t egrTgNameLen;
	uint8_t *origGateIp;		/* ReadOnly */
	size_t origGateIpLen;
	uint8_t *termGateIp;		/* ReadOnly */
	size_t termGateIpLen;
	uint8_t *h323ConfId;		/* ReadOnly */
	size_t h323ConfIdLen;
	ulong ingCardPort;		/* ReadOnly */
	ulong ingCardPath;		/* ReadOnly */
	ulong egrCardPort;		/* ReadOnly */
	ulong egrCardPath;		/* ReadOnly */
	ulong ingTg;			/* ReadOnly */
	ulong egrTg;			/* ReadOnly */
	uint8_t *dialedNbr;		/* ReadOnly */
	size_t dialedNbrLen;
	long dialedNoa;			/* ReadOnly */
	uint8_t *redirNbr;		/* ReadOnly */
	size_t redirNbrLen;
	long redirNoa;			/* ReadOnly */
	long redirInd;			/* ReadOnly */
	long redirRsn;			/* ReadOnly */
	uint8_t *calledNbr;		/* ReadOnly */
	size_t calledNbrLen;
	long calledNoa;			/* ReadOnly */
	long redirRsnOrig;		/* ReadOnly */
	ulong redirCntr;		/* ReadOnly */
	long redirPrsntnInd;		/* ReadOnly */
	uint8_t *ingJuris;		/* ReadOnly */
	size_t ingJurisLen;
	uint8_t *egrJuris;		/* ReadOnly */
	size_t egrJurisLen;
	long ingTrunkBearCap;		/* ReadOnly */
	long egrTrunkBearCap;		/* ReadOnly */
	uint8_t *transNetSelCarr;	/* ReadOnly */
	size_t transNetSelCarrLen;
	ulong clngPtyNoa;		/* ReadOnly */
	uint8_t *ingRlsCauseIntrnl;	/* ReadOnly */
	size_t ingRlsCauseIntrnlLen;
	uint8_t *egrRlsCauseIntrnl;	/* ReadOnly */
	size_t egrRlsCauseIntrnlLen;
	uint8_t *egrClldNbr;		/* ReadOnly */
	size_t egrClldNbrLen;
	long egrClldNoa;		/* ReadOnly */
	uint8_t *egrCnndNbr;		/* ReadOnly */
	size_t egrCnndNbrLen;
	long egrCnndNoa;		/* ReadOnly */
	long clngPtyPrsntnInd;		/* ReadOnly */
	long ingIri;			/* ReadOnly */
	long egrOri;			/* ReadOnly */
	uint8_t *ingCallidExtrnl;	/* ReadOnly */
	size_t ingCallidExtrnlLen;
	uint8_t *egrCallidExtrnl;	/* ReadOnly */
	size_t egrCallidExtrnlLen;
	uint8_t *ingChargeInfo;		/* ReadOnly */
	size_t ingChargeInfoLen;
	uint8_t *egrChargeInfo;		/* ReadOnly */
	size_t egrChargeInfoLen;
	uint8_t *ingPrtlInd;		/* ReadOnly */
	size_t ingPrtlIndLen;
	long ingNatfwdCliblkInd;	/* ReadOnly */
	long ingNatfwdNtaInd;		/* ReadOnly */
	uint8_t *ingLastDvrtLnDigs;	/* ReadOnly */
	size_t ingLastDvrtLnDigsLen;
	long ingLastDvrtLnNoa;		/* ReadOnly */
	uint8_t *j7IngAddlPtyCat;	/* ReadOnly */
	size_t j7IngAddlPtyCatLen;
	uint8_t *j7IngChgAreaInfo;	/* ReadOnly */
	size_t j7IngChgAreaInfoLen;
	uint8_t *j7IngFwdCallInd;	/* ReadOnly */
	size_t j7IngFwdCallIndLen;
	uint8_t *j7EgrAddlPtyCat;	/* ReadOnly */
	size_t j7EgrAddlPtyCatLen;
	uint8_t *j7EgrChgAreaInfo;	/* ReadOnly */
	size_t j7EgrChgAreaInfoLen;
	uint8_t *j7EgrBkwCallInd;	/* ReadOnly */
	size_t j7EgrBkwCallIndLen;
	uint8_t *j7CarrInfoXfer;	/* ReadOnly */
	size_t j7CarrInfoXferLen;
	uint8_t *ingSs7GnrcParm;	/* ReadOnly */
	size_t ingSs7GnrcParmLen;
	uint8_t *egrSs7GnrcParm;	/* ReadOnly */
	size_t egrSs7GnrcParmLen;
	ulong ingPktsSent;		/* ReadOnly */
	ulong ingPktsRcvd;		/* ReadOnly */
	ulong ingPktsLost;		/* ReadOnly */
	ulong ingPktsXfer;		/* ReadOnly */
	ulong ingJitter;		/* ReadOnly */
	ulong ingLtncy;			/* ReadOnly */
	ulong egrPktsSent;		/* ReadOnly */
	ulong egrPktsRcvd;		/* ReadOnly */
	ulong egrPktsLost;		/* ReadOnly */
	ulong egrPktsXfer;		/* ReadOnly */
	ulong egrJitter;		/* ReadOnly */
	ulong egrLtncy;			/* ReadOnly */
	ulong ingCrctId;		/* ReadOnly */
	ulong egrCrctId;		/* ReadOnly */
	ulong ingCodec;			/* ReadOnly */
	ulong egrCodec;			/* ReadOnly */
	ulong ingLocGateId;		/* ReadOnly */
	ulong egrLocGateId;		/* ReadOnly */
	uint8_t *ingCasCrctSzr;		/* ReadOnly */
	size_t ingCasCrctSzrLen;
	uint8_t *egrCasCrctSzr;		/* ReadOnly */
	size_t egrCasCrctSzrLen;
	uint8_t *ingZz;			/* ReadOnly */
	size_t ingZzLen;
	uint8_t *egrZz;			/* ReadOnly */
	size_t egrZzLen;
	uint8_t *ingCtryAddrType;	/* ReadOnly */
	size_t ingCtryAddrTypeLen;
	uint8_t *egrCtryAddrType;	/* ReadOnly */
	size_t egrCtryAddrTypeLen;
	ulong ingPartition;		/* ReadOnly */
	ulong egrPartition;		/* ReadOnly */
	ulong ingClngPtyCat;		/* ReadOnly */
	ulong ingRlsCauseLctn;		/* ReadOnly */
	ulong egrRlsCauseLctn;		/* ReadOnly */
	ulong clldPtyCat;		/* ReadOnly */
	ulong callDuration;		/* ReadOnly */
	ulong ingRlsDrctn;		/* ReadOnly */
	ulong egrRlsDrctn;		/* ReadOnly */
	uint8_t *ingAnsLctim;		/* ReadOnly */
	size_t ingAnsLctimLen;
	uint8_t *egrAnsLctim;		/* ReadOnly */
	size_t egrAnsLctimLen;
	ulong ingHlcChrsId;		/* ReadOnly */
	ulong egrHlcChrsId;		/* ReadOnly */
	ulong ingLlcXferCap;		/* ReadOnly */
	ulong egrLlcXferCap;		/* ReadOnly */
	uint8_t *routeList;		/* ReadOnly */
	size_t routeListLen;
	ulong ingPointCode;		/* ReadOnly */
	ulong egrPointCode;		/* ReadOnly */
};

/* storage declarations */
extern struct cdr2MIB_data *cdr2MIBStorage;
extern struct header_complex_index *callDetailDataTableStorage;
extern struct header_complex_index *simpleUsageMeteringControlTableStorage;
extern struct header_complex_index *configurableSimpleUsageMeteringControlTableStorage;
extern struct header_complex_index *blockGeneratingLogTableStorage;
extern struct header_complex_index *fileGeneratingLogTableStorage;
extern struct header_complex_index *callDetailLogRecordTableStorage;
extern struct header_complex_index *configurableSimpleUsageMeteringControlR2TableStorage;
extern struct header_complex_index *blockGeneratingLogR2TableStorage;
extern struct header_complex_index *callDetailLogRecordR2TableStorage;

/* enum definitions from the covered mib sections */

#define REASONFOROUTPUT_ABSOLUTETIMEEVENT        0
#define REASONFOROUTPUT_MAXBLOCKSIZEREACHED      1
#define REASONFOROUTPUT_MAXTIMEINTERVALELAPSED   2
#define REASONFOROUTPUT_INTERNALSIZELIMITREACHED 3
#define REASONFOROUTPUT_OSACTION                 4

#define CREATIONTRIGGERLIST_SEIZURE              0
#define CREATIONTRIGGERLIST_FIRSTDIGITRECEIVED   1
#define CREATIONTRIGGERLIST_ACMRECEIVED          2
#define CREATIONTRIGGERLIST_ANMRECEIVED          3
#define CREATIONTRIGGERLIST_SUPPLEMENTARYSERVICEINVOCATION 4
#define CREATIONTRIGGERLIST_SUPPLEMENTARYSERVICEINPUT 5

#define CONFIGURATIONMASK_EXCHANGEINFO           0
#define CONFIGURATIONMASK_RELATEDCALLNUMBER      1
#define CONFIGURATIONMASK_ADDITIONALPARTICIPANTINFO 2
#define CONFIGURATIONMASK_CALLINGPARTYCATEGORY   3
#define CONFIGURATIONMASK_CALLINGPARTYTYPE       4
#define CONFIGURATIONMASK_PROGRESS               5
#define CONFIGURATIONMASK_ACCESSDELIVERY         6
#define CONFIGURATIONMASK_TRUNKGROUPOUTGOING     7
#define CONFIGURATIONMASK_TRUNKGROUPINCOMING     8
#define CONFIGURATIONMASK_TELESERVICE            9
#define CONFIGURATIONMASK_STANDARDEXTENSIONS     10
#define CONFIGURATIONMASK_RECORDEXTENSIONS       11
#define CONFIGURATIONMASK_BPARTYCATEGORY         12
#define CONFIGURATIONMASK_ISUPPREFFERRED         13
#define CONFIGURATIONMASK_NETWORKMANAGEMENTCONTROLS 14
#define CONFIGURATIONMASK_GLARE                  15

#define RECORDTYPE_CALL                          0
#define RECORDTYPE_SUPPLSERVICEINPUTRECORD       1

#define PARTICIPANTSERVICEUSER_CALLINGPARTYNUMBER 0
#define PARTICIPANTSERVICEUSER_CALLEDPARTYNUMBER 1
#define PARTICIPANTSERVICEUSER_REDIRECTINGNUMBER 2
#define PARTICIPANTSERVICEUSER_REDIRECTIONNUMBER 3
#define PARTICIPANTSERVICEUSER_ORIGINALCALLEDNUMBER 4
#define PARTICIPANTSERVICEUSER_CALLINGPARTYNUMBERNOTSCREENED 5
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC1NUMBER 6
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC2NUMBER 7
#define PARTICIPANTSERVICEUSER_OPERATORSPECIFIC3NUMBER 8
#define PARTICIPANTSERVICEUSER_OPERATOR          9
#define PARTICIPANTSERVICEUSER_UNKNOWN           10

#define IMMEDIATENOTIFICATIONFORUSAGEMETERING_TRUE 1
#define IMMEDIATENOTIFICATIONFORUSAGEMETERING_FALSE 2

#define CHARGEDPARTICIPANT_CALLINGPARTYNUMBER    0
#define CHARGEDPARTICIPANT_CALLEDPARTYNUMBER     1
#define CHARGEDPARTICIPANT_REDIRECTINGNUMBER     2
#define CHARGEDPARTICIPANT_REDIRECTIONNUMBER     3
#define CHARGEDPARTICIPANT_ORIGINALCALLEDNUMBER  4
#define CHARGEDPARTICIPANT_CALLINGPARTYNUMBERNOTSCREENED 5
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC1NUMBER 6
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC2NUMBER 7
#define CHARGEDPARTICIPANT_OPERATORSPECIFIC3NUMBER 8
#define CHARGEDPARTICIPANT_OPERATOR              9
#define CHARGEDPARTICIPANT_UNKNOWN               10

#define PARTIALRECORDREASON_TIMELIMIT            0
#define PARTIALRECORDREASON_SERVICECHANGE        1
#define PARTIALRECORDREASON_OVERFLOW             2
#define PARTIALRECORDREASON_NETWORKINTERNALREASONS 3
#define PARTIALRECORDREASON_LASTCDR              4
#define PARTIALRECORDREASON_TIMECHANGE           5

#define CDRPURPOSE_USAGEMETERING                 0
#define CDRPURPOSE_ANALYSIS                      1

#define CALLINGPARTYTYPE_ANALOGUE                0
#define CALLINGPARTYTYPE_CUSTOMERLINK            1
#define CALLINGPARTYTYPE_BASICACCESS             2
#define CALLINGPARTYTYPE_PRIMARYRATEACCESS       3

#define ACCESSDELIVERY_SETUPMESSAGEGENERATED     0

#define ISUPPREFERRED_PREFERRED                  0
#define ISUPPREFERRED_NOTREQUIRED                1
#define ISUPPREFERRED_REQUIRED                   2
#define ISUPPREFERRED_NOTAPPLICABLE              3

#define NETWORKMANAGEMENTCONTROLS_ACC            0
#define NETWORKMANAGEMENTCONTROLS_ADC            1
#define NETWORKMANAGEMENTCONTROLS_CANCELFROM     2
#define NETWORKMANAGEMENTCONTROLS_CANCELREROUTED 3
#define NETWORKMANAGEMENTCONTROLS_CANCELTO       4
#define NETWORKMANAGEMENTCONTROLS_DESTINATIONCODECONTROL 5
#define NETWORKMANAGEMENTCONTROLS_SCR            6
#define NETWORKMANAGEMENTCONTROLS_SKIP           7
#define NETWORKMANAGEMENTCONTROLS_TARFROM        8
#define NETWORKMANAGEMENTCONTROLS_TARTO          9

#define GLARE_ABSENT                             0
#define GLARE_PRESENT                            1

#define DATAVALIDITY_POSSIBLEDUPLICATED          0
#define DATAVALIDITY_REQUIREDDATAMISSING         1
#define DATAVALIDITY_OTHER                       2

#define CALLSTATUS_ANSWERED                      0
#define CALLSTATUS_NOTANSWERED                   1

#define CONFIGURATIONR2MASK_NONE                 0

#define BLOCKGENERATINGLOGVERSION_VERSION1       1
#define BLOCKGENERATINGLOGVERSION_VERSION2       2

/* notifications */
extern oid blockRecordNotification_oid[12];
extern oid callDetailRecordNotification_oid[12];
extern oid fileCreationNotification_oid[12];
extern oid blockRecordNotificationR2_oid[12];
extern oid callDetailRecordNotificationR2_oid[12];

/* scalars accessible only for notify */
extern oid fileName_oid[13];
extern oid reasonForOutput_oid[13];
extern oid sequenceNumber_oid[13];
extern oid callRecord_oid[13];

/* object id definitions */
extern oid cdrParameterGroup_oid[13];
extern oid cdrNotificationGroup_oid[13];
extern oid cdr1NotificationGroup_oid[13];
extern oid cdr2NotificationGroup_oid[13];
extern oid cdr2MandatoryCallRecordFields_oid[13];
extern oid cdrMandatoryGroups_oid[13];
extern oid cdr1ConditionalGroups_oid[13];
extern oid cdr2MandatoryGroups_oid[13];
extern oid cd1RecordFormatGroup_oid[13];
extern oid cdr2ConditionalFieldsGroup_oid[13];
extern oid cdr2Conformances_oid[13];

/* function prototypes */
/* trap function prototypes */
extern void send_blockRecordNotification_v2trap(struct variable_list *);
extern void send_callDetailRecordNotification_v2trap(struct variable_list *);
extern void send_fileCreationNotification_v2trap(struct variable_list *);
extern void send_blockRecordNotificationR2_v2trap(struct variable_list *);
extern void send_callDetailRecordNotificationR2_v2trap(struct variable_list *);

/* variable function prototypes */
void init_cdr2MIB(void);
void deinit_cdr2MIB(void);
int term_cdr2MIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_cdr2MIB;
struct cdr2MIB_data *cdr2MIB_create(void);
struct cdr2MIB_data *cdr2MIB_duplicate(struct cdr2MIB_data *);
int cdr2MIB_destroy(struct cdr2MIB_data **);
int cdr2MIB_add(struct cdr2MIB_data *);
void parse_cdr2MIB(const char *, char *);
SNMPCallback store_cdr2MIB;
void refresh_cdr2MIB(int);
FindVarMethod var_callDetailDataTable;
struct callDetailDataTable_data *callDetailDataTable_create(void);
struct callDetailDataTable_data *callDetailDataTable_duplicate(struct callDetailDataTable_data *);
int callDetailDataTable_destroy(struct callDetailDataTable_data **);
int callDetailDataTable_add(struct callDetailDataTable_data *);
int callDetailDataTable_del(struct callDetailDataTable_data *);
void parse_callDetailDataTable(const char *, char *);
SNMPCallback store_callDetailDataTable;
void refresh_callDetailDataTable(int);
FindVarMethod var_simpleUsageMeteringControlTable;
struct simpleUsageMeteringControlTable_data *simpleUsageMeteringControlTable_create(void);
struct simpleUsageMeteringControlTable_data *simpleUsageMeteringControlTable_duplicate(struct simpleUsageMeteringControlTable_data *);
int simpleUsageMeteringControlTable_destroy(struct simpleUsageMeteringControlTable_data **);
int simpleUsageMeteringControlTable_add(struct simpleUsageMeteringControlTable_data *);
int simpleUsageMeteringControlTable_del(struct simpleUsageMeteringControlTable_data *);
void parse_simpleUsageMeteringControlTable(const char *, char *);
SNMPCallback store_simpleUsageMeteringControlTable;
void refresh_simpleUsageMeteringControlTable(int);
FindVarMethod var_configurableSimpleUsageMeteringControlTable;
struct configurableSimpleUsageMeteringControlTable_data *configurableSimpleUsageMeteringControlTable_create(void);
struct configurableSimpleUsageMeteringControlTable_data *configurableSimpleUsageMeteringControlTable_duplicate(struct configurableSimpleUsageMeteringControlTable_data *);
int configurableSimpleUsageMeteringControlTable_destroy(struct configurableSimpleUsageMeteringControlTable_data **);
int configurableSimpleUsageMeteringControlTable_add(struct configurableSimpleUsageMeteringControlTable_data *);
int configurableSimpleUsageMeteringControlTable_del(struct configurableSimpleUsageMeteringControlTable_data *);
void parse_configurableSimpleUsageMeteringControlTable(const char *, char *);
SNMPCallback store_configurableSimpleUsageMeteringControlTable;
void refresh_configurableSimpleUsageMeteringControlTable(int);
FindVarMethod var_blockGeneratingLogTable;
struct blockGeneratingLogTable_data *blockGeneratingLogTable_create(void);
struct blockGeneratingLogTable_data *blockGeneratingLogTable_duplicate(struct blockGeneratingLogTable_data *);
int blockGeneratingLogTable_destroy(struct blockGeneratingLogTable_data **);
int blockGeneratingLogTable_add(struct blockGeneratingLogTable_data *);
int blockGeneratingLogTable_del(struct blockGeneratingLogTable_data *);
void parse_blockGeneratingLogTable(const char *, char *);
SNMPCallback store_blockGeneratingLogTable;
void refresh_blockGeneratingLogTable(int);
FindVarMethod var_fileGeneratingLogTable;
struct fileGeneratingLogTable_data *fileGeneratingLogTable_create(void);
struct fileGeneratingLogTable_data *fileGeneratingLogTable_duplicate(struct fileGeneratingLogTable_data *);
int fileGeneratingLogTable_destroy(struct fileGeneratingLogTable_data **);
int fileGeneratingLogTable_add(struct fileGeneratingLogTable_data *);
int fileGeneratingLogTable_del(struct fileGeneratingLogTable_data *);
void parse_fileGeneratingLogTable(const char *, char *);
SNMPCallback store_fileGeneratingLogTable;
void refresh_fileGeneratingLogTable(int);
FindVarMethod var_callDetailLogRecordTable;
struct callDetailLogRecordTable_data *callDetailLogRecordTable_create(void);
struct callDetailLogRecordTable_data *callDetailLogRecordTable_duplicate(struct callDetailLogRecordTable_data *);
int callDetailLogRecordTable_destroy(struct callDetailLogRecordTable_data **);
int callDetailLogRecordTable_add(struct callDetailLogRecordTable_data *);
int callDetailLogRecordTable_del(struct callDetailLogRecordTable_data *);
void parse_callDetailLogRecordTable(const char *, char *);
SNMPCallback store_callDetailLogRecordTable;
void refresh_callDetailLogRecordTable(int);
FindVarMethod var_configurableSimpleUsageMeteringControlR2Table;
struct configurableSimpleUsageMeteringControlR2Table_data *configurableSimpleUsageMeteringControlR2Table_create(void);
struct configurableSimpleUsageMeteringControlR2Table_data *configurableSimpleUsageMeteringControlR2Table_duplicate(struct configurableSimpleUsageMeteringControlR2Table_data *);
int configurableSimpleUsageMeteringControlR2Table_destroy(struct configurableSimpleUsageMeteringControlR2Table_data **);
int configurableSimpleUsageMeteringControlR2Table_add(struct configurableSimpleUsageMeteringControlR2Table_data *);
int configurableSimpleUsageMeteringControlR2Table_del(struct configurableSimpleUsageMeteringControlR2Table_data *);
void parse_configurableSimpleUsageMeteringControlR2Table(const char *, char *);
SNMPCallback store_configurableSimpleUsageMeteringControlR2Table;
void refresh_configurableSimpleUsageMeteringControlR2Table(int);
FindVarMethod var_blockGeneratingLogR2Table;
struct blockGeneratingLogR2Table_data *blockGeneratingLogR2Table_create(void);
struct blockGeneratingLogR2Table_data *blockGeneratingLogR2Table_duplicate(struct blockGeneratingLogR2Table_data *);
int blockGeneratingLogR2Table_destroy(struct blockGeneratingLogR2Table_data **);
int blockGeneratingLogR2Table_add(struct blockGeneratingLogR2Table_data *);
int blockGeneratingLogR2Table_del(struct blockGeneratingLogR2Table_data *);
void parse_blockGeneratingLogR2Table(const char *, char *);
SNMPCallback store_blockGeneratingLogR2Table;
void refresh_blockGeneratingLogR2Table(int);
FindVarMethod var_callDetailLogRecordR2Table;
struct callDetailLogRecordR2Table_data *callDetailLogRecordR2Table_create(void);
struct callDetailLogRecordR2Table_data *callDetailLogRecordR2Table_duplicate(struct callDetailLogRecordR2Table_data *);
int callDetailLogRecordR2Table_destroy(struct callDetailLogRecordR2Table_data **);
int callDetailLogRecordR2Table_add(struct callDetailLogRecordR2Table_data *);
int callDetailLogRecordR2Table_del(struct callDetailLogRecordR2Table_data *);
void parse_callDetailLogRecordR2Table(const char *, char *);
SNMPCallback store_callDetailLogRecordR2Table;
void refresh_callDetailLogRecordR2Table(int);

WriteMethod write_creationTriggerList;
WriteMethod write_simpleUsageMeteringControlEntryStatus;
WriteMethod write_samplingRate;
WriteMethod write_configurationMask;
WriteMethod write_configurationRowStatus;
WriteMethod write_blockGeneratingLogMaxBlockSize;
WriteMethod write_blockGeneratingLogMaxTimeInterval;
WriteMethod write_blockGeneratingLogStorageType;
WriteMethod write_blockGeneratingLogRowStatus;
WriteMethod write_timesOfDay;
WriteMethod write_periodicTrigger;
WriteMethod write_fileGeneratingLogStorageType;
WriteMethod write_fileGeneratingLogEntryStatus;
WriteMethod write_configurationR2Mask;
WriteMethod write_configurationR2Status;
WriteMethod write_blockGeneratingLogVersion;
#endif				/* __LOCAL_CDR2MIB_H__ */
