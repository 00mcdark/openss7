`configure' configures strsctp 0.9.2 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-maintainer-mode  enable make rules and dependencies not useful
			  (and sometimes confusing) to the casual installer
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-shared[=PKGS]
                          build shared libraries [default=yes]
  --enable-static[=PKGS]
                          build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-compress-manpages
                          compress manpges with gzip -9 or leave them
                          uncompressed. [default=yes]
  --disable-public        disable public release. [default=no]
  --enable-tools          build and install user packages. [default=yes]
  --enable-modules        build and install kernel packages.
                          [default=yes]
  --disable-modules       disable kernel modules, prepare object for linking
                          into the kernel. [default=no]
  --enable-k-inline       enable kernel inline functions. [default=no]
  --enable-k-safe         enable kernel module run-time safety checks.
                          [default=yes]
  --enable-k-test         enable kernel module run-time testing.
                          [default=no]
  --enable-k-debug        enable kernel module run-time debugging.
                          [default=no]
  --enable-k-modversions  specify whether symbol versioning is to be used on
                          symbols exported from built modules.
                          [default=yes]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-tags[=TAGS]
                          include additional configurations [automatic]
  --with-cooked-manpages  convert manual pages to remove macro dependencies
                          and grefer references. [default=no]
  --with-rpm-epoch=EPOCH  specify the EPOCH for the RPM spec file.
                          [default=1]
  --with-rpm-release=RELEASE
                          specify the RELEASE for the RPM spec file.
                          [default=Custom]
  --with-gpg-user=USERNAME
                          specify the USER for signing RPMs and tarballs.
                          [default=${GNUPGUSER}]
  --with-gpg-home=HOMEDIR specify the HOME for signing RPMs and tarballs.
                          [default=${GNUPGHOME:-~/.gnupg}]
  --with-k-release=UTSRELEASE
                          specify the UTS release of the linux kernel for
                          which the build is targetted. If this option is not
                          set, the build will be targetted at the kernel
                          running in the build environment. [default=`uname
                          -r`]
  --with-k-prefix=DIR     specify the kernel directory prefix for install.
                          [default=/]
  --with-k-rootdir=DIR    specify the root directory for configure.
                          [default=${DESTDIR:-/}]
  --with-k-modules=DIR    specify the directory to which kernel modules will
                          be installed.
                          [default=/lib/modules/K-RELEASE/misc]
  --with-k-build=DIR      specify the base kernel build directory in which
                          configured kernel source resides.
                          [default=K-MODULES-DIR/build]
  --with-k-sysmap=MAP     specify the kernel system map file.
                          [default=K-BUILD-DIR/System.map]
  --with-k-includes=DIR   specify the include directory of the kernel for
                          which the build is targetted.
                          [default=K-BUILD-DIR/include]
  --with-k-archdir=DIR    specify the kernel source architecture specific
                          directory. [default=K-BUILD-DIR/arch]
  --with-k-machdir=DIR    specify the kernel source machine specific
                          directory. [default=K-ARCHDIR/ARCH]
  --with-k-optimize=HOW   specify optimization, normal, size, speed or quick.
                          [default=normal]
  --with-lis=HEADERS      specify the LiS header file directory.
                          [default=INCLUDEDIR/LiS]
  --with-lfs=HEADERS      specify the LfS header file directory.
                          [default=INCLUDEDIR/LfS]
  --with-sctp             include xopen sctp driver in build.
                          [default=yes]
  --with-sctp2            include xopen sctp version 2 driver in build.
                          [default=no]
  --with-xns              include xopen xns headers in install.
                          [default=yes]
  --with-tli              include xopen tli modules in build.
                          [default=yes]
  --with-inet             include xopen inet driver in build.
                          [default=yes]
  --with-xnet             include xopen xnet library in build.
                          [default=yes]
  --with-sock             include xopen sock library in build.
                          [default=yes]
  --with-strconf-master=FILENAME
                          specify the file name to which the configuration
                          master file is written [default=Config.master]
  --with-base-major=MAJOR specify the base major device number from which to
                          start numbering major devices [default=230]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
              headers in a nonstandard directory <include dir>
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CPP         C preprocessor
  LD          Linker loader command
  CXXCPP      C++ preprocessor
  F77         Fortran 77 compiler command
  FFLAGS      Fortran 77 compiler flags
  SOELIM      Roff source elminiation command
  REFER       Roff references command
  TBL         Roff table command
  PIC         Roff picture command
  GZIP        Manpages compression commands
  RPM         Rpm command
  RPMBUILD    Build rpms command
  GPG         GPG signature command
  GNUPGUSER   GPG user name
  GNUPGHOME   GPG home directory
  LDCONFIG    Configure loader command
  DESTDIR     Cross build root directory
  DEPMOD      Build kernel module dependencies command
  MODPROBE    Probe kernel module dependencies command
  LSMOD       List kernel modules command
  LSOF        List open files command

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <bugs@openss7.org>.
