'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) $Id: tpi_sctp.7.man,v 0.9.2.8 2006/10/16 00:14:36 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2006/10/16 00:14:36 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: tpi_sctp.7.man,v $
.\" Revision 0.9.2.8  2006/10/16 00:14:36  brian
.\" - updates for release and test case passes on UP
.\"
.\" Revision 0.9.2.7  2006/10/10 10:46:17  brian
.\" - updates for release
.\"
.\" Revision 0.9.2.6  2006/04/26 10:45:17  brian
.\" - updated manual pages and references
.\"
.\" Revision 0.9.2.5  2006/04/05 09:44:33  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strsctp.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strsctp.macros
.\"
.\"
.TH TPI-SCTP 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "Transport Provider Interface (TPI)"
.\"
.\"
.SH NAME
.B tpi_sctp
\- Transport Provider Interface (TPI) \- Stream Control Transmission Protocol (SCTP) Corrigendum
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/tihdr.h>
.br
.B #include <sys/tpi_ip.h>
.br
.B #include <sys/tpi_sctp.h>
.HP
.BI "int " sctp_stream " = open(" \fR\*(lq/dev/sctp_t\*(rq\fI ", " flags );
.\"
.\"
.SH DESCRIPTION
.PP
.PP
.B TPI-SCTP
provides a stream supporting the Transport Provider Interface,
.BR tpi (7),
to the Stream Control Transmission Protocol,
.[
rfc2960
.]
.[
rfc3309
.]
.[
rfc4460
.]
.BR sctp (7).
This
.IR STREAMS (4)
interface provides the
.BR sctp (7)
protocol service interface using the T-primitives of the
.BR tpi (7).
This interface is intended solely for use by user programs or protocol modules
requiring the common
.BR tpi (7)
interfae, such as the
.BR xti (3)
and
.BR sockets (3)
library.
.SS "ADDRESS FORMATS"
.PP
The SCTP address format is structured as follows:
.sp
.nf
\fC\s-1\
struct sockaddr_in {
    sa_family_t         sin_family;  /* Address family */
    unsigned short int  sin_port;    /* Port number */
    struct in_addr      sin_addr;    /* Internet address */
    /* padding */
};
\s+1\fP
.fi
.PP
The
.B sockaddr_in
structure contains the following members:
.TP \w'sin_family\(em'u
.I sin_family
The address family.  Always set to
.BR AF_INET " or " AF_UNSPEC .
.PD 0
.TP
.I sin_port
The port number of the transport endpoint in network byte order.
.TP
.I sin_addr
The IP address of the transport endpoint in network byte order.
.TP
.I (padding)
Padding to pad the size of the
.B sockaddr_in
structure to the size of a
.B sockaddr
structure.
.PD
.PP
The structure is padded to the size of a
.B sockaddr
structure.
.PP
SCTP adresses can also be formed as an array of
.B sockaddr_in
structure to represent multiple addresses for multi-homed hosts.
.\"
.\"
.SH "OPTIONS"
.PP
Options are formatted according to the
.B t_opthdr
structure described in
.BR xti (3).
A SCTP transport provider compliant to this specification supports none, all or
any subset of the options defined here.  An implementation may restrict the
use of any of these options by offering them only in a privileged or read-only
mode.
.PP
.B TPI-SCTP
provides options at the
.BR XTI_GENERIC ", " T_INET_IP " and " T_INET_SCTP
option levels as described in the subsections that follow.  Of the
.B T_INET_SCTP
level protocol options, none of the options are of end-to-end significance.
.\"
.\"
.SS XTI_GENERIC
.PP
Options at this level are specific to the X/Open Transport Interface (XTI/TLI)
and are common to all transport providers.  For more information, see
.BR xti (3).
.PP
The options defined with the option level
.B XTI_GENERIC
are as follows:
.TP
.B XTI_DEBUG
Sets debugging flags for the Stream.  This option is formatted as an array of
.BR t_uscalar_t .
Legal values are implementation defined.  For more information, see
.BR xti (3).
.TP
.B XTI_LINGER
Sets whether, and the amount of time if, the Stream will linger waiting for
unsent data to be delivered.  This option is formatted as a
.B t_linger
structure as follows:
.RS
.nf
\fC\s-1\
struct t_linger {
    t_scalar_t l_onoff;   /* option on/off */
    t_scalar_t l_linger;  /* linger time */
};
\s+1\fP
.fi
.TP \w'l_linger\(em'u
.I l_onoff
Specifies whether to linger
.RB ( T_YES ") or not (" T_NO ).
Legal values are
.BR T_YES " and " T_NO .
.PD 0
.TP
.I l_linger
Specifies the amount of time (in seconds) to linger.  Legal values are
.BR T_INFINITE ", " T_UNSPEC
and all positive numbers including zero.
.PD
.RE
.IP ""
For more information, see
.BR xti (3).
.TP
.B XTI_RCVBUF
Specifies the size, in bytes, of the receive buffer.  This option is formatted
as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_RCVLOWAT
Specifies the low water mark above which received data will be indicated and
delivered to the user.  This option is formatted as
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_SNDBUF
Specifies the size, in bytes, of the transmit buffer.  This option is
formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_SNDLOWAT
Specifies the low water mark above which queued data will be transmitted to
the peer.  This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.\"
.\"
.SS T_INET_IP
.PP
Options with this level are specific to the Internet Protocol (IP)
.[
rfc791
.]
and are common to all the protocol levels in IP.  For more information, see
.BR tpi_ip (7).
.PP
The options defined with the option level
.B T_INET_IP
are as follows:
.TP
.B T_IP_OPTIONS
Provides control for the T_IP OPTIONS field.  Used for debugging.  This option
is formatted as an array of
.BR "unsigned char" ,
up to 40 elements.  For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_TOS
Provides control of the type-of-service byte present in each transmited T_IP
packet.  This option is formated as an
.BR "unsigned char" .
Legal values can be generated with the
.BR SET_TOS ()
macro described in
.BR tpi_ip (7).
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_TTL
Provides control of the time-to-live byte present in each transmitted T_IP
packet.  This option is formatted as an
.BR "unsigned char" .
Legal values are from 0 to 255.  For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_REUSEADDR
Allows multiple non-listening binds to the same address.  This option is
formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_DONTROUTE
Bypasses routing tables and routes directly to an interface.  Used for
debugging.  This option is formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_BROADCAST
Allows broadcast addresses to be used.  This option is not applicable to SCTP
and is always set to
.BR T_NO .
This options is formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.\"
.\"
.SS T_INET_SCTP
.PP
Options within this level are specific to the Stream Control Transmission Protocol
(SCTP)
.[
rfc2960
.]
yet are used by protocol levels using SCTP transport.
.PP
The options defined with the option level
.B T_INET_SCTP
are as follows:
.\"
.TP
.B T_SCTP_NODELAY
This option determines whether to delay transmission of data to attempt to
coalesce smaller packets into larger packets.
The option value is formatted as a
.B t_uscalar_t
that can have the values
.BR T_YES " or " T_NO .
When set to
.BR T_YES ,
it conveys that packets are not to be delayed to coalesce smaller packets.
When set to
.BR T_NO ,
it conveys that packets are being delayed to coalesce smaller packets.
This option is used with
.BR T_OPTMGMT_REQ (7).
.sp
This option parallels the
.I T_TCP_NODELAY
option for compatibility with
.BR tpi_tcp (7).
.IR T_SCTP_NODELAY " and " T_TCP_NODELAY
can be used interchangeably.
.sp
When Nagle is enabled,
.B SCTP
uses the Nagle algorithm
.[
rfc896
.]
for bundling DATA chunks into a packet.  This results in far fewer short
packets in the network.  The algorithm is that described in RFC 896
.[
rfc896
.]
ane RFC 1122
.[
rfc1122
.]
with the Minshall modifications to accommodate delayed SACK as described in
draft-minshall-nagle-01.txt.
.[
minshall-nagle-01
.]
(Note: later version of
.BR tcp (7)
also include the Minshall modification).
.\"
.TP
.B T_SCTP_MAXSEG
This option determines the maximum segment size for outgoing packets.  Values
greater thatn the association MTU are ignored and have no effect.  This
parallels the
.I T_TCP_MAXSEG
option for compatibility with
.BR tpi_tcp (7).
.IR T_SCTP_MAXSEG " and " T_TCP_MAXSEG
can be used interchangeably.
.sp
This value determines the maximum size (in bytes) above which SCTP will
fragment larger DATA chunks into smaller DATA chunks, and beneath which SCTP
will bundle DATA chunks into a single packet or combined smaller DATA chunks
into larger DATA chunks.  Normally this value is the association MTU value
minus the size of the current IP and SCTP headers, minus the size of one DATA
chunk header.  If the user sets this to a lower value, the lower value will be
used.
.sp
This option is formatted as a
.B t_scalar_t
indicating the maximum size in bytes.
This option is used with
.BR T_OPTMGMT_REQ (7).
.\"
.TP
.B T_SCTP_CORK
This option determines whether to cork the transmission stream waiting for
subsequent packets.  When set, this option permits a number of
.BR T_DATA_REQ (7)
primitives to be issued without sending the data subsequent to the cork.
When the cork is released, all subsequent data will be permitted to proceed.
The option is formatted as a
.B t_scalar_t
that can have the values
.BR T_YES ,
conveying that transmission is corked, or
.BR T_NO ,
conveying that transmission is uncorked.
THis option is used with
.BR T_OPTMGMT_REQ (7).
.\"
.TP
.B T_SCTP_SID
This option determines the SCTP Stream Identifier that is to be associated
with a given data transmission.  The option value is formatted as a
.B t_scalar_t
that contains the numeric value of the SCTP Stream Identifier.  This option
is used with
.BR T_OPTMGMT_REQ (7).
The current value that is set will be used on all packets sent with
.BR T_OPTDATA_REQ "(7), " T_DATA_REQ "(7), " T_EXDATA_REQ "(7) or " M_DATA (9).
When option
.I T_SCTP_RECVSID
is set, the value associated with the received packet will be included in
.BR T_OPTDATA_IND (7)
indications.
See
.IR T_SCTP_RECVSID .
.\"
.TP
.B T_SCTP_PPI
This option determines the SCTP Payload Protocol Identifier that is to be
associated with a given data transmission.  The option value is formatted as a
.B t_scalar_t
that contains the numeric value of the SCTP Payload Protocol Identifier.  This
option is used with
.BR T_OPTMGMT_REQ (7).
The current value that is set will be used on all packets sent with
.BR T_OPTDATA_REQ "(7), " T_DATA_REQ "(7), " T_EXDATA_REQ "(7) or " M_DATA (9).
When option
.I T_SCTP_RECVPPI
is set, the value associated with the received packet will be included in
.BR T_OPTDATA_IND (7)
indications.
See
.IR T_SCTP_RECVPPI .
.\"
.TP
.B T_SCTP_RECVSID
Determine whether a
.I T_SCTP_SID
option
indicating the SCTP Stream Identifier of the received data
will be included in a
.BR T_OPTDATA_IND (7)
message as well as reflected in the response to a current value
.B T_GET
operation to
.BR T_OPTMGMT_REQ (7).
The option value is a
.B t_scalar_t
with valid values
.BR T_YES " or " T_NO .
This option is for use with
.BR T_OPTMGMT_REQ (7).
.\".sp
.\"This option is for use with the
.\".BR sockets (3)
.\"library.
.\"For
.\".BR xti (3)
.\"it changes the semantics of the value returned to a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7).
.\"When set to
.\".BR T_YES ,
.\"the current value obtained with a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7)
.\"will be the value of the last received message.
.\"When set to
.\".BR T_NO ,
.\"the current value obtains with a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7)
.\"will be the default value or the value last set with a
.\".B T_NEGOTIATE
.\"operation to
.\".BR T_OPTMGMT_REQ (7).
.\"See
.\".IR T_SCTP_SID .
.\"
.TP
.B T_SCTP_RECVPPI
Determine whether a
.I T_SCTP_PPI
option
indicating the SCTP Payload Protocol Identifier of the received data
will be included in a
.BR T_OPTDATA_IND (7)
message as well as reflected in the response to a current value
.B T_GET
operation to
.BR T_OPTMGMT_REQ (7).
The option value is a
.B t_scalar_t
with valid values
.BR T_YES " or " T_NO .
This option is for use with
.BR T_OPTMGMT_REQ (7).
.\".sp
.\"This option is for use with the
.\".BR sockets (3)
.\"library.
.\"For
.\".BR xti (3)
.\"it changes the semantics of the value returned to a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7).
.\"When set to
.\".BR T_YES ,
.\"the current value obtained with a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7)
.\"will be the value of the last received message.
.\"When set to
.\".BR T_NO ,
.\"the current value obtains with a
.\".B T_GET
.\"operation to
.\".BR T_OPTMGMT_REQ (7)
.\"will be the default value or the value last set with a
.\".B T_NEGOTIATE
.\"operation to
.\".BR T_OPTMGMT_REQ (7).
.\"See
.\".IR T_SCTP_PPI .
.\"
.TP
.B T_SCTP_HEARTBEAT_ITVL
This option determines the time interval (in seconds) between successive
HEARTBEAT messages used to probe destination transport addresses for RTT
calculation and activity.  This option is formatted as a
.BR t_scalar_t .
Valud values are zero (0), indicating do not heartbeat, or a value of 1 second
or greater indicating the heartbeat interval.
This options is used with
.BR T_OPTMGMT_REQ "(7), " T_CONN_REQ "(7) or " T_CONN_RES (7).
.sp
The value set with
.BR T_OPTMGMT_REQ (7)
is the value that will be assigned to new destinations.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
Active destinations can be controlled with the option
.IR T_SCTP_HB ,
below.
.\"
.TP
.B T_SCTP_HB
This option determines the heartbeat activation and interval associated with
a specific destination address.  The option value is a
.B t_sctp_hb
structure.  This option will return an error if it is attempted on a stream in
the unconnected state.  The
.B t_sctp_hb
structure is formatted as follows:
.sp
.nf
\fC\s-1\
typedef struct t_sctp_hb {
    uint32_t hb_dest;        /* destination address */
    t_uscalar_t hb_onoff;    /* activation flag */
    t_uscalar_t hb_itvl;     /* interval in milliseconds */
} t_sctp_hb_t;
\s+1\fR
.fi
.sp
The
.B t_sctp_hb
structure has the following fields:
.RS
.TP \w'hb_onoff\(em'u
.I hb_dest
is the
.B sockaddr_in
structure that contains the destination address to which the heartbeat setting
applies.
.PD 0
.TP
.I hb_onoff
is an integer boolean activation flag indicating whether heartbeat is active
on the destination.
.TP
.I hb_itvl
is the integer heartbeat interval in milliseconds.
.PD
.PP
This option is intended to be used with
.BR T_OPTMGMT_REQ (7).
.I dest
must be one of the valid addresses associated with the connection.
Note that heartbeat activity can also be set on an association basis using the
option
.IR T_SCTP_HEARTBEAT_ITVL .
.RE
.\"
.TP
.B T_SCTP_RTO_INITIAL
This option determines the time interval (in milliseconds) that will be used
as an initial RTO (Retransmission Time Out) value when sending packets to a
destination for the first time.
This option if formatted as a
.BR t_scalar_t .
Valid values are zero or greater and must be within the range from
.IR T_SCTP_RTO_MIN " to " T_SCTP_RTO_MAX .
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
Active destinations can be controlled with the option
.IR T_SCTP_RTO ,
below.
.\"
.TP
.B T_SCTP_RTO_MIN
Determine the time interval (in milliseconds) that will be used as a minimum
RTO (Retransmission Time Out) value when sending packets.
This option if formatted as a
.BR t_scalar_t .
Value values are
zero or greater and must be less than or equal to the value
.IR T_SCTP_RTO_MAX .
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
Active destinations can be controlled with the option
.IR T_SCTP_RTO ,
below.
.\"
.TP
.B T_SCTP_RTO_MAX
Determine the time interval (in milliseconds) that will be used as a maximum
RTO (Retransmission Time Out) value when sending packets.
This option if formatted as a
.BR t_scalar_t .
Value values are
zero or greater and must be greater than or equal to the value
.IR T_SCTP_RTO_MIN .
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
Active destinations can be controlled with the option
.IR T_SCTP_RTO ,
below.
.\"
.TP
.B T_SCTP_PATH_MAX_RETRANS
This option determines the number of times that the sending endpoint will
attempt retransmitting a packet to a given destination transport address before
it considers that destination transport address inactive.  This option is
formatted as a
.BR t_scalar_t .
Value values include zero.
This options is used with
.BR T_OPTMGMT_REQ "(7), " T_CONN_REQ "(7) or " T_CONN_RES (7).
.sp
The value set with
.BR T_OPTMGMT_REQ (7)
is the value that will be assigned to new destinations.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
Active destinations can be controlled with the option
.IR T_SCTP_RTO ,
below.
.\"
.TP
.B T_SCTP_RTO
This option determines the retransmission timeout parameters associated with a
specific destination address.
The option value is formatted as a
.B t_sctp_rto
structure, formatted as follows:
.sp
.nf
\fC\s-1\
typedef struct t_sctp_rto {
    uint32_t rto_dest;       /* destination address */
    t_uscalar_t rto_initial; /* RTO.Initial (millisec) */
    t_uscalar_t rto_min;     /* RTO.Min (millisec) */
    t_uscalar_t rto_max;     /* RTO.Max (millisec) */
    t_uscalar_t max_retrans; /* Path.Max.Retrans (retries) */
} t_sctp_rto_t;
\s+1\fR
.fi
.sp
The
.B t_sctp_rto
structure has the following fields:
.RS
.TP \w'max_retrans\(em'u
.I rto_dest
is a
.B sockaddr_in
structure that contains the destination address to which the rto parameter
settings apply.
.PD 0
.TP
.I rto_initial
is the
.B t_uscalar_t
initial retransmission timeout value in milliseconds.  For valid values, see
.IR T_SCTP_RTO_INITIAL .
.TP
.I rto_min
is the
.B t_uscalar_t
minimum retransmission timeout value in milliseconds.  For valid values, see
.IR T_SCTP_RTO_MIN .
.TP
.I rto_max
is the
.B t_uscalar_t
maximum retransmission timeout value in milliseconds.  For valid values, see
.IR T_SCTP_RTO_MAX .
.TP
.I max_retrans
is the
.B t_uscalar_t
maximum number of retransmissions.  For valid values, see
.IR T_SCTP_PATH_MAX_RETRANS .
.PD
.PP
For use with
.BR T_OPTMGMT_REQ (7),
.I dest
must be one of the valid destination addresses associated with the transport
connection.
.RE
.\"
.TP
.B T_SCTP_CKSUM_TYPE
This option determines the checksum type that will be used to checksum SCTP
packets.
The option value is formatted as a
.BR t_scalar_t ,
and can have on of the following values:
.RS
.TP
.I T_SCTP_CSUM_ADLER_32
use the older RFC 2960
.[
rfc2960
.]
Adler 32 checksum to checksum SCTP packets.
.TP
.I T_SCTP_CSUM_CRC_32C
use the newer RFC 3309
.[
rfc3309
.]
CRC32 checksum to checksum SCTP packets.
.PP
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
.RE
.\"
.TP
.B T_SCTP_MAC_TYPE
This option determines the MAC (Message Authentication Code) type that will be
used with signing cookies in INIT-ACK messages.
The option value is formatted as a
.BR t_scalar_t ,
and can have one of the following values:
.RS
.TP
.I T_SCTP_HMAC_NONE
No message authentication code will be used.  The MAC field will be populated
with all ones.  This completely disables the MAC features of
.BR SCTP ,
and should be used with caution.
.TP
.I T_SCTP_HMAC_SHA_1
The message authentication code will use SHA-1 message digest.
.TP
.I T_SCTP_HMAC_MD5
The message authentication code will use MD5 message digest.
.PP
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
The option can be read at any time and reflects the current setting.
.RE
.\"
.TP
.B T_SCTP_COOKIE_LIFE
Determines the cookie lifetime associated with a transport endpoint.  This is
the amount of time that cookies sent to the peer endpoint in an INIT-ACK
message will be valid.  For
.B SCTP
this also limits the maximum for which the HMAC secret key for the cookie will
be valid.  The option value is formatted as a
.B t_scalar_t
that contains the time interval in milliseconds.  Valid values are zero (0) or
greater.  The default value is that proscribed by RFC 2960.
.[
rfc2960
.]
This options is used with
.BR T_OPTMGMT_REQ "(7), " T_CONN_REQ "(7) or " T_CONN_RES (7).
.sp
The value set with
.BR T_OPTMGMT_REQ (7)
is the value assigned to the transport endpoint.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
.sp
Reducing this value will increase the changes that passive connection attempts
will fail due to expired cookies.  Increasing the value will reduce the
overall security of the system by permitting attackers an increased interval
to crack HMACs and guess verification tags.  This value may be adjusted in
conjunction with the
.I T_SCTP_COOKIE_INC
to meet most objected for successful passive connection attempts with the best
security afforded by smaller values of
.IR T_SCTP_COOKIE_LIFE .
.sp
Unfortunately the
.IR T_SCTP_COOKIE_LIFE " and " T_SCTP_COOKIE_INC
must be adjusted to accommodate the slowest peer on the slowest connection.
The default setting is adequate for Internet applications.
.\"
.TP
.B T_SCTP_COOKIE_INC
This option determines the time increment (in milliseconds) that will be added
to the lifespan of the cookie in an INIT-ACK if the sender of the INIT
requested cookie preservation to lengthen the lifespan of the cookie.
The option value is formatted as a
.BR t_scalar_t .
Valid values include zero.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
The option can be read at any time and reflects the current setting.
.\"
.TP
.B T_SCTP_THROTTLE_ITVL
Determines the interval (in milliseconds) within which the receiver will not
accept more than one INIT or COOKIE-ECHO.
The option value is formatted as a
.BR t_scalar_t .
Zero (don't throttle) is a valid value.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
The option can be read at any time and reflects the current setting.
.\"
.TP
.B T_SCTP_ISTREAMS
Sets the maximum number of inbound streams or gets the actual number of
inbound streams associated with the transport connection.
The option value is formatted as a
.BR t_scalar_t .
Valid values are from 1 to 16,736.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
For active transport connections, setting this option has no effect on the
current transport connection.
.\"
.TP
.B T_SCTP_OSTREAMS
Sets the maximum number of outbound streams or gets the actual number of
outbound streams associated with the transport connection.
The option value is formatted as a
.BR t_scalar_t .
Valid values are from 1 to 16,736.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
For active transport connections, setting this option has no effect on the
current transport connection.
.\"
.TP
.B T_SCTP_SSN
This option determines the SCTP Stream Sequence Number that is to be associated
with a given data transmission.  The option value is formatted as a
.B t_scalar_t
that contains the numeric value of the SCTP Stream Sequence Number.  This options
is used with
.BR T_OPTMGMT_REQ (7).
The SCTP transport provider determines which values will be used on all packets sent with
.BR T_OPTDATA_REQ "(7), " T_DATA_REQ "(7), " T_EXDATA_REQ "(7) or " M_DATA (9).
The current value, when indicated, using
.BR T_OPTDATA_IND (7),
will be the value that was contained in the last packet indicated with
.BR T_OPTDATA_IND (7).
.\"
.TP
.B T_SCTP_ECN
This option determines whether the Explicit Congestion Notification (ECN)
capability of RFC 3168
.[
rfc3168
.]
and Appendix A of RFC 2960
.[
rfc2960
.]
is used on the transport connection.
The option value is formatted as a
.B t_scalar_t
and have have valid values
.BR T_YES " or " T_NO .
.sp
When set to
.BR T_YES ,
explicit congestion notification is enabled on the transport connection.
When set to
.BR T_NO ,
explicit congestion notification is disabled on the transport connection.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
For active transport connections, setting this option has no effect on the
current transport connection.
.\"
.TP
.B T_SCTP_ALI
This option determines the adaptation layer information
(described in draft-ietf-tsvwg-addip-sctp-08.txt)
.[
draft-ietf-tsvwg-addip-sctp-08.txt
.]
to be used in the INIT
or INIT-ACK on all passive or active connection attempts on the transport
endpoint, or gets the adaptation layer information provided by the transport
peer on a connected transport endpoint.
The option value is formatted as a
.B t_scalar_t
that contains the adaptation layer information.
.sp
When set to zero (0), no adaptation layer information will be included in the
INIT or INIT-ACK; when non-zero, it contains the flag bits that will be sent
in the adaptation layer information in the INIT or INIT-ACK.
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
.sp
If the transport endpoint is in a disconnected state (and has never been
connected), getting this option returns zero (0).  If the transport endpoint
has been in a connected state, getting this option returns zero (0) if no
adaptation layer information was present during the connection, or returns
the adaptation layer information bits if provided by the peer.
.sp
This option supports the adaptation layer information features described in
draft-ietf-tsvwg-addip-sctp-08.txt.
.[
draft-ietf-tsvwg-addip-sctp-08.txt
.]
.\"
.TP
.B T_SCTP_PR
This option determines whether partial reliability (described in
RFC 3758)
.[
rfc3758
.]
will be supported or required on transport connection establishment, or gets
the indication of support for partial reliability provided by the peer on a
connected transport endpoint.
The option value is formatted as a
.B t_scalar_t
and can contain one of the following values:
.RS
.TP
.I T_SCTP_PR_NONE
do not place or response with a Forward TSN parameter in an INIT or INIT-ACK
indicating to the peer that we do not support partial reliability for this
transport connection.
.TP
.I T_SCTP_PR_PREFERRED
place and response with a Forward TSN parameter in an INIT or INIT-ACK
indicating to the peer that we support partial reliability, but do no require
the peer to support partial reliability.
.TP
.I T_SCTP_PR_REQUIRED
place and response with a Forward TSN parameter in an INIT or INIT-ACK
indicating to the peer that we support partial reliability and require the
peer to do the same.
.PP
For a connected transport endpoint, when this options is set to
.BR T_SCTP_PR_PREFERRED " or " T_SCTP_PR_REQUIRED ,
it indicates that the peer supports partial reliability.  When set to
.BR T_SCTP_PR_NONE ,
it indicates that the peer does not support partial reliability.
.RE
.\"
.TP
.B T_SCTP_MAX_INIT_RETRIES
This option determines the number of times that an INIT or COOKIE-ECHO will be
resent before abandoning the transport connection initialization.
This option value is formatted as a
.BR t_scalar_t .
To be effective, this option must be set with the
.BR T_CONN_REQ (7)
primitive or before the
.BR T_BIND_REQ (7)
primitive with non-zero
.IR CONIND_number ,
or when a passive connection indication is accepted with
.BR T_CONN_RES (7).
.\"
.TP
.B T_SCTP_MAX_BURST
This option determines the number of MTUs of data that will be sent in a
single burst, as defined in
SCTP Errata.
.[
rfc4460
.]
The option value is formatted as a
.BR t_scalar_t .
Valid values are one (1) or greater.  This option may be changed at any time
during the transport connection lifetime.  This option is of local
significance only.
.\"
.TP
.B T_SCTP_ASSOC_MAX_RETRANS
Determines the number of times that the sending endpoint will attempt
retransmitting a packet on a given transport connection before it aborts the
connection.
This option is formatted as a
.BR t_scalar_t .
Value values include zero.  This value should be larger than the sum of all
the
.I T_SCTP_PATH_MAX_RETRANS
values of each of the destinations.  This option may be changed on the stream
at any time during the life of the transport connection.
.\"
.TP
.B T_SCTP_SACK_DELAY
This option determines the maximum SACK delay as the interval of time (in
milliseconds) that the sending endpoint will delay an acknowledgment of a
received DATA chunk.
The option value is formatted as a
.BR t_scalar_t .
Valid values are zero (0) or greater, however, the maximum SACK delay should
not exceed 500 milliseconds (setting this value to greater than 500
milliseconds is forbidden by RFC 2960)
.[
rfc2960
.]
for Internet Applications.
This option may be changed at any time during the life of the transport
connection.
.\"
.TP
.B T_SCTP_DISPOSITION
This option determines whether SCTP will retain and deliver messages that were
not successfully acknowledged by the peer for retrieval, or will deliver
confirmation of acknowledgment for message successfully acknowledged by the
peer.
The option value is formatted as a
.BR t_scalar_t ,
and can have one of the following values:
.RS
.TP
.I T_SCTP_DISPOSITION_NONE
Messages will not be retained for retrieval and acknowledgments will not be
provided for messages.
.TP
.I T_SCTP_DISPOSITION_UNSENT
Messages that were unsent will be retained for retrieval.
.TP
.I T_SCTP_DISPOSITION_SENT
Messages that were sent and unacknowledged, or that were unsent, will be
retained for retrieval.
.TP
.I T_SCTP_DISPOSITION_GAP_ACKED
Messages that were sent and gap acknowledged as well as messages that were
sent and unacknowledged and messages that were unsent, will be retained for
retrieval.
.TP
.I T_SCTP_DISPOSITION_ACKED
Messages that were sent and acknowledged (but unconfirmed), messages that were
sent and gap acknowledged, messages that were sent and unacknowledged, and
messages that were unsent, will be retained for retrieval.
.PP
This option permits messages that are unsent, sent but not acknowledged or
sent and gap acknowledged, to be retrieved from the transport endpoint before
close.  This is accomplished by setting the
.I T_SCTP_DISPOSITION
option before shutdown or abort of the transport connection, and then checking
.BR T_OPTDATA_IND (7)
after
.BR POLLHUP ", " SIGPIPE " or " EPIPE
indicating a shutdown or abort of the transport connection.
Messages then read will set the
.I T_SCTP_DISPOSITION
option on the transport endpoint to indicate whether they were
.IR T_SCTP_DISPOSITION_UNSENT ", " T_SCTP_DISPOSITION_SENT ", " T_SCTP_DISPOSITION_GAP_ACKED " or " T_SCTP_DISPOSITION_ACKED .
.PP
If the transport endpoint has option
.I T_SCTP_PR
set and the peer supports partial reliability (see
.IR T_SCTP_PR ),
message which have failed partial reliability delivery (were dropped) will also
be indicated by
.BR T_OPTDATA_IND (7).
.PP
Alternatively, if the socket option
.I T_SCTP_DISPOSITION
is set to
.IR T_SCTP_DISPOSITION_ACKED ,
.BR T_OPTDATA_IND (7)
will also be used to indicate
acknowledgments for messages not acknowledged sent at the
time of the transport connection disconnection.
.PP
This option is intended for use with the
.BR sockets (3)
library,
is extremely non-portable,
and has little use for
.BR tpi (7).
.RE
.\"
.TP
.B T_SCTP_LIFETIME
This option determines the SCTP lifetime
.[
rfc2960
.]
or the partial reliability timed reliability lifetime
.[
rfc3758
.]
associated with message that are sent on this transport endpoint.
The option value is formatted as a
.B t_scalar_t
that contains the lifetime (in milliseconds).
.\"
.TP
.B T_SCTP_ADD
This option determines whether the transport endpoint will support the add IP
extension
.RB ( ADD-IP " and " DEL-IP )
described in draft-ietf-tsvwg-addip-sctp-08.txt.
.[
draft-ietf-tsvwg-addip-sctp-08.txt
.]
The option value is formatted as a
.B t_scalar_t
that can have values
.BR T_YES " or " T_NO .
.sp
When set to
.BR T_YES ,
this option request that SCTP respond to ASCONF chunks with ADD-IP or DEL-IP
requests.  When set to
.BR T_NO ,
SCTP will refuse these requests for the transport connection.
This option can be set or read at any time during the transport connection
lifetime.
.\"
.TP
.B T_SCTP_ADD_IP
This option adds a IP address to an existing transport endpoint.
The option value is formatted as a
.B sockaddr_in
structure that contains the local IP address to add.
Option
.I T_SCTP_ADD
must be set to
.B T_YES
for this option to be valid.
.sp
If the transport stream is in a connected or connecting state, this invokes
the ASCONF procedure to add the IP address to the existing transport
connection.  If the transport stream is in a disconnected state, setting this
option will add the local IP address to the addresses bound with
.BR T_BIND_REQ (7),
and acts as a hierarchal subsequent binding operation.
.sp
Note that if a transport endpoint was initially bound to
.IR INADDR_ANY ,
IP addresses may be automatically added to the transport connection
if new network interfaces are added to the system, or if existing network
interfaces are configured using
.BR ifconfig (8)
or equivalent commands.
.\"
.TP
.B T_SCTP_DEL_IP
This option deletes an IP address from an existing transport endpoint.
The option value is formatted as a
.B sockaddr_in
structure that contains the local IP address to delete.
Option
.I T_SCTP_ADD
must be set to
.B T_YES
for this option to be valid.
.sp
If the transport stream is in a connected or connecting state, this invokes
the ASCONF procedure to remove the IP address from the transport connection.
If the transport stream is in a disconnected state, setting this option will
remove the local IP address from the addresses bound with
.BR T_BIND_REQ (7),
and acts as a hierarchal subsequent unbinding operation.
.sp
Note that if the transport endpoint was initially bound to
.IR INADDR_ANY ,
IP addresses may be automatically removed from the transport connection if
existing network interfaces are removed from the system, or if network
interfaces are reconfigured with
.BR ifconfig (8)
or equivalent commands.
.\"
.TP
.B T_SCTP_SET
This option determines whether the transport endpoint will support the add IP
extensions
.RB ( SET-PRIMARY )
described in draft-ietf-tsvwg-addip-sctp-08.txt.
.[
draft-ietf-tsvwg-addip-sctp-08.txt
.]
The option value is formatted as a
.B t_scalar_t
that can have values
.BR T_YES " or " T_NO .
.sp
When set to
.BR T_YES ,
this option request that SCTP respond to ASCONF chunks with SET-PRIMARY
requests.  When set to
.BR T_NO ,
SCTP will refuse these requests for the transport connection.
This option can be set or read at any time during the transport connection
lifetime.
.\"
.TP
.B T_SCTP_STATUS
This option conveys the association status  and the status associated with
each of the destination transport addresses forming the transport connection.
This is a read-only option.
The returned value is formatted as a
.B t_sctp_status
structure containing one
.B t_sctp_dest_status
structure for each destination transport address, formatted as follows:
.sp
.nf
\fC\s-1\
typedef struct t_sctp_status {
    t_uscalar_t curr_rwnd;   /* receive window */
    t_uscalar_t curr_rbuf;   /* receive buffer */
    t_uscalar_t curr_nrep;   /* dests reported */
    t_sctp_dest_status_t curr_dest[0]; /* primary dest */
} t_sctp_status_t;
.sp
typedef struct t_sctp_dest_status {
    t_uscalar_t dest_addr;   /* address */
    t_uscalar_t dest_cwnd;   /* congestion window */
    t_uscalar_t dest_unack;  /* unacknowledged chunks */
    t_uscalar_t dest_srtt;   /* smooth round trip time */
    t_uscalar_t dest_rvar;   /* rtt variance */
    t_uscalar_t dest_rto;    /* current rto */
    t_uscalar_t dest_sst;    /* slow start threshold */
} t_sctp_dest_status_t;
\s+1\fR
.fi
.RS
.PP
The
.B t_sctp_status
structure has the following fields:
.TP \w'dest_unack\(em'u
.I curr_rwnd
is the current advertised receive window in bytes.
.PD 0
.TP
.I curr_rbuf
is the current receive buffer size in bytes.
.TP
.I curr_nrep
is the number of
.B t_sctp_dest_status
structure that follow this structure.
.PD
.PP
The
.B t_sctp_dest_status
structure has the following fields:
.TP \w'dest_unack\(em'u
.I dest_addr
is the address associated with this specific
.B t_sctp_dest_status
structure.
.PD 0
.TP
.I dest_cwnd
is the congestion window for the given destination transport address in bytes.
.TP
.I dest_unack
is the number of unacknowledged DATA chunks outstanding to the given
destination transport address in chunks.
.TP
.I dest_srtt
is the smoothed round trip time for the destination transport address in
milliseconds.
.TP
.I dest_rvar
is the round trip time variance for the destination transport address in
milliseconds.
.TP
.I dest_rto
is the current value of the round trip timeout for the destination transport
address in milliseconds.
.TP
.I dest_sst
is the current value of the slow start threshold for the destination transport
address in bytes.
.PD
.RE
.\"
.TP
.B T_SCTP_TSN
This option determines the SCTP Transmit Sequence Number that is to be associated
with a given data transmission.  The option value is formatted as a
.B t_scalar_t
that contains the numeric value of the SCTP Transmit Sequence Number.
This options is used with
.BR T_OPTMGMT_REQ (7).
The SCTP transport provider determines which values will be used on all packets sent with
.BR T_OPTDATA_REQ "(7), " T_DATA_REQ "(7), " T_EXDATA_REQ "(7) or " M_DATA (9).
The current value, when indicated, using
.BR T_OPTDATA_IND (7),
will be the value that was contained in the last packet indicated with
.BR T_OPTDATA_IND (7).
.\"
.TP
.B T_SCTP_DEBUG
This option determines implementation specific debugging features.
The option value is formatted as a
.BR t_scalar_t ,
that can be one of the following values:
.RS
.TP
.I T_SCTP_OPTION_DROPPING
the stream will drop packets at the software level for debugging purposes.
.TP
.I T_SCTP_OPTION_BREAK
the stream will break the first destination address at intervals for debugging
purposes.
.TP
.I T_SCTP_OPTION_DBREAK
the stream will break destination addresses in both directions at intervals
for debugging purposes.
.TP
.I T_SCTP_OPTION_RANDOM
the stream will drop packets at random at the software level for debugging
purposes.
.RE
.\"
.\"
.SH "LOCAL MANAGEMENT INTERFACE"
.PP
.\"
.SS T_INFO_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_INFO_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP \w'\fIPROVIDER_flag\fP\(em'u
.I TSDU_size
The
.B TPI-SCTP
provider has an unlimited TSDU and returns \fBT_INFINITE\fR in this field in accordance with
.BR tpi (7).
.TP
.I ETSDU_size
The
.B TPI-SCTP
provider supports the concept of expedited data.  Expedited data is data that is sent
unordered.  This field should always return the same value as the
.I TSDU_size
above.
.TP
.I CDATA_size
The
.B TPI-SCTP
provider supports the concept of connection data.  This field will be the maximum
amount of data that will fit in a COOKIE-ECHO or COOKIE-ACK message.
.TP
.I DDATA_size
The
.B TPI-SCTP
provider does not support the concept of disconnection data and, therefore, returns
.B T_INVALID
in this field.
.TP
.I ADDR_size
The maximum size of the
.B SCTP
address.  This field will always return an integer multiple of the
.B sockaddr_in
structure size as described under
.RI \*(lq "ADDRESS FORMAT" \*(rq ,
above.
.TP
.I OPT_size
The
.B TPI-SCTP
provider can support any number of options and returns
.B T_INFINITE
in this field.
.TP
.I TIDU_size
This is the maximum size of the interface data unit, which is the maximum size
of data that can be transferred across the interface in a single
.BR getmsg "(2) or " putmsg (2)
system call.  This size is always less than or equal to the
.I TSDU_size
above.
.TP
.I SERV_type
The service type is one of the following:
.RS
.TP
.B T_CLTS
Connectionless service.
.B TPI-SCTP
does not support connectionless service.
This value will never be returned by
.BR TPI-SCTP .
.TP
.B T_COTS
Connection-oriented service.
.B TPI-SCTP
does not support connection-oriented service without orderly release.
This value will never be returned by
.BR TPI-SCTP .
.TP
.B T_COTS_ORD
Connection-oriented service with orderly release.
.B TPI-SCTP
supports connection-oriented service with orderly release.
.RE
.TP
.I CURRENT_state
The current state of the service interface as described in
.BR tpi (7).
.TP
.I PROVIDER_flag
Provider flags are a bitwise OR of the following:
.RS
.TP
.B T_SNDZERO
Indicates that the transport user is permitted to send data with a message
length of zero.
.B TPI-SCTP
does not support the transmission of zero-length TSDUs.  This flag must be
clear.
.TP
.B XPG4_1
Indicates that the transport provider conforms to XTI in XTP4 and supports the
new primitives
.BR T_ADDR_REQ "(7) and " T_ADDR_ACK (7).
This flag is normally set.
.RE
.\"
.SS T_ADDR_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_ADDR_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR LOCADDR_length ", " LOCADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that describes the
.B TPI-SCTP
addresses to which the Stream is bound.  If the Stream is not in a bound state, then
.IR LOCADDR_length " and " LOCADDR_offset
return zero (0).
.TP
.IR REMADDR_length ", " REMADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that describes the
.B TPI-SCTP
addresses to which the Stream is connected.  If the Stream is not in a connected or connecting state,
.IR REMADDR_length " and " REMADDR_offset
return zero (0).
.\"
.SS T_CAPABILITY_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_CAPABILITY_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
This primitive returns the
.BR T_info_ack (7)
structure interpreted as described under
.RI \(lq T_INFO_ACK ,\(rq
above.
.\"
.SS T_BIND_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR ADDR_length ", " ADDR_offset
Specifies the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contain the
.B TPI-SCTP
addresses to bind.
The
.B TPI-SCTP
provider supports wildcard addresses and the address
.BR INADDR_ANY .
This field can contain an integer number of addresses.
.TP
.I CONIND_number
Specifies the number of connection indications.  Specifying a non-zero number of connection
indications will place the Stream in listening mode.  Any COOKIE-ECHO packet received from a unique source
address will generate a connection indication.  Connection indications can be accepted or refused
(without data).  This number specifies the maximum number of outstanding connection indications
(those that have neither been accepted nor refused) that the provider will deliver.  Because this
limit is reached does not mean that the provider discards additional connection indications, but may
queue them internally until the number of outstanding connection indications drops beneath the
number specified.  See
.BR tpi (7)
for more information.
.\"
.SS T_BIND_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR ADDR_length ", " ADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contain the
.B TPI-SCTP
addresses that were bound.  This field can contain an integer number of addresses.
.IP ""
The bound address,
.IR sin_addr ,
returned in this field may be
.B INADDR_ANY
if
.B INADDR_ANY
was requested, or no address was provided to the bind.  However, the
.I sin_port
component of the address will be allocated dynamically and set to a non-zero port number if zero
(indicating any port) was specified on bind, or no address was provided to the bind.  If a non-zero
port number could not be dynamically allocated,
.RB [ TNOADDR ]
is returned in accordacne with
.BR tpi (7).
.TP
.I CONIND_number
Indicates the negotiated number of connection indications.  This is normally the same value as was
requested; however, if the user requests a number that is considered too large, this number might be
a more conservative value.
.\"
.SS T_UNBIND_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_OK_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_ERROR_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_OPTMGMT_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \(lq OPTIONS ,\(rq
above.
.\"
.SS T_OPTMGMT_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \(lq OPTIONS ,\(rq
above.
.\"
.\"
.SH "PROTOCOL SERVICE INTERFACE"
.PP
The
.I /dev/sctp_t
driver provides a single interface type: connection-oriented mode with orderly release.
.\"
.SS T_UNITDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provider does not support connectionless mode service and any attempt to issue this primitive will
result in a
.BR T_ERROR_ACK (7)
primitive with the error number
.RB [ TNOTSUPPORT ].
.\"
.SS T_UNITDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provide does not support connectionless mode service and will not issue this primitive.
.\"
.SS T_UDERROR_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provide does not support connectionless mode service and will not issue this primitive.
.\"
.SS T_CONN_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR DEST_length ", " DEST_offset
Specifies the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
IP addresses to which to connect the stream.
For connection to multi-homed
.B TPI-SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of the
options containing the connection options to use when forming an association
with the peer.  These option values can be changed with the
.BR T_OPTMGMT_REQ (7)
primitive, or overridden for a specific message with the
.BR T_OPTDATA_REQ (7)
primitive.
.sp
Options that have end-to-end significance are:
.BR T_SCTP_OSTREAMS " and " T_SCTP_ISTREAMS .
.sp
Options that have significance at connection are:
.BR T_SCTP_SACK_DELAY ,
.BR T_SCTP_PATH_MAX_RETRANS ,
.BR T_SCTP_ASSOC_MAX_RETRANS ,
.BR T_SCTP_MAX_INIT_RETRIES ,
.BR T_SCTP_HEARTBEAT_ITVL ,
.BR T_SCTP_RTO_INITIAL ,
.BR T_SCTP_RTO_MIN " and "
.BR T_SCTP_RTO_MAX .
.\"
.SS T_CONN_CON\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR RES_length ", " RES_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
addresses to which the stream is confirmed connected.
For responding multi-homed
.B TPI-SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Indicates the length and offset from the beginning of the message block of the options present in
the connection request and options that are negotiated end-to-end.  See
.RI \(lq OPTIONS ,\(rq
above.  The option values represent the negotiation with the local provider as well as end-to-end
negotiation with the SCTP peer.
.\"
.SS T_CONN_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR SRC_length ", " SRC_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
IP addresses from which the remote
.B TPI-SCTP
is connecting.
For connecting multi-homed
.B SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Indicates the length and offset from the beginning of the message block of the options of end-to-end
significance that were present in the connection request.  See
.RI \(lq OPTIONS ,\(rq
above.  The only options indicated are those that are of end-to-end significance and which do not
have default values.
.TP
.I SEQ_number
Indicates the sequence number that can be used to accept or reject this
connection indication.
.\"
.SS T_CONN_RES\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.I ACCEPTOR_id
Specifies the acceptor identifier of the Stream onto which the connection is to be accepted.  If the
connection is to be accepted on the same Stream upon which the corresponding
.BR T_CONN_IND (7)
was received, this field should be zero (0).  It is an error to accept a connection on the listening
Stream if there is more than one connection indication outstanding.
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of the options requested for
the connection.  See
.RI \(lq OPTIONS ,\(rq
above.  Options of local significance are negotiated locally.  Options of end-to-end significance
are negotiated with the peer.
.TP
.I SEQ_number
Specifies the sequence number in the corresponding
.BR T_CONN_IND (7)
primitive to which this primitive is responding.
.\"
.SS T_DATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data will be sent ordered on the stream.
.\"
.SS T_DATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data was sent ordered on the stream.
.\"
.SS T_EXDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data will be sent unordered on the stream.
.\"
.SS T_EXDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data was sent unordered on the stream.
.\"
.SS T_OPTDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.I DATA_flag
This field can contain a bitwise OR of the following flags:
.RS
.TP
.B T_ODF_MORE
Specifies that the next
.BR T_OPTDATA_REQ (7)
primitive contains data belonging to the same TSDU.
.TP
.B T_ODF_EX
Specifies that the data is expedited.
.B TPI-SCTP
does not support true expedited data.  Data will be sent unordered within the
association.
.RE
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of
options associated with the data.
Options that are significant are:
.BR T_SCTP_CORK ,
.BR T_SCTP_PPI  " and "
.BR T_SCTP_SID .
.B T_SCTP_CORK
specifies that data should be held from transmission until subsequent data is
sent.
.B T_SCTP_PPI
specifies the Protocol Payload Identifier to associate with the data.
.B T_SCTP_SID
specifies the
.B TPI-SCTP
stream within the association upon which to send the data.
.\"
.SS T_OPTDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.I DATA_flag
This field can contain a bitwise OR of the following flags:
.RS
.TP
.B T_ODF_MORE
Indicates that the next
.BR T_OPTDATA_REQ (7)
primitive contains data belonging to the same TSDU.
.TP
.B T_ODF_EX
Indicates that the data is expedited.
.B TPI-SCTP
does not support true expedited data.  Data was received unordered within the
association.
.RE
.TP
.IR OPT_length ", " OPT_offset
Options that are significant are:
.BR T_SCTP_PPI ,
.BR T_SCTP_SID ,
.BR T_SCTP_SSN " and "
.BR T_SCTP_TSN .
.B T_SCTP_PPI
indicates the Protocol Payload Identifier associated with the data.
.B T_SCTP_SID
indicates the stream identifier of the
.B TPI-SCTP
stream within the association upon which the data was received.
.B T_SCTP_SSN
indicates the stream sequence number for the current data chunk.
.B T_SCTP_TSN
indicates the transmission sequence number for the current data chunk.
.\"
.SS T_DISCON_REQ\fR(7)
.PP
.PP
This primitive is interpreted as in
.BR tpi (7).
This will result in the refusal of an outstanding
.B TPI-SCTP
connection indication or an abortive release of an existing
.B TPI-SCTP 
association.
.\"
.SS T_DISCON_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
It indicates the refusal of an outstanding
.B TPI-SCTP
outgoing connection request, or the abortive release of an existing
.B TPI-SCTP
association.
.TP
.I DISCON_reason
The disconnect reason may be one of the following values:
.RS
.RE
.TP
.I SEQ_number
The sequence number of a currently outstanding connection indication to which the disconnect
corresponds.  This value is non-zero only on a listening Stream for which an outstanding
.BR T_CONN_IND (7)
primtiive has been issued with no
.BR T_DISCON_REQ (7)
or
.BR T_CONN_RES (7)
primitive having been issued by the TS user with the same sequence number.
.\"
.SS T_ORDREL_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
This primitive requests or responds to the
.B TPI-SCTP
provider orderly release function.
.\"
.SS T_ORDREL_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
This primitive indicates or confirms the
.B TPI-SCTP
provider orderly release function.
.\"
.\"
.SH "IOCTLS"
.PP
The
.B TPI-SCTP
provider does not support input-output controls.  For a standard set of
input-output controls supporting the
.BR xti (3)
library functions, push the
.BR timod (4)
module.
.\"
.\"
.SH "ERROR HANDLING"
.PP
Error handling is in accordance with
.BR tpi (7).
.\"
.\"
.SH "ERRORS"
.PP
Errors are in accordance with
.BR tpi (7).
They are repeated here as follows:
.\"
.SS "Error Acknowledgement Codes"
.PP
The following error codes can be present in the
.I TLI_error
field of the
.BR T_ERROR_ACK (7)
message.
.TP \w'[\fBTPROVMISMATCH\fP]\(em'u
.RB [ TBADADDR ]
A specified address was improperly formatted or contained invalid information.
.TP
.RB [ TBADOPT ]
The specified options were improperly formatted or contained invalid information.
.TP
.RB [ TACCES ]
The user did not have permission to a requested address or option.
.TP
.RB [ TBADF ]
The
.I ACCEPTOR_id
does not identify a valid open Stream.
.TP
.RB [ TNOADDR ]
The user did not specify an address and one could not be allocated by the TS provider.
.TP
.RB [ TOUTSTATE ]
The primitive would place the interface out of state.
.TP
.RB [ TBADSEQ ]
The sequence number provided did not correspond to an outstanding connection indication.
.TP
.RB [ TSYSERR ]
A system error occured and the UNIX error code is present in the
.I UNIX_error
field of the primitive.
.TP
.RB [ TBADDATA ]
The user specified an amount of data that exceeds the corresponding limit as reported in the
.BR T_INFO_ACK (7)
primitive.
.TP
.RB [ TBADFLAG ]
The flags specified were invalid or not supported.
.TP
.RB [ TNOTSUPPORT ]
The primitive is not support by the service provider, or not supported in the current mode of
operation.
.TP
.RB [ TADDRBUSY ]
The user specified an address that is already bound to another Stream.
.TP
.RB [ TPROVMISMATCH ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that belongs to another provider.
.TP
.RB [ TRESQLEN ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that is bound in the listening mode.
.TP
.RB [ TRESADDR ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that is bound to a different address than that of the listening Stream
(and the provider does not support this).
.\"
.SS "Disconnect Codes"
.PP
The following error codes can be present in the
.I DISCON_reason
field of a
.BR T_DISCON_IND (7)
primitive:
.\"
.\"
.SH NOTICES
.PP
.B SCTP
has several imlementations.  This manpage is for the
.BR sctp_t (4)
implementation that provides
.BR tpi (7)
access to the \fBLinux Fast-STREAMS\fR version of
.BR SCTP .
For more information on the
.I OpenSS7
Linux NET4
version, see
.BR sctp (7).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR sctp (7),
.BR sctp (4),
.BR sctp_t (4),
.BR tpi (7),
.BR tpi_ip (7),
.BR xti (3),
.BR xti_ip (3),
.BR xti_sctp (3),
.BR sockets (3).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B @PACKAGE_TITLE@
implementation of
.B SCTP
for
.I STREAMS
is largely compatible with
.IR STREAMS -based
implementations such as
Lachman or Mentat TCP/IP stacks and
.IR Solaris \(rg
documentation.
.[
soldoc
.]
.\"
.\"
.SH CONFORMANCE
.PP
This interface conforms to TPI Version 2, Draft 2,
.[
TPI Revision 2.0.0
.]
except where indicated.
.\"
.\"
.SH HISTORY
.PP
The Transport Provider Interface first appeared in SVR 4.
.[
svr4
.]
.\"
.\"
.XX
.[
magic
.]
.[
advprog
.]
.[
rfc2960
.]
.[
rfc3309
.]
.[
rfc3873
.]
.[
rfc3758
.]
.[
addip-08
.]
.[
rfc4460
.]
.[
$LIST$
.]
.TI
