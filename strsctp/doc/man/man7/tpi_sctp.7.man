'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) $Id: tpi_sctp.7.man,v 0.9.2.7 2006/10/10 10:46:17 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2006/10/10 10:46:17 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: tpi_sctp.7.man,v $
.\" Revision 0.9.2.7  2006/10/10 10:46:17  brian
.\" - updates for release
.\"
.\" Revision 0.9.2.6  2006/04/26 10:45:17  brian
.\" - updated manual pages and references
.\"
.\" Revision 0.9.2.5  2006/04/05 09:44:33  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strsctp.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strsctp.macros
.\"
.\"
.TH TPI-SCTP 7 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "Transport Provider Interface (TPI)"
.\"
.\"
.SH NAME
.B tpi_sctp
\- Transport Provider Interface (TPI) \- Stream Control Transmission Protocol (SCTP) Corrigendum
.\"
.\"
.SH SYNOPSIS
.PP
.B #include <sys/tihdr.h>
.br
.B #include <sys/tpi_ip.h>
.br
.B #include <sys/tpi_sctp.h>
.HP
.BI "int " sctp_stream " = open(" \fR\*(lq/dev/sctp_t\*(rq\fI ", " flags );
.\"
.\"
.SH DESCRIPTION
.PP
.PP
.B TPI-SCTP
provides a stream supporting the Transport Provider Interface,
.BR tpi (7),
to the Stream Control Transmission Protocol,
.[
rfc2960
.]
.[
rfc3309
.]
.[
rfc4460
.]
.BR sctp (7).
This
.IR STREAMS (4)
interface provides the
.BR sctp (7)
protocol service interface using the T-primitives of the
.BR tpi (7).
This interface is intended solely for use by user programs or protocol modules
requiring the common
.BR tpi (7)
interfae, such as the
.BR xti (3)
and
.BR sockets (3)
library.
.SS "ADDRESS FORMATS"
.PP
The SCTP address format is structured as follows:
.sp
.nf
\fC\s-1\
struct sockaddr_in {
    sa_family_t         sin_family;  /* Address family */
    unsigned short int  sin_port;    /* Port number */
    struct in_addr      sin_addr;    /* Internet address */
    /* padding */
};
\s+1\fP
.fi
.PP
The
.B sockaddr_in
structure contains the following members:
.TP \w'sin_family\(em'u
.I sin_family
The address family.  Always set to
.BR AF_INET " or " AF_UNSPEC .
.PD 0
.TP
.I sin_port
The port number of the transport endpoint in network byte order.
.TP
.I sin_addr
The IP address of the transport endpoint in network byte order.
.TP
.I (padding)
Padding to pad the size of the
.B sockaddr_in
structure to the size of a
.B sockaddr
structure.
.PD
.PP
The structure is padded to the size of a
.B sockaddr
structure.
.PP
SCTP adresses can also be formed as an array of
.B sockaddr_in
structure to represent multiple addresses for multi-homed hosts.
.\"
.\"
.SH "OPTIONS"
.PP
Options are formatted according to the
.B t_opthdr
structure described in
.BR xti (3).
A SCTP transport provider compliant to this specification supports none, all or
any subset of the options defined here.  An implementation may restrict the
use of any of these options by offering them only in a privileged or read-only
mode.
.PP
.B TPI-SCTP
provides options at the
.BR XTI_GENERIC ", " T_INET_IP " and " T_INET_SCTP
option levels as described in the subsections that follow.  Of the
.B T_INET_SCTP
level protocol options, none of the options are of end-to-end significance.
.\"
.\"
.SS XTI_GENERIC
.PP
Options at this level are specific to the X/Open Transport Interface (XTI/TLI)
and are common to all transport providers.  For more information, see
.BR xti (3).
.PP
The options defined with the option level
.B XTI_GENERIC
are as follows:
.TP
.B XTI_DEBUG
Sets debugging flags for the Stream.  This option is formatted as an array of
.BR t_uscalar_t .
Legal values are implementation defined.  For more information, see
.BR xti (3).
.TP
.B XTI_LINGER
Sets whether, and the amount of time if, the Stream will linger waiting for
unsent data to be delivered.  This option is formatted as a
.B t_linger
structure as follows:
.RS
.nf
\fC\s-1\
struct t_linger {
    t_scalar_t l_onoff;   /* option on/off */
    t_scalar_t l_linger;  /* linger time */
};
\s+1\fP
.fi
.TP \w'l_linger\(em'u
.I l_onoff
Specifies whether to linger
.RB ( T_YES ") or not (" T_NO ).
Legal values are
.BR T_YES " and " T_NO .
.PD 0
.TP
.I l_linger
Specifies the amount of time (in seconds) to linger.  Legal values are
.BR T_INFINITE ", " T_UNSPEC
and all positive numbers including zero.
.PD
.RE
.IP ""
For more information, see
.BR xti (3).
.TP
.B XTI_RCVBUF
Specifies the size, in bytes, of the receive buffer.  This option is formatted
as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_RCVLOWAT
Specifies the low water mark above which received data will be indicated and
delivered to the user.  This option is formatted as
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_SNDBUF
Specifies the size, in bytes, of the transmit buffer.  This option is
formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.TP
.B XTI_SNDLOWAT
Specifies the low water mark above which queued data will be transmitted to
the peer.  This option is formatted as a
.BR t_uscalar_t .
Legal values are all positive, non-zero numbers.  For more information, see
.BR xti (3).
.\"
.\"
.SS T_INET_IP
.PP
Options with this level are specific to the Internet Protocol (IP)
.[
rfc791
.]
and are common to all the protocol levels in IP.  For more information, see
.BR tpi_ip (7).
.PP
The options defined with the option level
.B T_INET_IP
are as follows:
.TP
.B T_IP_OPTIONS
Provides control for the T_IP OPTIONS field.  Used for debugging.  This option
is formatted as an array of
.BR "unsigned char" ,
up to 40 elements.  For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_TOS
Provides control of the type-of-service byte present in each transmited T_IP
packet.  This option is formated as an
.BR "unsigned char" .
Legal values can be generated with the
.BR SET_TOS ()
macro described in
.BR tpi_ip (7).
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_TTL
Provides control of the time-to-live byte present in each transmitted T_IP
packet.  This option is formatted as an
.BR "unsigned char" .
Legal values are from 0 to 255.  For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_REUSEADDR
Allows multiple non-listening binds to the same address.  This option is
formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_DONTROUTE
Bypasses routing tables and routes directly to an interface.  Used for
debugging.  This option is formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.TP
.B T_IP_BROADCAST
Allows broadcast addresses to be used.  This option is not applicable to SCTP
and is always set to
.BR T_NO .
This options is formatted as an
.BR "unsigned int" .
Legal values are
.BR T_YES " and " T_NO .
For more information, see
.BR tpi_ip (7).
.\"
.\"
.SS T_INET_SCTP
.PP
Options within this level are specific to the Stream Control Transmission Protocol
(SCTP)
.[
rfc2960
.]
yet are used by protocol levels using SCTP transport.
.PP
The options defined with the option level
.B T_INET_SCTP
are as follows:
.TP
.B T_SCTP_NODELAY
.TP
.B T_SCTP_CORK
.TP
.B T_SCTP_PPI
.TP
.B T_SCTP_SID
.TP
.B T_SCTP_SSN
.TP
.B T_SCTP_TSN
.TP
.B T_SCTP_RECVOPT
.TP
.B T_SCTP_COOKIE_LIFE
.TP
.B T_SCTP_SACK_DELAY
.TP
.B T_SCTP_PATH_MAX_RETRANS
.TP
.B T_SCTP_ASSOC_MAX_RESTRANS
.TP
.B T_SCTP_MAX_INIT_RETRIES
.TP
.B T_SCTP_HEARTBEAT_ITVL
.TP
.B T_SCTP_RTO_INITIAL
.TP
.B T_SCTP_RTO_MIN
.TP
.B T_SCTP_RTO_MAX
.TP
.B T_SCTP_OSTREAMS
.TP
.B T_SCTP_ISTREAMS
.TP
.B T_SCTP_COOKIE_INC
.TP
.B T_SCTP_THROTTLE_ITVL
.TP
.B T_SCTP_MAC_TYPE
.TP
.B T_SCTP_HB
.sp
.nf
\fC\s-1\
typedef struct t_sctp_hb {
    uint32_t hb_dest;           /* destination address */
    t_uscalar_t hb_onoff;       /* activation flag */
    t_uscalar_t hb_itvl;        /* interval in milliseconds */
} t_sctp_hb_t;
\s+1\fR
.fi
.TP
.B T_SCTP_RTO
.sp
.nf
\fC\s-1\
typedef struct t_sctp_rto {
    uint32_t rto_dest;          /* destination address */
    t_uscalar_t rto_initial;    /* RTO.Initial (milliseconds) */
    t_uscalar_t rto_min;        /* RTO.Min (milliseconds) */
    t_uscalar_t rto_max;        /* RTO.Max (milliseconds) */
    t_uscalar_t max_retrans;    /* Path.Max.Retrans (retries) */
} t_sctp_rto_t;
\s+1\fR
.fi
.TP
.B T_SCTP_MAXSEG
.TP
.B T_SCTP_STATUS
.RS
.PP
.nf
\fC\s-1\
typedef struct t_sctp_dest_status {
    t_uscalar_t dest_addr;      /* dest address */
    t_uscalar_t dest_cwnd;      /* dest congestion window */
    t_uscalar_t dest_unack;     /* dest unacknowledged chunks */
    t_uscalar_t dest_srtt;      /* dest smooth round trip time */
    t_uscalar_t dest_rvar;      /* dest rtt variance */
    t_uscalar_t dest_rto;       /* dest current rto */
    t_uscalar_t dest_sst;       /* dest slow start threshold */
} t_sctp_dest_status_t;
\s+1\fR
.fi
.PP
.nf
\fC\s-1\
typedef struct t_sctp_status {
    t_uscalar_t curr_rwnd;      /* current receive window */
    t_uscalar_t curr_rbuf;      /* current receive buffer */
    t_uscalar_t curr_nrep;      /* current dests reported */
    t_sctp_dest_status_t curr_dest[0];  /* current primary dest */
} t_sctp_status_t;
\s+1\fR
.fi
.TP
.B T_SCTP_DEBUG
.TP
.B SCTP_OPTION_DROPPING
causes the stream to drop packets.
.TP
.B SCTP_OPTION_BREAK
causes the stream to break the first destination.
.TP
.B SCTP_OPTION_DBREAK
causes the stream to break destinations in both directions.
.TP
.B SCTP_OPTION_RANDOM
causes the stream to drop packets at random.
.RE
.\"
.\"
.SH "LOCAL MANAGEMENT INTERFACE"
.PP
.\"
.SS T_INFO_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_INFO_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP \w'\fIPROVIDER_flag\fP\(em'u
.I TSDU_size
The
.B TPI-SCTP
provider has an unlimited TSDU and returns \fBT_INFINITE\fR in this field in accordance with
.BR tpi (7).
.TP
.I ETSDU_size
The
.B TPI-SCTP
provider supports the concept of expedited data.  Expedited data is data that is sent
unordered.  This field should always return the same value as the
.I TSDU_size
above.
.TP
.I CDATA_size
The
.B TPI-SCTP
provider supports the concept of connection data.  This field will be the maximum
amount of data that will fit in a COOKIE-ECHO or COOKIE-ACK message.
.TP
.I DDATA_size
The
.B TPI-SCTP
provider does not support the concept of disconnection data and, therefore, returns
.B T_INVALID
in this field.
.TP
.I ADDR_size
The maximum size of the
.B SCTP
address.  This field will always return an integer multiple of the
.B sockaddr_in
structure size as described under
.RI \*(lq "ADDRESS FORMAT" \*(rq ,
above.
.TP
.I OPT_size
The
.B TPI-SCTP
provider can support any number of options and returns
.B T_INFINITE
in this field.
.TP
.I TIDU_size
This is the maximum size of the interface data unit, which is the maximum size
of data that can be transferred across the interface in a single
.BR getmsg "(2) or " putmsg (2)
system call.  This size is always less than or equal to the
.I TSDU_size
above.
.TP
.I SERV_type
The service type is one of the following:
.RS
.TP
.B T_CLTS
Connectionless service.
.B TPI-SCTP
does not support connectionless service.
This value will never be returned by
.BR TPI-SCTP .
.TP
.B T_COTS
Connection-oriented service.
.B TPI-SCTP
does not support connection-oriented service without orderly release.
This value will never be returned by
.BR TPI-SCTP .
.TP
.B T_COTS_ORD
Connection-oriented service with orderly release.
.B TPI-SCTP
supports connection-oriented service with orderly release.
.RE
.TP
.I CURRENT_state
The current state of the service interface as described in
.BR tpi (7).
.TP
.I PROVIDER_flag
Provider flags are a bitwise OR of the following:
.RS
.TP
.B T_SNDZERO
Indicates that the transport user is permitted to send data with a message
length of zero.
.B TPI-SCTP
does not support the transmission of zero-length TSDUs.  This flag must be
clear.
.TP
.B XPG4_1
Indicates that the transport provider conforms to XTI in XTP4 and supports the
new primitives
.BR T_ADDR_REQ "(7) and " T_ADDR_ACK (7).
This flag is normally set.
.RE
.\"
.SS T_ADDR_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_ADDR_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR LOCADDR_length ", " LOCADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that describes the
.B TPI-SCTP
addresses to which the Stream is bound.  If the Stream is not in a bound state, then
.IR LOCADDR_length " and " LOCADDR_offset
return zero (0).
.TP
.IR REMADDR_length ", " REMADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that describes the
.B TPI-SCTP
addresses to which the Stream is connected.  If the Stream is not in a connected or connecting state,
.IR REMADDR_length " and " REMADDR_offset
return zero (0).
.\"
.SS T_CAPABILITY_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_CAPABILITY_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
This primitive returns the
.BR T_info_ack (7)
structure interpreted as described under
.RI \(lq T_INFO_ACK ,\(rq
above.
.\"
.SS T_BIND_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR ADDR_length ", " ADDR_offset
Specifies the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contain the
.B TPI-SCTP
addresses to bind.
The
.B TPI-SCTP
provider supports wildcard addresses and the address
.BR INADDR_ANY .
This field can contain an integer number of addresses.
.TP
.I CONIND_number
Specifies the number of connection indications.  Specifying a non-zero number of connection
indications will place the Stream in listening mode.  Any COOKIE-ECHO packet received from a unique source
address will generate a connection indication.  Connection indications can be accepted or refused
(without data).  This number specifies the maximum number of outstanding connection indications
(those that have neither been accepted nor refused) that the provider will deliver.  Because this
limit is reached does not mean that the provider discards additional connection indications, but may
queue them internally until the number of outstanding connection indications drops beneath the
number specified.  See
.BR tpi (7)
for more information.
.\"
.SS T_BIND_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.IR ADDR_length ", " ADDR_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contain the
.B TPI-SCTP
addresses that were bound.  This field can contain an integer number of addresses.
.IP ""
The bound address,
.IR sin_addr ,
returned in this field may be
.B INADDR_ANY
if
.B INADDR_ANY
was requested, or no address was provided to the bind.  However, the
.I sin_port
component of the address will be allocated dynamically and set to a non-zero port number if zero
(indicating any port) was specified on bind, or no address was provided to the bind.  If a non-zero
port number could not be dynamically allocated,
.RB [ TNOADDR ]
is returned in accordacne with
.BR tpi (7).
.TP
.I CONIND_number
Indicates the negotiated number of connection indications.  This is normally the same value as was
requested; however, if the user requests a number that is considered too large, this number might be
a more conservative value.
.\"
.SS T_UNBIND_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_OK_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_ERROR_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.\"
.SS T_OPTMGMT_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \(lq OPTIONS ,\(rq
above.
.\"
.SS T_OPTMGMT_ACK\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \(lq OPTIONS ,\(rq
above.
.\"
.\"
.SH "PROTOCOL SERVICE INTERFACE"
.PP
The
.I /dev/sctp_t
driver provides a single interface type: connection-oriented mode with orderly release.
.\"
.SS T_UNITDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provider does not support connectionless mode service and any attempt to issue this primitive will
result in a
.BR T_ERROR_ACK (7)
primitive with the error number
.RB [ TNOTSUPPORT ].
.\"
.SS T_UNITDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provide does not support connectionless mode service and will not issue this primitive.
.\"
.SS T_UDERROR_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
The
.B TPI-SCTP
provide does not support connectionless mode service and will not issue this primitive.
.\"
.SS T_CONN_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR DEST_length ", " DEST_offset
Specifies the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
IP addresses to which to connect the stream.
For connection to multi-homed
.B TPI-SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of the
options containing the connection options to use when forming an association
with the peer.  These option values can be changed with the
.BR T_OPTMGMT_REQ (7)
primitive, or overridden for a specific message with the
.BR T_OPTDATA_REQ (7)
primitive.
.sp
Options that have end-to-end significance are:
.BR T_SCTP_OSTREAMS " and " T_SCTP_ISTREAMS .
.sp
Options that have significance at connection are:
.BR T_SCTP_SACK_DELAY ,
.BR T_SCTP_PATH_MAX_RETRANS ,
.BR T_SCTP_ASSOC_MAX_RETRANS ,
.BR T_SCTP_MAX_INIT_RETRIES ,
.BR T_SCTP_HEARTBEAT_ITVL ,
.BR T_SCTP_RTO_INITIAL ,
.BR T_SCTP_RTO_MIN " and "
.BR T_SCTP_RTO_MAX .
.\"
.SS T_CONN_CON\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR RES_length ", " RES_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
addresses to which the stream is confirmed connected.
For responding multi-homed
.B TPI-SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Indicates the length and offset from the beginning of the message block of the options present in
the connection request and options that are negotiated end-to-end.  See
.RI \(lq OPTIONS ,\(rq
above.  The option values represent the negotiation with the local provider as well as end-to-end
negotiation with the SCTP peer.
.\"
.SS T_CONN_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.IR SRC_length ", " SRC_offset
Indicates the length and offset from the beginning of the message block of the
.B sockaddr_in
structures that contains the
.B TPI-SCTP
IP addresses from which the remote
.B TPI-SCTP
is connecting.
For connecting multi-homed
.B SCTP
hosts, this address may contain multiple
.B sockaddr_in
structures.
.TP
.IR OPT_length ", " OPT_offset
Indicates the length and offset from the beginning of the message block of the options of end-to-end
significance that were present in the connection request.  See
.RI \(lq OPTIONS ,\(rq
above.  The only options indicated are those that are of end-to-end significance and which do not
have default values.
.TP
.I SEQ_number
Indicates the sequence number that can be used to accept or reject this
connection indication.
.\"
.SS T_CONN_RES\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7),
with the options described under
.RI \*(lq OPTIONS \*(rq ,
above and the following considerations:
.TP
.I ACCEPTOR_id
Specifies the acceptor identifier of the Stream onto which the connection is to be accepted.  If the
connection is to be accepted on the same Stream upon which the corresponding
.BR T_CONN_IND (7)
was received, this field should be zero (0).  It is an error to accept a connection on the listening
Stream if there is more than one connection indication outstanding.
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of the options requested for
the connection.  See
.RI \(lq OPTIONS ,\(rq
above.  Options of local significance are negotiated locally.  Options of end-to-end significance
are negotiated with the peer.
.TP
.I SEQ_number
Specifies the sequence number in the corresponding
.BR T_CONN_IND (7)
primitive to which this primitive is responding.
.\"
.SS T_DATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data will be sent ordered on the stream.
.\"
.SS T_DATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data was sent ordered on the stream.
.\"
.SS T_EXDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data will be sent unordered on the stream.
.\"
.SS T_EXDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.PP
Data was sent unordered on the stream.
.\"
.SS T_OPTDATA_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.I DATA_flag
This field can contain a bitwise OR of the following flags:
.RS
.TP
.B T_ODF_MORE
Specifies that the next
.BR T_OPTDATA_REQ (7)
primitive contains data belonging to the same TSDU.
.TP
.B T_ODF_EX
Specifies that the data is expedited.
.B TPI-SCTP
does not support true expedited data.  Data will be sent unordered within the
association.
.RE
.TP
.IR OPT_length ", " OPT_offset
Specifies the length and offset from the beginning of the message block of
options associated with the data.
Options that are significant are:
.BR T_SCTP_CORK ,
.BR T_SCTP_PPI  " and "
.BR T_SCTP_SID .
.B T_SCTP_CORK
specifies that data should be held from transmission until subsequent data is
sent.
.B T_SCTP_PPI
specifies the Protocol Payload Identifier to associate with the data.
.B T_SCTP_SID
specifies the
.B TPI-SCTP
stream within the association upon which to send the data.
.\"
.SS T_OPTDATA_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
.TP
.I DATA_flag
This field can contain a bitwise OR of the following flags:
.RS
.TP
.B T_ODF_MORE
Indicates that the next
.BR T_OPTDATA_REQ (7)
primitive contains data belonging to the same TSDU.
.TP
.B T_ODF_EX
Indicates that the data is expedited.
.B TPI-SCTP
does not support true expedited data.  Data was received unordered within the
association.
.RE
.TP
.IR OPT_length ", " OPT_offset
Options that are significant are:
.BR T_SCTP_PPI ,
.BR T_SCTP_SID ,
.BR T_SCTP_SSN " and "
.BR T_SCTP_TSN .
.B T_SCTP_PPI
indicates the Protocol Payload Identifier associated with the data.
.B T_SCTP_SID
indicates the stream identifier of the
.B TPI-SCTP
stream within the association upon which the data was received.
.B T_SCTP_SSN
indicates the stream sequence number for the current data chunk.
.B T_SCTP_TSN
indicates the transmission sequence number for the current data chunk.
.\"
.SS T_DISCON_REQ\fR(7)
.PP
.PP
This primitive is interpreted as in
.BR tpi (7).
This will result in the refusal of an outstanding
.B TPI-SCTP
connection indication or an abortive release of an existing
.B TPI-SCTP 
association.
.\"
.SS T_DISCON_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
It indicates the refusal of an outstanding
.B TPI-SCTP
outgoing connection request, or the abortive release of an existing
.B TPI-SCTP
association.
.TP
.I DISCON_reason
The disconnect reason may be one of the following values:
.RS
.RE
.TP
.I SEQ_number
The sequence number of a currently outstanding connection indication to which the disconnect
corresponds.  This value is non-zero only on a listening Stream for which an outstanding
.BR T_CONN_IND (7)
primtiive has been issued with no
.BR T_DISCON_REQ (7)
or
.BR T_CONN_RES (7)
primitive having been issued by the TS user with the same sequence number.
.\"
.SS T_ORDREL_REQ\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
This primitive requests or responds to the
.B TPI-SCTP
provider orderly release function.
.\"
.SS T_ORDREL_IND\fR(7)
.PP
This primitive is interpreted as in
.BR tpi (7).
This primitive indicates or confirms the
.B TPI-SCTP
provider orderly release function.
.\"
.\"
.SH "IOCTLS"
.PP
The
.B TPI-SCTP
provider does not support input-output controls.  For a standard set of
input-output controls supporting the
.BR xti (3)
library functions, push the
.BR timod (4)
module.
.\"
.\"
.SH "ERROR HANDLING"
.PP
Error handling is in accordance with
.BR tpi (7).
.\"
.\"
.SH "ERRORS"
.PP
Errors are in accordance with
.BR tpi (7).
They are repeated here as follows:
.\"
.SS "Error Acknowledgement Codes"
.PP
The following error codes can be present in the
.I TLI_error
field of the
.BR T_ERROR_ACK (7)
message.
.TP \w'[\fBTPROVMISMATCH\fP]\(em'u
.RB [ TBADADDR ]
A specified address was improperly formatted or contained invalid information.
.TP
.RB [ TBADOPT ]
The specified options were improperly formatted or contained invalid information.
.TP
.RB [ TACCES ]
The user did not have permission to a requested address or option.
.TP
.RB [ TBADF ]
The
.I ACCEPTOR_id
does not identify a valid open Stream.
.TP
.RB [ TNOADDR ]
The user did not specify an address and one could not be allocated by the TS provider.
.TP
.RB [ TOUTSTATE ]
The primitive would place the interface out of state.
.TP
.RB [ TBADSEQ ]
The sequence number provided did not correspond to an outstanding connection indication.
.TP
.RB [ TSYSERR ]
A system error occured and the UNIX error code is present in the
.I UNIX_error
field of the primitive.
.TP
.RB [ TBADDATA ]
The user specified an amount of data that exceeds the corresponding limit as reported in the
.BR T_INFO_ACK (7)
primitive.
.TP
.RB [ TBADFLAG ]
The flags specified were invalid or not supported.
.TP
.RB [ TNOTSUPPORT ]
The primitive is not support by the service provider, or not supported in the current mode of
operation.
.TP
.RB [ TADDRBUSY ]
The user specified an address that is already bound to another Stream.
.TP
.RB [ TPROVMISMATCH ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that belongs to another provider.
.TP
.RB [ TRESQLEN ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that is bound in the listening mode.
.TP
.RB [ TRESADDR ]
The user specified an
.I ACCEPTOR_id
that corresponds to a Stream that is bound to a different address than that of the listening Stream
(and the provider does not support this).
.\"
.SS "Disconnect Codes"
.PP
The following error codes can be present in the
.I DISCON_reason
field of a
.BR T_DISCON_IND (7)
primitive:
.\"
.\"
.SH NOTICES
.PP
.B SCTP
has several imlementations.  This manpage is for the
.BR sctp_t (4)
implementation that provides
.BR tpi (7)
access to the \fBLinux Fast-STREAMS\fR version of
.BR TCP .
For more information on the
Linux NET4
version, see
.BR sctp (7).
.\"
.\"
.SH "SEE ALSO"
.PP
.BR sctp (7),
.BR sctp (4),
.BR sctp_t (4),
.BR tpi (7),
.BR tpi_ip (7),
.BR xti (3),
.BR xti_ip (3),
.BR xti_sctp (3),
.BR sockets (3).
.\"
.\"
.SH COMPATIBILITY
.PP
The
.B @PACKAGE_TITLE@
implementation of
.B SCTP
for
.I STREAMS
is largely compatible with
.IR STREAMS -based
implementations such as
Lachman or Mentat TCP/IP stacks and
.IR Solaris \(rg
documentation.
.[
soldoc
.]
.\"
.\"
.SH CONFORMANCE
.PP
This interface conforms to TPI Version 2, Draft 2,
.[
TPI Revision 2.0.0
.]
except where indicated.
.\"
.\"
.SH HISTORY
.PP
The Transport Provider Interface first appeared in SVR 4.
.[
svr4
.]
.\"
.\"
.XX
.[
magic
.]
.[
advprog
.]
.[
rfc2960
.]
.[
rfc3309
.]
.[
rfc3873
.]
.[
rfc3758
.]
.[
addip-08
.]
.[
rfc4460
.]
.[
$LIST$
.]
.TI
