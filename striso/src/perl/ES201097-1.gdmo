--< GDMO.Include "X.721.gdmo" >--
--< GDMO.Include "M.3100.gdmo" >--
--< GDMO.Document "ES 201 097-1 V1.1.1 (1998-01)" >--
--< GDMO.Alias "ES 201 097-1 V1.1.1 (1998-01)" "ES 201 097-1" >--
MODULE "ES 201 097-1 V1.1.1 (1998-01)"
--5.5 Physical resources fragment
--5.5.1 Managed object class definitions
--The following managed object classes are imported from (ETS 300 304-2 [6]):
---  powerSupply;
---  timingPhysicalTerminationBidirectional;
---  timingGenerator.
--Additional managed object classes are defined in the following paragraphs:
--5.5.1.1 PRM Circuit Pack

prmCircuitPack MANAGED OBJECT CLASS
	DERIVED FROM
		"M.3100:1995":circuitPack;
	CONDITIONAL PACKAGES
		physicalConnectionPackage
			PRESENT IF
				"The resource identified by the circuit pack holds physical connectors and an instance supports it.";
REGISTERED AS { managedObjectClass 1 };
--5.5.1.2 PRM Equipment Holder


prmEquipmentHolder MANAGED OBJECT CLASS
	DERIVED FROM
		"M.3100:1995":equipmentHolder;
	CONDITIONAL PACKAGES
		physicalConnectionPackage
			PRESENT IF
				"The resource identified by the equipment holder holds physical connectors and an instance supports
				it.";
REGISTERED AS { managedObjectClass 2 };
--5.5.1.3 Module


module MANAGED OBJECT CLASS
	DERIVED FROM
		"X.721:1992":top;
	CHARACTERIZED BY
		modulePackage PACKAGE
			BEHAVIOUR
				moduleBehaviour BEHAVIOUR
					DEFINED AS
						"The Module object class is a class of managed objects putting in an administrative relation several
						physical entities. The related physical entities could be Hw entities, Sw entities or both
						together. The supportedByObjectList attribute contains the list of the related instances (i.e.:
						Circuit Pack, Software Unit, Module). The moduleType attribute allows to create a classification
						between the instances of the class according to a user-specified criteria (e.g.: the supported
						functionalities). The version attribute is related to the Module instance version that could be
						affected but it is not strictly related to the physical entities versions. The modules states are
						affected by the supported object state transition in the following way: If the LOCKED/DISABLE
						resource is unique and essential for the whole module its locking/disabling implies the changing of
						the OPERATIONAL status to DISABLE. If the LOCKED/DISABLED resource is duplicated (e.g.: Module
						Protected) this has no direct consequences on the states but only a general reduction of the module
						capacity (currently not defined in the object). On the other side the locking of the module should
						directly affect in the same way the resources administrative states.";;
			ATTRIBUTES
				moduleId
					GET,
				moduleType
					GET,
				"M.3100:1995":supportedByObjectList
					GET;;;
	CONDITIONAL PACKAGES
		"M.3100:1995":createDeleteNotificationsPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":attributeValueChangeNotificationPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":stateChangeNotificationPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":affectedObjectListPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":userLabelPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":versionPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":currentProblemListPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":protectedPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":administrativeOperationalStatesPackage
			PRESENT IF
				"An instance support it.",
		"M.3100:1995":alarmSeverityAssignmentPointerPackage
			PRESENT IF
				"An instance support it.";
REGISTERED AS { managedObjectClass 3 };
--5.5.1.4 External Point


externalPoint MANAGED OBJECT CLASS
	DERIVED FROM
		top;
	CHARACTERIZED BY
		"M.3100:1995":locationNamePackage,
		"M.3100:1995":createDeleteNotificationsPackage,
		"M.3100:1995":operationalStatePackage,
		"M.3100:1995":stateChangeNotificationPackage,
		"M.3100:1995":userLabelPackage,
		externalPointPackage PACKAGE
			BEHAVIOUR
				externalPointBehaviour BEHAVIOUR
					DEFINED AS
						"The external point object class is used to monitor and control external input/output points within
						the managed element. The locationName package is used to identify the physical location of the
						external point on the equipment (for connection purposes) The user label package is used to
						associate a user-friendly label with the external point. The polarity attribute is used by
						subclasses to relate the external state of the external point to its internal state. Instances of
						subclasses of this object class are automatically created/deleted by the managed element when the
						object instance associated with equipment is created/deleted.";;
			ATTRIBUTES
				externalPointId
					GET,
				"M.3100:1995":supportedByObjectList
					GET,
				polarity
					GET-REPLACE;;;
	CONDITIONAL PACKAGES
		"M.3100:1995":alarmSeverityAssignmentPointerPackage
			PRESENT IF
				"an instance supports it";
REGISTERED AS { managedObjectClass 4 };
--5.5.1.5 External Input Point


externalInputPoint MANAGED OBJECT CLASS
	DERIVED FROM
		externalPoint;
	CHARACTERIZED BY
		"M.3100:1995":environmentalAlarmR1Package,
		externalInputPointPackage PACKAGE
			BEHAVIOUR
				externalInputPointBehaviour BEHAVIOUR
					DEFINED AS
						"The externalInputPoint object is used to monitor an input point on a managed element. There will be
						one instance for each input point supported by the managed element The polarity attribute is used
						to relate the state of the physical input to the external state attribute. Two types of input are
						considered - contact closure and logic level inputs. The effect of the polarity attribute is as
						follows Polarity = activeHigh Polarity = activeLow High Logic Level or Contact Open externalState =
						on externalState = off Low Logic Level or Contact Closed externalState = off externalState = on An
						input point will generate an environmental alarm if the externalState is on, as determined by the
						polarity. The probable cause of the alarm that will be sent in the environmental alarm can be set
						by the management system. When this object is created the default value for the probableCause
						attribute shall be 'indeterminate' A change in the externalState to On will generate an alarm
						notification. If the alarmSeverityAssignmentProfilePointer is NULL or not present, then the
						perceived severity shall be indeterminate.";;
			ATTRIBUTES
				externalState
					GET,
				"X.721":probableCause
					GET-REPLACE;
			NOTIFICATIONS
				"M.3100:1995":environmentalAlarm;;;
REGISTERED AS { managedObjectClass 5 };
--5.5.1.6 External Output Point


externalOutputPoint MANAGED OBJECT CLASS
	DERIVED FROM
		externalPoint;
	CHARACTERIZED BY
		externalOutputPointPackage PACKAGE
			BEHAVIOUR
				externalOutputPointPackageBehaviour BEHAVIOUR
					DEFINED AS
						"The externalOutputPoint object is used to control an output point on a managed element. There will
						be one instance for each output point supported by the managed element. The polarity attribute is
						used to relate the state of the physical output to the external state attribute. Two types of
						output are considered - contact closure and logic level outputs. The effect of the polarity
						attribute is as follows Polarity = activeHigh Polarity = activeLow externalState = on High Logic
						Level or Contact Open Low Logic Level or Contact Closed externalState = off Low Logic Level or
						Contact Closed High Logic Level or Contact Open The current state of the output point can be found
						by reading externalState attribute and the state can be changed using this attribute. If a
						'short-circuit' (or other problem) can be detected and the equipmentsEquipmentAlarmPackage is
						present, then it is reported as an equipment alarm with a probable cause of externalIFDeviceProblem";;
			ATTRIBUTES
				externalState
					GET-REPLACE;;;
	CONDITIONAL PACKAGES
		"M.3100:1995":equipmentsEquipmentAlarmR1Package
			PRESENT IF
				"an instance supports it and the output point can detect short circuits (or other abuses) on the
				ouput point";
REGISTERED AS { managedObjectClass 6 };
--5.5.2 Packages Definition
--5.5.2.1 Physical Connection


physicalConnectionPackage PACKAGE
	ATTRIBUTES
		physicalConnectorList
			GET
			SET-BY-CREATE,
		physicalConnectionList
			GET
			ADD-REMOVE;
REGISTERED AS { package 1 };
--5.5.3 Attributes Definition
--5.5.3.1 External Point Id


externalPointId ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.NameType;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		externalPointIdBehaviour;
REGISTERED AS { attribute 1 };


externalPointIdBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute is used to name instances of the external point managed object class";
--5.5.3.2 External State


externalState ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.OnOff;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		externalStateBehaviour;
REGISTERED AS { attribute 2 };


externalStateBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute is used to describe the state of an external point.";
--5.5.3.3 Polarity


polarity ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.Polarity;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		polarityBehaviour;
REGISTERED AS { attribute 3 };


polarityBehaviour BEHAVIOUR
	DEFINED AS
		"the polarity attribute is used to assign the sensing polarity of an input or output point.";
--5.5.3.4 Module Id


moduleId ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.NameType;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		moduleIdBehaviour;
REGISTERED AS { attribute 4 };


moduleIdBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute is used to name instances of the module managed object class";
--5.5.3.5 Module Type


moduleType ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.ModuleType;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		moduleTypeBehaviour;
REGISTERED AS { attribute 5 };


moduleIdBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute is used to classify the module managed object class according their types.";
--5.5.3.6 Physical Connector List


physicalConnectorList ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.PhysicalConnectorList;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		physicalConnectorListBehaviour;
REGISTERED AS { attribute 6 };


physicalConnectorListBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute indicates the set of physical connectors supported by a physical resource.";
--5.5.3.7 Physical Connection List


physicalConnectionList ATTRIBUTE
	WITH ATTRIBUTE SYNTAX PhysicalResourceManagementModule.PhysicalConnectionList;
	MATCHES FOR EQUALITY;
	BEHAVIOUR
		physicalConnectionListBehaviour;
REGISTERED AS { attribute 7 };


physicalConnectionListBehaviour BEHAVIOUR
	DEFINED AS
		"This attribute is used to relate external cabling to the appropriate connectors (local and far).
		There is an entry per each local connector";
--5.5.4 Name binding definitions
--5.5.4.1 External Point - Managed Element


externalPoint-managedElement NAME BINDING
	SUBORDINATE OBJECT CLASS
		externalPoint
		AND SUBCLASSES;
	NAMED BY SUPERIOR OBJECT CLASS
		managedElement
		AND SUBCLASSES;
	WITH ATTRIBUTE
		externalPointId;
REGISTERED AS { nameBinding 1 };
--5.5.4.2 Module - Managed Element


module-managedElement NAME BINDING
	SUBORDINATE OBJECT CLASS
		module
		AND SUBCLASSES;
	NAMED BY SUPERIOR OBJECT CLASS
		managedElement
		AND SUBCLASSES;
	WITH ATTRIBUTE
		moduleId;
REGISTERED AS { nameBinding 2 };
--5.5.4.3 Module - Module


module-module NAME BINDING
	SUBORDINATE OBJECT CLASS
		module
		AND SUBCLASSES;
	NAMED BY SUPERIOR OBJECT CLASS
		module
		AND SUBCLASSES;
	WITH ATTRIBUTE
		moduleId;
REGISTERED AS { nameBinding 3 };

END
--< GDMO.EndDocument "ES 201 097-1 V1.1.1 (1998-01)" >--
