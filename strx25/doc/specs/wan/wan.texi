% -*- texinfo -*- vim: ft=texinfo
% vim: ft=texinfo nosmartindent nocindent noautoindent tw=120
% =========================================================================
%
% @(#) $Id: wan.texi,v 0.9.2.2 2008-07-11 09:46:30 brian Exp $
%
% =========================================================================
%
% Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
%
% All Rights Reserved.
%
% Permission is granted to make and distribute verbatim copies of this
% manual provided the copyright notice and this permission notice are
% preserved on all copies.
%
% Permission is granted to copy and distribute modified versions of this
% manual under the conditions for verbatim copying, provided that the
% entire resulting derived work is distributed under the terms of a
% permission notice identical to this one.
% 
% Since the Linux kernel and libraries are constantly changing, this
% manual page may be incorrect or out-of-date.  The author(s) assume no
% responsibility for errors or omissions, or for damages resulting from
% the use of the information contained herein.  The author(s) may not
% have taken the same level of care in the production of this manual,
% which is licensed free of charge, as they might when working
% professionally.
% 
% Formatted or processed versions of this manual, if unaccompanied by
% the source, must acknowledge the copyright and authors of this work.
%
% -------------------------------------------------------------------------
%
% U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
% on behalf of the U.S. Government ("Government"), the following
% provisions apply to you.  If the Software is supplied by the Department
% of Defense ("DoD"), it is classified as "Commercial Computer Software"
% under paragraph 252.227-7014 of the DoD Supplement to the Federal
% Acquisition Regulations ("DFARS") (or any successor regulations) and the
% Government is acquiring only the license rights granted herein (the
% license rights customarily provided to non-Government users).  If the
% Software is supplied to any unit or agency of the Government other than
% DoD, it is classified as "Restricted Computer Software" and the
% Government's rights in the Software are defined in paragraph 52.227-19
% of the Federal Acquisition Regulations ("FAR") (or any successor
% regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
% NASA Supplement to the FAR (or any successor regulations).
%
% =========================================================================
% 
% Commercial licensing and support of this software is available from
% OpenSS7 Corporation at a fee.  See http://www.openss7.com/
% 
% =========================================================================
%
% Last Modified $Date: 2008-07-11 09:46:30 $ by $Author: brian $
%
% =========================================================================
\input texinfo @c -*-texinfo-*-
@c vim: ft=texinfo nosmartindent nocindent noautoindent tw=120
@c %**start of header
@setfilename wan.info
@include texi/args.texi
@set MANUAL_TITLE Wide Area Network Interface
@set MANUAL_TYPE Specification
@settitle @value{MANUAL_TITLE}
@c %**end of header

@dircategory OpenSS7
@direntry
* WAN: (wan).			Wide Area Network Interface Specification
@end direntry

@include texi/args.texi
@set MANUAL_TITLE Wide Area Network Interface
@set MANUAL_TYPE Specification

@comment The following copyright information goes at the head of each .info file.
@ifinfo
This file documents the SpiderWAN Wide Area Network Interface.

This is Edition @value{PACKAGE_VERSION}, last updated @value{PACKAGE_DATE}, for
@value{PACKAGE_TITLE} version @value{PACKAGE_VERSION} release
@value{PACKAGE_RELEASE} published by @uref{http://www.openss7.com/,OpenSS7
Corporation}.

Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/,OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org,Brian F. G. Bidulock} @*

All Rights Reserved.

Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on all
copies.

@ignore
Permission is granted to process this file through Tex and print the results,
provided the printed document carries copying permission notice identical to
this one except for the removal of this paragraph (this paragraph not being
relevant to the printed manual).

@end ignore
Permission to use, copy, modify, and distribute this documentation for any
purpose and without fee is hereby granted, provided that the above copyright
notice appears in all copies and that both that copyright notice and this
permission notice appear in supporting documentation, and that the name OpenSS7
Corporation not be use in advertising or publicity pertaining to distribution
of the software without specific, written prior permission.  OpenSS7 Corporation
makes no representations about the suitability of this documentation for any
purpose.  It is provided ``as is'' without express or implied warranty.

Permission is granted to copy and distribute modified versions of this manual
under the conditions for verbatim copying, provided the entire resulting
derived work is distributed under the terms of a permission notice identical to
this one.

Permission is granted to copy and distribute translations of this manual into
another language, under the above conditions for modified versions.
@end ifinfo

@include texi/args.texi
@set MANUAL_TITLE Wide Area Network Interface
@set MANUAL_TYPE Specification

@ignore
@shorttitlepage @value{MANUAL_TITLE} @value{MANUAL_TYPE}
@end ignore
@titlepage
@titlefont{@value{MANUAL_TITLE}}
@sp 0.5
@title @value{MANUAL_TYPE}
@subtitle Version @value{PACKAGE_VERSION} Edition @value{PACKAGE_RELEASE}
@subtitle Updated @value{PACKAGE_DATE}
@sp 0.2
@subtitle Distributed with Package @value{PACKAGE}-@value{VERSION}
@sp 2
@subtitle Copyright @copyright{} 2008  OpenSS7 Corporation
@subtitle All Rights Reserved.
@sp 4
@quotation
@subheading Abstract
This document is a @value{MANUAL_TITLE} containing technical details concerning
the implementation of the @value{MANUAL_TITLE} for OpenSS7.  It contains
recommendations on software architecture as well as platform and system
applicability of the @value{MANUAL_TITLE}.  It provides abstraction of the HDLC
Frame Protocol (ISO 3309) to these components as well as providing a basis for
link layer control for other network protocols.
@end quotation
@author Brian Bidulock <@email{bidulock@@openss7.org}> for
@sp 0.2
@author The OpenSS7 Project <@uref{http://www.openss7.org/}>

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2008  @uref{http://www.openss7.com/, OpenSS7 Corporation} @*
Copyright @copyright{} 1997-2000  @email{bidulock@@openss7.org, Brian F. G. Bidulock}

@noindent
All Rights Reserved.

@subsubheading Published by:
@noindent
@uref{http://www.openss7.com/,OpenSS7 Corporation} @*
1469 Jefferys Crescent @*
Edmonton, Alberta  T6L 6T1 @*
Canada @*

@noindent
Unauthorized distribution or duplication is prohibited.

@sp 1

@ignore
@noindent
This software and related documentation is protected by copyright and
distributed under licenses restricting its use, copying, distribution and
decompilation.  No part of this software or related documentation may be
reproduced in any form by any means without the prior written authorization of
the copyright holder, and licensors, if any.

@noindent
The recipient of this document, by its retention and use, warrants that the
recipient will protect this information and keep it confidential, and will not
disclose the information contained in this document without the written
permission of its owner.

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation
for any reason, including but not limited to, conformity with standards
promulgated by various agencies, utilization of advances in the state of the
technical arts, or the reflection of changes in the design of any techniques, or
procedures embodied, described, or referred to herein.  OpenSS7 Corporation is
under no obligation to provide any feature listed herein.
@end ignore

@noindent
Permission to use, copy and distribute this documentation without modification,
for any purpose and without fee or royalty is hereby granted, provided that both
the above copyright notice and this permission notice appears in all copies and
that the name of OpenSS7 Corporation not be used in advertising or publicity
pertaining to distribution of this documentation or its contents without
specific, written prior permission.  OpenSS7 Corporation makes no representation
about the suitability of this documentation for any purpose.  It is provided
``as is'' without express or implied warranty.

@subsubheading Notice:

@noindent
@b{OPENSS7 CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
DOCUMENTATION INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE
DOCUMENT ARE SUITABLE FOR ANY PURPOSE, OR THAT THE IMPLEMENTATION OF SUCH
CONTENTS WILL NOT INFRINGE ON ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR
OTHER RIGHTS..  IN NO EVENT SHALL OPENSS7 CORPORATION BE LIABLE FOR ANY DIRECT,
INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH ANY USE OF THIS
DOCUMENT OR THE PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.}

@sp 1

@noindent
OpenSS7 Corporation reserves the right to revise this software and documentation
for any reason, including but not limited to, conformity with standards
promulgated by various agencies, utilization of advances in the state of the
technical arts, or the reflection of changes in the design of any techniques, or
procedures embodied, described, or referred to herein.  OpenSS7 Corporation is
under no obligation to provide any feature listed herein.

@vskip 0pt
@end titlepage
@iftex
@headings off
@everyheading @thistitle @| @thisfile @| @thischaptername
@evenheading @thischapter @| @| @thisfile
@oddheading @thistitle @| @| @thischaptername
@everyfooting Version @value{PACKAGE_VERSION} Ed. @value{PACKAGE_RELEASE} @| @value{PACKAGE_DATE} @| @thispage
@evenfooting @thispage @| @| Version @value{PACKAGE_VERSION} Rel. @value{PACKAGE_RELEASE}
@oddfooting @value{PACKAGE_DATE} @| @| @thispage
@end iftex
@page

@c Define an index of primitives
@defcodeindex pr
@c Define an index of primitive values
@defcodeindex pv
@c Define an index of primitive error values
@defcodeindex pe
@c Define an index of protocol states
@defcodeindex st
@c Define an index of input-output controls
@defcodeindex ct
@c Define an index of manual pages.
@defcodeindex mp

@ifnottex
@syncodeindex pr cp
@syncodeindex pv cp
@syncodeindex pe cp
@syncodeindex st cp
@syncodeindex mp cp
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex ct cp
@end ifnottex

@include texi/macros.texi
@include texi/versions.texi

@iftex

@macro prim {name}
@code{\name\}@prindex \name\
@end macro

@macro pval {name}
@code{\name\}@pvindex \name\
@end macro

@macro perr {name}
@code{\name\}@peindex \name\
@end macro

@macro psta {name}
@code{\name\}@stindex \name\
@end macro

@macro parm {name}
@code{\name\}@vrindex \name\
@end macro

@macro pioc {name}
@code{\name\}@ctindex \name\
@end macro

@end iftex

@ifnottex
@c skip deep indexing for plain text, html and info
@c it messes up column with maximums (texinfo bug)

@macro prim{name}
@code{\name\}
@end macro

@macro pval{name}
@code{\name\}
@end macro

@macro perr{name}
@code{\name\}
@end macro

@macro psta{name}
@code{\name\}
@end macro

@macro parm{name}
@code{\name\}
@end macro

@macro pioc{name}
@code{\name\}
@end macro

@end ifnottex

@ifnottex
@node Top
@top Wide Area Network Interface
@end ifnottex

@menu
* Introduction::
* Model of the WAN Layer::
* WAN Services::
* WAN Message Primitives::
@c * Allowable Sequence of WAN Primitives::
* WAN Input-Output Controls::
* WAN Header Files::
@c * WAN Library::
* WAN Drivers and Modules::
* WAN Utilities::
* WAN File Formats::
* WAN Compatibility and Porting::
* Glossary of WAN Terms and Acronyms::
* References::
* Index::
@end menu

@iftex
@c insert list of figures and tables for printed manuals
@page
@heading List of Figures
@listoffloats Figure
@page
@heading List of Tables
@listoffloats Table
@end iftex

@node Introduction
@chapter Introduction

The Wide Area Network (WAN) Interface was developed by Spider Systems, Ltd.,
(now a division of Emerson Power) and is widely available on many platforms.
For example, @cite{AIX AIXlink/X.25}, @cite{HP-UX HP X.25/9000}, @cite{Solaris
Solstice X.25} and @cite{SunLink X.25}, @cite{IRIX IRIS SX.25}, @cite{PT X.25},
@cite{RadiSys WAN} and @cite{SBE X.25} implement the Wide Area Newtork (WAN)
Interface.

The Wide Area Network (WAN) Inteface was designed to be used directly with
standard @dfn{STREAMS} system calls and does not require the use of a
cooperating user space shared library.  Applications program directly use the
@command{getmsg(2s)}, @command{getpmsg(2)}, @command{putmsg(2s)} and
@command{putpmsg(2)} system calls.@footnote{See @manref{getmsg(2s)},
@manref{getpmsg(2)}, @manref{putmsg(2s)} and @manref{putpmsg(2)} manual pages.}
Nevertheless, user shared object libraries can easily be constructed using this
@dfn{STREAMS} service primitive interface.

The system header files that must be included when compiling user applications,
or @dfn{STREAMS} drivers and modules that use the interface, are detailed in
@ref{WAN Header Files}.

A user library, @file{libcdiapi}, is provided, not for interfacing to the message
primitive service interface, but for providing various helper functions when
using the @dfn{STREAMS} service interface.  This library is detailed in @ref{WAN
Library}.

@node Model of the WAN Layer
@chapter Model of the WAN Layer

@figuresized{wan_fig1,1,X.25 Overview,5.5in}

@node WAN Services
@chapter WAN Services

@menu
* WAN Commands::
* WAN Data Structures::
@end menu

@node WAN Commands
@section WAN Commands

@node WAN Data Structures
@section WAN Data Structures

@node WAN Message Primitives
@chapter WAN Message Primitives

@menu
* WAN_SID - Set Subnetwork Identifier::
* WAN_REG - Register Subnetwork Identifier::
* WAN_CTL - Control::
* WAN_DAT - Data::
* WAN_NTY - Notify::
@end menu

The @file{@value{_includedir}/@-@value{PACKAGE}/@-sys/@-snet/@-wan_@-proto.h} header file
(@file{<sys/@-snet/@-wan_@-proto.h>} with proper compile flags) contains
definitions and declarations of primitive structures and field values.

The @type{WAN_primitives} union is formatted as follows:

@example
@group
union WAN_primitives @{
    uint8_t wan_type;
    struct wan_sid wsid;
    struct wan_reg wreg;
    struct wan_ctl wctl;
    struct wan_msg wmsg;
    struct wan_nty wnty;
@};
@end group
@end example

The @type{WAN_primitives} union contains the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always one of the following values:

@multitable {@code{WAN_NTY}}{The contained structure is a @type{wan_nty} structure.}
@item @prim{WAN_SID} @tab The contained structure is a @type{wan_sid} structure.
@item @prim{WAN_REG} @tab The contained structure is a @type{wan_reg} structure.
@item @prim{WAN_CTL} @tab The contained structure is a @type{wan_ctl} structure.
@item @prim{WAN_DAT} @tab The contained structure is a @type{wan_msg} structure.
@item @prim{WAN_NTY} @tab The contained structure is a @type{wan_nty} structure.
@end multitable
@item wsid
The structure of the primitive when @member{wan_type} is @prim{WAN_SID}.

@xref{WAN_SID - Set Subnetwork Identifier}.
@item wreg
The structure of the primitive when @member{wan_type} is @prim{WAN_REG}.

@xref{WAN_REG - Register Subnetwork Identifier}.
@item wctl
The structure of the primitive when @member{wan_type} is @prim{WAN_CTL}.

@xref{WAN_CTL - Control}.
@item wmsg
The structure of the primitive when @member{wan_type} is @prim{WAN_DAT}.

@xref{WAN_DAT - Data}.
@item wnty
The structure of the primitive when @member{wan_type} is @prim{WAN_NTY}.

@xref{WAN_NTY - Notify}.
@end table

These primitive types are described in detail in the sections that follow.

@page
@node WAN_SID - Set Subnetwork Identifier
@section WAN_SID - Set Subnetwork Identifier

Requests that the WAN driver assign the specified subnetwork identifier to the
Stream and associate the Stream with the underlying device identified by the
subnetwork identifier.  This primitive is equivalent to the
@manref{CD_ATTACH_REQ(7)} primitive of the @manref{cdi(7)}.

@subheading Format

The primitive consists of one @msg{M_PROTO} message block containing a
@type{wan_sid} structure.
The @type{wan_sid} structure is formatted as follows:

@example
@group
struct wan_sid @{
    uint8_t wan_type;
    uint8_t wan_spare[3];
    uint32_t wan_snid;
@};
@end group
@end example

@c @subheading Usage

@subheading Parameters

The @type{wan_sid} structure contains the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always @prim{WAN_SID}.
@item wan_spare
Spare bytes for alignment: ignored by the responder and set to zero by the
initiator.
@item wan_snid
Conveys the subnetwork identifier.  Equivalent to the Physical Point of
Attachment (PPA) of the WAN interface.
@end table

@c @subheading State

@subheading Response

Should an error occur, an @msg{M_ERROR} message is sent upstream with an
appropriate error code, resulting in the failure of all system calls on the
Stream until closed.  The @prim{WAN_SID} primitive may fail when:

@table @perr
@item ENODEV
The specified @member{wan_snid} is unknown or invalid.
@item EINVAL
The @msg{M_PROTO} message block is of an incorrect length for the primitive.
@item EEXIST
The @member{wan_snid} specified is in use by another Stream.
@item ERANGE
The @member{wan_snid} member contains invalid information.
@item EBUSY
The physical channel referenced by the @member{wan_snid} is in use by another
Stream.
@item ENOSR
The @file{s_wan} module, or underlying CDI driver lacks the @cite{STREAMS}
resources necessary to satisfy the request.
@item EIO
The @prim{WAN_SID} primitive was issued from an incorrect state for the
subnetwork entity.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@c @subheading Equivalence

@c @subheading Compatibility

@page
@node WAN_REG - Register Subnetwork Identifier
@section WAN_REG - Register Subnetwork Identifier

Registers the subnetwork identifier specified in the @member{wan_snid} field of
the primitive.  Once a subnetwork entity has been registered, it cannot be tuned
or otherwise altered unless disabled with
@constant{W_DISABLE}.@footnote{@xref{W_DISABLE - Disable Interface Data
Transfer}.} This primitive is used by management applications to place
subnetwork entities into service.

@subheading Format

The primitive consists of one @msg{M_PROTO} message block containing a
@type{wan_reg} structure.
The @type{wan_reg} structure is formatted as follows:

@example
@group
struct wan_reg @{
    uint8_t wan_type;
    uint8_t wan_spare[3];
    uint32_t wan_snid;
@};
@end group
@end example

@c @subheading Usage

@subheading Parameters

The @type{wan_reg} structure contains the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always @prim{WAN_REG}.
@item wan_spare
Spare bytes for alignment: ignored by the responder and set to zero by the
initiator.
@item wan_snid
Conveys the subnetwork identifier.  Equivalent to the Physical Point of
Attachment (PPA) of the WAN interface.
@end table

@c @subheading State

@subheading Response

Should an error occur, an @msg{M_ERROR} message is sent upstream with an
appropriate error code, resulting in the failure of all system calls on the
Stream until closed.  The @prim{WAN_REG} primitive may fail when:

@table @perr
@item ENODEV
The specified @member{wan_snid} is unknown or invalid.
@item EINVAL
The @msg{M_PROTO} message block is of an incorrect length for the primitive.
@item EXDEV
There exists a hardware configuration error for the specified @member{wan_snid}.
@item EBUSY
The physical channel referenced by the @member{wan_snid} is in use by another
Stream.
@item EIO
The @prim{WAN_REG} primitive was issued from an incorrect state for the
subnetwork entity.
@item ENXIO
The underlying device has encountered a fatal error.
@item ENOMEM
There was insufficient memory immediately available to register the subnetwork
identity.
@item E2BIG
The maximum receive buffer size is too small to hold the largest frame required
by the device.
@end table

@c @subheading Equivalence

@c @subheading Compatibility

@page
@node WAN_CTL - Control
@section WAN_CTL - Control

This primitive class consists of four primitives used to enable or disable the
WAN interface.  These primitives are equivalent to the
@manref{CD_ENABLE_REQ(7)}, @manref{CD_ENABLE_CON(7)},
@manref{CD_DISABLE_REQ(7)}, @manref{CD_DISABLE_CON(7)}, and the
@manref{CD_ERROR_IND(7)} primitives of the @manref{cdi(7)}.

@subheading Format

The @prim{WAN_CTL} primitives consist of one @msg{M_PROTO} message block
containing a @type{wan_ctl} structure.
The @type{wan_ctl} structure is formatted as follows:

@example
@group
struct wan_ctl @{
    uint8_t wan_type;
    uint8_t wan_command;
    uint8_t wan_remtype;
    uint8_t wan_remsize;
    uint8_t wan_remaddr[20];
    uint8_t wan_status;
    uint8_t wan_diag;
@};
@end group
@end example

@subheading Usage

The @pval{WC_CONNECT} command is valid from the WAN user to the WAN driver; or
from the WAN driver to the WAN user.
Fields @member{wan_remtype}, @member{wan_remsize} and @member{wan_remaddr} are
significant, @member{wan_status} and @member{wan_diag} are ignored.

This @pval{WC_CONCNF} command is valid when sent from the WAN driver to the WAN
user; or from the WAN user to the WAN driver.
Fields @member{wan_status} and @member{wan_diag} are significant,
@member{wan_remtype}, @member{wan_remsize} and @member{wan_remaddr} are ignored.

This @pval{WC_DISC} command is valid when sent from the WAN user to the WAN
driver; or from the WAN driver to the WAN user.
All fields are ignored.

This @pval{WC_DISCCNF} command is valid when sent from the WAN driver to the WAN
user; or from the WAN user to the WAN driver.
Fields @member{wan_status} and @member{wan_diag} are significant,
@member{wan_remtype}, @member{wan_remsize} and @member{wan_remaddr} are ignored.

@subheading Parameters

The @type{wan_ctl} structure contains the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always @prim{WAN_CTL}.
@item wan_command
Conveys the WAN command.  This field may assume one of the following values:

@multitable {@code{WC_CONNECT}}{The primitive is a disconnect request of indication.}
@item @pval{WC_CONNECT} @tab The primitive is a connect request or indication.
@item @pval{WC_CONCNF} @tab The primitive is a connect confirmation.
@item @pval{WC_DISC} @tab The primitive is a disconnect request of indication.
@item @pval{WC_DISCCNF} @tab The primitive is a disconnect confirmation.
@end multitable
@item wan_remtype
When significant, conveys the type of the remote address.  This field may have
one of the following values:

@table @pval
@item WAN_TYPE_ASC
The @member{wan_remaddr} field contains ASCII coded digits.  The
@member{wan_remsize} field contains the number of digits (in octets).
@item WAN_TYPE_BCD
The @member{wan_remaddr} field contains BCD encoded digits.  The
@member{wan_remsize} field contains the number of digits (in semi-octets).
@end table

This field is only significant in the @pval{WC_CONNECT} primitive, and for
devices that have call procedural definitions. Otherwise, the field is set to
zero (0).
@item wan_remsize
When significant, conveys the length of the remote address in digits (either
octets or semi-octets depending on the @member{wan_remtype} member).

This field is only significant in the @pval{WC_CONNECT} primitive, and for
devices that have call procedural definitions. Otherwise, the field is set to
zero (0).
@item wan_remaddr
When significant, conveys the remote address.  The address contianed in this
field is either represented as ASCII digits or BCD encoded digits, depending on
the value of the @member{wan_remtype} field.  This field is only significant in
the @pval{WC_CONNECT} primitive.

This field is only significant in the @pval{WC_CONNECT} primitive, and for
devices that have call procedural definitions.  Otherwise, the field is set to
null.
@item wan_status
When significant, provides the status for the @pval{WC_CONCNF} or
@pval{WC_DISCCNF} command.  This field can assume one of the following
values:

@table @pval
@item WAN_FAIL
The preceding @pval{WC_CONNECT} or @pval{WC_DISC} command was
unsuccessful.  The link remains in the disconnected or connected state as the
case may be.
@item WAN_SUCCESS
The preceding @pval{WC_CONNECT} or @pval{WC_DISC} command was
successful.  The link moves to the connected or disconnected state as the case
may be.
@end table

This field is only significant in the @pval{WC_CONCNF} and
@pval{WC_DISC} primitives.
@item wan_diag
When significant and the status field is @pval{WAN_FAIL}, provides
diagnostic information concerning the failure.  This field is only significant
in the @pval{WC_CONCNF} and @pval{WC_DISCCNF} primitives when failure is
indicated.
@end table

@subheading State

The @pval{WC_DISCCNF} command is only valid in response to a preceding and
corresponding @pval{WC_DISC} command from the opposite direction.
The @pval{WC_DISC} and @pval{WC_DISCCNF} commands are valid during the
connecting, data transfer, or disconnecting phases.

The @pval{WC_CONCNF} command is only valid in response to a preceding and
corresponding @pval{WC_CONNECT} command from the opposite direction.
The @pval{WC_CONNECT} and @pval{WC_CONCNF} commands are valid during the
idle or connecting phases.

@subheading Response

Should an error occur, an @msg{M_PROTO} message is sent upstream with an
appropriate error code, resulting in the failure of all system acalls on the
Stream until closed.  The @prim{WAN_CTL} primitive may fail when:

@table @perr
@item EINVAL
The @msg{M_PROTO} message block is of an incorrect length for the primitive, or
the @member{wan_command} is invalid.
@item ENXIO
The underlying device driver has encountered a fatal error.
@item EIO
The @prim{WAN_CTL} primitive was issued form an incorrect state for the
subnetwork entity.
@item E2BIG
The maximum receive buffer size is too small to hold the largest frame required
by the device.
@end table

@subheading Equivalence

When sent from the WAN user, the @pval{WC_CONNECT} command corresponds to the
@manref{CD_ENABLE_REQ(7)} primitive of the @manref{cdi(7)}.
When sent from the WAN driver, the primitive has no corresponding primitive.
When from the WAN driver, @pval{WC_CONCNF} corresponds to
@manref{CD_ENABLE_CON(7)}.
When from the WAN user, @pval{WC_CONCNF} has no corresponding primitive.

When to the WAN driver, @pval{WC_DISC}
corresponds to @manref{CD_DISABLE_REQ(7)}.
When from the WAN driver to the WAN user, @pval{WC_DISC} corresponds to
@manref{CD_ERROR_IND(7)}.
When from the WAN driver, @pval{WC_DISCCNF}
corresponds to @manref{CD_DISABLE_CON(7)}.
When to the WAN driver, @pval{WC_DISCCNF} has no
corresponding primitive.

@subheading Compatibility

Some implementations ignore all of the parameter fields of the @type{wan_ctl}
structure other than @member{wan_type} and @member{wan_command}, as is normally
the case for @pval{WAN_NONE}: no call procedural definitions.

@page
@node WAN_DAT - Data
@section WAN_DAT - Data

This primitive class provides two primitives for the transfer of data across the
service interface.  Attached @msg{M_DATA} message blocks contain user data.

@subheading Format

The @prim{WAN_DAT} primitive contains a @type{wan_msg} structure.  The primitive
consists of one @msg{M_PROTO} message block followed by one or more @msg{M_DATA}
message blocks containing user data.
The @msg{M_PROTO} message block is structured as follows:

@example
@group
struct wan_msg @{
    uint8_t wan_type;
    uint8_t wan_command;
@};
@end group
@end example

@subheading Usage

The @pval{WC_TX} command specifies that the user data in the associated
@msg{M_DATA} message blocks consist of data for transmission.

The @pval{WC_RX} command indicates that the user data in the associated
@msg{M_DATA} message blocks consist of received data.

@subheading Parameters

The @type{wan_msg} structure contains the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always @prim{WAN_DAT}.
@item wan_command
Conveys the WAN command.  This field may assume one of the following values:

@table @pval
@item WC_TX
Specifies that the user data in the associated @msg{M_DATA} message blocks
consist of data for transmission.
@item WC_RX
Indicates that the user data in the associated @msg{M_DATA} message blocks
consist of received data.
@end table
@end table

@subheading State

The @prim{WAN_DAT} primitive may be issued by WAN user or WAN driver in the data
transfer phase.

@subheading Response

Should an error condition occur, an @msg{M_ERROR} message is sent upstream with
an appropriate error code, resulting in the failure of all system calls on the
Stream until closed.  The @prim{WAN_DAT} primitive may fail when:

@table @perr
@item EINVAL
The @msg{M_PROTO} message block is of an incorrect length for the primitive.
@item ENXIO
The underlying device driver has encountered a fatal error.
@item EIO
The @prim{WAN_DAT} primitive was issued from an incorrect state for the
subnetwork entity.
@item E2BIG
The maximum receive buffer size is too small to hold the largest frame required
by the device.
@end table

@subheading Equivalence

These primitives are equivalent to the @manref{CD_UNITDATA_REQ(7)} and
@manref{CD_UNITDATA_IND(7)} primitives of the @manref{cdi(7)}.
The @pval{WC_TX} primitive, issued by the WAN user, is equivalent to the
@manref{CD_UNITDATA_REQ(7)} primitive;
the @pval{WC_RX}, issued by the WAN driver, the
@manref{CD_UNITDATA_IND(7)}.

@subheading Compatibility

Some implementations provide additional @member{wan_command} values with
hardware- or implementation-specific fields.  Some implementations also define a
structure for the initial portion of the @msg{M_DATA} block that contains media-
or hardware-specific fields.

@page
@node WAN_NTY - Notify
@section WAN_NTY - Notify

Registers for or provide notification of events for the @member{wan_snid} field
of the primitive.  When passed to the WAN driver, the primitive requests that
the WAN driver record the events for which notification is to be given.  When
passed to the WAN user, the primitive notifies of a triggered event.
This primitive corresponds to the @manref{CD_MODEM_SIG_IND(7)} and
@manref{CD_ERROR_IND(7)} primitives of the @manref{cdi(7)}.

@subheading Format

The primitive consists of a signle @msg{M_PROTO} message block containing a
@type{wan_nty} structure.
The @type{wan_nty} structure is formatted as follows:

@example
@group
struct wan_nty @{
    uint8_t wan_type;
    uint8_t wan_spare[3];
    uint32_t wan_snid;
    uint32_t wan_eventstat;
    uint32_t wan_reserved[2];
@};
@end group
@end example

@c @subheading Usage

@subheading Parameters

The @type{wan_nty} structure has the following members:

@table @member
@item wan_type
Specifies the type of the structure contained in the @msg{M_PROTO} message block.
Always @prim{WAN_NTY}.
@item wan_spare
Spare bytes for alignment: ignored by the responder and set to zero by the
initiator.
@item wan_snid
Conveys the subnetwork identifier.  Equivalent to the Physical Point of
Attachment (PPA) of the WAN interface.
@item wan_eventstat
This member contains one of the following bit masks:

@multitable @columnfractions .3 .7
@item @pval{W_RECEIVE_BUFFER_OVFL} @tab A received buffer overflow has occurred.
@item @pval{W_FRAMING_ERROR} @tab A received frame framing error has occured.
@item @pval{W_TIMEOUT} @tab A timeout has occurred.
@item @pval{W_HD_OVERRUN} @tab A hardware device overrun has occurred.
@item @pval{W_ATTACHED_DEV_INACT} @tab The attached device has gone inactive.
@item @pval{W_ATTACHED_DEV_ACTIVE} @tab The attached device has become active.
@item @pval{W_FCS_ERR} @tab A Frame Check Sequence (CRC) error has occurred.
@item @pval{W_CTS_ON} @tab The CTS (Clear to Send) lead has gone high.
@item @pval{W_CTS_OFF} @tab The CTS (Clear to Send) lead has gone low.
@item @pval{W_DCD_ON} @tab The DCD (Data Carrier Detect) lead has gone high.
@item @pval{W_DCD_OFF} @tab The DCD (Data Carrier Detect) lead has gone low.
@item @pval{W_DSR_ON} @tab The DSR (Data Set Ready) lead has gone high.
@item @pval{W_DSR_OFF} @tab The DSR (Data Set Ready) lead has gone low.
@item @pval{W_RI_ON} @tab The RI (Ring Indicator) lead has gone high.
@item @pval{W_RI_OFF} @tab The RI (Ring Indicator) lead has gone low.
@item @pval{W_PARITY_ERROR} @tab A parity error has occurred on an asynchronous line.
@item @pval{W_BREAK_DETECTED} @tab A break has been detected on an asyncrhonous line.
@item @pval{W_SHORT_FRAME} @tab A short frame has been received.
@item @pval{W_TX_UNDERRUN} @tab The transmitter FIFO has underrun.
@item @pval{W_ABORT} @tab An aborted frame has been received.
@item @pval{W_RCL_NONZERO} @tab
@item @pval{W_BSC_PAD_ERR} @tab A Bisynchronous Character padding error has occured.
@item @pval{W_CTS_UNDERRUN} @tab A Clear to Send underrun condition has occurred.
@end multitable
@item wan_reserved
Reserved for future use: set to zero by the issuer and ignored by the receiver.
@end table

@subheading State

The @prim{WAN_NTY} primitive may be issued by WAN user or WAN driver in the
connecting, data transfer, disconnecting, and disconnected phases.

@subheading Response

When @prim{WAN_NTY} is issued by the WAN driver, the WAN driver does not expect
any response.

When issued by the WAN interface user, the WAN interface user expects the WAN
driver to register the specified events and generate a @prim{WAN_NTY} primitive
should any of the registered events be detected, and to not generate a
@prim{WAN_NTY} primitive for any events that have not been registered.

Should an error occur as a result of a primitive issued by the WAN interface
user, an @msg{M_PROTO} message is sent upstream with an appropriate error code,
resulting in the failure of all system acalls on the Stream until closed.  The
@prim{WAN_NTY} primitive may fail when:

@table @perr
@item EINVAL
The @msg{M_PROTO} message block is of an incorrect length for the primitive, or
the @member{wan_command} is invalid.
@item ENXIO
The underlying device driver has encountered a fatal error.
@item EIO
The @prim{WAN_CTL} primitive was issued form an incorrect state for the
subnetwork entity.
@item E2BIG
The maximum receive buffer size is too small to hold the largest frame required
by the device.
@end table

@subheading Equivalence

When issued by the WAN user, the @prim{WAN_NTY} primitive is equivalent to the
@manref{CD_MODEM_SIG_POLL(7)} primitive of the @manref{cdi(7)}.
When issued by the WAN driver, the @prim{WAN_NTY} primitive is equivalent to the
@manref{CD_MODEM_SIG_IND(7)} and @manref{CD_ERROR_IND(7)} primitive.

@subheading Compatibility

The @prim{WAN_NTY} primitive is @cite{OpenSS7}-specific and was modelled after
the @cite{IBM} @prim{WAN_NOTIFY} primitive included in the @cite{ARTIC}
implementation.@footnote{@xref{ARTIC WAN,,ARTIC WAN}.}  While @prim{WAN_NTY} is
similar in structure and form to @prim{WAN_NOTIFY} when issued by the WAN
driver, @prim{WAN_NTY} also permits registration of events when issued by the
WAN interface user.  This is accomplished in @cite{ARTIC} using the
@pioc{W_SETLINE} and @pioc{W_GETLINE} and other device-dependent input-output
controls.

The default behaviour for a freshly created Stream is to not generate any
notifications at all.  This provides maximum compatibility with implementations
for which applications programs, drivers and modules are not expecting to
receive @prim{WAN_NTY} or @prim{WAN_NOTIFY} primitives.

@c @node Allowable Sequence of WAN Primitives
@c @chapter Allowable Sequence of WAN Primitives

@node WAN Input-Output Controls
@chapter WAN Input-Output Controls

@menu
* Input-Output Control Data Structures::
* Input-Output Control Commands::
@end menu

@node Input-Output Control Data Structures
@section Input-Output Control Data Structures

@menu
* WAN_STATS - Statistics Data Structures::
* WAN_TUNE - Tunable Data Structures::
* WAN_MAP - Mapping Data Structures::
* WAN_PLAIN - Plain Data Structures::
* WAN_SETSIG - Signal and Lead Data Structures::
@end menu

The @file{@value{_includedir}/@-@value{PACKAGE}/@-sys/@-snet/@-wan_@-control.h} header
file (@file{<sys/@-snet/@-wan_@-control.h>} with proper compile flags)
defines a number of structures, pointers to which are used as arguments to
input-output controls.  These structures fall into four classes, identified by
the value of the first byte of the structure, as follows:

@multitable @columnfractions .15 .85

@item @pval{WAN_STATS} @tab A @type{wan_stioc} structure that identifies the
subnetwork and contains the state and statistics associated with the subnetwork.
Used with the @pioc{W_ZEROSTATS} and @pioc{W_GETSTATS} input-output controls.

@item @pval{WAN_TUNE} @tab A @type{wan_tnioc} structure that idnetifies the
subnetwork and contains the tunable parameters associated with the subnetwork.
Used with the @pioc{W_SETTUNE} and @pioc{W_GETTUNE} input-output controls.

@item @pval{WAN_MAP} @tab A @type{wanmapgf}, @type{wanmappf} or @type{wanmapdf}
structure that identifies the mapping entries, mapping entry or subnetwork,
respectively.  Used with the @pioc{W_GETWANMAP}, @pioc{W_PUTWANMAP} and
@pioc{W_DELWANMAP} input-output controls, respectively.

@item @pval{WAN_PLAIN} @tab A @type{wan_hdioc} structure that identifies the
subnetwork.  Used with the @pioc{W_STATUS}, @pioc{W_ENABLE} and @pioc{W_DISABLE}
input-output controls.

@item @pval{WAN_SETSIG} @tab A @type{wan_setsigf} structure that identifies the
subnetwork and contains the setting for leads associated with the subnetwork.
Used with the @pioc{W_SETSIG}  and @pioc{W_GETSIG}
input-output controls.

@end multitable

These structures are described in detail in the subsections that follow.

@page
@node WAN_STATS - Statistics Data Structures
@subsection WAN_STATS - Statistics Data Structures

The value of @pval{WAN_STATS} in the @member{w_type} field of the structure
pointed to by the input-output control argument specifies that the pointed-to
structure is a @type{wan_stioc} structure.  This structure is used by the
@pioc{W_ZEROSTATS} and @pioc{W_GETSTATS} input-output controls.

@menu
* wan_stioc Structure::
* hdlcstats_t Structure::
@end menu

@node wan_stioc Structure
@subsubsection wan_stioc Structure

The @type{wan_stioc} structure is formatted as follows:

@example
@group
struct wan_stioc @{
    uint8_t w_type;
    uint8_t w_state;
    uint8_t w_spare[2];
    uint32_t w_snid;
    hdlcstats_t hdlc_stats;
@};
@end group
@end example

The @type{wan_stioc} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_STATS}.
@item w_state
Returns the state of the subnetwork entity.  This member may have one of the
following values:

@multitable {@code{HDLC_DISABLED}}{The raw HDLC connection is disconnecting.}
@item @psta{HDLC_IDLE} @tab The raw HDLC connection is idle.
@item @psta{HDLC_ESTB} @tab The raw HDLC connection is established.
@item @psta{HDLC_DISABLED} @tab The raw HDLC connection is disabled.
@item @psta{HDLC_CONN} @tab The raw HDLC connection is connecting.
@item @psta{HDLC_DISC} @tab The raw HDLC connection is disconnecting.
@end multitable
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@item hdlc_stats
Contains the @type{hdlcstats_t} structure described below.
@end table

@page
@node hdlcstats_t Structure
@subsubsection hdlcstats_t Structure

The @type{hdlcstats_t} structure is formatted as follows:

@example
@group
typedef struct hstats @{
    uint32_t hc_txgood;
    uint32_t hc_txurun;
    uint32_t hc_rxgood;
    uint32_t hc_rxorun;
    uint32_t hc_rxcrc;
    uint32_t hc_rxnobuf;
    uint32_t hc_rxnflow;
    uint32_t hc_rxoflow;
    uint32_t hc_rxabort;
    uint32_t hc_intframes;
@} hdlcstats_t;
@end group
@end example

The @type{hdlcstats_t} structure has the following members, each reflecting a
count since the last reset:

@table @member
@item hc_txgood
A count of the number of good frames transmitted since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_txurun
A count of the number of transmitter underruns since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxgood
A count of the number of good frames received since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxorun
A count of the number of receiver overruns since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxcrc
A count of the number of received CRC or framing errors since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxnobuf
A count of the number of receive buffer overflows since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxnflow
A count of the number of received frames with no flow control since the last
reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxoflow
A count of the number of received buffer overflows since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_rxabort
A count of the number of receiver aborts since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@item hc_intframes
A count of the number of frames failed to be transmitted by the loss of modem
signals or other physical medium error since the last reset.
This is a non-wrapping counter: should the counter reach its maximum value, it
will no longer be incremented.
@end table

@page
@node WAN_TUNE - Tunable Data Structures
@subsection WAN_TUNE - Tunable Data Structures

The value of @pval{WAN_TUNE} in the @member{w_type} field of the structure
pointed to by the input-output control argument specifies that the pointed-to
structure is a @type{wan_tnioc} structure.  This structure is used by the
@pioc{W_SETTUNE} and @pioc{W_GETTUNE} input-output controls.

@menu
* wan_tnioc Structure::
* wantune_t Structure::
* WAN_hddef Structure::
* WAN_x21 Structure::
* WAN_v25 Structure::
@end menu

@node wan_tnioc Structure
@subsubsection wan_tnioc Structure

The @type{wan_tnioc} structure is formatted as follows:

@example
@group
struct wan_tnioc @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
    wantune_t wan_tune;
@};
@end group
@end example

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_TUNE}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@item wan_tune
Contains the @type{wantune_t} structure described below.
@end table

@page
@node wantune_t Structure
@subsubsection wantune_t Structure

The @type{wantune_t} structure is formatted as follows:

@example
@group
typedef struct @{
    uint16_t WAN_options;
@c    uint16_t WAN_pad;
    struct WAN_hddef WAN_hd;
@} wantune_t;
@end group
@end example

The @type{wantune_t} structure contains the following members:

@table @member
@item WAN_options
Specifies a number of WAN options associated with the device.  This member is a
bitwise OR of zero or more of the following values:

@table @pval
@item TRANSLATE
When set, indicates that a translation using the WAN remote address to interface
address mapping function is to be performed.
@end table
@item WAN_pad
Padding for alignment, set to zero by the issuer and ignored by the responder.
@item WAN_hd
Contains the @type{WAN_hddef} structure described below.
@end table

@page
@node WAN_hddef Structure
@subsubsection WAN_hddef Structure

The @type{WAN_hddef} structure is formatted as follows:

@example
@group
struct WAN_hddef @{
    uint16_t WAN_maxframe;
    uint32_t WAN_baud;
    uint16_t WAN_interface;
    union @{
        uint16_t WAN_cptype;
        struct WAN_x21 WAN_x21def;
        struct WAN_v25 WAN_v25def;
    @} WAN_cpdef;
@};
@end group
@end example

The @type{WAN_hddef} structure contains the following members:

@table @member
@item WAN_maxframe
Conveys the maximum frame size in octets.
@item WAN_baud
Conveys the transmission rate in bits per second.
@item WAN_interface
This member specifies the WAN interface.  It can assume one of the following
values:

@multitable {@code{WAN_RS422}}{The interface is a G.703/G.704 interface.}
@item @pval{WAN_X21} @tab The interface is a X.21 interface.
@item @pval{WAN_V28} @tab The interface is a V.28 interface.
@item @pval{WAN_V35} @tab The interface is a V.35 interface.
@item @pval{WAN_V36} @tab The interface is a V.36 interface.
@item @pval{WAN_RS232} @tab The interface is a RS-232 interface.
@item @pval{WAN_RS422} @tab The interface is a RS-422 interface.
@item @pval{WAN_T1E1} @tab The interface is a G.703/G.704 interface.
@item @pval{WAN_ATM} @tab The interface is a ATM interface.
@end multitable
@item WAN_cpdef
This member defines a number of alternate call procedural defintions described
by a union.  The union contains the following members:

@table @member
@item WAN_cptype
Specifies the tye of the call procedural definitions.  Always @pval{WAN_NONE},
@pval{WAN_X21P} or @pval{WAN_V25bis}.  When @member{WAN_cptype} is
@pval{WAN_NONE}, only this member of the union is significant.
@item WAN_x21def
When @member{WAN_cptype} is @pval{WAN_X21P}, this member of the union is
significant.  This member contains the @type{WAN_x21} structure described below.
@item WAN_v25def
When @member{WAN_cptype} is @pval{WAN_V25bis}, this member of the union is
significant.  This member contains the @type{WAN_v25} structure described below.
@end table
@end table

@page
@node WAN_x21 Structure
@subsubsection WAN_x21 Structure

The @type{WAN_x21} structure is formatted as follows:

@example
@group
struct WAN_x21 @{
    uint16_t WAN_cptype;
    uint16_t T1;
    uint16_t T2;
    uint16_t T3A;
    uint16_t T4B;
    uint16_t T5;
    uint16_t T6;
@};
@end group
@end example

The @type{WAN_x21} structure has the following members:

@table @member
@item WAN_cptype
Specifies the type of the call procedural defintions.  Always @pval{WAN_X21P}.
@item T1
Specifies the timeout for the call request state in deciseconds.
@item T2
Specifies the timeout for the EOS to data transfer in deciseconds.
@item T3A
Specifies the timeout for call progress signals in deciseconds.
@item T4B
Specifies the timeout for DCE provided information in deciseconds.
@item T5
Specifies the timeout for DTE clear request in deciseconds.
@item T6
Specifies the timeout for DTE clear confirm state in deciseconds.
@end table

@page
@node WAN_v25 Structure
@subsubsection WAN_v25 Structure

The @type{WAN_v25} structure is formatted as follows:

@example
@group
struct WAN_v25 @{
    uint16_t WAN_cptype;
    uint16_t callreq;
@};
@end group
@end example

The @type{WAN_v25} structure has the following members:

@table @member
@item WAN_cptype
Specifies the type of the call procedural defintions.  Always @pval{WAN_V25bis}.
@item callreq
Contains the abort time (in deciseconds) for the call request command if the
network does not support CFI.
@end table

@page
@node WAN_MAP - Mapping Data Structures
@subsection WAN_MAP - Mapping Data Structures

The value of @pval{WAN_MAP} in the @member{w_type} field of the structure
pointed to by the input-output control argument specifies that the pointed-to
structure is a @type{wanmapgf}, @type{wanmappf} or @type{wanmapdf} structure.
These structures are used by the @pioc{W_GETWANMAP}, @pioc{W_PUTWANMAP} and
@pioc{W_DELWANMAP} input-output controls, respectively.

@menu
* wanmapgf Structure::
* wanget_t Structure::
* wanmappf Structure::
* wanmap_t Structure::
* wanmapdf Structure::
@end menu

@node wanmapgf Structure
@subsubsection wanmapgf Structure

The @type{wanmapgf} structure is formatted as follows:

@example
@group
struct wanmapgf @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
    wanget_t wan_ents;
@};
@end group
@end example

The @type{wanmapgf} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_MAP}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@item wan_ents
Contains the @type{wanget_t} structure described below.
@end table

@node wanget_t Structure
@subsubsection wanget_t Structure

The @type{wanget_t} structure is formatted as follows:

@example
@group
typedef struct @{
    uint16_t first_ent;
    uint16_t num_ent;
    wanmap_t entries[0];
@} wanget_t;
@end group
@end example

The @type{wanget_t} structure contains the following members:

@table @member
@item first_ent
Specifies the index of the first entry in the @member{entries} member.
@item num_ent
Specifies the number of entries in the @member{entries} member.
@item entries
Contains @member{num_ent} entries of @type{wanmap_t} structures.  The
@type{wanmap_t} structure is described below.
@end table

@page
@node wanmappf Structure
@subsubsection wanmappf Structure

The @type{wanmappf} structure is formatted as follows:

@example
@group
struct wanmappf @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
    wanmap_t wan_ent;
@};
@end group
@end example

The @type{wanmappf} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_MAP}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@item wan_ent
Contains the @type{wanmap_t} structure described below.
@end table

@node wanmap_t Structure
@subsubsection wanmap_t Structure

The @type{wanmap_t} structure is formatted as follows:

@example
@group
typedef struct @{
    uint8_t remsize;
    uint8_t remaddr[20];
    uint8_t infsize;
    uint8_t infaddr[30];
@} wanmap_t;
@end group
@end example

The @type{wanmap_t} structure contains the following members:

@table @member
@item remsize
Conveys the size of the remote address contained in the @member{remaddr} field
in octets.
@item remaddr
Contains the remote address, significant to @member{remsize} octets.
@item infsize
Conveys the size of the interface address contained in the @member{infaddr}
field in octets.
@item infaddr
Contains the remote address, significant to @member{infsize} octets.
@end table

@page
@node wanmapdf Structure
@subsubsection wanmapdf Structure

The @type{wanmapdf} structure is formatted as follows:

@example
@group
struct wanmapdf @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
@};
@end group
@end example

The @type{wanmapdf} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_MAP}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@end table

@page
@node WAN_PLAIN - Plain Data Structures
@subsection WAN_PLAIN - Plain Data Structures

The value of @pval{WAN_PLAIN} in the @member{w_type} field of the structure
pointed to by the input-output control argument specifies that the pointed-to
structure is a @type{wan_hdioc} structure.  The structure is used by the
@pioc{W_STATUS}, @pioc{W_ENABLE} and @pioc{W_DISABLE} input-output controls.

@menu
* wan_hdioc Structure::
@end menu

@node wan_hdioc Structure
@subsubsection wan_hdioc Structure

The @type{wan_hdioc} structure is formatted as follows:

@example
@group
struct wan_hdioc @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
@};
@end group
@end example

The @type{wan_hdioc} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_PLAIN}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@end table

@page
@node WAN_SETSIG - Signal and Lead Data Structures
@subsection WAN_SETSIG - Signal and Lead Data Structures

The value @pval{WAN_SETSIG} in the @member{w_type} field of the structure
pointed to by the input-output control argument specifies that the pointed-to
structure is a @type{wan_setsigf} structure.  This structure is used by the
@pioc{W_SETSIG} and @pioc{W_GETSIG} input-output controls.

@menu
* wan_setsigf Structure::
* wan_setsig_t Structure::
@end menu

@node wan_setsigf Structure
@subsubsection wan_setsigf Structure

The @type{wan_setsigf} structure is formatted as follows:

@example
@group
struct wan_setsigf @{
    uint8_t w_type;
    uint8_t w_spare[3];
    uint32_t w_snid;
    wan_setsig_t wan_setsig;
@};
@end group
@end example

The @type{wan_setsigf} structure contains the following members:

@table @member
@item w_type
Specifies the type of the structure associated with the input-output control.
Always @pval{WAN_SETSIG}.
@item w_spare
Spare bytes for alignment: set to zero (0) by the issuer and ignored by the
responder.
@item w_snid
Specifies the subnetwork identifier.  Equivalent to the CDI Physical Point of
Attachment (PPA).
@item wan_setsig
Contains the @type{wan_setsig_t} structure described below.
@end table

@node wan_setsig_t Structure
@subsubsection wan_setsig_t Structure

The @type{wan_setsig_t} structure is formatted as follows:

@example
@group
typedef struct @{
    uint8_t w_ctrlsignal;
    uint8_t w_reserved[3];
@} wan_setsig_t;
@end group
@end example

The @type{wan_setsig_t} structure contains the following members:

@table @member
@item w_ctrlsignal
Contains the control signals.  This can be a bitwise OR of zero or more of the
following:

@multitable {@code{W_RTS_HIGH}}{Set or indicate RTS high, (or X.21 C signal).}
@item @pval{W_RTS_HIGH} @tab Set or indicate RTS high, (or X.21 C signal).
@item @pval{W_DTR_HIGH} @tab Set or indicate DTR high.
@item @pval{W_DCD_HIGH} @tab Indicate DCD high.
@item @pval{W_DSR_HIGH} @tab Indicate DSR high.
@item @pval{W_CTS_HIGH} @tab Indicate CTS high, (or X.21 I signal).
@item @pval{W_RI_HIGH} @tab Indicate RI high.
@item @pval{W_RTS_LOW} @tab Set RTS low.
@item @pval{W_DTR_LOW} @tab Set DTR low.
@end multitable
@item w_reserved
Reserved field: set to zero (0) by issuer and ignored by responder.
@end table

@page
@node Input-Output Control Commands
@section Input-Output Control Commands

@menu
* W_ZEROSTATS - Zero Statistics::
* W_GETSTATS - Get Statistics::
* W_SETTUNE - Set Tunables::
* W_GETTUNE - Get Tunables::
* W_PUTWANMAP - Put WAN Address Mapping::
* W_GETWANMAP - Get WAN Address Mapping::
* W_DELWANMAP - Delete WAN Address Mappings::
* W_STATUS - Get Interface Status::
* W_ENABLE - Enable Interface Data Transfer::
* W_DISABLE - Disable Interface Data Transfer::
* W_SETSIG - Set Signals and Leads::
* W_GETSIG - Get Signals and Leads::
@end menu

The @file{@value{_includedir}/@-@value{PACKAGE}/@-sys/@-snet/@-wan_@-control.h} header
file (@file{<sys/@-snet/@-wan_@-control.h>} with proper compile flags) defines
a number of input-output controls, as follows:

@multitable @columnfractions .20 .80
@item @pioc{W_ZEROSTATS} @tab Zeroes statistics associated with a subnetwork entity and collects the statistics and
state of the subnetwork prior to reset.
@item @pioc{W_GETSTATS} @tab Retrieves the statistics and state associated with a subnetwork entity.
@item @pioc{W_SETTUNE} @tab Sets the tunable parameters associated with a subnetwork entity.
@item @pioc{W_GETTUNE} @tab Gets the tunable parameters associated with a subnetwork entity.
@item @pioc{W_PUTWANMAP} @tab Puts a remote address to interface address mapping entry.
@item @pioc{W_GETWANMAP} @tab Gets a block of remote address to interface address mapping entries.
@item @pioc{W_DELWANMAP} @tab Deletes all remote address to interface address mapping entries associated with a
subnetwork entity.
@item @pioc{W_STATUS} @tab Retrieves the state of a subnetwork entity.
@item @pioc{W_ENABLE} @tab Enables a subnetwork entity for data transfer.
@item @pioc{W_DISABLE} @tab Disables a subnetwork entity from data transfer.
@end multitable

These input-output controls are described in detail in the subsections that
follow.

@page
@node W_ZEROSTATS - Zero Statistics
@subsection W_ZEROSTATS - Zero Statistics

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_stioc} structure, see @ref{wan_stioc Structure}.

@subsubheading Description

The @pioc{W_ZEROSTATS} input-output control requests that the WAN driver reset
the statistics associated with the @member{w_snid} contained in the passed-in
structure.
The WAN driver is to reset the statistics, returning the statistics and state
immediately before reset in the @member{hdlc_stats} and @member{w_state} members
of the provided structure.
@xref{hdlcstats_t Structure}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_GETSTATS - Get Statistics
@subsection W_GETSTATS - Get Statistics

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_stioc} structure, see @ref{wan_stioc Structure}.

@subsubheading Description

The @pioc{W_GETSTATS} input-output control requests that the WAN driver retrieve
the statistics and state associated with the @member{w_snid} contained in the
passed-in structure.
The WAN driver is to retrieve the current statistics and state, returning them
in the @member{hdlc_stats} and @member{w_state} members of the provided
structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_SETTUNE - Set Tunables
@subsection W_SETTUNE - Set Tunables

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_tnioc} structure, see @ref{wan_tnioc Structure}.

@subsubheading Description

The @pioc{W_SETTUNE} input-output control requests that the WAN driver set the
tunable parameters form the passed-in structure for the @member{w_snid}
contained in that structure.
The WAN driver is to set th tunable, returning any negotiated value in the
provided structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@item E2BIG
The specified @member{WAN_maxframe} is of insufficient size to hold the maximum
size frame necessary for proper operation of the protocol.
@item ENOMEM
The WAN driver cannot allocate single message buffers of size
@member{WAN_maxframe}.
@item EIO
The interface is in a wrong state.  For example, the tuning input-output control
was issued after the interface was already registered with the @prim{WAN_REG}
primitive.
@item EXDEV
The @member{WAN_interface} does not match the capabilities or mode of the
hardware.
@end table

@subsubheading Compatibility

@page
@node W_GETTUNE - Get Tunables
@subsection W_GETTUNE - Get Tunables

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_tnioc} structure, see @ref{wan_tnioc Structure}.

@subsubheading Description

The @pioc{W_GETTUNE} input-output control requests that the WAN driver get the
tunable parameters associated with the @member{w_snid} contained in the
passed-in structure.
The WAN driver is to retrieve the tunable parameters and return them in the
provided structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_PUTWANMAP - Put WAN Address Mapping
@subsection W_PUTWANMAP - Put WAN Address Mapping

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wanmappf} structure, see @ref{wanmappf Structure}.

@subsubheading Description

The @pioc{W_PUTWANMAP} input-output control requests that the WAN driver add a
remote address to interface address mapping entry associated to the specified
subnetwork identifier, @member{w_snid}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_GETWANMAP - Get WAN Address Mapping
@subsection W_GETWANMAP - Get WAN Address Mapping

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wanmapgf} structure, see @ref{wanmapgf Structure}.

@subsubheading Description

The @pioc{W_GETWANMAP} input-output control requests that the WAN driver
retrieve a block of remote address to interface address mapping entries
associated with the specified subnetwork identifier, @member{w_snid}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_DELWANMAP - Delete WAN Address Mappings
@subsection W_DELWANMAP - Delete WAN Address Mappings

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wanmapdf} structure, see @ref{wanmapdf Structure}.

@subsubheading Description

The @pioc{W_DELWANMAP} input-output control requests that the WAN driver delete
all remote address to interface address mapping entries associatedw with the
specified subnetwork identifier, @member{w_snid}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_STATUS - Get Interface Status
@subsection W_STATUS - Get Interface Status

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_hdioc} structure, see @ref{wan_hdioc Structure}.

@subsubheading Description

The @pioc{W_STATUS} input-output control requests that the WAN driver return the
status of the @member{w_snid} contained in the passed-in structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0) when the
associated @member{w_snid} is disabled, and one (1) when the associated
@member{w_snid} is enabled.

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_ENABLE - Enable Interface Data Transfer
@subsection W_ENABLE - Enable Interface Data Transfer

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_hdioc} structure, see @ref{wan_hdioc Structure}.

@subsubheading Description

The @pioc{W_ENABLE} input-output control requests that the WAN driver enable
data transfer for the @member{w_snid} contained in the passed-in structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_DISABLE - Disable Interface Data Transfer
@subsection W_DISABLE - Disable Interface Data Transfer

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_hdioc} structure, see @ref{wan_hdioc Structure}.

@subsubheading Description

The @pioc{W_DISABLE} input-output control requests that the WAN driver disable
data transfer for the @member{w_snid} contained in the passed-in structure.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_SETSIG - Set Signals and Leads
@subsection W_SETSIG - Set Signals and Leads

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_setsigf} structure, see @ref{wan_setsigf Structure}.

@subsubheading Description

The @pioc{W_SETSIG} input-output control requests that the WAN driver set the
signals and leads as specified.
This input-output control is equivalent to the @manref{CD_MODEM_SIG_REQ(7)}
primitive of the @manref{cdi(7)}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@page
@node W_GETSIG - Get Signals and Leads
@subsection W_GETSIG - Get Signals and Leads

@subsubheading Argument

This input-output control takes an argument that is a pointer to a
@type{wan_setsigf} structure, see @ref{wan_setsigf Structure}.

@subsubheading Description

The @pioc{W_GETSIG} input-output control requests that the WAN driver retrieve
the signals and leads.
 This input-output control is equivalent to the @manref{CD_MODEM_SIG_POLL(7)}
primitive of the @manref{cdi(7)}.

@subsubheading Return Value

When successful, the input-output control operation returns zero (0).

In addition to the errors that may be returned by @manref{ioctl(2)} and
@manref{streamio(7)}, errors that may be returned by this input-output control
are as follows:

@table @perr
@item ENODEV
The specified @member{w_snid} is unknown or invalid.
@item EINVAL
The size of the structure corresponding to the passed-in argument is incorrect
for the input-output control and @member{w_type} specified.
@item ENXIO
The underlying device has encountered a fatal error.
@end table

@subsubheading Compatibility

@node WAN Header Files
@appendix WAN Header Files

@menu
* WAN Protocol Header File::
* WAN Control Header File::
@end menu

Applications using the Wide Area Network (WAN) Interface need to include several
system header files:

@table @file
@item <errno.h>
@item <sys/types.h>
@item <sys/ioctl.h>
@item <sys/stropts.h>
@item <sys/snet/wan_proto.h>
@item <sys/snet/wan_control.h>
@end table

@node WAN Protocol Header File
@section WAN Protocol Header File

@node WAN Control Header File
@section WAN Control Header File

@c @node WAN Library
@c @appendix WAN Library

@node WAN Drivers and Modules
@appendix WAN Drivers and Modules

@menu
* WAN Module::
* CDI Module::
@end menu

@figuresized{wan_fig1,3,SpiderX.25 WAN Drivers and Modules,3.5in}

@node WAN Module
@section WAN Module

The @i{WAN Module} is a pushable @cite{STREAMS} module named @file{s_wan}.  Its
purpose is to take an @cite{OpenSS7} Communications Device Interface (CDI)
Stream and convert it for use as a WAN interface Stream by applications
programs, drivers or modules expecting the @cite{SpiderX.25} interface.
The insertion and use of this module is illustrated in @figref{4}.

@figuresized{wan_fig_s_wan,4,SpiderX.25 WAN Conversion Module: @file{s_wan},1.0in}

The @file{s_wan} pushable @cite{STREAMS} module accepts a
Communications Devce Interface (CDI)
at its lower service boundary and provides a
Wide Area Network (WAN) Interface
at its upper service boundary.

Note that, as @file{s_wan} is a pushable module, it is possible to include an
@manref{autopush(8)} specification a driver providing the Communications Device
Interface (CDI), to provide a specialized device minor or minor device name that
clones Device Layers following the WAN approach.

@smallexample
#include <sys/types.h>
#include <sys/stropts.h>
#include <sys/errno.h>
#include <sys/error.h>
#include <sys/snet/wan_proto.h>
#include <sys/snet/wan_control.h>

int fd;

/* Open the communications style device. */

if ((fd = open("/dev/cd", O_RDWR)) < 0) @{
        perror();
        exit(1);
@}

/* Push the WAN style module. */

if (ioctl(fd, I_PUSH, "s_wan") < 0) @{
        perror();
        exit(1);
@}

/* At this point we can talk to the Stream using
 * the service primitives and input-output controls
 * of the WAN interface. */

struct wan_tnioc tune;

tune.w_type = WAN_TUNE;
tune.w_snid = snid;

if (ioctl(fd, W_GETTUNE, &tune) < 0) @{
        perror();
        exit(1);
@}
@end smallexample

@node CDI Module
@section CDI Module

The @i{CDI Module} is a pushable @cite{STREAMS} module named @file{s_cdi}.  Its
purpose is to take a @cite{SpiderX.25} WAN interface (WAN) Stream and convert
it for use as a Communications Device utilizing the Communications Device
Interface (CDI).
The insertion and use of this module is illustrated in @figref{5}.

@figuresized{wan_fig_s_cdi,5,OpenSS7 CDI Conversion Module: @file{s_cdi},1.0in}

The @file{s_cdi} pushable @cite{STREAMS} module accepts a
Wide Area Network (WAN) Interface
at its lower service boundary and provides a
Communications Devce Interface (CDI)
at its upper service boundary.

Note that, as @file{s_cdi} is a pushable module, it is possible to include an
@manref{autopush(8)} specification a driver providing the Wide Area Network
(WAN) Interface, to provide a specialized device minor or minor device name that
clones Device Layers following the CDI approach.

@node WAN Utilities
@appendix WAN Utilities

@menu
* WAN Tuning Utility::
* WAN Address Mapping Utility::
@end menu

@node WAN Tuning Utility
@section WAN Tuning Utility

The WAN Tuning Utility is also documented as a manual page, @manref{wantune(8)}.

@subheading Name

@b{@code{wantune}} -- manage WAN tunable parameters

@subheading Synopsis

@example
wantune [@var{options}] [-G] -s @var{subnet_id} [-d @var{devname}] [@var{filename}]
wantune [@var{options}]  -P  -s @var{subnet_id} [-d @var{devname}] [@var{filename}]
wantune @{-h|--help@}
wantune @{-V|--version@}
wantune @{-C|--copying@}
@end example

@subheading Description

@command{wantune} is a configuration command intended to be executed from system
configuration scripts, and, in particular, the @manref{xnetd(8)} configuration
daemon.  Its purpose is to alter or interrogate the tunable parameters of a WAN
data link connected to an identified subnetwork.

@subheading Options

The @command{wantune} command accepts the following options:

@subsubheading Command Options

The following command options are mutually exclusive (except for @option{-h},
@option{-V} and @option{-C} which never cause an error when specified with
another command option).  If no command option is given, @option{-G} is assumed.

@table @option
@item -G, --get
Retrieve configuration information for the specified @var{subnet_id}, from the
default or specified @var{device}, and write the output to @file{stdout} (or
@var{filename}, when given).  This option can be used to create a properly
formatted configuration file from an existing system configuration.

@item -P, --put
Load configuration information for the specified @var{subnet_id}, to the default
or specified @var{device}, getting the configuration input from @file{stdin} (or
@var{filename}, when given).  This option can be used to tune current system
configuration.

@item -h, --help
When this option is encountered, usage information is printed to @file{stdout},
option processing stops, and the program exists successfully without taking any
further action.

@item -V, --version
When this option is encountered, version information is printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.

@item -C, --copying
When this option is encountered, copying permissions are printed to
@file{stdout}, option processing stops, and the program exits successfully
without taking any further action.
@end table

@subsubheading Non-Command Options

The following non-command options cab be combined together and with any command
option.  Non-command options that are not necessary for the specified command
option do not generate an error by mere combination.

@table @option
@item -e, --extended
Normally @command{wantune} processes a fixed number of lines from @file{stdin}
(or @var{filename}, when specified),  and outputs a fixed number of lines to
@file{stdout} (or @var{filename}, when specified).  This fixed number of lines
are strictly compatible with other implementations of @command{wantune}.

When the @option{-e} option is specified, additional lines are accepted on input
and are generated on output.  For the format of the fixed lines and the
additional lines, see @ref{WAN Tuning File Format}.

@item -s, --subnet @var{subnet_id}
Specifies the subnetwork identifier, @var{subnet_id}, to which the tuning
operation applies.  @var{subnet_id} is normally an alphabetical character
starting at @samp{A} for the first subnetwork, @samp{B} for the second
subnetwork, and so on.  This option must always be given when the @option{-P} or
@option{-G} options are present or assumed.

@item -d, --device @var{devname}
Specifies the device, @var{devname},  to open when tuning.  When unspecified,
the default is @file{/dev/wans}.  See also @cite{Devices}, below.

@item -n, --dryrun
Execute the command (@option{-P} or @option{-G}) as a dry run.  When this option
is specified with the @option{-P} option, the input is read and checked for
validity, but the configuration is not written to the device when specified with
the @option{-G} option, information is read from the device, but configuration
information is not output.  The exit status and diagnostic output of the command
still reflects the success or failure of the command.

@item -q, --quiet
Suppresses normal output.  This is the same as @samp{--verbose=0}.

@item -D, --debug [@var{level}]
Increase or specify the debug verbosity @var{level}.  The default debug
@var{level} is zero (0).  This option may be repeated.  Level zero (0)
corresponds to no debugging output.

@item -v, --verbose [@var{level}]
Increase or specify the output verbosity @var{level}.  The default output
@var{level} is one (1). This option may be repeated.  Level zero (0) corresponds
to no normal output.
@end table

@subheading Arguments

The following non-option arguments may be provided on the command line:

@vtable @var
@item filename
Specifies the @var{filename} from which to read (@option{-P} option) or write
(@option{-G} option) configuration information.

This argument is optional.  When the @var{filename} is not given and the
@option{-P} option is specified, the values are read from @file{stdin}; for the
@option{-G} option, values are written to @file{stdout}.

If the @var{filename} is an absolute path (i.e. begins with @samp{/}), then
@var{filename} is assumed to be the exact path specified.  Otherwise, the file
required is assumed to be
@file{@value{_configdir}/@value{PACKAGE}/template/}@var{filename}.@footnote{Note
that the precise location of the @file{@value{_configdir}} directory varies
depending upon whether the build was on a @manref{dpkg(1)}-based or
@manref{rpm(1)}-based system.}
@xref{WAN Tuning File Format}, for the format of the file.
@end vtable

@subheading Diagnostics

An exit status of zero (0) indicates that the command was successful; one (1)
indicates that an error occured and a diagnostic message is printed to
@file{stderr}; two (2) indicates that the option or argument syntax was in error
and a diagnostic message is printed to @file{stderr}.

The @option{--quiet} option suppresses the printing of normal output to
@file{stdout} and diagnostic messages to @file{stderr}.

@subheading File Format

For the input file format, see @ref{WAN Tuning File Format}.

@subheading Notices

On input, this implementation will handle fields that are separated by any
whitespace (any number of blanks, horzontal tabs, new lines, carriage returns,
vertical tabs, form feeds).  On output, newlines are generated after fields.

@subheading Devices

@ftable @file
@item /dev/streams/wans
@itemx /dev/wans
The Style 2 CDI device for WAN, @manref{wans(4)}. 
@end ftable

@subheading Files

@ftable @file

@item @value{_configdir}/@value{PACKAGE}/template/@var{filename}
The default directory location for configuration files used by this
command.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}

@end ftable

@subheading See Also

@ref{WAN Tuning File Format}.

@subheading Bugs

@command{wantune} has no known bugs.

@subheading Compatibility

The @command{wantune} command is compatible with @cite{Spider X.25}, and
implementations based on @cite{Spider X.25}, such as @cite{AIXlink/X.25},
@cite{HP-UX}, @cite{IRIS SX.25}, @cite{PT X.25}, @cite{RadiSys WAN}, @cite{SBE
X.25}, @cite{Solstice X.25}, and others, with the following portability
considerations:

@itemize
@item A version of this command is provided by @cite{@value{PACKAGE_TITLE}} for
compatibility with systems that require it.  Neither this command nor the
@manref{xnetd(8)} are recommended for configuration of the
@cite{@value{PACKAGE_TITLE}} subsystems.  Use the SNMP agent instead.

@item Options @option{-e}, @option{-n}, @option{-q}, @option{-v}, @option{-h},
@option{-V}, @option{-C}, and all long options, are specific to this
@cite{@value{PACKAGE_TITLE}} implementation of @command{wantune} and will not be
used by portable command scripts.

@item No other implementation documents printing the output to a file when a
@var{filename} is specified with the @option{-G} command option.  This is an
enhancement of this implementation.

@item No other implementation documents the @option{-e}, @option{-n},
@option{-q}, @option{-v}, @option{-h}, @option{-V}, and @option{-C}, options.
They will not be used by portable command scripts.

@item Options @option{--help} and @option{--version} are provided for
compatibility with GNU coding standards (GNITS); @option{--copying}, OpenSS7
coding standards.

@item @command{wantune} attempts to be source (and script) compatible with
historical implementations based on @cite{Spider X.25}, however, binary
compatibility is not attempted.  Any binary compatibility acheived is likely to
be removed in a subsequent release.
@end itemize

For additional compatibilty considerations, see @ref{WAN Compatibility and
Porting}.

@subheading Conformance

@cite{AIXlink/X.25},
@cite{HP-UX},
@cite{IRIS SX.25},
@cite{PT X.25},
@cite{RadiSys WAN},
@cite{SBE X.25},
@cite{Solstice X.25},
documentation.  @xref{References}.

@subheading History

@command{wantune} first appeared in @cite{Spider X.25}.

@page
@node WAN Address Mapping Utility
@section WAN Address Mapping Utility

@subheading Name

@b{@code{wanmap}} -- manage WAN address mappings

@subheading Synopsis

@example
wanmap [@var{options}] -D -s @var{subnet} -r @var{remote} [-d @var{device}]
wanmap [@var{options}] -G -s @var{subnet} -r @var{remote} [-d @var{device}] [@var{filename}]
wanmap [@var{options}] -M -s @var{subnet} [-d @var{device}] [@var{filename}]
wanmap [@var{options}] -P -s @var{subnet} [-d @var{device}] [@var{filename}]
wanmap [@var{options}] -Z -s @var{subnet} [-d @var{device}] [@var{filename}]
wanmap @{-h|--help@}
wanmap @{-V|--version@}
wanmap @{-C|--copying@}
@end example

@subheading Description

@command{wanmap} provides a user space command line program that permits
alteration and management of the remote to interface address mapping tables that
are associated with a given @var{subnet} identifier within the WAN driver.
Command options are given to permit the deletion of individual entries, the
retrieval of individual entries, the loading of the table from a file for a
given @var{subnet}, and zeroing of the table for a given @var{subnet}.

@subheading Options

The @command{wanmap} command accepts the following options:

@subsubheading Command Options

The following command options are mutually exclusive: only one command option
should be present on the command line at a time.  The exceptions are the
@option{-h}, @option{-V} and @option{-C} options that can be specified alone, or
with any other option.

@table @option
@item -D, --delete
Deelte the address mapping identified by the @var{remote} argument to the
@option{-r} option and the @var{subnet} argument to the @option{-s} option.  The
@option{-s} and @option{-r} options must be specified.

@item -G, --get
Display the address mapping identified by the @var{remote} argument to the
@option{-r} option and the @var{subnet} argument to the @option{-s} option.  The
@option{-s} and @option{-r} options must be specified.

@item -M, --list
Display the address mappings identified by the @var{subnet} argument to the
@option{-s} option.  The @option{-s} option must be specified.

@item -P, --load
Load the address mappings identified by the @var{subnet} argument to the
@option{-s} option.  The @option{-s} option must be specified.

@item -Z, --zero
Delete all address mappings identified by the @var{subnet} argument to the
@option{-s} option.  The @option{-s} option must be specified.

@item -h, --help
When this option is encountered, display usage information to @file{stdout},
stop options processing, and exit without taking further action.

@item -V, --version
When this option is encountered, display version information to @file{stdout},
stop options processing, and exit without taking further action.

@item -C, --copying
When this option is encountered, display copying information to @file{stdout},
stop options processing, and exit without taking further action.

@end table

@subsubheading Non-Command Options

The following common options can be specified together along with a command
option.  It is not an error to specify options that are not necessary for the
command option with which they are specified.

@table @option
@item -r, --remote @var{remote}
Specify the remote address, @var{remote}, for which to delete or retrieve an
address mapping.  The address mapping is deleted when the @option{-D} command
option is given; retrieved for the @option{-G} option.
This option must be specified whenever the @option{-D} or @option{-G} option is
specified.

@item -s, --subnet @var{subnet}
Specifies the subnetwork identifier, @var{subnet}, to which the command applies.
This option must be specified whenever the @option{-D}, @option{-G},
@option{-M}, @option{-P} or @option{-Z} options is specified.

@item -d, --device @var{device}
Specify the device name, @var{device}, upon which to operate.  When this option
is not specified, or @var{device} is not given, the default is @file{/dev/wans},
@file{/dev/streams/clone/wans} or @file{/dev/streams/wans/0}, whichever opens
successfully first.

@item -f, --file @var{filename}
Specify the configuraiton file name that holds mapping information to apply to
the device when the @option{-P} command option is also specified.  When this
option is not specified, or the @var{filename} is not given, the default is
@file{@value{_configdir}/wanmapconf}.@footnote{Note that the precise location of
the @file{@value{_configdir}} directory varies depending upon whether the build
was on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}
For the format of this file, see @ref{WAN Mapping File Format}.

@c @item -n, --dryrun
@item -q, --quiet [@var{level}]
Suppress normal output.  Only the return code oof the command is of interest.
This has the same effect as @samp{--verbose=0}.

@item --debug [@var{level}]
Specify or increase the debugging verbosity @var{level}.  Sets the debugging
verbosity @var{level}, when given, or simply incresases the debug verbosity when
@var{level} is not given.  This option can be repeated.  When @var{level} is
specified, only the last repetition takes effect.

@item -v, --verbose [@var{level}]
Specify or increase the output verbosity @var{level}.  Sets the output
verbosity @var{level}, when given, or simply incresases the output verbosity when
@var{level} is not given.  This option can be repeated.  When @var{level} is
specified, only the last repetition takes effect.

@end table

@subheading Arguments

The @command{wanmap} command takes no non-option arguments.

@subheading Diagnostics

An exit status of zero (0) indicates that the command was successful; one (1)
indicates that an error occured and a diagnostic message is printed to
@file{stderr}; two (2) indicates that the option or argument syntax was in error
and a diagnostic message is printed to @file{stderr}.

The @option{--quiet} option suppresses the printing of normal output to
@file{stdout} and diagnostic messages to @file{stderr}.

@subheading File Format

For the input file format, see @ref{WAN Mapping File Format}.

@subheading Notices

On input, this implementation will handle fields that are separated by any
whitespace (any number of blanks, horzontal tabs, new lines, carriage returns,
vertical tabs, form feeds).  On output, newlines are generated after fields.

@subheading Devices

@ftable @file
@item /dev/streams/wans
@itemx /dev/wans
The Style 2 CDI device for WAN, @manref{wans(4)}. 
@end ftable

@subheading Files

@ftable @file
@item @value{_configdir}/@value{PACKAGE}/wanmapconf
The default directory location for configuration files used by this
command.@footnote{Note that the precise location of the
@file{@value{_configdir}} directory varies depending upon whether the build was
on a @manref{dpkg(1)}-based or @manref{rpm(1)}-based system.}
@end ftable

@subheading See Also

@ref{WAN Mapping File Format}.

@subheading Bugs

@command{wanmap} has no known bugs.

@subheading Compatibility

@command{wanmap} is compatible with @cite{Spider X.25}, and implementations
based on @cite{Spider X.25}, such as,
@cite{AIXlink/X.25}, @cite{HP-UX}, @cite{IRIS SX.25}, @cite{PT X.25},
@cite{RadiSyS WAN}, @cite{SBE X.25}, @cite{Solstice X.25},
and others, with the following portability considerations:
@itemize
@item Options @option{-q}, @option{-v}, @option{-h}, @option{-V}, @option{-C},
and all long options, are specified to this @cite{@value{PACKAGE_TITLE}}
implementation of @command{wanmap} and should not be used by portable command
scripts.

@item No other implementation documents the @option{-q}, @option{-v},
@option{-h}, @option{-V}, and @option{-C}, options.  They should not be used by
portable command scripts.

@item Options @option{--help} and @option{--version} are provided for
compatibility with GNU coding standards (GNITS); @option{--coying}, OpenSS7
coding standards.

@end itemize

For additiona compatibility information, see @ref{WAN Compatibility and
Porting}.

@subheading Conformance

@cite{AIXlink/X.25}, @cite{HP-UX}, @cite{IRIS SX.25}, @cite{PT X.25},
@cite{RadiSyS WAN}, @cite{SBE X.25}, @cite{Solstice X.25}, documentation.

@subheading History

@command{wanmap} first appeared in @cite{Spider X.25}.

@node WAN File Formats
@appendix WAN File Formats

@menu
* WAN Mapping File Format::
* WAN Tuning File Format::
@end menu

@node WAN Mapping File Format
@section WAN Mapping File Format

@c @subheading Name

@c @subheading Description

@c @subheading File Format

@c @subheading Notices

@c @subheading Files

@c @subheading See Also

@c @subheading Compatibility

@c @subheading Conformance

@c @subheading History

The WAN mapping file format first appeared in @cite{Spider X.25}.

@page
@node WAN Tuning File Format
@section WAN Tuning File Format

@c @subheading Name

@c @subheading Description

@subheading File Format

The WAN tuning file format corresponds closely to the @type{wan_tnioc}
structure.  Each line in the file typically corresponds to a member in the
@type{wan_tnioc} structure. @xref{wan_tnioc Structure}.


The file consists of 12 lines of data as follows:

@enumerate
@item @var{WAN_maxframe}
specifies the maximum frame size for the WAN interface in octets.  The value is
a positive integer.
@item @var{WAN_baud}
specifies the baud rate for the WAN interface in bits per second.  When zero
(0), an external clock must be provided.  THe value is a positive integer.
@item @var{WAN_translate}
specifies whether a remote address should be translated into an interface
address using the address mapping function.  See @manref{wanmap(8)} for more
information.  When this value is @samp{Y}, @samp{y} or @samp{1}, the address
mapping will be used to translate the remote address.
@item @var{WAN_phys_int}
specifies the physical interface type.  This can be the integer numeric value
@samp{0}, @samp{1} or @samp{2}, wehre the interpretation of these values is
described in the table below:

@multitable {0}{@code{MAX_X21}}{X.21 physical interface}
@item 0 @tab @pval{WAN_X21} @tab X.21 physical interface.
@item 1 @tab @pval{WAN_V28} @tab V.28 physical interface.
@item 2 @tab @pval{WAN_V35} @tab V.35 physical interface.
@end multitable
@item @var{WAN_connect_proc}
specifies the calling procedures to be used when generating outgoing calls on
the WAN interface.  This can be the values @samp{0}, @samp{1}, or @samp{2},
where the interpretation of these value is described in the table below:

@multitable {0}{@code{WAN_V25bis}}{V.25 bis calling procedures.}
@item 0 @tab @pval{WAN_NONE} @tab No calling procedures.
@item 1 @tab @pval{WAN_X21P} @tab X.21 calling procedures.
@item 2 @tab @pval{WAN_V25bis} @tab V.25 bis calling procedures.
@end multitable
@item @var{WAN_x21_T1}
specifies the time interval for the X.21 T1 Timer: the amount of time that
the DTE will await @i{proceed-to-select} having signalled @i{call-request} to
the DCE.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
30 (3.0 seconds).
@item @var{WAN_x21_T2}
specifies the time interval for the X.21 T2 Timer: the amount of time that
the DTE wil await @i{ready-for-data} having signalled @i{end-of-selection}.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
200 (20.0 seconds).
@item @var{WAN_x21_T3A}
specifies the time interval for the X.21 T3A Timer: the amount of time that
the DTE wil await additional @i{call-progress} or @i{DCE-provided-information} signals.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
60 (6.0 seconds).
@item @var{WAN_x21_T4B}
specifies the time interval for the X.21 T4B Timer: the amount of time that
the DTE wil await @i{ready-for-data} having signalled @i{call-accept}.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
60 (6.0 seconds).
@item @var{WAN_x21_T5}
specifies the time interval for the X.21 T5 Timer: the amount of time that
the DTE wil await @i{DCE-ready} having signalled @i{DTE-clear-request}.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
20 (2.0 seconds).
@item @var{WAN_x21_T6}
specifies the time interval for the X.21 T6 Timer: the amount of time that
the DTE wil await @i{DCE-ready} having signalled @i{DTE-clear-confirm}.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
20 (2.0 seconds).
@item @var{WAN_v25_callreq}
specifies the time interval for the V.25 T1 Timer: the amount of time that
the DTE will await successful call establishment afeter having initiated a call.
The value is a short integer number of deciseconds (0.1 seconds), with a default
value of
6000 (600 seconds, or 5 minutes).

Note that V.25 Timer T1 is only necessary when CFI (Call Failure Indication) is
not provided by the network.
@end enumerate

@c @subheading Notices

@c @subheading Files

@c @subheading See Also

@c @subheading Compatibility

@c @subheading Conformance

@c @subheading History

@node WAN Compatibility and Porting
@appendix WAN Compatibility and Porting

The typical @cite{SpiderX.25} stack implementation is illustrated in @figref{2}.  This
stack profile has the following characteristics:

@itemize
@item The predominant implementation interface at the network layer is the
Network Layer Interface (NLI), see @ref{NLI,,NLI}.
@item The predominant implementation interface at the data link layer is the
Data Link Provider Interface (DLPI), see @ref{DLPI,,DLPI}.
@item The predominant implementation interface at the media access or frame
layer is the MAC interface for LAN and the WAN interface (for WAN), the later
being the subject of this specification.
@end itemize

@figuresized{wan_snet,2,SpiderX.25 Overview,5.5in}

The @cite{SpiderX.25} stack implementation differs from the
@cite{@value{PACKAGE_TITLE}}
one in several fundamental ways:

@itemize
@item @cite{@value{PACKAGE_TITLE}} uses the Network Provider Interface (NPI),
see @ref{NPI,,NPI}, at the network layer.
@item @cite{@value{PACKAGE_TITLE}} uses the Data Link Provider Interface (DLPI),
see @ref{DLPI,,DLPI}, at the data link layer.
@item @cite{@value{PACKAGE_TITLE}} uses the Communications Device Interface (CDI),
see @ref{CDI,,CDI}, at the media access or frame sub-layer.
@end itemize

For the purposes of providing compatibility between the
@cite{@value{PACKAGE_TITLE}} implementation approach and the @cite{SpiderX.25}
implementation approach, @cite{@value{PACKAGE_TITLE}} provides a number of
pushable ``conversion'' modules.  @xref{WAN Drivers and Modules}.

@menu
* Compatibility with AIXlink/X.25::
* Compatibility with HP X.25/9000::
* Compatibility with IRIS SX.25::
* Compatibility with PT X.25::
* Compatibility with RadiSys WAN::
* Compatibility with SBE X.25::
* Compatibility with Solstice X.25::
@end menu

@node Compatibility with AIXlink/X.25
@section Compatibility with AIXlink/X.25

@node Compatibility with HP X.25/9000
@section Compatibility with HP X.25/9000

@node Compatibility with IRIS SX.25
@section Compatibility with IRIS SX.25

@node Compatibility with PT X.25
@section Compatibility with PT X.25

@node Compatibility with RadiSys WAN
@section Compatibility with RadiSys WAN

@node Compatibility with SBE X.25
@section Compatibility with SBE X.25

@node Compatibility with Solstice X.25
@section Compatibility with Solstice X.25


@node Glossary of WAN Terms and Acronyms
@appendix Glossary of WAN Terms and Acronyms

@multitable @columnfractions 0.15 0.85
@item @dfn{ANSI} @tab American National Standards Institute
@item @dfn{CCITT} @tab Old name for ITU-T
@item @dfn{CONS} @tab Connection-Oriented Network Service
@item @dfn{ENSDU} @tab Expedited Network Service Data Unit
@item @dfn{ETSI} @tab European Telecommunications Standards Institute
@item @dfn{IEEE} @tab Institute of Electrical and Electronics Engineers
@item @dfn{ITU} @tab International Telecommunications Union
@item @dfn{ITU-T} @tab ITU Telecom Sector
@item @dfn{LCI} @tab Logical Channel Identifier
@item @dfn{LLC1} @tab Logical Link Control Type 1
@item @dfn{LLC2} @tab Logical Link Control Type 2
@item @dfn{LLC} @tab Logical Link Control
@item @dfn{MAC} @tab Media Access Control
@item @dfn{NLI} @tab Network Layer Interface
@item @dfn{NPDU} @tab Network Protocol Data Unit
@item @dfn{NSAP} @tab Network Service Access Point
@item @dfn{NSDU} @tab Network Service Data Unit
@item @dfn{NSP} @tab Network Service Provider
@item @dfn{NS} @tab Network Service
@item @dfn{NSU} @tab Network Service User
@item @dfn{PDU} @tab Protocol Data Unit
@item @dfn{PVC} @tab Permanent Virtual Circuit
@item @dfn{SAP} @tab Service Access Point
@item @dfn{SDU} @tab Service Data Unit
@item @dfn{VC} @tab Virtual Circuit
@item @dfn{X.121} @tab ITU-T Recommendation X.121
@item @dfn{X.25} @tab ITU-T Recommendation X.25
@item @dfn{X.29} @tab ITU-T Recommendation X.29
@end multitable

@node References
@unnumbered References

@multitable @columnfractions 0.2 0.8

@item [AIXlink/X.25] @anchor{AIXlink/X.25} @tab @cite{AIXlink/X.25 Version 2.1
for AIX: Guide and Reference}, No: SC23-2520-07, Eighth Edition, September 2006,
(Bolder, CO), International Business Machine Corp., IBM.
@uref{http://publibn.bould.ibm.com/,IBM Documentation Library}.

@item [ARTIC WAN] @anchor{ARTIC WAN} @tab @cite{ARTIC STREAMS Support WAN Driver
Interface Reference}, Release 1.7, June 2004, (Hillsboro, OR), RadiSys
Corporation, RadiSys. [Doc No: 007-01232-0003], @uref{http://www.radisys.com/,
RadiSys Support Documentation}.

@item [CDI] @anchor{CDI} @tab @cite{OpenSS7 CAE Specification: Communications
Device Interface (CDI) Specification}, Revision 0.9.2, Draft 2, July 15, 2007,
(Edmonton, Canada), B. Bidulock, OpenSS7 Corporation.  Distributed with package
@file{strxns-0.9.2} and @file{openss7-0.9.2}.
@url{http://www.openss7.org/docs/cdi.pdf, OpenSS7 Documents}.

@item [DLPI] @anchor{DLPI} @tab @cite{Open Group CAE Specification: Data Link
Provider Interface (DLPI) Specification}, Revision 2.0.0, Draft 2, August 20,
1992, (Parsippany, New Jersey), UNIX International, Inc., UNIX International
Press.  @uref{http://www.opengroup.org/onlinepubs/,The Open Group},
@uref{http://www.openss7.org/docs/dlpi.pdf,The OpenSS7 Project}.

@item [IRIS SX.25] @anchor{IRIS SX.25} @tab @cite{IRIS SX.25 NLI Programmer's
Guide}, 1995, (Mountainview, CA), Silicon Graphics, Inc., SGI Technical
Publications. [No: 007-2268-002]. @uref{http://techpubs.sgi.com/,SGI Technical
Publications}.

@item [ISO7776] @anchor{ISO7776} @tab @b{ISO/IEC 7776:1995}, @cite{Information
technology -- Telecommunications information exchange between systems --
High-level data link control procedures -- Description of the X.25
LAPB-compatible DTE data link procedures}, Second Edition, July 1, 1995,
International Organization for Standardization.
@uref{http://www.iso.org/,International Organization for Standardization}.

@item [ISO8802-2] @anchor{ISO8802-2} @tab @b{ANSI/IEEE Standard 802.2-1998
[ISO/IEC 8802-2:1998]}, @cite{IEEE Standard for Information Technology --
Telecommunications and Information Exchange Between Systems -- Local and
Metropolitan Area Networks -- Specific Requirements -- Part 2: Logical Link
Control}, May 7, 1998, (New York), ANSI/IEEE, IEEE Computer Society. [ISBN
1-55937-959-6]. @uref{http://www.ieee.org/,Institute of Electrical and
Electronics Engineers}.

@item [ISO8881] @anchor{ISO8881} @tab @b{ISO/IEC 8881:1989}, @cite{Information
Processing Systems -- Data Communications -- User of the X.25 Packet Level
Protocol in Local Area Networks}, 1989, ISO/IEC, International Organization for
Standardization. @uref{http://www.iso.org/,International Organization for
Standardization}.

@item [NLI] @anchor{NLI} @tab @cite{OpenSS7 CAE Specification: Network Layer
Interface (NLI) Specification}, Revision 0.9.2, Draft 1, June 2008, (Edmonton,
AB), B. Bidulock, OpenSS7 Corporation.  Distributed with package
@file{strx25-0.9.2} and @file{openss7-0.9.2}.
@uref{http://www.openss7.org/docs/nli.pdf,The OpenSS7 Project}.

@item [NPI] @anchor{NPI} @tab @cite{Open Group CAE Specification: Network
Provider Interface (NPI) Specification}, Revision 2.0.0, Draft 2, August 17,
1992, (Parisppany, New Jersey), UNIX International, Inc., UNIX International
Press.  @uref{http://www.openss7.org/docs/npi.pdf,The OpenSS7 Project}.

@item [Solstice X.25] @anchor{Solstice X.25} @tab @cite{Solstice X.25 9.2
Administration Guide}, October 1999, (Palo Alto, CA), Sun Microsystems, Inc.,
Sun. [Part No: 806-1234-10], @uref{http://docs-pdf.sun.com/, Solaris
Documentation}.

@item [TPI] @anchor{TPI} @tab @cite{Open Group CAE Specification: Transport
Provider Interface (TPI) Specification}, Revision 2.0.0, Draft 2, 1999,
(Berkshire, UK), Open Group, Open Group Publication.
@uref{http://www.opengroup.org/onlinepubs/,The Open Group},
@uref{http://www.openss7.org/docs/tpi.pdf,The OpenSS7 Project}.

@item [V.25 bis] @anchor{V.25 bis} @tab @b{ITU-T Recommendation V.25 bis (10/96)},
@cite{Synchronous and asyncrhonous automatic dialing procedrues on switched
networks}, October 1996, (Geneva), ITU, ITU-T Telecommunication Standardization
Sector of ITU, (Previously ``CCITT Recommendation''),
@url{http://www.itu.int/rec/T-REC-V.25bis/en/ T-REC-V.25bis}.

@item [X.21] @anchor{X.21} @tab @b{ITU-T Recommendation X.21 (09/92)},
@cite{Interface between Data Terminal Equipment (DTE) and Data
Circuit-terminating Equiment (DCE) for synchronous operation on Public Data
Networks}, September 1992, (Geneva), ITU, ITU-T Telecommunication
Standardization Sector of ITU.  (Previously ``CCITT Recommendation''),
@url{http://www.itu.int/rec/T-REC-X.21/en/, T-REC-X.21}.

@item [X.21 bis] @anchor{X.21 bis} @tab @b{ITU-T Recommendation X.21 bis (03/88)},
@cite{Use on Public Data Networks of Data Terminal Equipment (DTE) which is
designed for interfacing to synchronous V-series modems}, March 1988, (Geneva),
ITU, ITU-T Telecommunication Standardization Sector of ITU. (Previously ``CCITT
Recommendation''), @url{http://www.itu.int/rec/T-REC-X.21bis/en/,
T-REC-X.21bis}.

@item [X.25] @anchor{X.25} @tab @b{ITU-T Recommendation X.25}.
@url{http://www.itu.int/rec/T-REC-X.25/en/, T-REC-X.25}.

@item [X.29] @anchor{X.29} @tab @b{ITU-T Recommendation X.29}.
@url{http://www.itu.int/rec/T-REC-X.29/en/, T-REC-X.29}.

@item [XX25] @anchor{XX25} @tab @cite{X/Open CAE Specification: X.25 Programming
Interface using XTI (XX25)}, No. c411, November 1995, (Berkshire, UK), X/Open,
Open Group Publication. [ISBN: 1-85912-136-5].
@uref{http://www.opengroup.org/onlinepubs/,The Open Group}.

@end multitable

@ifnotplaintext
@c skip indexes for plain text (regex search works better)
@node Index
@unnumbered Index

@ifnottex
@c concatenate indices for html and info
@printindex cp
@end ifnottex

@iftex
@menu
* Concept Index::
* Protocol State Index::
* Primitive Index::
* Primitive Structure and Type Index::
* Primitive Structure Field Index::
* Primitive Values Index::
* Primitive Error Values Index::
* Input-Output Control Index::
* Manual Page Index::
@end menu

@node Concept Index
@section Concept Index
@printindex cp

@page
@node Protocol State Index
@section Protocol State Index
@printindex st

@page
@node Primitive Index
@section Primitive Index
@printindex pr

@page
@node Primitive Structure and Type Index
@section Primitive Structure and Type Index
@printindex tp

@page
@node Primitive Structure Field Index
@section Primitive Structure Field Index
@printindex vr

@page
@node Primitive Values Index
@section Primitive Values Index
@printindex pv

@page
@node Primitive Error Values Index
@section Primitive Error Values Index
@printindex pe

@page
@node Input-Output Control Index
@section Input-Output Control Index
@printindex ct

@page
@node Manual Page Index
@section Manual Page Index
@printindex mp
@end iftex
@end ifnotplaintext

@page
@shortcontents
@page
@contents
@bye
