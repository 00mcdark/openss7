#!/bin/sh
# =============================================================================
# 
# @(#) $RCSfile: sctp_range_script,v $ $Name:  $($Revision: 1.1.2.4 $) $Date: 2006/05/23 22:43:32 $
#
# -----------------------------------------------------------------------------
#
# Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com>
# Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
#
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 675 Mass
# Ave, Cambridge, MA 02139, USA.
#
# -----------------------------------------------------------------------------
#
# U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
# behalf of the U.S. Government ("Government"), the following provisions apply
# to you.  If the Software is supplied by the Department of Defense ("DoD"), it
# is classified as "Commercial Computer Software" under paragraph 252.227-7014
# of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
# successor regulations) and the Government is acquiring only the license rights
# granted herein (the license rights customarily provided to non-Government
# users).  If the Software is supplied to any unit or agency of the Government
# other than DoD, it is classified as "Restricted Computer Software" and the
# Government's rights in the Software are defined in paragraph 52.227-19 of the
# Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
# the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
# (or any successor regulations).
#
# -----------------------------------------------------------------------------
#
# Commercial licensing and support of this software is available from OpenSS7
# Corporation at a fee.  See http://www.openss7.com/
#
# -----------------------------------------------------------------------------
#
# Last Modified $Date: 2006/05/23 22:43:32 $ by $Author: brian $
#
# =============================================================================

#
# stream_range
#
# generate a whole lot of numbers from netperf to see the effects
# of send size on thruput
#

#
# usage : sctp_stream_range hostname [CPU]
#

if [ $# -gt 2 ]; then
	echo "try again, correctly -> sctp_stream_range hostname [CPU]"
	exit 1
fi

if [ $# -eq 0 ]; then
  echo "try again, correctly -> sctp_stream_range hostname [CPU]"
  exit 1
fi

# if there are two parms, parm one it the hostname and parm two will
# be a CPU indicator. actually, anything as a second parm will cause
# the CPU to be measured, but we will "advertise" it should be "CPU"

if [ $# -eq 2 ]; then
  REM_HOST=$1
  LOC_CPU="-c"
  REM_CPU="-C"
fi

if [ $# -eq 1 ]; then
  REM_HOST=$1
fi

# at what port will netserver be waiting? If you decide to run
# netserver at a differnet port than the default of 12865, then set
# the value of PORT apropriately
#PORT="-p some_other_portnum"
PORT=""

# where is netperf, and are there any "constant" options such as 
# the netserver port number
#NETHOME=/usr/etc/net_perf
NETHOME=.

case "$1" in (--help|--version|--copying) $NETHOME/netperf $1 ; exit $?  ;; esac

# How accurate we want the estimate of performance: 
#      maximum and minimum test iterations (-i)
#      confidence level (99 or 95) and interval (percent)
STATS_STUFF="-i 10,2 -I 99,3"

#
# some stuff for the arithmetic 
#
# we start at start, and then multiply by MULT and add ADD. by changing
# these numbers, we can double each time, or increase by a fixed
# amount, or go up by 4x, whatever we like...
#
START=1

END=65536

MULT=4

ADD=0

# If we are measuring CPU utilization, then we can save beaucoup
# time by saving the results of the CPU calibration and passing
# them in during the real tests. So, we execute the new CPU "tests"
# of netperf and put the values into shell vars.
case $LOC_CPU in
\-c) LOC_RATE=`$NETHOME/netperf $PORT -t LOC_CPU`;;
*) LOC_RATE=""
esac

case $REM_CPU in
\-C) REM_RATE=`$NETHOME/netperf $PORT -t REM_CPU -H $REM_HOST`;;
*) REM_RATE=""
esac

TIME="60"

#
# the maximum socket buffer size is system dependent. for the
# "cannonical" tests we use 32KB, but this can be altered
#
SOCKET_SIZE="-s 32768 -S 32768"

MESSAGE=$START
while [ $MESSAGE -le $END ]; do
  echo
  echo ------------------------------------
  echo Testing with the following command line:
  echo  $NETHOME/netperf $PORT -l $TIME -H $REM_HOST -t SCTP_STREAM\
        $LOC_CPU $LOC_RATE $REM_CPU $REM_RATE $STATS_STUFF --\
        -m $MESSAGE $SOCKET_SIZE 
  echo
  $NETHOME/netperf $PORT -l $TIME -H $REM_HOST -t SCTP_STREAM\
  $LOC_CPU $LOC_RATE $REM_CPU $REM_RATE $STATS_STUFF --\
  -m $MESSAGE $SOCKET_SIZE

  MESSAGE=`expr $MESSAGE + $ADD`
  MESSAGE=`expr $MESSAGE \* $MULT`

done
echo
echo If you wish to submit these results to the netperf database at
echo http://www.cup.hp.com/netperf/NetperfPage.html, please submit each
echo datapoint individually. Individual datapoints are separated by
echo lines of dashes. 

