'\" rtp
.\" -*- nroff -*- vim: ft=nroff nocin nosi
.\"
.\" @(#) $Id: mi_close_comm.9.man,v 0.9.2.12 2007/08/03 13:35:56 brian Exp $
.\"
.\" =========================================================================
.\"
.\" Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
.\"
.\" All Rights Reserved.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.  The author(s) will take no responsibility in it.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" -------------------------------------------------------------------------
.\"
.\" U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software
.\" on behalf of the U.S. Government ("Government"), the following
.\" provisions apply to you.  If the Software is supplied by the Department
.\" of Defense ("DoD"), it is classified as "Commercial Computer Software"
.\" under paragraph 252.227-7014 of the DoD Supplement to the Federal
.\" Acquisition Regulations ("DFARS") (or any successor regulations) and the
.\" Government is acquiring only the license rights granted herein (the
.\" license rights customarily provided to non-Government users).  If the
.\" Software is supplied to any unit or agency of the Government other than
.\" DoD, it is classified as "Restricted Computer Software" and the
.\" Government's rights in the Software are defined in paragraph 52.227-19
.\" of the Federal Acquisition Regulations ("FAR") (or any successor
.\" regulations) or, in the cases of NASA, in paragraph 18.52.227-86 of the
.\" NASA Supplement to the FAR (or any successor regulations).
.\"
.\" =========================================================================
.\" 
.\" Commercial licensing and support of this software is available from
.\" OpenSS7 Corporation at a fee.  See http://www.openss7.com/
.\" 
.\" =========================================================================
.\"
.\" Last Modified $Date: 2007/08/03 13:35:56 $ by $Author: brian $
.\"
.\" -------------------------------------------------------------------------
.\"
.\" $Log: mi_close_comm.9.man,v $
.\" Revision 0.9.2.12  2007/08/03 13:35:56  brian
.\" - manual updates, put ss7 modules in public release
.\"
.\" Revision 0.9.2.11  2006/10/06 12:13:02  brian
.\" - updated manual pages to pass make check and for release
.\" - updated release files for release
.\" - added missing MacOT OSF/1 and MPS compatibility functions
.\"
.\" Revision 0.9.2.10  2006/10/05 12:15:42  brian
.\" - updates for release
.\"
.\" Revision 0.9.2.9  2006/04/05 09:43:33  brian
.\" - moved .so line and updated headers
.\"
.\" =========================================================================
.R1
bracket-label "\fR[\fB" "\fR]" "\fR, \fB"
no-default-database
database strcompat.refs
accumulate
move-punctuation
abbreviate A
join-authors ", " ", " " and "
et-al " et al" 2 3
abbreviate-label-ranges ".."
sort-adjacent-labels
.R2
.so strcompat.macros
.\"
.\"
.TH MI_CLOSE_COMM 9 "@PACKAGE_DATE@" "@PACKAGE@-@VERSION@" "@PACKAGE_TITLE@ DDI/DKI"
.\"
.\"
.SH NAME
.B mi_close_comm, mi_close_comm_cache
\- \fISTREAMS\fP common minor device close utility
.\"
.\"
.SH SYNOPSIS
.PP
.B #define _MPS_SOURCE
.br
.B #include <sys/stream.h>
.br
.B #include <sys/ddi.h>
.br
.B #include <sys/mpsddi.h>
.HP
int \fBmi_close_comm\fR(caddr_t *\fIstatep\fR, queue_t *\fIq\fR);
.HP
int \fBmi_close_comm_cache\fR(caddr_t *\fIstatep\fR, kmem_cache_t \fIcachep\fR, queue_t *\fIq\fR);
.\"
.\"
.SH ARGUMENTS
.PP
.TP
.I statep
Specifies the address of a static pointer which will be used internally by
.BR mi_open_comm (0)
to store the address of the module's list of open streams.
.TP
.I q
A pointer to the driver or module's read queue,
obtained directly from
.IR qi_qclose (9).
.TP
.I cachep
A pointer to the kernel memory cache that was used to allocated the private
structure.
.\"
.\"
.SH INTERFACE
.PP
.IR MPS \(rg-specific
DDI.
.\"
.\"
.SH DESCRIPTION
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
performs housekeeping during
.I STREAMS
driver or module close operations.
They are intended to be called by the driver or module
.IR qi_qclose (9)
procedure.
.BR mi_close_comm ()
releases memory allocated by a previous
.BR mi_open_comm (9)
call, and frees the minor number for reuse.
.BR mi_close_comm_cache ()
releases memory allocated by a previous
.BR mi_open_comm_cache (9)
call, and frees the minor number for reuse.
.PP
If an
.BR mi_bufcall (9)
operation is outstanding, module resources are not freed until the
.BR mi_bufcall (9)
operation is complete.
.PP
Each call to
.BR mi_close_comm ()
must have a previous corresponding call to
.BR mi_open_comm (9).
Each call to
.BR mi_close_comm_cache ()
must have a previous corresponding call to
.BR mi_open_comm_cache (9).
.\"
.\"
.SH RETURN
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
always return zero (0).
If the last module was closed and freed using
.BR mi_close_comm ()
or
.BR mi_close_comm_comm ()
then the pointer pointed to by
.I statep
will contain
.BR NULL .
.\"
.\"
.SH ERRORS
.PP
When
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
fail, they fail silently.
.\"
.\"
.SH CONTEXT
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
can be called from User Context.
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
are normally called from within a
.I STREAMS
module's
.IR qi_qclose (9)
procedure (User Context).
.\"
.\"
.SH MP-STREAMS
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
are MP-safe.
.\"
.\"
.SH NOTICES
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
are
.IR MPS \(rg-specific
functions:
.BR _MPS_SOURCE ,
.B _AIX_SOURCE
or
.B _MAC_SOURCE
must be defined before including DDI/DKI include files to expose these symbols.
.BR "@PACKAGE_TITLE@"
must also have been compiled with
.BR CONFIG_STREAMS_COMPAT_MPS ,
.BR CONFIG_STREAMS_COMPAT_MPS_MODULE ,
.BR CONFIG_STREAMS_COMPAT_AIX ,
.BR CONFIG_STREAMS_COMPAT_AIX_MODULE ,
.BR CONFIG_STREAMS_COMPAT_MAC
or
.B CONFIG_STREAMS_COMPAT_MAC_MODULE
defined.
.\"
.\"
.SH IMPLEMENTATION
.PP
.BR mi_close_comm ()
simply calls
.BR mi_detach (9)
followed by
.BR mi_close_detached (9).
.BR mi_close_comm_cache ()
simply calls
.BR mi_detach (9)
followed by
.BR mi_close_detached_cache (9).
.\"
.\"
.SH EXAMPLES
.PP
Following is an example of a module
.IR qi_qclose (9)
procedure using
.BR mi_close_comm ():
(See also the example for
.BR mi_open_comm (9).)
.RS
.nf
\fC\s-1
static caddr_t xxx_state = NULL;

int
xxx_qclose(queue_t *q, int oflag, cred_t *crp)
{
        return (mi_close_comm(&xxx_state, q));
}
\s+1\fP
.fi
.RE
.\"
.\"
.SH "SEE ALSO"
.PP
.IR qi_qclose (9),
.BR mi_open_comm (9),
.BR mi_next_ptr (9),
.BR ddi_soft_state_free (9),
.BR STREAMS (9).
.\"
.\"
.SH BUGS
.PP
.BR mi_close_comm ()
and
.BR mi_close_comm_cache ()
have no known bugs.
.\"
.\"
.SH COMPATIBILITY
.PP
.BR mi_close_comm ()
is
compatible with
.IR MPS \(rg,
.IR AIX \(rg,
.IR MacOT \(rg,
and
.IR Solaris \(rg,
with the following portability considerations:
.IP \(em \w'\(em\(em'u
.BR mi_close_comm ()
is an
.IR MPS \(rg-specific
function and should not be used by portable
.I STREAMS
drivers and modules.
.IP \(em
Use of
.BR mi_close_comm ()
requires different include file sequences on
.B @PACKAGE_TITLE@
.[
@PACKAGE@
.]
than on
.IR AIX \(rg
or
.IR MacOT \(rg.
.IR AIX \(rg
includes
.B <pse/mi.h>
and
.B <sys/stream.h>
only.
.IP \(em
.BR mi_close_comm ()
is provided for source level compatibility with
.IR AIX \(rg
and
.IR MacOT \(rg
for the purpose of porting
.IR AIX \(rg
and
.IR MacOT \(rg
drivers to
.BR Linux .
Because internal structures and definitions for
.BR "@PACKAGE_TITLE@"
.[
@PACKAGE@
.]
differ from that of
.IR MPS \(rg,
binaries are incompatible.
.IP \(em
.BR mi_close_comm ()
only provides functionality comparable to
.IR MPS \(rg
for use by
.I STREAMS
drivers and modules.
Any and all functionality provided by
.BR mi_close_comm ()
in support of
.RI non- STREAMS
devices are not supported.
.PP
See
.BR mpscompat (9),
.BR aixcompat (9),
.BR maccompat (9),
and
.BR STREAMS (9)
for additional compatibility considerations.
.PP
.BR mi_close_comm_cache ()
is an
.I OpenSS7 Project
specific implementation of
.BR mi_close_comm ()
that is inherently non-portable.  While it is fairly straightforward to
implement these in any Mentat implementation present on modern day UNIX
system, it requires exposing internals to the MPS implementation that might
not be desirable.
.\"
.\"
.SH CONFORMANCE
.PP
.IR MPS \(rg
DDI documentation,
.IR MacOT \(rg
DDI documentation,
.[
macotr
.]
.[
macspg
.]
.IR AIX \(rg
documentation,
.[
aixcpc
.]
.IR "The OpenSS7 Project" .
.\"
.\"
.SH HISTORY
.PP
.BR mi_close_comm ()
first appeared in
.IR MPS \(rg.
.BR mi_close_comm ()
is a
Mentat, Inc. function that goes all the way back to the
.RI pre- OSF/1
.I Mentat
implementations.
.BR mi_close_comm ()
appears in
.IR MacOT \(rg
.[
macspg
.]
and
.IR AIX \(rg.
.[
aixcpc
.]
An undocumented version of
.BR mi_close_comm ()
appears in
.IR Solaris \(rg.
.PP
.BR mi_close_comm_cache ()
is an
.I OpenSS7 Project
function based loosely on the
.BR mi_close_comm ()
Mentat function.
.\"
.\"
.[
$LIST$
.]
.TI
