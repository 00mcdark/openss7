## =============================================================================
## 
# @(#) $RCSfile: Config.in,v $ $Name:  $($Revision: 0.9.2.2 $) $Date: 2006/09/29 11:51:03 $
##
## -----------------------------------------------------------------------------
##
## Copyright (c) 2001-2006  OpenSS7 Corporation <http://www.openss7.com/>
## Copyright (c) 1997-2000  Brian F. G. Bidulock <bidulock@openss7.org>
##
## All Rights Reserved.
##
## This program is free software; you can redistribute it and/or modify it under
## the terms of the GNU General Public License as published by the Free Software
## Foundation; version 2 of the License.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 675 Mass
## Ave, Cambridge, MA 02139, USA.
##
## -----------------------------------------------------------------------------
##
## U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
## behalf of the U.S. Government ("Government"), the following provisions apply
## to you.  If the Software is supplied by the Department of Defense ("DoD"), it
## is classified as "Commercial Computer Software" under paragraph 252.227-7014
## of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
## successor regulations) and the Government is acquiring only the license rights
## granted herein (the license rights customarily provided to non-Government
## users).  If the Software is supplied to any unit or agency of the Government
## other than DoD, it is classified as "Restricted Computer Software" and the
## Government's rights in the Software are defined in paragraph 52.227-19 of the
## Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
## the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
## (or any successor regulations).
##
## -----------------------------------------------------------------------------
##
## Commercial licensing and support of this software is available from OpenSS7
## Corporation at a fee.  See http://www.openss7.com/
##
## -----------------------------------------------------------------------------
##
## Last Modified $Date: 2006/09/29 11:51:03 $ by $Author: brian $
##
## -----------------------------------------------------------------------------
##
## $Log: Config.in,v $
## Revision 0.9.2.2  2006/09/29 11:51:03  brian
## - libtool library tweaks in Makefile.am
## - better rpm spec handling in *.spec.in
## - added AC_LIBTOOL_DLOPEN to configure.ac
## - updated some copyright headers
## - rationalized item in two packages
## - added manual pages, drivers and modules to new strtty package
##
## Revision 0.9.2.1  2006/08/23 09:53:17  brian
## - started STREAMS Terminals package
##
## Revision 0.9.2.1  2006/03/08 11:17:59  brian
## - completing package
##
## =============================================================================

##
## Configuration file for STREAMS device drivers
##
## The built-in STREAMS drivers are configured in this file.  External
## binary packages are configured in /usr/src/linux/drivers/streams/pkg
## (see the Makefile in that directory and the one above it).
##
## Driver specifications
##
## multiple major numbers for a driver may be allocated two ways:
## . by explicitly requesting n-majors (see below)
## . by requesting an n-minors value large enough to require more than
##   one major number.
##
## strconf now supports allocating multiple major numbers, but
## not all drivers do.  It is only known to work for 'fifo' at this time.
##
##	name		prefix	major	n-minors  n-majors
##driver	socksys		socksys	*
##driver	unix		unix	*
##driver	xnet		xnet	*
##
## this must be 30 for iBCS compatibility
##
##driver	inet		inet	30
##driver	socksys		socksys	*
##driver	unix		unix	*
##driver	xnet		xnet	*
driver		pty		pty	127	256	2

##
## this must be 30 for iBCS compatibility
##
##driver	inet		inet	30

##
## Object name specifications
##
##	type	name		object name
##objname	driver	socksys		socksys
##objname	driver	unix		unix
##objname	driver	xnet		xnet
##objname	driver	inet		inet
##objname	driver	socksys		socksys
##objname	driver	unix		unix
##objname	driver	xnet		xnet
##objname	driver	inet		inet
objname	driver	pty	    pty

##
## Autopush specifications
##
## These are just stupid examples
##
##         driver          minor lastminor  modules
##autopush clone-drvr          1         0  relay
##autopush clone-drvr          2         5  relay2
##autopush link-drvr          -1         0  relay relay2

##
## Loadable specifications
##
##loadable sfx
##loadable spx
##loadable socksys
##loadable unix
##loadable xnet
##loadable inet
loadable    pty

##
## Initialization specifications
##
##initialize clone-drvr
##initialize fifo
##initialize link-drvr
##initialize loop-around

##
## Termination specifications
##
##terminate fifo
##terminate loop-around

##
## Node specifications
##
## Loop driver now makes its own nodes in its init routine as an 
## example of how to use lis_mknod.
##
##	name	          type	perm	major		minor
##node	/dev/socksys	     c	*	socksys		0
##node	/dev/unix	     c	*	unix		0
##node	/dev/xnet	     c	*	xnet		0
##node	/dev/socksys	     c	*	socksys		0
##node	/dev/unix	     c	*	unix		0
##node	/dev/xnet	     c	*	xnet		0
##
## These are iBCS devices that should already be installed on a
## system that supports the iBCS.  The /dev entries are supposed
## to by symbolic links to the /dev/inet entries.  arp and rip
## are supposed to be symbolic links to udp
##
##node	/dev/ip		     c	0666	inet		32
##node	/dev/icmp	     c	0666	inet		33
##node	/dev/ggp	     c	0666	inet		34
##node	/dev/ipip	     c	0666	inet		35
##node	/dev/tcp	     c	0666	inet		36
##node	/dev/egp	     c	0666	inet		37
##node	/dev/pup	     c	0666	inet		38
##node	/dev/udp	     c	0666	inet		39
##node	/dev/idp	     c	0666	inet		40
##node	/dev/rawip	     c	0666	inet		41
##node	/dev/arp	     c	0666	inet		39
##node	/dev/rip	     c	0666	inet		39
##node	/dev/inet/ip	     c	0666	inet		32
##node	/dev/inet/icmp	     c	0666	inet		33
##node	/dev/inet/ggp	     c	0666	inet		34
##node	/dev/inet/ipip	     c	0666	inet		35
##node	/dev/inet/tcp	     c	0666	inet		36
##node	/dev/inet/egp	     c	0666	inet		37
##node	/dev/inet/pup	     c	0666	inet		38
##node	/dev/inet/udp	     c	0666	inet		39
##node	/dev/inet/idp	     c	0666	inet		40
##node	/dev/inet/rawip	     c	0666	inet		41
##node	/dev/inet/arp	     c	0666	inet		39
##node	/dev/inet/rip	     c	0666	inet		39
##node	/dev/ticots_ord	     c	0666	inet		42
##node	/dev/ticots	     c	0666	inet		43
##node	/dev/ticlts	     c	0666	inet		44
node	/dev/ptmx	     c	0666	230		128
node	/dev/pty/0	     c	0666	pty		0
node	/dev/pty/1	     c	0666	pty		1
node	/dev/pty/2	     c	0666	pty		2
node	/dev/pty/3	     c	0666	pty		3
node	/dev/pty/4	     c	0666	pty		4
node	/dev/pty/5	     c	0666	pty		5
node	/dev/pty/6	     c	0666	pty		6
node	/dev/pty/7	     c	0666	pty		7
node	/dev/pty/8	     c	0666	pty		8
node	/dev/pty/9	     c	0666	pty		9
node	/dev/pty/10	     c	0666	pty		10
node	/dev/pty/11	     c	0666	pty		11
node	/dev/pty/12	     c	0666	pty		12
node	/dev/pty/13	     c	0666	pty		13
node	/dev/pty/14	     c	0666	pty		14
node	/dev/pty/15	     c	0666	pty		15

# get strload to fill these out

##
## Device specifications
##
##	drvr-name	unit  port nports share	IRQ     mem M-size DMA1 DMA2
##device	cdip		   0 0x310     16     S  10 0xD0000 0x4000
##device	cdip		   1     0      0     S  10       0      0

